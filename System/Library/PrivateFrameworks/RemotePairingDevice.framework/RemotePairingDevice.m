void destroy for PairingConsentCollectionOutcome(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

uint64_t sub_1D758A00C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

ValueMetadata *type metadata accessor for RemotePairingError()
{
  return &type metadata for RemotePairingError;
}

uint64_t sub_1D758A03C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1D758A044@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ControlChannelConnectionError.Code.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t ControlChannelConnectionError.Code.rawValue.getter()
{
  return *v0;
}

void type metadata accessor for ControlChannelConnectionError.Code()
{
}

uint64_t sub_1D758A084(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

ValueMetadata *type metadata accessor for ControlChannelTransportEvent()
{
  return &type metadata for ControlChannelTransportEvent;
}

uint64_t type metadata accessor for ControlChannelConnection()
{
  uint64_t result = qword_1EBDEAD10;
  if (!qword_1EBDEAD10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D758A0F8()
{
  return sub_1D7661610();
}

unint64_t sub_1D758A128()
{
  unint64_t result = qword_1EBDEBBB0;
  if (!qword_1EBDEBBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBBB0);
  }
  return result;
}

void destroy for ControlChannelTransportEvent(uint64_t a1)
{
}

void sub_1D758A1C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int16 a19)
{
  int v19 = (a19 >> 11) & 3;
  if (v19 == 1)
  {
  }
  else if (!v19)
  {
    sub_1D75D45D4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24,
      (uint64_t (*)(void))sub_1D75D1FE8,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
}

RemotePairingDevice::RemotePairingError __swiftcall RemotePairingError.init(code:userInfo:)(Swift::Int32 code, Swift::OpaquePointer userInfo)
{
  v2->_rawValue = (void *)code;
  v2[1]._rawValue = userInfo._rawValue;
  result.errorUserInfo = userInfo;
  LODWORD(result.errorCode) = code;
  return result;
}

uint64_t destroy for FetchNetworkPairingSessionIDResponse()
{
  return swift_bridgeObjectRelease();
}

void sub_1D758A2D8(void *a1@<X8>)
{
  *a1 = 0;
}

id static ControlChannelConnectionWireProtocolVersion.current.getter()
{
  return sub_1D758A8EC(&qword_1EBDEC468, (void **)&qword_1EBDEC460);
}

id static ControlChannelConnectionWireProtocolVersion.minimumSupported.getter()
{
  return sub_1D758A8EC(&qword_1EBDEBCF0, (void **)&qword_1EBDEBCE0);
}

void sub_1D758A328(uint64_t a1, unint64_t a2, char a3)
{
  sub_1D7592918(a1, a2, a3 & 1, *(void (**)(unsigned char *))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

void type metadata accessor for ControlChannelConnectionError()
{
}

void ControlChannelConnectionError.code.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1D758A358()
{
  return 0xD000000000000032;
}

unsigned char *sub_1D758A378(unsigned char *result, char a2)
{
  *RemotePairingDevice::RemotePairingError result = a2;
  return result;
}

BOOL static HashableByObjectIdentity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

unsigned int *sub_1D758A38C(unsigned int *result, char a2)
{
  *RemotePairingDevice::RemotePairingError result = *result & 0xFFFF0101 | ((a2 & 1) << 15);
  return result;
}

void type metadata accessor for ControlChannelConnection.Options()
{
}

void type metadata accessor for ControlChannelConnection.Options.Device()
{
}

RemotePairingDevice::ControlChannelConnection::Options::Device __swiftcall ControlChannelConnection.Options.Device.init(allowsPairSetup:allowsPinlessPairing:allowsIncomingTunnelConnections:allowsPromptlessAutomationPairingUpgrade:allowsSharingSensitiveInfo:)(Swift::Bool allowsPairSetup, Swift::Bool allowsPinlessPairing, Swift::Bool allowsIncomingTunnelConnections, Swift::Bool allowsPromptlessAutomationPairingUpgrade, Swift::Bool allowsSharingSensitiveInfo)
{
  Swift::Bool *v5 = allowsPairSetup;
  v5[1] = allowsPinlessPairing;
  v5[2] = allowsIncomingTunnelConnections;
  v5[3] = allowsPromptlessAutomationPairingUpgrade;
  v5[4] = allowsSharingSensitiveInfo;
  result.allowsPairSetup = allowsPairSetup;
  return result;
}

uint64_t dispatch thunk of ControlChannelConnection.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1096))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.InvalidationReason(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

void type metadata accessor for ControlChannelConnection.InvalidationReason()
{
}

uint64_t sub_1D758A514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

ValueMetadata *type metadata accessor for BonjourAdvertFlags()
{
  return &type metadata for BonjourAdvertFlags;
}

uint64_t BonjourAdvertFlags.rawValue.getter()
{
  return *(void *)v0;
}

void type metadata accessor for BonjourService()
{
}

unint64_t BonjourService.rawValue.getter()
{
  unint64_t result = 0xD000000000000022;
  switch(*v0)
  {
    case 1:
      unint64_t result = OUTLINED_FUNCTION_0_6(19);
      break;
    case 2:
    case 3:
      unint64_t result = 0x6E6E75742D70725FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t dispatch thunk of AtomicCounter.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

unint64_t static RemotePairingError.errorDomain.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1D758A638()
{
  return 0xD00000000000001FLL;
}

uint64_t static NetworkPairingKeys.authTag.getter()
{
  return 0x67615468747561;
}

uint64_t static NetworkPairingKeys.flags.getter()
{
  return 0x7367616C66;
}

uint64_t static NetworkPairingKeys.minimumSupportedWireProtocolVersion.getter()
{
  return 0x7265566E696DLL;
}

uint64_t static NetworkPairingKeys.wireProtocolVersion.getter()
{
  return 7497078;
}

uint64_t static NetworkPairingKeys.identifier.getter()
{
  return 0x696669746E656469;
}

double OUTLINED_FUNCTION_87()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return v0;
}

void sub_1D758A700(uint64_t a1, unsigned int a2)
{
  if (a2 < 2)
  {
    __int16 v3 = *(_WORD *)(a1 + 144) & 0xE7FF | ((a2 & 3) << 11);
    *(void *)a1 &= 0xFFFFFFFFFFFFFF9uLL;
    *(_WORD *)(a1 + 144) = v3;
  }
  else
  {
    *(void *)a1 = (a2 - 2) & 1 | (8 * ((a2 - 2) >> 1));
    bzero((void *)(a1 + 8), 0x88uLL);
    *(_WORD *)(a1 + 144) = 4096;
  }
}

uint64_t type metadata accessor for ControlChannelConnectionWireProtocolVersion()
{
  return self;
}

BOOL sub_1D758A798(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getWitnessTable();
  return static HashableByObjectIdentity.== infix(_:_:)(v2, v3);
}

id sub_1D758A804()
{
  id result = objc_msgSend(*(id *)(v0 + 24), sel_lock);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == -1)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v2 + 1;
    objc_msgSend(*(id *)(v0 + 24), sel_unlock);
    return (id)v2;
  }
  return result;
}

uint64_t static ControlChannelConnection.defaultMaxReconnectionAttempts.getter()
{
  return qword_1EA82BAF8;
}

unint64_t static ControlChannelConnectionError.errorDomain.getter()
{
  return 0xD000000000000032;
}

id sub_1D758A8EC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;
  return v3;
}

id sub_1D758A954@<X0>(void **a1@<X8>)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason);
  OUTLINED_FUNCTION_4_3();
  unsigned int v4 = *v3;
  *a1 = *v3;
  return sub_1D758A9A0(v4);
}

id sub_1D758A9A0(id result)
{
  if (result != (id)5) {
    return sub_1D758C064(result);
  }
  return result;
}

void ControlChannelConnection.init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)()
{
  OUTLINED_FUNCTION_158();
  uint64_t v2 = v1;
  unsigned int v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  v10 = v9;
  int v12 = *v11;
  char v13 = *((unsigned char *)v11 + 4);
  *(void *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(unsigned char *)(v0 + 112) = 0;
  *(_OWORD *)(v0 + 248) = 0u;
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0;
  *(_OWORD *)(v0 + 264) = 0u;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_OWORD *)(v0 + 296) = 0u;
  *(unsigned char *)(v0 + 312) = 1;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(unsigned char *)(v0 + 520) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  sub_1D7660990();
  uint64_t v14 = v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions;
  *(unsigned char *)(v14 + 4) = 0;
  *(_DWORD *)uint64_t v14 = 2;
  uint64_t v15 = OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADE0);
  *(void *)(v0 + v15) = sub_1D7660A50();
  *(_OWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData) = xmmword_1D76655F0;
  *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__transaction) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason) = 5;
  sub_1D758AB78(v10, v0 + 192);
  *(void *)(v0 + 232) = v8;
  *(unsigned char *)(v0 + 244) = v13;
  *(_DWORD *)(v0 + 240) = v12;
  *(void *)(v0 + 560) = v6;
  OUTLINED_FUNCTION_21_1();
  v16 = *(void **)(v0 + 528);
  *(void *)(v0 + 528) = v2;

  sub_1D758AB78(v4, v0 + 400);
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(void *)(v0 + 160) = 0;
  *(unsigned char *)(v0 + 168) = 4;
  OUTLINED_FUNCTION_151();
}

uint64_t sub_1D758AB78(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void OUTLINED_FUNCTION_65()
{
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = v2 + 16 * v4;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 40) = v3;
}

uint64_t OUTLINED_FUNCTION_65_0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t remotePairingIsEnabled()
{
  if (os_variant_has_internal_content()) {
    os_variant_allows_internal_security_policies();
  }
  return 1;
}

uint64_t sub_1D758AC18()
{
  return sub_1D7661760();
}

uint64_t HashableByObjectIdentity.hash(into:)()
{
  return sub_1D7661740();
}

uint64_t initializeWithCopy for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  *(void *)(a1 + 56) = v6;
  return a1;
}

uint64_t JSONDataBasedControlChannelTransport.startReceivingMessages(usingEventHandler:)()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v0;
  v5[4] = v4;
  v5[5] = v3;
  v5[6] = v2;
  swift_retain();
  swift_retain();
  sub_1D758ADEC();
  swift_release();
  return swift_release();
}

uint64_t sub_1D758ADEC()
{
  OUTLINED_FUNCTION_8_0();
  if (qword_1EBDEBD10 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBDF39C0;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = v0;
  v6[4] = v4;
  v6[5] = v3;
  v6[6] = v1;
  id v7 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, unint64_t, char), void *, uint64_t, uint64_t))(v0 + 16);
  swift_retain();
  swift_unknownObjectRetain();
  v7(v5, v5, sub_1D758A328, v6, v2, v0);
  return swift_release();
}

uint64_t sub_1D758AF48()
{
  return sub_1D7661060();
}

unint64_t sub_1D758AF94()
{
  unint64_t result = qword_1EBDEBDA8;
  if (!qword_1EBDEBDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBDA8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PairingConsentCollectionOutcome(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for ControlChannelConnectionError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

#error "1D758B168: call analysis failed (funcsize=92)"

uint64_t sub_1D758B1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_95()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return sub_1D765FF00();
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return v0;
}

void OUTLINED_FUNCTION_50_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 64) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t initializeBufferWithCopyOfBuffer for PinNotificationEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t OPACKDecode(data:)()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = 0;
  uint64_t v0 = (void *)sub_1D765FEB0();
  id NSDataTm = OPACKEncoderCreateNSDataTm(v0, (uint64_t)&v4, MEMORY[0x1E4F5E258]);

  if (NSDataTm)
  {
    sub_1D7661070();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1D7660B10();
    id v3 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
    OUTLINED_FUNCTION_3_6();
    return swift_willThrow();
  }
}

id OPACKEncoderCreateNSDataTm(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  id v5 = (id)a3();

  return v5;
}

void sub_1D758B47C()
{
  OUTLINED_FUNCTION_97();
  unint64_t v2 = OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled;
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled) & 1) == 0)
  {
    id v3 = *v1;
    sub_1D75914DC(0);
    id v4 = 0;
    if ((unint64_t)v3 >= 5)
    {
      id v5 = v3;
      id v4 = v3;
    }
    v53 = v0;
    sub_1D7660DD0();
    if (qword_1EBDEBCD8 == -1) {
      goto LABEL_5;
    }
LABEL_52:
    swift_once();
LABEL_5:
    uint64_t v6 = qword_1EBDEBCD0;
    if (OUTLINED_FUNCTION_96())
    {
      sub_1D758C064(v3);
      swift_retain();
      sub_1D758C064(v3);
      swift_retain();
      uint64_t v7 = OUTLINED_FUNCTION_40_0();
      uint64_t v65 = OUTLINED_FUNCTION_38_0();
      *(_DWORD *)uint64_t v7 = 136446466;
      uint64_t v8 = sub_1D75BC478();
      uint64_t v62 = sub_1D758DBE8(v8, v9, &v65);
      sub_1D7661020();
      OUTLINED_FUNCTION_36_1();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v62 = (uint64_t)v3;
      sub_1D758C064(v3);
      uint64_t v10 = sub_1D7660B60();
      uint64_t v62 = sub_1D758DBE8(v10, v11, &v65);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D758C350(v3);
      sub_1D758C350(v3);
      OUTLINED_FUNCTION_139(&dword_1D757C000, v6, v12, "%{public}s: Invalidating control channel connection due to reason: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    uint64_t v65 = (uint64_t)v3;
    sub_1D758C064(v3);
    char v13 = v53;
    sub_1D7592380((void **)&v65);
    *((unsigned char *)v53 + v2) = 1;
    sub_1D7591448((uint64_t)&v65);
    uint64_t v15 = (void (*)(uint64_t *))v65;
    uint64_t v14 = v66;
    long long v16 = v67;
    char v17 = v68;
    if (v68 - 1 >= 2)
    {
      if (v68 == 3)
      {
        uint64_t v57 = *((void *)&v66 + 1);
        OUTLINED_FUNCTION_4_3();
        sub_1D75CFFE4((uint64_t)(v53 + 40), (uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
        if (v64)
        {
          sub_1D758B1EC((uint64_t)&v62, (uint64_t)v59);
          sub_1D75D505C((uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
          __swift_project_boxed_opaque_existential_0Tm(v59, v60);
          uint64_t v24 = OUTLINED_FUNCTION_94();
          v25(v24);
          sub_1D758D424((uint64_t)v15, v14, v57, v16, *((uint64_t *)&v16 + 1), 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v59);
        }
        else
        {
          sub_1D758D424((uint64_t)v15, v14, v57, v16, *((uint64_t *)&v16 + 1), 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          sub_1D75D505C((uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
        }
      }
      else
      {
        sub_1D758D424(v65, v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1), v68, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      }
    }
    else if (v65)
    {
      *(void *)&long long v67 = MEMORY[0x1E4FBB1A0];
      uint64_t v65 = 0xD00000000000001ALL;
      *(void *)&long long v66 = 0x80000001D76736C0;
      BYTE8(v67) = 1;
      uint64_t v56 = *((void *)&v66 + 1);
      sub_1D7592D84();
      v18 = (void *)OUTLINED_FUNCTION_3_0();
      uint64_t v20 = v19;
      LOBYTE(v62) = 1;
      v21 = v4;
      Swift::String v22 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v62);
      sub_1D7592DD0((uint64_t)&v65);
      *(unsigned char *)uint64_t v20 = 1;
      *(Swift::String *)(v20 + 8) = v22;
      *(_OWORD *)(v20 + 24) = 0u;
      *(_OWORD *)(v20 + 40) = 0u;
      *(void *)(v20 + 56) = v4;
      uint64_t v65 = (uint64_t)v18;
      *(void *)&long long v66 = 0;
      BYTE8(v66) = 0;
      v15(&v65);
      sub_1D758D424((uint64_t)v15, v14, v56, v16, *((uint64_t *)&v16 + 1), v17, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      v23 = v18;
      char v13 = v53;
    }
    uint64_t v65 = 6;
    long long v66 = 0u;
    long long v67 = 0u;
    LOBYTE(v68) = 4;
    id v3 = &v65;
    sub_1D759127C(&v65);
    v26 = (char *)v13 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers;
    OUTLINED_FUNCTION_4_3();
    uint64_t v27 = *(void *)v26;
    uint64_t v55 = *(void *)v26 + 64;
    uint64_t v28 = 1 << *(unsigned char *)(*(void *)v26 + 32);
    uint64_t v29 = -1;
    if (v28 < 64) {
      uint64_t v29 = ~(-1 << v28);
    }
    unint64_t v30 = v29 & *(void *)(*(void *)v26 + 64);
    int64_t v58 = (unint64_t)(v28 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v31 = 0;
    unint64_t v2 = 0x80000001D76736C0;
    OUTLINED_FUNCTION_153();
    unint64_t v54 = v32;
    if (v30)
    {
LABEL_18:
      unint64_t v33 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      unint64_t v34 = v33 | (v31 << 6);
      goto LABEL_39;
    }
    while (1)
    {
      int64_t v35 = v31 + 1;
      if (__OFADD__(v31, 1))
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (v35 >= v58) {
        goto LABEL_46;
      }
      unint64_t v36 = *(void *)(v55 + 8 * v35);
      ++v31;
      if (!v36)
      {
        int64_t v31 = v35 + 1;
        OUTLINED_FUNCTION_198();
        if (v37 == v38) {
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_207();
        if (!v36)
        {
          int64_t v31 = v39 + 2;
          OUTLINED_FUNCTION_198();
          if (v37 == v38) {
            goto LABEL_46;
          }
          OUTLINED_FUNCTION_207();
          if (!v36)
          {
            int64_t v31 = v40 + 3;
            OUTLINED_FUNCTION_198();
            if (v37 == v38) {
              goto LABEL_46;
            }
            OUTLINED_FUNCTION_207();
            if (!v36)
            {
              int64_t v42 = v41 + 4;
              if (v42 >= v58)
              {
LABEL_46:
                swift_release();
                OUTLINED_FUNCTION_5();
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEAD88);
                sub_1D7660A60();
                swift_endAccess();
                __swift_project_boxed_opaque_existential_0Tm(v53 + 24, v53[27]);
                uint64_t v49 = OUTLINED_FUNCTION_94();
                v50(v49);
                sub_1D75923E4(0);
                sub_1D7592464(0);
                OUTLINED_FUNCTION_4_3();
                v51 = (void (*)(uint64_t))v53[33];
                if (v51)
                {
                  uint64_t v52 = swift_retain();
                  v51(v52);

                  sub_1D75940A4((uint64_t)v51);
                }
                else
                {
                }
                break;
              }
              unint64_t v36 = *(void *)(v55 + 8 * v42);
              if (!v36)
              {
                while (1)
                {
                  int64_t v31 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_51;
                  }
                  OUTLINED_FUNCTION_198();
                  if (v37 == v38) {
                    goto LABEL_46;
                  }
                  OUTLINED_FUNCTION_207();
                  int64_t v42 = v43 + 1;
                  if (v36) {
                    goto LABEL_38;
                  }
                }
              }
              int64_t v31 = v42;
            }
          }
        }
      }
LABEL_38:
      unint64_t v30 = (v36 - 1) & v36;
      unint64_t v34 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_39:
      id v3 = *(uint64_t **)(*(void *)(v27 + 56) + 16 * v34);
      uint64_t v60 = MEMORY[0x1E4FBB1A0];
      v59[0] = 0xD00000000000001ALL;
      v59[1] = 0x80000001D76736C0;
      LOBYTE(v61) = 1;
      sub_1D7593108((uint64_t)v59, (uint64_t)v70);
      if (v71)
      {
        if (v71 == 1)
        {
          sub_1D758CB98(v70, &v65);
          sub_1D758DD0C((uint64_t)&v65, (uint64_t)&v62);
          v44 = v4;
          swift_retain();
          sub_1D7660B60();
          uint64_t v62 = 0xD000000000000016;
          unint64_t v63 = v54;
          sub_1D7660BC0();
          swift_bridgeObjectRelease();
          unint64_t v45 = v62;
          unint64_t v46 = v63;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v65);
        }
        else
        {
          v48 = v4;
          swift_retain();
          unint64_t v45 = 0xD000000000000014;
          unint64_t v46 = 0x80000001D7673700;
        }
      }
      else
      {
        unint64_t v46 = *((void *)&v70[0] + 1);
        unint64_t v45 = *(void *)&v70[0];
        v47 = v4;
        swift_retain();
      }
      sub_1D7592DD0((uint64_t)v59);
      LOBYTE(v65) = 1;
      *(void *)&long long v66 = v45;
      *((void *)&v66 + 1) = v46;
      long long v67 = 0u;
      long long v68 = 0u;
      v69 = v4;
      sub_1D75D213C((uint64_t)&v65);
      sub_1D75D2148((uint64_t)&v65, (uint64_t)&v62);
      ((void (*)(uint64_t *))v3)(&v62);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_release();

      if (v30) {
        goto LABEL_18;
      }
    }
  }
  OUTLINED_FUNCTION_84();
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_allocError();
}

unint64_t OUTLINED_FUNCTION_4_2()
{
  return sub_1D7592D84();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_1()
{
  JUMPOUT(0x1D9474C60);
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_6@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_1D76612F0();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return sub_1D7661490();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return sub_1D7660BC0();
}

double OUTLINED_FUNCTION_4_11(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  return sub_1D75B52A8((uint64_t)va, v1, (uint64_t)va1);
}

unint64_t OUTLINED_FUNCTION_4_12()
{
  return sub_1D75B0D60();
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  *(void *)(v4 - 352) = v3;
  *(void *)(v4 - 344) = v0;
  *(void *)(v4 - 248) = v1;
  return v2;
}

char *OUTLINED_FUNCTION_4_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

id sub_1D758C064(id result)
{
  if ((unint64_t)result >= 5) {
    return result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_33()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_1D7661560();
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return sub_1D7661560();
}

unint64_t OUTLINED_FUNCTION_3_4()
{
  return 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

id OUTLINED_FUNCTION_3_6()
{
  return sub_1D75D8060(v0, v1, v2, 0);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return sub_1D76616A0();
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return sub_1D76612D0();
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return sub_1D7661450();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return sub_1D75933F0(v0, v1);
}

void OUTLINED_FUNCTION_3_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return 1032;
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47()
{
  return sub_1D75933F0(v1, v0);
}

char *OUTLINED_FUNCTION_3_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

void sub_1D758C350(id a1)
{
  if ((unint64_t)a1 >= 5) {
}
  }

uint64_t sub_1D758C360(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v3 = HIBYTE(a3);
  if (a3)
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_1EBDEAEC0;
  }
  char v5 = v3;
  id v6 = (id)*v4;
  uint64_t v7 = (void *)sub_1D7660AE0();
  id v8 = objc_msgSend(v6, sel_valueForKey_, v7);

  if (v8)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_32();
  }
  char v9 = sub_1D7590894((uint64_t)v12);
  sub_1D758C5F8((uint64_t)v12, &qword_1EBDEC4D0);
  if (v9 == 2) {
    char v10 = v5 & 1;
  }
  else {
    char v10 = v9;
  }
  return v10 & 1;
}

uint64_t CUPairedPeer.initialPairingTime.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D758CBFC(a1, (uint64_t)v4);
  uint64_t v5 = sub_1D765FF70();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5);
  if (EnumTagSinglePayload == 1)
  {
    sub_1D758C650((uint64_t)v4, &qword_1EBDEAC80);
    uint64_t v7 = 0;
  }
  else
  {
    sub_1D765FF60();
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v7 = v9;
  }
  sub_1D758C6D4(v7, EnumTagSinglePayload == 1, 0xD000000000000020, 0x80000001D7675E30, MEMORY[0x1E4FBB3D0]);
  return sub_1D758C650(a1, &qword_1EBDEAC80);
}

uint64_t sub_1D758C5F8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_16();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1D758C650(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

void sub_1D758C6D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = v5;
  uint64_t v12 = sub_1D76010E4(v9, (SEL *)&selRef_info);
  if (!v12) {
    uint64_t v12 = sub_1D7660A50();
  }
  uint64_t v18 = v12;
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  sub_1D76610E0();
  if (a2)
  {
    a1 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = a5;
  }
  uint64_t v13 = a1;
  sub_1D758CB10((uint64_t)&v13, (uint64_t)v17);
  sub_1D7590814(v18, v9);
}

uint64_t sub_1D758C7B8()
{
  OUTLINED_FUNCTION_18_2();
  unint64_t v0 = (_OWORD *)OUTLINED_FUNCTION_3_5();
  uint64_t v2 = sub_1D758C804(v0, v1);
  OUTLINED_FUNCTION_15_2((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

_OWORD *sub_1D758C804(_OWORD *a1, uint64_t a2)
{
  sub_1D758C92C(a2);
  OUTLINED_FUNCTION_24_1();
  if (v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEADC0);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v10 = sub_1D758C92C(a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_11:
    unint64_t result = (_OWORD *)sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v8 = v10;
LABEL_5:
  uint64_t v12 = *v2;
  if (v9)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v12[7] + 32 * v8);
    uint64_t v13 = (_OWORD *)OUTLINED_FUNCTION_36();
    return sub_1D758CB98(v13, v14);
  }
  else
  {
    sub_1D758CA38(a2, (uint64_t)v16);
    return sub_1D758CA94(v8, (uint64_t)v16, a1, v12);
  }
}

unint64_t sub_1D758C92C(uint64_t a1)
{
  uint64_t v2 = sub_1D76610C0();
  return sub_1D758C970(a1, v2);
}

unint64_t sub_1D758C970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1D758CA38(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1D9473790](v9, a1);
      sub_1D758CBA8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1D758CA38(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_1D758CA94(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_1D758CB98(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1D758CB10(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D758CB98((_OWORD *)a1, v11);
    sub_1D758C7B8();
    return sub_1D758CBA8(a2);
  }
  else
  {
    sub_1D758C650(a1, &qword_1EBDEC4D0);
    sub_1D761A450(a2, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v11[0], *((uint64_t *)&v11[0] + 1));
    sub_1D758CBA8(a2);
    return sub_1D758C650((uint64_t)v11, &qword_1EBDEC4D0);
  }
}

_OWORD *sub_1D758CB98(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D758CBA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D758CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D758CC64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v40 = *(void *)(a1 + 32);
  char v39 = *(unsigned char *)(a1 + 40);
  OS_dispatch_queue.assertOnQueueHierarchy()();
  os_log_type_t v7 = sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBDEBCD0;
  swift_retain_n();
  if (os_log_type_enabled(v8, v7))
  {
    swift_retain();
    sub_1D758D424(v3, v4, v6, v5, v40, v39, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
    swift_retain();
    sub_1D758D424(v3, v4, v6, v5, v40, v39, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
    log = v8;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(void *)&long long v41 = v38;
    *(_DWORD *)uint64_t v9 = 136446722;
    uint64_t v10 = sub_1D75BC478();
    *(void *)&long long v46 = sub_1D758DBE8(v10, v11, (uint64_t *)&v41);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    *(void *)&long long v46 = v3;
    *((void *)&v46 + 1) = v4;
    *(void *)&long long v47 = v6;
    *((void *)&v47 + 1) = v5;
    uint64_t v48 = v40;
    char v49 = v39;
    sub_1D758D424(v3, v4, v6, v5, v40, v39, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
    uint64_t v12 = sub_1D7660B60();
    *(void *)&long long v46 = sub_1D758DBE8(v12, v13, (uint64_t *)&v41);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    sub_1D758D424(v3, v4, v6, v5, v40, v39, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    sub_1D758D424(v3, v4, v6, v5, v40, v39, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    *(_WORD *)(v9 + 22) = 2082;
    swift_beginAccess();
    uint64_t v14 = *(void *)(v2 + 136);
    uint64_t v15 = *(void *)(v2 + 144);
    uint64_t v16 = *(void *)(v2 + 152);
    uint64_t v17 = *(void *)(v2 + 160);
    char v18 = *(unsigned char *)(v2 + 168);
    *(void *)&long long v46 = *(void *)(v2 + 128);
    *((void *)&v46 + 1) = v14;
    *(void *)&long long v47 = v15;
    *((void *)&v47 + 1) = v16;
    uint64_t v48 = v17;
    char v49 = v18;
    sub_1D758D424(v46, v14, v15, v16, v17, v18, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
    uint64_t v19 = sub_1D7660B60();
    *(void *)&long long v46 = sub_1D758DBE8(v19, v20, (uint64_t *)&v41);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, log, v7, "%{public}s: ControlChannel connection state changing from %{public}s to %{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v38, -1, -1);
    MEMORY[0x1D9474C60](v9, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  swift_beginAccess();
  uint64_t v21 = *(void *)(v2 + 160);
  char v22 = *(unsigned char *)(v2 + 168);
  long long v23 = *(_OWORD *)(v2 + 144);
  long long v46 = *(_OWORD *)(v2 + 128);
  long long v47 = v23;
  uint64_t v48 = v21;
  char v49 = v22;
  *(void *)&long long v41 = v3;
  *((void *)&v41 + 1) = v4;
  uint64_t v42 = v6;
  uint64_t v43 = v5;
  uint64_t v44 = v40;
  char v45 = v39;
  if (!sub_1D758E21C((uint64_t)&v41, (*(_DWORD *)(v2 + 240) & 0x8000) == 0, v24, v25, v26, v27, v28, v29))
  {
    *(void *)&long long v46 = 0;
    *((void *)&v46 + 1) = 0xE000000000000000;
    sub_1D7661100();
    long long v41 = v46;
    sub_1D7660BC0();
    uint64_t v30 = *(void *)(v2 + 160);
    char v31 = *(unsigned char *)(v2 + 168);
    long long v32 = *(_OWORD *)(v2 + 144);
    long long v46 = *(_OWORD *)(v2 + 128);
    long long v47 = v32;
    uint64_t v48 = v30;
    char v49 = v31;
    sub_1D7661200();
    *((void *)&v47 + 1) = MEMORY[0x1E4FBB1A0];
    long long v46 = v41;
    LOBYTE(v48) = 1;
    sub_1D7592D84();
    unint64_t v33 = (void *)swift_allocError();
    uint64_t v35 = v34;
    LOBYTE(v41) = 1;
    Swift::String v36 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v41);
    sub_1D7592DD0((uint64_t)&v46);
    *(unsigned char *)uint64_t v35 = 1;
    *(Swift::String *)(v35 + 8) = v36;
    *(_OWORD *)(v35 + 24) = 0u;
    *(_OWORD *)(v35 + 40) = 0u;
    *(void *)(v35 + 56) = 0;
    sub_1D759250C(v33);
  }
}

uint64_t _s5StateOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1D758D338(*(void *)a2, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

void _s5StateOwxx(uint64_t a1)
{
}

void sub_1D758D338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  switch(a6)
  {
    case 0:
      ((void (*)(uint64_t, uint64_t))a7)(a2, a3);
      a8(a4, a5);
      break;
    case 1:
    case 2:
      a7();
      break;
    case 3:
      a9();
      break;
    default:
      return;
  }
}

void sub_1D758D424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  switch(a6)
  {
    case 0:
      ((void (*)(uint64_t, uint64_t))a7)(a2, a3);
      a8(a4, a5);
      break;
    case 1:
    case 2:
      a7();
      break;
    case 3:
      a9();
      break;
    default:
      return;
  }
}

uint64_t OS_dispatch_queue.parentQueue.getter()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_1EA82C150);
  swift_endAccess();
  if (v1)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1D758D5E8((uint64_t)v4, (uint64_t)v5);
  if (v6)
  {
    sub_1D758DF20();
    if (swift_dynamicCast()) {
      return v3;
    }
  }
  else
  {
    sub_1D758DEC0((uint64_t)v5);
  }
  return 0;
}

uint64_t sub_1D758D5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

Swift::Void __swiftcall OS_dispatch_queue.assertOnQueueHierarchy()()
{
  uint64_t v1 = OS_dispatch_queue.parentQueue.getter();
  if (v1)
  {
    uint64_t v10 = (void *)v1;
    OS_dispatch_queue.assertOnQueueHierarchy()();
  }
  else
  {
    uint64_t v2 = sub_1D76609E0();
    OUTLINED_FUNCTION_0_5();
    uint64_t v4 = v3;
    MEMORY[0x1F4188790]();
    OUTLINED_FUNCTION_1_7();
    uint64_t v7 = v6 - v5;
    *(void *)(v6 - v5) = v0;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v6 - v5, *MEMORY[0x1E4FBCBE8], v2);
    id v8 = v0;
    char v9 = sub_1D7660A00();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v2);
    if ((v9 & 1) == 0) {
      __break(1u);
    }
  }
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_22()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_0_6(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_0_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D758D338(v22, v21, a19, a20, a5, v20, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return sub_1D7660FD0();
}

uint64_t OUTLINED_FUNCTION_0_9()
{
  return sub_1D7661260();
}

uint64_t OUTLINED_FUNCTION_0_10(uint64_t a1, uint64_t a2)
{
  return sub_1D75B5D60(a1, a2, 0, 0, 0, 0, 0);
}

char *OUTLINED_FUNCTION_0_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return _s5StateVMa();
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return sub_1D75933F0(v0, v1);
}

void OUTLINED_FUNCTION_0_15(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  *a1 = a2;
  a1[1].n128_u8[0] = 0;
}

uint64_t OUTLINED_FUNCTION_0_17(uint64_t a1, uint64_t a2)
{
  return sub_1D76004B0(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

uint64_t *OUTLINED_FUNCTION_0_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

char *OUTLINED_FUNCTION_0_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  return &a29;
}

void OUTLINED_FUNCTION_1_2(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_1_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D758D338(v22, v21, a19, a20, a5, v20, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return v0;
}

void OUTLINED_FUNCTION_1_6(uint64_t a1, uint64_t a2)
{
  sub_1D75B61B8(a1, a2, 0, 0, 0, 0, 1);
}

uint64_t OUTLINED_FUNCTION_2_3(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186498](a1, a2, 7);
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return 1005;
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_1_14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return sub_1D7661690();
}

uint64_t sub_1D758DBE8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D758DD68(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D758DD0C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D758DD0C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1D758DD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D758DD68(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1D75D1CA0((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1D7661030();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_1D758DF60(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_1D7661160();
    if (!v8)
    {
      uint64_t result = sub_1D7661250();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D758DEC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D758DF20()
{
  unint64_t result = qword_1EBDEC4B0;
  if (!qword_1EBDEC4B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4B0);
  }
  return result;
}

uint64_t sub_1D758DF60(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D758DFF8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1D75D1D78(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_1D75D1D78((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D758DFF8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_1D7660BD0();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = sub_1D758E16C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1D7661110();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_1D76612A0();
  __break(1u);
LABEL_14:
  uint64_t result = sub_1D7661250();
  __break(1u);
  return result;
}

void *sub_1D758E16C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC020);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void *__swift_project_boxed_opaque_existential_0Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

BOOL sub_1D758E21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v229 = *(void *)(a1 + 16);
  uint64_t v230 = *(void *)(a1 + 24);
  int v16 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v18 = *(void *)v8;
  unint64_t v17 = *(void *)(v8 + 8);
  uint64_t v19 = *(void *)(v8 + 16);
  uint64_t v228 = *(void *)(v8 + 24);
  unint64_t v20 = *(void *)(v8 + 32);
  switch(*(unsigned char *)(v8 + 40))
  {
    case 1:
      if (*(unsigned char *)(a1 + 40))
      {
        uint64_t v216 = *(void *)a1;
        uint64_t v220 = *(void *)(a1 + 8);
        uint64_t v33 = *(void *)(a1 + 32);
        char v34 = *(unsigned char *)(a1 + 40);
        sub_1D758D338(*(void *)a1, v13, v229, v230, v15, v16, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
        uint64_t v35 = OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_8_2(v35, v36, v37, v38, v39, v40, v41, v42, v200);
        sub_1D758D338(v216, v220, v229, v230, v33, v34, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        uint64_t v43 = OUTLINED_FUNCTION_11_1();
        goto LABEL_70;
      }
      uint64_t v214 = *(void *)(v8 + 16);
      switch(*(void *)a1)
      {
        case 1u:
          uint64_t v223 = *(void *)(a1 + 8);
          uint64_t v78 = *(void *)(a1 + 32);
          sub_1D758D338(v14, v13, v229, v230, v15, 0, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          uint64_t v79 = 1;
          OUTLINED_FUNCTION_23_1(v18, v17, v214, v228, v20, 1, v80, v81, (void (*)(void))sub_1D75934F4);
          OUTLINED_FUNCTION_17_1();
          sub_1D758D338(v14, v223, v229, v230, v78, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          sub_1D758D338(v18, v17, v214, v228, v20, 1, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          break;
        default:
          uint64_t v108 = *(void *)(a1 + 8);
          uint64_t v109 = *(void *)(a1 + 32);
          char v225 = sub_1D7661560();
          sub_1D758D338(v14, v108, v229, v230, v109, 0, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          uint64_t v79 = 1;
          sub_1D758D338(v18, v17, v214, v228, v20, 1, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          swift_bridgeObjectRelease();
          sub_1D758D338(v14, v108, v229, v230, v109, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          OUTLINED_FUNCTION_8_2(v18, v17, v214, v228, v20, 1, v110, v111, (void (*)(void))sub_1D75933F0);
          if ((v225 & 1) == 0) {
            return 0;
          }
          break;
      }
      return v79;
    case 2:
      if (*(unsigned char *)(a1 + 40))
      {
        uint64_t v217 = *(void *)a1;
        uint64_t v221 = *(void *)(a1 + 8);
        uint64_t v49 = *(void *)(a1 + 32);
        char v50 = *(unsigned char *)(a1 + 40);
        sub_1D758D338(*(void *)a1, v13, v229, v230, v15, v16, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
        OUTLINED_FUNCTION_16_1();
        OUTLINED_FUNCTION_20_1();
        OUTLINED_FUNCTION_8_2(v51, v52, v53, v54, v55, v56, v57, v58, v202);
        sub_1D758D338(v217, v221, v229, v230, v49, v50, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        OUTLINED_FUNCTION_20_1();
        sub_1D758D338(v59, v60, v61, v62, v63, v64, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        return 0;
      }
      uint64_t v211 = *(void *)(a1 + 32);
      switch(*(void *)a1)
      {
        case 2u:
          uint64_t v112 = *(void *)(a1 + 8);
          sub_1D758D338(v14, v13, v229, v230, v15, 0, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          uint64_t v113 = OUTLINED_FUNCTION_12_1();
          uint64_t v114 = v19;
          OUTLINED_FUNCTION_23_1(v113, v115, v19, v228, v20, 2, v116, v117, v205);
          OUTLINED_FUNCTION_17_1();
          break;
        default:
          uint64_t v118 = *(void *)(a1 + 32);
          uint64_t v112 = *(void *)(a1 + 8);
          char v226 = sub_1D7661560();
          sub_1D758D338(v14, v112, v229, v230, v118, 0, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          uint64_t v114 = v19;
          sub_1D758D338(v18, v17, v19, v228, v20, 2, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
          swift_bridgeObjectRelease();
          if ((v226 & 1) == 0)
          {
            switch((char)v14)
            {
              case 0:
              case 1:
              case 2:
                char v138 = OUTLINED_FUNCTION_22_1();
                swift_bridgeObjectRelease();
                sub_1D758D338(v14, v112, v229, v230, v211, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
                uint64_t v139 = OUTLINED_FUNCTION_16_1();
                OUTLINED_FUNCTION_8_2(v139, v140, v19, v228, v20, 2, v141, v142, v206);
                return (v138 & 1) != 0;
              case 3:
                OUTLINED_FUNCTION_17_1();
                sub_1D758D338(v14, v112, v229, v230, v211, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
                uint64_t v30 = OUTLINED_FUNCTION_12_1();
                uint64_t v32 = v19;
                goto LABEL_56;
              default:
                JUMPOUT(0);
            }
          }
          return result;
      }
      sub_1D758D338(v14, v112, v229, v230, v211, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      uint64_t v30 = OUTLINED_FUNCTION_12_1();
      uint64_t v32 = v114;
LABEL_56:
      uint64_t v85 = v228;
      uint64_t v106 = v20;
      char v107 = 2;
      goto LABEL_67;
    case 3:
      BOOL v65 = v16 == 4 && v14 == 5;
      if (!v65 || (v229 | v13 | v230 | v15) != 0)
      {
        uint64_t v218 = *(void *)a1;
        uint64_t v222 = *(void *)(a1 + 8);
        uint64_t v67 = *(void *)(a1 + 32);
        char v68 = *(unsigned char *)(a1 + 40);
        sub_1D758D338(*(void *)a1, v13, v229, v230, v15, v16, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
        uint64_t v69 = OUTLINED_FUNCTION_10_1();
        OUTLINED_FUNCTION_8_2(v69, v70, v71, v72, v73, v74, v75, v76, v203);
        sub_1D758D338(v218, v222, v229, v230, v67, v68, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        uint64_t v43 = OUTLINED_FUNCTION_10_1();
        goto LABEL_70;
      }
      uint64_t v95 = *(void *)(a1 + 32);
      if ((a2 & 1) == 0)
      {
        char v96 = OUTLINED_FUNCTION_3_3();
        sub_1D75934F4(v18, v17);
        swift_bridgeObjectRelease();
        sub_1D758D338(5, 0, 0, 0, v95, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        uint64_t v97 = OUTLINED_FUNCTION_21_4();
        uint64_t v102 = v228;
        uint64_t v103 = v20;
        char v104 = 3;
        goto LABEL_59;
      }
      sub_1D75934F4(v18, v17);
      swift_bridgeObjectRelease();
      sub_1D758D338(5, 0, 0, 0, v95, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      uint64_t v30 = OUTLINED_FUNCTION_12_1();
      uint64_t v32 = v19;
      uint64_t v85 = v228;
      uint64_t v106 = v20;
      char v107 = 3;
      goto LABEL_67;
    case 4:
      if (!(v19 | v17 | v18 | v228 | v20)) {
        goto LABEL_30;
      }
      unint64_t v77 = v19 | v17 | v228 | v20;
      if (v18 == 1 && !v77)
      {
        if (v16 == 4 && !(v229 | v13 | v14 | v230 | v15))
        {
          sub_1D758D338(0, 0, 0, 0, v15, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          uint64_t v79 = 1;
          sub_1D758D338(1, 0, 0, 0, v20, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          return v79;
        }
LABEL_40:
        OUTLINED_FUNCTION_1_3(a1, a2, a3, a4, v15, a6, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
          v230);
        sub_1D758D338(v14, v17, v18, v11, v9, v19, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        OUTLINED_FUNCTION_9_2();
        sub_1D758D338(v87, v88, v89, v90, v91, v92, v93, v94, (void (*)(void))sub_1D75933F0);
        return 0;
      }
      if (v18 == 2 && !v77)
      {
        if (v16 == 4 && v14 == 1)
        {
          OUTLINED_FUNCTION_4_1();
          if (!v124)
          {
            sub_1D758D338(1, 0, 0, 0, v15, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_23_1(v125, v126, v127, v128, v129, v130, v131, v132, (void (*)(void))sub_1D75933F0);
            return 1;
          }
        }
        goto LABEL_40;
      }
      if (v18 == 3 && !v77)
      {
        if (!*(unsigned char *)(a1 + 40))
        {
          uint64_t v143 = *(void *)(a1 + 8);
          uint64_t v144 = *(void *)a1;
          uint64_t v145 = *(void *)(a1 + 32);
          switch(*(void *)a1)
          {
            case 1u:
            case 2u:
            case 3u:
              uint64_t v155 = OUTLINED_FUNCTION_22_1();
              OUTLINED_FUNCTION_7_1(v155, v156, v157, v158, v159, v160, v161, v162, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
                v230);
              sub_1D758D338(v144, v143, 3, v11, v145, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
              goto LABEL_106;
            default:
              OUTLINED_FUNCTION_18_1(0xD000000000000012, a2, a3, a4, v15, a6, a7, a8, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
                v230);
              OUTLINED_FUNCTION_17_1();
              sub_1D758D338(v144, v143, 3, v11, v145, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
              v199 = (void (*)(void))sub_1D75933F0;
              uint64_t v30 = 3;
              goto LABEL_142;
          }
        }
        goto LABEL_49;
      }
      if (v18 != 4 || v77)
      {
        if (v18 == 5 && !v77)
        {
          switch(*(unsigned char *)(a1 + 40))
          {
            case 0:
              uint64_t v178 = *(void *)(a1 + 8);
              uint64_t v179 = *(void *)a1;
              uint64_t v180 = *(void *)(a1 + 32);
              switch(*(void *)a1)
              {
                case 1u:
                  OUTLINED_FUNCTION_18_1(0xD000000000000013, a2, a3, a4, v15, a6, a7, a8, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
                    v230);
                  OUTLINED_FUNCTION_17_1();
                  sub_1D758D338(v179, v178, 5, v11, v180, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
                  goto LABEL_141;
                default:
                  uint64_t v190 = sub_1D7661560();
                  OUTLINED_FUNCTION_7_1(v190, v191, v192, v193, v194, v195, v196, v197, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
                    v230);
                  sub_1D758D338(v179, v178, 5, v11, v180, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
LABEL_106:
                  OUTLINED_FUNCTION_15_1();
                  OUTLINED_FUNCTION_8_2(v163, v164, v165, v166, v167, v168, v169, v170, (void (*)(void))sub_1D75933F0);
                  return (v8 & 1) != 0;
              }
            case 1:
            case 2:
              goto LABEL_89;
            case 3:
              uint64_t v181 = *(void *)a1;
              unint64_t v182 = *(void *)(a1 + 8);
              uint64_t v183 = *(void *)(a1 + 32);
              if ((a2 & 1) == 0)
              {
                char v96 = OUTLINED_FUNCTION_3_3();
                sub_1D75934F4(v181, v182);
                swift_bridgeObjectRelease();
                sub_1D758D338(v181, v182, v229, v230, v183, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
                v204 = (void (*)(void))sub_1D75933F0;
                goto LABEL_147;
              }
              sub_1D75934F4(v181, v13);
              swift_bridgeObjectRelease();
              sub_1D758D338(v181, v182, v229, v230, v183, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
              goto LABEL_141;
            case 4:
              OUTLINED_FUNCTION_14_2();
              if (!v65 || v184)
              {
                if (v14 != 3 || v184)
                {
                  if (v14 != 4 || v184) {
                    goto LABEL_49;
                  }
                  uint64_t v185 = 4;
                }
                else
                {
                  uint64_t v185 = 3;
                }
              }
              else
              {
                uint64_t v185 = 2;
              }
              sub_1D758D338(v185, 0, 0, 0, v15, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
LABEL_141:
              v199 = (void (*)(void))sub_1D75933F0;
              uint64_t v30 = 5;
              break;
            default:
              goto LABEL_49;
          }
          goto LABEL_142;
        }
        if (v18 == 6 && !v77)
        {
          OUTLINED_FUNCTION_1_3(a1, a2, a3, a4, v15, a6, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
            v230);
          sub_1D758D338(v14, v17, 6, v11, v9, v19, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          OUTLINED_FUNCTION_9_2();
          sub_1D758D338(v146, v147, v148, v149, v150, v151, v152, v153, (void (*)(void))sub_1D75933F0);
          return 1;
        }
        if (v18 != 7 || v77)
        {
          BOOL v177 = v16 == 4 && v14 == 2;
          if (!v177 || (OUTLINED_FUNCTION_4_1(), v188))
          {
LABEL_49:
            OUTLINED_FUNCTION_0_7(a1, a2, a3, a4, v15, a6, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
              v230);
            sub_1D758D338(v12, v14, v18, v11, v10, v19, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            v201 = (void (*)(void))sub_1D75933F0;
            goto LABEL_31;
          }
          uint64_t v189 = v15;
          if (a2)
          {
            swift_bridgeObjectRelease();
            sub_1D758D338(2, 0, 0, 0, v189, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            v199 = (void (*)(void))sub_1D75933F0;
            uint64_t v30 = 8;
            goto LABEL_142;
          }
          char v96 = OUTLINED_FUNCTION_3_3();
          swift_bridgeObjectRelease();
          sub_1D758D338(2, 0, 0, 0, v189, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          v204 = (void (*)(void))sub_1D75933F0;
        }
        else
        {
          BOOL v154 = v16 == 4 && v14 == 3;
          if (!v154 || (OUTLINED_FUNCTION_4_1(), v186))
          {
LABEL_30:
            OUTLINED_FUNCTION_5_4(a1, a2, a3, a4, v15, a6, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4, v207, v208, v209, v210, v212, v213, v215, v219, v228, v229,
              v230);
            sub_1D758D338(v12, v14, v11, v19, v10, v18, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            v201 = (void (*)(void))sub_1D75933F0;
LABEL_31:
            OUTLINED_FUNCTION_19_1();
LABEL_32:
            char v48 = 4;
            goto LABEL_70;
          }
          uint64_t v187 = v15;
          if ((a2 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_1D758D338(3, 0, 0, 0, v187, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            v199 = (void (*)(void))sub_1D75933F0;
            uint64_t v30 = 7;
LABEL_142:
            uint64_t v31 = 0;
            uint64_t v32 = 0;
            uint64_t v85 = 0;
            uint64_t v106 = v20;
            goto LABEL_143;
          }
          char v96 = OUTLINED_FUNCTION_2_0();
          swift_bridgeObjectRelease();
          sub_1D758D338(3, 0, 0, 0, v187, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          v204 = (void (*)(void))sub_1D75933F0;
        }
LABEL_147:
        OUTLINED_FUNCTION_19_1();
        goto LABEL_148;
      }
      if (v16 == 1 || v16 == 2)
      {
LABEL_89:
        uint64_t v133 = *(void *)(v8 + 16);
        uint64_t v134 = *(void *)a1;
        uint64_t v135 = *(void *)(a1 + 8);
        uint64_t v136 = *(void *)(a1 + 32);
        char v137 = *(unsigned char *)(a1 + 40);
        sub_1D75A74B4(*(void *)a1);
        sub_1D758D338(v134, v135, v229, v230, v136, v137, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        uint64_t v30 = OUTLINED_FUNCTION_16_1();
        uint64_t v32 = v133;
        uint64_t v85 = v228;
        uint64_t v106 = v20;
        char v107 = 4;
LABEL_67:
        sub_1D758D338(v30, v31, v32, v85, v106, v107, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, v199);
        return 1;
      }
      if (v16 != 4) {
        goto LABEL_112;
      }
      OUTLINED_FUNCTION_4_1();
      if (v14 == 3 && !v123)
      {
        sub_1D758D338(3, 0, 0, 0, v15, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
LABEL_81:
        v199 = (void (*)(void))sub_1D75933F0;
        uint64_t v30 = OUTLINED_FUNCTION_6_1();
LABEL_143:
        char v107 = 4;
        goto LABEL_67;
      }
      if (v14 != 7 || v123)
      {
LABEL_112:
        uint64_t v172 = v14;
        uint64_t v173 = v14;
        uint64_t v174 = v13;
        uint64_t v175 = v15;
        char v176 = v16;
        sub_1D758D338(v173, v13, v229, v230, v15, v16, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
        sub_1D758D338(v172, v174, v229, v230, v175, v176, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        v201 = (void (*)(void))sub_1D75933F0;
        uint64_t v43 = OUTLINED_FUNCTION_6_1();
        goto LABEL_32;
      }
      uint64_t v171 = v15;
      if ((v122 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1D758D338(7, 0, 0, 0, v171, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        goto LABEL_81;
      }
      char v96 = OUTLINED_FUNCTION_2_0();
      swift_bridgeObjectRelease();
      sub_1D758D338(7, 0, 0, 0, v171, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      v204 = (void (*)(void))sub_1D75933F0;
      uint64_t v97 = OUTLINED_FUNCTION_6_1();
LABEL_148:
      char v104 = 4;
LABEL_59:
      OUTLINED_FUNCTION_8_2(v97, v98, v99, v102, v103, v104, v100, v101, v204);
      return (v96 & 1) != 0;
    default:
      if (v16 == 3)
      {
        uint64_t v82 = *(void *)(a1 + 32);
        uint64_t v224 = *(void *)(a1 + 8);
        sub_1D758D338(v14, v13, v229, v230, v15, 3, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
        OUTLINED_FUNCTION_23_1(v18, v17, v19, v228, v20, 0, v83, v84, (void (*)(void))sub_1D75934F4);
        sub_1D758D338(v14, v224, v229, v230, v82, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        v199 = (void (*)(void))sub_1D75933F0;
        uint64_t v30 = v18;
        uint64_t v31 = v17;
        uint64_t v32 = v19;
        uint64_t v85 = v228;
LABEL_66:
        uint64_t v106 = v20;
        char v107 = 0;
        goto LABEL_67;
      }
      if (v16 != 4) {
        goto LABEL_69;
      }
      OUTLINED_FUNCTION_14_2();
      if (!v65 || v28)
      {
        if (v14 != 5 || v28)
        {
          if (v14 != 8 || v28)
          {
LABEL_69:
            uint64_t v227 = v13;
            uint64_t v119 = v15;
            char v120 = v16;
            sub_1D758D338(v14, v13, v229, v230, v15, v16, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
            sub_1D758D338(v18, v17, v19, v228, v20, 0, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
            sub_1D758D338(v14, v227, v229, v230, v119, v120, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            v201 = (void (*)(void))sub_1D75933F0;
            uint64_t v43 = v18;
            uint64_t v44 = v17;
            uint64_t v45 = v19;
            uint64_t v46 = v228;
            uint64_t v47 = v20;
            char v48 = 0;
LABEL_70:
            sub_1D758D338(v43, v44, v45, v46, v47, v48, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, v201);
            return 0;
          }
          OUTLINED_FUNCTION_13_3(v21, v22, v23, v24, v15, v25, v26, v27, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228);
          uint64_t v105 = v19;
          sub_1D758D338(8, 0, 0, 0, v17, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        }
        else
        {
          OUTLINED_FUNCTION_13_3(v21, v22, v23, v24, v15, v25, v26, v27, v198, v207, v208, v209, v210, v212, v213, v215, v219, v228);
          uint64_t v105 = v19;
          sub_1D758D338(5, 0, 0, 0, v17, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        }
        v199 = (void (*)(void))sub_1D75933F0;
        uint64_t v30 = v18;
        uint64_t v31 = v10;
        uint64_t v32 = v105;
      }
      else
      {
        uint64_t v29 = v15;
        if (v22)
        {
          char v96 = OUTLINED_FUNCTION_2_0();
          sub_1D75A74B4(v17);
          sub_1D75AC3B4(v228, v20);
          swift_bridgeObjectRelease();
          sub_1D758D338(2, 0, 0, 0, v29, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          uint64_t v97 = OUTLINED_FUNCTION_21_4();
          uint64_t v102 = v228;
          uint64_t v103 = v20;
          char v104 = 0;
          goto LABEL_59;
        }
        sub_1D75A74B4(v17);
        uint64_t v11 = v228;
        sub_1D75AC3B4(v228, v20);
        swift_bridgeObjectRelease();
        sub_1D758D338(2, 0, 0, 0, v29, 4, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        v199 = (void (*)(void))sub_1D75933F0;
        uint64_t v30 = v18;
        uint64_t v31 = v17;
        uint64_t v32 = v19;
      }
      uint64_t v85 = v11;
      goto LABEL_66;
  }
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return v0;
}

void OUTLINED_FUNCTION_8_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, void (*a9)(void))
{
  sub_1D758D338(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return 0x656C74746F726874;
}

uint64_t OUTLINED_FUNCTION_8_4(uint64_t a1, uint64_t a2)
{
  return sub_1D75B605C(a1, a2, 0, 0, 0, 0, 0);
}

void OUTLINED_FUNCTION_8_5(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  sub_1D75D3F24(a1, 0, 0, 0, 0, 0, 0, 0, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return sub_1D76613F0();
}

char *OUTLINED_FUNCTION_8_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return v1 + *(int *)(v0 + 28);
}

char *OUTLINED_FUNCTION_8_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return sub_1D76613F0();
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  uint64_t v2 = *(void *)(v0 - 280);
  return sub_1D75940A4(v2);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return sub_1D75F05BC(v0, v1, v2, 0);
}

void OUTLINED_FUNCTION_36_6()
{
  *(void *)(v0 - 136) = 0x5F6E6F6374;
  *(void *)(v0 - 128) = 0xE500000000000000;
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return sub_1D7661380();
}

double OUTLINED_FUNCTION_32()
{
  return 0.0;
}

void OUTLINED_FUNCTION_32_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_1D75F05BC(v1, v2, v0, 0);
}

uint64_t OUTLINED_FUNCTION_32_5(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return sub_1D7661380();
}

void sub_1D7590814(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1D7660A10();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setInfo_, v3);
}

uint64_t sub_1D7590894(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  if (swift_dynamicCast()) {
    return v2[39];
  }
  else {
    return 2;
  }
}

uint64_t sub_1D75908F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t static Defaults.deviceAllowTCPControlChannels.getter()
{
  if (qword_1EBDEBD88 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EBDEBD70 & 1;
}

uint64_t OUTLINED_FUNCTION_7()
{
  return sub_1D758C360(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_7_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D75A74B4(v20);
  sub_1D75AC3B4(a20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return v0;
}

void OUTLINED_FUNCTION_7_3()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return sub_1D76612A0();
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return sub_1D7661320();
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_10(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_7_12(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

double OUTLINED_FUNCTION_7_14()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_1D7661680();
}

uint64_t OUTLINED_FUNCTION_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14, char a15)
{
  long long v17 = v15[1];
  a13 = *v15;
  a14 = v17;
  a15 = *((unsigned char *)v15 + 32);
  return sub_1D759CC78((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_11_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for PairedHostInfo(0);
  return sub_1D765FFD0();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_178()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_5@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1D76613B0();
}

uint64_t OUTLINED_FUNCTION_11_6(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return sub_1D76613F0();
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return *(void *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return 0x696669746E656469;
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return sub_1D7661730();
}

void OUTLINED_FUNCTION_13()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_9_6()
{
  sub_1D75B3DF0(v0);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  return v0;
}

uint64_t sub_1D7590EC8(uint64_t a1)
{
  sub_1D75D4E0C(a1, (uint64_t)v3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D75D4E0C((uint64_t)v3, (uint64_t)v2);
    sub_1D7590F44((uint64_t)v2);
    return swift_release();
  }
  return result;
}

void sub_1D7590F44(uint64_t a1)
{
  sub_1D75D4E0C(a1, (uint64_t)v28);
  sub_1D75D4E0C((uint64_t)v28, (uint64_t)v29);
  switch(sub_1D75D4E68((uint64_t)v29))
  {
    case 1u:
      os_log_type_t v5 = *(void **)sub_1D75D4E90((uint64_t)v29);
      memset(v16, 0, sizeof(v16));
      char v17 = 2;
      char v15 = 0;
      sub_1D75D4E0C((uint64_t)v28, (uint64_t)__dst);
      os_log_type_t v6 = *(void **)sub_1D75D4E90((uint64_t)__dst);
      sub_1D75D4E0C((uint64_t)v28, (uint64_t)&v19);
      id v7 = *(id *)sub_1D75D4E90((uint64_t)&v19);
      id v8 = v6;
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v15);
      OUTLINED_FUNCTION_195();
      sub_1D7592DD0((uint64_t)v16);
      sub_1D7592D84();
      uint64_t v9 = (void *)OUTLINED_FUNCTION_3_0();
      *(unsigned char *)uint64_t v10 = 0;
      *(void *)(v10 + 8) = v16;
      *(void *)(v10 + 16) = v2;
      *(_OWORD *)(v10 + 24) = 0u;
      *(_OWORD *)(v10 + 40) = 0u;
      *(void *)(v10 + 56) = v5;
      swift_bridgeObjectRetain();
      id v11 = v5;
      sub_1D759250C(v9);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      goto LABEL_4;
    case 2u:
      sub_1D7591448((uint64_t)&v19);
      if (v22 != 4
        || v19 != 1
        || (*((void *)&v20 + 1) | (unint64_t)v20 | (unint64_t)v21 | *((void *)&v21 + 1)) != 0)
      {
        sub_1D758D424(v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        return;
      }
      uint64_t v19 = 2;
      long long v20 = 0u;
      long long v21 = 0u;
      LOBYTE(v22) = 4;
      sub_1D759127C(&v19);
      OUTLINED_FUNCTION_140();
      if (v14 < 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_95();
        if ((v1 & 1) == 0) {
          return;
        }
      }
      sub_1D75C4C68();
      return;
    case 3u:
      long long v20 = 0u;
      long long v21 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      uint64_t v19 = 2;
      unint64_t v24 = 0xC000000000000000;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      char v27 = 0;
      sub_1D75D20D0((uint64_t)&v19);
      sub_1D75D20E0((uint64_t)&v19, (uint64_t)__dst);
      OUTLINED_FUNCTION_66();
      return;
    default:
      uint64_t v3 = (const void *)sub_1D75D4E90((uint64_t)v29);
      memcpy(__dst, v3, 0x92uLL);
      sub_1D75D4E0C((uint64_t)v28, (uint64_t)&v19);
      uint64_t v4 = (__n128 *)sub_1D75D4E90((uint64_t)&v19);
      sub_1D75D48CC(v4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      sub_1D75BDE14();
LABEL_4:
      sub_1D75D4EA0((uint64_t)v28);
      return;
  }
}

void sub_1D759127C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  long long v25 = *((_OWORD *)a1 + 1);
  uint64_t v4 = a1[4];
  char v5 = *((unsigned char *)a1 + 40);
  OUTLINED_FUNCTION_21_1();
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  uint64_t v9 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 160);
  *(void *)(v1 + 128) = v2;
  *(void *)(v1 + 136) = v3;
  *(_OWORD *)(v1 + 144) = v25;
  *(void *)(v1 + 160) = v4;
  LOBYTE(v2) = *(unsigned char *)(v1 + 168);
  *(unsigned char *)(v1 + 168) = v5;
  uint64_t v11 = OUTLINED_FUNCTION_124();
  sub_1D758D424(v11, v12, v13, v14, v15, v16, v17, v18, (void (*)(void))sub_1D75934F4);
  sub_1D758D424(v6, v7, v8, v9, v10, v2, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  v26[0] = v6;
  v26[1] = v7;
  v26[2] = v8;
  v26[3] = v9;
  v26[4] = v10;
  char v27 = v2;
  sub_1D758CC64((uint64_t)v26);
  uint64_t v19 = OUTLINED_FUNCTION_124();
  sub_1D758D424(v19, v20, v21, v22, v23, v24, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
}

uint64_t OUTLINED_FUNCTION_49(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_155()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return sub_1D75933F0(v1, v0);
}

void OUTLINED_FUNCTION_49_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D7591448(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v8 = *(unsigned char *)(v1 + 168);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1D758D424(v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
}

uint64_t sub_1D75914DC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__transaction) = a1;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_0()
{
  return sub_1D76600A0();
}

uint64_t OUTLINED_FUNCTION_15_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  uint64_t *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return sub_1D76612A0();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_15_5(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_15_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return sub_1D7660950();
}

void OUTLINED_FUNCTION_15_7()
{
  sub_1D75D9140(v0, v1, 0);
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  return sub_1D76612D0();
}

void OUTLINED_FUNCTION_15_13()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_80()
{
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_80_0@<X0>(__int16 a1@<W8>)
{
  *(_WORD *)uint64_t v1 = a1;
  *(unsigned char *)(v1 + 2) = 34;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return sub_1D76613F0();
}

uint64_t OUTLINED_FUNCTION_73()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_73_1(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
}

uint64_t OUTLINED_FUNCTION_6_0(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return 4;
}

void *OUTLINED_FUNCTION_6_3@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_beginAccess();
}

char *OUTLINED_FUNCTION_6_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

BOOL OUTLINED_FUNCTION_6_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

char *OUTLINED_FUNCTION_6_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_6_9(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

id OUTLINED_FUNCTION_6_10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return objc_msgSend(v9, a2, v10, 0, &a9);
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_44()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return sub_1D7661630();
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return sub_1D76610E0();
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return swift_isEscapingClosureAtFileLocation();
}

uint64_t OUTLINED_FUNCTION_43_3@<X0>(uint64_t a1@<X8>)
{
  return v2 + a1 + v3 * v1;
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return sub_1D75D49A4(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return sub_1D76616A0();
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return sub_1D7661140();
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return 0x6E6E75742D70725FLL;
}

uint64_t OUTLINED_FUNCTION_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15)
{
  long long v17 = v15[1];
  a13 = *v15;
  a14 = v17;
  a15 = *((void *)v15 + 4);
  return sub_1D759CC08((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_23_0(uint64_t a1)
{
  return a1 - 8;
}

void OUTLINED_FUNCTION_23_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, void (*a9)(void))
{
  sub_1D758D338(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return v0;
}

void OUTLINED_FUNCTION_23_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  sub_1D759423C(0, 0, 0, 0, 0, 0, 0, 0, a9, a10, a11, a12);
}

unint64_t OUTLINED_FUNCTION_200()
{
  return 0xD000000000000012;
}

void OUTLINED_FUNCTION_2_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return 0x726F727265;
}

uint64_t OUTLINED_FUNCTION_2_7(uint64_t a1, uint64_t a2)
{
  return sub_1D75B5D60(a1, a2, 0, 0, 0, 0, 1);
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return sub_1D7661250();
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return sub_1D75F05BC(v0, v1, v2, 2);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t OUTLINED_FUNCTION_137(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  return sub_1D76612D0();
}

uint64_t OUTLINED_FUNCTION_194()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_169_0()
{
  return v0;
}

void OUTLINED_FUNCTION_16_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(unsigned char *)(v13 + v15[9]) = v14;
  uint64_t v16 = (void *)(v13 + v15[10]);
  void *v16 = a11;
  v16[1] = a12;
  long long v17 = (void *)(v13 + v15[11]);
  *long long v17 = v12;
  v17[1] = a10;
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return v0;
}

double OUTLINED_FUNCTION_16_2()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

unint64_t OUTLINED_FUNCTION_16_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v23 - 128) = a22;
  *(void *)(v23 - 120) = a23;
  return sub_1D75B0D60();
}

void OUTLINED_FUNCTION_16_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return 0;
}

void OUTLINED_FUNCTION_16_7()
{
  *(void *)(v3 - 288) = v1;
  *(void *)(v3 - 272) = v2;
  *(void *)(v3 - 280) = v0;
}

uint64_t OUTLINED_FUNCTION_16_8(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_16_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(a1 + 16) = v12;
  a11 = v12;
  a12 = 0;
  a10 = a1 + 32;
  return sub_1D762C444((uint64_t)&a10, &a12, 8);
}

uint64_t OUTLINED_FUNCTION_16_10@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 232) = a1;
  sub_1D75D2148(v1 + 488, v1 + 360);
  return nullsub_1(v1 + 360);
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_159(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_1D758DBE8(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_159_0()
{
  return v0;
}

void OUTLINED_FUNCTION_144()
{
  sub_1D75C0C5C();
}

void *OUTLINED_FUNCTION_144_0(void *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_0Tm(a1, a2);
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return *(void *)(v0 + 384);
}

uint64_t OUTLINED_FUNCTION_129(uint64_t a1)
{
  *(void *)(v1 + 592) = a1;
  return v2 - 240;
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return v0;
}

char *OUTLINED_FUNCTION_10_4@<X0>(unint64_t a1@<X8>)
{
  return sub_1D75CFEF4((char *)(a1 > 1), v1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_62()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_192()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  uint64_t v2 = *(void *)(v0 - 280);
  unint64_t v3 = *(void *)(v0 - 296);
  return sub_1D75933F0(v2, v3);
}

void OUTLINED_FUNCTION_10_7()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return sub_1D76612D0();
}

void OUTLINED_FUNCTION_10_12(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D75921F8()
{
  uint64_t v0 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_221(v0, v1, &qword_1EBDEB4F8);
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_1D7596288(v1, v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return 0x6375646F7250;
}

void OUTLINED_FUNCTION_14_4(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(*(void *)(a12 + 120) + 8 * v12) = v13;
  *(void *)(*(void *)(a12 + 136) + 8 * v12) = a1;
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  uint64_t v3 = *(void *)(v1 - 224);
  return sub_1D758DBE8(v3, v0, (uint64_t *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_14_9()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_14_10(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return sub_1D7661020();
}

unint64_t OUTLINED_FUNCTION_14_11()
{
  return sub_1D75B0D60();
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  return v0;
}

void sub_1D7592380(void **a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason);
  OUTLINED_FUNCTION_21_1();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  sub_1D75923D4(v4);
}

void sub_1D75923D4(id a1)
{
  if (a1 != (id)5) {
    sub_1D758C350(a1);
  }
}

void sub_1D75923E4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
  *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream) = a1;
  id v3 = a1;
  sub_1D7592440(v2);
}

id sub_1D7592440(id result)
{
  if (result) {
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_closeStream_, result);
  }
  return result;
}

void sub_1D7592464(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
  *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession) = a1;
  id v5 = a1;
  id v3 = (void *)OUTLINED_FUNCTION_36();
  [v3 v4];
}

double OUTLINED_FUNCTION_72()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

void sub_1D759250C(void *a1)
{
  id v2 = a1;
  sub_1D758B47C();
}

uint64_t sub_1D7592558(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return sub_1D75D49A4(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_29_2()
{
  uint64_t v1 = *(void *)(v0 - 96);
  *(void *)(v0 - 104) = *(void *)(v0 - 104);
  *(void *)(v0 - 96) = v1;
}

void OUTLINED_FUNCTION_29_4(double a1)
{
  *(double *)(v1 - 128) = a1;
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return v0;
}

char *OUTLINED_FUNCTION_29_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return v0;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *double result = *a2;
  return result;
}

void *CUPairingIdentity.authTag(for:type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v16[2] = *(id *)MEMORY[0x1E4F143B8];
  if (MEMORY[0x1E4F94718])
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94718]), sel_init);
    uint64_t v6 = sub_1D75928B4(v3);
    if (v7 >> 60 == 15)
    {
      char v8 = 0;
    }
    else
    {
      uint64_t v10 = v6;
      unint64_t v11 = v7;
      char v8 = (void *)sub_1D765FEB0();
      sub_1D75941DC(v10, v11);
    }
    objc_msgSend(v5, sel_setDeviceIRKData_, v8);

    uint64_t v12 = (void *)sub_1D765FEB0();
    v16[0] = 0;
    id v13 = objc_msgSend(v5, sel_authTagForData_type_error_, v12, a3, v16);

    id v14 = v16[0];
    if (v13)
    {
      uint64_t v9 = (void *)sub_1D765FED0();
    }
    else
    {
      uint64_t v9 = v14;
      sub_1D765FD60();

      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)sub_1D75AF4C0();
    sub_1D7661650();
    sub_1D75B0D60();
    swift_allocError();
    sub_1D76616A0();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1D75928B4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_altIRK);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1D765FED0();

  return v3;
}

void sub_1D7592918(uint64_t a1, unint64_t a2, char a3, void (*a4)(unsigned char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    id v21 = (id)a1;
    swift_willThrow();
    id v22 = (id)a1;
LABEL_35:
    v45[0] = v22;
    sub_1D7608488((uint64_t)v45);
    sub_1D7608494((uint64_t)v45, (uint64_t)v44);
    id v37 = v22;
    a4(v44);

    return;
  }
  sub_1D75934F4(a1, a2);
  if (qword_1EBDEBD18 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBDF39C8;
  unint64_t v14 = unk_1EBDF39D0;
  sub_1D75934F4(qword_1EBDF39C8, unk_1EBDF39D0);
  sub_1D7593208();
  char v16 = v15;
  sub_1D75933F0(v13, v14);
  if ((v16 & 1) == 0)
  {
    uint64_t v46 = MEMORY[0x1E4FBB1A0];
    unint64_t v23 = 0xD00000000000001ALL;
    uint64_t v24 = "Message signature mismatch";
LABEL_34:
    v45[0] = v23;
    v45[1] = (unint64_t)(v24 - 32) | 0x8000000000000000;
    char v47 = 1;
    sub_1D7592D84();
    id v22 = (id)swift_allocError();
    uint64_t v35 = v34;
    v44[0] = 2;
    Swift::String v36 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v44);
    sub_1D7592DD0((uint64_t)v45);
    *(unsigned char *)uint64_t v35 = 2;
    *(Swift::String *)(v35 + 8) = v36;
    *(_OWORD *)(v35 + 24) = 0u;
    *(_OWORD *)(v35 + 40) = 0u;
    *(void *)(v35 + 56) = 0;
    swift_willThrow();
    sub_1D75D9140((id)a1, a2, 0);
    goto LABEL_35;
  }
  unint64_t v17 = a2 >> 62;
  uint64_t v18 = sub_1D765FF00();
  uint64_t v19 = v18;
  uint64_t v20 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v20 = (int)a1;
      break;
    case 2uLL:
      uint64_t v20 = *(void *)(a1 + 16);
      break;
    default:
      break;
  }
  BOOL v25 = __OFADD__(v20, v18);
  uint64_t v26 = v20 + v18;
  if (v25)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return;
  }
  uint64_t v27 = v26 + 2;
  if (__OFADD__(v26, 2)) {
    goto LABEL_48;
  }
  uint64_t v28 = BYTE6(a2);
  switch(a2 >> 62)
  {
    case 1uLL:
      if (v26 >= (int)a1) {
        goto LABEL_27;
      }
      goto LABEL_33;
    case 2uLL:
      if (v26 < *(void *)(a1 + 16)) {
        goto LABEL_33;
      }
      if (v17 == 2) {
        uint64_t v29 = *(void *)(a1 + 24);
      }
      else {
LABEL_27:
      }
        uint64_t v29 = a1 >> 32;
      goto LABEL_28;
    case 3uLL:
      if (v26 < 0) {
        goto LABEL_33;
      }
      if (v27 > 0 || __OFSUB__(v26, v27)) {
        goto LABEL_33;
      }
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v28 = 0;
      goto LABEL_41;
    default:
      if (v26 < 0) {
        goto LABEL_33;
      }
      uint64_t v29 = BYTE6(a2);
LABEL_28:
      if (v26 >= v27 || v29 < v27)
      {
LABEL_33:
        uint64_t v46 = MEMORY[0x1E4FBB1A0];
        unint64_t v23 = 0xD00000000000001CLL;
        uint64_t v24 = "Unable to get message length";
        goto LABEL_34;
      }
      if (v17)
      {
        if (v17 == 1)
        {
          if (a1 >> 32 < (int)a1) {
            goto LABEL_49;
          }
          swift_retain();
          unsigned __int16 v38 = sub_1D75F05BC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v19);
          sub_1D75D9140((id)a1, a2, 0);
        }
        else
        {
          uint64_t v40 = *(void *)(a1 + 16);
          uint64_t v39 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          unsigned __int16 v38 = sub_1D75F05BC(v40, v39, a2 & 0x3FFFFFFFFFFFFFFFLL, v19);
          swift_release();
          swift_release();
        }
        sub_1D75D9140((id)a1, a2, 0);
      }
      else
      {
        uint64_t v32 = a2 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = a1;
LABEL_41:
        unsigned __int16 v38 = sub_1D75F04E4(v31, v32, v28, v19);
        sub_1D75D9140((id)a1, a2, 0);
      }
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = a4;
      *(void *)(v41 + 24) = a5;
      uint64_t v42 = *(void (**)(void, void, void (*)(void *, unint64_t, char), uint64_t, uint64_t, uint64_t))(a8 + 16);
      swift_retain();
      v42(v38, v38, sub_1D76084FC, v41, a7, a8);
      swift_release();
      break;
  }
}

unint64_t sub_1D7592D84()
{
  unint64_t result = qword_1EBDEBBC0;
  if (!qword_1EBDEBBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBBC0);
  }
  return result;
}

uint64_t sub_1D7592DD0(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ControlChannelConnectionError.Message(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 32);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 == 1) {
    return __swift_destroy_boxed_opaque_existential_0Tm(result);
  }
  if (!v1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::String __swiftcall ControlChannelConnectionError.Message.format(code:)(RemotePairingDevice::ControlChannelConnectionError::Code code)
{
  uint64_t v2 = *(unsigned __int8 *)code;
  sub_1D7593108(v1, (uint64_t)v12);
  if (v13 && v13 == 1)
  {
    unint64_t v3 = 0x206E776F6E6B6E55;
    sub_1D758CB98(v12, v11);
    unint64_t v4 = 0xED0000726F727265;
    switch(v2)
    {
      case 1:
        unint64_t v4 = 0x80000001D7673700;
        unint64_t v3 = 0xD000000000000014;
        break;
      case 2:
        unint64_t v3 = 0xD000000000000019;
        id v5 = "Invalid message from peer";
        goto LABEL_11;
      case 3:
        unint64_t v3 = 0xD000000000000015;
        id v5 = "Unsupported operation";
        goto LABEL_11;
      case 4:
        break;
      case 5:
        unint64_t v3 = 0xD000000000000021;
        id v5 = "Unsupported wire protocol version";
LABEL_11:
        unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
        break;
      default:
        unint64_t v3 = 0x726F70736E617254;
        unint64_t v4 = 0xEF726F7272652074;
        break;
    }
    unint64_t v9 = v3;
    unint64_t v10 = v4;
    swift_bridgeObjectRetain();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D758DD0C((uint64_t)v11, (uint64_t)&v9);
    sub_1D7660B60();
    unint64_t v9 = v3;
    unint64_t v10 = v4;
    swift_bridgeObjectRetain();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  }
  uint64_t v6 = OUTLINED_FUNCTION_36();
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1D7593108(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ControlChannelConnectionError.Message(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    char v6 = 1;
LABEL_8:
    *(unsigned char *)(a1 + 32) = v6;
    return a1;
  }
  if (v3)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    char v6 = *(unsigned char *)(a2 + 32);
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 32) = 0;
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1D7593208()
{
  OUTLINED_FUNCTION_97();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_1D765FF20();
  OUTLINED_FUNCTION_0_5();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1D75934F4(v7, v5);
  sub_1D765FE00();
  uint64_t v11 = sub_1D75933F0(v7, v5);
  MEMORY[0x1F4188790](v11);
  sub_1D75934F4(v3, v1);
  sub_1D765FE00();
  sub_1D75933F0(v3, v1);
  sub_1D759365C(&qword_1EBDEADF0, MEMORY[0x1F418B900]);
  while (1)
  {
    sub_1D7661010();
    if (v18)
    {
      char v13 = *(void (**)(void))(v9 + 8);
      OUTLINED_FUNCTION_10_9();
      v13();
      sub_1D7661010();
      OUTLINED_FUNCTION_10_9();
      v13();
      goto LABEL_8;
    }
    sub_1D7661010();
    if (v16) {
      break;
    }
    if (v17 != v15)
    {
      uint64_t v12 = *(void (**)(void))(v9 + 8);
      OUTLINED_FUNCTION_10_9();
      v12();
      OUTLINED_FUNCTION_10_9();
      v12();
      goto LABEL_8;
    }
  }
  unint64_t v14 = *(void (**)(void))(v9 + 8);
  OUTLINED_FUNCTION_10_9();
  v14();
  OUTLINED_FUNCTION_10_9();
  v14();
LABEL_8:
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D75933F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46()
{
  return sub_1D76613F0();
}

uint64_t OUTLINED_FUNCTION_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return sub_1D75933F0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return v0;
}

uint64_t sub_1D75934F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_13_1()
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 32) = *(unsigned char *)(v1 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_13_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1D75A74B4(v19);
  return sub_1D75AC3B4(a18, v18);
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return sub_1D76612D0();
}

uint64_t OUTLINED_FUNCTION_13_7@<X0>(uint64_t a1@<X8>)
{
  return sub_1D75940A4(a1);
}

uint64_t OUTLINED_FUNCTION_13_9(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return sub_1D7661020();
}

BOOL OUTLINED_FUNCTION_13_10@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1D759365C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75936A4(uint64_t a1)
{
  return sub_1D75936B4(a1, *(void *)(v1 + 32), *(void (**)(void *))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D75936B4(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1D7608494(a1, (uint64_t)v32);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9474D50](a2 + 16);
  if (result)
  {
    uint64_t v12 = result;
    sub_1D7608494((uint64_t)v32, (uint64_t)v31);
    if (sub_1D7608508((uint64_t)v31) == 1)
    {
      uint64_t v13 = *(void *)nullsub_1(v31);
      sub_1D7608494((uint64_t)v32, (uint64_t)v30);
      unint64_t v14 = *(void **)nullsub_1(v30);
      id v15 = v14;
      os_log_type_t v16 = sub_1D7660DB0();
      if (qword_1EBDEBCC8 != -1) {
        swift_once();
      }
      char v17 = qword_1EBDEBCC0;
      if (os_log_type_enabled((os_log_t)qword_1EBDEBCC0, v16))
      {
        sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593BD4);
        swift_unknownObjectRetain();
        sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593BD4);
        swift_unknownObjectRetain();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        __dst[0] = v27;
        *(_DWORD *)uint64_t v18 = 136446466;
        v28[0] = v12;
        uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)(a6 + 8) + 8))(a5);
        sub_1D758DBE8(v19, v20, __dst);
        sub_1D7661020();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        id v21 = v14;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v22 = sub_1D7660B60();
        v28[0] = sub_1D758DBE8(v22, v23, __dst);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
        sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
        _os_log_impl(&dword_1D757C000, v17, v16, "%{public}s: received error reading message: %s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v27, -1, -1);
        MEMORY[0x1D9474C60](v18, -1, -1);
      }
      __dst[0] = v13;
      sub_1D75FDB84((uint64_t)__dst);
      sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v28);
      id v24 = v14;
      a3(v28);
      sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
      swift_unknownObjectRelease();
    }
    else
    {
      BOOL v25 = (const void *)nullsub_1(v31);
      memcpy(__dst, v25, 0x92uLL);
      sub_1D7608584((uint64_t)__dst);
      sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v28);
      sub_1D7608494((uint64_t)v32, (uint64_t)v30);
      uint64_t v26 = nullsub_1(v30);
      sub_1D7657C54(v26, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      a3(v28);
      JSONDataBasedControlChannelTransport.startReceivingMessages(usingEventHandler:)(a3, a4, a5, a6);
      swift_unknownObjectRelease();
    }
    return sub_1D7608510((uint64_t)v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
  }
  return result;
}

void sub_1D7593AE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, char a20)
{
  if (a20)
  {
  }
  else
  {
    sub_1D7607558(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24,
      (uint64_t (*)(void))sub_1D75D1FE8,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
}

id sub_1D7593BD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, char a20)
{
  if ((a20 & 1) == 0) {
    return (id)sub_1D7607558(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704,
  }
                 (uint64_t (*)(void))sub_1D75D480C,
                 (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  return a1;
}

uint64_t sub_1D7593CC0(uint64_t a1)
{
  return sub_1D7590EC8(a1);
}

uint64_t sub_1D7593CC8()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void *)(v1 + 248);
  *(void *)(v1 + 248) = v2;
  *(void *)(v1 + 256) = v0;
  return sub_1D75940A4(v3);
}

uint64_t sub_1D7593D0C()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void *)(v1 + 264);
  *(void *)(v1 + 264) = v2;
  *(void *)(v1 + 272) = v0;
  return sub_1D75940A4(v3);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return v0;
}

void OUTLINED_FUNCTION_24_2()
{
  *(unsigned char *)uint64_t v2 = v4;
  *(void *)(v2 + 8) = v0;
  *(void *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(void *)(v2 + 56) = 0;
  sub_1D759250C(v1);
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return sub_1D7661490();
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D75EF138(v9, (uint64_t)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
}

void *OUTLINED_FUNCTION_24_8(void *a1)
{
  return __swift_project_boxed_opaque_existential_0Tm(a1, v1);
}

void OUTLINED_FUNCTION_108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  sub_1D758D424(v9, v10, v11, v12, v13, v14, a7, a8, a9);
}

uint64_t ControlChannelConnection.__deallocating_deinit()
{
  ControlChannelConnection.deinit();
  OUTLINED_FUNCTION_67();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x1F4186488](v0, v2, v3);
}

uint64_t ControlChannelConnection.deinit()
{
  __n128 v1 = OUTLINED_FUNCTION_101();
  sub_1D759423C(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v10, v11);

  sub_1D758D424(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168), (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 192);

  sub_1D75940A4(*(void *)(v0 + 248));
  sub_1D75940A4(*(void *)(v0 + 264));
  sub_1D75940A4(*(void *)(v0 + 280));
  sub_1D75940A4(*(void *)(v0 + 296));
  sub_1D75D505C(v0 + 320, (uint64_t *)&unk_1EBDEB500);
  sub_1D75D505C(v0 + 360, &qword_1EBDEB4F8);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 400);
  sub_1D75D505C(v0 + 440, &qword_1EBDEAC90);
  sub_1D75D505C(v0 + 480, qword_1EBDEC0B8);

  sub_1D75940A4(*(void *)(v0 + 544));
  uint64_t v12 = v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_startedAt;
  sub_1D76609A0();
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t))(v13 + 8))(v12);
  swift_bridgeObjectRelease();
  sub_1D75941DC(*(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData), *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8));
  swift_unknownObjectRelease();

  sub_1D75923D4(*(id *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason));
  return v0;
}

uint64_t sub_1D75940A4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1D75940B4(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_6();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_34()
{
  return v0;
}

unsigned char *OUTLINED_FUNCTION_34_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1D75DA888((unsigned char *)(v13 - 65), a12, v12);
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return sub_1D7661490();
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return sub_1D7661690();
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return sub_1D7661490();
}

uint64_t sub_1D75941DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D75933F0(a1, a2);
  }
  return a1;
}

void OUTLINED_FUNCTION_92()
{
  sub_1D75D52B8(0x303030303030, 0xE600000000000000, v0);
}

uint64_t OUTLINED_FUNCTION_92_0(uint64_t a1, unint64_t a2)
{
  return sub_1D758DBE8(a1, a2, (uint64_t *)(v2 - 192));
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return v0;
}

void sub_1D759423C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75941DC(a11, a12);
  }
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)__n128 result = v2;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FetchNetworkPairingSessionIDResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t RemotePairingError.errorCode.getter()
{
  return *(void *)v0;
}

uint64_t RemotePairingError.errorUserInfo.getter()
{
  return swift_bridgeObjectRetain();
}

id RemotePairingCopyRemoteUnlockDeviceKeyForTunnel(void *a1, uint64_t a2)
{
  id v3 = a1;
  long long v4 = objc_alloc_init(_TtC19RemotePairingDevice42RemotePairingDeviceTunnelServiceConnection);
  id v5 = [(RemotePairingDeviceTunnelServiceConnection *)v4 copyRemoteUnlockDeviceKeyForTunnelWithTunnelName:v3 error:a2];

  return v5;
}

uint64_t RemotePairingGetCurrentWireProtocolVersion()
{
  uint64_t v0 = +[ControlChannelConnectionWireProtocolVersion current];
  uint64_t v1 = [v0 rawValue];

  return v1;
}

uint64_t _RPIsAppleInternal()
{
  return os_variant_allows_internal_security_policies();
}

uint64_t _RPIsDarwinOS()
{
  return os_variant_is_darwinos();
}

id _RPTextToMACAddress(void *a1)
{
  __int16 v4 = 0;
  int v3 = 0;
  [a1 UTF8String];
  if (TextToHardwareAddress())
  {
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = [MEMORY[0x1E4F1C9B8] dataWithBytes:&v3 length:6];
  }
  return v1;
}

BOOL InterfaceIndexCorrespondsToAppleNCMInterface(uint64_t a1)
{
  kern_return_t ParentEntry;
  CFNumberRef CFProperty;
  CFTypeID TypeID;
  BOOL v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  io_iterator_t existing;
  __int16 valuePtr;
  io_registry_entry_t parent;
  uint8_t buf[4];
  const char *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  char *v28;
  __int16 v29;
  BOOL v30;
  char bsdName[8];
  uint64_t v32;
  char v33;
  uint8_t v34[4];
  uint64_t v35;
  uint8_t v36[4];
  uint64_t v37;
  uint8_t v38[4];
  void v39[3];

  *(void *)((char *)&v39[1] + 4) = *MEMORY[0x1E4F143B8];
  int v2 = get_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    InterfaceIndexCorrespondsToAppleNCMInterface_cold_8();
  }

  if (a1 < 0)
  {
    uint64_t v6 = get_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_1();
    }
    goto LABEL_19;
  }
  *(void *)bsdName = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  if (!if_indextoname(a1, bsdName))
  {
    uint64_t v6 = get_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_2();
    }
    goto LABEL_19;
  }
  mach_port_t v3 = *MEMORY[0x1E4F2EF00];
  CFDictionaryRef v4 = IOBSDNameMatching(*MEMORY[0x1E4F2EF00], 0, bsdName);
  if (!v4)
  {
    uint64_t v6 = get_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_3();
    }
    goto LABEL_19;
  }
  existing = 0;
  if (IOServiceGetMatchingServices(v3, v4, &existing)) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = existing == 0;
  }
  if (v5)
  {
    uint64_t v6 = get_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_7();
    }
LABEL_19:
    BOOL v7 = 0;
    goto LABEL_20;
  }
  io_object_t v9 = IOIteratorNext(existing);
  if (v9)
  {
    io_registry_entry_t v10 = v9;
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    while (1)
    {
      parent = 0;
      unint64_t v12 = get_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
        InterfaceIndexCorrespondsToAppleNCMInterface_cold_6(v38, v39, v12);
      }

      ParentEntry = IORegistryEntryGetParentEntry(v10, "IOService", &parent);
      if (ParentEntry || !parent) {
        break;
      }
      if (!IOObjectConformsTo(parent, "AppleUSBNCMData"))
      {
        char v17 = get_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG)) {
          InterfaceIndexCorrespondsToAppleNCMInterface_cold_4(v36, &v37, v17);
        }
LABEL_39:

        BOOL v7 = 0;
        goto LABEL_40;
      }
      CFProperty = (const __CFNumber *)IORegistryEntryCreateCFProperty(parent, @"idVendor", v11, 0);
      if (CFProperty && (TypeID = CFNumberGetTypeID(), TypeID == CFGetTypeID(CFProperty)))
      {
        valuePtr = 0;
        CFNumberGetValue(CFProperty, kCFNumberSInt16Type, &valuePtr);
        os_log_type_t v16 = valuePtr == 1452;
      }
      else
      {
        uint64_t v18 = get_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
          InterfaceIndexCorrespondsToAppleNCMInterface_cold_5(v34, &v35, v18);
        }

        os_log_type_t v16 = 0;
        BOOL v7 = 0;
        if (!CFProperty) {
          goto LABEL_40;
        }
      }
      CFRelease(CFProperty);
      BOOL v7 = v16;
LABEL_40:
      if (parent) {
        IOObjectRelease(parent);
      }
      uint64_t v19 = get_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136315394;
        id v24 = "ServiceHasAppleNCMParent";
        BOOL v25 = 1024;
        LODWORD(v26) = v7;
        _os_log_debug_impl(&dword_1D757C000, v19, OS_LOG_TYPE_DEBUG, "%s The end result of checking the parent was: %d", buf, 0x12u);
      }

      IOObjectRelease(v10);
      if (!v7)
      {
        io_registry_entry_t v10 = IOIteratorNext(existing);
        if (v10) {
          continue;
        }
      }
      goto LABEL_48;
    }
    char v17 = get_log();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      id v24 = "ServiceHasAppleNCMParent";
      BOOL v25 = 1024;
      LODWORD(v26) = ParentEntry;
      _os_log_error_impl(&dword_1D757C000, v17, OS_LOG_TYPE_ERROR, "%s IORegistryEntryGetParentEntry failed. Result: %d", buf, 0x12u);
    }
    goto LABEL_39;
  }
  BOOL v7 = 0;
LABEL_48:
  IOObjectRelease(existing);
  uint64_t v6 = get_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315906;
    id v24 = "InterfaceIndexCorrespondsToAppleNCMInterface";
    BOOL v25 = 2048;
    uint64_t v26 = a1;
    uint64_t v27 = 2080;
    uint64_t v28 = bsdName;
    uint64_t v29 = 1024;
    uint64_t v30 = v7;
    _os_log_debug_impl(&dword_1D757C000, v6, OS_LOG_TYPE_DEBUG, "%s The end result for interface index %ld/name %s was: %d", buf, 0x26u);
  }
LABEL_20:

  return v7;
}

id get_log()
{
  if (get_log_onceToken[0] != -1) {
    dispatch_once(get_log_onceToken, &__block_literal_global);
  }
  uint64_t v0 = (void *)get_log_log;
  return v0;
}

uint64_t __get_log_block_invoke()
{
  get_log_log = (uint64_t)os_log_create("com.apple.dt.remotepairing", "networkinterfaceutils");
  return MEMORY[0x1F41817F8]();
}

BOOL remotepairing_delete_pair_records(void *a1)
{
  int v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  id v6 = 0;
  [(RemotePairingDevicePairingServiceConnection *)v2 deleteAllPairingRecordsAndReturnError:&v6];
  id v3 = v6;
  CFDictionaryRef v4 = v3;
  if (a1 && v3) {
    *a1 = v3;
  }

  return v4 == 0;
}

BOOL remotepairing_delete_pair_record(void *a1, void *a2)
{
  id v3 = a1;
  CFDictionaryRef v4 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  id v8 = 0;
  [(RemotePairingDevicePairingServiceConnection *)v4 deletePairingRecordForHostWithIdentifier:v3 error:&v8];

  id v5 = v8;
  id v6 = v5;
  if (a2 && v5) {
    *a2 = v5;
  }

  return v6 == 0;
}

id RemotePairingGetTrustedHostInfoAndReturnError(uint64_t a1)
{
  int v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  id v3 = [(RemotePairingDevicePairingServiceConnection *)v2 trustedHostInfoAndReturnError:a1];

  return v3;
}

BOOL remotepairingAllowPromptlessPairing(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x3032000000;
  char v17 = __Block_byref_object_copy_;
  uint64_t v18 = __Block_byref_object_dispose_;
  id v19 = 0;
  id v6 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  BOOL v7 = dispatch_group_create();
  dispatch_group_enter(v7);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  _OWORD v11[2] = __remotepairingAllowPromptlessPairing_block_invoke;
  v11[3] = &unk_1E6A7BE60;
  uint64_t v13 = &v14;
  id v8 = v7;
  unint64_t v12 = v8;
  [(RemotePairingDevicePairingServiceConnection *)v6 allowPromptlessPairingForAutomation:a1 forBUID:v5 withQueue:0 completion:v11];
  dispatch_group_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
  io_object_t v9 = (void *)v15[5];
  if (a3 && v9) {
    *a3 = v9;
  }

  _Block_object_dispose(&v14, 8);
  return v9 == 0;
}

void sub_1D7594C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __remotepairingAllowPromptlessPairing_block_invoke(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t RemotePairingGetUSBConnectedHostTrustState(uint64_t a1)
{
  int v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  uint64_t v3 = [(RemotePairingDevicePairingServiceConnection *)v2 getUSBConectedHostTrustStateWithError:a1];

  return v3;
}

void createWirelessPairingSession(void *a1, void *a2)
{
}

void createWirelessPairingSessionWithPinHandler(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  id v8 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __createWirelessPairingSessionWithPinHandler_block_invoke;
  aBlock[3] = &unk_1E6A7BE88;
  id v12 = v5;
  id v9 = v5;
  io_registry_entry_t v10 = _Block_copy(aBlock);
  [(RemotePairingDevicePairingServiceConnection *)v8 initiateWirelessPairingSessionWithQueue:v7 completionHandler:v10 customPinHandler:v6];
}

void __createWirelessPairingSessionWithPinHandler_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v10)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = [[RPWirelessPairingSession alloc] initWithUnderlyingObject:v10];
    (*(void (**)(uint64_t, RPWirelessPairingSession *, void))(v6 + 16))(v6, v7, 0);
  }
  else if (v5)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "void createWirelessPairingSessionWithPinHandler(__strong dispatch_queue_t _Nonnull, void (^__strong _Nonnull)(RPWirelessPairingSession * _Nullable __strong, NSError * _Nullable __strong), void (^ _Nullable __strong)(NSString * _Nullable __strong, NSString * _Nullable __strong))_block_invoke");
    [v8 handleFailureInFunction:v9 file:@"PairingManagement.m" lineNumber:114 description:@"Bug in remotepairing: Neither error nor session was returned"];
  }
}

uint64_t sub_1D75950F0()
{
  return *(void *)(v0 + 16);
}

uint64_t _ManagedOpaqueCFTypeWrapper.__allocating_init(retainedValue:)()
{
  uint64_t result = OUTLINED_FUNCTION_0_3();
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t _ManagedOpaqueCFTypeWrapper.init(retainedValue:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t _ManagedOpaqueCFTypeWrapper.__allocating_init(unretainedValue:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_3();
  *(void *)(v1 + 16) = v0;
  swift_unknownObjectRetain();
  return v1;
}

uint64_t _ManagedOpaqueCFTypeWrapper.init(unretainedValue:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  swift_unknownObjectRetain();
  return v1;
}

uint64_t _ManagedOpaqueCFTypeWrapper.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t _ManagedOpaqueCFTypeWrapper.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for _ManagedOpaqueCFTypeWrapper()
{
  return self;
}

uint64_t method lookup function for _ManagedOpaqueCFTypeWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _ManagedOpaqueCFTypeWrapper);
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.asOpaquePointer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.__allocating_init(retainedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.__allocating_init(unretainedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D759525C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D759527C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for nw_protocol(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
}

void type metadata accessor for RPUSBConnectedHostTrustState(uint64_t a1)
{
}

BOOL sub_1D7595330(uint64_t *a1, uint64_t *a2)
{
  return sub_1D75B9578(*a1, *a2);
}

uint64_t sub_1D759533C()
{
  return sub_1D75954F0(*v0, MEMORY[0x1F418C118]);
}

uint64_t sub_1D7595364(uint64_t a1, id *a2)
{
  uint64_t result = sub_1D7660AF0();
  *a2 = 0;
  return result;
}

uint64_t sub_1D75953E0(uint64_t a1, id *a2)
{
  char v3 = sub_1D7660B00();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D7595460@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D7595488();
  *a1 = result;
  return result;
}

uint64_t sub_1D7595488()
{
  sub_1D7660B10();
  uint64_t v0 = sub_1D7660AE0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D75954C0()
{
  return sub_1D75954F0(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1D75954F0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_1D7660B10();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D7595530()
{
  return sub_1D7595538();
}

uint64_t sub_1D7595538()
{
  sub_1D7660B10();
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D759558C()
{
  return sub_1D75B6B90();
}

void sub_1D7595594(uint64_t a1@<X8>)
{
  sub_1D75955C8();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_1D75955D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

void sub_1D75955FC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1D7595608@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1D7595634()
{
  return sub_1D7660000();
}

uint64_t sub_1D7595680()
{
  return sub_1D765FFF0();
}

uint64_t sub_1D75956D8()
{
  return sub_1D7661760();
}

uint64_t sub_1D7595740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75E031C();
  *a1 = result;
  return result;
}

uint64_t sub_1D7595768()
{
  return sub_1D75B9584();
}

uint64_t sub_1D7595774()
{
  return sub_1D765FFE0() & 1;
}

uint64_t sub_1D75957D8()
{
  return sub_1D7595868((unint64_t *)&qword_1EA82C190, type metadata accessor for CFString);
}

uint64_t sub_1D7595820()
{
  return sub_1D7595868(&qword_1EA82ACB0, type metadata accessor for CFString);
}

uint64_t sub_1D7595868(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1D75958B0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D75958BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1D7660AE0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D7595904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75B6C04();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CFNumber(uint64_t a1)
{
}

void type metadata accessor for CFUUID(uint64_t a1)
{
}

void type metadata accessor for RPTrustedHostInfoKey(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1D7595978(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D7595998(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for nw_frame_array_s(uint64_t a1)
{
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t sub_1D75959DC(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 272))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D7595A30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void type metadata accessor for nw_protocol_callbacks(uint64_t a1)
{
}

__n128 __swift_memcpy40_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1D7595AF0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D7595B10(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void type metadata accessor for nw_protocol_identifier(uint64_t a1)
{
}

uint64_t sub_1D7595B58(uint64_t a1)
{
  uint64_t v2 = sub_1D7595868((unint64_t *)&qword_1EA82AEE0, type metadata accessor for RPTrustedHostInfoKey);
  uint64_t v3 = sub_1D7595868(&qword_1EA82AEE8, type metadata accessor for RPTrustedHostInfoKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D7595C14()
{
  return sub_1D7595868(&qword_1EA82AEC8, type metadata accessor for RPTrustedHostInfoKey);
}

uint64_t sub_1D7595C5C()
{
  return sub_1D7595868(&qword_1EA82AED0, type metadata accessor for RPTrustedHostInfoKey);
}

uint64_t sub_1D7595CA4()
{
  return sub_1D7595868(&qword_1EA82AED8, type metadata accessor for RPTrustedHostInfoKey);
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_1D7595CF8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D7595D18(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for nw_protocol_message_properties(uint64_t a1)
{
}

void type metadata accessor for nw_protocol_info_type_t(uint64_t a1)
{
}

void type metadata accessor for nw_protocol_notification_type_t(uint64_t a1)
{
}

void type metadata accessor for nw_protocol_mapping_t(uint64_t a1)
{
}

void type metadata accessor for nw_protocol_level_t(uint64_t a1)
{
}

void sub_1D7595DA4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t static Defaults.hasBeenPaired.getter()
{
  if (qword_1EA82A8D0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  uint64_t v0 = qword_1EA82B040;
  uint64_t v1 = *(void *)algn_1EA82B048;
  uint64_t v2 = word_1EA82B050 | (HIBYTE(word_1EA82B050) << 8);
  swift_bridgeObjectRetain();
  sub_1D7595E88(v0, v1, v2);
  OUTLINED_FUNCTION_9_0();
  return v2;
}

uint64_t sub_1D7595E88(uint64_t a1, uint64_t a2, __int16 a3)
{
  unsigned __int8 v3 = HIBYTE(a3);
  if (a3)
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v4 = &qword_1EBDEAEC0;
  }
  id v5 = (id)*v4;
  uint64_t v6 = (void *)sub_1D7660AE0();
  id v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  unsigned int v8 = v3;
  unsigned int v9 = sub_1D759BFD4((uint64_t)v11);
  sub_1D758C5F8((uint64_t)v11, &qword_1EBDEC4D0);
  if (v9 == 3) {
    return v8;
  }
  else {
    return v9;
  }
}

uint64_t sub_1D7595FCC()
{
  return sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C068);
}

uint64_t sub_1D7595FE4()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EBDEAEC0;
  }
  id v2 = (id)*v1;
  unsigned __int8 v3 = (void *)sub_1D7660AE0();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_32();
  }
  uint64_t v5 = sub_1D759C114((uint64_t)v9);
  uint64_t v7 = v6;
  sub_1D758C5F8((uint64_t)v9, &qword_1EBDEC4D0);
  if (v7 == 1)
  {
    uint64_t v5 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1D7596130(uint64_t (*a1)(unsigned char *, __n128))
{
  if (*(unsigned char *)(v1 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    unsigned __int8 v3 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    unsigned __int8 v3 = &qword_1EBDEAEC0;
  }
  id v4 = (id)*v3;
  uint64_t v5 = (void *)sub_1D7660AE0();
  id v6 = objc_msgSend(v4, sel_valueForKey_, v5);

  if (v6)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    v7.n128_f64[0] = OUTLINED_FUNCTION_32();
  }
  uint64_t v8 = a1(v12, v7);
  __int16 v10 = v9;
  sub_1D758C5F8((uint64_t)v12, &qword_1EBDEC4D0);
  if ((v10 & 0x100) != 0) {
    return *(void *)(v1 + 24);
  }
  return v8;
}

uint64_t sub_1D7596288(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_1EBDEAEC0;
  }
  id v6 = (id)*v5;
  __n128 v7 = (void *)sub_1D7660AE0();
  id v8 = objc_msgSend(v6, sel_valueForKey_, v7);

  if (v8)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_32();
  }
  uint64_t v9 = sub_1D7657DA0((uint64_t)v13);
  char v11 = v10;
  sub_1D758C5F8((uint64_t)v13, &qword_1EBDEC4D0);
  if (v11) {
    return a4;
  }
  else {
    return v9;
  }
}

uint64_t sub_1D75963C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_1EBDEAEC0;
  }
  id v6 = (id)*v5;
  __n128 v7 = (void *)sub_1D7660AE0();
  id v8 = objc_msgSend(v6, sel_valueForKey_, v7);

  if (v8)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  uint64_t v9 = sub_1D759B494((uint64_t)v11);
  sub_1D758C5F8((uint64_t)v11, &qword_1EBDEC4D0);
  if (v9) {
    return v9;
  }
  swift_bridgeObjectRetain();
  return a4;
}

uint64_t sub_1D7596510()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EBDEAEC0;
  }
  id v2 = (id)*v1;
  unsigned __int8 v3 = (void *)sub_1D7660AE0();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  uint64_t v5 = sub_1D7657DAC((uint64_t)v9);
  uint64_t v7 = v6;
  sub_1D758C5F8((uint64_t)v9, &qword_1EBDEC4D0);
  if (!v7)
  {
    uint64_t v5 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
  }
  return v5;
}

id sub_1D759665C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    id v4 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    id v4 = &qword_1EBDEAEC0;
  }
  id v5 = (id)*v4;
  uint64_t v6 = (void *)sub_1D7660AE0();
  id v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  id v8 = sub_1D759D0A8((uint64_t)v11);
  sub_1D758C5F8((uint64_t)v11, &qword_1EBDEC4D0);
  if (v8) {
    return v8;
  }
  return a4;
}

uint64_t DefaultsBackedProperty.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_30();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = sub_1D7661000();
  OUTLINED_FUNCTION_1_1();
  uint64_t v22 = v7;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v22 - v9;
  id v11 = sub_1D759CA54();
  id v12 = (void *)sub_1D7660AE0();
  id v13 = objc_msgSend(v11, sel_valueForKey_, v12);

  if (v13)
  {
    sub_1D7661070();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  (*(void (**)(_OWORD *, uint64_t))(*(void *)(a1 + 24) + 16))(v24, v5);
  sub_1D758C5F8((uint64_t)v24, &qword_1EBDEC4D0);
  OUTLINED_FUNCTION_28();
  v14();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5) == 1)
  {
    OUTLINED_FUNCTION_16();
    (*(void (**)(uint64_t))(v15 + 16))(v23);
    uint64_t v16 = OUTLINED_FUNCTION_24();
    v17(v16);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v6);
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_24();
    v20(v19);
    OUTLINED_FUNCTION_16();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v23, v10, v5);
  }
}

uint64_t static Defaults.hasBeenPaired.setter(char a1)
{
  if (qword_1EA82A8D0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  sub_1D7596A7C(a1);
  return swift_endAccess();
}

void sub_1D7596A7C(char a1)
{
  *((void *)&v13 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B3F8);
  uint64_t v14 = &protocol witness table for A?;
  LOBYTE(v12) = a1;
  if (*(unsigned char *)__swift_project_boxed_opaque_existential_0Tm(&v12, *((uint64_t *)&v13 + 1)) == 2)
  {
    if (*(unsigned char *)(v1 + 16))
    {
      if (qword_1EA82A9B0 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_1EA82B320;
    }
    else
    {
      if (qword_1EBDEAEC8 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_1EBDEAEC0;
    }
    id v5 = (id)*v3;
    uint64_t v6 = (void *)sub_1D7660AE0();
    objc_msgSend(v5, sel_removeObjectForKey_, v6);

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
    if (*(unsigned char *)(v1 + 16))
    {
      if (qword_1EA82A9B0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_1EA82B320;
    }
    else
    {
      if (qword_1EBDEAEC8 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_1EBDEAEC0;
    }
    uint64_t v7 = (void *)*v4;
    if (a1 == 2)
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    else
    {
      *((void *)&v13 + 1) = MEMORY[0x1E4FBB390];
      LOBYTE(v12) = a1 & 1;
    }
    sub_1D75908F0((uint64_t)&v12, (uint64_t)&v11);
    id v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
    uint64_t v9 = sub_1D76615E0();
    sub_1D758C5F8((uint64_t)&v12, &qword_1EBDEC4D0);
    char v10 = (void *)sub_1D7660AE0();
    objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

    swift_unknownObjectRelease();
  }
}

void sub_1D7596CCC(char a1)
{
  char v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v13, (uint64_t)v16);
    uint64_t v3 = v17;
    uint64_t v4 = v18;
    __swift_project_boxed_opaque_existential_0Tm(v16, v17);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4))
    {
      if (*(unsigned char *)(v1 + 16))
      {
        if (qword_1EA82A9B0 != -1) {
          swift_once();
        }
        id v5 = &qword_1EA82B320;
      }
      else
      {
        if (qword_1EBDEAEC8 != -1) {
          swift_once();
        }
        id v5 = &qword_1EBDEAEC0;
      }
      id v11 = (id)*v5;
      long long v12 = (void *)sub_1D7660AE0();
      objc_msgSend(v11, sel_removeObjectForKey_, v12);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1D758C5F8((uint64_t)v13, &qword_1EA82B330);
  }
  if (*(unsigned char *)(v1 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EBDEAEC0;
  }
  uint64_t v7 = (void *)*v6;
  LOBYTE(v16[0]) = a1 & 1;
  id v8 = v7;
  uint64_t v9 = sub_1D76615E0();
  char v10 = (void *)sub_1D7660AE0();
  objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

  swift_unknownObjectRelease();
}

void sub_1D7596F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B890);
  uint64_t v17 = &protocol witness table for A?;
  v15[0] = a1;
  v15[1] = a2;
  if (__swift_project_boxed_opaque_existential_0Tm(v15, v16)[1])
  {
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
    if (*(unsigned char *)(v2 + 16))
    {
      if (qword_1EA82A9B0 != -1) {
        swift_once();
      }
      id v5 = &qword_1EA82B320;
    }
    else
    {
      if (qword_1EBDEAEC8 != -1) {
        swift_once();
      }
      id v5 = &qword_1EBDEAEC0;
    }
    id v8 = (void *)*v5;
    sub_1D759C458(a1, a2, v15);
    __swift_project_boxed_opaque_existential_0Tm(v15, v16);
    id v9 = v8;
    uint64_t v10 = sub_1D7661550();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
    id v11 = (void *)sub_1D7660AE0();
    objc_msgSend(v9, sel_setValue_forKey_, v10, v11);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    if (*(unsigned char *)(v2 + 16))
    {
      uint64_t v6 = qword_1EA82A9B0;
      swift_bridgeObjectRetain();
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EA82B320;
    }
    else
    {
      uint64_t v12 = qword_1EBDEAEC8;
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      uint64_t v7 = &qword_1EBDEAEC0;
    }
    id v13 = (id)*v7;
    uint64_t v14 = (void *)sub_1D7660AE0();
    objc_msgSend(v13, sel_removeObjectForKey_, v14);
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  }
}

void sub_1D7597194(uint64_t a1, char a2, uint64_t *a3, uint64_t a4)
{
  *((void *)&v18 + 1) = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v19 = &protocol witness table for A?;
  *(void *)&long long v17 = a1;
  BYTE8(v17) = a2 & 1;
  if (*((unsigned char *)__swift_project_boxed_opaque_existential_0Tm(&v17, *((uint64_t *)&v18 + 1)) + 8) == 1)
  {
    if (*(unsigned char *)(v4 + 16))
    {
      if (qword_1EA82A9B0 != -1) {
        swift_once();
      }
      id v8 = &qword_1EA82B320;
    }
    else
    {
      if (qword_1EBDEAEC8 != -1) {
        swift_once();
      }
      id v8 = &qword_1EBDEAEC0;
    }
    id v10 = (id)*v8;
    OUTLINED_FUNCTION_36();
    id v11 = (void *)sub_1D7660AE0();
    objc_msgSend(v10, sel_removeObjectForKey_, v11);

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v17);
    if (*(unsigned char *)(v4 + 16))
    {
      if (qword_1EA82A9B0 != -1) {
        swift_once();
      }
      id v9 = &qword_1EA82B320;
    }
    else
    {
      if (qword_1EBDEAEC8 != -1) {
        swift_once();
      }
      id v9 = &qword_1EBDEAEC0;
    }
    uint64_t v12 = (void *)*v9;
    if (a2)
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    else
    {
      *((void *)&v18 + 1) = a4;
      *(void *)&long long v17 = a1;
    }
    sub_1D75908F0((uint64_t)&v17, (uint64_t)&v16);
    id v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
    uint64_t v14 = sub_1D76615E0();
    sub_1D758C5F8((uint64_t)&v17, &qword_1EBDEC4D0);
    char v15 = (void *)sub_1D7660AE0();
    objc_msgSend(v13, sel_setValue_forKey_, v14, v15);

    swift_unknownObjectRelease();
  }
}

void sub_1D75973E0(uint64_t a1)
{
  uint64_t v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v13, (uint64_t)v16);
    uint64_t v3 = v17;
    uint64_t v4 = v18;
    __swift_project_boxed_opaque_existential_0Tm(v16, v17);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4))
    {
      if (*(unsigned char *)(v1 + 16))
      {
        if (qword_1EA82A9B0 != -1) {
          swift_once();
        }
        id v5 = &qword_1EA82B320;
      }
      else
      {
        if (qword_1EBDEAEC8 != -1) {
          swift_once();
        }
        id v5 = &qword_1EBDEAEC0;
      }
      id v11 = (id)*v5;
      uint64_t v12 = (void *)sub_1D7660AE0();
      objc_msgSend(v11, sel_removeObjectForKey_, v12);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1D758C5F8((uint64_t)v13, &qword_1EA82B330);
  }
  if (*(unsigned char *)(v1 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EBDEAEC0;
  }
  uint64_t v7 = (void *)*v6;
  v16[0] = a1;
  id v8 = v7;
  uint64_t v9 = sub_1D76615E0();
  id v10 = (void *)sub_1D7660AE0();
  objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

  swift_unknownObjectRelease();
}

void sub_1D759764C(uint64_t a1)
{
  uint64_t v14 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B3E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v12, (uint64_t)v15);
    uint64_t v3 = v16;
    uint64_t v4 = v17;
    __swift_project_boxed_opaque_existential_0Tm(v15, v16);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4))
    {
      if (*(unsigned char *)(v1 + 16))
      {
        if (qword_1EA82A9B0 != -1) {
          swift_once();
        }
        id v5 = &qword_1EA82B320;
      }
      else
      {
        if (qword_1EBDEAEC8 != -1) {
          swift_once();
        }
        id v5 = &qword_1EBDEAEC0;
      }
      id v10 = (id)*v5;
      id v11 = (void *)sub_1D7660AE0();
      objc_msgSend(v10, sel_removeObjectForKey_, v11);
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1D758C5F8((uint64_t)v12, &qword_1EA82B330);
  }
  if (*(unsigned char *)(v1 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v6 = &qword_1EBDEAEC0;
  }
  id v7 = (id)*v6;
  sub_1D759B7F4(a1, v15);
  __swift_project_boxed_opaque_existential_0Tm(v15, v16);
  uint64_t v8 = sub_1D7661550();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  uint64_t v9 = (void *)sub_1D7660AE0();
  objc_msgSend(v7, sel_setValue_forKey_, v8, v9);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
}

void sub_1D75978F0(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v15, (uint64_t)v19);
    uint64_t v5 = v20;
    uint64_t v6 = v21;
    __swift_project_boxed_opaque_existential_0Tm(v19, v20);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6))
    {
      if (*(unsigned char *)(v2 + 16))
      {
        if (qword_1EA82A9B0 != -1) {
          swift_once();
        }
        id v7 = &qword_1EA82B320;
      }
      else
      {
        if (qword_1EBDEAEC8 != -1) {
          swift_once();
        }
        id v7 = &qword_1EBDEAEC0;
      }
      id v13 = (id)*v7;
      uint64_t v14 = (void *)sub_1D7660AE0();
      objc_msgSend(v13, sel_removeObjectForKey_, v14);
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  }
  else
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1D758C5F8((uint64_t)v15, &qword_1EA82B330);
  }
  if (*(unsigned char *)(v2 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v8 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v8 = &qword_1EBDEAEC0;
  }
  uint64_t v9 = (void *)*v8;
  v19[0] = a1;
  v19[1] = a2;
  swift_bridgeObjectRetain();
  id v10 = v9;
  uint64_t v11 = sub_1D76615E0();
  uint64_t v12 = (void *)sub_1D7660AE0();
  objc_msgSend(v10, sel_setValue_forKey_, v11, v12);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
}

void sub_1D7597B80(void *a1)
{
  uint64_t v16 = a1;
  type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v14, (uint64_t)v17);
    uint64_t v4 = v18;
    uint64_t v5 = v19;
    __swift_project_boxed_opaque_existential_0Tm(v17, v18);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5))
    {
      if (*(unsigned char *)(v1 + 16))
      {
        if (qword_1EA82A9B0 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_1EA82B320;
      }
      else
      {
        if (qword_1EBDEAEC8 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_1EBDEAEC0;
      }
      id v12 = (id)*v6;
      id v13 = (void *)sub_1D7660AE0();
      objc_msgSend(v12, sel_removeObjectForKey_, v13);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1D758C5F8((uint64_t)v14, &qword_1EA82B330);
  }
  if (*(unsigned char *)(v1 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    id v7 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    id v7 = &qword_1EBDEAEC0;
  }
  uint64_t v8 = (void *)*v7;
  v17[0] = *(void *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue];
  id v9 = v8;
  uint64_t v10 = sub_1D76615E0();
  uint64_t v11 = (void *)sub_1D7660AE0();
  objc_msgSend(v9, sel_setValue_forKey_, v10, v11);

  swift_unknownObjectRelease();
}

uint64_t DefaultsBackedProperty.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_28();
  v5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B328);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v18, (uint64_t)v20);
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    __swift_project_boxed_opaque_existential_0Tm(v20, v21);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7))
    {
      id v8 = sub_1D759CA54();
      id v9 = (void *)sub_1D7660AE0();
      objc_msgSend(v8, sel_removeObjectForKey_, v9);

      uint64_t v10 = OUTLINED_FUNCTION_39();
      v11(v10);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  }
  else
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_1D758C5F8((uint64_t)v18, &qword_1EA82B330);
  }
  id v13 = sub_1D759CA54();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(a2 + 24) + 8))(v20, v3);
  __swift_project_boxed_opaque_existential_0Tm(v20, v21);
  uint64_t v14 = sub_1D7661550();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  uint64_t v15 = (void *)sub_1D7660AE0();
  objc_msgSend(v13, sel_setValue_forKey_, v14, v15);

  swift_unknownObjectRelease();
  uint64_t v16 = OUTLINED_FUNCTION_39();
  return v17(v16);
}

uint64_t (*static Defaults.hasBeenPaired.modify(uint64_t a1))(uint64_t a1)
{
  if (qword_1EA82A8D0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  *(unsigned char *)(a1 + 24) = sub_1D7595E88(qword_1EA82B040, *(uint64_t *)algn_1EA82B048, word_1EA82B050 | (unsigned __int16)(HIBYTE(word_1EA82B050) << 8));
  return sub_1D75980CC;
}

uint64_t sub_1D75980CC(uint64_t a1)
{
  sub_1D7596A7C(*(unsigned char *)(a1 + 24));
  return swift_endAccess();
}

void sub_1D759811C()
{
  *(_WORD *)&algn_1EA82B048[6] = -4864;
  word_1EA82B050 = 513;
}

uint64_t DefaultsBackedProperty<>.init(key:domain:)()
{
  OUTLINED_FUNCTION_33_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_16();
  MEMORY[0x1F4188790]();
  char v6 = *v4;
  sub_1D7661510();
  return sub_1D7598368(v1, v0, &v6, v3);
}

unint64_t static Defaults.networkPairingEnabled.getter()
{
  if (qword_1EBDEBD68 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EBDEBD48 & 1;
}

uint64_t static Defaults.networkPairingEnabled.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EBDEBD68);
}

uint64_t (*static Defaults.networkPairingEnabled.modify())(uint64_t a1)
{
  if (qword_1EBDEBD68 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7598330;
}

uint64_t sub_1D7598330(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D759833C()
{
  qword_1EBDEBD48 = 0xD000000000000015;
  unk_1EBDEBD50 = 0x80000001D76720C0;
  word_1EBDEBD58 = 0;
}

uint64_t sub_1D7598368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *a3;
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v5;
  type metadata accessor for DefaultsBackedProperty();
  OUTLINED_FUNCTION_16();
  uint64_t v7 = *(uint64_t (**)(void))(v6 + 32);
  return v7();
}

uint64_t static Defaults.tunnelMaxPendingPackets.getter()
{
  if (qword_1EA82A8E0 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C068);
  OUTLINED_FUNCTION_17(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.tunnelMaxPendingPackets.setter()
{
  return sub_1D7598638();
}

void (*static Defaults.tunnelMaxPendingPackets.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_19((uint64_t)v0);
  if (qword_1EA82A8E0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_13_1();
  uint64_t v1 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C068);
  OUTLINED_FUNCTION_15(v1, v2);
  return sub_1D759854C;
}

void sub_1D759854C()
{
}

void sub_1D7598568()
{
  qword_1EA82B070 = 0;
  byte_1EA82B078 = 1;
  OUTLINED_FUNCTION_12((uint64_t)&unk_1EA82B058);
}

uint64_t static Defaults.tunnelMTU.getter()
{
  if (qword_1EA82A8E8 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C068);
  OUTLINED_FUNCTION_17(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.tunnelMTU.setter()
{
  return sub_1D7598638();
}

uint64_t sub_1D7598638()
{
  OUTLINED_FUNCTION_25_0();
  if (!v2) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  sub_1D7597194(v0, v1 & 1, &qword_1EA82B3F0, MEMORY[0x1E4FBB550]);
  return swift_endAccess();
}

void (*static Defaults.tunnelMTU.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_19((uint64_t)v0);
  if (qword_1EA82A8E8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_13_1();
  uint64_t v1 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C068);
  OUTLINED_FUNCTION_15(v1, v2);
  return sub_1D759875C;
}

void sub_1D759875C()
{
}

void sub_1D7598778()
{
  qword_1EA82B098 = 0;
  byte_1EA82B0A0 = 1;
  qword_1EA82B080 = 0x544D6C656E6E7574;
  *(void *)algn_1EA82B088 = 0xE900000000000055;
  byte_1EA82B090 = 0;
}

unint64_t static Defaults.enableTunnelPacketTracing.getter()
{
  if (qword_1EA82A8F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B0A8 & 1;
}

uint64_t static Defaults.enableTunnelPacketTracing.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A8F0);
}

uint64_t (*static Defaults.enableTunnelPacketTracing.modify())(uint64_t a1)
{
  if (qword_1EA82A8F0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D75988DC;
}

uint64_t sub_1D75988DC(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D75988E8()
{
}

uint64_t static Defaults.deviceAllowTCPControlChannels.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EBDEBD88);
}

uint64_t (*static Defaults.deviceAllowTCPControlChannels.modify())(uint64_t a1)
{
  if (qword_1EBDEBD88 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D75989AC;
}

uint64_t sub_1D75989AC(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D75989B8()
{
  qword_1EBDEBD70 = 0xD00000000000001DLL;
  *(void *)algn_1EBDEBD78 = 0x80000001D7672060;
  word_1EBDEBD80 = 256;
}

uint64_t static Defaults.deviceFixedNetworkPairingPin.getter()
{
  if (qword_1EA82A900 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_23(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13[0], v13[1], v14);
  sub_1D7595FE4();
  sub_1D759CC40((uint64_t)v13);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.deviceFixedNetworkPairingPin.setter()
{
  return sub_1D759A260();
}

void (*static Defaults.deviceFixedNetworkPairingPin.modify())()
{
  uint64_t v1 = malloc(0x50uLL);
  OUTLINED_FUNCTION_19((uint64_t)v1);
  if (qword_1EA82A900 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_31();
  *(void *)(v0 + 72) = v2;
  return sub_1D7598B3C;
}

void sub_1D7598B3C()
{
}

void sub_1D7598B48()
{
  qword_1EA82B0D8 = 0;
  qword_1EA82B0E0 = 0;
  OUTLINED_FUNCTION_12((uint64_t)&xmmword_1EA82B0C0);
}

uint64_t static Defaults.pairingRecordExpiryInterval.getter()
{
  if (qword_1EBDEAD48 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C1B0);
  OUTLINED_FUNCTION_17(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.pairingRecordExpiryInterval.setter()
{
  return sub_1D7598C10();
}

uint64_t sub_1D7598C10()
{
  OUTLINED_FUNCTION_25_0();
  if (!v2) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  sub_1D7597194(v0, v1 & 1, &qword_1EA82B3E8, MEMORY[0x1E4FBB3D0]);
  return swift_endAccess();
}

void (*static Defaults.pairingRecordExpiryInterval.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_19((uint64_t)v0);
  if (qword_1EBDEAD48 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_13_1();
  uint64_t v1 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C1B0);
  OUTLINED_FUNCTION_15(v1, v2);
  return sub_1D7598D34;
}

void sub_1D7598D34()
{
}

void sub_1D7598D50()
{
  qword_1EBDEAD38 = 0;
  byte_1EBDEAD40 = 1;
  qword_1EBDEAD20 = 0xD00000000000001BLL;
  *(void *)algn_1EBDEAD28 = 0x80000001D7672020;
  byte_1EBDEAD30 = 0;
}

uint64_t static Defaults.pairingRecordLastUsedUpdateInterval.getter()
{
  if (qword_1EBDEAD80 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v8 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C1B0);
  OUTLINED_FUNCTION_17(v8, v9, v10, v11);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.pairingRecordLastUsedUpdateInterval.setter()
{
  return sub_1D7598C10();
}

void (*static Defaults.pairingRecordLastUsedUpdateInterval.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_19((uint64_t)v0);
  if (qword_1EBDEAD80 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_13_1();
  uint64_t v1 = sub_1D7596130((uint64_t (*)(unsigned char *, __n128))sub_1D759C1B0);
  OUTLINED_FUNCTION_15(v1, v2);
  return sub_1D7598EE0;
}

void sub_1D7598EE0()
{
}

void sub_1D7598EFC()
{
  OUTLINED_FUNCTION_29_0();
  sub_1D7597194(*(void *)(v1 + 64), v0[72], v2, v3);
  swift_endAccess();
  free(v0);
}

void sub_1D7598F58()
{
  qword_1EBDEAD68 = 0;
  byte_1EBDEAD70 = 1;
  qword_1EBDEAD50 = 0xD000000000000023;
  *(void *)algn_1EBDEAD58 = 0x80000001D7671FF0;
  byte_1EBDEAD60 = 0;
}

unint64_t static Defaults.hostAllowBonjourDeviceDiscovery.getter()
{
  if (qword_1EA82A908 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B0E8 & 1;
}

uint64_t static Defaults.hostAllowBonjourDeviceDiscovery.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A908);
}

uint64_t (*static Defaults.hostAllowBonjourDeviceDiscovery.modify())(uint64_t a1)
{
  if (qword_1EA82A908 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D75990BC;
}

uint64_t sub_1D75990BC(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D75990C8()
{
  qword_1EA82B0E8 = 0xD00000000000001FLL;
  unk_1EA82B0F0 = 0x80000001D7671FD0;
  word_1EA82B0F8 = 256;
}

unint64_t static Defaults.hostAllowRSDDeviceDiscovery.getter()
{
  if (qword_1EA82A910 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B100 & 1;
}

uint64_t static Defaults.hostAllowRSDDeviceDiscovery.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A910);
}

uint64_t (*static Defaults.hostAllowRSDDeviceDiscovery.modify())(uint64_t a1)
{
  if (qword_1EA82A910 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7599224;
}

uint64_t sub_1D7599224(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599230()
{
  qword_1EA82B100 = 0xD00000000000001BLL;
  *(void *)algn_1EA82B108 = 0x80000001D7671FB0;
  word_1EA82B110 = 256;
}

unint64_t static Defaults.deviceTunnelKeepWiFiAlive.getter()
{
  if (qword_1EA82A918 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B118 & 1;
}

uint64_t static Defaults.deviceTunnelKeepWiFiAlive.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A918);
}

uint64_t (*static Defaults.deviceTunnelKeepWiFiAlive.modify())(uint64_t a1)
{
  if (qword_1EA82A918 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D759938C;
}

uint64_t sub_1D759938C(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599398()
{
  qword_1EA82B118 = 0xD000000000000019;
  unk_1EA82B120 = 0x80000001D7671F90;
  word_1EA82B128 = 0;
}

unint64_t static Defaults.deviceAllowBluetoothDeviceDiscovery.getter()
{
  if (qword_1EBDEBD40 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EBDEBD28 & 1;
}

uint64_t static Defaults.deviceAllowBluetoothDeviceDiscovery.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EBDEBD40);
}

uint64_t (*static Defaults.deviceAllowBluetoothDeviceDiscovery.modify())(uint64_t a1)
{
  if (qword_1EBDEBD40 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D75994F0;
}

uint64_t sub_1D75994F0(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D75994FC()
{
  qword_1EBDEBD28 = 0xD000000000000023;
  unk_1EBDEBD30 = 0x80000001D7671F60;
  word_1EBDEBD38 = 0;
}

uint64_t static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.getter()
{
  if (qword_1EA82A928 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_23(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13[0], v13[1], v14);
  sub_1D7595FE4();
  sub_1D759CC40((uint64_t)v13);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.setter()
{
  return sub_1D759A260();
}

void (*static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.modify())()
{
  uint64_t v1 = malloc(0x50uLL);
  OUTLINED_FUNCTION_19((uint64_t)v1);
  if (qword_1EA82A928 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  *(void *)(v0 + 64) = OUTLINED_FUNCTION_31();
  *(void *)(v0 + 72) = v2;
  return sub_1D759967C;
}

void sub_1D759967C()
{
}

void sub_1D7599688()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = v0[9];
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1D7596F3C(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7596F3C(v2, v0[9]);
  }
  swift_endAccess();
  free(v0);
}

double sub_1D7599710()
{
  double result = 3.97310753e252;
  unk_1EA82B148 = xmmword_1D7663070;
  qword_1EA82B130 = 0xD000000000000029;
  *(void *)algn_1EA82B138 = 0x80000001D7671F30;
  byte_1EA82B140 = 0;
  return result;
}

uint64_t *static Defaults.hostDeviceDiscoveryPrewarmingDelay.getter()
{
  if (qword_1EA82A930 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_9_0();
  return &qword_1EA82B158;
}

uint64_t static Defaults.hostDeviceDiscoveryPrewarmingDelay.setter(uint64_t a1)
{
  return sub_1D759A7D4(a1, &qword_1EA82A930, (uint64_t)&qword_1EA82B158, sub_1D75973E0);
}

uint64_t (*static Defaults.hostDeviceDiscoveryPrewarmingDelay.modify())(uint64_t a1)
{
  if (qword_1EA82A930 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_18(v0);
  return sub_1D7599874;
}

uint64_t sub_1D7599874(uint64_t a1)
{
  return sub_1D759A8D0(a1);
}

void sub_1D7599880()
{
  qword_1EA82B170 = 5;
  qword_1EA82B158 = 0xD000000000000022;
  unk_1EA82B160 = 0x80000001D7671F00;
  byte_1EA82B168 = 0;
}

unint64_t static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.getter()
{
  if (qword_1EA82A938 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B178 & 1;
}

uint64_t static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A938);
}

uint64_t (*static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.modify())(uint64_t a1)
{
  if (qword_1EA82A938 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D75999E0;
}

uint64_t sub_1D75999E0(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D75999EC()
{
}

unint64_t static Defaults.hostUseLockdownForPairSetup.getter()
{
  if (qword_1EA82A940 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B190 & 1;
}

uint64_t static Defaults.hostUseLockdownForPairSetup.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A940);
}

uint64_t (*static Defaults.hostUseLockdownForPairSetup.modify())(uint64_t a1)
{
  if (qword_1EA82A940 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7599B30;
}

uint64_t sub_1D7599B30(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599B3C()
{
  qword_1EA82B190 = 0xD00000000000001BLL;
  *(void *)algn_1EA82B198 = 0x80000001D7671EB0;
  word_1EA82B1A0 = 256;
}

unint64_t static Defaults.hostUseIndirectLockdownConnections.getter()
{
  if (qword_1EA82A948 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B1A8 & 1;
}

uint64_t static Defaults.hostUseIndirectLockdownConnections.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A948);
}

uint64_t (*static Defaults.hostUseIndirectLockdownConnections.modify())(uint64_t a1)
{
  if (qword_1EA82A948 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7599C98;
}

uint64_t sub_1D7599C98(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599CA4()
{
  qword_1EA82B1A8 = 0xD000000000000022;
  unk_1EA82B1B0 = 0x80000001D7671E80;
  word_1EA82B1B8 = 0;
}

unint64_t static Defaults.hostProactivelyUpgradeLockdownPairingRecords.getter()
{
  if (qword_1EA82A950 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B1C0 & 1;
}

uint64_t static Defaults.hostProactivelyUpgradeLockdownPairingRecords.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A950);
}

uint64_t (*static Defaults.hostProactivelyUpgradeLockdownPairingRecords.modify())(uint64_t a1)
{
  if (qword_1EA82A950 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7599DFC;
}

uint64_t sub_1D7599DFC(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599E08()
{
  qword_1EA82B1C0 = 0xD00000000000002CLL;
  *(void *)algn_1EA82B1C8 = 0x80000001D7671E50;
  word_1EA82B1D0 = 256;
}

unint64_t static Defaults.hostCreateWritableDataVaultedLocationOnStartup.getter()
{
  if (qword_1EA82A958 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B1D8 & 1;
}

uint64_t static Defaults.hostCreateWritableDataVaultedLocationOnStartup.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A958);
}

uint64_t (*static Defaults.hostCreateWritableDataVaultedLocationOnStartup.modify())(uint64_t a1)
{
  if (qword_1EA82A958 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D7599F64;
}

uint64_t sub_1D7599F64(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D7599F70()
{
  qword_1EA82B1D8 = 0xD00000000000002ELL;
  unk_1EA82B1E0 = 0x80000001D7671E20;
  word_1EA82B1E8 = 0;
}

uint64_t static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.getter()
{
  if (qword_1EA82A960 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D75963C4(v0, v1, v2, (uint64_t)&qword_1EA82B1F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.setter(uint64_t a1)
{
  return sub_1D759A7D4(a1, &qword_1EA82A960, (uint64_t)&qword_1EA82B1F0, sub_1D759764C);
}

uint64_t (*static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.modify())(uint64_t a1)
{
  if (qword_1EA82A960 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = sub_1D75963C4(qword_1EA82B1F0, *(uint64_t *)algn_1EA82B1F8, byte_1EA82B200, qword_1EA82B208);
  OUTLINED_FUNCTION_18(v0);
  return sub_1D759A0FC;
}

uint64_t sub_1D759A0FC(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_26(a1);
  if (v2)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1D759764C(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D759764C(v1);
  }
  return swift_endAccess();
}

void sub_1D759A15C()
{
  qword_1EA82B208 = MEMORY[0x1E4FBC860];
  qword_1EA82B1F0 = 0xD000000000000033;
  *(void *)algn_1EA82B1F8 = 0x80000001D7671DE0;
  byte_1EA82B200 = 0;
}

uint64_t static Defaults.hostTunnelConnectionProtocol.getter()
{
  if (qword_1EA82A968 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  v1[0] = xmmword_1EA82B210;
  v1[1] = *(_OWORD *)&byte_1EA82B220;
  uint64_t v2 = qword_1EA82B230;
  sub_1D759CCD0((uint64_t)v1);
  sub_1D7596510();
  sub_1D759CD08((uint64_t)v1);
  return OUTLINED_FUNCTION_36();
}

uint64_t static Defaults.hostTunnelConnectionProtocol.setter()
{
  return sub_1D759A260();
}

uint64_t sub_1D759A260()
{
  OUTLINED_FUNCTION_33_1();
  if (*v3 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  v0(v2, v1);
  return swift_endAccess();
}

void (*static Defaults.hostTunnelConnectionProtocol.modify())()
{
  uint64_t v1 = malloc(0x50uLL);
  OUTLINED_FUNCTION_19((uint64_t)v1);
  if (qword_1EA82A968 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  long long v2 = *(_OWORD *)&byte_1EA82B220;
  *(_OWORD *)uint64_t v0 = xmmword_1EA82B210;
  *(_OWORD *)(v0 + 16) = v2;
  *(void *)(v0 + 32) = qword_1EA82B230;
  *(void *)(v0 + 64) = sub_1D7596510();
  *(void *)(v0 + 72) = v3;
  return sub_1D759A37C;
}

void sub_1D759A37C()
{
  OUTLINED_FUNCTION_29_0();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = v0[9];
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1D75978F0(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D75978F0(v2, v0[9]);
  }
  swift_endAccess();
  free(v0);
}

void sub_1D759A410()
{
  qword_1EA82B228 = 7365492;
  qword_1EA82B230 = 0xE300000000000000;
  *(void *)&xmmword_1EA82B210 = 0xD00000000000001CLL;
  *((void *)&xmmword_1EA82B210 + 1) = 0x80000001D7671DC0;
  byte_1EA82B220 = 0;
}

uint64_t *static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.getter()
{
  if (qword_1EA82A970 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_9_0();
  return &qword_1EA82B238;
}

uint64_t static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.setter(uint64_t a1)
{
  return sub_1D759A7D4(a1, &qword_1EA82A970, (uint64_t)&qword_1EA82B238, sub_1D75973E0);
}

uint64_t (*static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.modify())(uint64_t a1)
{
  if (qword_1EA82A970 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_18(v0);
  return sub_1D759A578;
}

uint64_t sub_1D759A578(uint64_t a1)
{
  return sub_1D759A8D0(a1);
}

void sub_1D759A584()
{
  qword_1EA82B250 = 5;
  qword_1EA82B238 = 0xD000000000000039;
  unk_1EA82B240 = 0x80000001D7671D80;
  byte_1EA82B248 = 0;
}

uint64_t *static Defaults.hostTunnelHeartbeatInterval.getter()
{
  if (qword_1EA82A978 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_9_0();
  return &qword_1EA82B258;
}

uint64_t static Defaults.hostTunnelHeartbeatInterval.setter(uint64_t a1)
{
  return sub_1D759A7D4(a1, &qword_1EA82A978, (uint64_t)&qword_1EA82B258, sub_1D75973E0);
}

uint64_t (*static Defaults.hostTunnelHeartbeatInterval.modify())(uint64_t a1)
{
  if (qword_1EA82A978 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_18(v0);
  return sub_1D759A6E4;
}

uint64_t sub_1D759A6E4(uint64_t a1)
{
  return sub_1D759A8D0(a1);
}

void sub_1D759A6F0()
{
  qword_1EA82B270 = 30;
  qword_1EA82B258 = 0xD00000000000001BLL;
  unk_1EA82B260 = 0x80000001D7671D60;
  byte_1EA82B268 = 0;
}

uint64_t *static Defaults.tunnelPacketFlowStatsInterval.getter()
{
  if (qword_1EA82A980 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_9_0();
  return &qword_1EA82B278;
}

uint64_t static Defaults.tunnelPacketFlowStatsInterval.setter(uint64_t a1)
{
  return sub_1D759A7D4(a1, &qword_1EA82A980, (uint64_t)&qword_1EA82B278, sub_1D75973E0);
}

uint64_t sub_1D759A7D4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (*a2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  a4(a1);
  return swift_endAccess();
}

uint64_t (*static Defaults.tunnelPacketFlowStatsInterval.modify())(uint64_t a1)
{
  if (qword_1EA82A980 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_18(v0);
  return sub_1D759A8C4;
}

uint64_t sub_1D759A8C4(uint64_t a1)
{
  return sub_1D759A8D0(a1);
}

uint64_t sub_1D759A8D0(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_26(a1);
  sub_1D75973E0(v1);
  return swift_endAccess();
}

void sub_1D759A914()
{
  qword_1EA82B290 = 30;
  OUTLINED_FUNCTION_12((uint64_t)&qword_1EA82B278);
}

id static Defaults.hostMinumumSupportedWatchWireProtocolVersion.getter()
{
  if (qword_1EA82A988 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  id v0 = OUTLINED_FUNCTION_27_0(&qword_1EA82B298);

  swift_bridgeObjectRelease();
  return v0;
}

void static Defaults.hostMinumumSupportedWatchWireProtocolVersion.setter(void *a1)
{
}

uint64_t (*static Defaults.hostMinumumSupportedWatchWireProtocolVersion.modify())(uint64_t a1)
{
  if (qword_1EA82A988 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  id v0 = sub_1D759665C(qword_1EA82B298, unk_1EA82B2A0, byte_1EA82B2A8, (void *)qword_1EA82B2B0);
  OUTLINED_FUNCTION_18((uint64_t)v0);
  return sub_1D759AA68;
}

uint64_t sub_1D759AA68(uint64_t a1)
{
  return sub_1D759ACD0(a1);
}

id sub_1D759AA74()
{
  if (qword_1EBDEBCF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (void *)qword_1EBDEBCE0;
  qword_1EA82B2B0 = qword_1EBDEBCE0;
  qword_1EA82B298 = 0xD00000000000002CLL;
  unk_1EA82B2A0 = 0x80000001D7671D10;
  byte_1EA82B2A8 = 0;
  return v0;
}

id static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.getter()
{
  if (qword_1EA82A990 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_8_1();
  id v0 = OUTLINED_FUNCTION_27_0(&qword_1EA82B2B8);

  swift_bridgeObjectRelease();
  return v0;
}

void static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.setter(void *a1)
{
}

void sub_1D759ABD0(void *a1, void *a2)
{
  if (*a2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  id v3 = a1;
  sub_1D7597B80(v3);
  swift_endAccess();
}

uint64_t (*static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.modify())(uint64_t a1)
{
  if (qword_1EA82A990 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  id v0 = sub_1D759665C(qword_1EA82B2B8, unk_1EA82B2C0, byte_1EA82B2C8, (void *)qword_1EA82B2D0);
  OUTLINED_FUNCTION_18((uint64_t)v0);
  return sub_1D759ACC4;
}

uint64_t sub_1D759ACC4(uint64_t a1)
{
  return sub_1D759ACD0(a1);
}

uint64_t sub_1D759ACD0(uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_26(a1);
  if (v3)
  {
    sub_1D7597B80(v2);
  }
  else
  {
    sub_1D7597B80(v2);
  }
  return swift_endAccess();
}

id sub_1D759AD24()
{
  if (_RPIsAppleInternal())
  {
    if (qword_1EBDEBCF0 != -1) {
      swift_once();
    }
    id v0 = &qword_1EBDEBCE0;
    swift_beginAccess();
  }
  else
  {
    if (qword_1EA82AA20 != -1) {
      swift_once();
    }
    id v0 = &qword_1EA83A378;
  }
  uint64_t v1 = (void *)*v0;
  qword_1EA82B2D0 = *v0;
  qword_1EA82B2B8 = 0xD00000000000002DLL;
  unk_1EA82B2C0 = 0x80000001D7671CE0;
  byte_1EA82B2C8 = 0;
  return v1;
}

unint64_t static Defaults.tunnelUseSkywalk.getter()
{
  if (qword_1EA82A998 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B2D8 & 1;
}

uint64_t static Defaults.tunnelUseSkywalk.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A998);
}

uint64_t (*static Defaults.tunnelUseSkywalk.modify())(uint64_t a1)
{
  if (qword_1EA82A998 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D759AF44;
}

uint64_t sub_1D759AF44(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D759AF50()
{
  qword_1EA82B2D8 = 0xD000000000000010;
  unk_1EA82B2E0 = 0x80000001D7671CC0;
  word_1EA82B2E8 = 0;
}

unint64_t static Defaults.hostPreferPairingViaLockdown.getter()
{
  if (qword_1EA82A9A0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B2F0 & 1;
}

uint64_t static Defaults.hostPreferPairingViaLockdown.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A9A0);
}

uint64_t (*static Defaults.hostPreferPairingViaLockdown.modify())(uint64_t a1)
{
  if (qword_1EA82A9A0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D759B0A8;
}

uint64_t sub_1D759B0A8(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

void sub_1D759B0B4()
{
  qword_1EA82B2F0 = 0xD00000000000001CLL;
  *(void *)algn_1EA82B2F8 = 0x80000001D7671CA0;
  word_1EA82B300 = 0;
}

unint64_t static Defaults.hostPreferMigratableTunnels.getter()
{
  if (qword_1EA82A9A8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_9_0();
  return (unint64_t)&qword_1EA82B308 & 1;
}

uint64_t static Defaults.hostPreferMigratableTunnels.setter(char a1)
{
  return sub_1D759B184(a1, &qword_1EA82A9A8);
}

uint64_t sub_1D759B184(char a1, void *a2)
{
  if (*a2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5();
  sub_1D7596CCC(a1 & 1);
  return swift_endAccess();
}

uint64_t (*static Defaults.hostPreferMigratableTunnels.modify())(uint64_t a1)
{
  if (qword_1EA82A9A8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_2();
  if (v4) {
    __int16 v3 = 0;
  }
  uint64_t v5 = sub_1D758C360(v0, v1, v3 | v2);
  OUTLINED_FUNCTION_6_0(v5);
  return sub_1D759B270;
}

uint64_t sub_1D759B270(uint64_t a1)
{
  return sub_1D759B27C(a1);
}

uint64_t sub_1D759B27C(uint64_t a1)
{
  sub_1D7596CCC(*(unsigned char *)(a1 + 24));
  return swift_endAccess();
}

void sub_1D759B2C4()
{
  qword_1EA82B308 = 0xD00000000000001BLL;
  unk_1EA82B310 = 0x80000001D7671C80;
  word_1EA82B318 = 0;
}

id sub_1D759B2F0(uint64_t a1)
{
  return OUTLINED_FUNCTION_22_0(a1, 20, 0x80000001D7671C60, &qword_1EA82B320);
}

id sub_1D759B310(uint64_t a1)
{
  return OUTLINED_FUNCTION_22_0(a1, 23, 0x80000001D7671C40, &qword_1EBDEAEC0);
}

id sub_1D759B330(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1CB20]);
  id result = sub_1D759DFFC(a2, a3);
  if (result) {
    *a4 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

RemotePairingDevice::DefaultsDomain_optional __swiftcall DefaultsDomain.init(rawValue:)(Swift::String rawValue)
{
  __int16 v2 = v1;
  uint64_t v3 = sub_1D76612C0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t DefaultsDomain.rawValue.getter()
{
  if (*v0) {
    return 0x6976654465726F63;
  }
  else {
    return 0x615065746F6D6572;
  }
}

uint64_t sub_1D759B43C(char *a1, char *a2)
{
  return sub_1D75B97C0(*a1, *a2);
}

uint64_t sub_1D759B448()
{
  return sub_1D75BA108();
}

uint64_t sub_1D759B450()
{
  return sub_1D75BA3B0();
}

uint64_t sub_1D759B458()
{
  return sub_1D75BAA00();
}

RemotePairingDevice::DefaultsDomain_optional sub_1D759B460(Swift::String *a1)
{
  return DefaultsDomain.init(rawValue:)(*a1);
}

uint64_t sub_1D759B46C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultsDomain.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D759B494(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v12);
  if (!v13)
  {
    sub_1D758C5F8((uint64_t)v12, &qword_1EBDEC4D0);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B338);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = *(void *)(v11[0] + 16);
  if (v1)
  {
    uint64_t v2 = v11[0] + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1D758DD0C(v2, (uint64_t)v12);
      sub_1D758DD0C((uint64_t)v12, (uint64_t)v11);
      sub_1D75908F0((uint64_t)v11, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
      int v4 = swift_dynamicCast();
      if (v4) {
        uint64_t v5 = v10[4];
      }
      else {
        uint64_t v5 = 0;
      }
      sub_1D758C5F8((uint64_t)v11, &qword_1EBDEC4D0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
      if (v4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D75CFCE4();
          uint64_t v3 = v7;
        }
        unint64_t v6 = *(void *)(v3 + 16);
        if (v6 >= *(void *)(v3 + 24) >> 1)
        {
          sub_1D75CFCE4();
          uint64_t v3 = v8;
        }
        *(void *)(v3 + 16) = v6 + 1;
        *(void *)(v3 + 8 * v6 + 32) = v5;
      }
      v2 += 32;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t static Array<A>.transformForDefaultsRead(_:)(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v5);
  if (!v5[3])
  {
    sub_1D758C5F8((uint64_t)v5, &qword_1EBDEC4D0);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B338);
  uint64_t v1 = swift_dynamicCast();
  if ((v1 & 1) == 0) {
    return 0;
  }
  v5[0] = v4;
  MEMORY[0x1F4188790](v1);
  sub_1D759CD5C();
  uint64_t v2 = sub_1D7660C70();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D759B778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D758DD0C(a1, (uint64_t)v6);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(a3 + 16))(v6, a2, a3);
  return sub_1D758C5F8((uint64_t)v6, &qword_1EBDEC4D0);
}

uint64_t sub_1D759B7F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1D75A63F0();
    unint64_t v6 = (uint64_t *)(a1 + 32);
    uint64_t v4 = v12;
    do
    {
      uint64_t v7 = *v6++;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D75A63F0();
        uint64_t v4 = v12;
      }
      unint64_t v9 = *(void *)(v4 + 16);
      if (v9 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1D75A63F0();
        uint64_t v4 = v12;
      }
      *(void *)(v4 + 16) = v9 + 1;
      uint64_t v10 = v4 + 16 * v9;
      *(void *)(v10 + 32) = sub_1D759E168;
      *(void *)(v10 + 40) = v8;
      --v3;
    }
    while (v3);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B350);
  a2[3] = result;
  *a2 = v4;
  return result;
}

uint64_t Array<A>.transformForDefaultsWrite()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v11[5] = a1;
  _OWORD v11[2] = a2;
  v11[3] = a3;
  uint64_t v5 = sub_1D7660D30();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B348);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1D759BB1C((void (*)(char *, char *))sub_1D759CDF8, (uint64_t)v11, v5, v6, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B350);
  a4[3] = result;
  *a4 = v9;
  return result;
}

uint64_t (*sub_1D759B9E8(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1D759E0E4;
}

uint64_t sub_1D759BB08@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[3] = MEMORY[0x1E4FBB550];
  *a2 = result;
  return result;
}

uint64_t sub_1D759BB1C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a5;
  uint64_t v35 = a8;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v33 = *(void *)(a5 - 8);
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v46 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v32 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v31 - v18;
  uint64_t v20 = sub_1D7660D60();
  if (!v20) {
    return sub_1D7660D10();
  }
  uint64_t v21 = v20;
  uint64_t v49 = sub_1D76611E0();
  uint64_t v38 = sub_1D76611F0();
  sub_1D7661190();
  uint64_t v42 = a6;
  uint64_t result = sub_1D7660D50();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = (void (**)(char *))(v39 + 2);
    uint64_t v41 = v14;
    ++v39;
    while (1)
    {
      uint64_t v23 = (void (*)(char *, void))sub_1D7660D80();
      id v24 = v12;
      BOOL v25 = v12;
      uint64_t v26 = AssociatedTypeWitness;
      (*v40)(v24);
      v23(v48, 0);
      uint64_t v27 = v47;
      v44(v25, v46);
      if (v27) {
        break;
      }
      uint64_t v47 = 0;
      (*v39)(v25, v26);
      sub_1D76611D0();
      sub_1D7660D70();
      --v21;
      uint64_t v12 = v25;
      if (!v21)
      {
        uint64_t v28 = v36;
        uint64_t v29 = v37;
        uint64_t v30 = v32;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v19, v37);
        sub_1D76610B0();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
        return v49;
      }
    }
    (*v39)(v25, v26);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35, v46, v34);
  }
  return result;
}

uint64_t sub_1D759BF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return Array<A>.transformForDefaultsWrite()(*v3, *(void *)(a1 + 16), *(void *)(a2 - 8), a3);
}

uint64_t sub_1D759BFA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static Array<A>.transformForDefaultsRead(_:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D759BFD4(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v1 = MEMORY[0x1E4FBB390];
  if (!swift_dynamicCast()) {
    return 3;
  }
  uint64_t v6 = v1;
  v5[0] = v4 & 1;
  uint64_t v2 = sub_1D7590894((uint64_t)v5);
  sub_1D758C5F8((uint64_t)v5, &qword_1EBDEC4D0);
  return v2;
}

uint64_t sub_1D759C068(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v1 = MEMORY[0x1E4FBB550];
  if (!swift_dynamicCast()) {
    return 0;
  }
  v5[3] = v1;
  v5[0] = v4;
  uint64_t v2 = sub_1D7657DA0((uint64_t)v5);
  sub_1D758C5F8((uint64_t)v5, &qword_1EBDEC4D0);
  return v2;
}

uint64_t sub_1D759C114(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  if (!swift_dynamicCast()) {
    return 0;
  }
  v6[3] = v1;
  v6[0] = v4;
  v6[1] = v5;
  uint64_t v2 = sub_1D7657DAC((uint64_t)v6);
  sub_1D758C5F8((uint64_t)v6, &qword_1EBDEC4D0);
  return v2;
}

uint64_t sub_1D759C1B0(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v1 = MEMORY[0x1E4FBB3D0];
  if (!swift_dynamicCast()) {
    return 0;
  }
  v5[3] = v1;
  v5[0] = v4;
  uint64_t v2 = sub_1D7657E08((uint64_t)v5);
  sub_1D758C5F8((uint64_t)v5, &qword_1EBDEC4D0);
  return v2;
}

uint64_t static Optional<A>.transformForDefaultsRead(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_1D7661000();
  OUTLINED_FUNCTION_1_1();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v21 - v13;
  OUTLINED_FUNCTION_1_1();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_30();
  sub_1D75908F0(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v4, v14, a2);
    v21[3] = a2;
    __swift_allocate_boxed_opaque_existential_0(v21);
    OUTLINED_FUNCTION_28();
    v18();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(v21, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, a2);
    sub_1D758C5F8((uint64_t)v21, &qword_1EBDEC4D0);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  }
  return __swift_storeEnumTagSinglePayload(a4, v19, 1, v9);
}

uint64_t sub_1D759C458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v6 = (void *)swift_allocObject();
  *a3 = v6;
  if (a2)
  {
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    uint64_t v8 = a2;
  }
  else
  {
    a1 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    void v6[4] = 0;
  }
  v6[2] = a1;
  v6[3] = v8;
  v6[5] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t Optional<A>.transformForDefaultsWrite()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v7[2] = *(void *)(a1 + 16);
  v7[3] = a2;
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  uint64_t v4 = swift_allocObject();
  *a3 = v4;
  return sub_1D759C598((void (*)(char *, char *))sub_1D759CEB8, (uint64_t)v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC840] + 8, v5, v4 + 16);
}

uint64_t sub_1D759C598@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14) == 1) {
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, v26);
  }
  uint64_t v26 = v9;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v12, a3);
  }
  return result;
}

uint64_t sub_1D759C810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return Optional<A>.transformForDefaultsWrite()(a1, *(void *)(a2 - 8), a3);
}

uint64_t sub_1D759C818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static Optional<A>.transformForDefaultsRead(_:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t static PrimitiveDefaultsValueTransformable.transformForDefaultsRead(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D75908F0(a1, (uint64_t)&v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  int v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_1D759C890@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = MEMORY[0x1E4F277B8];
  *a3 = a1;
  a3[1] = a2;
  return sub_1D75934F4(a1, a2);
}

uint64_t sub_1D759C8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = MEMORY[0x1E4FBB1A0];
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D759C8BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = MEMORY[0x1E4FBB390];
  *(unsigned char *)a2 = result;
  return result;
}

void sub_1D759C8D0(uint64_t a1@<X8>, double a2@<D0>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
  *(double *)a1 = a2;
}

uint64_t PrimitiveDefaultsValueTransformable.transformForDefaultsWrite()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  __swift_allocate_boxed_opaque_existential_0(a2);
  OUTLINED_FUNCTION_16();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 16);
  return v3();
}

uint64_t sub_1D759C948@<X0>(void *a1@<X8>)
{
  return sub_1D759C8A4(*v1, v1[1], a1);
}

uint64_t sub_1D759C950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1D7657DAC(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1D759C978@<X0>(void *a1@<X8>)
{
  return sub_1D759BB08(*v1, a1);
}

uint64_t sub_1D759C980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D7657DA0(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1D759C9B0(uint64_t a1@<X8>)
{
  sub_1D759C8D0(a1, *v1);
}

uint64_t sub_1D759C9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D7657E08(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1D759C9E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D759C8BC(*v1, a1);
}

uint64_t sub_1D759C9F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1D7590894(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D759CA18@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D759C890(*(void *)v1, *(void *)(v1 + 8), a1);
}

BOOL Optional.isNil.getter(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, *(void *)(a1 + 16)) == 1;
}

id sub_1D759CA54()
{
  if (*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA82A9B0 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA82B320;
  }
  else
  {
    if (qword_1EBDEAEC8 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EBDEAEC0;
  }
  uint64_t v2 = (void *)*v1;
  return v2;
}

uint64_t sub_1D759CAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DefaultsBackedProperty();
  return DefaultsBackedProperty.wrappedValue.getter(v2, a1);
}

uint64_t sub_1D759CB34(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for DefaultsBackedProperty();
  return DefaultsBackedProperty.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t sub_1D759CC08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CC40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CC78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CCA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CCD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CD08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D759CD40(uint64_t a1)
{
  return sub_1D759B778(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1D759CD5C()
{
  unint64_t result = qword_1EA82B340;
  if (!qword_1EA82B340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA82B338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B340);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t (*sub_1D759CDF8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t result = sub_1D759B9E8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1D759CEB8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1D759CEFC()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void (*DefaultsBackedProperty.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  int v5 = malloc(0x30uLL);
  *a1 = v5;
  void *v5 = a2;
  v5[1] = v2;
  v5[2] = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v6 + 24) = v7;
  size_t v9 = *(void *)(v8 + 64);
  void v5[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[5] = v10;
  DefaultsBackedProperty.wrappedValue.getter(a2, (uint64_t)v10);
  return sub_1D759CFEC;
}

void sub_1D759CFEC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    OUTLINED_FUNCTION_28();
    v8();
    DefaultsBackedProperty.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    DefaultsBackedProperty.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

id sub_1D759D0A8(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC4D0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = v7;
  uint64_t v2 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static DefaultsValueTransformable<>.transformForDefaultsRead(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v25 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1D7661000();
  OUTLINED_FUNCTION_1_1();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - v13;
  OUTLINED_FUNCTION_1_1();
  uint64_t v16 = v15;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v25 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, AssociatedTypeWitness, a4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    return __swift_storeEnumTagSinglePayload(v26, 1, 1, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, AssociatedTypeWitness);
    OUTLINED_FUNCTION_28();
    v24(v22, v23);
    sub_1D7660C90();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, AssociatedTypeWitness);
  }
}

uint64_t DefaultsValueTransformable<>.transformForDefaultsWrite()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1D7660C80();
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(AssociatedTypeWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
}

unint64_t sub_1D759D44C()
{
  unint64_t result = qword_1EA82B358[0];
  if (!qword_1EA82B358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA82B358);
  }
  return result;
}

uint64_t sub_1D759D4A0()
{
  return 16;
}

__n128 sub_1D759D4AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

uint64_t getEnumTagSinglePayload for DefaultsDomain(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DefaultsDomain(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D759D61CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1D759D644(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultsDomain()
{
  return &type metadata for DefaultsDomain;
}

uint64_t dispatch thunk of DefaultsValueTransformable.transformForDefaultsWrite()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static DefaultsValueTransformable.transformForDefaultsRead(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AnyOptional.isNil.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D759D69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1D759D6A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D759D748(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 17) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v10;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v11 = (a1 + v6 + 17) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 17) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1D759D85C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

uint64_t sub_1D759D8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = (v7 + 17 + a1) & ~v7;
  uint64_t v9 = (v7 + 17 + a2) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

uint64_t sub_1D759D968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1D759DA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1D759DA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D759DB10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 17) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 17) & ~v7, v6, v4);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1D759DCA0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 17) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1D759DEECLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v20 = (unint64_t)&a1[v10 + 17] & ~v10;
          __swift_storeEnumTagSinglePayload(v20, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DefaultsBackedProperty()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D759DF2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return DefaultsValueTransformable<>.transformForDefaultsWrite()(a1, v2, WitnessTable, (uint64_t)&protocol witness table for Int);
}

uint64_t sub_1D759DF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return static DefaultsValueTransformable<>.transformForDefaultsRead(_:)(a1, a2, WitnessTable, (uint64_t)&protocol witness table for Int, a3);
}

id sub_1D759DFFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    int v3 = (void *)sub_1D7660AE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1D759E060()
{
  OUTLINED_FUNCTION_16();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D759E0E4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))();
}

uint64_t sub_1D759E150@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1D759BB08(*a1, a2);
}

uint64_t sub_1D759E158()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D759E168@<X0>(void *a1@<X8>)
{
  return sub_1D759E150((uint64_t *)(v1 + 16), a1);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void OUTLINED_FUNCTION_12(uint64_t a1@<X8>)
{
  *(void *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(void *)(a1 + 8) = (v1 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_1D759CCA4((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_18(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_19(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_20()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  char v4 = *(unsigned char *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  return sub_1D7596288(v2, v3, v4, v5);
}

void OUTLINED_FUNCTION_21_2(uint64_t a1@<X8>)
{
  *(void *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(void *)(a1 + 8) = (v1 - 32) | 0x8000000000000000;
  *(_WORD *)(a1 + 16) = 0;
}

id OUTLINED_FUNCTION_22_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1D759B330(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t OUTLINED_FUNCTION_26(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

id OUTLINED_FUNCTION_27_0(void *a1)
{
  return sub_1D759665C(v1, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_31()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  return sub_1D7595FE4();
}

void *OUTLINED_FUNCTION_35()
{
  return malloc(0x49uLL);
}

uint64_t OUTLINED_FUNCTION_39()
{
  return v0;
}

uint64_t PairedHostInfo.name.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t PairedHostInfo.identifier.getter()
{
  OUTLINED_FUNCTION_60();
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v0 = OUTLINED_FUNCTION_36();
  return v1(v0);
}

uint64_t type metadata accessor for PairedHostInfo(uint64_t a1)
{
  return sub_1D75A6F50(a1, (uint64_t *)&unk_1EA82B670);
}

uint64_t PairedHostInfo.identitifer.getter()
{
  OUTLINED_FUNCTION_60();
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v0 = OUTLINED_FUNCTION_36();
  return v1(v0);
}

uint64_t PairedHostInfo.lastUsed.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_60() + 28);
  return sub_1D758CBFC(v2, v0);
}

uint64_t PairedHostInfo.initialPairingTime.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_60() + 32);
  return sub_1D758CBFC(v2, v0);
}

uint64_t PairedHostInfo.pairedForAutomation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PairedHostInfo(0) + 36));
}

uint64_t PairedHostInfo.model.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t PairedHostInfo.serialNumber.getter()
{
  return OUTLINED_FUNCTION_36();
}

void PairedHostInfo.init(name:identifier:lastUsed:initialPairingTime:pairedForAutomation:model:serialNumber:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, uint64_t a4@<X7>, void *a5@<X8>)
{
  OUTLINED_FUNCTION_11_0(a1, a2, a5);
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = OUTLINED_FUNCTION_34();
  v10(v9);
  uint64_t v11 = OUTLINED_FUNCTION_30_0();
  v12(v11);
  sub_1D759E58C(v7, v5 + *(int *)(v8 + 28));
  uint64_t v13 = sub_1D759E58C(v6, v5 + *(int *)(v8 + 32));
  OUTLINED_FUNCTION_16_0(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, a3, a4);
}

uint64_t sub_1D759E58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void PairedHostInfo.init(name:identitifer:lastUsed:initialPairingTime:pairedForAutomation:model:serialNumber:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, uint64_t a4@<X7>, void *a5@<X8>)
{
  OUTLINED_FUNCTION_11_0(a1, a2, a5);
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = OUTLINED_FUNCTION_34();
  v10(v9);
  uint64_t v11 = OUTLINED_FUNCTION_30_0();
  v12(v11);
  sub_1D759E58C(v7, v5 + *(int *)(v8 + 28));
  uint64_t v13 = sub_1D759E58C(v6, v5 + *(int *)(v8 + 32));
  OUTLINED_FUNCTION_16_0(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, a3, a4);
}

BOOL sub_1D759E684(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1D759E694()
{
  return sub_1D7661740();
}

uint64_t sub_1D759E6BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1D7661560() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x697469746E656469 && a2 == 0xEB00000000726566;
      if (v7 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x646573557473616CLL && a2 == 0xE800000000000000;
        if (v8 || (sub_1D7661560() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7672290 || (sub_1D7661560() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001D76722B0 || (sub_1D7661560() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
          if (v9 || (sub_1D7661560() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v11 = sub_1D7661560();
            swift_bridgeObjectRelease();
            if (v11) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D759EA0C()
{
  return 8;
}

unint64_t sub_1D759EA14(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x697469746E656469;
      break;
    case 3:
      unint64_t result = 0x646573557473616CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 7:
      unint64_t result = 0x754E6C6169726573;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1D759EB2C(char *a1, char *a2)
{
  return sub_1D759E684(*a1, *a2);
}

uint64_t sub_1D759EB38()
{
  return sub_1D75A2424();
}

uint64_t sub_1D759EB54()
{
  return sub_1D759E694();
}

unint64_t sub_1D759EB60()
{
  return sub_1D759EA14(*v0);
}

uint64_t sub_1D759EB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D759E6BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D759EB90()
{
  return sub_1D75A0E18();
}

uint64_t sub_1D759EBB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D759EA0C();
  *a1 = result;
  return result;
}

uint64_t sub_1D759EBD8(uint64_t a1)
{
  unint64_t v2 = sub_1D759EED0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D759EC14(uint64_t a1)
{
  unint64_t v2 = sub_1D759EED0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void PairedHostInfo.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B408);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_38_1();
  sub_1D759EED0();
  OUTLINED_FUNCTION_31_0();
  sub_1D7661450();
  if (!v0)
  {
    type metadata accessor for PairedHostInfo(0);
    OUTLINED_FUNCTION_48();
    sub_1D765FFD0();
    sub_1D75ABC5C(&qword_1EA82B418, MEMORY[0x1F418BB08]);
    OUTLINED_FUNCTION_39_0();
    sub_1D7661490();
    sub_1D7661490();
    sub_1D765FF70();
    sub_1D75ABC5C(&qword_1EA82B420, MEMORY[0x1F418BA58]);
    OUTLINED_FUNCTION_39_0();
    sub_1D7661430();
    sub_1D7661430();
    sub_1D7661460();
    sub_1D7661400();
    sub_1D7661400();
  }
  OUTLINED_FUNCTION_28_0();
  v2();
  OUTLINED_FUNCTION_4_0();
}

unint64_t sub_1D759EED0()
{
  unint64_t result = qword_1EA82B410;
  if (!qword_1EA82B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B410);
  }
  return result;
}

void PairedHostInfo.init(from:)()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B428);
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_27();
  uint64_t v74 = type metadata accessor for PairedHostInfo(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_14();
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D759EED0();
  sub_1D76617A0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  else
  {
    uint64_t v71 = v4;
    uint64_t v72 = v6;
    uint64_t *v10 = sub_1D7661340();
    v10[1] = v11;
    uint64_t v12 = sub_1D765FFD0();
    OUTLINED_FUNCTION_59(v12, v13, v14, v15, v16, v17, v18, v19, v67[0]);
    OUTLINED_FUNCTION_0_5();
    uint64_t v70 = v20;
    MEMORY[0x1F4188790](v21);
    unint64_t v68 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v69 = v22;
    uint64_t v23 = (char *)v67 - v68;
    OUTLINED_FUNCTION_48();
    v67[1] = sub_1D75ABC5C(&qword_1EA82B430, MEMORY[0x1F418BB08]);
    sub_1D7661380();
    uint64_t v24 = (int *)v74;
    uint64_t v25 = (uint64_t)v2;
    uint64_t v26 = (char *)v10 + *(int *)(v74 + 20);
    uint64_t v70 = *(void *)(v70 + 32);
    ((void (*)(char *, char *, uint64_t))v70)(v26, v23, v12);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_59(v27, v28, v29, v30, v31, v32, v33, v34, v67[0]);
    MEMORY[0x1F4188790](v35);
    uint64_t v36 = (char *)v67 - v68;
    sub_1D7661380();
    ((void (*)(char *, char *, uint64_t))v70)((char *)v10 + v24[6], v36, v12);
    OUTLINED_FUNCTION_36_0();
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    OUTLINED_FUNCTION_59(v37, v38, v39, v40, v41, v42, v43, v44, v67[0]);
    uint64_t v46 = OUTLINED_FUNCTION_23_0(v45);
    MEMORY[0x1F4188790](v46);
    unint64_t v69 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v70 = v47;
    char v48 = (char *)v67 - v69;
    sub_1D765FF70();
    sub_1D75ABC5C(&qword_1EA82B438, MEMORY[0x1F418BA58]);
    OUTLINED_FUNCTION_57();
    sub_1D7661320();
    uint64_t v49 = sub_1D759E58C((uint64_t)v48, (uint64_t)v10 + v24[7]);
    OUTLINED_FUNCTION_59(v49, v50, v51, v52, v53, v54, v55, v56, v67[0]);
    MEMORY[0x1F4188790](v57);
    uint64_t v58 = (char *)v67 - v69;
    OUTLINED_FUNCTION_57();
    sub_1D7661320();
    sub_1D759E58C((uint64_t)v58, (uint64_t)v10 + v24[8]);
    OUTLINED_FUNCTION_36_0();
    *((unsigned char *)v10 + v24[9]) = sub_1D7661350() & 1;
    uint64_t v59 = sub_1D76612F0();
    uint64_t v60 = (uint64_t *)((char *)v10 + v24[10]);
    *uint64_t v60 = v59;
    v60[1] = v61;
    uint64_t v62 = sub_1D76612F0();
    uint64_t v64 = v63;
    OUTLINED_FUNCTION_6();
    v65();
    long long v66 = (uint64_t *)((char *)v10 + v24[11]);
    *long long v66 = v62;
    v66[1] = v64;
    sub_1D759FD08((uint64_t)v10, v71, (void (*)(void))type metadata accessor for PairedHostInfo);
    __swift_destroy_boxed_opaque_existential_0Tm(v25);
    sub_1D75A6FD0((uint64_t)v10, (void (*)(void))type metadata accessor for PairedHostInfo);
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1D759F5BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F48656C676E6973 && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D759F6A8(char a1)
{
  if (a1) {
    return 0x6F48656C676E6973;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1D759F6DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1D759F770()
{
}

void sub_1D759F788()
{
}

uint64_t sub_1D759F7A4(uint64_t a1)
{
  unint64_t v2 = sub_1D759FDB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D759F7E0(uint64_t a1)
{
  unint64_t v2 = sub_1D759FDB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D759F81C()
{
  return sub_1D759F6A8(*v0);
}

uint64_t sub_1D759F824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D759F5BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D759F84C(uint64_t a1)
{
  unint64_t v2 = sub_1D759FCBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D759F888(uint64_t a1)
{
  unint64_t v2 = sub_1D759FCBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D759F8C8()
{
  return sub_1D75A1080();
}

uint64_t sub_1D759F8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D759F6DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D759F918(uint64_t a1)
{
  unint64_t v2 = sub_1D759FD68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D759F954(uint64_t a1)
{
  unint64_t v2 = sub_1D759FD68();
  return MEMORY[0x1F41862B0](a1, v2);
}

void HostDeletionTarget.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v25 = v1;
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B440);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_0(v6, v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B448);
  OUTLINED_FUNCTION_0_5();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = OUTLINED_FUNCTION_18_0();
  uint64_t v11 = type metadata accessor for HostDeletionTarget(v10);
  uint64_t v12 = OUTLINED_FUNCTION_23_0(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_51();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B450);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1D759FCBC();
  sub_1D76617C0();
  sub_1D759FD08(v25, v0, (void (*)(void))type metadata accessor for HostDeletionTarget);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  if (__swift_getEnumTagSinglePayload(v0, 1, v14) == 1)
  {
    sub_1D759FDB4();
    sub_1D76613F0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v24);
  }
  else
  {
    uint64_t v17 = sub_1D765FFD0();
    OUTLINED_FUNCTION_0_5();
    uint64_t v19 = v18;
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_52();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v2, v0, v17);
    sub_1D759FD68();
    sub_1D76613F0();
    sub_1D75ABC5C(&qword_1EA82B418, MEMORY[0x1F418BB08]);
    sub_1D7661490();
    OUTLINED_FUNCTION_6();
    v21();
    OUTLINED_FUNCTION_28_0();
    v22();
  }
  uint64_t v15 = OUTLINED_FUNCTION_42();
  v16(v15);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_4_0();
}

uint64_t type metadata accessor for HostDeletionTarget(uint64_t a1)
{
  return sub_1D75A6F50(a1, (uint64_t *)&unk_1EBDEB198);
}

unint64_t sub_1D759FCBC()
{
  unint64_t result = qword_1EA82B458;
  if (!qword_1EA82B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B458);
  }
  return result;
}

uint64_t sub_1D759FD08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1D759FD68()
{
  unint64_t result = qword_1EA82B468;
  if (!qword_1EA82B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B468);
  }
  return result;
}

unint64_t sub_1D759FDB4()
{
  unint64_t result = qword_1EA82B470;
  if (!qword_1EA82B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B470);
  }
  return result;
}

void HostDeletionTarget.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v52 = v0;
  uint64_t v2 = v1;
  uint64_t v48 = v3;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B478);
  OUTLINED_FUNCTION_0_5();
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_14();
  uint64_t v51 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B480);
  OUTLINED_FUNCTION_0_5();
  uint64_t v45 = v8;
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_14();
  uint64_t v49 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B488);
  OUTLINED_FUNCTION_0_5();
  uint64_t v50 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = OUTLINED_FUNCTION_40();
  uint64_t v13 = type metadata accessor for HostDeletionTarget(v12);
  OUTLINED_FUNCTION_2_2();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v41 - v18;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D759FCBC();
  uint64_t v20 = v52;
  sub_1D76617A0();
  if (v20) {
    goto LABEL_8;
  }
  uint64_t v41 = v17;
  uint64_t v42 = v19;
  uint64_t v43 = 0;
  uint64_t v52 = v2;
  uint64_t v21 = sub_1D76613D0();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22
    || (char v53 = *(unsigned char *)(v21 + 32),
        sub_1D75AB82C(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    uint64_t v28 = sub_1D7661150();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B490);
    *uint64_t v30 = v13;
    sub_1D76612E0();
    sub_1D7661140();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_32_0();
    v31();
    uint64_t v2 = v52;
LABEL_8:
    uint64_t v32 = (uint64_t)v2;
    goto LABEL_9;
  }
  if (v53)
  {
    sub_1D759FD68();
    OUTLINED_FUNCTION_58();
    sub_1D765FFD0();
    sub_1D75ABC5C(&qword_1EA82B430, MEMORY[0x1F418BB08]);
    uint64_t v27 = (uint64_t)v41;
    sub_1D7661380();
    OUTLINED_FUNCTION_6();
    v36();
    swift_unknownObjectRelease();
    uint64_t v37 = OUTLINED_FUNCTION_45_0();
    v38(v37);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
    __swift_storeEnumTagSinglePayload(v27, 0, 1, v39);
    uint64_t v40 = (uint64_t)v42;
    sub_1D75A6C74(v27, (uint64_t)v42, (void (*)(void))type metadata accessor for HostDeletionTarget);
  }
  else
  {
    sub_1D759FDB4();
    OUTLINED_FUNCTION_58();
    OUTLINED_FUNCTION_6();
    v33();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6();
    v34();
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
    uint64_t v40 = (uint64_t)v42;
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 1, 1, v35);
  }
  sub_1D75A6C74(v40, v48, (void (*)(void))type metadata accessor for HostDeletionTarget);
  uint64_t v32 = (uint64_t)v52;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0Tm(v32);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A0330()
{
}

void sub_1D75A0348()
{
}

unint64_t RPUSBConnectedHostTrustState.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x64657473757274;
  switch(v1)
  {
    case 0:
      unint64_t result = 0xD000000000000011;
      break;
    case 1:
      unint64_t result = 0x7375727420746F6ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      return result;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

BOOL static RPUSBConnectedHostTrustState.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

unint64_t sub_1D75A0448()
{
  return RPUSBConnectedHostTrustState.description.getter(*v0);
}

BOOL sub_1D75A0450(uint64_t *a1, uint64_t *a2)
{
  return static RPUSBConnectedHostTrustState.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1D75A045C(uint64_t *a1, uint64_t *a2)
{
  return sub_1D760ABB8(*a1, *a2);
}

BOOL sub_1D75A0468(uint64_t *a1, uint64_t *a2)
{
  return sub_1D760ABC4(*a1, *a2);
}

BOOL sub_1D75A0474(uint64_t *a1, uint64_t *a2)
{
  return sub_1D760ABD0(*a1, *a2);
}

uint64_t DeletePairedHostRecordRequest.target.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D759FD08(v1, a1, (void (*)(void))type metadata accessor for HostDeletionTarget);
}

uint64_t sub_1D75A04B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D75A0534()
{
  return 0x746567726174;
}

uint64_t sub_1D75A054C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A04B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75A0578(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6BC0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A05B4(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6BC0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DeletePairedHostRecordRequest.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B498);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_38_1();
  sub_1D75A6BC0();
  OUTLINED_FUNCTION_31_0();
  type metadata accessor for HostDeletionTarget(0);
  sub_1D75A6C2C(&qword_1EA82B4A8, (void (*)(uint64_t))type metadata accessor for HostDeletionTarget);
  sub_1D7661490();
  OUTLINED_FUNCTION_32_0();
  return v1();
}

void DeletePairedHostRecordRequest.init(from:)()
{
  OUTLINED_FUNCTION_3();
  char v3 = v2;
  uint64_t v12 = v4;
  type metadata accessor for HostDeletionTarget(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_14();
  uint64_t v13 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B4B0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_18_0();
  uint64_t v9 = type metadata accessor for DeletePairedHostRecordRequest(v8);
  uint64_t v10 = OUTLINED_FUNCTION_23_0(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_27();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1D75A6BC0();
  sub_1D76617A0();
  if (!v0)
  {
    sub_1D75A6C2C(&qword_1EA82B4B8, (void (*)(uint64_t))type metadata accessor for HostDeletionTarget);
    sub_1D7661380();
    OUTLINED_FUNCTION_6();
    v11();
    sub_1D75A6C74(v13, v1, (void (*)(void))type metadata accessor for HostDeletionTarget);
    sub_1D75A6C74(v1, v12, (void (*)(void))type metadata accessor for DeletePairedHostRecordRequest);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A08FC()
{
}

uint64_t sub_1D75A0914()
{
  return DeletePairedHostRecordRequest.encode(to:)();
}

uint64_t sub_1D75A092C(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6CD4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A0968(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6CD4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ListPairedHostRecordRequest.encode(to:)()
{
}

uint64_t ListPairedHostRecordRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1D75A0A08(uint64_t a1)
{
  return FetchNetworkPairingSessionIDRequest.init(from:)(a1);
}

void sub_1D75A0A20()
{
}

RemotePairingDevice::ListPairedHostRecordResponse __swiftcall ListPairedHostRecordResponse.init(hosts:)(RemotePairingDevice::ListPairedHostRecordResponse hosts)
{
  v1->hosts._rawValue = hosts.hosts._rawValue;
  return hosts;
}

uint64_t sub_1D75A0A40(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7374736F68 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D75A0AC0()
{
  return 0x7374736F68;
}

uint64_t sub_1D75A0AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A0A40(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75A0B04(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6D20();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A0B40(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6D20();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ListPairedHostRecordResponse.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B4D0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_30();
  __swift_project_boxed_opaque_existential_0Tm(v1, v1[3]);
  sub_1D75A6D20();
  OUTLINED_FUNCTION_31_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B4E0);
  sub_1D75A6D6C(&qword_1EA82B4E8, &qword_1EA82B4F0);
  sub_1D7661490();
  OUTLINED_FUNCTION_32_0();
  v3();
  OUTLINED_FUNCTION_4_0();
}

void ListPairedHostRecordResponse.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_3();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B4F8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_35_0();
  sub_1D75A6D20();
  OUTLINED_FUNCTION_21_3();
  if (!v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B4E0);
    sub_1D75A6D6C(&qword_1EA82B500, &qword_1EA82B508);
    sub_1D7661380();
    uint64_t v16 = OUTLINED_FUNCTION_22();
    v17(v16);
    *uint64_t v14 = a10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v12);
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1D75A0DF0()
{
  return 1;
}

uint64_t sub_1D75A0E10()
{
  return 1;
}

uint64_t sub_1D75A0E18()
{
  return 0;
}

uint64_t sub_1D75A0E24()
{
  return 0;
}

void sub_1D75A0E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ListPairedHostRecordResponse.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1D75A0E48()
{
}

uint64_t sub_1D75A0E60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75A0DF0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D75A0E8C()
{
  return sub_1D75A0E18();
}

uint64_t sub_1D75A0EA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75A0E10();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D75A0ED4(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A0F10(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E00();
  return MEMORY[0x1F41862B0](a1, v2);
}

void FetchNetworkPairingSessionIDRequest.encode(to:)()
{
}

uint64_t FetchNetworkPairingSessionIDRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void sub_1D75A0FB0()
{
}

RemotePairingDevice::FetchNetworkPairingSessionIDResponse __swiftcall FetchNetworkPairingSessionIDResponse.init(networkPairingSessionID:)(RemotePairingDevice::FetchNetworkPairingSessionIDResponse networkPairingSessionID)
{
  *uint64_t v1 = networkPairingSessionID;
  return networkPairingSessionID;
}

uint64_t sub_1D75A0FD0()
{
  return sub_1D7661740();
}

uint64_t sub_1D75A0FF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000001D76722D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D75A1080()
{
  return sub_1D7661760();
}

unint64_t sub_1D75A10C4()
{
  return 0xD000000000000017;
}

uint64_t sub_1D75A10E0()
{
  return sub_1D7661760();
}

uint64_t sub_1D75A1124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A0FF8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75A1150(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A118C(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void FetchNetworkPairingSessionIDResponse.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B520);
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_9();
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75A6E4C();
  sub_1D76617C0();
  sub_1D7661450();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_4_0();
}

void FetchNetworkPairingSessionIDResponse.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B530);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_35_0();
  sub_1D75A6E4C();
  OUTLINED_FUNCTION_21_3();
  if (!v0)
  {
    uint64_t v6 = sub_1D7661340();
    uint64_t v8 = v7;
    uint64_t v9 = OUTLINED_FUNCTION_22();
    v10(v9);
    *uint64_t v4 = v6;
    v4[1] = v8;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v2);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A13A8()
{
}

void sub_1D75A13C0()
{
}

uint64_t sub_1D75A13D8(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A1414(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6E98();
  return MEMORY[0x1F41862B0](a1, v2);
}

void QueryUSBConnectedHostTrustStateRequest.encode(to:)()
{
}

void sub_1D75A148C()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  v1();
  sub_1D76617C0();
  OUTLINED_FUNCTION_28_0();
  v6();
  OUTLINED_FUNCTION_4_0();
}

uint64_t QueryUSBConnectedHostTrustStateRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void sub_1D75A1588()
{
}

uint64_t AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.getter()
{
  return *v0;
}

uint64_t AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.modify())(void)
{
  return nullsub_1;
}

uint64_t AllowPromptlessPairingWithHostRequest.associatedHostBUID.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t AllowPromptlessPairingWithHostRequest.associatedHostBUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AllowPromptlessPairingWithHostRequest.associatedHostBUID.modify())(void)
{
  return nullsub_1;
}

RemotePairingDevice::AllowPromptlessPairingWithHostRequest __swiftcall AllowPromptlessPairingWithHostRequest.init(pairingShouldBeMarkedForAutomation:associatedHostBUID:)(Swift::Bool pairingShouldBeMarkedForAutomation, Swift::String associatedHostBUID)
{
  *(unsigned char *)uint64_t v2 = pairingShouldBeMarkedForAutomation;
  *(Swift::String *)(v2 + 8) = associatedHostBUID;
  result.associatedHostBUID = associatedHostBUID;
  result.pairingShouldBeMarkedForAutomation = pairingShouldBeMarkedForAutomation;
  return result;
}

uint64_t sub_1D75A1660(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000022 && a2 == 0x80000001D76722F0 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7672320)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1D75A1750(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0xD000000000000022;
  }
}

unint64_t sub_1D75A178C()
{
  return sub_1D75A1750(*v0);
}

uint64_t sub_1D75A1794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A1660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75A17BC(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6EE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A17F8(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6EE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void AllowPromptlessPairingWithHostRequest.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B538);
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1D75A6EE4();
  sub_1D76617C0();
  sub_1D7661460();
  if (!v0)
  {
    OUTLINED_FUNCTION_48();
    sub_1D7661450();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_4_0();
}

void AllowPromptlessPairingWithHostRequest.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B548);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_35_0();
  sub_1D75A6EE4();
  OUTLINED_FUNCTION_21_3();
  if (!v0)
  {
    char v6 = sub_1D7661350();
    uint64_t v7 = sub_1D7661340();
    uint64_t v9 = v8;
    OUTLINED_FUNCTION_28_0();
    v10();
    *(unsigned char *)uint64_t v4 = v6 & 1;
    *(void *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = v9;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v2);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A1AA4()
{
}

void sub_1D75A1ABC()
{
}

uint64_t sub_1D75A1AD8()
{
  return CreateWirelessPairingSessionRequest.endpoint.setter();
}

void (*CreateWirelessPairingSessionRequest.endpoint.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D76601E0();
  return sub_1D75A1B60;
}

void sub_1D75A1B60(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t CreateWirelessPairingSessionRequest.requestCustomPinHandler.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CreateWirelessPairingSessionRequest(0) + 20));
}

uint64_t CreateWirelessPairingSessionRequest.requestCustomPinHandler.setter(char a1)
{
  uint64_t result = type metadata accessor for CreateWirelessPairingSessionRequest(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CreateWirelessPairingSessionRequest.requestCustomPinHandler.modify())(void)
{
  return nullsub_1;
}

BOOL sub_1D75A1C48(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1D75A1C58()
{
  return sub_1D7661740();
}

uint64_t sub_1D75A1C80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7672340)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D75A1D70()
{
  return 2;
}

uint64_t sub_1D75A1D78(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x746E696F70646E65;
  }
}

BOOL sub_1D75A1DB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D75A1C48(*a1, *a2);
}

uint64_t sub_1D75A1DC0()
{
  return sub_1D75A25A8();
}

uint64_t sub_1D75A1DDC()
{
  return sub_1D75A1C58();
}

uint64_t sub_1D75A1DE4()
{
  return sub_1D75A1D78(*v0);
}

uint64_t sub_1D75A1DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A1C80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75A1E14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75A1D70();
  *a1 = result;
  return result;
}

uint64_t sub_1D75A1E3C(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6F84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A1E78(uint64_t a1)
{
  unint64_t v2 = sub_1D75A6F84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CreateWirelessPairingSessionRequest.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B550);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_38_1();
  sub_1D75A6F84();
  OUTLINED_FUNCTION_31_0();
  sub_1D7660210();
  sub_1D75A6C2C(&qword_1EA82B560, MEMORY[0x1E4F77AB0]);
  sub_1D7661490();
  if (!v0)
  {
    type metadata accessor for CreateWirelessPairingSessionRequest(0);
    OUTLINED_FUNCTION_48();
    sub_1D7661460();
  }
  OUTLINED_FUNCTION_32_0();
  return v2();
}

void CreateWirelessPairingSessionRequest.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v22 = v4;
  uint64_t v26 = sub_1D7660210();
  OUTLINED_FUNCTION_0_5();
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B568);
  OUTLINED_FUNCTION_0_5();
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = OUTLINED_FUNCTION_18_0();
  uint64_t WirelessPairingSessionRequest = type metadata accessor for CreateWirelessPairingSessionRequest(v11);
  uint64_t v13 = OUTLINED_FUNCTION_23_0(WirelessPairingSessionRequest);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_25();
  uint64_t v15 = *(int *)(v14 + 28);
  *(unsigned char *)(v1 + v15) = 0;
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1D75A6F84();
  sub_1D76617A0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
  }
  else
  {
    uint64_t v21 = v15;
    uint64_t v16 = v23;
    sub_1D75A6C2C(&qword_1EA82B570, MEMORY[0x1E4F77AB0]);
    uint64_t v17 = v26;
    sub_1D7661380();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v1, v8, v17);
    char v18 = sub_1D7661350();
    OUTLINED_FUNCTION_6();
    v19();
    uint64_t v20 = v22;
    *(unsigned char *)(v1 + v21) = v18 & 1;
    sub_1D759FD08(v1, v20, (void (*)(void))type metadata accessor for CreateWirelessPairingSessionRequest);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
    sub_1D75A6FD0(v1, (void (*)(void))type metadata accessor for CreateWirelessPairingSessionRequest);
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1D75A22EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 2003789939 && a2 == 0xE400000000000000;
    if (v6 || (sub_1D7661560() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701079400 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1D7661560();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1D75A241C()
{
  return 3;
}

uint64_t sub_1D75A2424()
{
  return sub_1D7661760();
}

uint64_t sub_1D75A246C(char a1)
{
  if (!a1) {
    return 0x7974706D65;
  }
  if (a1 == 1) {
    return 2003789939;
  }
  return 1701079400;
}

uint64_t sub_1D75A24B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7235952 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48676E69646E6573 && a2 == 0xEB0000000074736FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D75A25A8()
{
  return sub_1D7661760();
}

uint64_t sub_1D75A25F0(char a1)
{
  if (a1) {
    return 0x48676E69646E6573;
  }
  else {
    return 7235952;
  }
}

void sub_1D75A2628()
{
}

uint64_t sub_1D75A2640()
{
  return CreateWirelessPairingSessionRequest.encode(to:)();
}

uint64_t sub_1D75A2658()
{
  return sub_1D7661760();
}

uint64_t sub_1D75A269C()
{
  return sub_1D75A246C(*v0);
}

uint64_t sub_1D75A26A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A22EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75A26CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75A241C();
  *a1 = result;
  return result;
}

uint64_t sub_1D75A26F4(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7024();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A2730(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7024();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75A276C(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7108();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A27A8(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7108();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75A27E4(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7070();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A2820(uint64_t a1)
{
  unint64_t v2 = sub_1D75A7070();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75A285C()
{
  return sub_1D75A25F0(*v0);
}

uint64_t sub_1D75A2864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75A24B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75A288C(uint64_t a1)
{
  unint64_t v2 = sub_1D75A70BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75A28C8(uint64_t a1)
{
  unint64_t v2 = sub_1D75A70BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void PinNotificationEvent.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B578);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B580);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_0(v7, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B588);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_27();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B590);
  OUTLINED_FUNCTION_0_5();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_30();
  uint64_t v13 = *(void *)(v0 + 8);
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1D75A7024();
  sub_1D76617C0();
  if (!v13)
  {
    sub_1D75A7108();
    OUTLINED_FUNCTION_46();
    OUTLINED_FUNCTION_54();
    goto LABEL_5;
  }
  if (v13 == 1)
  {
    sub_1D75A7070();
    OUTLINED_FUNCTION_46();
LABEL_5:
    OUTLINED_FUNCTION_6();
    v14();
    OUTLINED_FUNCTION_28_0();
    v15();
    goto LABEL_9;
  }
  sub_1D75A70BC();
  OUTLINED_FUNCTION_46();
  sub_1D7661450();
  if (!v1) {
    sub_1D7661400();
  }
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_6();
  v16();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v9);
LABEL_9:
  OUTLINED_FUNCTION_4_0();
}

void PinNotificationEvent.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v41 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B5B8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_0(v6, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B5C0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_52();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B5C8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B5D0);
  OUTLINED_FUNCTION_0_5();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_9();
  uint64_t v42 = v3;
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1D75A7024();
  sub_1D76617A0();
  if (v0) {
    goto LABEL_10;
  }
  uint64_t v13 = sub_1D76613D0();
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = v9;
  if (!v14)
  {
LABEL_9:
    uint64_t v22 = sub_1D7661150();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B490);
    *uint64_t v24 = &type metadata for PinNotificationEvent;
    sub_1D76612E0();
    sub_1D7661140();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA70], v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v15);
LABEL_10:
    uint64_t v38 = (uint64_t)v42;
    goto LABEL_11;
  }
  uint64_t v16 = v1;
  int v17 = *(unsigned __int8 *)(v13 + 32);
  sub_1D75AB82C(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
    uint64_t v15 = v9;
    uint64_t v1 = v16;
    goto LABEL_9;
  }
  if (v17)
  {
    if (v17 == 1)
    {
      OUTLINED_FUNCTION_48();
      sub_1D75A70BC();
      sub_1D76612D0();
      uint64_t v29 = sub_1D7661340();
      uint64_t v31 = v30;
      uint64_t v32 = sub_1D76612F0();
      uint64_t v34 = v33;
      uint64_t v35 = v32;
      OUTLINED_FUNCTION_32_0();
      v36();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_24_0();
      v37();
    }
    else
    {
      sub_1D75A7070();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_6();
      v27();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_24_0();
      v28();
      uint64_t v29 = 0;
      uint64_t v35 = 0;
      uint64_t v34 = 0;
      uint64_t v31 = 1;
    }
    uint64_t v38 = (uint64_t)v42;
    uint64_t v39 = v41;
  }
  else
  {
    sub_1D75A7108();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_6();
    v25();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6();
    v26();
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    uint64_t v35 = 0;
    uint64_t v34 = 0;
    uint64_t v38 = (uint64_t)v42;
    uint64_t v39 = v41;
  }
  *uint64_t v39 = v29;
  v39[1] = v31;
  v39[2] = v35;
  v39[3] = v34;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0Tm(v38);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A318C()
{
}

void sub_1D75A31A4()
{
}

id RemotePairingDevicePairingServiceConnection.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id RemotePairingDevicePairingServiceConnection.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1D7660260();
  id v2 = v0;
  sub_1D7660240();

  sub_1D7660280();
  uint64_t v3 = swift_dynamicCastClassUnconditional();
  id v4 = objc_allocWithZone(ObjectType);
  id v5 = sub_1D75A32E8(v3);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id sub_1D75A32E8(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection_connection] = a1;
  id v4 = v1;
  swift_retain();
  sub_1D76600D0();

  v7.receiver = v4;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_release();
  return v5;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemotePairingDevicePairingServiceConnection.deleteAllPairingRecords()()
{
  uint64_t v1 = type metadata accessor for HostDeletionTarget(0);
  uint64_t v2 = OUTLINED_FUNCTION_23_0(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_8();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)(v0);
  sub_1D75A6FD0(v0, (void (*)(void))type metadata accessor for HostDeletionTarget);
}

uint64_t RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)(uint64_t a1)
{
  type metadata accessor for DeletePairedHostRecordRequest(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_8();
  sub_1D759FD08(a1, v1, (void (*)(void))type metadata accessor for HostDeletionTarget);
  sub_1D75A6C2C(&qword_1EA82B5E0, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  sub_1D75A6C2C((unint64_t *)&unk_1EA82B5E8, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  sub_1D76600E0();
  return sub_1D75A6FD0(v1, (void (*)(void))type metadata accessor for DeletePairedHostRecordRequest);
}

uint64_t RemotePairingDevicePairingServiceConnection.deletePairingRecord(forHostWithIdentifier:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HostDeletionTarget(0);
  uint64_t v4 = OUTLINED_FUNCTION_23_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_40();
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, a1);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v6);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)(v1);
  return sub_1D75A6FD0(v1, (void (*)(void))type metadata accessor for HostDeletionTarget);
}

uint64_t RemotePairingDevicePairingServiceConnection.deletePairingRecord(uuid:queue:completion:)()
{
  uint64_t v2 = OUTLINED_FUNCTION_44();
  uint64_t v3 = type metadata accessor for HostDeletionTarget(v2);
  uint64_t v4 = OUTLINED_FUNCTION_23_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_9();
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, v0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v6);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:invokingCompletionHandlerOn:completion:)();
  return sub_1D75A6FD0(v1, (void (*)(void))type metadata accessor for HostDeletionTarget);
}

uint64_t RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:invokingCompletionHandlerOn:completion:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_44();
  uint64_t v5 = type metadata accessor for DeletePairedHostRecordRequest(v4);
  uint64_t v6 = OUTLINED_FUNCTION_23_0(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_9();
  sub_1D759FD08(v2, v3, (void (*)(void))type metadata accessor for HostDeletionTarget);
  uint64_t v7 = OUTLINED_FUNCTION_33();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v0;
  swift_retain();
  sub_1D75A3CB0();
  swift_release();
  return sub_1D75A6FD0(v3, (void (*)(void))type metadata accessor for DeletePairedHostRecordRequest);
}

uint64_t RemotePairingDevicePairingServiceConnection.deleteAllPairingRecords(invokingCompletionHandlerOn:completion:)()
{
  uint64_t v1 = type metadata accessor for HostDeletionTarget(0);
  uint64_t v2 = OUTLINED_FUNCTION_23_0(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_30();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v3);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:invokingCompletionHandlerOn:completion:)();
  return sub_1D75A6FD0(v0, (void (*)(void))type metadata accessor for HostDeletionTarget);
}

uint64_t sub_1D75A3CB0()
{
  uint64_t v0 = type metadata accessor for DeletePairedHostRecordRequest(0);
  MEMORY[0x1F4188790](v0);
  v3[1] = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D75A6C2C(&qword_1EA82B5E0, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  sub_1D75A6C2C((unint64_t *)&unk_1EA82B5E8, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  return sub_1D76600A0();
}

uint64_t sub_1D75A3F2C()
{
  return sub_1D76600A0();
}

uint64_t sub_1D75A40CC()
{
  return sub_1D76600A0();
}

uint64_t sub_1D75A426C()
{
  return sub_1D76600A0();
}

uint64_t sub_1D75A4448()
{
  uint64_t WirelessPairingSessionRequest = type metadata accessor for CreateWirelessPairingSessionRequest(0);
  MEMORY[0x1F4188790](WirelessPairingSessionRequest);
  v3[1] = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D75A6C2C(&qword_1EA82B658, (void (*)(uint64_t))type metadata accessor for CreateWirelessPairingSessionRequest);
  sub_1D75A6C2C((unint64_t *)&unk_1EA82B660, (void (*)(uint64_t))type metadata accessor for CreateWirelessPairingSessionRequest);
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  return sub_1D76600A0();
}

uint64_t sub_1D75A46C4()
{
  OUTLINED_FUNCTION_20_0();
  sub_1D75AB940();
  sub_1D75AB98C();
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  uint64_t result = OUTLINED_FUNCTION_15_0();
  if (v0)
  {

    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_2();
    uint64_t result = OUTLINED_FUNCTION_12_0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75A47BC()
{
  return sub_1D76600A0();
}

uint64_t sub_1D75A4930()
{
  return sub_1D76600A0();
}

uint64_t sub_1D75A4A84()
{
  OUTLINED_FUNCTION_20_0();
  sub_1D75AB9D8();
  sub_1D75ABA24();
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  uint64_t result = OUTLINED_FUNCTION_15_0();
  if (v0)
  {

    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_2();
    uint64_t result = OUTLINED_FUNCTION_12_0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75A4B7C()
{
  OUTLINED_FUNCTION_20_0();
  sub_1D75AB8A8();
  sub_1D75AB8F4();
  sub_1D75A7154();
  sub_1D75A71A0();
  sub_1D75A71EC();
  uint64_t result = OUTLINED_FUNCTION_15_0();
  if (v0)
  {

    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_2();
    uint64_t result = OUTLINED_FUNCTION_12_0();
    __break(1u);
  }
  return result;
}

uint64_t RemotePairingDevicePairingServiceConnection.listHostPairingRecords(invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A4D44(a1, a2, a3, (uint64_t)&unk_1F2EDEC28, (uint64_t)sub_1D75A7270, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D75A3F2C);
}

void sub_1D75A4CA8(uint64_t a1, void (*a2)(id, uint64_t))
{
  id v3 = *(id *)a1;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 8);
  sub_1D75ABD18(*(id *)a1, v4);
  a2(v3, v4);
  sub_1D75ABD24(v3, v4);
}

uint64_t RemotePairingDevicePairingServiceConnection.fetchNetworkPairingSessionID(invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A4D44(a1, a2, a3, (uint64_t)&unk_1F2EDEC50, (uint64_t)sub_1D75A7278, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D75A40CC);
}

uint64_t sub_1D75A4D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = OUTLINED_FUNCTION_33();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  swift_retain();
  a6(a1, a5, v11);
  return swift_release();
}

void sub_1D75A4DD8(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t))
{
  id v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  sub_1D75ABCF8(*(void **)a1, v4, v5);
  a2(v3, v6, v5);
  sub_1D75ABD08(v3, v4, v5);
}

uint64_t RemotePairingDevicePairingServiceConnection.listHostPairingRecords()()
{
  sub_1D75A7280();
  sub_1D75A72CC();
  sub_1D75A7318();
  sub_1D75A7364();
  sub_1D75A71EC();
  uint64_t result = sub_1D76600E0();
  if (!v0) {
    return v2;
  }
  return result;
}

void RemotePairingDevicePairingServiceConnection.trustedHostInfo()()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = type metadata accessor for PairedHostInfo(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  OUTLINED_FUNCTION_8();
  uint64_t v4 = RemotePairingDevicePairingServiceConnection.listHostPairingRecords()();
  if (!v0)
  {
    uint64_t v5 = v4;
    int64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v14 = MEMORY[0x1E4FBC860];
      sub_1D75A6440(0, v6, 0);
      uint64_t v7 = v5 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v8 = *(void *)(v3 + 72);
      do
      {
        sub_1D759FD08(v7, (uint64_t)v1, (void (*)(void))type metadata accessor for PairedHostInfo);
        sub_1D75A5110(v1, &v13);
        sub_1D75A6FD0((uint64_t)v1, (void (*)(void))type metadata accessor for PairedHostInfo);
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D75A6440(0, *(void *)(v14 + 16) + 1, 1);
          uint64_t v10 = v14;
        }
        unint64_t v12 = *(void *)(v10 + 16);
        unint64_t v11 = *(void *)(v10 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1D75A6440(v11 > 1, v12 + 1, 1);
          uint64_t v10 = v14;
        }
        *(void *)(v10 + 16) = v12 + 1;
        *(void *)(v10 + 8 * v12 + 32) = v9;
        v7 += v8;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75A5110(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B888);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7663320;
  uint64_t v31 = @"identifier";
  *(void *)(inited + 32) = @"identifier";
  uint64_t v4 = type metadata accessor for PairedHostInfo(0);
  uint64_t v5 = (char *)a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1D765FFD0();
  *(void *)(inited + 64) = v6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, v5, v6);
  *(void *)(inited + 72) = @"name";
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  uint64_t v9 = a1[1];
  *(void *)(inited + 80) = *a1;
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = @"model";
  uint64_t v10 = v4;
  uint64_t v32 = v4;
  unint64_t v11 = (void *)((char *)a1 + *(int *)(v4 + 40));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B890);
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = v13;
  *(void *)(inited + 144) = v14;
  *(void *)(inited + 152) = @"serialNumber";
  uint64_t v15 = (void *)((char *)a1 + *(int *)(v10 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *(void *)(inited + 184) = v14;
  *(void *)(inited + 160) = v16;
  *(void *)(inited + 168) = v17;
  type metadata accessor for RPTrustedHostInfoKey(0);
  v30[1] = v18;
  sub_1D75A6C2C((unint64_t *)&qword_1EA82AEE0, type metadata accessor for RPTrustedHostInfoKey);
  uint64_t v19 = v31;
  unint64_t v20 = @"name";
  swift_bridgeObjectRetain();
  unint64_t v21 = @"model";
  swift_bridgeObjectRetain();
  uint64_t v22 = @"serialNumber";
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1D7660A50();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D758CBFC((uint64_t)a1 + *(int *)(v32 + 28), (uint64_t)v25);
  uint64_t v26 = sub_1D765FF70();
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26) == 1)
  {
    uint64_t v27 = @"lastUsed";
    sub_1D75940B4((uint64_t)v25, &qword_1EBDEAC80);
    long long v34 = 0u;
    long long v35 = 0u;
  }
  else
  {
    *((void *)&v35 + 1) = v26;
    uint64_t v28 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v34);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v28, v25, v26);
    uint64_t v29 = @"lastUsed";
  }
  sub_1D75B4484((uint64_t)&v34, @"lastUsed");
  *uint64_t v33 = v36;
}

uint64_t RemotePairingDevicePairingServiceConnection.getUSBConectedHostTrustState()()
{
  type metadata accessor for RPUSBConnectedHostTrustState(0);
  sub_1D75A73B0();
  sub_1D75A73FC();
  sub_1D75A6C2C((unint64_t *)&unk_1EBDEAC38, type metadata accessor for RPUSBConnectedHostTrustState);
  sub_1D75A6C2C(&qword_1EBDEAC30, type metadata accessor for RPUSBConnectedHostTrustState);
  sub_1D75A71EC();
  uint64_t result = sub_1D76600E0();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t RemotePairingDevicePairingServiceConnection.getUSBConnectedHostState(with:)()
{
  return RemotePairingDevicePairingServiceConnection.getUSBConectedHostTrustState()();
}

uint64_t RemotePairingDevicePairingServiceConnection.allowPromptlessPairingForHost(pairingShouldBeMarkedForAutomation:forBUID:withQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = OUTLINED_FUNCTION_33();
  *(void *)(v8 + 16) = a5;
  *(void *)(v8 + 24) = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D75A426C();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1D75A5778(uint64_t a1, void (*a2)(id))
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    id v3 = *(id *)a1;
    id v4 = *(id *)a1;
    a2(v3);
    sub_1D75ABBB4(v3, 1);
  }
  else
  {
    a2(0);
  }
}

uint64_t RemotePairingDevicePairingServiceConnection.initiateWirelessPairingSession(withQueue:completionHandler:customPinHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WirelessPairingSessionRequest = type metadata accessor for CreateWirelessPairingSessionRequest(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_51();
  uint64_t v12 = (void *)swift_allocObject();
  long long v12[2] = a1;
  void v12[3] = a2;
  v12[4] = a3;
  sub_1D76602A0();
  a1;
  swift_retain();
  sub_1D7660250();
  uint64_t v13 = swift_dynamicCastClassUnconditional();
  type metadata accessor for InProgressWirelessPairingSession();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1D75A74B4(a4);
  sub_1D75AC920(v13, (uint64_t)sub_1D75A74A4, (uint64_t)v12, a4, a5);
  sub_1D76600D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B618);
  sub_1D7660090();
  if (a4)
  {
    uint64_t v14 = OUTLINED_FUNCTION_33();
    *(void *)(v14 + 16) = a4;
    *(void *)(v14 + 24) = a5;
    uint64_t v15 = sub_1D75A74CC;
  }
  else
  {
    uint64_t v15 = 0;
  }
  sub_1D75A74B4(a4);
  sub_1D75940A4((uint64_t)v15);
  swift_unknownObjectRetain();
  sub_1D76601D0();
  *(unsigned char *)(v5 + *(int *)(WirelessPairingSessionRequest + 20)) = a4 != 0;
  swift_retain();
  sub_1D75A4448();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release_n();
  return sub_1D75A6FD0(v5, (void (*)(void))type metadata accessor for CreateWirelessPairingSessionRequest);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t *(*v12)(uint64_t *);
  uint64_t vars8;

  uint64_t v10 = OUTLINED_FUNCTION_33();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  if (a4)
  {
    uint64_t v11 = OUTLINED_FUNCTION_33();
    *(void *)(v11 + 16) = a4;
    *(void *)(v11 + 24) = a5;
    uint64_t v12 = sub_1D75A7500;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
  }
  swift_retain();
  sub_1D75A74B4(a4);
  RemotePairingDevicePairingServiceConnection.initiateWirelessPairingSession(withQueue:completionHandler:customPinHandler:)(a1, (uint64_t)sub_1D75A74F4, v10, (uint64_t)v12, v11);
  sub_1D75940A4((uint64_t)v12);
  return swift_release();
}

uint64_t sub_1D75A5B5C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  *(void *)(v9 + 32) = a1;
  *(unsigned char *)(v9 + 40) = a2 & 1;
  void aBlock[4] = sub_1D75ABC04;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = sub_1D7660950();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1D75ABC50(a1);
  sub_1D7660930();
  uint64_t v15 = sub_1D7660910();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = MEMORY[0x1E4FBC860];
  sub_1D75ABC5C((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF60]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v14, v18, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

xpc_endpoint_t sub_1D75A5E00@<X0>(_xpc_connection_s *a1@<X0>, xpc_endpoint_t *a2@<X8>)
{
  xpc_endpoint_t result = xpc_endpoint_create(a1);
  *a2 = result;
  return result;
}

void sub_1D75A5E30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v1 = *(void **)a1;
    MEMORY[0x1F4188790](a1);
    id v2 = v1;
    sub_1D75AC840();
    sub_1D75ABBB4(v1, 1);
  }
}

void sub_1D75A5FB8(id a1, char a2, void (*a3)(id, id))
{
  if (a2)
  {
    id v5 = a1;
    id v6 = 0;
    id v7 = a1;
  }
  else
  {
    id v8 = a1;
    id v6 = a1;
    id v7 = 0;
  }
  a3(v6, v7);
  sub_1D75ABBA0(a1);
}

uint64_t *sub_1D75A6030(uint64_t *result, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = result[1];
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = 0;
      uint64_t v3 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v5 = result[2];
      uint64_t v6 = result[3];
      uint64_t v4 = *result;
    }
    return (uint64_t *)a2(v4, v3, v5, v6);
  }
  return result;
}

void sub_1D75A6190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1D765FD50();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_1D75A6200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    id v7 = (void *)sub_1D7660AE0();
    if (a4)
    {
LABEL_3:
      uint64_t v8 = sub_1D7660AE0();
      goto LABEL_6;
    }
  }
  else
  {
    id v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v7);
}

id RemotePairingDevicePairingServiceConnection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D75A62E0()
{
  return sub_1D7660CD0();
}

uint64_t sub_1D75A6370()
{
  return sub_1D7660CB0();
}

void sub_1D75A63F0()
{
  sub_1D75A66C4();
  void *v0 = v1;
}

uint64_t sub_1D75A6440(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D75A65E0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void sub_1D75A6460()
{
  sub_1D75A6AF4();
  void *v0 = v1;
}

void sub_1D75A64B0()
{
  sub_1D75A66C4();
  void *v0 = v1;
}

void sub_1D75A6500()
{
  sub_1D75A66C4();
  void *v0 = v1;
}

size_t sub_1D75A6550(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1D75A6790(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D75A6570(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D75A6A08(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void sub_1D75A6590()
{
  sub_1D75A6AF4();
  void *v0 = v1;
}

uint64_t sub_1D75A65E0(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B880);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1D75D1174(v12, v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D75D1628((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_1D75A66C4()
{
  OUTLINED_FUNCTION_53();
  if (v6)
  {
    OUTLINED_FUNCTION_43();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_49(v13);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 32;
  uint64_t v15 = v0 + 32;
  if (v3)
  {
    v2(v15, v10, v14);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15, v10, v14);
  }
  swift_release();
}

size_t sub_1D75A6790(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    size_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B7F0);
  uint64_t v10 = *(void *)(sub_1D76604A0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  size_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  long long v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1D76604A0() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (unint64_t)v13 + v16;
  unint64_t v18 = a4 + v16;
  if (v5)
  {
    sub_1D75D145C(v18, v8, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D75D1910(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

void sub_1D75A692C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_43();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C520);
    uint64_t v11 = swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  if (a1)
  {
    sub_1D75D155C((char *)(a4 + 32), v9, (char *)(v11 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D75D19EC();
  }
  swift_release();
}

uint64_t sub_1D75A6A08(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B7D0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  size_t v12 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1D75D15C0(v12, v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D75D1A9C((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_1D75A6AF4()
{
  OUTLINED_FUNCTION_53();
  if (v6)
  {
    OUTLINED_FUNCTION_43();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    size_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_49(v13);
  }
  else
  {
    size_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 32;
  uint64_t v15 = v0 + 32;
  if (v3)
  {
    v2(v15, v10, v14);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15, v10, v14);
  }
  swift_release();
}

unint64_t sub_1D75A6BC0()
{
  unint64_t result = qword_1EA82B4A0;
  if (!qword_1EA82B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B4A0);
  }
  return result;
}

uint64_t type metadata accessor for DeletePairedHostRecordRequest(uint64_t a1)
{
  return sub_1D75A6F50(a1, qword_1EBDEBC40);
}

uint64_t sub_1D75A6C2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75A6C74(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1D75A6CD4()
{
  unint64_t result = qword_1EA82B4C8;
  if (!qword_1EA82B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B4C8);
  }
  return result;
}

unint64_t sub_1D75A6D20()
{
  unint64_t result = qword_1EA82B4D8;
  if (!qword_1EA82B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B4D8);
  }
  return result;
}

uint64_t sub_1D75A6D6C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA82B4E0);
    sub_1D75A6C2C(a2, (void (*)(uint64_t))type metadata accessor for PairedHostInfo);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D75A6E00()
{
  unint64_t result = qword_1EA82B518;
  if (!qword_1EA82B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B518);
  }
  return result;
}

unint64_t sub_1D75A6E4C()
{
  unint64_t result = qword_1EA82B528;
  if (!qword_1EA82B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B528);
  }
  return result;
}

unint64_t sub_1D75A6E98()
{
  unint64_t result = qword_1EBDEAC00;
  if (!qword_1EBDEAC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC00);
  }
  return result;
}

unint64_t sub_1D75A6EE4()
{
  unint64_t result = qword_1EA82B540;
  if (!qword_1EA82B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B540);
  }
  return result;
}

uint64_t type metadata accessor for CreateWirelessPairingSessionRequest(uint64_t a1)
{
  return sub_1D75A6F50(a1, qword_1EBDEAE10);
}

uint64_t sub_1D75A6F50(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D75A6F84()
{
  unint64_t result = qword_1EA82B558;
  if (!qword_1EA82B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B558);
  }
  return result;
}

uint64_t sub_1D75A6FD0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_6();
  v3();
  return a1;
}

unint64_t sub_1D75A7024()
{
  unint64_t result = qword_1EA82B598;
  if (!qword_1EA82B598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B598);
  }
  return result;
}

unint64_t sub_1D75A7070()
{
  unint64_t result = qword_1EA82B5A0;
  if (!qword_1EA82B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B5A0);
  }
  return result;
}

unint64_t sub_1D75A70BC()
{
  unint64_t result = qword_1EA82B5A8;
  if (!qword_1EA82B5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B5A8);
  }
  return result;
}

unint64_t sub_1D75A7108()
{
  unint64_t result = qword_1EA82B5B0;
  if (!qword_1EA82B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B5B0);
  }
  return result;
}

unint64_t sub_1D75A7154()
{
  unint64_t result = qword_1EBDEC310;
  if (!qword_1EBDEC310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC310);
  }
  return result;
}

unint64_t sub_1D75A71A0()
{
  unint64_t result = qword_1EBDEC308;
  if (!qword_1EBDEC308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC308);
  }
  return result;
}

unint64_t sub_1D75A71EC()
{
  unint64_t result = qword_1EBDEABF0;
  if (!qword_1EBDEABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEABF0);
  }
  return result;
}

uint64_t sub_1D75A7238()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D75A7270(uint64_t a1)
{
  sub_1D75A4CA8(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

void sub_1D75A7278(uint64_t a1)
{
  sub_1D75A4DD8(a1, *(void (**)(void *, uint64_t, uint64_t))(v1 + 16));
}

unint64_t sub_1D75A7280()
{
  unint64_t result = qword_1EA82B5F8;
  if (!qword_1EA82B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B5F8);
  }
  return result;
}

unint64_t sub_1D75A72CC()
{
  unint64_t result = qword_1EA82B600;
  if (!qword_1EA82B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B600);
  }
  return result;
}

unint64_t sub_1D75A7318()
{
  unint64_t result = qword_1EA82B608;
  if (!qword_1EA82B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B608);
  }
  return result;
}

unint64_t sub_1D75A7364()
{
  unint64_t result = qword_1EA82B610;
  if (!qword_1EA82B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B610);
  }
  return result;
}

unint64_t sub_1D75A73B0()
{
  unint64_t result = qword_1EBDEAC28;
  if (!qword_1EBDEAC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC28);
  }
  return result;
}

unint64_t sub_1D75A73FC()
{
  unint64_t result = qword_1EBDEAC20;
  if (!qword_1EBDEAC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC20);
  }
  return result;
}

void sub_1D75A7448(uint64_t a1)
{
  sub_1D75A5778(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1D75A7464()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D75A74A4(void *a1, char a2)
{
  return sub_1D75A5B5C(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_1D75A74B4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1D75A74C4(uint64_t a1)
{
}

uint64_t sub_1D75A74CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1D75A74F4(void *a1, char a2)
{
  sub_1D75A5FB8(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

uint64_t *sub_1D75A7500(uint64_t *a1)
{
  return sub_1D75A6030(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_1D75A7508(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75A6C2C(&qword_1EA82B508, (void (*)(uint64_t))type metadata accessor for PairedHostInfo);
  uint64_t result = sub_1D75A6C2C(&qword_1EA82B4F0, (void (*)(uint64_t))type metadata accessor for PairedHostInfo);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D75A758C()
{
  return sub_1D75A6C2C(&qword_1EA82B620, type metadata accessor for RPUSBConnectedHostTrustState);
}

uint64_t sub_1D75A75D4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75A6C2C(&qword_1EA82B5E0, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  uint64_t result = sub_1D75A6C2C((unint64_t *)&unk_1EA82B5E8, (void (*)(uint64_t))type metadata accessor for DeletePairedHostRecordRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D75A7658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A7280, (uint64_t (*)(void))sub_1D75A72CC);
}

uint64_t sub_1D75A7684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A7318, (uint64_t (*)(void))sub_1D75A7364);
}

uint64_t sub_1D75A76B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A76DC, (uint64_t (*)(void))sub_1D75A7728);
}

unint64_t sub_1D75A76DC()
{
  unint64_t result = qword_1EA82B628;
  if (!qword_1EA82B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B628);
  }
  return result;
}

unint64_t sub_1D75A7728()
{
  unint64_t result = qword_1EA82B630;
  if (!qword_1EA82B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B630);
  }
  return result;
}

uint64_t sub_1D75A7774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A77A0, (uint64_t (*)(void))sub_1D75A77EC);
}

unint64_t sub_1D75A77A0()
{
  unint64_t result = qword_1EA82B638;
  if (!qword_1EA82B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B638);
  }
  return result;
}

unint64_t sub_1D75A77EC()
{
  unint64_t result = qword_1EA82B640;
  if (!qword_1EA82B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B640);
  }
  return result;
}

uint64_t sub_1D75A7838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A73B0, (uint64_t (*)(void))sub_1D75A73FC);
}

uint64_t sub_1D75A7864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75A7890(a1, a2, a3, (uint64_t (*)(void))sub_1D75A78CC, (uint64_t (*)(void))sub_1D75A7918);
}

uint64_t sub_1D75A7890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D75A78CC()
{
  unint64_t result = qword_1EA82B648;
  if (!qword_1EA82B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B648);
  }
  return result;
}

unint64_t sub_1D75A7918()
{
  unint64_t result = qword_1EA82B650;
  if (!qword_1EA82B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B650);
  }
  return result;
}

uint64_t sub_1D75A7964(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75A6C2C(&qword_1EA82B658, (void (*)(uint64_t))type metadata accessor for CreateWirelessPairingSessionRequest);
  uint64_t result = sub_1D75A6C2C((unint64_t *)&unk_1EA82B660, (void (*)(uint64_t))type metadata accessor for CreateWirelessPairingSessionRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D75A79E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CreateWirelessPairingSessionRequest.endpoint.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    char v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1D765FFD0();
    size_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_1D765FF70();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v19 = a3[8];
    unint64_t v20 = &v4[v19];
    unint64_t v21 = &a2[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v16))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v20, v21, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v16);
    }
    uint64_t v23 = a3[10];
    v4[a3[9]] = a2[a3[9]];
    uint64_t v24 = &v4[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = a3[11];
    uint64_t v28 = &v4[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PairedHostInfo(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1D765FFD0();
  char v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1D765FF70();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + a2[8];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v9, v8);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1D765FFD0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1D765FF70();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v17], 1, v15))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v19, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v15);
  }
  uint64_t v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for PairedHostInfo(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D765FFD0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1D765FF70();
  LODWORD(v10) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (v10)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v14 - 8);
  if (EnumTagSinglePayload)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v14);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v18], 1, v14);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v14 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v14);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v19, v20, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v14);
LABEL_13:
  a1[a3[9]] = a2[a3[9]];
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for PairedHostInfo(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D765FFD0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1D765FF70();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v14))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  uint64_t v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *assignWithTake for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1D765FFD0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1D765FF70();
  LODWORD(v11) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (v11)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v15 - 8);
  if (EnumTagSinglePayload)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v15);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v19], 1, v15);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v15);
  if (!v22)
  {
    uint64_t v24 = *(void *)(v15 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v15);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v20, v21, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v15);
LABEL_13:
  uint64_t v26 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = (uint64_t *)&a2[v26];
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (uint64_t *)&a2[v31];
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *(void *)uint64_t v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PairedHostInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75A8910);
}

uint64_t sub_1D75A8910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1D765FFD0();
    OUTLINED_FUNCTION_1_0();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PairedHostInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75A89D4);
}

uint64_t sub_1D75A89D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1D765FFD0();
    OUTLINED_FUNCTION_1_0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1D75A8A80()
{
  sub_1D765FFD0();
  if (v0 <= 0x3F)
  {
    sub_1D75A8B6C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1D75A8B6C()
{
  if (!qword_1EA82B680)
  {
    sub_1D765FF70();
    unint64_t v0 = sub_1D7661000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA82B680);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for HostDeletionTarget(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_1D765FFD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *initializeWithCopy for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1D765FFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v11 = sub_1D765FFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_1D75940B4((uint64_t)a1, &qword_1EA82B460);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1D765FFD0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1D765FFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v11 = sub_1D765FFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_1D75940B4((uint64_t)a1, &qword_1EA82B460);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1D765FFD0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostDeletionTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75A90FC);
}

uint64_t sub_1D75A90FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HostDeletionTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75A915C);
}

uint64_t sub_1D75A915C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1D75A91BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t sub_1D75A9204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

uint64_t sub_1D75A9254()
{
  uint64_t result = sub_1D765FFD0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeletePairedHostRecordRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for HostDeletionTarget(0) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_1D765FFD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s19RemotePairingDevice18HostDeletionTargetOwxx_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!result)
  {
    sub_1D765FFD0();
    OUTLINED_FUNCTION_2_2();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v6(a1, v4);
  }
  return result;
}

void *initializeWithCopy for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D765FFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  int v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      uint64_t v10 = sub_1D765FFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 24))(a1, a2, v10);
      return a1;
    }
    sub_1D75940B4((uint64_t)a1, &qword_1EA82B460);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_1D765FFD0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D765FFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B460);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  int v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      uint64_t v10 = sub_1D765FFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 40))(a1, a2, v10);
      return a1;
    }
    sub_1D75940B4((uint64_t)a1, &qword_1EA82B460);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_1D765FFD0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeletePairedHostRecordRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75A9890);
}

uint64_t sub_1D75A9890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostDeletionTarget(0);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DeletePairedHostRecordRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75A98EC);
}

uint64_t sub_1D75A98EC()
{
  type metadata accessor for HostDeletionTarget(0);
  uint64_t v0 = OUTLINED_FUNCTION_55_0();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_1D75A992C()
{
  uint64_t result = type metadata accessor for HostDeletionTarget(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ListPairedHostRecordRequest()
{
}

void type metadata accessor for ListPairedHostRecordResponse()
{
}

void type metadata accessor for FetchNetworkPairingSessionIDRequest()
{
}

void *assignWithCopy for FetchNetworkPairingSessionIDResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FetchNetworkPairingSessionIDResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchNetworkPairingSessionIDResponse(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchNetworkPairingSessionIDResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for FetchNetworkPairingSessionIDResponse()
{
}

void type metadata accessor for QueryUSBConnectedHostTrustStateRequest()
{
}

uint64_t destroy for AllowPromptlessPairingWithHostRequest()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19RemotePairingDevice37AllowPromptlessPairingWithHostRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AllowPromptlessPairingWithHostRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AllowPromptlessPairingWithHostRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllowPromptlessPairingWithHostRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllowPromptlessPairingWithHostRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AllowPromptlessPairingWithHostRequest()
{
}

void *initializeBufferWithCopyOfBuffer for CreateWirelessPairingSessionRequest(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7660210();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for CreateWirelessPairingSessionRequest(uint64_t a1)
{
  uint64_t v2 = sub_1D7660210();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75A9F88);
}

uint64_t sub_1D75A9F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D7660210();
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75AA038);
}

void sub_1D75AA038(uint64_t a1, char a2, int a3, uint64_t a4)
{
  sub_1D7660210();
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_55_0();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t sub_1D75AA0B4()
{
  uint64_t result = sub_1D7660210();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for PinNotificationEvent(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PinNotificationEvent(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for PinNotificationEvent(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PinNotificationEvent(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PinNotificationEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PinNotificationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1D75AA418(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1D75AA430(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for PinNotificationEvent()
{
}

uint64_t type metadata accessor for RemotePairingDevicePairingServiceConnection()
{
  return self;
}

uint64_t method lookup function for RemotePairingDevicePairingServiceConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemotePairingDevicePairingServiceConnection);
}

uint64_t getEnumTagSinglePayload for PinNotificationEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PinNotificationEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75AA5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.CodingKeys()
{
  return &type metadata for PinNotificationEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.EmptyCodingKeys()
{
  return &type metadata for PinNotificationEvent.EmptyCodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.ShowCodingKeys()
{
  return &type metadata for PinNotificationEvent.ShowCodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.HideCodingKeys()
{
  return &type metadata for PinNotificationEvent.HideCodingKeys;
}

ValueMetadata *type metadata accessor for CreateWirelessPairingSessionRequest.CodingKeys()
{
  return &type metadata for CreateWirelessPairingSessionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for AllowPromptlessPairingWithHostRequest.CodingKeys()
{
  return &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryUSBConnectedHostTrustStateRequest.CodingKeys()
{
  return &type metadata for QueryUSBConnectedHostTrustStateRequest.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return 0;
}

ValueMetadata *type metadata accessor for FetchNetworkPairingSessionIDResponse.CodingKeys()
{
  return &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchNetworkPairingSessionIDRequest.CodingKeys()
{
  return &type metadata for FetchNetworkPairingSessionIDRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ListPairedHostRecordResponse.CodingKeys()
{
  return &type metadata for ListPairedHostRecordResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ListPairedHostRecordRequest.CodingKeys()
{
  return &type metadata for ListPairedHostRecordRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for DeletePairedHostRecordRequest.CodingKeys()
{
  return &type metadata for DeletePairedHostRecordRequest.CodingKeys;
}

unsigned char *_s19RemotePairingDevice20PinNotificationEventO14ShowCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75AA7C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.CodingKeys()
{
  return &type metadata for HostDeletionTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.AllCodingKeys()
{
  return &type metadata for HostDeletionTarget.AllCodingKeys;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Host.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s19RemotePairingDevice36FetchNetworkPairingSessionIDResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D75AA8F4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.SingleHostCodingKeys()
{
  return &type metadata for HostDeletionTarget.SingleHostCodingKeys;
}

uint64_t getEnumTagSinglePayload for PairedHostInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PairedHostInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75AAA80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PairedHostInfo.CodingKeys()
{
  return &type metadata for PairedHostInfo.CodingKeys;
}

unint64_t sub_1D75AAABC()
{
  unint64_t result = qword_1EA82B690;
  if (!qword_1EA82B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B690);
  }
  return result;
}

unint64_t sub_1D75AAB0C()
{
  unint64_t result = qword_1EA82B698;
  if (!qword_1EA82B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B698);
  }
  return result;
}

unint64_t sub_1D75AAB5C()
{
  unint64_t result = qword_1EA82B6A0;
  if (!qword_1EA82B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6A0);
  }
  return result;
}

unint64_t sub_1D75AABAC()
{
  unint64_t result = qword_1EA82B6A8;
  if (!qword_1EA82B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6A8);
  }
  return result;
}

unint64_t sub_1D75AABFC()
{
  unint64_t result = qword_1EA82B6B0;
  if (!qword_1EA82B6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6B0);
  }
  return result;
}

unint64_t sub_1D75AAC4C()
{
  unint64_t result = qword_1EA82B6B8;
  if (!qword_1EA82B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6B8);
  }
  return result;
}

unint64_t sub_1D75AAC9C()
{
  unint64_t result = qword_1EA82B6C0;
  if (!qword_1EA82B6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6C0);
  }
  return result;
}

unint64_t sub_1D75AACEC()
{
  unint64_t result = qword_1EA82B6C8;
  if (!qword_1EA82B6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6C8);
  }
  return result;
}

unint64_t sub_1D75AAD3C()
{
  unint64_t result = qword_1EA82B6D0;
  if (!qword_1EA82B6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6D0);
  }
  return result;
}

unint64_t sub_1D75AAD8C()
{
  unint64_t result = qword_1EA82B6D8;
  if (!qword_1EA82B6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6D8);
  }
  return result;
}

unint64_t sub_1D75AADDC()
{
  unint64_t result = qword_1EA82B6E0;
  if (!qword_1EA82B6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6E0);
  }
  return result;
}

unint64_t sub_1D75AAE2C()
{
  unint64_t result = qword_1EA82B6E8;
  if (!qword_1EA82B6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6E8);
  }
  return result;
}

unint64_t sub_1D75AAE7C()
{
  unint64_t result = qword_1EA82B6F0;
  if (!qword_1EA82B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6F0);
  }
  return result;
}

unint64_t sub_1D75AAECC()
{
  unint64_t result = qword_1EA82B6F8;
  if (!qword_1EA82B6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B6F8);
  }
  return result;
}

unint64_t sub_1D75AAF1C()
{
  unint64_t result = qword_1EA82B700;
  if (!qword_1EA82B700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B700);
  }
  return result;
}

unint64_t sub_1D75AAF6C()
{
  unint64_t result = qword_1EA82B708;
  if (!qword_1EA82B708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B708);
  }
  return result;
}

unint64_t sub_1D75AAFBC()
{
  unint64_t result = qword_1EA82B710;
  if (!qword_1EA82B710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B710);
  }
  return result;
}

unint64_t sub_1D75AB00C()
{
  unint64_t result = qword_1EA82B718;
  if (!qword_1EA82B718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B718);
  }
  return result;
}

unint64_t sub_1D75AB05C()
{
  unint64_t result = qword_1EA82B720;
  if (!qword_1EA82B720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B720);
  }
  return result;
}

unint64_t sub_1D75AB0AC()
{
  unint64_t result = qword_1EA82B728;
  if (!qword_1EA82B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B728);
  }
  return result;
}

unint64_t sub_1D75AB0FC()
{
  unint64_t result = qword_1EA82B730;
  if (!qword_1EA82B730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B730);
  }
  return result;
}

unint64_t sub_1D75AB14C()
{
  unint64_t result = qword_1EA82B738;
  if (!qword_1EA82B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B738);
  }
  return result;
}

unint64_t sub_1D75AB19C()
{
  unint64_t result = qword_1EBDEAC10;
  if (!qword_1EBDEAC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC10);
  }
  return result;
}

unint64_t sub_1D75AB1EC()
{
  unint64_t result = qword_1EBDEAC08;
  if (!qword_1EBDEAC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC08);
  }
  return result;
}

unint64_t sub_1D75AB23C()
{
  unint64_t result = qword_1EA82B740;
  if (!qword_1EA82B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B740);
  }
  return result;
}

unint64_t sub_1D75AB28C()
{
  unint64_t result = qword_1EA82B748;
  if (!qword_1EA82B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B748);
  }
  return result;
}

unint64_t sub_1D75AB2DC()
{
  unint64_t result = qword_1EA82B750;
  if (!qword_1EA82B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B750);
  }
  return result;
}

unint64_t sub_1D75AB32C()
{
  unint64_t result = qword_1EA82B758;
  if (!qword_1EA82B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B758);
  }
  return result;
}

unint64_t sub_1D75AB37C()
{
  unint64_t result = qword_1EA82B760;
  if (!qword_1EA82B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B760);
  }
  return result;
}

unint64_t sub_1D75AB3CC()
{
  unint64_t result = qword_1EA82B768;
  if (!qword_1EA82B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B768);
  }
  return result;
}

unint64_t sub_1D75AB41C()
{
  unint64_t result = qword_1EA82B770;
  if (!qword_1EA82B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B770);
  }
  return result;
}

unint64_t sub_1D75AB46C()
{
  unint64_t result = qword_1EA82B778;
  if (!qword_1EA82B778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B778);
  }
  return result;
}

unint64_t sub_1D75AB4BC()
{
  unint64_t result = qword_1EA82B780;
  if (!qword_1EA82B780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B780);
  }
  return result;
}

unint64_t sub_1D75AB50C()
{
  unint64_t result = qword_1EA82B788;
  if (!qword_1EA82B788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B788);
  }
  return result;
}

unint64_t sub_1D75AB55C()
{
  unint64_t result = qword_1EA82B790;
  if (!qword_1EA82B790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B790);
  }
  return result;
}

unint64_t sub_1D75AB5AC()
{
  unint64_t result = qword_1EA82B798;
  if (!qword_1EA82B798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B798);
  }
  return result;
}

unint64_t sub_1D75AB5FC()
{
  unint64_t result = qword_1EA82B7A0;
  if (!qword_1EA82B7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7A0);
  }
  return result;
}

unint64_t sub_1D75AB64C()
{
  unint64_t result = qword_1EA82B7A8;
  if (!qword_1EA82B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7A8);
  }
  return result;
}

unint64_t sub_1D75AB69C()
{
  unint64_t result = qword_1EA82B7B0;
  if (!qword_1EA82B7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7B0);
  }
  return result;
}

unint64_t sub_1D75AB6EC()
{
  unint64_t result = qword_1EA82B7B8;
  if (!qword_1EA82B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7B8);
  }
  return result;
}

unint64_t sub_1D75AB73C()
{
  unint64_t result = qword_1EA82B7C0;
  if (!qword_1EA82B7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7C0);
  }
  return result;
}

unint64_t sub_1D75AB78C()
{
  unint64_t result = qword_1EA82B7C8;
  if (!qword_1EA82B7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B7C8);
  }
  return result;
}

uint64_t sub_1D75AB7DC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D75AB814(uint64_t a1, uint64_t a2)
{
  sub_1D75A6190(a1, a2, *(void *)(v2 + 16));
}

void sub_1D75AB81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D75A6200(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1D75AB824(uint64_t a1)
{
  sub_1D761FBAC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D75AB82C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1D75AB8A8()
{
  unint64_t result = qword_1EA82B800;
  if (!qword_1EA82B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B800);
  }
  return result;
}

unint64_t sub_1D75AB8F4()
{
  unint64_t result = qword_1EA82B808;
  if (!qword_1EA82B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B808);
  }
  return result;
}

unint64_t sub_1D75AB940()
{
  unint64_t result = qword_1EA82B810;
  if (!qword_1EA82B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B810);
  }
  return result;
}

unint64_t sub_1D75AB98C()
{
  unint64_t result = qword_1EA82B818;
  if (!qword_1EA82B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B818);
  }
  return result;
}

unint64_t sub_1D75AB9D8()
{
  unint64_t result = qword_1EA82B820;
  if (!qword_1EA82B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B820);
  }
  return result;
}

unint64_t sub_1D75ABA24()
{
  unint64_t result = qword_1EA82B828;
  if (!qword_1EA82B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B828);
  }
  return result;
}

unint64_t sub_1D75ABA70()
{
  unint64_t result = qword_1EA82B830;
  if (!qword_1EA82B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B830);
  }
  return result;
}

unint64_t sub_1D75ABABC()
{
  unint64_t result = qword_1EA82B838;
  if (!qword_1EA82B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B838);
  }
  return result;
}

unint64_t sub_1D75ABB08()
{
  unint64_t result = qword_1EA82B858;
  if (!qword_1EA82B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B858);
  }
  return result;
}

unint64_t sub_1D75ABB54()
{
  unint64_t result = qword_1EA82B860;
  if (!qword_1EA82B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B860);
  }
  return result;
}

void sub_1D75ABBA0(id a1)
{
}

uint64_t sub_1D75ABBAC(uint64_t a1)
{
  return sub_1D75AD474(a1, *(void *)(v1 + 16));
}

void sub_1D75ABBB4(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1D75ABBC0()
{
  swift_release();
  sub_1D75ABBA0(*(id *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1D75ABC04()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

id sub_1D75ABC50(id a1)
{
  return a1;
}

uint64_t sub_1D75ABC5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D75ABCA4()
{
  unint64_t result = qword_1EBDEBDF0;
  if (!qword_1EBDEBDF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDEBDE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBDF0);
  }
  return result;
}

id sub_1D75ABCF8(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1D75ABD08(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1D75ABD18(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1D75ABD24(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return sub_1D7661260();
}

void OUTLINED_FUNCTION_17_0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_1D7661100();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return sub_1D76617A0();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return v0 + *(int *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_1D76617C0();
}

void *OUTLINED_FUNCTION_35_0()
{
  return __swift_project_boxed_opaque_existential_0Tm(v0, v0[3]);
}

void *OUTLINED_FUNCTION_38_1()
{
  return __swift_project_boxed_opaque_existential_0Tm(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return sub_1D76612D0();
}

void OUTLINED_FUNCTION_48()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56()
{
  return sub_1D7661200();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58()
{
  return sub_1D76612D0();
}

void OUTLINED_FUNCTION_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 120) = &a9;
}

uint64_t OUTLINED_FUNCTION_60()
{
  return type metadata accessor for PairedHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return sub_1D7660100();
}

unint64_t static MachServiceNames.pairingManagementService.getter()
{
  return OUTLINED_FUNCTION_0_6(47);
}

unint64_t static MachServiceNames.deviceInitiatedPairingService.getter()
{
  return OUTLINED_FUNCTION_0_6(59);
}

unint64_t static MachServiceNames.tunnelManagementService.getter()
{
  return OUTLINED_FUNCTION_0_6(46);
}

unint64_t static MachServiceNames.auxiliaryMetadata.getter()
{
  return OUTLINED_FUNCTION_0_6(55);
}

unint64_t static RemoteServiceNames.tunnelService.getter()
{
  return OUTLINED_FUNCTION_0_6(56);
}

unint64_t static RemoteServiceNames.lockdownService.getter()
{
  return OUTLINED_FUNCTION_0_6(42);
}

unint64_t static RemoteServiceNames.deviceComputeService.getter()
{
  return OUTLINED_FUNCTION_0_6(48);
}

RemotePairingDevice::BonjourService_optional __swiftcall BonjourService.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D76612C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1D75AC178(char *a1, char *a2)
{
  return sub_1D75B9864(*a1, *a2);
}

unint64_t sub_1D75AC188()
{
  unint64_t result = qword_1EA82B8B0;
  if (!qword_1EA82B8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B8B0);
  }
  return result;
}

uint64_t sub_1D75AC1D4()
{
  return sub_1D75BA114(*v0);
}

uint64_t sub_1D75AC1DC(uint64_t a1)
{
  return sub_1D75BA42C(a1, *v1);
}

uint64_t sub_1D75AC1E4(uint64_t a1)
{
  return sub_1D75BA99C(a1, *v1);
}

RemotePairingDevice::BonjourService_optional sub_1D75AC1EC(Swift::String *a1)
{
  return BonjourService.init(rawValue:)(*a1);
}

unint64_t sub_1D75AC1F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BonjourService.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MachServiceNames()
{
}

void type metadata accessor for RemoteServiceNames()
{
}

uint64_t getEnumTagSinglePayload for BonjourService(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BonjourService(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75AC38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1D75AC3B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D75934F4(a1, a2);
  }
  return a1;
}

uint64_t _s5StateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1D758D338(*(void *)a2, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1D758D338(v9, v10, v11, v12, v13, v14, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5StateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1D758D338(v5, v7, v6, v8, v9, v11, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  return a1;
}

uint64_t _s5StateOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D75AC620(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.State()
{
  return &type metadata for ControlChannelConnection.State;
}

void OUTLINED_FUNCTION_5_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D758D338(v22, v21, a19, a20, a5, v20, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D75A74B4(v20);
  return sub_1D75AC3B4(a20, v21);
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return sub_1D7661560();
}

uint64_t sub_1D75AC7C4()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82B8B8 = result;
  return result;
}

uint64_t sub_1D75AC840()
{
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_1D75AC8B8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

uint64_t sub_1D75AC920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  *(void *)(v6 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E00]), sel_init);
  v13[0] = a1;
  v13[1] = a2;
  long long v13[2] = a3;
  swift_unknownObjectWeakInit();
  char v14 = 0;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  sub_1D75AEF8C((uint64_t)v13, v6 + 16);
  swift_retain();
  swift_retain();
  sub_1D75A74B4(a4);
  swift_retain();
  sub_1D7660290();
  swift_release();
  sub_1D76600D0();
  sub_1D75940A4(a4);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1D75ACA20(uint64_t a1)
{
  uint64_t v2 = sub_1D76603A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v26 - v8;
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)v26 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B8F8);
  MEMORY[0x1F4188790](v12);
  char v14 = (void *)((char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D75AEFCC(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v11, v14, v2);
    os_log_type_t v15 = sub_1D7660DB0();
    if (qword_1EA82A9C0 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_1EA82B8B8;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v17(v9, v11, v2);
    os_log_type_t v18 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      os_log_t v27 = v16;
      *(_DWORD *)uint64_t v19 = 136315138;
      v26[1] = v19 + 4;
      v17(v6, v9, v2);
      uint64_t v20 = sub_1D7660B60();
      uint64_t v29 = sub_1D758DBE8(v20, v21, &v30);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v22(v9, v2);
      _os_log_impl(&dword_1D757C000, v27, v18, "Recieved error from side channel listener: %s", v19, 0xCu);
      uint64_t v23 = v28;
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v23, -1, -1);
      MEMORY[0x1D9474C60](v19, -1, -1);
      return ((uint64_t (*)(char *, uint64_t))v22)(v11, v2);
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
      v25(v9, v2);
      return ((uint64_t (*)(char *, uint64_t))v25)(v11, v2);
    }
  }
  else
  {
    sub_1D75ACD84(*v14, v14[1]);
    return swift_release();
  }
}

void sub_1D75ACD84(uint64_t a1, uint64_t a2)
{
  sub_1D7660DA0();
  if (qword_1EA82A9C0 != -1) {
    swift_once();
  }
  sub_1D7660010();
  swift_allocObject();
  swift_weakInit();
  sub_1D75AEC90();
  sub_1D75AECDC();
  sub_1D76601C0();
  swift_release();
  sub_1D76600D0();
  objc_allocWithZone((Class)type metadata accessor for WirelessPairingSession());
  uint64_t v3 = swift_retain();
  id v4 = sub_1D75AD77C(v3, a2);
  MEMORY[0x1F4188790](v4);
  sub_1D75AC840();
}

void sub_1D75ACF28(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  unint64_t v1 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 32);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    if (v5)
    {
      id v8 = v2;
      os_log_type_t v9 = sub_1D7660DB0();
      if (qword_1EA82A9C0 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_1EA82B8B8;
      uint64_t v11 = os_log_type_enabled((os_log_t)qword_1EA82B8B8, v9);
      if (v11)
      {
        sub_1D75AED84(v2, v1, v4, v3, 1);
        sub_1D75AED84(v2, v1, v4, v3, 1);
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v24 = v13;
        *(_DWORD *)uint64_t v12 = 136315138;
        v28[0] = (uint64_t)v2;
        id v14 = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v15 = sub_1D7660B60();
        v28[0] = sub_1D758DBE8(v15, v16, &v24);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        sub_1D75AED30(v2, v1, v4, v3, 1);
        sub_1D75AED30(v2, v1, v4, v3, 1);
        _os_log_impl(&dword_1D757C000, v10, v9, "Recieved error from side channel peer: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v13, -1, -1);
        uint64_t v11 = MEMORY[0x1D9474C60](v12, -1, -1);
      }
      MEMORY[0x1F4188790](v11);
      sub_1D75AC840();
      swift_release();
      sub_1D75AED30(v2, v1, v4, v3, 1);
    }
    else
    {
      os_log_type_t v17 = sub_1D7660DA0();
      if (qword_1EA82A9C0 != -1) {
        swift_once();
      }
      os_log_type_t v18 = qword_1EA82B8B8;
      if (os_log_type_enabled((os_log_t)qword_1EA82B8B8, v17))
      {
        sub_1D75AED84(v2, v1, v4, v3, 0);
        sub_1D75AED84(v2, v1, v4, v3, 0);
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v27 = v3;
        v28[0] = v23;
        unint64_t v25 = v1;
        uint64_t v26 = v4;
        sub_1D75AED90((uint64_t)v2, v1);
        uint64_t v20 = sub_1D7660B60();
        uint64_t v24 = sub_1D758DBE8(v20, v21, v28);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        sub_1D75AED30(v2, v1, v4, v3, 0);
        sub_1D75AED30(v2, v1, v4, v3, 0);
        _os_log_impl(&dword_1D757C000, v18, v17, "Recieved message from side channel peer: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v23, -1, -1);
        MEMORY[0x1D9474C60](v19, -1, -1);
      }
      swift_beginAccess();
      uint64_t v22 = *(void (**)(uint64_t *))(v7 + 56);
      if (v22)
      {
        uint64_t v24 = (uint64_t)v2;
        unint64_t v25 = v1;
        uint64_t v26 = v4;
        uint64_t v27 = v3;
        swift_retain();
        v22(&v24);
        sub_1D75940A4((uint64_t)v22);
      }
      else
      {
        sub_1D7660DB0();
        sub_1D7660010();
      }
      swift_release();
    }
  }
}

uint64_t sub_1D75AD3F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakAssign();
  int v5 = *(void (**)(uint64_t, void))(a1 + 8);
  *(unsigned char *)(a1 + 32) = 1;
  if (v5)
  {
    swift_retain();
    v5(a2, 0);
    sub_1D75940A4((uint64_t)v5);
    uint64_t result = sub_1D75940A4((uint64_t)v5);
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1D75AD474(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    swift_retain();
    sub_1D76600C0();
    swift_release_n();
  }
  *(void *)a1 = 0;
  uint64_t v4 = MEMORY[0x1D9474D50](a1 + 24);
  if (v4)
  {
    int v5 = (void *)v4;
    sub_1D75ADE38();
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(a1 + 8);
    if (v6)
    {
      swift_retain();
      v6(a2, 1);
      sub_1D75940A4((uint64_t)v6);
    }
  }
  uint64_t result = sub_1D75940A4(*(void *)(a1 + 8));
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1D75AD528()
{
  sub_1D75AEDF8(v0 + 16);

  return MEMORY[0x1F4186488](v0, 80, 7);
}

uint64_t sub_1D75AD568(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

id sub_1D75AD5BC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state);
  *a1 = v2;
  return sub_1D75AEC08(v2);
}

void sub_1D75AD5D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state);
  *(void *)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state) = v2;
  sub_1D75AD76C(v3);
}

uint64_t sub_1D75AD5E8()
{
  return sub_1D7660FD0();
}

id sub_1D75AD674@<X0>(void *a1@<X8>)
{
  return sub_1D75AD5BC(a1);
}

BOOL sub_1D75AD6D4()
{
  sub_1D75AEF50(0, &qword_1EA82B8C8);
  OUTLINED_FUNCTION_0_8();
  if (v1 != (void *)1) {
    sub_1D75AD76C(v1);
  }
  return v1 != (void *)1;
}

void sub_1D75AD76C(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1D75AD77C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR___RPWirelessPairingSession_Internal__lock;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28E00]);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_init);
  *(void *)&v7[OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers] = MEMORY[0x1E4FBC860];
  id v8 = &v7[OBJC_IVAR___RPWirelessPairingSession_Internal__connection];
  *(void *)id v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___RPWirelessPairingSession_Internal__state] = 1;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for WirelessPairingSession();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

uint64_t sub_1D75AD858()
{
  sub_1D7660DD0();
  if (qword_1EA82A9C0 != -1) {
    swift_once();
  }
  sub_1D7660010();
  return sub_1D75ADE38();
}

uint64_t sub_1D75AD938(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  void v6[4] = a3;
  sub_1D75AEF50(0, &qword_1EA82B8C8);
  id v7 = a1;
  swift_retain();
  sub_1D7660FD0();
  return swift_release();
}

uint64_t sub_1D75ADA20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a1;
  void aBlock[4] = sub_1D75AEEA8;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_0;
  id v8 = _Block_copy(aBlock);
  uint64_t v9 = sub_1D7660950();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v13 = a1;
  sub_1D7660930();
  uint64_t v14 = sub_1D7660910();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  os_log_type_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1D75AEEF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v12, v17, v8);
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1D75ADC9C(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  sub_1D75AD5BC(&v12);
  id v6 = v12;
  if (v12 == (void *)1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    *(void *)(v7 + 24) = a3;
    id v8 = (uint64_t *)(a1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
    swift_beginAccess();
    swift_retain();
    sub_1D76215DC();
    uint64_t v9 = *(void *)(*v8 + 16);
    sub_1D7621698(v9);
    uint64_t v10 = *v8;
    *(void *)(v10 + 16) = v9 + 1;
    uint64_t v11 = v10 + 16 * v9;
    *(void *)(v11 + 32) = sub_1D75AEE60;
    *(void *)(v11 + 40) = v7;
    swift_endAccess();
  }
  else
  {
    a2(v12);
    sub_1D75AD76C(v6);
  }
}

uint64_t sub_1D75ADE38()
{
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_1D75ADEB4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D75ADEF4(void *a1)
{
  return sub_1D75ADA20(a1, v1[2], v1[3], v1[4]);
}

void sub_1D75ADF00()
{
  sub_1D75ADC9C(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32));
}

void sub_1D75ADF20(uint64_t a1, void *a2)
{
  sub_1D75AD5BC(v20);
  if (v20[0] == (id)1)
  {
    if (a2)
    {
      id v4 = a2;
      os_log_type_t v5 = sub_1D7660DD0();
      if (qword_1EA82A9C0 != -1) {
        swift_once();
      }
      id v6 = qword_1EA82B8B8;
      if (os_log_type_enabled((os_log_t)qword_1EA82B8B8, v5))
      {
        id v7 = a2;
        id v8 = a2;
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136315138;
        v20[0] = v10;
        uint64_t v21 = (uint64_t)a2;
        id v11 = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v12 = sub_1D7660B60();
        uint64_t v21 = sub_1D758DBE8(v12, v13, (uint64_t *)v20);
        sub_1D7661020();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D757C000, v6, v5, "Wireless pairing session invalidated with error: %s", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v10, -1, -1);
        MEMORY[0x1D9474C60](v9, -1, -1);
      }
    }
    else
    {
      sub_1D7660DD0();
      if (qword_1EA82A9C0 != -1) {
        swift_once();
      }
      sub_1D7660010();
    }
    v20[0] = a2;
    id v14 = a2;
    sub_1D75AD5D0((uint64_t *)v20);
    sub_1D76600C0();
    uint64_t v15 = (uint64_t *)(a1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
    swift_beginAccess();
    uint64_t v16 = *v15;
    uint64_t v17 = *(void *)(*v15 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = v16 + 40;
      do
      {
        uint64_t v19 = *(void (**)(uint64_t *))(v18 - 8);
        uint64_t v21 = (uint64_t)a2;
        swift_retain();
        v19(&v21);
        swift_release();
        v18 += 16;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    sub_1D75AD568(MEMORY[0x1E4FBC860]);
  }
  else
  {
    sub_1D75AD76C(v20[0]);
  }
}

id WirelessPairingSession.__deallocating_deinit()
{
  sub_1D75ADE38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C210);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D7664B10;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 32) = 0xD000000000000017;
  *(void *)(v1 + 40) = 0x80000001D7672570;
  sub_1D7661710();
  swift_bridgeObjectRelease();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for WirelessPairingSession();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WirelessPairingSession()
{
  return self;
}

id WirelessPairingSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WirelessPairingSession.init()()
{
}

uint64_t type metadata accessor for InProgressWirelessPairingSession()
{
  return self;
}

uint64_t method lookup function for WirelessPairingSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WirelessPairingSession);
}

uint64_t dispatch thunk of WirelessPairingSession.state.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of WirelessPairingSession.invalidated.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of WirelessPairingSession.endSession()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of WirelessPairingSession.registerInvalidationHandler(invokingOnQueue:handler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

void destroy for WirelessPairingSession.State(void **a1)
{
  id v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s19RemotePairingDevice22WirelessPairingSessionC5StateOwCP_0(void *a1, void **a2)
{
  objc_super v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for WirelessPairingSession.State(void **a1, void **a2)
{
  objc_super v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    uint64_t v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for WirelessPairingSession.State(void **a1, void **a2)
{
  objc_super v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for WirelessPairingSession.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WirelessPairingSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1D75AE750(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1D75AE770(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WirelessPairingSession.State()
{
  return &type metadata for WirelessPairingSession.State;
}

uint64_t destroy for InProgressWirelessPairingSession.State(uint64_t a1)
{
  swift_release();
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t result = swift_unknownObjectWeakDestroy();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  swift_unknownObjectWeakCopyInit();
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  swift_unknownObjectWeakCopyAssign();
  uint64_t v7 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  swift_unknownObjectWeakTakeInit();
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithTake for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  swift_unknownObjectWeakTakeAssign();
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 48) = v10;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InProgressWirelessPairingSession.State(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InProgressWirelessPairingSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InProgressWirelessPairingSession.State()
{
  return &type metadata for InProgressWirelessPairingSession.State;
}

id sub_1D75AEC08(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1D75AEC18()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D75AEC50()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D75AEC88(uint64_t a1)
{
}

unint64_t sub_1D75AEC90()
{
  unint64_t result = qword_1EA82B8E8;
  if (!qword_1EA82B8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B8E8);
  }
  return result;
}

unint64_t sub_1D75AECDC()
{
  unint64_t result = qword_1EA82B8F0;
  if (!qword_1EA82B8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B8F0);
  }
  return result;
}

uint64_t sub_1D75AED28(uint64_t a1)
{
  return sub_1D75AD3F0(a1, *(void *)(v1 + 16));
}

void sub_1D75AED30(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {

  }
  else {
    sub_1D75AED3C((uint64_t)a1, a2);
  }
}

uint64_t sub_1D75AED3C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1D75AED84(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return a1;
  }
  else {
    return (id)sub_1D75AED90((uint64_t)a1, a2);
  }
}

uint64_t sub_1D75AED90(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D75AEDD8()
{
  return sub_1D75AC8B8(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1D75AEDF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D75AEE28()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75AEE60(void *a1)
{
  return sub_1D761FC10(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D75AEE68()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D75AEEA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1D75AEEF0()
{
  unint64_t result = qword_1EBDEBD90;
  if (!qword_1EBDEBD90)
  {
    sub_1D7660910();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBD90);
  }
  return result;
}

void sub_1D75AEF34()
{
  sub_1D75ADF20(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1D75AEF50(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D75AEF8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75AEFC4(uint64_t a1)
{
  return sub_1D75ACA20(a1);
}

uint64_t sub_1D75AEFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1D75AF034@<X0>(void *a1@<X8>)
{
  return sub_1D75AD674(a1);
}

unint64_t static RemotePairingError.userInfoChallengeKey.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1D75AF068(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EEB0](a1, a2, v4);
}

uint64_t sub_1D75AF0BC()
{
  return sub_1D7661610();
}

uint64_t sub_1D75AF0EC()
{
  return sub_1D7661600();
}

uint64_t sub_1D75AF124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1D75AF4C0();
  return MEMORY[0x1F412EED8](a1, a2, a3, v8, a4);
}

uint64_t sub_1D75AF188()
{
  return sub_1D7660380();
}

uint64_t sub_1D75AF1E8()
{
  return sub_1D7660360();
}

uint64_t sub_1D75AF238(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EEA0](a1, a2, v4);
}

uint64_t sub_1D75AF284(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EE98](a1, a2, v4);
}

uint64_t sub_1D75AF2D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EEA8](a1, a2, v4);
}

uint64_t sub_1D75AF31C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EE90](a1, a2, v4);
}

uint64_t sub_1D75AF368(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D75AF4C0();
  return MEMORY[0x1F412EE88](a1, a2, v4);
}

uint64_t sub_1D75AF3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1D75AF4C0();
  return MEMORY[0x1F412EE78](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_1D75AF420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1D75AF4C0();
  return MEMORY[0x1F412EE80](a1, a2, a3, v6);
}

uint64_t static RemotePairingError.deviceNotFound.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

unint64_t sub_1D75AF4C0()
{
  unint64_t result = qword_1EBDEB060;
  if (!qword_1EBDEB060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB060);
  }
  return result;
}

uint64_t static RemotePairingError.connectionFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.pairingFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.deviceRejectedPairing.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.interactivePairingRequired.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.invalidOperation.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.rapportError.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.tunnelError.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.managedConfigurationRejectedPairing.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.findMyRejectedPairing.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.deviceIsAlreadyPairingWithHost.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.failedToAuthenticateUser.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.remotePairingNotSupportedByDevice.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.pairingRecordRemovalFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.pairingRecordNotFound.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.mobileDeviceError.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.unlockRequired.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.remoteUnlockFailure.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.pairingRecordMissingInfo.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.userRejectedPairing.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.macAddressUnavailable.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.networkInterfaceIndexUnavailable.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.notConnectedOverNetwork.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.invalidInput.getter()
{
  return sub_1D7661690();
}

uint64_t static RemotePairingError.wakeOnLANFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.wakeOnControlChannelFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.remoteUnlockKeysUnsupported.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.managedConfigurationChallengeRequired.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.pairingAlreadyInProgress.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.mtuIsLessThanMinSupportedMTU.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.mtuIsMoreThanMaxSupportedMTU.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.secKeyIsInvalid.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.tlsKeyCreationFailed.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.assertionReleased.getter()
{
  return OUTLINED_FUNCTION_1_4();
}

uint64_t static RemotePairingError.managedConfigurationChallengeRequired(with:)(uint64_t a1, unint64_t a2)
{
  sub_1D75AF4C0();
  OUTLINED_FUNCTION_0();
  sub_1D7661690();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC010);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7664B10;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x80000001D76727A0;
  *(void *)(inited + 72) = MEMORY[0x1E4F277B8];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  sub_1D75934F4(a1, a2);
  sub_1D7660A50();
  sub_1D75B0C34(MEMORY[0x1E4FBC860]);
  return sub_1D7661680();
}

uint64_t ControlChannelConnectionError.normalized<A>(as:)(ValueMetadata *a1)
{
  if (a1 != &type metadata for RemotePairingError) {
    return 0;
  }
  char v3 = *v1;
  uint64_t v5 = *((void *)v1 + 1);
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  uint64_t v7 = *((void *)v1 + 4);
  uint64_t v8 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 5);
  uint64_t v15 = (void *)*((void *)v1 + 7);
  switch(*v1)
  {
    case 1:
    case 3:
    case 5:
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_0();
      sub_1D7661690();
      OUTLINED_FUNCTION_4_2();
      unint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
      *(unsigned char *)uint64_t v9 = v3;
      break;
    case 2:
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_2_5();
      sub_1D7661640();
      OUTLINED_FUNCTION_4_2();
      unint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
      char v11 = 2;
      goto LABEL_8;
    case 4:
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_2_5();
      sub_1D7661670();
      OUTLINED_FUNCTION_4_2();
      unint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
      char v11 = 4;
LABEL_8:
      *(unsigned char *)uint64_t v9 = v11;
      break;
    default:
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_2_5();
      sub_1D7661630();
      OUTLINED_FUNCTION_4_2();
      unint64_t v10 = (void *)OUTLINED_FUNCTION_3_0();
      *(unsigned char *)uint64_t v9 = 0;
      break;
  }
  *(void *)(v9 + 8) = v5;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v14;
  *(void *)(v9 + 48) = v8;
  *(void *)(v9 + 56) = v15;
  sub_1D75B0D60();
  uint64_t v2 = OUTLINED_FUNCTION_3_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v15;
  sub_1D7660350();

  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D75B0250()
{
  if (MEMORY[0x1E4F946D0])
  {
    sub_1D75B0DAC();
    sub_1D7660B10();
    sub_1D75AF4C0();
    sub_1D7660F90();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D75B02F4()
{
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D75B0D60();
  uint64_t v0 = swift_allocError();
  sub_1D7660350();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D75B03B4()
{
  sub_1D75B0DAC();
  static ControlChannelConnectionError.errorDomain.getter();
  sub_1D75AF4C0();
  sub_1D7660F90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B043C(void *a1)
{
  sub_1D75B0DAC();
  id v2 = a1;
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  switch(v5)
  {
    case 1:
    case 4:
      sub_1D75AF4C0();
      sub_1D7661670();
      break;
    case 2:
      sub_1D75AF4C0();
      sub_1D7661640();
      break;
    case 3:
      sub_1D75AF4C0();
      sub_1D7661690();
      break;
    case 5:
      sub_1D75AF4C0();
      sub_1D7661650();
      break;
    default:
      sub_1D75AF4C0();
      sub_1D7661630();
      break;
  }
  sub_1D75B0D60();
  uint64_t v3 = swift_allocError();
  sub_1D7660350();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static NSError.setRemotePairingNormalizationProviders()()
{
  if (qword_1EBDEBCB8 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_1EBDEBD20 != -1)
  {
    return swift_once();
  }
  return result;
}

unint64_t sub_1D75B06D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B908);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D7664B10;
  unint64_t v1 = sub_1D75B107C();
  unint64_t result = sub_1D75B10C8();
  *(void *)(v0 + 32) = &type metadata for RemotePairingError;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = result;
  qword_1EA82B900 = v0;
  return result;
}

uint64_t static RemotePairingErrorCodingWrapper.supportedTypes.getter()
{
  if (qword_1EA82A9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static RemotePairingErrorCodingWrapper.supportedTypes.setter(uint64_t a1)
{
  if (qword_1EA82A9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EA82B900 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RemotePairingErrorCodingWrapper.supportedTypes.modify())()
{
  if (qword_1EA82A9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id RemotePairingErrorCodingWrapper.wrappedValue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void sub_1D75B08F0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  RemotePairingErrorCodingWrapper.wrappedValue.setter(v1);
}

void RemotePairingErrorCodingWrapper.wrappedValue.setter(void *a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  id v5 = a1;

  void *v2 = a1;
  swift_getErrorValue();
  sub_1D75AF4C0();
  uint64_t v6 = sub_1D76616B0();

  void *v2 = v6;
}

void (*RemotePairingErrorCodingWrapper.wrappedValue.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  return sub_1D75B0A10;
}

void sub_1D75B0A10(void **a1, char a2)
{
  id v2 = *a1;
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = (void **)v2[4];
    uint64_t v4 = *v3;
    swift_getErrorValue();
    sub_1D75AF4C0();
    uint64_t v5 = sub_1D76616B0();

    *uint64_t v3 = (void *)v5;
  }
  free(v2);
}

uint64_t RemotePairingErrorCodingWrapper.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *static RemotePairingErrorCodingWrapper.defaultEncodingValue(forUnencodableValue:)(void *a1)
{
  id v2 = a1;
  return a1;
}

void RemotePairingErrorCodingWrapper.encode(to:)()
{
  uint64_t v0 = (void *)sub_1D765FD50();
  sub_1D7660FB0();
}

uint64_t RemotePairingErrorCodingWrapper.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D75B0DAC();
  sub_1D758B1EC(a1, (uint64_t)v7);
  uint64_t v5 = sub_1D7660FA0();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_1D75B0BA8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t result = static RemotePairingErrorCodingWrapper.defaultEncodingValue(forUnencodableValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D75B0BD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return RemotePairingErrorCodingWrapper.init(wrappedValue:)(*a1, a2);
}

id sub_1D75B0BDC@<X0>(void *a1@<X8>)
{
  id result = RemotePairingErrorCodingWrapper.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1D75B0C04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return RemotePairingErrorCodingWrapper.init(from:)(a1, a2);
}

void sub_1D75B0C1C()
{
}

unint64_t sub_1D75B0C34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBE40);
  uint64_t v2 = sub_1D7661290();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D75B118C(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D75B1114(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1D758CB98(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D75B0D60()
{
  unint64_t result = qword_1EBDEB070;
  if (!qword_1EBDEB070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB070);
  }
  return result;
}

unint64_t sub_1D75B0DAC()
{
  unint64_t result = qword_1EBDEBE10;
  if (!qword_1EBDEBE10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDEBE10);
  }
  return result;
}

unint64_t sub_1D75B0DF0()
{
  unint64_t result = qword_1EBDEB058;
  if (!qword_1EBDEB058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB058);
  }
  return result;
}

unint64_t sub_1D75B0E40()
{
  unint64_t result = qword_1EBDEB050;
  if (!qword_1EBDEB050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB050);
  }
  return result;
}

unint64_t sub_1D75B0E98()
{
  unint64_t result = qword_1EBDEC458;
  if (!qword_1EBDEC458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC458);
  }
  return result;
}

unint64_t sub_1D75B0EE8()
{
  unint64_t result = qword_1EBDEC450;
  if (!qword_1EBDEC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC450);
  }
  return result;
}

id sub_1D75B0F34@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void *initializeBufferWithCopyOfBuffer for RemotePairingErrorCodingWrapper(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for RemotePairingErrorCodingWrapper(id *a1)
{
}

void **assignWithCopy for RemotePairingErrorCodingWrapper(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for RemotePairingErrorCodingWrapper(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for RemotePairingErrorCodingWrapper(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemotePairingErrorCodingWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemotePairingErrorCodingWrapper()
{
  return &type metadata for RemotePairingErrorCodingWrapper;
}

unint64_t sub_1D75B107C()
{
  unint64_t result = qword_1EA82B910;
  if (!qword_1EA82B910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B910);
  }
  return result;
}

unint64_t sub_1D75B10C8()
{
  unint64_t result = qword_1EA82B918;
  if (!qword_1EA82B918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B918);
  }
  return result;
}

unint64_t sub_1D75B1114(uint64_t a1, uint64_t a2)
{
  sub_1D7661730();
  sub_1D7660B90();
  uint64_t v4 = sub_1D7661760();
  return sub_1D75B11F4(a1, a2, v4);
}

uint64_t sub_1D75B118C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D75B11F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1D7661560() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1D7661560() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1D7661560()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void __swiftcall IPv4Address.copy_sockaddr_in()(sockaddr_in *__return_ptr retstr)
{
  uint64_t v1 = sub_1D76603F0();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v1 >> 32 < (int)v1)
      {
        __break(1u);
        JUMPOUT(0x1D75B1450);
      }
      swift_retain();
      sub_1D75B1460((int)v2);
      sub_1D75933F0(v2, v4);
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(v1 + 16);
      swift_retain();
      swift_retain();
      sub_1D75B1460(v5);
      swift_release();
      swift_release();
      break;
    default:
      break;
  }
  sub_1D75933F0(v2, v4);
}

uint64_t sub_1D75B1460(uint64_t a1)
{
  uint64_t v2 = sub_1D765FCE0();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = (unsigned int *)(v3 + a1 - result);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t result = sub_1D765FD00();
  if (v5) {
    return *v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1D75B14CC(uint64_t a1)
{
  unint64_t result = sub_1D75B14F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D75B14F4()
{
  unint64_t result = qword_1EA82B920;
  if (!qword_1EA82B920)
  {
    sub_1D7660270();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B920);
  }
  return result;
}

uint64_t XPCConnection.send<A, B>(request:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v8[3] = a6;
  v8[1] = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  v8[2] = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D75A71EC();
  return sub_1D76600A0();
}

uint64_t sub_1D75B1764(uint64_t a1)
{
  unint64_t v2 = sub_1D75B18B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75B17A0(uint64_t a1)
{
  unint64_t v2 = sub_1D75B18B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EmptyResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1F0);
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_30();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75B18B4();
  sub_1D76617C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

unint64_t sub_1D75B18B4()
{
  unint64_t result = qword_1EBDEC150;
  if (!qword_1EBDEC150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC150);
  }
  return result;
}

uint64_t EmptyResponse.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1D75B1928()
{
  return sub_1D75B1B40();
}

unint64_t sub_1D75B1934(char a1)
{
  unint64_t result = 0x73736563637573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6572756C696166;
      break;
    case 2:
      unint64_t result = 0x676E656C6C616863;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75B19CC(uint64_t a1)
{
  return EmptyResponse.init(from:)(a1);
}

uint64_t sub_1D75B19E4(void *a1)
{
  return EmptyResponse.encode(to:)(a1);
}

uint64_t sub_1D75B19FC(unsigned __int8 *a1, char *a2)
{
  return sub_1D75B9CF4(*a1, *a2);
}

uint64_t sub_1D75B1A08()
{
  return sub_1D75BA12C(*v0);
}

uint64_t sub_1D75B1A10(uint64_t a1)
{
  return sub_1D75BA6B8(a1, *v1);
}

uint64_t sub_1D75B1A18(uint64_t a1)
{
  return sub_1D75BA928(a1, *v1);
}

uint64_t sub_1D75B1A20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75B1B40();
  *a1 = result;
  return result;
}

unint64_t sub_1D75B1A58@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D75B1934(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D75B1A84()
{
  return sub_1D7660CC0();
}

uint64_t sub_1D75B1AE4()
{
  return sub_1D7660CA0();
}

uint64_t sub_1D75B1B34()
{
  return sub_1D75B1B40();
}

uint64_t sub_1D75B1B40()
{
  unint64_t v0 = sub_1D76612C0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D75B1B88()
{
  return sub_1D75B1B40();
}

uint64_t sub_1D75B1BA8()
{
  return 4;
}

uint64_t sub_1D75B1BB0(char a1)
{
  uint64_t result = 7823730;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_2_6();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_3_4();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_8_3();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75B1C14(char a1)
{
  uint64_t result = 7823730;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_2_6();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_3_4();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_8_3();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75B1C78(unsigned __int8 *a1, char *a2)
{
  return sub_1D75B9E5C(*a1, *a2);
}

uint64_t sub_1D75B1C84()
{
  return sub_1D75BA144(*v0);
}

uint64_t sub_1D75B1C8C(uint64_t a1)
{
  return sub_1D75BA778(a1, *v1);
}

uint64_t sub_1D75B1C94(uint64_t a1)
{
  return sub_1D75BA910(a1, *v1);
}

uint64_t sub_1D75B1C9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75B1B40();
  *a1 = result;
  return result;
}

uint64_t sub_1D75B1CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75B1BB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D75B1D00()
{
  return sub_1D75B1C14(*v0);
}

uint64_t sub_1D75B1D08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75B1B88();
  *a1 = result;
  return result;
}

void sub_1D75B1D30(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D75B1D3C(uint64_t a1)
{
  unint64_t v2 = sub_1D75B2038();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75B1D78(uint64_t a1)
{
  unint64_t v2 = sub_1D75B2038();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PairingOutcome.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B928);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75B2038();
  sub_1D76617A0();
  if (!v2)
  {
    sub_1D75B2084();
    OUTLINED_FUNCTION_11_2();
    sub_1D7661380();
    switch(v22)
    {
      case 1:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        sub_1D75B2374(&qword_1EA82B940, &qword_1EA82B928);
        sub_1D75A71EC();
        OUTLINED_FUNCTION_11_2();
        sub_1D76615C0();
        uint64_t v11 = OUTLINED_FUNCTION_1_5();
        v12(v11);
        uint64_t v9 = 0;
        char v10 = 0;
        uint64_t v8 = v21;
        break;
      case 2:
        OUTLINED_FUNCTION_11_2();
        char v13 = sub_1D7661350();
        OUTLINED_FUNCTION_11_2();
        uint64_t v9 = sub_1D7661310();
        char v15 = v14;
        uint64_t v16 = OUTLINED_FUNCTION_1_5();
        v17(v16);
        uint64_t v8 = v13 & 1;
        char v10 = v15 & 1 | 0x40;
        break;
      case 3:
        uint64_t v18 = OUTLINED_FUNCTION_1_5();
        v19(v18);
        uint64_t v9 = 0;
        char v10 = 0x80;
        uint64_t v8 = 1;
        break;
      default:
        uint64_t v6 = OUTLINED_FUNCTION_1_5();
        v7(v6);
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        char v10 = 0x80;
        break;
    }
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v9;
    *(unsigned char *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1D75B2038()
{
  unint64_t result = qword_1EA82B930;
  if (!qword_1EA82B930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B930);
  }
  return result;
}

unint64_t sub_1D75B2084()
{
  unint64_t result = qword_1EA82B938;
  if (!qword_1EA82B938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B938);
  }
  return result;
}

void PairingOutcome.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B948);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_8();
  uint64_t v12 = *(void *)(v1 + 8);
  char v13 = *(void **)v1;
  unsigned int v5 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75B2038();
  sub_1D76617C0();
  unsigned int v6 = v5 >> 6;
  sub_1D75B2328();
  OUTLINED_FUNCTION_9_3();
  sub_1D7661490();
  if (v2) {
    goto LABEL_2;
  }
  if (v6)
  {
    if (v6 == 1)
    {
      OUTLINED_FUNCTION_9_3();
      sub_1D7661460();
      OUTLINED_FUNCTION_9_3();
      sub_1D7661420();
    }
LABEL_2:
    uint64_t v7 = OUTLINED_FUNCTION_10_2();
    v8(v7);
    return;
  }
  id v9 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
  sub_1D75B2374(&qword_1EA82B958, &qword_1EA82B948);
  sub_1D75A71EC();
  OUTLINED_FUNCTION_9_3();
  sub_1D76615D0();
  uint64_t v10 = OUTLINED_FUNCTION_10_2();
  v11(v10);
  sub_1D75B23B8(v13, v12, v5);
}

unint64_t sub_1D75B2328()
{
  unint64_t result = qword_1EA82B950;
  if (!qword_1EA82B950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B950);
  }
  return result;
}

uint64_t sub_1D75B2374(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D75B23B8(id a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0x3Fu) {
}
  }

uint64_t sub_1D75B23CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PairingOutcome.init(from:)(a1, a2);
}

void sub_1D75B23E4(void *a1)
{
}

uint64_t RSDDeviceInfo.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RSDDeviceInfo.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid;
  uint64_t v4 = sub_1D765FFD0();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id RSDDeviceInfo.__allocating_init(name:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return RSDDeviceInfo.init(name:uuid:)(a1, a2, a3);
}

id RSDDeviceInfo.init(name:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = &v3[OBJC_IVAR___RPRSDDeviceInfo_Internal_name];
  *(void *)unsigned int v5 = a1;
  *((void *)v5 + 1) = a2;
  unsigned int v6 = &v3[OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid];
  uint64_t v7 = sub_1D765FFD0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a3, v7);
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for RSDDeviceInfo();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  return v9;
}

uint64_t type metadata accessor for RSDDeviceInfo()
{
  uint64_t result = qword_1EA82B988;
  if (!qword_1EA82B988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id RSDDeviceInfo.__allocating_init(from:)()
{
  uint64_t v1 = _s7Mercury12RemoteDeviceC0b7PairingC0E18endpointIdentifierSSvg_0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1D765FFD0();
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_30();
  sub_1D7660050();
  id v5 = objc_allocWithZone((Class)type metadata accessor for RSDDeviceInfo());
  id v6 = RSDDeviceInfo.init(name:uuid:)(v1, v3, v0);
  swift_release();
  return v6;
}

uint64_t sub_1D75B2840()
{
  sub_1D7661770();
  swift_bridgeObjectRetain();
  sub_1D7660B90();
  swift_bridgeObjectRelease();
  sub_1D765FFD0();
  sub_1D75B31D4(&qword_1EA82B968);
  sub_1D7660A80();
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1D7661750();
}

uint64_t sub_1D75B28F8(uint64_t a1)
{
  sub_1D75908F0(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_1D758DEC0((uint64_t)v6);
    goto LABEL_10;
  }
  type metadata accessor for RSDDeviceInfo();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    char v3 = 0;
    return v3 & 1;
  }
  BOOL v2 = *(void *)(v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name) == *(void *)&v5[OBJC_IVAR___RPRSDDeviceInfo_Internal_name]
    && *(void *)(v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name + 8) == *(void *)&v5[OBJC_IVAR___RPRSDDeviceInfo_Internal_name
                                                                                       + 8];
  if (!v2 && (sub_1D7661560() & 1) == 0)
  {

    goto LABEL_10;
  }
  char v3 = sub_1D765FFB0();

  return v3 & 1;
}

id RSDDeviceInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RSDDeviceInfo.init()()
{
}

uint64_t sub_1D75B2AB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D75B2B90(char a1)
{
  if (a1) {
    return 1684632949;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1D75B2BB0()
{
  return sub_1D75A25A8();
}

uint64_t sub_1D75B2BB8()
{
  return sub_1D75B2B90(*v0);
}

uint64_t sub_1D75B2BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75B2AB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75B2BE8(uint64_t a1)
{
  unint64_t v2 = sub_1D75B2E84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75B2C24(uint64_t a1)
{
  unint64_t v2 = sub_1D75B2E84();
  return MEMORY[0x1F41862B0](a1, v2);
}

id RSDDeviceInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RSDDeviceInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D75B2D1C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B970);
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75B2E84();
  sub_1D76617C0();
  sub_1D7661450();
  if (!v1)
  {
    sub_1D765FFD0();
    sub_1D75B31D4(&qword_1EA82B418);
    sub_1D7661490();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1D75B2E84()
{
  unint64_t result = qword_1EA82B978;
  if (!qword_1EA82B978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B978);
  }
  return result;
}

id RSDDeviceInfo.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RSDDeviceInfo.init(from:)(a1);
}

id RSDDeviceInfo.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B980);
  OUTLINED_FUNCTION_0_5();
  v21[2] = v5;
  v21[3] = v4;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_25();
  uint64_t v6 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75B2E84();
  uint64_t v7 = v1;
  id v8 = v6;
  sub_1D76617A0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);

    type metadata accessor for RSDDeviceInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v23 = 0;
    uint64_t v9 = sub_1D7661340();
    objc_super v11 = (uint64_t *)&v7[OBJC_IVAR___RPRSDDeviceInfo_Internal_name];
    uint64_t *v11 = v9;
    v11[1] = v12;
    uint64_t v13 = sub_1D765FFD0();
    v21[1] = v21;
    OUTLINED_FUNCTION_0_5();
    v21[0] = v14;
    MEMORY[0x1F4188790](v15);
    long long v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v23 = 1;
    sub_1D75B31D4(&qword_1EA82B430);
    sub_1D7661380();
    (*(void (**)(char *, char *, uint64_t))(v21[0] + 32))(&v7[OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid], v17, v13);

    uint64_t v18 = (objc_class *)type metadata accessor for RSDDeviceInfo();
    v22.receiver = v7;
    v22.super_class = v18;
    id v8 = objc_msgSendSuper2(&v22, sel_init);
    uint64_t v19 = OUTLINED_FUNCTION_7_2();
    v20(v19);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_1D75B31D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D765FFD0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D75B3218(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75A7154();
  unint64_t result = sub_1D75A71A0();
  *(void *)(a1 + 16) = result;
  return result;
}

id sub_1D75B3248@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = RSDDeviceInfo.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1D75B3274(void *a1)
{
  return sub_1D75B2D1C(a1);
}

void type metadata accessor for EmptyResponse()
{
}

uint64_t sub_1D75B32A4()
{
  return type metadata accessor for RSDDeviceInfo();
}

uint64_t sub_1D75B32AC()
{
  uint64_t result = sub_1D765FFD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for RSDDeviceInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RSDDeviceInfo);
}

uint64_t dispatch thunk of RSDDeviceInfo.__allocating_init(name:uuid:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RSDDeviceInfo.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RSDDeviceInfo.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for RSDDeviceInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75B34B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RSDDeviceInfo.CodingKeys()
{
  return &type metadata for RSDDeviceInfo.CodingKeys;
}

void _s3RawOMa()
{
}

uint64_t getEnumTagSinglePayload for TunnelMessage.MessageType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1D75B3584(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75B3650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void _s10CodingKeysOMa()
{
}

ValueMetadata *type metadata accessor for EmptyResponse.CodingKeys()
{
  return &type metadata for EmptyResponse.CodingKeys;
}

unint64_t sub_1D75B3698()
{
  unint64_t result = qword_1EA82B998;
  if (!qword_1EA82B998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B998);
  }
  return result;
}

unint64_t sub_1D75B36E8()
{
  unint64_t result = qword_1EA82B9A0;
  if (!qword_1EA82B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9A0);
  }
  return result;
}

unint64_t sub_1D75B3738()
{
  unint64_t result = qword_1EA82B9A8;
  if (!qword_1EA82B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9A8);
  }
  return result;
}

unint64_t sub_1D75B3788()
{
  unint64_t result = qword_1EA82B9B0;
  if (!qword_1EA82B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9B0);
  }
  return result;
}

unint64_t sub_1D75B37D8()
{
  unint64_t result = qword_1EA82B9B8;
  if (!qword_1EA82B9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9B8);
  }
  return result;
}

unint64_t sub_1D75B3828()
{
  unint64_t result = qword_1EA82B9C0;
  if (!qword_1EA82B9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9C0);
  }
  return result;
}

unint64_t sub_1D75B3878()
{
  unint64_t result = qword_1EA82B9C8;
  if (!qword_1EA82B9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9C8);
  }
  return result;
}

unint64_t sub_1D75B38C8()
{
  unint64_t result = qword_1EBDEC160;
  if (!qword_1EBDEC160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC160);
  }
  return result;
}

unint64_t sub_1D75B3918()
{
  unint64_t result = qword_1EBDEC158;
  if (!qword_1EBDEC158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC158);
  }
  return result;
}

unint64_t sub_1D75B3964()
{
  unint64_t result = qword_1EA82B9D0;
  if (!qword_1EA82B9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82B9D0);
  }
  return result;
}

uint64_t sub_1D75B39B0()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82B9D8 = result;
  return result;
}

uint64_t PairingChallenge.lastAttemptIncorrect.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PairingChallenge.throttledBy.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PairingChallenge.__allocating_init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = a3 & 1;
  uint64_t v14 = swift_allocObject();
  PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(a1, a2, v13, a4, a5, a6, a7);
  return v14;
}

uint64_t PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B9E0);
  swift_allocObject();
  uint64_t v15 = sub_1D75B4218(0);
  *(void *)(v7 + 64) = a7;
  *(void *)(v7 + 72) = v15;
  *(unsigned char *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3 & 1;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  return v7;
}

uint64_t sub_1D75B3B68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 72);
  unsigned int v6 = *(os_unfair_lock_s **)(v5 + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  char v7 = *(unsigned char *)(v5 + 24);
  *(unsigned char *)(v5 + 24) = 1;
  os_unfair_lock_unlock(v6);
  if ((v7 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(a1, a2);
  }
  uint64_t result = OUTLINED_FUNCTION_0_9();
  __break(1u);
  return result;
}

uint64_t sub_1D75B3C30()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  char v3 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(v1 + 24) = 1;
  os_unfair_lock_unlock(v2);
  if ((v3 & 1) == 0) {
    return (*(uint64_t (**)(void))(v0 + 56))();
  }
  uint64_t result = OUTLINED_FUNCTION_0_9();
  __break(1u);
  return result;
}

uint64_t PairingChallenge.deinit()
{
  if ((sub_1D75B3D9C() & 1) == 0)
  {
    sub_1D7660DD0();
    if (qword_1EA82A9D0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1D7660010();
    (*(void (**)(uint64_t))(v0 + 56))(v1);
  }
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D75B3D9C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_1D75B3DF0(uint64_t a1@<X8>)
{
  char v3 = (os_unfair_lock_s *)v1[2];
  os_unfair_lock_lock(v3);
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_1D75B4420(v4, a1);
  os_unfair_lock_unlock(v3);
}

void sub_1D75B3E6C(void *a1@<X8>)
{
  char v3 = (os_unfair_lock_s *)v1[2];
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = (void *)v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  sub_1D75B440C(v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v3);
}

uint64_t PairingChallenge.__deallocating_deinit()
{
  PairingChallenge.deinit();
  return MEMORY[0x1F4186488](v0, 80, 7);
}

uint64_t sub_1D75B3F44()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR___RPPairingChallenge__underlyingValue) + 16);
}

uint64_t sub_1D75B3F9C()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR___RPPairingChallenge__underlyingValue) + 32)) {
    return 0;
  }
  else {
    return sub_1D7660D40();
  }
}

uint64_t sub_1D75B3FD4(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1D75B3B68(a1, a2);
  return swift_release();
}

uint64_t sub_1D75B409C()
{
  swift_retain();
  sub_1D75B3C30();
  return swift_release();
}

id sub_1D75B412C(uint64_t a1)
{
  uint64_t v2 = (char *)objc_allocWithZone((Class)RPPairingChallenge);
  *(void *)&v2[OBJC_IVAR___RPPairingChallenge__underlyingValue] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)RPPairingChallenge;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

void __swiftcall RPPairingChallenge.init()(RPPairingChallenge *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void RPPairingChallenge.init()()
{
}

uint64_t sub_1D75B4218(char a1)
{
  char v3 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = 0;
  *(unsigned char *)(v1 + 24) = a1;
  return v1;
}

void *sub_1D75B4254(uint64_t a1)
{
  char v3 = (_DWORD *)swift_slowAlloc();
  _OWORD v1[2] = v3;
  *char v3 = 0;
  sub_1D75B43A8(a1, (uint64_t)v1 + *(void *)(*v1 + 96));
  return v1;
}

void *sub_1D75B42AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = (_DWORD *)swift_slowAlloc();
  *char v7 = 0;
  void v3[2] = v7;
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return v3;
}

uint64_t type metadata accessor for PairingChallenge()
{
  return self;
}

uint64_t method lookup function for PairingChallenge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PairingChallenge);
}

uint64_t dispatch thunk of PairingChallenge.__allocating_init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 120))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PairingChallenge.answer(withPIN:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PairingChallenge.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t type metadata accessor for RPPairingChallenge(uint64_t a1)
{
  return sub_1D75AEF50(a1, (unint64_t *)&unk_1EA82B9F0);
}

uint64_t sub_1D75B43A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1D75B440C(id result)
{
  if ((char *)result - 1 >= (char *)2) {
    return result;
  }
  return result;
}

uint64_t sub_1D75B4420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D75B4484(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D758CB98((_OWORD *)a1, v10);
    sub_1D75B6DC4(v10, a2);
  }
  else
  {
    sub_1D758C650(a1, &qword_1EBDEC4D0);
    sub_1D761A0C8((uint64_t)a2, v3, v4, v5, v6, v7, v8, v9, *(uint64_t *)&v10[0], *((uint64_t *)&v10[0] + 1));

    sub_1D758C650((uint64_t)v10, &qword_1EBDEC4D0);
  }
}

uint64_t sub_1D75B4504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    long long v3 = *(_OWORD *)(a1 + 16);
    v5[0] = *(_OWORD *)a1;
    v5[1] = v3;
    char v6 = *(unsigned char *)(a1 + 32);
    sub_1D75B6E44((uint64_t)v5, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D758C650(a1, &qword_1EA82BA08);
    sub_1D761A1C0();
    swift_bridgeObjectRelease();
    return sub_1D758C650((uint64_t)v5, &qword_1EA82BA08);
  }
}

uint64_t sub_1D75B45A0()
{
  OUTLINED_FUNCTION_13_4();
  if (v3)
  {
    sub_1D758CB98(v2, v5);
    sub_1D75B6ED4(v5, v1, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D758C650((uint64_t)v2, &qword_1EBDEC4D0);
    OUTLINED_FUNCTION_11_3();
    sub_1D761A2A0();
    swift_bridgeObjectRelease();
    return sub_1D758C650((uint64_t)v5, &qword_1EBDEC4D0);
  }
}

uint64_t sub_1D75B4628()
{
  OUTLINED_FUNCTION_13_4();
  if (v3)
  {
    long long v4 = v2[1];
    v6[0] = *v2;
    v6[1] = v4;
    v6[2] = v2[2];
    sub_1D75B70C0(v6, v1, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D758C650((uint64_t)v2, (uint64_t *)&unk_1EA82BA30);
    OUTLINED_FUNCTION_11_3();
    sub_1D761A544();
    swift_bridgeObjectRelease();
    return sub_1D758C650((uint64_t)v6, (uint64_t *)&unk_1EA82BA30);
  }
}

uint64_t sub_1D75B46B8()
{
  OUTLINED_FUNCTION_13_4();
  if (v3)
  {
    sub_1D758AB78(v2, (uint64_t)v5);
    sub_1D75B7150(v5, v1, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D758C650((uint64_t)v2, (uint64_t *)&unk_1EA82C500);
    OUTLINED_FUNCTION_11_3();
    sub_1D761A650();
    swift_bridgeObjectRelease();
    return sub_1D758C650((uint64_t)v5, (uint64_t *)&unk_1EA82C500);
  }
}

id DeviceKeyValueStore.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id DeviceKeyValueStore.init()()
{
  uint64_t v1 = OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs;
  uint64_t v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEAD98);
  *(void *)&v0[v1] = sub_1D7660A50();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DeviceKeyValueStore()
{
  return self;
}

id DeviceKeyValueStore.__allocating_init(copyingValuesFrom:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DeviceKeyValueStore.init(copyingValuesFrom:)(a1);
}

id DeviceKeyValueStore.init(copyingValuesFrom:)(char *a1)
{
  id v3 = (uint64_t *)&v1[OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs];
  objc_super v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEAD98);
  *id v3 = sub_1D7660A50();
  uint64_t v5 = (uint64_t *)&a1[OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs];
  OUTLINED_FUNCTION_4_3();
  uint64_t v6 = *v5;
  swift_beginAccess();
  *id v3 = v6;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  id v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id static DeviceKeyValueStore.keyValueStoreContainingStandardKeys()()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeviceKeyValueStore()), sel_init);
  sub_1D75B5D60(0xD000000000000016, 0x80000001D7673220, 0, 0, 0x614E656369766544, 0xEA0000000000656DLL, 0);
  uint64_t v1 = OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_0_10(v1 & 0xFFFFFFFFFFFFLL | 0x5474000000000000, v2);
  sub_1D75B5D60(0x536C65646F4D5748, 0xEA00000000007274, 0, 0, 0x6572617764726148, 0xED00006C65646F4DLL, 0);
  uint64_t v3 = OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_0_10(v3 & 0xFFFFFFFFFFFFLL | 0x4E74000000000000, 0xEB00000000656D61);
  uint64_t v4 = OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_0_10(v4 & 0xFFFFFFFFFFFFLL | 0x5674000000000000, 0xEE006E6F69737265);
  OUTLINED_FUNCTION_0_10(0xD000000000000021, 0x80000001D7673240);
  OUTLINED_FUNCTION_0_10(0x726556646C697542, 0xEC0000006E6F6973);
  OUTLINED_FUNCTION_0_10(0xD000000000000018, 0x80000001D7673270);
  OUTLINED_FUNCTION_0_10(0x6C43656369766544, 0xEB00000000737361);
  sub_1D75B5D60(0x6E6974656B72616DLL, 0xEE00656D616E2D67, 0, 0, 0xD000000000000013, 0x80000001D7673290, 0);
  OUTLINED_FUNCTION_0_10(0x6F43656369766544, 0xEB00000000726F6CLL);
  OUTLINED_FUNCTION_0_10(0xD000000000000014, 0x80000001D76732B0);
  OUTLINED_FUNCTION_0_10(0x6968637241555043, 0xEF65727574636574);
  sub_1D75B5EDC(0xD000000000000017, 0x80000001D76732D0, 0, 0, 0, 0, 0);
  sub_1D75B605C(0x6F632D6863746177, 0xEF6E6F696E61706DLL, 0xD000000000000018, 0x80000001D76732F0, 0xD000000000000018, 0x80000001D7673310, 0);
  OUTLINED_FUNCTION_0_10(0xD00000000000001ALL, 0x80000001D7673330);
  OUTLINED_FUNCTION_8_4(0xD000000000000016, 0x80000001D7673350);
  OUTLINED_FUNCTION_8_4(0x6175747269567349, 0xEF6563697665446CLL);
  OUTLINED_FUNCTION_2_7(0x6544657571696E55, 0xEE00444965636976);
  OUTLINED_FUNCTION_1_6(0x6843657571696E55, 0xEC00000044497069);
  OUTLINED_FUNCTION_2_7(0x7264644169666957, 0xEB00000000737365);
  OUTLINED_FUNCTION_2_7(0x754E6C6169726553, 0xEC0000007265626DLL);
  OUTLINED_FUNCTION_2_7(0xD000000000000010, 0x80000001D7673370);
  OUTLINED_FUNCTION_2_7(0xD000000000000015, 0x80000001D7673390);
  OUTLINED_FUNCTION_1_6(0xD000000000000013, 0x80000001D76733B0);
  uint64_t v5 = OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_1_6(v5, v6 | 0xEF656C6163530000);
  OUTLINED_FUNCTION_1_6(0xD000000000000010, 0x80000001D76733D0);
  uint64_t v7 = OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_1_6(v7, v8 | 0xEF68746469570000);
  char is_darwinos = os_variant_is_darwinos();
  uint64_t v12 = MEMORY[0x1E4FBB390];
  v11[0] = is_darwinos;
  sub_1D75B4F94(1280070990, 0xE400000000000000, 0x6E69777261447349, 0xEA0000000000534FLL, (uint64_t)v11, 0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v0;
}

uint64_t sub_1D75B4DEC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v4 = sub_1D7661290();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D75B4F04()
{
  OUTLINED_FUNCTION_4_3();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEAD98);
  uint64_t v0 = sub_1D7660A40();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D75B4F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a2) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = 1280070990;
  }
  if (a2) {
    uint64_t v12 = a2;
  }
  else {
    uint64_t v12 = 0xE400000000000000;
  }
  char v13 = (void **)(v6 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_4_3();
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1D75B53B4(v11, v12, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D7660A50();
    swift_beginAccess();
    sub_1D75B6FF0(v16, v11, v12, (uint64_t *)&unk_1EBDEADB0);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  sub_1D758DD0C(a5, (uint64_t)v27);
  v27[32] = a6 & 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *v13;
  long long v17 = v26;
  *char v13 = (void *)0x8000000000000000;
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1D75B6C1C();
  if (__OFADD__(v17[2], (v19 & 1) == 0))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v20 = v18;
  char v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEADB0);
  if ((sub_1D7661220() & 1) == 0)
  {
LABEL_13:
    if (v21)
    {
      uint64_t v25 = *(void *)(v26[7] + 8 * v20);
      sub_1D75B4504((uint64_t)v27, a3, a4);
      sub_1D75B8D60(&v25, 1, &v26, v20, v11, v12, (uint64_t *)&unk_1EBDEAD98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *char v13 = v26;
      swift_bridgeObjectRelease();
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  unint64_t v22 = sub_1D75B6C1C();
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v20 = v22;
    goto LABEL_13;
  }
LABEL_17:
  uint64_t result = sub_1D76615F0();
  __break(1u);
  return result;
}

double sub_1D75B523C@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1D75B6C1C(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a1 + 56) + 40 * v4;
    sub_1D75B8D1C(v6, a2);
  }
  else
  {
    *(unsigned char *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1D75B52A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)(a2 + 16)) {
    return OUTLINED_FUNCTION_16_2();
  }
  unint64_t v5 = sub_1D758C92C(a1);
  if ((v6 & 1) == 0) {
    return OUTLINED_FUNCTION_16_2();
  }
  uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
  sub_1D758DD0C(v7, a3);
  return result;
}

uint64_t sub_1D75B5308(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v2 = sub_1D75B6D10(a1);
    if (v3)
    {
      OUTLINED_FUNCTION_17_2(v2);
      swift_retain();
    }
  }
  return OUTLINED_FUNCTION_36();
}

double sub_1D75B5350@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (!*(void *)(a1 + 16)) {
    return OUTLINED_FUNCTION_16_2();
  }
  unint64_t v4 = sub_1D75B6C1C();
  if ((v5 & 1) == 0) {
    return OUTLINED_FUNCTION_16_2();
  }
  uint64_t v6 = *(void *)(a1 + 56) + 32 * v4;
  sub_1D758DD0C(v6, a2);
  return result;
}

uint64_t sub_1D75B53B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_1D75B6C1C(), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

double sub_1D75B53F8@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_1D75B6D54(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a1 + 56) + 48 * v4;
    sub_1D75B93BC(v6, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_1D75B5464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v3 = sub_1D75B6C1C();
    if (v4)
    {
      OUTLINED_FUNCTION_17_2(v3);
      swift_bridgeObjectRetain();
    }
  }
  return OUTLINED_FUNCTION_36();
}

double sub_1D75B54AC()
{
  OUTLINED_FUNCTION_6_2();
  uint64_t v6 = v5 | 0x4C4C0000u;
  if (v2) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  if (v2) {
    uint64_t v8 = 0xE400000000000000;
  }
  else {
    uint64_t v8 = v4;
  }
  objc_super v9 = (uint64_t *)(v1 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_4_3();
  uint64_t v10 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D75B53B4(v7, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_19_2(v12, v13, v14, v15, v16, v17);
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1D75B8D1C((uint64_t)v20, (uint64_t)v19);
      sub_1D758C650((uint64_t)v20, &qword_1EA82BA08);
      swift_bridgeObjectRelease();
      sub_1D758CB98(v19, v0);
      return result;
    }
    sub_1D758C650((uint64_t)v20, &qword_1EA82BA08);
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_16_2();
}

uint64_t sub_1D75B55D4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = 1280070990;
  }
  if (a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0xE400000000000000;
  }
  unsigned __int16 v5 = (uint64_t *)(v2 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_4_3();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D75B53B4(v3, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1D75B941C(v7, v54);
    uint64_t v42 = v54[0];
    uint64_t v43 = v54[3];
    unint64_t v8 = v54[4];
    uint64_t v40 = v54[1];
    int64_t v41 = (unint64_t)(v54[2] + 64) >> 6;
    swift_bridgeObjectRetain();
    objc_super v9 = (void *)MEMORY[0x1E4FBC868];
    if (!v8) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v43 << 6);
    while (1)
    {
      uint64_t v26 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v11);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      sub_1D75B8D1C(*(void *)(v42 + 56) + 40 * v11, (uint64_t)v52);
      *(void *)&long long v51 = v27;
      *((void *)&v51 + 1) = v28;
      long long v48 = v51;
      v49[0] = v52[0];
      v49[1] = v52[1];
      char v50 = v53;
      long long v29 = v51;
      v46[2] = v51;
      sub_1D75B8D1C((uint64_t)v49, (uint64_t)v47);
      v44[2] = v29;
      sub_1D75B8D1C((uint64_t)v49, (uint64_t)v45);
      sub_1D758DD0C((uint64_t)v45, (uint64_t)v46);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D75B8E3C((uint64_t)v45);
      sub_1D758CB98(v46, v44);
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v30 = sub_1D75B6C1C();
      if (__OFADD__(v9[2], (v31 & 1) == 0)) {
        break;
      }
      unint64_t v32 = v30;
      char v33 = v31;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA10);
      if (sub_1D7661220())
      {
        unint64_t v34 = sub_1D75B6C1C();
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_47;
        }
        unint64_t v32 = v34;
      }
      if (v33)
      {
        uint64_t v36 = (_OWORD *)(v9[7] + 32 * v32);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
        sub_1D758CB98(v44, v36);
      }
      else
      {
        v9[(v32 >> 6) + 8] |= 1 << v32;
        *(_OWORD *)(v9[6] + 16 * v32) = v29;
        sub_1D758CB98(v44, (_OWORD *)(v9[7] + 32 * v32));
        uint64_t v37 = v9[2];
        BOOL v14 = __OFADD__(v37, 1);
        uint64_t v38 = v37 + 1;
        if (v14) {
          goto LABEL_45;
        }
        _OWORD v9[2] = v38;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D75B8E3C((uint64_t)v47);
      sub_1D758C650((uint64_t)&v48, (uint64_t *)&unk_1EBDEBDB8);
      if (v8) {
        goto LABEL_9;
      }
LABEL_10:
      int64_t v12 = v43 + 1;
      if (__OFADD__(v43, 1)) {
        goto LABEL_46;
      }
      if (v12 >= v41) {
        goto LABEL_41;
      }
      if (!*(void *)(v40 + 8 * v12))
      {
        OUTLINED_FUNCTION_23_2();
        if (v13 == v14) {
          goto LABEL_41;
        }
        OUTLINED_FUNCTION_20_2();
        if (!v15)
        {
          OUTLINED_FUNCTION_23_2();
          if (v13 == v14) {
            goto LABEL_41;
          }
          OUTLINED_FUNCTION_20_2();
          if (!v16)
          {
            OUTLINED_FUNCTION_23_2();
            if (v13 == v14) {
              goto LABEL_41;
            }
            OUTLINED_FUNCTION_20_2();
            if (!v17)
            {
              OUTLINED_FUNCTION_23_2();
              if (v13 == v14) {
                goto LABEL_41;
              }
              OUTLINED_FUNCTION_20_2();
              if (!v19)
              {
                if (v18 + 5 >= v41) {
                  goto LABEL_41;
                }
                if (!*(void *)(v40 + 8 * (v18 + 5)))
                {
                  int64_t v20 = v43 + 7;
                  while (v20 < v41)
                  {
                    if (*(void *)(v40 + 8 * v20++)) {
                      goto LABEL_30;
                    }
                  }
LABEL_41:
                  swift_release();
                  swift_bridgeObjectRelease();
                  return (uint64_t)v9;
                }
              }
            }
          }
        }
      }
LABEL_30:
      OUTLINED_FUNCTION_10_3();
      unint64_t v8 = v23 & v22;
      unint64_t v11 = v25 + (v24 << 6);
      uint64_t v43 = v24;
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t result = sub_1D76615F0();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

double sub_1D75B5A98()
{
  OUTLINED_FUNCTION_6_2();
  uint64_t v6 = v5 | 0x4C4C0000u;
  if (v2) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  if (v2) {
    uint64_t v8 = 0xE400000000000000;
  }
  else {
    uint64_t v8 = v4;
  }
  objc_super v9 = (uint64_t *)(v1 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_4_3();
  uint64_t v10 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D75B53B4(v7, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_19_2(v12, v13, v14, v15, v16, v17);
    swift_bridgeObjectRelease();
    if (v22)
    {
      sub_1D75B8D1C((uint64_t)v21, (uint64_t)v20);
      sub_1D758C650((uint64_t)v21, &qword_1EA82BA08);
      swift_bridgeObjectRelease();
      char v18 = v20[32];
      sub_1D75B8E3C((uint64_t)v20);
      *(void *)(v0 + 24) = MEMORY[0x1E4FBB390];
      *(unsigned char *)uint64_t v0 = v18;
      return result;
    }
    sub_1D758C650((uint64_t)v21, &qword_1EA82BA08);
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_16_2();
}

id sub_1D75B5BD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  if (a3) {
    sub_1D7660B10();
  }
  sub_1D7660B10();
  id v7 = a1;
  uint64_t v8 = OUTLINED_FUNCTION_5_0();
  a5(v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v18;
  if (v18)
  {
    uint64_t v10 = __swift_project_boxed_opaque_existential_0Tm(v17, v18);
    uint64_t v11 = *(void *)(v9 - 8);
    MEMORY[0x1F4188790](v10);
    (*(void (**)(char *))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    OUTLINED_FUNCTION_11_3();
    uint64_t v13 = (void *)sub_1D7661550();
    uint64_t v14 = OUTLINED_FUNCTION_11_3();
    v15(v14);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  }
  else
  {
    uint64_t v13 = 0;
  }
  return v13;
}

uint64_t sub_1D75B5D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13 = (void *)sub_1D7660AE0();
  uint64_t v14 = MGCopyAnswer();

  uint64_t v26 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC038);
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v21 = a5;
    uint64_t v17 = v23;
    uint64_t v18 = v24;
    if (a4)
    {
      uint64_t v19 = a4;
    }
    else
    {
      a3 = 1280070990;
      uint64_t v19 = 0xE400000000000000;
    }
    uint64_t v25 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v20 = a7 & 1;
    sub_1D75B4F94(a3, v19, a1, a2, (uint64_t)&v23, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
    if (a6)
    {
      uint64_t v25 = v15;
      uint64_t v23 = v17;
      uint64_t v24 = v18;
      swift_bridgeObjectRetain();
      sub_1D75B4F94(a3, v19, v21, a6, (uint64_t)&v23, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D75B5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13 = (void *)sub_1D7660AE0();
  uint64_t v14 = MGCopyAnswer();

  v22[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC038);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBE00);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v17 = v24;
    if (a4) {
      uint64_t v18 = a3;
    }
    else {
      uint64_t v18 = 1280070990;
    }
    if (a4) {
      uint64_t v19 = a4;
    }
    else {
      uint64_t v19 = 0xE400000000000000;
    }
    uint64_t v23 = v15;
    v22[0] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v20 = a7 & 1;
    sub_1D75B4F94(v18, v19, a1, a2, (uint64_t)v22, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
    if (a6)
    {
      uint64_t v23 = v15;
      v22[0] = v17;
      swift_bridgeObjectRetain();
      sub_1D75B4F94(v18, v19, a5, a6, (uint64_t)v22, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D75B605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14 = (void *)sub_1D7660AE0();
  uint64_t v15 = MGCopyAnswer();

  v23[0] = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC038);
  uint64_t v16 = MEMORY[0x1E4FBB390];
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v22 = a5;
    char v18 = v25 & 1;
    if (a4) {
      uint64_t v19 = a3;
    }
    else {
      uint64_t v19 = 1280070990;
    }
    if (a4) {
      uint64_t v20 = a4;
    }
    else {
      uint64_t v20 = 0xE400000000000000;
    }
    uint64_t v24 = v16;
    LOBYTE(v23[0]) = v25 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v21 = a7 & 1;
    sub_1D75B4F94(v19, v20, a1, a2, (uint64_t)v23, v21);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    if (a6)
    {
      uint64_t v24 = v16;
      LOBYTE(v23[0]) = v18;
      sub_1D75B4F94(v19, v20, v22, a6, (uint64_t)v23, v21);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1D75B61B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v13 = (void *)sub_1D7660AE0();
  MGCopyAnswer();

  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    if (a4) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = 1280070990;
    }
    if (a4) {
      uint64_t v17 = a4;
    }
    else {
      uint64_t v17 = 0xE400000000000000;
    }
    uint64_t v18 = sub_1D75AEF50(0, (unint64_t *)&unk_1EBDEBE20);
    uint64_t v24 = v18;
    v23[0] = v15;
    id v19 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v20 = a7 & 1;
    sub_1D75B4F94(v16, v17, a1, a2, (uint64_t)v23, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    if (a6)
    {
      uint64_t v24 = v18;
      v23[0] = v19;
      id v21 = v19;
      sub_1D75B4F94(v16, v17, a5, a6, (uint64_t)v23, v20);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

void *sub_1D75B635C(char a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1D75B6480(a1);
  uint64_t v1 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBDB0);
  char v2 = (void *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_dataWithPropertyList_format_options_error_, v2, 200, 0, v7);

  id v4 = v7[0];
  if (v3)
  {
    unsigned __int16 v5 = (void *)sub_1D765FED0();
  }
  else
  {
    unsigned __int16 v5 = v4;
    sub_1D765FD60();

    swift_willThrow();
  }
  return v5;
}

void sub_1D75B6480(char a1)
{
  id v3 = (uint64_t *)(v1 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_4_3();
  uint64_t v4 = *v3;
  sub_1D75B941C(v4, v73);
  uint64_t v55 = v73[0];
  uint64_t v56 = v73[3];
  uint64_t v5 = v73[4];
  uint64_t v53 = v73[1];
  int64_t v54 = (unint64_t)(v73[2] + 64) >> 6;
  uint64_t v64 = &v69;
  v52[1] = v4;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v62 = v6;
    if (!v5) {
      break;
    }
    OUTLINED_FUNCTION_21_5();
    uint64_t v59 = v5;
    uint64_t v8 = v7 | (v56 << 6);
LABEL_19:
    uint64_t v61 = v52;
    uint64_t v16 = *(void *)(v55 + 56);
    uint64_t v17 = (uint64_t *)(*(void *)(v55 + 48) + 16 * v8);
    uint64_t v18 = v17[1];
    uint64_t v57 = *v17;
    uint64_t v19 = *(void *)(v16 + 8 * v8);
    sub_1D75B941C(v19, v74);
    uint64_t v21 = v74[0];
    uint64_t v20 = v74[1];
    uint64_t v22 = v74[3];
    uint64_t v23 = v74[4];
    int64_t v24 = (unint64_t)(v74[2] + 64) >> 6;
    uint64_t v60 = v19;
    swift_bridgeObjectRetain_n();
    uint64_t v58 = v18;
    swift_bridgeObjectRetain();
    uint64_t v63 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v23)
      {
        OUTLINED_FUNCTION_21_5();
        uint64_t v26 = v25 | (v22 << 6);
        goto LABEL_37;
      }
      int64_t v27 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
        goto LABEL_56;
      }
      if (v27 >= v24) {
        goto LABEL_49;
      }
      if (!*(void *)(v20 + 8 * v27))
      {
        if (v22 + 2 >= v24) {
          goto LABEL_49;
        }
        if (!*(void *)(v20 + 8 * (v22 + 2)))
        {
          if (v22 + 3 >= v24) {
            goto LABEL_49;
          }
          if (!*(void *)(v20 + 8 * (v22 + 3)))
          {
            if (v22 + 4 >= v24) {
              goto LABEL_49;
            }
            if (!*(void *)(v20 + 8 * (v22 + 4)))
            {
              if (v22 + 5 >= v24) {
                goto LABEL_49;
              }
              if (!*(void *)(v20 + 8 * (v22 + 5))) {
                break;
              }
            }
          }
        }
      }
LABEL_36:
      OUTLINED_FUNCTION_10_3();
      uint64_t v23 = v31 & v30;
      uint64_t v26 = v33 + (v32 << 6);
      uint64_t v22 = v32;
LABEL_37:
      unint64_t v34 = (uint64_t *)(*(void *)(v21 + 48) + 16 * v26);
      uint64_t v35 = *v34;
      uint64_t v36 = v34[1];
      sub_1D75B8D1C(*(void *)(v21 + 56) + 40 * v26, (uint64_t)v72);
      v71[0] = v35;
      v71[1] = v36;
      sub_1D75B8D1C((uint64_t)v72, (uint64_t)&v65);
      if (a1)
      {
        swift_bridgeObjectRetain();
        sub_1D75B8E3C((uint64_t)&v65);
LABEL_41:
        *(void *)&long long v68 = v35;
        *((void *)&v68 + 1) = v36;
        sub_1D758DD0C((uint64_t)v72, (uint64_t)v64);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
      char v37 = v67;
      swift_bridgeObjectRetain();
      sub_1D75B8E3C((uint64_t)&v65);
      if ((v37 & 1) == 0) {
        goto LABEL_41;
      }
      long long v69 = 0u;
      long long v70 = 0u;
      long long v68 = 0u;
LABEL_42:
      sub_1D758C650((uint64_t)v71, (uint64_t *)&unk_1EBDEBDB8);
      if (*((void *)&v68 + 1))
      {
        long long v65 = v68;
        long long v66 = v69;
        long long v67 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D75CFE50();
          uint64_t v63 = v43;
        }
        unint64_t v38 = *(void *)(v63 + 16);
        if (v38 >= *(void *)(v63 + 24) >> 1)
        {
          sub_1D75CFE50();
          uint64_t v63 = v44;
        }
        uint64_t v39 = v63;
        *(void *)(v63 + 16) = v38 + 1;
        uint64_t v40 = (_OWORD *)(v39 + 48 * v38);
        long long v41 = v65;
        long long v42 = v67;
        v40[3] = v66;
        v40[4] = v42;
        v40[2] = v41;
      }
      else
      {
        sub_1D758C650((uint64_t)&v68, (uint64_t *)&unk_1EA82BAD8);
      }
    }
    int64_t v28 = v22 + 6;
    while (v28 < v24)
    {
      if (*(void *)(v20 + 8 * v28++)) {
        goto LABEL_36;
      }
    }
LABEL_49:
    swift_release();
    uint64_t v45 = sub_1D75B4DEC(v63, &qword_1EBDEBE40, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D75B8A28);
    swift_bridgeObjectRelease();
    uint64_t v6 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D75CFDAC();
      uint64_t v6 = v50;
    }
    uint64_t v46 = v58;
    uint64_t v5 = v59;
    uint64_t v47 = v57;
    unint64_t v48 = *(void *)(v6 + 16);
    if (v48 >= *(void *)(v6 + 24) >> 1)
    {
      sub_1D75CFDAC();
      uint64_t v6 = v51;
    }
    *(void *)(v6 + 16) = v48 + 1;
    uint64_t v49 = (void *)(v6 + 24 * v48);
    v49[4] = v47;
    v49[5] = v46;
    v49[6] = v45;
  }
  int64_t v9 = v56 + 1;
  if (!__OFADD__(v56, 1))
  {
    if (v9 >= v54) {
      goto LABEL_54;
    }
    if (!*(void *)(v53 + 8 * v9))
    {
      if (v56 + 2 >= v54) {
        goto LABEL_54;
      }
      if (!*(void *)(v53 + 8 * (v56 + 2)))
      {
        if (v56 + 3 >= v54) {
          goto LABEL_54;
        }
        if (!*(void *)(v53 + 8 * (v56 + 3)))
        {
          if (v56 + 4 >= v54) {
            goto LABEL_54;
          }
          if (!*(void *)(v53 + 8 * (v56 + 4)))
          {
            if (v56 + 5 >= v54) {
              goto LABEL_54;
            }
            if (!*(void *)(v53 + 8 * (v56 + 5)))
            {
              int64_t v10 = v56 + 6;
              while (v10 < v54)
              {
                if (*(void *)(v53 + 8 * v10++)) {
                  goto LABEL_18;
                }
              }
LABEL_54:
              swift_release();
              swift_bridgeObjectRelease();
              sub_1D75B4DEC(v6, (uint64_t *)&unk_1EBDEBE30, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D75B8750);
              return;
            }
          }
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_10_3();
    uint64_t v59 = v13 & v12;
    uint64_t v8 = v15 + (v14 << 6);
    uint64_t v56 = v14;
    goto LABEL_19;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_1D75B697C(uint64_t a1)
{
  sub_1D75B9454(a1, (uint64_t)v6, &qword_1EBDEC4D0);
  if (!v7)
  {
    sub_1D758C650((uint64_t)v6, &qword_1EBDEC4D0);
    goto LABEL_5;
  }
  type metadata accessor for DeviceKeyValueStore();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  sub_1D75AEF50(0, (unint64_t *)&unk_1EA82BA20);
  sub_1D75B6480(1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBDB0);
  uint64_t v1 = (void *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  sub_1D75B6480(1);
  char v2 = (void *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  char v3 = sub_1D7660FC0();

  return v3 & 1;
}

id DeviceKeyValueStore.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D75B6B90()
{
  sub_1D7660B10();
  sub_1D7661730();
  sub_1D7660B90();
  uint64_t v0 = sub_1D7661760();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D75B6C04()
{
  return sub_1D7660B10();
}

unint64_t sub_1D75B6C1C()
{
  OUTLINED_FUNCTION_9_4();
  sub_1D7660B90();
  sub_1D7661760();
  uint64_t v0 = OUTLINED_FUNCTION_5_0();
  return sub_1D75B843C(v0, v1, v2);
}

unint64_t sub_1D75B6C7C(uint64_t a1)
{
  sub_1D7660B10();
  sub_1D7661730();
  sub_1D7660B90();
  uint64_t v2 = sub_1D7661760();
  swift_bridgeObjectRelease();
  return sub_1D75B8520(a1, v2);
}

unint64_t sub_1D75B6D10(uint64_t a1)
{
  uint64_t v2 = sub_1D7661720();
  return sub_1D75B8698(a1, v2);
}

unint64_t sub_1D75B6D54()
{
  OUTLINED_FUNCTION_9_4();
  swift_bridgeObjectRetain();
  sub_1D7660B90();
  swift_bridgeObjectRelease();
  sub_1D7661760();
  uint64_t v0 = OUTLINED_FUNCTION_5_0();
  return sub_1D75B843C(v0, v1, v2);
}

uint64_t sub_1D75B6DC4(_OWORD *a1, void *a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  sub_1D75B77E4(a1, a2);
  uint64_t *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B6E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *char v3 = 0x8000000000000000;
  sub_1D75B7914(a1, a2, a3);
  *char v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B6ED4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *char v3 = 0x8000000000000000;
  sub_1D75B7A4C(a1, a2, a3);
  *char v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B6F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_7_3();
  unint64_t v6 = sub_1D75B7B8C(a1, a2, a3);
  OUTLINED_FUNCTION_15_2(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B6FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75B6FF0(a1, a2, a3, &qword_1EBDEC378);
}

uint64_t sub_1D75B6FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75B6FF0(a1, a2, a3, &qword_1EBDEC370);
}

uint64_t sub_1D75B6FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_7_3();
  sub_1D75B7CA8(a1, a2, a3, v9, a4);
  *uint64_t v4 = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B7074()
{
  OUTLINED_FUNCTION_18_2();
  uint64_t v0 = OUTLINED_FUNCTION_3_5();
  unint64_t v2 = sub_1D75B7DCC(v0, v1);
  OUTLINED_FUNCTION_15_2(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B70C0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1D75B7ED4(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B7150(long long *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1D75B8010(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75B71E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBE30);
  char v36 = a2;
  uint64_t v6 = sub_1D7661280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D7661730();
    sub_1D7660B90();
    uint64_t result = sub_1D7661760();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = (void *)(*(void *)(v7 + 48) + 16 * v27);
    *uint64_t v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v27) = v23;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v34)
    {
      swift_release();
      uint64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v35 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v34) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v35 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v34)
  {
    unint64_t v18 = *(void *)(v35 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v34) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v35 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
LABEL_34:
  if (v36)
  {
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      sub_1D75B8734(0, (unint64_t)(v33 + 63) >> 6, v17);
    }
    else {
      *uint64_t v17 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D75B74E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBE40);
  uint64_t v6 = sub_1D7661280();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      int64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * i);
      if (a2)
      {
        sub_1D758CB98(v22, v35);
      }
      else
      {
        sub_1D758DD0C((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D7661730();
      sub_1D7660B90();
      uint64_t result = sub_1D7661760();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v31 = (void *)(*(void *)(v7 + 48) + 16 * v26);
      *uint64_t v31 = v21;
      v31[1] = v20;
      uint64_t result = (uint64_t)sub_1D758CB98(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v26));
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v33) {
        goto LABEL_33;
      }
      unint64_t v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v17 = v34[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            uint64_t v3 = v2;
            if (a2)
            {
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                sub_1D75B8734(0, (unint64_t)(v32 + 63) >> 6, v34);
              }
              else {
                *int64_t v34 = -1 << v32;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_41;
              }
              if (v13 >= v33) {
                goto LABEL_33;
              }
              unint64_t v17 = v34[v13];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_18:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1D75B77E4(_OWORD *a1, void *a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v5 = (void *)*v2;
  unint64_t v6 = sub_1D75B6C7C((uint64_t)a2);
  if (__OFADD__(v5[2], (v7 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v8 = v6;
  char v9 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C540);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v10 = sub_1D75B6C7C((uint64_t)a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_13:
    type metadata accessor for RPTrustedHostInfoKey(0);
    uint64_t result = (_OWORD *)sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v8 = v10;
LABEL_5:
  uint64_t v12 = *v3;
  if (v9)
  {
    int64_t v13 = (_OWORD *)(v12[7] + 32 * v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    return sub_1D758CB98(a1, v13);
  }
  else
  {
    sub_1D75B8158(v8, (uint64_t)a2, a1, v12);
    return a2;
  }
}

uint64_t sub_1D75B7914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1D75B6C1C();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADA8);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1D75B6C1C();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7] + 40 * v11;
    return sub_1D75B94B4(a1, v16);
  }
  else
  {
    sub_1D75B81C0(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_1D75B7A4C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1D75B6C1C();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA10);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1D75B6C1C();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
    return sub_1D758CB98(a1, v16);
  }
  else
  {
    sub_1D75B821C(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

unint64_t sub_1D75B7B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1D75B6D10(a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BAD0);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1D75B6D10(a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    unint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (uint64_t *)(v15[7] + 16 * v11);
    unint64_t result = swift_release();
    uint64_t *v16 = a1;
    v16[1] = a2;
  }
  else
  {
    return sub_1D75B8288(v11, a3, a1, a2, v15);
  }
  return result;
}

uint64_t sub_1D75B7CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1D75B6C1C();
  OUTLINED_FUNCTION_24_1();
  if (v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v10;
  char v14 = v11;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_5_0();
  unint64_t v15 = sub_1D75B6C1C();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    uint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  unint64_t v17 = *v5;
  if (v14)
  {
    uint64_t v18 = v17[7];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v18 + 8 * v13) = a1;
  }
  else
  {
    sub_1D75B82D0(v13, a2, a3, a1, v17);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1D75B7DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  unint64_t v6 = (void *)*v2;
  unint64_t v7 = sub_1D758C92C(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BAC0);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v11 = sub_1D758C92C(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_10:
    unint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v11;
LABEL_5:
  unint64_t v13 = *v3;
  if (v10)
  {
    uint64_t v14 = v13[7];
    unint64_t result = swift_unknownObjectRelease();
    *(void *)(v14 + 8 * v9) = a1;
  }
  else
  {
    sub_1D758CA38(a2, (uint64_t)v16);
    return sub_1D75B8318(v9, (uint64_t)v16, a1, v13);
  }
  return result;
}

uint64_t sub_1D75B7ED4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_1D75B6D54();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C510);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1D75B6D54();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA40);
    uint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  unint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7] + 48 * v11;
    return sub_1D75B9360((uint64_t)a1, v16);
  }
  else
  {
    sub_1D75B8370(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1D75B8010(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_1D75B6D54();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA50);
  if ((sub_1D7661220() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1D75B6D54();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA40);
    uint64_t result = sub_1D76615F0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  unint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7] + 40 * v11;
    __swift_destroy_boxed_opaque_existential_0Tm(v16);
    return sub_1D758AB78(a1, v16);
  }
  else
  {
    sub_1D75B83CC(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_1D75B8158(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1D758CB98(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1D75B81C0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 40 * result;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(unsigned char *)(v6 + 32) = *(unsigned char *)(a4 + 32);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1D75B821C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D758CB98(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1D75B8288(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  void *v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1D75B82D0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1D75B8318(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 40 * result;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 32);
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1D75B8370(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  long long v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  uint64_t v6 = (_OWORD *)(a5[7] + 48 * result);
  long long v7 = a4[1];
  *uint64_t v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1D75B83CC(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D758AB78(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1D75B843C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D7661560() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D7661560() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D75B8520(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1D7660B10();
    uint64_t v8 = v7;
    if (v6 == sub_1D7660B10() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1D7661560();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1D7660B10();
          uint64_t v15 = v14;
          if (v13 == sub_1D7660B10() && v15 == v16) {
            break;
          }
          char v18 = sub_1D7661560();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D75B8698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D75B8734(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_1D75B8750(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (unint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    uint64_t v7 = *(i - 2);
    uint64_t v6 = *(i - 1);
    uint64_t v8 = *i;
    uint64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1D75B6C1C();
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D76615F0();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BAE8);
      sub_1D7661230();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    int64_t v19 = (void *)(v18[6] + 16 * v11);
    *int64_t v19 = v7;
    v19[1] = v6;
    *(void *)(v18[7] + 8 * v11) = v8;
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    long long v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D75B71E0(v14, a2 & 1);
  unint64_t v16 = sub_1D75B6C1C();
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D7661100();
  sub_1D7660BC0();
  sub_1D7661200();
  sub_1D7660BC0();
  sub_1D7661260();
  __break(1u);
}

void sub_1D75B8A28(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D75B9454(v6, (uint64_t)&v28, (uint64_t *)&unk_1EBDEBDD0);
    uint64_t v8 = v28;
    uint64_t v7 = v29;
    uint64_t v26 = v28;
    uint64_t v27 = v29;
    sub_1D758CB98(&v30, v25);
    uint64_t v9 = (void *)*a3;
    unint64_t v11 = sub_1D75B6C1C();
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D76615F0();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA10);
      sub_1D7661230();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    int64_t v19 = (void *)(v18[6] + 16 * v11);
    *int64_t v19 = v8;
    v19[1] = v7;
    sub_1D758CB98(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    long long v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D75B74E8(v14, a2 & 1);
  unint64_t v16 = sub_1D75B6C1C();
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v31 = v23;
  id v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1D7661100();
  sub_1D7660BC0();
  sub_1D7661200();
  sub_1D7660BC0();
  sub_1D7661260();
  __break(1u);
}

uint64_t sub_1D75B8D1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75B8D54(uint64_t *a1, char a2, void **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1D75B8D60(a1, a2, a3, a4, a5, a6, &qword_1EBDEC368);
}

uint64_t sub_1D75B8D60(uint64_t *a1, char a2, void **a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)((*a3)[7] + 8 * a4) = v7;
    }
    else
    {
      sub_1D75B82D0(a4, a5, a6, v7, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    __swift_instantiateConcreteTypeFromMangledName(a7);
    sub_1D7661240();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D75B8E3C(uint64_t a1)
{
  return a1;
}

uint64_t method lookup function for DeviceKeyValueStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeviceKeyValueStore);
}

uint64_t dispatch thunk of DeviceKeyValueStore.__allocating_init(copyingValuesFrom:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.setValue(_:_:_:sensitive:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.getValue(_:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.getKeyValuePairs(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.isValueSensitive(_:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.data(includeSensitive:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t destroy for KVSValue(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t initializeWithCopy for KVSValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for KVSValue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for KVSValue(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for KVSValue(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KVSValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KVSValue()
{
  return &type metadata for KVSValue;
}

uint64_t sub_1D75B9360(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75B93BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75B941C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1D75B9454(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = OUTLINED_FUNCTION_36();
  v5(v4);
  return a2;
}

uint64_t sub_1D75B94B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return 0x657263536E69614DLL;
}

uint64_t OUTLINED_FUNCTION_17_2(uint64_t a1)
{
  return *(void *)(*(void *)(v1 + 56) + 16 * a1 + 8);
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

double OUTLINED_FUNCTION_19_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1D75B523C(v6, (uint64_t)va);
}

BOOL sub_1D75B9578(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1D75B9584()
{
  uint64_t v0 = sub_1D7660B10();
  uint64_t v2 = v1;
  if (v0 == sub_1D7660B10() && v2 == v3) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    LOBYTE(v0) = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1D75B95FC(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x726F727265736ELL;
  }
  else {
    uint64_t v2 = 0x656C6261646F63;
  }
  if (a2) {
    uint64_t v3 = 0x726F727265736ELL;
  }
  else {
    uint64_t v3 = 0x656C6261646F63;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1D7661560();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D75B967C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656369766564;
  }
  else {
    uint64_t v4 = 1953722216;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656369766564;
  }
  else {
    uint64_t v6 = 1953722216;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9704(char a1, char a2)
{
  uint64_t v3 = 1667855729;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 7365492;
    }
    else {
      uint64_t v4 = 7365749;
    }
    unint64_t v5 = 0xE300000000000000;
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 1667855729;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 7365492;
    }
    else {
      uint64_t v3 = 7365749;
    }
    unint64_t v6 = 0xE300000000000000;
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v4 == v3 && v5 == v6) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B97C0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6976654465726F63;
  }
  else {
    uint64_t v4 = 0x615065746F6D6572;
  }
  if (v3) {
    unint64_t v5 = 0xED0000676E697269;
  }
  else {
    unint64_t v5 = 0xEA00000000006563;
  }
  if (a2) {
    uint64_t v6 = 0x6976654465726F63;
  }
  else {
    uint64_t v6 = 0x615065746F6D6572;
  }
  if (a2) {
    unint64_t v7 = 0xEA00000000006563;
  }
  else {
    unint64_t v7 = 0xED0000676E697269;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9864(char a1, char a2)
{
  unint64_t v4 = 0xD000000000000013;
  uint64_t v5 = 0xD000000000000022;
  unint64_t v6 = (unint64_t)"";
  unint64_t v7 = 0x80000001D7671AF0;
  uint64_t v8 = "_remotepairing._tcp";
  switch(a1)
  {
    case 1:
      unint64_t v7 = 0x80000001D7671B20;
      uint64_t v5 = 0xD000000000000013;
      break;
    case 2:
      uint64_t v5 = OUTLINED_FUNCTION_122();
      unint64_t v9 = 0x80000001D7671AF0 & 0xFFFF0000FFFFFFFFLL | 0x637400000000;
      goto LABEL_5;
    case 3:
      uint64_t v5 = OUTLINED_FUNCTION_122();
      unint64_t v9 = 0x80000001D7671AF0 & 0xFFFF0000FFFFFFFFLL | 0x647500000000;
LABEL_5:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEF70000000000000;
      break;
    case 4:
      uint64_t v5 = 0xD000000000000021;
      unint64_t v7 = 0x80000001D7671B60;
      break;
    default:
      break;
  }
  unint64_t v10 = v4 + 15;
  unint64_t v11 = v6 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v11 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v10 = 0xD000000000000013;
      break;
    case 2:
      OUTLINED_FUNCTION_119();
      unint64_t v12 = v11 & 0xFFFF0000FFFFFFFFLL | 0x637400000000;
      goto LABEL_11;
    case 3:
      OUTLINED_FUNCTION_119();
      unint64_t v12 = v11 & 0xFFFF0000FFFFFFFFLL | 0x647500000000;
LABEL_11:
      unint64_t v11 = v12 & 0xFFFFFFFFFFFFLL | 0xEF70000000000000;
      break;
    case 4:
      OUTLINED_FUNCTION_154();
      break;
    default:
      break;
  }
  if (v5 == v10 && v7 == v11) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B99D4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 1701869940;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 1701869940;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v6 = 7697517;
      break;
    case 2:
      unint64_t v4 = 0x80000001D7671AB0;
      unint64_t v6 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v6 = 0x6441726576726573;
      uint64_t v7 = 0x7373657264;
      goto LABEL_6;
    case 4:
      unint64_t v6 = 0x5352726576726573;
      uint64_t v7 = 0x74726F5044;
LABEL_6:
      unint64_t v4 = v7 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v6 = 0x797469726F697270;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE300000000000000;
      unint64_t v3 = 7697517;
      break;
    case 2:
      OUTLINED_FUNCTION_154();
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0x6441726576726573;
      uint64_t v9 = 0x7373657264;
      goto LABEL_13;
    case 4:
      unint64_t v3 = 0x5352726576726573;
      uint64_t v9 = 0x74726F5044;
LABEL_13:
      unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    case 5:
      unint64_t v8 = 0xE800000000000000;
      unint64_t v3 = 0x797469726F697270;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9BB4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = 0x80000001D7671A20;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000016;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0xD000000000000017;
      uint64_t v7 = "clientHandshakeRequest";
      goto LABEL_5;
    case 2:
      unint64_t v6 = 0xD000000000000019;
      uint64_t v7 = "serverHandshakeResponse";
      goto LABEL_5;
    case 3:
      unint64_t v6 = 0xD00000000000001CLL;
      uint64_t v7 = "additionalConnectionHello";
LABEL_5:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001D7671A20;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000017;
      uint64_t v9 = "clientHandshakeRequest";
      goto LABEL_10;
    case 2:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v9 = "serverHandshakeResponse";
      goto LABEL_10;
    case 3:
      unint64_t v3 = 0xD00000000000001CLL;
      uint64_t v9 = "additionalConnectionHello";
LABEL_10:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9CF4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x73736563637573;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x73736563637573;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x6572756C696166;
      break;
    case 2:
      unint64_t v6 = 0x676E656C6C616863;
      unint64_t v4 = 0xE900000000000065;
      break;
    case 3:
      unint64_t v4 = 0x80000001D7671A00;
      unint64_t v6 = 0xD000000000000013;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6572756C696166;
      break;
    case 2:
      unint64_t v3 = 0x676E656C6C616863;
      unint64_t v7 = 0xE900000000000065;
      break;
    case 3:
      OUTLINED_FUNCTION_154();
      unint64_t v3 = 0xD000000000000013;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9E5C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 7823730;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 7823730;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v6 = 0x726F727265;
      break;
    case 2:
      unint64_t v4 = 0x80000001D76719C0;
      unint64_t v6 = 0xD000000000000014;
      break;
    case 3:
      OUTLINED_FUNCTION_204();
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v3 = 0x726F727265;
      break;
    case 2:
      OUTLINED_FUNCTION_154();
      unint64_t v3 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v3 = 0x656C74746F726874;
      unint64_t v7 = 0xEF73646E6F636553;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75B9FB8(unsigned __int8 a1, char a2)
{
  unint64_t v4 = 0xD000000000000012;
  unint64_t v5 = 0xD000000000000013;
  unint64_t v6 = (unint64_t)"ternal\"8@\"NSError\"16";
  unint64_t v7 = 0x80000001D7671920;
  uint64_t v8 = a1;
  uint64_t v9 = "automationUpgradePairing";
  unint64_t v10 = "upgradeNonAutomationLockdownPairing";
  unint64_t v11 = "setupManualPairing";
  switch(v8)
  {
    case 1:
      unint64_t v7 = 0x80000001D7671940;
      unint64_t v5 = OUTLINED_FUNCTION_200();
      break;
    case 2:
      unint64_t v5 = 0xD000000000000023;
      unint64_t v12 = "setupManualPairing";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v12 = "tionLockdownPairing";
LABEL_5:
      unint64_t v7 = (unint64_t)v12 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v13 = v4 + 1;
  unint64_t v14 = v6 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v14 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v13 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v13 = v4 + 17;
      char v15 = v10 - 32;
      goto LABEL_10;
    case 3:
      unint64_t v13 = v4 + 6;
      char v15 = v9 - 32;
LABEL_10:
      unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v13 && v7 == v14) {
    OUTLINED_FUNCTION_57_0();
  }
  else {
    char v2 = OUTLINED_FUNCTION_18_3();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D75BA108()
{
  return sub_1D75BAA00();
}

uint64_t sub_1D75BA114(uint64_t a1)
{
  return sub_1D75BA238(a1, (void (*)(unsigned char *, uint64_t))sub_1D75BA42C);
}

uint64_t sub_1D75BA12C(uint64_t a1)
{
  return sub_1D75BA238(a1, (void (*)(unsigned char *, uint64_t))sub_1D75BA6B8);
}

uint64_t sub_1D75BA144(uint64_t a1)
{
  return sub_1D75BA238(a1, (void (*)(unsigned char *, uint64_t))sub_1D75BA778);
}

uint64_t sub_1D75BA15C()
{
  return sub_1D75BAB0C();
}

uint64_t sub_1D75BA168()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BA1A8()
{
  return sub_1D75BAB80();
}

uint64_t sub_1D75BA1B4(char a1)
{
  return sub_1D7661760();
}

uint64_t sub_1D75BA1FC(uint64_t a1)
{
  return sub_1D75BA238(a1, (void (*)(unsigned char *, uint64_t))sub_1D75BA600);
}

uint64_t sub_1D75BA214()
{
  return sub_1D75BAA88();
}

uint64_t sub_1D75BA220(uint64_t a1)
{
  return sub_1D75BA238(a1, (void (*)(unsigned char *, uint64_t))sub_1D75BA834);
}

uint64_t sub_1D75BA238(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  OUTLINED_FUNCTION_145();
  a2(v5, a1);
  return sub_1D7661760();
}

uint64_t sub_1D75BA280()
{
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA2D8()
{
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA338()
{
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA3B0()
{
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA42C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_213();
      break;
    case 4:
      OUTLINED_FUNCTION_118();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA510(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      OUTLINED_FUNCTION_118();
      break;
    case 3:
    case 4:
      OUTLINED_FUNCTION_208();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA600(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_118();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA6B8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      OUTLINED_FUNCTION_213();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA778(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      OUTLINED_FUNCTION_118();
      break;
    case 3:
      OUTLINED_FUNCTION_204();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA834(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
      OUTLINED_FUNCTION_118();
      break;
    default:
      break;
  }
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75BA8F8(uint64_t a1, uint64_t a2)
{
  return sub_1D75BA9B4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D75BA834);
}

uint64_t sub_1D75BA910(uint64_t a1, uint64_t a2)
{
  return sub_1D75BA9B4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D75BA778);
}

uint64_t sub_1D75BA928(uint64_t a1, uint64_t a2)
{
  return sub_1D75BA9B4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D75BA6B8);
}

uint64_t sub_1D75BA940(uint64_t a1, uint64_t a2)
{
  return sub_1D75BA9B4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D75BA600);
}

uint64_t sub_1D75BA958()
{
  OUTLINED_FUNCTION_187();
  sub_1D75E8058(v0);
  OUTLINED_FUNCTION_162();
  swift_bridgeObjectRelease();
  return sub_1D7661760();
}

uint64_t sub_1D75BA99C(uint64_t a1, uint64_t a2)
{
  return sub_1D75BA9B4(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D75BA42C);
}

uint64_t sub_1D75BA9B4(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_1D7661730();
  a3(v6, a2);
  return sub_1D7661760();
}

uint64_t sub_1D75BAA00()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BAA88()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BAB0C()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BAB80()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BABEC()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BAC30()
{
  sub_1D75D5108();
  uint64_t result = sub_1D7660FE0();
  qword_1EBDEBCD0 = result;
  return result;
}

BOOL PairingConsentCollectionOutcome.terminal.getter()
{
  return *v0 != 1;
}

uint64_t PermittedPromptlessPairingMode.hash(into:)()
{
  return sub_1D7661740();
}

uint64_t PermittedPromptlessPairingMode.hashValue.getter()
{
  return sub_1D7661760();
}

uint64_t sub_1D75BAD18()
{
  uint64_t v0 = sub_1D76612C0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1D75BAD6C(char a1)
{
  if (a1) {
    return 0x656369766564;
  }
  else {
    return 1953722216;
  }
}

uint64_t sub_1D75BADA4()
{
  return sub_1D75BA15C();
}

uint64_t sub_1D75BADAC()
{
  return sub_1D75BA2D8();
}

uint64_t sub_1D75BADB4()
{
  return sub_1D75BAB0C();
}

uint64_t sub_1D75BADBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75BAD18();
  *a1 = result;
  return result;
}

uint64_t sub_1D75BADEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75BAD6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D75BAE18(char *a1, char *a2)
{
  return sub_1D75B967C(*a1, *a2);
}

uint64_t sub_1D75BAE24()
{
  return sub_1D7660CC0();
}

uint64_t sub_1D75BAE84()
{
  return sub_1D7660CA0();
}

uint64_t ControlChannelConnection.Options.Host.attemptPairVerify.getter()
{
  return *v0;
}

uint64_t ControlChannelConnection.Options.Host.attemptPairVerify.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Host.attemptPairVerify.modify())(void)
{
  return nullsub_1;
}

RemotePairingDevice::ControlChannelConnection::Options::Host __swiftcall ControlChannelConnection.Options.Host.init(attemptPairVerify:)(RemotePairingDevice::ControlChannelConnection::Options::Host attemptPairVerify)
{
  v1->attemptPairVerify = attemptPairVerify.attemptPairVerify;
  return attemptPairVerify;
}

uint64_t sub_1D75BAF10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001D7673AC0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1D75BAF98()
{
  return 0xD000000000000011;
}

uint64_t sub_1D75BAFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75BAF10(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75BAFE8(uint64_t a1)
{
  unint64_t v2 = sub_1D75BB13C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75BB024(uint64_t a1)
{
  unint64_t v2 = sub_1D75BB13C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ControlChannelConnection.Options.Host.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BB00);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_9();
  unsigned int v1 = (void *)OUTLINED_FUNCTION_176();
  __swift_project_boxed_opaque_existential_0Tm(v1, v2);
  sub_1D75BB13C();
  sub_1D76617C0();
  sub_1D7661460();
  uint64_t v3 = OUTLINED_FUNCTION_22();
  v4(v3);
  OUTLINED_FUNCTION_4_0();
}

unint64_t sub_1D75BB13C()
{
  unint64_t result = qword_1EBDEB538;
  if (!qword_1EBDEB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB538);
  }
  return result;
}

void ControlChannelConnection.Options.Host.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBEF0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_9();
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75BB13C();
  sub_1D76617A0();
  if (!v0)
  {
    char v6 = sub_1D7661350();
    uint64_t v7 = OUTLINED_FUNCTION_22();
    v8(v7);
    *uint64_t v4 = v6 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75BB288()
{
}

void sub_1D75BB2A0()
{
}

uint64_t ControlChannelConnection.Options.Device.allowsPairSetup.getter()
{
  return *v0;
}

uint64_t ControlChannelConnection.Options.Device.allowsPairSetup.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPairSetup.modify())(void)
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsPinlessPairing.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ControlChannelConnection.Options.Device.allowsPinlessPairing.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPinlessPairing.modify())(void)
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.modify())(void)
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.modify())(void)
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t static ControlChannelConnection.Options.Device.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0)
  {
    int v4 = a1[2];
    int v5 = a1[3];
    int v6 = a1[4];
    int v7 = a2[2];
    int v8 = a2[3];
    int v9 = a2[4];
    if (v4 == 2)
    {
      if (v7 != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      BOOL v10 = (v4 & 1) == 0;
      if (v7 == 2 || ((v10 ^ v7) & 1) == 0) {
        return result;
      }
    }
    if (v5 == 2)
    {
      if (v8 != 2) {
        return 0;
      }
LABEL_13:
      if (v6 == 2)
      {
        if (v9 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL v12 = (v6 & 1) == 0;
        if (v9 == 2 || ((v12 ^ v9) & 1) == 0) {
          return 0;
        }
      }
      return 1;
    }
    uint64_t result = 0;
    BOOL v11 = (v5 & 1) == 0;
    if (v8 != 2 && ((v11 ^ v8) & 1) != 0) {
      goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_1D75BB488(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x615073776F6C6C61 && a2 == 0xEF70757465537269;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7673AE0 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D7673B00 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001D7673B20 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D7673B50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1D75BB6A8()
{
  return 5;
}

unint64_t sub_1D75BB6B0(char a1)
{
  unint64_t result = 0x615073776F6C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000028;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75BB77C()
{
  return sub_1D75A2424();
}

unint64_t sub_1D75BB784()
{
  return sub_1D75BB6B0(*v0);
}

uint64_t sub_1D75BB78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75BB488(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75BB7B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75BB6A8();
  *a1 = result;
  return result;
}

uint64_t sub_1D75BB7DC(uint64_t a1)
{
  unint64_t v2 = sub_1D75BB9F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75BB818(uint64_t a1)
{
  unint64_t v2 = sub_1D75BB9F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ControlChannelConnection.Options.Device.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBFD8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75BB9F8();
  sub_1D76617C0();
  sub_1D7661460();
  if (!v0)
  {
    sub_1D7661460();
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_142();
  }
  uint64_t v4 = OUTLINED_FUNCTION_178();
  v5(v4);
  OUTLINED_FUNCTION_4_0();
}

unint64_t sub_1D75BB9F8()
{
  unint64_t result = qword_1EBDEB510;
  if (!qword_1EBDEB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB510);
  }
  return result;
}

void ControlChannelConnection.Options.Device.init(from:)()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BB08);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75BB9F8();
  sub_1D76617A0();
  if (!v0)
  {
    char v6 = sub_1D7661350();
    char v7 = sub_1D7661350();
    char v12 = OUTLINED_FUNCTION_157();
    char v11 = OUTLINED_FUNCTION_157();
    char v8 = OUTLINED_FUNCTION_157();
    uint64_t v9 = OUTLINED_FUNCTION_175();
    v10(v9);
    *uint64_t v4 = v6 & 1;
    v4[1] = v7 & 1;
    _OWORD v4[2] = v12;
    v4[3] = v11;
    v4[4] = v8;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75BBBFC()
{
}

void sub_1D75BBC14()
{
}

uint64_t static ControlChannelConnection.defaultMaxReconnectionAttempts.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_21_1();
  qword_1EA82BAF8 = a1;
  return result;
}

uint64_t (*static ControlChannelConnection.defaultMaxReconnectionAttempts.modify())()
{
  return j_j__swift_endAccess;
}

double sub_1D75BBCB8@<D0>(uint64_t a1@<X8>)
{
  sub_1D75BBEF4((uint64_t)v7);
  char v2 = v10;
  long long v3 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(_OWORD *)(a1 + 48) = v4;
  double result = *(double *)&v8;
  long long v6 = v9;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 96) = v2;
  return result;
}

void sub_1D75BBD0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  unint64_t v11 = *(void *)(a1 + 88);
  char v12 = *(unsigned char *)(a1 + 96);
  v13[0] = *(void *)a1;
  v13[1] = v1;
  long long v13[2] = v2;
  v13[3] = v3;
  void v13[4] = v4;
  v13[5] = v5;
  v13[6] = v6;
  v13[7] = v7;
  v13[8] = v8;
  v13[9] = v9;
  v13[10] = v10;
  v13[11] = v11;
  char v14 = v12;
  sub_1D75BBF70(v13[0], v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1D75BBFEC(v13);
}

void sub_1D75BBD8C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 88);
    uint64_t v14 = *(void *)(v0 + 80);
    unint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 96);
    char v10 = *(unsigned char *)(v0 + 112);
    swift_beginAccess();
    uint64_t v9 = *(void (**)(void *))(v0 + 280);
    if (v9)
    {
      v15[0] = v2;
      v15[1] = v3;
      long long v15[2] = v4;
      void v15[3] = v1;
      v15[4] = v5;
      v15[5] = v6;
      v15[6] = v7;
      v15[7] = v8;
      v15[8] = v14;
      char v16 = v13 & 1;
      uint64_t v17 = v12;
      unint64_t v18 = v11;
      char v19 = v10;
      sub_1D75BBF70(v2, v3, v4, v1, v5, v6, v7, v8, v14, v13, v12, v11);
      sub_1D75A74B4((uint64_t)v9);
      v9(v15);
      sub_1D75940A4((uint64_t)v9);
      sub_1D759423C(v2, v3, v4, v1, v5, v6, v7, v8, v14, v13, v12, v11);
    }
  }
}

void sub_1D75BBEF4(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v13 = *(void *)(v1 + 96);
  unint64_t v14 = *(void *)(v1 + 104);
  char v15 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(unsigned char *)(a1 + 96) = v15;
  sub_1D75BBF70(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

void sub_1D75BBF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D75AC3B4(a11, a12);
  }
}

void sub_1D75BBFEC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  long long v21 = *(_OWORD *)(a1 + 5);
  long long v22 = *((_OWORD *)a1 + 1);
  uint64_t v5 = a1[7];
  long long v20 = *((_OWORD *)a1 + 4);
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[11];
  char v8 = *((unsigned char *)a1 + 96);
  OUTLINED_FUNCTION_21_1();
  __n128 v9 = OUTLINED_FUNCTION_101();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(_OWORD *)(v1 + 32) = v22;
  *(void *)(v1 + 48) = v4;
  *(_OWORD *)(v1 + 56) = v21;
  *(void *)(v1 + 72) = v5;
  *(_OWORD *)(v1 + 80) = v20;
  *(void *)(v1 + 96) = v6;
  *(void *)(v1 + 104) = v7;
  *(unsigned char *)(v1 + 112) = v8;
  sub_1D759423C(v10, v11, v12, v13, v14, v15, v16, v17, v9.n128_i64[0], v9.n128_i64[1], v18, v19);
  sub_1D75BBD8C();
}

void (*sub_1D75BC0A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2();
  return sub_1D75BC0EC;
}

void sub_1D75BC0EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1D75BBD8C();
  }
}

void sub_1D75BC120(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1D75BC18C((uint64_t)v1);
}

void *sub_1D75BC150()
{
  OUTLINED_FUNCTION_4_3();
  id v1 = *(void **)(v0 + 120);
  id v2 = v1;
  return v1;
}

void sub_1D75BC18C(uint64_t a1)
{
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = a1;
}

uint64_t (*sub_1D75BC1C8())()
{
  return j_j__swift_endAccess;
}

double sub_1D75BC20C@<D0>(uint64_t a1@<X8>)
{
  sub_1D7591448((uint64_t)v6);
  uint64_t v2 = v7;
  char v3 = v8;
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

void sub_1D75BC258(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  v6[0] = *(void *)a1;
  v6[1] = v1;
  _OWORD v6[2] = v2;
  _OWORD v6[3] = v3;
  void v6[4] = v4;
  char v7 = v5;
  sub_1D758D424(v6[0], v1, v2, v3, v4, v5, (void (*)(void))sub_1D75A74B4, (void (*)(uint64_t, uint64_t))sub_1D75AC3B4, (void (*)(void))sub_1D75934F4);
  sub_1D759127C(v6);
}

uint64_t sub_1D75BC2F0()
{
  __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 192), *(void *)(v0 + 216));
  uint64_t v1 = OUTLINED_FUNCTION_193();
  return v2(v1);
}

double sub_1D75BC338@<D0>(_OWORD *a1@<X8>)
{
  sub_1D75BC3B0(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1D75BC374(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  return sub_1D75BC3F0(v4);
}

uint64_t sub_1D75BC3B0@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v3 = *(void *)(v1 + 184);
  *a1 = *(void *)(v1 + 176);
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D75BC3F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  OUTLINED_FUNCTION_13_0();
  *(void *)(v1 + 176) = v2;
  *(void *)(v1 + 184) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D75BC434())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BC478()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 24;
  __swift_project_boxed_opaque_existential_0Tm(v0 + 24, v0[27]);
  uint64_t v3 = OUTLINED_FUNCTION_94();
  uint64_t v54 = v4(v3);
  uint64_t v55 = v5;
  sub_1D75BBEF4((uint64_t)&v43);
  uint64_t v6 = v46;
  if (v46)
  {
    unint64_t v7 = v50;
    uint64_t v40 = v49;
    uint64_t v8 = v43;
    uint64_t v9 = v44;
    uint64_t v10 = v45;
    uint64_t v41 = v47;
    uint64_t v42 = v48;
    long long v39 = v51;
    uint64_t v11 = v52;
    unint64_t v12 = v53;
    swift_bridgeObjectRetain();
    unint64_t v38 = v12;
    uint64_t v13 = v40;
    sub_1D759423C(v8, v9, v10, v6, v41, v42, v40, v7, v39, *((uint64_t *)&v39 + 1), v11, v38);
  }
  else
  {
    OUTLINED_FUNCTION_4_3();
    uint64_t v15 = (void *)v1[15];
    if (!v15) {
      goto LABEL_10;
    }
    id v16 = v15;
    uint64_t v13 = CUPairedPeer.udid.getter();
    unint64_t v7 = v17;

    if (!v7)
    {
      uint64_t v13 = 0;
      goto LABEL_11;
    }
  }
  uint64_t v14 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v14 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v13 = 0;
    unint64_t v7 = 0;
  }
LABEL_11:
  uint64_t v18 = v1[27];
  uint64_t v19 = v1[28];
  __swift_project_boxed_opaque_existential_0Tm(v2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 64))(&v43, v18, v19);
  uint64_t v20 = v46;
  if (v46)
  {
    uint64_t v21 = v47;
    long long v22 = __swift_project_boxed_opaque_existential_0Tm(&v43, v46);
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    OUTLINED_FUNCTION_138();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
  }
  else
  {
    sub_1D75D505C((uint64_t)&v43, &qword_1EBDEC180);
    long long v22 = 0;
    uint64_t v21 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDEC208);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D76655E0;
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v21;
  sub_1D75BC3B0(&v43);
  if (v44)
  {
    swift_bridgeObjectRetain();
    sub_1D7660BC0();
    swift_bridgeObjectRelease_n();
    uint64_t v24 = 0x5F6E6F6363;
    unint64_t v25 = 0xE500000000000000;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0;
  }
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 72) = v25;
  if (*(void *)(inited + 40))
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1D75CFEF4(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    if (v28 >= v27 >> 1) {
      uint64_t v26 = OUTLINED_FUNCTION_37((char *)(v27 > 1), v28 + 1);
    }
    OUTLINED_FUNCTION_135();
  }
  else
  {
    uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
  }
  if (*(void *)(inited + 56))
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = OUTLINED_FUNCTION_37(0, *((void *)v26 + 2) + 1);
    }
    unint64_t v30 = *((void *)v26 + 2);
    unint64_t v29 = *((void *)v26 + 3);
    if (v30 >= v29 >> 1) {
      uint64_t v26 = OUTLINED_FUNCTION_37((char *)(v29 > 1), v30 + 1);
    }
    OUTLINED_FUNCTION_135();
  }
  if (*(void *)(inited + 72))
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = OUTLINED_FUNCTION_37(0, *((void *)v26 + 2) + 1);
    }
    unint64_t v32 = *((void *)v26 + 2);
    unint64_t v31 = *((void *)v26 + 3);
    if (v32 >= v31 >> 1) {
      uint64_t v26 = OUTLINED_FUNCTION_37((char *)(v31 > 1), v32 + 1);
    }
    OUTLINED_FUNCTION_135();
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC190);
  sub_1D75D4584((uint64_t)&qword_1EBDEC198);
  uint64_t v33 = sub_1D7660A90();
  unint64_t v35 = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (v36)
  {
    uint64_t v43 = 10272;
    unint64_t v44 = 0xE200000000000000;
    OUTLINED_FUNCTION_178();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_182();
    sub_1D7660BC0();
  }
  swift_bridgeObjectRelease();
  return v54;
}

uint64_t ControlChannelConnection.transport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D758B1EC(v1 + 192, a1);
}

id ControlChannelConnection.queue.getter()
{
  return *(id *)(v0 + 232);
}

void ControlChannelConnection.options.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 240);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(v1 + 244);
  *(_DWORD *)a1 = v2;
}

uint64_t sub_1D75BC91C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1D75BCA44();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D75D5480;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1D75BC98C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
  }
  sub_1D75A74B4(v1);
  return sub_1D7593CC8();
}

uint64_t sub_1D75BCA1C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D75BCA44()
{
  return OUTLINED_FUNCTION_26_0();
}

uint64_t (*sub_1D75BCA7C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BCAC0@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1D75BCBC0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D75D4F9C;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1D75BCB30(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
  }
  sub_1D75A74B4(v1);
  return sub_1D7593D0C();
}

uint64_t sub_1D75BCBC0()
{
  return OUTLINED_FUNCTION_26_0();
}

uint64_t (*sub_1D75BCBF8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BCC3C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1D75BCD3C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D75A74CC;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1D75BCCAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
  }
  sub_1D75A74B4(v1);
  return sub_1D75BCD74();
}

uint64_t sub_1D75BCD3C()
{
  return OUTLINED_FUNCTION_26_0();
}

uint64_t sub_1D75BCD74()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void *)(v1 + 280);
  *(void *)(v1 + 280) = v2;
  *(void *)(v1 + 288) = v0;
  return sub_1D75940A4(v3);
}

uint64_t (*sub_1D75BCDB8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BCDFC@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1D75BCEFC();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D75D5474;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1D75BCE6C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
  }
  sub_1D75A74B4(v1);
  return sub_1D75BCF34();
}

uint64_t sub_1D75BCEFC()
{
  return OUTLINED_FUNCTION_26_0();
}

uint64_t sub_1D75BCF34()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void *)(v1 + 296);
  *(void *)(v1 + 296) = v2;
  *(void *)(v1 + 304) = v0;
  return sub_1D75940A4(v3);
}

uint64_t (*sub_1D75BCF78())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BCFBC()
{
  OUTLINED_FUNCTION_4_3();
  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t sub_1D75BCFE8(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 312) = a1;
  return result;
}

uint64_t (*sub_1D75BD01C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D75BD060()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_3();
  return OUTLINED_FUNCTION_227(v0, v1, (uint64_t *)&unk_1EBDEB500);
}

uint64_t sub_1D75BD0A4()
{
  uint64_t v0 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_221(v0, v1, (uint64_t *)&unk_1EBDEB500);
  return swift_endAccess();
}

uint64_t (*sub_1D75BD0F0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(unsigned char *))
{
  sub_1D75CFFE4(a1, (uint64_t)v8, a5);
  return a6(v8);
}

uint64_t sub_1D75BD17C()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_3();
  return OUTLINED_FUNCTION_227(v0, v1, &qword_1EBDEB4F8);
}

uint64_t (*sub_1D75BD1C0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD204(uint64_t a1)
{
  sub_1D758B1EC(a1, (uint64_t)v2);
  return sub_1D75BD284();
}

uint64_t sub_1D75BD240@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_3();
  return sub_1D758B1EC(v1 + 400, a1);
}

uint64_t sub_1D75BD284()
{
  OUTLINED_FUNCTION_5();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 400);
  uint64_t v1 = (long long *)OUTLINED_FUNCTION_36();
  sub_1D758AB78(v1, v2);
  return swift_endAccess();
}

uint64_t (*sub_1D75BD2D4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD318()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_3();
  return OUTLINED_FUNCTION_227(v0, v1, &qword_1EBDEAC90);
}

uint64_t sub_1D75BD35C()
{
  uint64_t v0 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_221(v0, v1, &qword_1EBDEAC90);
  return swift_endAccess();
}

uint64_t (*sub_1D75BD3A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD3EC()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_3();
  return OUTLINED_FUNCTION_227(v0, v1, qword_1EBDEC0B8);
}

uint64_t sub_1D75BD430()
{
  uint64_t v0 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_221(v0, v1, qword_1EBDEC0B8);
  return swift_endAccess();
}

uint64_t (*sub_1D75BD47C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD4C0()
{
  OUTLINED_FUNCTION_106();
  if (!v2 && (v1 & 0xFF0000) != 0x20000) {
    return (v1 >> 16) & 1;
  }
  __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 192), *(void *)(v0 + 216));
  uint64_t v4 = OUTLINED_FUNCTION_193();
  return v5(v4) & 1;
}

uint64_t sub_1D75BD530()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
  if (v1 == 2) {
    return 2;
  }
  else {
    return v1 & 1;
  }
}

uint64_t sub_1D75BD550()
{
  if (*(_DWORD *)(v0
                                  + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) == 2)
    return 2;
  else {
    return HIBYTE(*(_DWORD *)(v0
  }
                                             + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions));
}

BOOL sub_1D75BD574()
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v1 = *(void *)(v0 + 528);
  return v1
      && *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 12;
}

BOOL sub_1D75BD5C4()
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v1 = *(void *)(v0 + 528);
  return v1
      && *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 15;
}

uint64_t sub_1D75BD614()
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v1 = *(void *)(v0 + 528);
  if (!v1) {
    return 0;
  }
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) < 21) {
    return 0;
  }
  OUTLINED_FUNCTION_106();
  if (v3) {
    return 0;
  }
  else {
    return (v2 >> 24) & 1;
  }
}

uint64_t sub_1D75BD678()
{
  OUTLINED_FUNCTION_4_3();
  return *(unsigned __int8 *)(v0 + 520);
}

uint64_t sub_1D75BD6A4(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 520) = a1;
  return result;
}

uint64_t (*sub_1D75BD6D8())()
{
  return j_j__swift_endAccess;
}

void sub_1D75BD71C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1D75BD788((uint64_t)v1);
}

void *sub_1D75BD74C()
{
  OUTLINED_FUNCTION_4_3();
  id v1 = *(void **)(v0 + 528);
  id v2 = v1;
  return v1;
}

void sub_1D75BD788(uint64_t a1)
{
  OUTLINED_FUNCTION_13_0();
  char v3 = *(void **)(v1 + 528);
  *(void *)(v1 + 528) = a1;
}

uint64_t (*sub_1D75BD7C4())()
{
  return j_j__swift_endAccess;
}

void sub_1D75BD808(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1D75BD874((uint64_t)v1);
}

void *sub_1D75BD838()
{
  OUTLINED_FUNCTION_4_3();
  id v1 = *(void **)(v0 + 536);
  id v2 = v1;
  return v1;
}

void sub_1D75BD874(uint64_t a1)
{
  OUTLINED_FUNCTION_13_0();
  char v3 = *(void **)(v1 + 536);
  *(void *)(v1 + 536) = a1;
}

uint64_t (*sub_1D75BD8B0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D75BD8F4@<X0>(uint64_t (**a1)(uint64_t *a1)@<X8>)
{
  uint64_t result = sub_1D75BDB20();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D75D4F44;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t *))result;
  return result;
}

uint64_t sub_1D75BD964(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  a2(sub_1D75D4F4C, v5);
  return swift_release();
}

uint64_t sub_1D75BD9F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
  }
  sub_1D75A74B4(v1);
  return sub_1D75BDB5C();
}

uint64_t sub_1D75BDA84(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[0] = sub_1D75A74CC;
  v8[1] = v6;
  swift_retain();
  a3(v8);
  return swift_release();
}

uint64_t sub_1D75BDB20()
{
  return OUTLINED_FUNCTION_26_0();
}

uint64_t sub_1D75BDB5C()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = *(void *)(v1 + 544);
  *(void *)(v1 + 544) = v2;
  *(void *)(v1 + 552) = v0;
  return sub_1D75940A4(v3);
}

uint64_t (*sub_1D75BDBA8())()
{
  return j_j__swift_endAccess;
}

uint64_t ControlChannelConnection.maxReconnectionAttempts.getter()
{
  return *(void *)(v0 + 560);
}

uint64_t ControlChannelConnection.startedAt.getter()
{
  sub_1D76609A0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v0 = OUTLINED_FUNCTION_36();
  return v1(v0);
}

uint64_t sub_1D75BDC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  unint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_1D75941DC(v4, v5);
}

BOOL sub_1D75BDC7C()
{
  OUTLINED_FUNCTION_34_0();
  return (v0 & 0x8000) == 0;
}

void sub_1D75BDC94(void **a1)
{
  uint64_t v1 = *a1;
  sub_1D758A9A0(v1);
  sub_1D7592380(&v1);
}

uint64_t (*sub_1D75BDCD0())()
{
  return j_j__swift_endAccess;
}

uint64_t ControlChannelConnection.__allocating_init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)()
{
  uint64_t v0 = swift_allocObject();
  ControlChannelConnection.init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)();
  return v0;
}

uint64_t sub_1D75BDD9C()
{
  OUTLINED_FUNCTION_21_1();
  *(unsigned char *)(v0 + 520) = 1;
  uint64_t result = OUTLINED_FUNCTION_4_3();
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 248);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    uint64_t v4 = OUTLINED_FUNCTION_36();
    return sub_1D75940A4(v4);
  }
  return result;
}

void sub_1D75BDE14()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  memcpy(__dst, v4, 0x92uLL);
  sub_1D75D4920((uint64_t)&__dst[1], (uint64_t)v481);
  sub_1D75D4920((uint64_t)v481, (uint64_t)v482);
  if (sub_1D75D497C((uint64_t)v482) != 1)
  {
    sub_1D75D4988((uint64_t)v482);
    uint64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
    if (v19)
    {
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      id v20 = v19;
      OUTLINED_FUNCTION_178();
      sub_1D75BF414();
      if (!v1)
      {

        sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
        sub_1D75D20E0((uint64_t)&v464, (uint64_t)v478);
        uint64_t v26 = v478;
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v467 = MEMORY[0x1E4FBB1A0];
      OUTLINED_FUNCTION_50_0();
      uint64_t v464 = v24;
      uint64_t v465 = v25;
      LOBYTE(v468) = 1;
      sub_1D7592D84();
      OUTLINED_FUNCTION_3_0();
      LOBYTE(v478[0]) = 1;
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v478);
      OUTLINED_FUNCTION_195();
      sub_1D7592DD0((uint64_t)&v464);
      OUTLINED_FUNCTION_107();
      swift_willThrow();
    }
    sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    goto LABEL_70;
  }
  uint64_t v5 = sub_1D75D4988((uint64_t)v482);
  sub_1D75D20E0(v5, (uint64_t)&v464);
  if (*(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream))
  {
LABEL_3:
    sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    os_log_type_t v6 = sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    unint64_t v7 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v6))
    {
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      swift_retain();
      OUTLINED_FUNCTION_137_0();
      swift_retain();
      uint64_t v8 = swift_slowAlloc();
      v477[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      uint64_t v9 = sub_1D75BC478();
      v478[0] = sub_1D758DBE8(v9, v10, v477);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1D75D20E0((uint64_t)&v464, (uint64_t)v478);
      OUTLINED_FUNCTION_137_0();
      uint64_t v11 = sub_1D7660B60();
      v478[0] = sub_1D758DBE8(v11, v12, v477);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      OUTLINED_FUNCTION_64();
      _os_log_impl(&dword_1D757C000, v7, v6, "%{public}s: Rejecting unencrypted message from peer since we have completed auth or do not accept this message type pre-auth: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    v478[3] = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_50_0();
    v478[0] = v13;
    v478[1] = v14;
    char v479 = 1;
    LOBYTE(v477[0]) = 3;
    Swift::String v15 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v477);
    sub_1D7592DD0((uint64_t)v478);
    sub_1D7592D84();
    id v16 = (void *)OUTLINED_FUNCTION_3_0();
    *(unsigned char *)uint64_t v17 = 3;
    *(Swift::String *)(v17 + 8) = v15;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 40) = 0u;
    *(void *)(v17 + 56) = 0;
    swift_bridgeObjectRetain();
    id v18 = 0;
    sub_1D759250C(v16);
    sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    goto LABEL_70;
  }
  sub_1D75D20E0((uint64_t)&v464, (uint64_t)v478);
  int v21 = sub_1D75D4998((uint64_t)v478);
  if (v21)
  {
    if (v21 == 1)
    {
      uint64_t v22 = sub_1D75D4A78((uint64_t)v478);
      uint64_t v23 = (*(void *)(v22 + 8) >> 60) & 3;
      if (v23)
      {
        if (v23 != 3) {
          goto LABEL_3;
        }
        if (*(_OWORD *)(v22 + 16) != 0) {
          goto LABEL_3;
        }
        OUTLINED_FUNCTION_180();
        if (!v48) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      uint64_t v51 = sub_1D75D4A78((uint64_t)v478);
      if (sub_1D75D409C(v51 + 8) > 7) {
        goto LABEL_3;
      }
      OUTLINED_FUNCTION_183();
      if (v48) {
        goto LABEL_3;
      }
    }
  }
  else
  {
    uint64_t v27 = sub_1D75D4A78((uint64_t)v478);
    unint64_t v28 = *(void *)(v27 + 72);
    if (v28 >> 62 == 3)
    {
      int v29 = *(unsigned __int8 *)(v27 + 96);
      uint64_t v31 = *(void *)(v27 + 80);
      uint64_t v30 = *(void *)(v27 + 88);
      uint64_t v33 = *(void *)(v27 + 56);
      uint64_t v32 = *(void *)(v27 + 64);
      uint64_t v35 = *(void *)(v27 + 40);
      uint64_t v34 = *(void *)(v27 + 48);
      uint64_t v36 = *(void *)(v27 + 24);
      uint64_t v37 = *(void *)(v27 + 32);
      uint64_t v38 = *(void *)v27;
      uint64_t v41 = v27 + 8;
      uint64_t v39 = *(void *)(v27 + 8);
      uint64_t v40 = *(void *)(v41 + 8);
      if (v29) {
        goto LABEL_25;
      }
      if (v28 != 0xC000000000000000) {
        goto LABEL_25;
      }
      v42.i64[0] = v34;
      v42.i64[1] = v35;
      v43.i64[0] = v30;
      v43.i64[1] = v31;
      v44.i64[0] = v37;
      v44.i64[1] = v36;
      v45.i64[0] = v32;
      v45.i64[1] = v33;
      int8x16_t v46 = vorrq_s8(vorrq_s8(v43, v42), vorrq_s8(v45, v44));
      if (v38 | *(void *)&vorr_s8(*(int8x8_t *)v46.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v46, v46, 8uLL)) | v39 | v40)
      {
LABEL_25:
        uint64_t v47 = v31 | v30 | v32 | v33 | v34 | v35 | v37 | v36 | v40 | v39;
        if (v29 || ((OUTLINED_FUNCTION_172(), v48) ? (BOOL v48 = v38 == 1) : (BOOL v48 = 0), !v48 || v47))
        {
          if (v29 || ((OUTLINED_FUNCTION_172(), v48) ? (BOOL v49 = v38 == 2) : (BOOL v49 = 0), !v49 || v47))
          {
            if (v29) {
              goto LABEL_3;
            }
            BOOL v50 = v28 == 0xC000000000000000 && v38 == 3;
            if (!v50 || v47) {
              goto LABEL_3;
            }
          }
        }
      }
    }
  }
  sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  uint64_t v26 = &v464;
LABEL_50:
  sub_1D75D20E0((uint64_t)v26, (uint64_t)v483);
  sub_1D75D20E0((uint64_t)v483, (uint64_t)v478);
  int v52 = sub_1D75D4998((uint64_t)v478);
  if (!v52)
  {
    uint64_t typea = v3;
    uint64_t v93 = sub_1D75D4A78((uint64_t)v478);
    uint64_t v94 = *(void *)v93;
    uint64_t v95 = *(void *)(v93 + 8);
    uint64_t v96 = *(void *)(v93 + 16);
    uint64_t v97 = *(void *)(v93 + 24);
    uint64_t v455 = *(void *)(v93 + 32);
    os_log_t v426 = *(os_log_t *)(v93 + 48);
    os_log_t logb = *(os_log_t *)(v93 + 40);
    uint64_t v409 = *(void *)(v93 + 64);
    uint64_t v417 = *(void *)(v93 + 56);
    uint64_t v390 = *(void *)(v93 + 80);
    uint64_t v399 = *(void *)(v93 + 72);
    uint64_t v381 = *(void *)(v93 + 88);
    HIDWORD(v370) = *(unsigned __int8 *)(v93 + 96);
    sub_1D75D20E0((uint64_t)v483, (uint64_t)v477);
    uint64_t v98 = sub_1D75D4A78((uint64_t)v477);
    uint64_t v100 = *(void *)(v98 + 80);
    unint64_t v99 = *(void *)(v98 + 88);
    char v101 = *(unsigned char *)(v98 + 96);
    LOBYTE(v219) = v101;
    uint64_t v280 = *(void *)(v98 + 72);
    uint64_t v288 = *(void *)(v98 + 64);
    uint64_t v346 = *(void *)(v98 + 8);
    id v355 = *(id *)v98;
    uint64_t v328 = *(void *)(v98 + 24);
    unint64_t v337 = *(void *)(v98 + 16);
    uint64_t v312 = *(void *)(v98 + 40);
    uint64_t v320 = *(void *)(v98 + 32);
    uint64_t v296 = *(void *)(v98 + 56);
    uint64_t v304 = *(void *)(v98 + 48);
    sub_1D75D4704(*(id *)v98, v346, v337, v328, v320, v312, v304, v296, v288, v280, v100, v99);
    os_log_type_t v102 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    os_log_t v364 = (os_log_t)qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v102))
    {
      HIDWORD(v241) = v102;
      uint64_t v258 = v96;
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      OUTLINED_FUNCTION_28_1();
      swift_retain();
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_28_1();
      swift_retain();
      uint64_t v110 = OUTLINED_FUNCTION_11_4();
      uint64_t v236 = swift_slowAlloc();
      uint64_t v461 = v236;
      *(_DWORD *)uint64_t v110 = 136446722;
      uint64_t v111 = sub_1D75BC478();
      OUTLINED_FUNCTION_126(v111, v112, v113, v114, v115, v116, v117, v118, v190, v198, v206, v214, v219, v226, v236, v241, v97, v258, v95,
        v94,
        v280,
        v288,
        v296,
        v304,
        v312,
        v320,
        v328,
        v337,
        v346,
        (uint64_t)v355,
        (uint64_t)v364,
        v370,
        v381,
        v390,
        v399,
        v409,
        v417,
        (uint64_t)v426,
        (uint64_t)logb,
        typea,
        v455,
        v461);
      OUTLINED_FUNCTION_58_0();
      swift_release_n();
      uint64_t v119 = swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2082;
      OUTLINED_FUNCTION_79(v119, v120, v121, v122, v123, v124, v125, v126, v191, v199, v207, v215, v222, v229, v237, v244, v251, v259, v266,
        v273,
        v281,
        v289,
        v297,
        v305,
        v313,
        v321,
        v329,
        v338,
        v347,
        v356,
        (uint64_t)v365,
        v373,
        v382,
        v391,
        v400,
        v410,
        v418,
        (uint64_t)v427,
        (uint64_t)logf,
        typed,
        v456,
        v461,
        v462,
        v463,
        v464);
      uint64_t v127 = sub_1D763B8C8();
      OUTLINED_FUNCTION_126(v127, v128, v129, v130, v131, v132, v133, v134, v192, v200, v208, v216, v223, v230, v238, v245, v252, v260, v267,
        v274,
        v282,
        v290,
        v298,
        v306,
        v314,
        v322,
        v330,
        v339,
        v348,
        v357,
        (uint64_t)v366,
        v374,
        v383,
        v392,
        v401,
        v411,
        v419,
        (uint64_t)v428,
        (uint64_t)logg,
        typee,
        v457,
        v461);
      OUTLINED_FUNCTION_80();
      swift_bridgeObjectRelease();
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      OUTLINED_FUNCTION_141(__dst, (uint64_t (*)(void))sub_1D75933F0);
      *(_WORD *)(v110 + 22) = 2080;
      sub_1D75D20E0((uint64_t)v483, (uint64_t)&v464);
      LOBYTE(v219) = v101;
      sub_1D75D4704(v358, v349, v340, v331, v320, v312, v304, v296, v288, v280, v100, v99);
      uint64_t v135 = sub_1D7660B60();
      sub_1D758DBE8(v135, v136, &v461);
      OUTLINED_FUNCTION_164();
      uint64_t v97 = v248;
      sub_1D7661020();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_1();
      uint64_t v137 = OUTLINED_FUNCTION_81();
      uint64_t v95 = v263;
      uint64_t v94 = v270;
      sub_1D75D49A4(v137);
      _os_log_impl(&dword_1D757C000, v367, BYTE4(v241), "%{public}s: Received event (id=%{public}s from peer: %s", (uint8_t *)v110, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v96 = v255;
      OUTLINED_FUNCTION_1();
    }
    uint64_t v464 = v94;
    uint64_t v465 = v95;
    uint64_t v466 = v96;
    uint64_t v467 = v97;
    uint64_t v468 = v455;
    os_log_t v469 = logb;
    os_log_t v470 = v426;
    uint64_t v471 = v417;
    uint64_t v472 = v409;
    uint64_t v473 = v399;
    uint64_t v474 = v390;
    uint64_t v475 = v381;
    char v476 = BYTE4(v370);
    sub_1D75BFFC8((uint64_t)&v464, v103, v104, v105, v106, v107, v108, v109, v190, v198, v206, v214, v219, v226, v233, v241, v248, v255, v263,
      v270,
      v280,
      v288,
      v296,
      v304,
      v312,
      v320);
    goto LABEL_62;
  }
  if (v52 != 1)
  {
    uint64_t v139 = (uint64_t *)sub_1D75D4A78((uint64_t)v478);
    uint64_t v140 = (uint64_t)(v139 + 1);
    uint64_t v141 = *v139;
    sub_1D75D20E0((uint64_t)v483, (uint64_t)v477);
    uint64_t v142 = sub_1D75D4A78((uint64_t)v477);
    sub_1D75D4A10(v142);
    os_log_type_t v143 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v144 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v143))
    {
      LODWORD(log) = v143;
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      OUTLINED_FUNCTION_170();
      swift_retain();
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      OUTLINED_FUNCTION_170();
      swift_retain();
      uint64_t typef = v141;
      uint64_t v145 = OUTLINED_FUNCTION_11_4();
      uint64_t v420 = swift_slowAlloc();
      uint64_t v461 = v420;
      *(_DWORD *)uint64_t v145 = 136446722;
      uint64_t v146 = sub_1D75BC478();
      OUTLINED_FUNCTION_126(v146, v147, v148, v149, v150, v151, v152, v153, v187, v195, v203, v211, v219, v226, v233, v241, v248, v255, v263,
        v270,
        v277,
        v285,
        v293,
        v301,
        v309,
        v317,
        v325,
        v334,
        v343,
        v352,
        (uint64_t)v361,
        v370,
        v377,
        v386,
        v395,
        v404,
        v420,
        v144,
        (uint64_t)log,
        typef,
        v140,
        v461);
      OUTLINED_FUNCTION_58_0();
      swift_release_n();
      uint64_t v154 = swift_bridgeObjectRelease();
      *(_WORD *)(v145 + 12) = 2082;
      OUTLINED_FUNCTION_79(v154, v155, v156, v157, v158, v159, v160, v161, v193, v201, v209, v217, v224, v231, v239, v246, v253, v261, v268,
        v275,
        v283,
        v291,
        v299,
        v307,
        v315,
        v323,
        v332,
        v341,
        v350,
        v359,
        (uint64_t)v368,
        v375,
        v384,
        v393,
        v402,
        v412,
        v421,
        (uint64_t)v429,
        (uint64_t)logh,
        typeg,
        v458,
        v461,
        v462,
        v463,
        v464);
      uint64_t v162 = sub_1D763B8C8();
      OUTLINED_FUNCTION_126(v162, v163, v164, v165, v166, v167, v168, v169, v194, v202, v210, v218, v225, v232, v240, v247, v254, v262, v269,
        v276,
        v284,
        v292,
        v300,
        v308,
        v316,
        v324,
        v333,
        v342,
        v351,
        v360,
        (uint64_t)v369,
        v376,
        v385,
        v394,
        v403,
        v413,
        v422,
        (uint64_t)v430,
        (uint64_t)logi,
        typeh,
        v459,
        v461);
      OUTLINED_FUNCTION_80();
      swift_bridgeObjectRelease();
      sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      OUTLINED_FUNCTION_141(__dst, (uint64_t (*)(void))sub_1D75933F0);
      *(_WORD *)(v145 + 22) = 2080;
      sub_1D75D20E0((uint64_t)v483, (uint64_t)&v464);
      sub_1D75D4A10(v142);
      uint64_t v170 = sub_1D7660B60();
      uint64_t v464 = sub_1D758DBE8(v170, v171, &v461);
      uint64_t v140 = v460;
      sub_1D7661020();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_1();
      OUTLINED_FUNCTION_29_1();
      _os_log_impl(&dword_1D757C000, v431, logj, "%{public}s: Received response (id=%{public}s from peer: %s", (uint8_t *)v145, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v141 = *(void *)typei;
      OUTLINED_FUNCTION_1();
    }
    uint64_t v172 = (uint64_t *)(v3 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers);
    swift_beginAccess();
    uint64_t v173 = sub_1D75B5308(v141, *v172);
    if (v173)
    {
      uint64_t v174 = (void (*)(uint64_t *))v173;
      swift_beginAccess();
      sub_1D761A374();
      OUTLINED_FUNCTION_93();
      swift_endAccess();
      sub_1D75940A4((uint64_t)v172);
      sub_1D75D2148(v140, (uint64_t)&v464);
      v174(&v464);
      sub_1D75D49A4((uint64_t)v483);
      uint64_t v175 = OUTLINED_FUNCTION_178();
      sub_1D75940A4(v175);
      char v138 = v483;
      goto LABEL_69;
    }
    os_log_type_t v176 = sub_1D7660DB0();
    BOOL v177 = os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v176);
    swift_retain_n();
    if (!v177)
    {
      sub_1D75D49A4((uint64_t)v483);
      OUTLINED_FUNCTION_29_1();
      swift_release_n();
      goto LABEL_70;
    }
    uint64_t v178 = (_DWORD *)swift_slowAlloc();
    uint64_t v464 = OUTLINED_FUNCTION_11_4();
    *uint64_t v178 = 136446210;
    uint64_t v179 = sub_1D75BC478();
    sub_1D758DBE8(v179, v180, &v464);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_222();
    _os_log_impl(v181, v182, v183, v184, v185, v186);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
LABEL_62:
    sub_1D75D49A4((uint64_t)v483);
    char v138 = (unsigned char *)OUTLINED_FUNCTION_81();
LABEL_69:
    sub_1D75D49A4((uint64_t)v138);
    goto LABEL_70;
  }
  uint64_t type = v3;
  unint64_t v53 = (uint64_t *)sub_1D75D4A78((uint64_t)v478);
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v53[2];
  uint64_t v57 = v53[3];
  sub_1D75D20E0((uint64_t)v483, (uint64_t)v477);
  sub_1D75D4A78((uint64_t)v477);
  OUTLINED_FUNCTION_218();
  os_log_type_t v58 = sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  os_log_t loga = (os_log_t)qword_1EBDEBCD0;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v58))
  {
    LODWORD(v386) = v58;
    uint64_t v405 = v56;
    sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    OUTLINED_FUNCTION_28_1();
    swift_retain();
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_28_1();
    swift_retain();
    uint64_t v59 = OUTLINED_FUNCTION_11_4();
    uint64_t v378 = swift_slowAlloc();
    uint64_t v461 = v378;
    *(_DWORD *)uint64_t v59 = 136446722;
    uint64_t v60 = sub_1D75BC478();
    OUTLINED_FUNCTION_126(v60, v61, v62, v63, v64, v65, v66, v67, v187, v195, v203, v211, v219, v226, v233, v241, v248, v255, v263,
      v270,
      v277,
      v285,
      v293,
      v301,
      v309,
      v317,
      v325,
      v334,
      v343,
      v352,
      (uint64_t)v361,
      v370,
      v378,
      v386,
      v57,
      v405,
      v55,
      v54,
      (uint64_t)loga,
      v3,
      v2,
      v461);
    OUTLINED_FUNCTION_58_0();
    swift_release_n();
    uint64_t v68 = swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2082;
    OUTLINED_FUNCTION_79(v68, v69, v70, v71, v72, v73, v74, v75, v188, v196, v204, v212, v220, v227, v234, v242, v249, v256, v264,
      v271,
      v278,
      v286,
      v294,
      v302,
      v310,
      v318,
      v326,
      v335,
      v344,
      v353,
      (uint64_t)v362,
      v371,
      v379,
      v387,
      v396,
      v406,
      v414,
      (uint64_t)v423,
      (uint64_t)logc,
      typeb,
      v453,
      v461,
      v462,
      v463,
      v464);
    uint64_t v76 = sub_1D763B8C8();
    OUTLINED_FUNCTION_126(v76, v77, v78, v79, v80, v81, v82, v83, v189, v197, v205, v213, v221, v228, v235, v243, v250, v257, v265,
      v272,
      v279,
      v287,
      v295,
      v303,
      v311,
      v319,
      v327,
      v336,
      v345,
      v354,
      (uint64_t)v363,
      v372,
      v380,
      v388,
      v397,
      v407,
      v415,
      (uint64_t)v424,
      (uint64_t)logd,
      typec,
      v454,
      v461);
    OUTLINED_FUNCTION_80();
    swift_bridgeObjectRelease();
    sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    OUTLINED_FUNCTION_141(__dst, (uint64_t (*)(void))sub_1D75933F0);
    *(_WORD *)(v59 + 22) = 2080;
    sub_1D75D20E0((uint64_t)v483, (uint64_t)&v464);
    OUTLINED_FUNCTION_218();
    uint64_t v84 = sub_1D7660B60();
    sub_1D758DBE8(v84, v85, &v461);
    OUTLINED_FUNCTION_164();
    uint64_t v57 = v398;
    sub_1D7661020();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29_1();
    uint64_t v86 = OUTLINED_FUNCTION_81();
    uint64_t v55 = v416;
    uint64_t v54 = (uint64_t)v425;
    sub_1D75D49A4(v86);
    _os_log_impl(&dword_1D757C000, loge, v389, "%{public}s: Received request (id=%{public}s from peer: %s", (uint8_t *)v59, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    uint64_t v56 = v408;
    OUTLINED_FUNCTION_1();
  }
  uint64_t v464 = v54;
  uint64_t v465 = v55;
  uint64_t v466 = v56;
  uint64_t v467 = v57;
  uint64_t v87 = swift_allocObject();
  swift_weakInit();
  sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  swift_retain();
  OUTLINED_FUNCTION_98();
  sub_1D75D48CC(v88, v89, v90, v91, v92);
  swift_retain();
  sub_1D75BF658(&v464, type, v87, __dst);
  sub_1D75D49A4((uint64_t)v483);
  swift_release();
  sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  OUTLINED_FUNCTION_28_1();
LABEL_70:
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1D75BF414()
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1D765FC80();
  swift_allocObject();
  sub_1D765FC70();
  uint64_t v1 = (void *)sub_1D765FEB0();
  v9[0] = 0;
  id v2 = objc_msgSend(v0, sel_decryptData_aadData_error_, v1, 0, v9);

  id v3 = v9[0];
  if (v2)
  {
    uint64_t v4 = sub_1D765FED0();
    unint64_t v6 = v5;

    sub_1D75D4A88();
    sub_1D765FC60();
    sub_1D75933F0(v4, v6);
  }
  else
  {
    unint64_t v7 = v3;
    sub_1D765FD60();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1D75BF568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D75D2148(a1, (uint64_t)v8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __src[0] = *(void *)(a3 + 8);
    sub_1D75D2148((uint64_t)v8, (uint64_t)&__src[1]);
    memcpy(__dst, __src, 0x82uLL);
    sub_1D75D4AD4((uint64_t)__dst);
    sub_1D75D20E0((uint64_t)__dst, (uint64_t)&v5);
    sub_1D75D42CC((uint64_t)v8);
    sub_1D75C0C5C();
    swift_release();
    return sub_1D75D42CC((uint64_t)v8);
  }
  return result;
}

__n128 *sub_1D75BF658(uint64_t *a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  swift_retain();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  swift_retain();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  swift_retain();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  swift_retain();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  uint64_t v8 = *(unsigned int *)(a2 + 240);
  unint64_t v9 = v8 | ((unint64_t)*(unsigned __int8 *)(a2 + 244) << 32);
  if ((v8 & 0x8000) != 0)
  {
    swift_retain();
    sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    swift_retain();
    sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    os_log_type_t v14 = sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    Swift::String v15 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v14))
    {
      swift_retain_n();
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v24 = v17;
      *(_DWORD *)id v16 = 136446210;
      uint64_t v18 = sub_1D75BC478();
      uint64_t v28 = sub_1D758DBE8(v18, v19, &v24);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v15, v14, "%{public}s: Host received unexpected request from device", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v17, -1, -1);
      MEMORY[0x1D9474C60](v16, -1, -1);
    }
    swift_release();
    sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
  else
  {
    uint64_t v10 = *a1;
    unint64_t v11 = a1[1];
    uint64_t v13 = a1[2];
    uint64_t v12 = a1[3];
    switch((v11 >> 60) & 3)
    {
      case 1uLL:
        unint64_t v20 = v11 & 0xCFFFFFFFFFFFFFFFLL;
        LOBYTE(v24) = v13;
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75934F4(v10, v20);
        sub_1D75CA120(v10, v20, (char *)&v24, v12, (void *)a2, a3, a4);
        sub_1D75933F0(v10, v20);
        break;
      case 2uLL:
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75D480C((id)v10, v11);
        sub_1D75CB49C(v10, v11 & 0xCFFFFFFFFFFFFFFFLL, a2, a3, a4);
        goto LABEL_11;
      case 3uLL:
        uint64_t v21 = v12 | v13;
        if (v11 != 0x3000000000000000 || v21 | v10)
        {
          BOOL v22 = v11 == 0x3000000000000000 && v10 == 1;
          if (!v22 || v21)
          {
            sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
            swift_retain();
            sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
            swift_retain();
            sub_1D75CAC20(a2, a3, a4);
          }
          else
          {
            sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
            swift_retain();
            sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
            swift_retain();
            sub_1D75C787C(a2, a3, a4);
          }
        }
        else
        {
          sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
          swift_retain();
          sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
          swift_retain();
          sub_1D75CA844(a2, a3, a4);
        }
        break;
      default:
        uint64_t v24 = v10;
        char v25 = v11 & 1;
        uint64_t v26 = v13;
        uint64_t v27 = v12;
        LOWORD(v28) = v9 & 0x101;
        BYTE2(v28) = BYTE2(v9);
        BYTE3(v28) = BYTE3(v9);
        BYTE4(v28) = BYTE4(v9);
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
        swift_retain();
        sub_1D75D480C((id)v10, v11);
        sub_1D75C6CDC((uint64_t)&v24, (unsigned __int8 *)&v28, a2, a3, a4);
LABEL_11:
        sub_1D75D1FE8((void *)v10, v11);
        break;
    }
  }
  swift_release();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  swift_release();
  return sub_1D75D48CC(a4, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
}

void sub_1D75BFFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v26 = *(void *)a1;
  uint64_t v27 = *(void *)(a1 + 8);
  unint64_t v29 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v31 = *(void *)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 40);
  uint64_t v33 = *(void *)(a1 + 48);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v34 = *(void *)(a1 + 64);
  unint64_t v35 = *(void *)(a1 + 72);
  uint64_t v36 = *(void *)(a1 + 80);
  unint64_t v37 = *(void *)(a1 + 88);
  char v38 = *(unsigned char *)(a1 + 96);
  switch(v35 >> 62)
  {
    case 1uLL:
      uint64_t v70 = *(void *)(a1 + 56);
      uint64_t v73 = *(void *)(a1 + 48);
      id v44 = (id)v26;
      sub_1D75C620C((void *)v26);
      uint64_t v39 = (void *)OUTLINED_FUNCTION_115();
      unint64_t v41 = v29;
      uint64_t v42 = v28;
      goto LABEL_4;
    case 2uLL:
      unint64_t v75 = *(void *)a1;
      uint64_t v76 = v27;
      unint64_t v77 = v29;
      uint64_t v78 = v28;
      uint64_t v79 = v31;
      uint64_t v80 = v30;
      uint64_t v81 = v33;
      uint64_t v82 = v32;
      uint64_t v83 = v34;
      char v84 = v35 & 1;
      uint64_t v85 = v36;
      unint64_t v86 = v37;
      char v87 = v38;
      unint64_t v71 = v29;
      uint64_t v48 = v32;
      uint64_t v74 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D75AC3B4(v36, v37);
      sub_1D75C66F4((uint64_t)&v75);
      uint64_t v39 = (void *)OUTLINED_FUNCTION_115();
      uint64_t v42 = v28;
      unint64_t v41 = v71;
      uint64_t v45 = v30;
      uint64_t v46 = v74;
      uint64_t v47 = v48;
      goto LABEL_6;
    case 3uLL:
      if (*(unsigned char *)(a1 + 96)
        || v35 != 0xC000000000000000
        || v27 | v26 | v29 | v28 | v31 | v30 | v33 | v32 | v34 | v36 | v37)
      {
        unint64_t v52 = v29 | v27 | v28 | v31 | v30 | v33 | v32 | v34 | v36 | v37;
        if (*(unsigned char *)(a1 + 96) || (v35 == 0xC000000000000000 ? (BOOL v53 = v26 == 1) : (BOOL v53 = 0), !v53 || v52))
        {
          if (*(unsigned char *)(a1 + 96) || (v35 == 0xC000000000000000 ? (BOOL v62 = v26 == 2) : (BOOL v62 = 0), !v62 || v52))
          {
            if (*(unsigned char *)(a1 + 96) || (v35 == 0xC000000000000000 ? (BOOL v63 = v26 == 3) : (BOOL v63 = 0), !v63 || v52))
            {
              OUTLINED_FUNCTION_45_2();
              sub_1D75CF97C();
            }
            else
            {
              OUTLINED_FUNCTION_45_2();
              sub_1D75C642C();
            }
          }
          else
          {
LABEL_7:
            OUTLINED_FUNCTION_45_2();
          }
        }
        else
        {
          OUTLINED_FUNCTION_45_2();
          sub_1D75C76F0(v54, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
            a20,
            a21,
            a22,
            a23,
            a24,
            a25,
            a26);
        }
      }
      else
      {
        sub_1D75B0D60();
        BOOL v49 = (void *)OUTLINED_FUNCTION_3_0();
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_201();
        sub_1D75C620C(v49);
        OUTLINED_FUNCTION_45_2();
      }
      return;
    default:
      LOWORD(v75) = v26 & 0xFF01;
      uint64_t v76 = v27;
      unint64_t v77 = v29;
      uint64_t v78 = v28;
      uint64_t v79 = v31;
      uint64_t v80 = v30;
      uint64_t v70 = v32;
      uint64_t v72 = v34;
      uint64_t v73 = v33;
      sub_1D75934F4(v27, v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D75CC220((unsigned __int8 *)&v75);
      uint64_t v68 = v36;
      unint64_t v69 = v37;
      uint64_t v66 = v72;
      unint64_t v67 = v35;
      uint64_t v39 = (void *)v26;
      uint64_t v40 = v27;
      unint64_t v41 = v29;
      uint64_t v42 = v28;
      uint64_t v43 = v31;
LABEL_4:
      uint64_t v45 = v30;
      uint64_t v46 = v73;
      uint64_t v47 = v70;
LABEL_6:
      sub_1D75D3F24(v39, v40, v41, v42, v43, v45, v46, v47, v66, v67, v68, v69);
      goto LABEL_7;
  }
}

void sub_1D75C030C()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_67();
  uint64_t v3 = v2;
  *(void *)&long long v52 = 0;
  *((void *)&v52 + 1) = 0xE000000000000000;
  sub_1D7660BC0();
  *(void *)&long long v61 = v0;
  sub_1D7661200();
  OUTLINED_FUNCTION_197();
  uint64_t v4 = sub_1D75CFEF4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v5 = *((void *)v4 + 3);
  if (*((void *)v4 + 2) >= v5 >> 1) {
    uint64_t v4 = OUTLINED_FUNCTION_10_4(v5);
  }
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_53_0(4023401);
  unint64_t v6 = v0 + 24;
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  __swift_project_boxed_opaque_existential_0Tm(v0 + 24, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_89();
  if (v10) {
    uint64_t v4 = OUTLINED_FUNCTION_10_4(v9);
  }
  OUTLINED_FUNCTION_65();
  *(void *)&long long v61 = 0x726F70736E617274;
  *((void *)&v61 + 1) = 0xEA00000000003D74;
  sub_1D758B1EC((uint64_t)(v0 + 24), (uint64_t)&v52);
  __swift_project_boxed_opaque_existential_0Tm(&v52, *((uint64_t *)&v53 + 1));
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v52);
  sub_1D76617F0();
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_89();
  if (v10) {
    uint64_t v4 = OUTLINED_FUNCTION_10_4(v11);
  }
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_91();
  if (v12 < 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_95();
    if ((&v61 & 1) == 0)
    {
      uint64_t v51 = v0 + 24;
      uint64_t v13 = sub_1D765FFD0();
      OUTLINED_FUNCTION_1_1();
      uint64_t v15 = v14;
      MEMORY[0x1F4188790](v16);
      OUTLINED_FUNCTION_25();
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC0B0);
      BOOL v50 = v46;
      uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
      MEMORY[0x1F4188790](v17 - 8);
      unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
      OUTLINED_FUNCTION_4_3();
      unint64_t v20 = (void *)v0[15];
      if (v20)
      {
        uint64_t v48 = v15;
        BOOL v49 = v46;
        id v21 = objc_msgSend(v20, sel_identifier);
        if (MEMORY[0x1F4188790](v21))
        {
          sub_1D765FFC0();

          uint64_t v22 = 0;
        }
        else
        {
          uint64_t v22 = 1;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v46 - v19, v22, 1, v13);
        sub_1D75D0078((uint64_t)v46 - v19, (uint64_t)v46 - v19);
        uint64_t v1 = v0;
        if (__swift_getEnumTagSinglePayload((uint64_t)v46 - v19, 1, v13) != 1)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v8, (char *)v46 - v19, v13);
          OUTLINED_FUNCTION_53_0(0x797469746E656469);
          sub_1D75D50C4((uint64_t)&qword_1EBDEC0A8);
          sub_1D7661500();
          uint64_t v32 = v31;
          sub_1D7660BC0();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_182();
          OUTLINED_FUNCTION_197();
          unint64_t v34 = *((void *)v4 + 2);
          unint64_t v33 = *((void *)v4 + 3);
          if (v34 >= v33 >> 1) {
            uint64_t v4 = OUTLINED_FUNCTION_10_4(v33);
          }
          *((void *)v4 + 2) = v34 + 1;
          unint64_t v35 = &v4[16 * v34];
          *((void *)v35 + 4) = v32;
          *((void *)v35 + 5) = v46;
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v8, v13);
          goto LABEL_24;
        }
      }
      else
      {
        __swift_storeEnumTagSinglePayload((uint64_t)v46 - v19, 1, 1, v13);
      }
      sub_1D75D505C((uint64_t)v46 - v19, &qword_1EBDEC0B0);
LABEL_24:
      unint64_t v6 = v51;
      goto LABEL_25;
    }
  }
  sub_1D75BBEF4((uint64_t)&v52);
  uint64_t v23 = *((void *)&v53 + 1);
  if (*((void *)&v53 + 1))
  {
    uint64_t v51 = v6;
    BOOL v50 = v1;
    v46[1] = v3;
    uint64_t v25 = v56;
    uint64_t v24 = v57;
    BOOL v49 = (void *)v55;
    long long v26 = v52;
    uint64_t v27 = v53;
    uint64_t v48 = v54;
    long long v47 = v58;
    uint64_t v28 = v59;
    unint64_t v29 = v60;
    swift_bridgeObjectRetain();
    sub_1D759423C(v26, *((uint64_t *)&v26 + 1), v27, v23, v48, (uint64_t)v49, v25, v24, v47, *((uint64_t *)&v47 + 1), v28, v29);
    OUTLINED_FUNCTION_53_0(0x3D44494455);
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_89();
    if (v10) {
      uint64_t v4 = OUTLINED_FUNCTION_10_4(v30);
    }
    unint64_t v6 = v51;
    OUTLINED_FUNCTION_65();
    uint64_t v1 = v50;
  }
LABEL_25:
  uint64_t v36 = v1[27];
  uint64_t v37 = v1[28];
  __swift_project_boxed_opaque_existential_0Tm(v6, v36);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v37 + 64))(&v61, v36, v37);
  if (*((void *)&v62 + 1))
  {
    sub_1D758AB78(&v61, (uint64_t)&v52);
    *(void *)&long long v61 = 0x746E696F70646E65;
    *((void *)&v61 + 1) = 0xE90000000000003DLL;
    uint64_t v38 = *((void *)&v53 + 1);
    uint64_t v39 = v54;
    __swift_project_boxed_opaque_existential_0Tm(&v52, *((uint64_t *)&v53 + 1));
    (*(void (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_89();
    if (v10) {
      uint64_t v4 = OUTLINED_FUNCTION_10_4(v40);
    }
    OUTLINED_FUNCTION_65();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v52);
  }
  else
  {
    sub_1D75D505C((uint64_t)&v61, &qword_1EBDEC180);
  }
  uint64_t v65 = 0x3D6574617473;
  unint64_t v66 = 0xE600000000000000;
  sub_1D7591448((uint64_t)&v52);
  long long v61 = v52;
  long long v62 = v53;
  uint64_t v63 = v54;
  char v64 = v55;
  sub_1D7660B60();
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  uint64_t v41 = v65;
  unint64_t v42 = v66;
  unint64_t v44 = *((void *)v4 + 2);
  unint64_t v43 = *((void *)v4 + 3);
  if (v44 >= v43 >> 1) {
    uint64_t v4 = OUTLINED_FUNCTION_10_4(v43);
  }
  *((void *)v4 + 2) = v44 + 1;
  uint64_t v45 = &v4[16 * v44];
  *((void *)v45 + 4) = v41;
  *((void *)v45 + 5) = v42;
  *(void *)&long long v52 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC190);
  sub_1D75D4584((uint64_t)&qword_1EBDEC198);
  sub_1D7660A90();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53_0(60);
  sub_1D76617F0();
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  sub_1D7660BC0();
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  sub_1D7660BC0();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D75C0B34()
{
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber);
  if (result == -1) {
    __break(1u);
  }
  else {
    *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber) = result + 1;
  }
  return result;
}

void *sub_1D75C0B54(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = sub_1D75C0B34();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  OUTLINED_FUNCTION_5();
  swift_retain();
  sub_1D75B6F64((uint64_t)sub_1D75A74CC, v10, v9);
  swift_endAccess();
  v17[0] = v5;
  v17[1] = v6;
  v17[2] = v7;
  void v17[3] = v8;
  sub_1D75D50B0((uint64_t)v17);
  sub_1D75D20E0((uint64_t)v17, (uint64_t)&v16);
  unint64_t v11 = (void *)OUTLINED_FUNCTION_226();
  sub_1D75D480C(v11, v12);
  sub_1D75C0C5C();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_226();
  return sub_1D75D1FE8(v13, v14);
}

void sub_1D75C0C5C()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_1D75D20E0(v6, (uint64_t)v102);
  sub_1D75D20E0(v7, (uint64_t)v105);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
  if (!v8)
  {
    sub_1D75D20E0((uint64_t)v102, (uint64_t)v103);
    int v10 = sub_1D75D4998((uint64_t)v103);
    if (v10)
    {
      if (v10 == 1)
      {
        uint64_t v11 = sub_1D75D4A78((uint64_t)v103);
        uint64_t v12 = (*(void *)(v11 + 8) >> 60) & 3;
        if (v12)
        {
          if (v12 != 3 || *(_OWORD *)(v11 + 16) != 0 || (OUTLINED_FUNCTION_180(), !v34))
          {
LABEL_47:
            *(void *)&__dst[24] = MEMORY[0x1E4FBB1A0];
            *(void *)__dst = 0xD000000000000050;
            *(void *)&__dst[8] = 0x80000001D7674460;
            __dst[32] = 1;
            sub_1D7592D84();
            uint64_t v79 = (void *)OUTLINED_FUNCTION_3_0();
            uint64_t v81 = v80;
            __src[0] = 1;
            ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
            OUTLINED_FUNCTION_195();
            sub_1D7592DD0((uint64_t)__dst);
            *(unsigned char *)uint64_t v81 = 1;
            *(void *)(v81 + 8) = __dst;
            *(void *)(v81 + 16) = v5;
            *(_OWORD *)(v81 + 24) = 0u;
            *(_OWORD *)(v81 + 40) = 0u;
            *(void *)(v81 + 56) = 0;
            swift_willThrow();
            sub_1D759250C(v79);

            goto LABEL_46;
          }
        }
      }
      else
      {
        uint64_t v37 = (const void *)sub_1D75D4A78((uint64_t)v103);
        memcpy(__dst, v37, 0x82uLL);
        if (sub_1D75D409C((uint64_t)&__dst[8]) > 7) {
          goto LABEL_47;
        }
        OUTLINED_FUNCTION_183();
        if (v34) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      uint64_t v13 = sub_1D75D4A78((uint64_t)v103);
      unint64_t v14 = *(void *)(v13 + 72);
      if (v14 >> 62 == 3)
      {
        int v15 = *(unsigned __int8 *)(v13 + 96);
        uint64_t v17 = *(void *)(v13 + 80);
        uint64_t v16 = *(void *)(v13 + 88);
        uint64_t v19 = *(void *)(v13 + 56);
        uint64_t v18 = *(void *)(v13 + 64);
        uint64_t v21 = *(void *)(v13 + 40);
        uint64_t v20 = *(void *)(v13 + 48);
        uint64_t v23 = *(void *)(v13 + 24);
        uint64_t v22 = *(void *)(v13 + 32);
        uint64_t v24 = *(void *)v13;
        uint64_t v27 = v13 + 8;
        uint64_t v25 = *(void *)(v13 + 8);
        uint64_t v26 = *(void *)(v27 + 8);
        if (v15) {
          goto LABEL_14;
        }
        if (v14 != 0xC000000000000000) {
          goto LABEL_14;
        }
        v28.i64[0] = v20;
        v28.i64[1] = v21;
        v29.i64[0] = v16;
        v29.i64[1] = v17;
        v30.i64[0] = v22;
        v30.i64[1] = v23;
        v31.i64[0] = v18;
        v31.i64[1] = v19;
        int8x16_t v32 = vorrq_s8(vorrq_s8(v29, v28), vorrq_s8(v31, v30));
        if (v24 | *(void *)&vorr_s8(*(int8x8_t *)v32.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL)) | v25 | v26)
        {
LABEL_14:
          uint64_t v33 = v17 | v16 | v18 | v19 | v20 | v21 | v22 | v23 | v26 | v25;
          if (v15 || ((OUTLINED_FUNCTION_172(), v34) ? (BOOL v34 = v24 == 1) : (BOOL v34 = 0), !v34 || v33))
          {
            if (v15 || ((OUTLINED_FUNCTION_172(), v34) ? (BOOL v35 = v24 == 2) : (BOOL v35 = 0), !v35 || v33))
            {
              if (v15) {
                goto LABEL_47;
              }
              BOOL v36 = v14 == 0xC000000000000000 && v24 == 3;
              if (!v36 || v33) {
                goto LABEL_47;
              }
            }
          }
        }
      }
    }
    sub_1D75D20E0((uint64_t)v105, (uint64_t)__dst);
    sub_1D75D4FA4((uint64_t)__dst);
    sub_1D75D49A4((uint64_t)v102);
    goto LABEL_39;
  }
  id v9 = v8;
  sub_1D75C1380((uint64_t)v102, (uint64_t *)__src);

  *(_OWORD *)__dst = *(_OWORD *)__src;
  sub_1D75D5000((uint64_t)__dst);
LABEL_39:
  sub_1D75D4920((uint64_t)__dst, (uint64_t)v104);
  if (v3) {
    uint64_t v5 = sub_1D75C0B34();
  }
  OUTLINED_FUNCTION_140();
  __dst[0] = (v38 & 0x8000) == 0;
  *(void *)&__dst[8] = v5;
  sub_1D75D4920((uint64_t)v104, (uint64_t)&__dst[16]);
  sub_1D75D4FB8((uint64_t)v104);
  os_log_type_t v39 = sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  os_log_t log = (os_log_t)qword_1EBDEBCD0;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v39))
  {
    sub_1D75D49A4((uint64_t)v102);
    HIDWORD(v86) = v39;
    sub_1D75D4FB8((uint64_t)v104);
    uint64_t v40 = swift_retain();
    OUTLINED_FUNCTION_166(v40, v41, v42, v43, v44, v45, v46, v47, v82, v86, (uint64_t)log, v96, *(uint64_t *)__src, *(uint64_t *)&__src[8], *(uint64_t *)&__src[16], *(uint64_t *)&__src[24], *(uint64_t *)&__src[32], *(uint64_t *)&__src[40], *(uint64_t *)&__src[48],
      *(uint64_t *)&__src[56],
      *(uint64_t *)&__src[64],
      *(uint64_t *)&__src[72],
      *(uint64_t *)&__src[80],
      *(uint64_t *)&__src[88],
      *(uint64_t *)&__src[96],
      *(uint64_t *)&__src[104],
      *(uint64_t *)&__src[112],
      *(uint64_t *)&__src[120],
      *(uint64_t *)&__src[128],
      *(uint64_t *)&__src[136],
      *(uint64_t *)&__src[144],
      v98,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      *(uint64_t *)&__dst[136],
      *(uint64_t *)&__dst[144],
      v100,
      v101,
      v102[0]);
    sub_1D75D4FB8((uint64_t)v104);
    swift_retain();
    uint64_t v48 = OUTLINED_FUNCTION_11_4();
    uint64_t v96 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136446722;
    uint64_t v49 = sub_1D75BC478();
    sub_1D758DBE8(v49, v50, &v96);
    OUTLINED_FUNCTION_103();
    sub_1D7661020();
    OUTLINED_FUNCTION_36_1();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2082;
    memcpy(__src, __dst, 0x92uLL);
    uint64_t v51 = sub_1D763B8C8();
    *(void *)__src = sub_1D758DBE8(v51, v52, &v96);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    sub_1D75D4FB8((uint64_t)v104);
    sub_1D75D4FB8((uint64_t)v104);
    *(_WORD *)(v48 + 22) = 2080;
    uint64_t v53 = sub_1D75D20E0((uint64_t)v102, (uint64_t)__src);
    OUTLINED_FUNCTION_166(v53, v54, v55, v56, v57, v58, v59, v60, v83, v87, (uint64_t)loga, v96, *(uint64_t *)__src, *(uint64_t *)&__src[8], *(uint64_t *)&__src[16], *(uint64_t *)&__src[24], *(uint64_t *)&__src[32], *(uint64_t *)&__src[40], *(uint64_t *)&__src[48],
      *(uint64_t *)&__src[56],
      *(uint64_t *)&__src[64],
      *(uint64_t *)&__src[72],
      *(uint64_t *)&__src[80],
      *(uint64_t *)&__src[88],
      *(uint64_t *)&__src[96],
      *(uint64_t *)&__src[104],
      *(uint64_t *)&__src[112],
      *(uint64_t *)&__src[120],
      *(uint64_t *)&__src[128],
      *(uint64_t *)&__src[136],
      *(uint64_t *)&__src[144],
      v98,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      *(uint64_t *)&__dst[136],
      *(uint64_t *)&__dst[144],
      v100,
      v101,
      v102[0]);
    uint64_t v61 = sub_1D7660B60();
    sub_1D758DBE8(v61, v62, &v96);
    OUTLINED_FUNCTION_103();
    sub_1D7661020();
    uint64_t v63 = swift_bridgeObjectRelease();
    uint64_t v71 = OUTLINED_FUNCTION_165(v63, v64, v65, v66, v67, v68, v69, v70, v84, v88, (uint64_t)logb, v96, *(uint64_t *)__src, *(uint64_t *)&__src[8], *(uint64_t *)&__src[16], *(uint64_t *)&__src[24], *(uint64_t *)&__src[32], *(uint64_t *)&__src[40], *(uint64_t *)&__src[48],
            *(uint64_t *)&__src[56],
            *(uint64_t *)&__src[64],
            *(uint64_t *)&__src[72],
            *(uint64_t *)&__src[80],
            *(uint64_t *)&__src[88],
            *(uint64_t *)&__src[96],
            *(uint64_t *)&__src[104],
            *(uint64_t *)&__src[112],
            *(uint64_t *)&__src[120],
            *(uint64_t *)&__src[128],
            *(uint64_t *)&__src[136],
            *(uint64_t *)&__src[144],
            v98,
            *(uint64_t *)__dst,
            *(uint64_t *)&__dst[8],
            *(uint64_t *)&__dst[16],
            *(uint64_t *)&__dst[24],
            *(uint64_t *)&__dst[32],
            *(uint64_t *)&__dst[40],
            *(uint64_t *)&__dst[48],
            *(uint64_t *)&__dst[56],
            *(uint64_t *)&__dst[64],
            *(uint64_t *)&__dst[72],
            *(uint64_t *)&__dst[80],
            *(uint64_t *)&__dst[88],
            *(uint64_t *)&__dst[96],
            *(uint64_t *)&__dst[104],
            *(uint64_t *)&__dst[112],
            *(uint64_t *)&__dst[120],
            *(uint64_t *)&__dst[128],
            *(uint64_t *)&__dst[136],
            *(uint64_t *)&__dst[144],
            v100,
            v101,
            v102[0]);
    OUTLINED_FUNCTION_165(v71, v72, v73, v74, v75, v76, v77, v78, v85, v89, (uint64_t)logc, v96, *(uint64_t *)__src, *(uint64_t *)&__src[8], *(uint64_t *)&__src[16], *(uint64_t *)&__src[24], *(uint64_t *)&__src[32], *(uint64_t *)&__src[40], *(uint64_t *)&__src[48],
      *(uint64_t *)&__src[56],
      *(uint64_t *)&__src[64],
      *(uint64_t *)&__src[72],
      *(uint64_t *)&__src[80],
      *(uint64_t *)&__src[88],
      *(uint64_t *)&__src[96],
      *(uint64_t *)&__src[104],
      *(uint64_t *)&__src[112],
      *(uint64_t *)&__src[120],
      *(uint64_t *)&__src[128],
      *(uint64_t *)&__src[136],
      *(uint64_t *)&__src[144],
      v98,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      *(uint64_t *)&__dst[136],
      *(uint64_t *)&__dst[144],
      v100,
      v101,
      v102[0]);
    _os_log_impl(&dword_1D757C000, logd, type, "%{public}s: Sending message (id=%{public}s) to peer: %s", (uint8_t *)v48, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  memcpy(__src, __dst, 0x92uLL);
  sub_1D75C14F4(__src);
  sub_1D75D4FB8((uint64_t)v104);
  sub_1D75D4FB8((uint64_t)v104);
LABEL_46:
  OUTLINED_FUNCTION_84();
}

void sub_1D75C1380(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  sub_1D75D20E0(a1, (uint64_t)v17);
  sub_1D765FCB0();
  swift_allocObject();
  sub_1D765FCA0();
  sub_1D75D5010();
  uint64_t v5 = sub_1D765FC90();
  if (v3) {
    goto LABEL_2;
  }
  uint64_t v7 = v5;
  unint64_t v8 = v6;
  id v9 = (void *)sub_1D765FEB0();
  id v16 = 0;
  id v10 = objc_msgSend(v2, sel_encryptData_aadData_error_, v9, 0, &v16);

  id v11 = v16;
  if (!v10)
  {
    int v15 = v11;
    sub_1D765FD60();

    swift_willThrow();
    sub_1D75933F0(v7, v8);
LABEL_2:
    swift_release();
    return;
  }
  uint64_t v12 = sub_1D765FED0();
  uint64_t v14 = v13;
  sub_1D75933F0(v7, v8);
  swift_release();

  *a2 = v12;
  a2[1] = v14;
}

uint64_t sub_1D75C14F4(void *__src)
{
  memcpy(__dst, __src, 0x92uLL);
  uint64_t v3 = v1[27];
  uint64_t v4 = v1[28];
  __swift_project_boxed_opaque_existential_0Tm(v1 + 24, v3);
  memcpy(v9, __src, 0x92uLL);
  uint64_t v5 = v1[29];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  memcpy((void *)(v6 + 24), __src, 0x92uLL);
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v4 + 40);
  swift_retain();
  sub_1D75D48CC(__dst, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  v7(v9, v5, sub_1D75D45C8, v6, v3, v4);
  return swift_release();
}

void sub_1D75C1648(void *a1, uint64_t a2, __n128 *a3)
{
  if (a1)
  {
    id v5 = a1;
    os_log_type_t v6 = sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v6))
    {
      swift_retain();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      id v8 = a1;
      swift_retain();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      id v9 = a1;
      uint64_t v10 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v33[0] = v31;
      *(_DWORD *)uint64_t v10 = 136446722;
      uint64_t v11 = sub_1D75BC478();
      *(void *)&__dst[0] = sub_1D758DBE8(v11, v12, v33);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      memcpy(__dst, a3, 0x92uLL);
      uint64_t v13 = sub_1D763B8C8();
      *(void *)&__dst[0] = sub_1D758DBE8(v13, v14, v33);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      *(_WORD *)(v10 + 22) = 2082;
      *(void *)&__dst[0] = a1;
      id v15 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      uint64_t v16 = sub_1D7660B60();
      *(void *)&__dst[0] = sub_1D758DBE8(v16, v17, v33);
      sub_1D7661020();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D757C000, v7, v6, "%{public}s: Failed to send message (id=%{public}s) to peer. Error: %{public}s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v31, -1, -1);
      MEMORY[0x1D9474C60](v10, -1, -1);
    }
    memset(__dst, 0, 32);
    LOBYTE(__dst[2]) = 2;
    sub_1D7592D84();
    uint64_t v18 = (void *)swift_allocError();
    uint64_t v20 = v19;
    LOBYTE(v33[0]) = 0;
    id v21 = a1;
    Swift::String v22 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v33);
    sub_1D7592DD0((uint64_t)__dst);
    *(unsigned char *)uint64_t v20 = 0;
    *(Swift::String *)(v20 + 8) = v22;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 40) = 0u;
    *(void *)(v20 + 56) = a1;
    sub_1D759250C(v18);
  }
  else
  {
    os_log_type_t v23 = sub_1D7660DA0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v23))
    {
      swift_retain();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      swift_retain();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v33[0] = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v27 = sub_1D75BC478();
      *(void *)&__dst[0] = sub_1D758DBE8(v27, v28, v33);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      memcpy(__dst, a3, 0x92uLL);
      uint64_t v29 = sub_1D763B8C8();
      *(void *)&__dst[0] = sub_1D758DBE8(v29, v30, v33);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
      _os_log_impl(&dword_1D757C000, v24, v23, "%{public}s: Successfully sent message (id=%{public}s) to peer", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v26, -1, -1);
      MEMORY[0x1D9474C60](v25, -1, -1);
    }
  }
}

#error "1D75C1EB8: call analysis failed (funcsize=123)"

void sub_1D75C1EE8(void *a1, void (*a2)(void **, double), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3[29];
  OS_dispatch_queue.assertOnQueueHierarchy()();
  OUTLINED_FUNCTION_91();
  if ((v9 & 0x8000) == 0)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_95();
    if (v8) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_102();
    OUTLINED_FUNCTION_48_0();
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_5:
  sub_1D7591448((uint64_t)&v43);
  if (v48 != 4 || v43 != (void *)5 || (v45 | v44 | v46 | v47) != 0)
  {
    sub_1D758D424((uint64_t)v43, v44, v45, v46, v47, v48, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    uint64_t v46 = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_50_0();
    uint64_t v43 = (void *)v12;
    uint64_t v44 = v13;
    LOBYTE(v47) = 1;
    sub_1D7592D84();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_131();
    LOBYTE(v42) = (_BYTE)a1;
    ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v42);
    OUTLINED_FUNCTION_138();
    sub_1D7592DD0((uint64_t)&v43);
    double v14 = OUTLINED_FUNCTION_47_1();
    uint64_t v43 = v4;
    uint64_t v44 = 0;
    LOBYTE(v45) = 0;
    a2(&v43, v14);

    return;
  }
  OUTLINED_FUNCTION_4_3();
  id v15 = (void (*)(void (*)(void, double), uint64_t))v4[68];
  if (!v15)
  {
    LOBYTE(v42) = 1;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t v35 = OUTLINED_FUNCTION_186();
    uint64_t v36 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_68((unsigned __int8 *)&v42, (uint64_t)a2, a3, a1, v37, v38, v39, v40, v34, v35, v36);
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  if (a1 && a1[2])
  {
    swift_retain();
    os_log_type_t v16 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v16))
    {
      swift_retain_n();
      os_log_t log = v17;
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_14_0();
      uint64_t v42 = OUTLINED_FUNCTION_11_4();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v19 = sub_1D75BC478();
      sub_1D758DBE8(v19, v20, &v42);
      OUTLINED_FUNCTION_220();
      sub_1D7661020();
      OUTLINED_FUNCTION_177();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, log, v16, "%{public}s: Not using out-of-band PairSetup handler to complete pairing as non-standard pairing options were provided by client", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    LOBYTE(v42) = 1;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v22 = OUTLINED_FUNCTION_190();
    uint64_t v23 = OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_68((unsigned __int8 *)&v42, (uint64_t)a2, a3, a1, v24, v25, v26, v27, v21, v22, v23);
    sub_1D75940A4((uint64_t)v15);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_retain();
  os_log_type_t v28 = sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1EBDEBCD0;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v28))
  {
    swift_retain_n();
    unint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_14_0();
    uint64_t v42 = OUTLINED_FUNCTION_11_4();
    *(_DWORD *)unint64_t v30 = 136446210;
    uint64_t v31 = sub_1D75BC478();
    sub_1D758DBE8(v31, v32, &v42);
    OUTLINED_FUNCTION_220();
    sub_1D7661020();
    OUTLINED_FUNCTION_177();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v29, v28, "%{public}s: Using configured out-of-band PairSetup handler to complete pairing", v30, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  v15((void (*)(void, double))a2, a3);
  uint64_t v33 = OUTLINED_FUNCTION_147();
  sub_1D75940A4(v33);
}

void sub_1D75C23F8(uint64_t a1)
{
  uint64_t v2 = v1;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  if ((*(_DWORD *)(v1 + 240) & 0x8000) == 0)
  {
    char v4 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_102();
    sub_1D7661260();
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_5:
  sub_1D7591448((uint64_t)&v12);
  if (v17 == 1)
  {
    sub_1D758D424(v12, v13, v14, v15, v16, v17, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    id v5 = *(void **)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = (void *)sub_1D7660AE0();
      objc_msgSend(v6, sel_tryPIN_, v7);

      return;
    }
  }
  else
  {
    sub_1D758D424(v12, v13, v14, v15, v16, v17, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  }
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  OUTLINED_FUNCTION_50_0();
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  LOBYTE(v16) = 1;
  sub_1D7592D84();
  OUTLINED_FUNCTION_3_0();
  uint64_t v11 = v10;
  char v18 = 3;
  ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v18);
  OUTLINED_FUNCTION_93();
  sub_1D7592DD0((uint64_t)&v12);
  *(unsigned char *)uint64_t v11 = 3;
  *(void *)(v11 + 8) = &v12;
  *(void *)(v11 + 16) = a1;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(void *)(v11 + 56) = 0;
  swift_willThrow();
}

void sub_1D75C2654()
{
  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_91();
  if ((v3 & 0x8000) == 0)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_95();
    if (v1) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_102();
    OUTLINED_FUNCTION_214();
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_5:
  sub_1D7591448((uint64_t)&v23);
  long long v10 = v23;
  uint64_t v12 = v24;
  uint64_t v11 = v25;
  uint64_t v13 = v26;
  if (v27 == 1)
  {
LABEL_9:
    OUTLINED_FUNCTION_112(v4, v5, v6, v7, v8, v9, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
LABEL_12:
    sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_96())
    {
      swift_retain_n();
      uint64_t v15 = (_DWORD *)OUTLINED_FUNCTION_14_0();
      *(void *)&long long v23 = OUTLINED_FUNCTION_11_4();
      *uint64_t v15 = 136446210;
      uint64_t v16 = sub_1D75BC478();
      sub_1D758DBE8(v16, v17, (uint64_t *)&v23);
      OUTLINED_FUNCTION_103();
      sub_1D7661020();
      OUTLINED_FUNCTION_177();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_173(&dword_1D757C000, v18, v19, "%{public}s: Sending PairSetup cancel request to peer");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    long long v23 = xmmword_1D7665600;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v20 = OUTLINED_FUNCTION_55();
    swift_weakInit();
    uint64_t v21 = (void *)OUTLINED_FUNCTION_192();
    v21[2] = v20;
    v21[3] = v2;
    void v21[4] = v0;
    swift_retain();
    swift_retain();
    sub_1D75C0B54((uint64_t *)&v23, (uint64_t)sub_1D75D1FCC, (uint64_t)v21);
    swift_release();
    swift_release();
  }
  else
  {
    if (!v27)
    {
      OUTLINED_FUNCTION_199();
      switch((char)v10)
      {
        case 1:
          uint64_t v4 = OUTLINED_FUNCTION_17_1();
          goto LABEL_9;
        default:
          char v14 = sub_1D7661560();
          swift_bridgeObjectRelease();
          sub_1D758D424(v10, *((uint64_t *)&v10 + 1), v12, v11, v13, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          if (v14) {
            goto LABEL_12;
          }
          goto LABEL_17;
      }
    }
    OUTLINED_FUNCTION_112(v4, v5, v6, v7, v8, v9, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
LABEL_17:
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    sub_1D7661690();
    sub_1D75B0D60();
    uint64_t v22 = (void *)OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_0();
    sub_1D76616A0();
    v2(v22);
  }
}

void sub_1D75C2AB8(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  sub_1D75D2148(a1, (uint64_t)v101);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    sub_1D75D2148((uint64_t)v101, (uint64_t)v100);
    int v8 = sub_1D75D409C((uint64_t)v100);
    uint64_t v9 = &unk_1EBDEB000;
    long long v10 = &unk_1EBDEB000;
    uint64_t v85 = a4;
    uint64_t v86 = a3;
    if (v8 != 7)
    {
      if (v8 == 4)
      {
        uint64_t v11 = (void *)nullsub_1(v100);
        LODWORD(v12) = *(unsigned __int8 *)v11;
        uint64_t v13 = v11[2];
        uint64_t v77 = v11[1];
        uint64_t v15 = v11[3];
        uint64_t v14 = v11[4];
        uint64_t v83 = v11[5];
        uint64_t v84 = v14;
        uint64_t v16 = v11[6];
        uint64_t v81 = v11[7];
        uint64_t v82 = v16;
        sub_1D75D2148((uint64_t)v101, (uint64_t)&v95);
        unint64_t v17 = (void *)nullsub_1(&v95);
        uint64_t v18 = v17[4];
        uint64_t v20 = v17[6];
        uint64_t v19 = (void *)v17[7];
        uint64_t v76 = v17[2];
        swift_bridgeObjectRetain();
        uint64_t v78 = v18;
        swift_bridgeObjectRetain();
        uint64_t v79 = v20;
        swift_bridgeObjectRetain();
        id v80 = v19;
        id v21 = v19;
        os_log_type_t v22 = sub_1D7660DB0();
        if (qword_1EBDEBCD8 != -1) {
          swift_once();
        }
        long long v23 = qword_1EBDEBCD0;
        if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v22))
        {
          sub_1D75D42CC((uint64_t)v101);
          swift_retain();
          sub_1D75D42CC((uint64_t)v101);
          swift_retain();
          int v75 = v12;
          uint64_t v12 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v99[0] = v74;
          *(_DWORD *)uint64_t v12 = 136446466;
          uint64_t v24 = sub_1D75BC478();
          sub_1D758DBE8(v24, v25, v99);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v12 + 12) = 2080;
          uint64_t v88 = v77;
          uint64_t v89 = v13;
          uint64_t v90 = v15;
          uint64_t v91 = v84;
          uint64_t v92 = v83;
          uint64_t v93 = v82;
          uint64_t v94 = v81;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v26 = v80;
          uint64_t v27 = sub_1D7660B60();
          uint64_t v87 = sub_1D758DBE8(v27, v28, v99);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          sub_1D75D42CC((uint64_t)v101);
          sub_1D75D42CC((uint64_t)v101);
          _os_log_impl(&dword_1D757C000, v23, v22, "%{public}s: Received error response from peer for PairSetup cancel request: %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          long long v10 = &unk_1EBDEB000;
          MEMORY[0x1D9474C60](v74, -1, -1);
          uint64_t v29 = v12;
          LOBYTE(v12) = v75;
          MEMORY[0x1D9474C60](v29, -1, -1);
        }
        sub_1D7592D84();
        unint64_t v30 = (void *)swift_allocError();
        *(unsigned char *)uint64_t v31 = v12;
        *(void *)(v31 + 8) = v77;
        *(void *)(v31 + 16) = v13;
        uint64_t v32 = v84;
        *(void *)(v31 + 24) = v15;
        *(void *)(v31 + 32) = v32;
        uint64_t v33 = v82;
        *(void *)(v31 + 40) = v83;
        *(void *)(v31 + 48) = v33;
        *(void *)(v31 + 56) = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v34 = v80;
        v86(v30);

        sub_1D75D42CC((uint64_t)v101);
        uint64_t v9 = (void *)&unk_1EBDEB000;
      }
      else
      {
        *(void *)&long long v97 = MEMORY[0x1E4FBB1A0];
        uint64_t v95 = 0xD00000000000004BLL;
        *(void *)&long long v96 = 0x80000001D7674570;
        BYTE8(v97) = 1;
        sub_1D7592D84();
        uint64_t v35 = (void *)swift_allocError();
        uint64_t v37 = v36;
        LOBYTE(v87) = 2;
        Swift::String v38 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v87);
        sub_1D7592DD0((uint64_t)&v95);
        *(unsigned char *)uint64_t v37 = 2;
        *(Swift::String *)(v37 + 8) = v38;
        long long v10 = &unk_1EBDEB000;
        *(_OWORD *)(v37 + 24) = 0u;
        *(_OWORD *)(v37 + 40) = 0u;
        *(void *)(v37 + 56) = 0;
        sub_1D759250C(v35);
      }
    }
    os_log_type_t v39 = sub_1D7660DD0();
    if (v9[411] != -1) {
      swift_once();
    }
    uint64_t v40 = *((void *)v10 + 410);
    if (os_log_type_enabled(v40, v39))
    {
      swift_retain_n();
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v95 = v42;
      *(_DWORD *)uint64_t v41 = 136446210;
      uint64_t v43 = sub_1D75BC478();
      uint64_t v87 = sub_1D758DBE8(v43, v44, &v95);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v40, v39, "%{public}s: Received successful response from peer for PairSetup cancel request", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v42, -1, -1);
      uint64_t v45 = v41;
      long long v10 = &unk_1EBDEB000;
      MEMORY[0x1D9474C60](v45, -1, -1);
    }
    sub_1D7591448((uint64_t)&v95);
    uint64_t v47 = (void (*)(uint64_t *))v95;
    uint64_t v46 = v96;
    if (v98 == 1)
    {
      uint64_t v48 = v96;
LABEL_22:
      uint64_t v95 = 5;
      long long v96 = 0u;
      long long v97 = 0u;
      char v98 = 4;
      sub_1D759127C(&v95);
      objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
      if (v47)
      {
        uint64_t v51 = sub_1D765FC50();
        uint64_t v52 = *(void *)(v51 - 8);
        MEMORY[0x1F4188790](v51);
        uint64_t v54 = (char *)&v73 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
        LODWORD(v95) = 89;
        swift_retain();
        sub_1D75B0C34(MEMORY[0x1E4FBC860]);
        sub_1D75D50C4((uint64_t)&unk_1EA82BCB0);
        sub_1D765FD40();
        uint64_t v55 = v48;
        uint64_t v56 = (void *)sub_1D765FC40();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v51);
        uint64_t v95 = (uint64_t)v56;
        *(void *)&long long v96 = 0;
        BYTE8(v96) = 0;
        v47(&v95);
        sub_1D75940A4((uint64_t)v47);

        uint64_t v48 = v55;
        long long v10 = &unk_1EBDEB000;
      }
      v86(0);
      os_log_type_t v57 = sub_1D7660DD0();
      uint64_t v58 = *((void *)v10 + 410);
      os_log_type_t v59 = v57;
      if (os_log_type_enabled(v58, v57))
      {
        swift_retain_n();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v86 = (void (*)(void *))v48;
        uint64_t v61 = (uint8_t *)v60;
        uint64_t v62 = swift_slowAlloc();
        uint64_t v95 = v62;
        *(_DWORD *)uint64_t v61 = 136446210;
        uint64_t v63 = sub_1D75BC478();
        uint64_t v87 = sub_1D758DBE8(v63, v64, &v95);
        sub_1D7661020();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D757C000, v58, v59, "%{public}s: Successfully cancelled PairSetup attempt", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v62, -1, -1);
        MEMORY[0x1D9474C60](v61, -1, -1);
      }
      swift_release();
      sub_1D75940A4((uint64_t)v47);
    }
    else
    {
      uint64_t v48 = *((void *)&v96 + 1);
      long long v49 = v97;
      if (v98)
      {
        sub_1D758D424(v95, v96, *((uint64_t *)&v96 + 1), v97, *((uint64_t *)&v97 + 1), v98, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      }
      else
      {
        switch((char)v95)
        {
          case 1:
            sub_1D75A74B4(v96);
            swift_bridgeObjectRelease();
            sub_1D758D424((uint64_t)v47, v46, v48, v49, *((uint64_t *)&v49 + 1), 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            goto LABEL_21;
          default:
            char v50 = sub_1D7661560();
            sub_1D75A74B4(v46);
            swift_bridgeObjectRelease();
            sub_1D758D424((uint64_t)v47, v46, v48, v49, *((uint64_t *)&v49 + 1), 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
            if (v50)
            {
LABEL_21:
              uint64_t v47 = (void (*)(uint64_t *))v46;
              goto LABEL_22;
            }
            sub_1D75940A4(v46);
            break;
        }
      }
      os_log_type_t v65 = sub_1D7660DB0();
      uint64_t v66 = *((void *)v10 + 410);
      os_log_type_t v67 = v65;
      if (os_log_type_enabled(v66, v65))
      {
        swift_retain_n();
        uint64_t v68 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v87 = v69;
        *(_DWORD *)uint64_t v68 = 136446210;
        uint64_t v70 = sub_1D75BC478();
        v99[0] = sub_1D758DBE8(v70, v71, &v87);
        sub_1D7661020();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D757C000, v66, v67, "%{public}s: Received successful response from peer for PairSetup cancel request but no longer in state setUpManualPairingInProgress", v68, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v69, -1, -1);
        MEMORY[0x1D9474C60](v68, -1, -1);
      }
      sub_1D75AF4C0();
      sub_1D7661690();
      v99[0] = v87;
      v99[1] = v88;
      sub_1D75B0D60();
      uint64_t v72 = (void *)swift_allocError();
      sub_1D76616A0();
      v86(v72);
      swift_release();
    }
  }
}

void *sub_1D75C374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_158();
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = *v37;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  a9 = v36;
  a10 = v34 | 0x1000000000000000;
  a11 = v38;
  a12 = v32;
  os_log_type_t v39 = (void *)OUTLINED_FUNCTION_192();
  v39[2] = v24;
  v39[3] = v30;
  v39[4] = v28;
  uint64_t v40 = OUTLINED_FUNCTION_176();
  sub_1D75934F4(v40, v41);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1D75C0B54(&a9, (uint64_t)sub_1D75D1FDC, (uint64_t)v39);
  swift_release();
  OUTLINED_FUNCTION_151();
  return sub_1D75D1FE8(v42, v43);
}

uint64_t sub_1D75C382C(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  sub_1D75D2148(a1, (uint64_t)v62);
  sub_1D75D2148((uint64_t)v62, (uint64_t)v63);
  int v7 = sub_1D75D409C((uint64_t)v63);
  if (v7 == 5)
  {
    uint64_t v12 = *(void **)nullsub_1(v63);
    goto LABEL_5;
  }
  if (v7 == 4)
  {
    uint64_t v8 = nullsub_1(v63);
    char v9 = *(unsigned char *)v8;
    long long v10 = *(_OWORD *)(v8 + 8);
    long long v56 = *(_OWORD *)(v8 + 24);
    long long v57 = v10;
    long long v55 = *(_OWORD *)(v8 + 40);
    uint64_t v11 = *(void *)(v8 + 56);
    sub_1D7592D84();
    uint64_t v12 = (void *)swift_allocError();
    *(unsigned char *)uint64_t v13 = v9;
    *(_OWORD *)(v13 + 8) = v57;
    *(_OWORD *)(v13 + 24) = v56;
    *(_OWORD *)(v13 + 40) = v55;
    *(void *)(v13 + 56) = v11;
LABEL_5:
    sub_1D75D42CC((uint64_t)v62);
    goto LABEL_13;
  }
  sub_1D75D2148((uint64_t)v62, (uint64_t)v61);
  if (sub_1D75D409C((uint64_t)v61) == 2)
  {
    *(void *)&long long v57 = a4;
    *(void *)&long long v56 = a3;
    uint64_t v14 = (unsigned __int16 *)nullsub_1(v61);
    int v50 = *v14;
    uint64_t v15 = *((void *)v14 + 1);
    uint64_t v51 = *((void *)v14 + 2);
    uint64_t v52 = v15;
    uint64_t v54 = sub_1D76603B0();
    *(void *)&long long v55 = v49;
    uint64_t v53 = *(void *)(v54 - 8);
    MEMORY[0x1F4188790](v54);
    unint64_t v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v19 = a2[27];
    uint64_t v18 = a2[28];
    __swift_project_boxed_opaque_existential_0Tm(a2 + 24, v19);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 56);
    sub_1D75D2148((uint64_t)v62, (uint64_t)v58);
    uint64_t v21 = nullsub_1(v58);
    uint64_t v22 = *(void *)(v21 + 8);
    unint64_t v23 = *(void *)(v21 + 16);
    sub_1D75AC3B4(v22, v23);
    v20(v19, v18);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC18);
    MEMORY[0x1F4188790](v39);
    unint64_t v41 = &v49[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC20);
    unint64_t v43 = (char *)v41 + *(int *)(v42 + 48);
    uint64_t v44 = (void *)((char *)v41 + *(int *)(v42 + 64));
    *unint64_t v41 = v50;
    uint64_t v45 = v53;
    uint64_t v46 = v54;
    (*(void (**)(char *, unsigned char *, uint64_t))(v53 + 16))(v43, v17, v54);
    uint64_t v47 = v51;
    void *v44 = v52;
    v44[1] = v47;
    swift_storeEnumTagMultiPayload();
    sub_1D75AC3B4(v22, v23);
    ((void (*)(_WORD *))v56)(v41);
    sub_1D75D42CC((uint64_t)v62);
    sub_1D75D505C((uint64_t)v41, &qword_1EA82BC18);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v45 + 8))(v17, v46);
  }
  os_log_type_t v24 = sub_1D7660DB0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1EBDEBCD0;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v24))
  {
    sub_1D75D42CC((uint64_t)v62);
    swift_retain();
    sub_1D75D42CC((uint64_t)v62);
    swift_retain();
    *(void *)&long long v57 = a4;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v60[0] = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v28 = sub_1D75BC478();
    v58[0] = sub_1D758DBE8(v28, v29, v60);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    sub_1D75D2148((uint64_t)v62, (uint64_t)v58);
    sub_1D75D42CC((uint64_t)v62);
    uint64_t v30 = sub_1D7660B60();
    v58[0] = sub_1D758DBE8(v30, v31, v60);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    sub_1D75D42CC((uint64_t)v62);
    sub_1D75D42CC((uint64_t)v62);
    _os_log_impl(&dword_1D757C000, v25, v24, "%{public}s Received unexpected response to tunnel listener creation request: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v27, -1, -1);
    MEMORY[0x1D9474C60](v26, -1, -1);
  }
  v58[3] = MEMORY[0x1E4FBB1A0];
  v58[0] = 0xD000000000000034;
  v58[1] = 0x80000001D7674530;
  char v59 = 1;
  sub_1D7592D84();
  uint64_t v12 = (void *)swift_allocError();
  uint64_t v33 = v32;
  LOBYTE(v60[0]) = 2;
  Swift::String v34 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v60);
  sub_1D7592DD0((uint64_t)v58);
  *(unsigned char *)uint64_t v33 = 2;
  *(Swift::String *)(v33 + 8) = v34;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 40) = 0u;
  *(void *)(v33 + 56) = 0;
LABEL_13:
  swift_willThrow();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC18);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = &v49[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v37 = v12;
  swift_storeEnumTagMultiPayload();
  id v38 = v12;
  a3(v37);

  return sub_1D75D505C((uint64_t)v37, &qword_1EA82BC18);
}

void sub_1D75C3EE4()
{
  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_4_3();
  __int16 v3 = *(char **)(v2 + 528);
  if (v3
    && *(uint64_t *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 13)
  {
    long long v8 = xmmword_1D7665610;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v5 = OUTLINED_FUNCTION_55();
    swift_weakInit();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_192();
    _OWORD v6[2] = v5;
    _OWORD v6[3] = v1;
    void v6[4] = v0;
    int v7 = v3;
    swift_retain();
    swift_retain();
    sub_1D75C0B54((uint64_t *)&v8, (uint64_t)sub_1D75D2074, (uint64_t)v6);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1D75AF4C0();
    sub_1D7661650();
    long long v11 = v8;
    sub_1D75B0D60();
    uint64_t v4 = (void *)OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_77();
    v1(v4, 0, 1);
  }
}

void sub_1D75C4048(uint64_t a1, uint64_t a2, void (*a3)(void *, void *, uint64_t))
{
  sub_1D75D2148(a1, (uint64_t)v37);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D75D2148((uint64_t)v37, (uint64_t)v36);
    int v4 = sub_1D75D409C((uint64_t)v36);
    if (v4 == 5)
    {
      long long v8 = *(void **)nullsub_1(v36);
    }
    else
    {
      if (v4 != 4)
      {
        sub_1D75D2148((uint64_t)v37, (uint64_t)v35);
        if (sub_1D75D409C((uint64_t)v35) == 3)
        {
          uint64_t v10 = (void **)nullsub_1(v35);
          long long v11 = *v10;
          uint64_t v12 = v10[1];
          sub_1D75D2148((uint64_t)v37, (uint64_t)v32);
          uint64_t v13 = (uint64_t *)nullsub_1(v32);
          uint64_t v14 = *v13;
          unint64_t v15 = v13[1];
          sub_1D75D2148((uint64_t)v37, (uint64_t)v33);
          uint64_t v16 = nullsub_1(v33);
          sub_1D75934F4(*(void *)v16, *(void *)(v16 + 8));
          sub_1D75934F4(v14, v15);
          a3(v11, v12, 0);
          swift_release();
          sub_1D75D42CC((uint64_t)v37);
          sub_1D75D42CC((uint64_t)v37);
          return;
        }
        os_log_type_t v17 = sub_1D7660DB0();
        if (qword_1EBDEBCD8 != -1) {
          swift_once();
        }
        uint64_t v18 = qword_1EBDEBCD0;
        if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v17))
        {
          sub_1D75D42CC((uint64_t)v37);
          swift_retain();
          sub_1D75D42CC((uint64_t)v37);
          swift_retain();
          uint64_t v19 = swift_slowAlloc();
          uint64_t v20 = swift_slowAlloc();
          v32[0] = v20;
          *(_DWORD *)uint64_t v19 = 136446466;
          uint64_t v21 = sub_1D75BC478();
          v33[0] = sub_1D758DBE8(v21, v22, v32);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v19 + 12) = 2080;
          sub_1D75D2148((uint64_t)v37, (uint64_t)v33);
          sub_1D75D42CC((uint64_t)v37);
          uint64_t v23 = sub_1D7660B60();
          v33[0] = sub_1D758DBE8(v23, v24, v32);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          sub_1D75D42CC((uint64_t)v37);
          sub_1D75D42CC((uint64_t)v37);
          _os_log_impl(&dword_1D757C000, v18, v17, "%{public}s Received unexpected response to create remote unlock key request: %s", (uint8_t *)v19, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9474C60](v20, -1, -1);
          MEMORY[0x1D9474C60](v19, -1, -1);
        }
        v33[3] = MEMORY[0x1E4FBB1A0];
        v33[0] = 0xD000000000000034;
        v33[1] = 0x80000001D76744F0;
        char v34 = 1;
        sub_1D7592D84();
        long long v8 = (void *)swift_allocError();
        uint64_t v26 = v25;
        LOBYTE(v32[0]) = 2;
        Swift::String v27 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v32);
        sub_1D7592DD0((uint64_t)v33);
        *(unsigned char *)uint64_t v26 = 2;
        *(Swift::String *)(v26 + 8) = v27;
        *(_OWORD *)(v26 + 24) = 0u;
        *(_OWORD *)(v26 + 40) = 0u;
        *(void *)(v26 + 56) = 0;
        goto LABEL_14;
      }
      uint64_t v5 = nullsub_1(v36);
      char v6 = *(unsigned char *)v5;
      long long v30 = *(_OWORD *)(v5 + 24);
      long long v31 = *(_OWORD *)(v5 + 8);
      long long v29 = *(_OWORD *)(v5 + 40);
      uint64_t v7 = *(void *)(v5 + 56);
      sub_1D7592D84();
      long long v8 = (void *)swift_allocError();
      *(unsigned char *)uint64_t v9 = v6;
      *(_OWORD *)(v9 + 8) = v31;
      *(_OWORD *)(v9 + 24) = v30;
      *(_OWORD *)(v9 + 40) = v29;
      *(void *)(v9 + 56) = v7;
    }
    sub_1D75D42CC((uint64_t)v37);
LABEL_14:
    swift_willThrow();
    id v28 = v8;
    a3(v8, 0, 1);
    swift_release();
  }
}

void sub_1D75C4500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_156();
  a29 = v31;
  a30 = v32;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  unint64_t v38 = v37;
  uint64_t v40 = v39;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  OUTLINED_FUNCTION_4_3();
  unint64_t v41 = *(char **)(v30 + 528);
  if (v41
    && *(uint64_t *)&v41[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 13)
  {
    a10 = (uint64_t)v40;
    a11 = v38 | 0x2000000000000000;
    a12 = 0;
    a13 = 0;
    uint64_t v43 = OUTLINED_FUNCTION_55();
    swift_weakInit();
    uint64_t v44 = (void *)OUTLINED_FUNCTION_192();
    v44[2] = v43;
    _OWORD v44[3] = v36;
    v44[4] = v34;
    uint64_t v45 = v41;
    sub_1D75934F4((uint64_t)v40, v38);
    swift_retain();
    swift_retain();
    sub_1D75C0B54(&a10, (uint64_t)sub_1D75D20C4, (uint64_t)v44);

    swift_release();
    sub_1D75D1FE8(v40, v38 | 0x2000000000000000);
    swift_release();
  }
  else
  {
    sub_1D75AF4C0();
    sub_1D7661650();
    a14 = a10;
    a15 = a11;
    sub_1D75B0D60();
    uint64_t v42 = (void *)OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_77();
    v36(v42);
  }
  OUTLINED_FUNCTION_149();
}

void sub_1D75C4688(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  sub_1D75D2148(a1, (uint64_t)v30);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D75D2148((uint64_t)v30, (uint64_t)v29);
    int v4 = sub_1D75D409C((uint64_t)v29);
    if (v4 == 5)
    {
      long long v8 = *(void **)nullsub_1(v29);
    }
    else
    {
      if (v4 != 4)
      {
        sub_1D75D2148((uint64_t)v30, (uint64_t)v28);
        if (sub_1D75D409C((uint64_t)v28) == 6)
        {
          a3(0);
          swift_release();
          return;
        }
        os_log_type_t v10 = sub_1D7660DB0();
        if (qword_1EBDEBCD8 != -1) {
          swift_once();
        }
        long long v11 = qword_1EBDEBCD0;
        if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v10))
        {
          sub_1D75D42CC((uint64_t)v30);
          swift_retain();
          sub_1D75D42CC((uint64_t)v30);
          swift_retain();
          uint64_t v12 = swift_slowAlloc();
          uint64_t v13 = swift_slowAlloc();
          v27[0] = v13;
          *(_DWORD *)uint64_t v12 = 136446466;
          uint64_t v14 = sub_1D75BC478();
          v25[0] = sub_1D758DBE8(v14, v15, v27);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v12 + 12) = 2080;
          sub_1D75D2148((uint64_t)v30, (uint64_t)v25);
          sub_1D75D42CC((uint64_t)v30);
          uint64_t v16 = sub_1D7660B60();
          v25[0] = sub_1D758DBE8(v16, v17, v27);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          sub_1D75D42CC((uint64_t)v30);
          sub_1D75D42CC((uint64_t)v30);
          _os_log_impl(&dword_1D757C000, v11, v10, "%{public}s Received unexpected response to remote unlock request: %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9474C60](v13, -1, -1);
          MEMORY[0x1D9474C60](v12, -1, -1);
        }
        v25[3] = MEMORY[0x1E4FBB1A0];
        v25[0] = 0xD000000000000029;
        v25[1] = 0x80000001D76744C0;
        char v26 = 1;
        sub_1D7592D84();
        long long v8 = (void *)swift_allocError();
        uint64_t v19 = v18;
        LOBYTE(v27[0]) = 2;
        Swift::String v20 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v27);
        sub_1D7592DD0((uint64_t)v25);
        *(unsigned char *)uint64_t v19 = 2;
        *(Swift::String *)(v19 + 8) = v20;
        *(_OWORD *)(v19 + 24) = 0u;
        *(_OWORD *)(v19 + 40) = 0u;
        *(void *)(v19 + 56) = 0;
        goto LABEL_14;
      }
      uint64_t v5 = nullsub_1(v29);
      char v6 = *(unsigned char *)v5;
      long long v23 = *(_OWORD *)(v5 + 24);
      long long v24 = *(_OWORD *)(v5 + 8);
      long long v22 = *(_OWORD *)(v5 + 40);
      uint64_t v7 = *(void *)(v5 + 56);
      sub_1D7592D84();
      long long v8 = (void *)swift_allocError();
      *(unsigned char *)uint64_t v9 = v6;
      *(_OWORD *)(v9 + 8) = v24;
      *(_OWORD *)(v9 + 24) = v23;
      *(_OWORD *)(v9 + 40) = v22;
      *(void *)(v9 + 56) = v7;
    }
    sub_1D75D42CC((uint64_t)v30);
LABEL_14:
    swift_willThrow();
    id v21 = v8;
    a3(v8);
    swift_release();
  }
}

void sub_1D75C4AB4()
{
  long long v2 = 0u;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  uint64_t v1 = 2;
  unint64_t v6 = 0xC000000000000000;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  sub_1D75D20D0((uint64_t)&v1);
  sub_1D75D20E0((uint64_t)&v1, (uint64_t)&v0);
  OUTLINED_FUNCTION_144();
}

void sub_1D75C4B24()
{
  sub_1D7591448((uint64_t)&v10);
  if (v13 == 4
    && v10 == 4
    && (*((void *)&v11 + 1) | (unint64_t)v11 | (unint64_t)v12 | *((void *)&v12 + 1)) == 0)
  {
    OUTLINED_FUNCTION_34_0();
    if (v3 < 0)
    {
      uint64_t v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
      if (v4 != 2 && (v4 & 1) != 0)
      {
        long long v11 = 0u;
        long long v12 = 0u;
        long long v13 = 0u;
        long long v14 = 0u;
        uint64_t v10 = 4;
        unint64_t v15 = 0xC000000000000000;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        char v18 = 0;
        sub_1D75D20D0((uint64_t)&v10);
        sub_1D75D20E0((uint64_t)&v10, (uint64_t)&v6);
        OUTLINED_FUNCTION_144();
        sub_1D75923E4(0);
        uint64_t v6 = 5;
        long long v7 = 0u;
        long long v8 = 0u;
        char v9 = 4;
        sub_1D759127C(&v6);
        sub_1D75BC18C(0);
        return;
      }
    }
  }
  else
  {
    sub_1D758D424(v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  }
  uint64_t v10 = 0;
  sub_1D758B47C();
}

uint64_t sub_1D75C4C68()
{
  char v1 = *(_DWORD *)(v0 + 240);
  if ((*(_DWORD *)(v0 + 240) & 0x8000) != 0)
  {
    sub_1D75C4E04(&v10);
    v14[0] = v10;
    v14[1] = v11;
    sub_1D75BC3F0(v14);
    if (qword_1EBDEC468 != -1) {
      swift_once();
    }
    unint64_t v2 = v1 & 1;
    OUTLINED_FUNCTION_4_3();
    __int16 v3 = (void *)qword_1EBDEC460;
    sub_1D75BC3B0(&v10);
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    uint64_t v10 = (uint64_t)v3;
    uint64_t v11 = v2;
    uint64_t v12 = v4;
    uint64_t v13 = v5;
    uint64_t v6 = OUTLINED_FUNCTION_55();
    swift_weakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(unsigned char *)(v7 + 24) = v2;
    swift_bridgeObjectRetain();
    swift_retain();
    id v8 = v3;
    sub_1D75C0B54(&v10, (uint64_t)sub_1D75D4578, v7);
    swift_bridgeObjectRelease();

    swift_release();
    sub_1D75D1FE8(v3, v2);
    return swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_102();
    uint64_t result = OUTLINED_FUNCTION_48_0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75C4E04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1D7660D20();
  *(void *)(v2 + 16) = 6;
  if (((unint64_t)", device supports >=" & 0x2000000000000000) == 0
    || (((unint64_t)", device supports >=" >> 56) & 0xF) != 0)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = sub_1D7660BA0();
      if (v4 < 0) {
        break;
      }
      unint64_t v5 = v4;
      if (!v4) {
        goto LABEL_12;
      }
      v12[0] = 0;
      MEMORY[0x1D9474C80](v12, 8);
      if (v5 > v12[0] * v5)
      {
        unint64_t v6 = -(uint64_t)v5 % v5;
        while (v6 > v12[0] * v5)
        {
          v12[0] = 0;
          MEMORY[0x1D9474C80](v12, 8);
        }
      }
      sub_1D7660BB0();
      uint64_t v7 = sub_1D7660C30();
      id v8 = (uint64_t *)(v2 + 32 + 16 * v3);
      *id v8 = v7;
      v8[1] = v9;
      if (++v3 == 6)
      {
        *(void *)(v2 + 16) = 6;
        v12[0] = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBE0);
        sub_1D75D4584((uint64_t)&qword_1EA82BBE8);
        uint64_t result = sub_1D7660C40();
        *a1 = result;
        a1[1] = v11;
        return result;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1D7661100();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D7661260();
  __break(1u);
  return result;
}

void sub_1D75C5004(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D75D2148(a1, (uint64_t)v89);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = Strong;
  sub_1D75D2148((uint64_t)v89, (uint64_t)v88);
  int v6 = sub_1D75D409C((uint64_t)v88);
  if (v6 == 5)
  {
    uint64_t v10 = *(void **)nullsub_1(v88);
    goto LABEL_6;
  }
  if (v6 == 4)
  {
    uint64_t v7 = nullsub_1(v88);
    char v8 = *(unsigned char *)v7;
    long long v70 = *(_OWORD *)(v7 + 24);
    long long v72 = *(_OWORD *)(v7 + 8);
    long long v68 = *(_OWORD *)(v7 + 40);
    uint64_t v9 = *(void *)(v7 + 56);
    sub_1D7592D84();
    uint64_t v10 = (void *)swift_allocError();
    *(unsigned char *)uint64_t v11 = v8;
    *(_OWORD *)(v11 + 8) = v72;
    *(_OWORD *)(v11 + 24) = v70;
    *(_OWORD *)(v11 + 40) = v68;
    *(void *)(v11 + 56) = v9;
LABEL_6:
    sub_1D75D42CC((uint64_t)v89);
LABEL_13:
    swift_willThrow();
    sub_1D759250C(v10);
    swift_release();

    return;
  }
  sub_1D75D2148((uint64_t)v89, (uint64_t)v87);
  if (sub_1D75D409C((uint64_t)v87))
  {
    os_log_type_t v12 = sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v12))
    {
      sub_1D75D42CC((uint64_t)v89);
      swift_retain();
      sub_1D75D42CC((uint64_t)v89);
      swift_retain();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v75[0] = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v16 = sub_1D75BC478();
      uint64_t v76 = sub_1D758DBE8(v16, v17, v75);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      sub_1D75D2148((uint64_t)v89, (uint64_t)&v76);
      sub_1D75D42CC((uint64_t)v89);
      uint64_t v18 = sub_1D7660B60();
      uint64_t v76 = sub_1D758DBE8(v18, v19, v75);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D75D42CC((uint64_t)v89);
      sub_1D75D42CC((uint64_t)v89);
      _os_log_impl(&dword_1D757C000, v13, v12, "%{public}s Received unexpected response to handshake request: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v15, -1, -1);
      MEMORY[0x1D9474C60](v14, -1, -1);
    }
    *(void *)&long long v78 = MEMORY[0x1E4FBB1A0];
    uint64_t v76 = 0xD000000000000025;
    *(void *)&long long v77 = 0x80000001D7674080;
    BYTE8(v78) = 1;
    sub_1D7592D84();
    uint64_t v10 = (void *)swift_allocError();
    uint64_t v21 = v20;
    LOBYTE(v75[0]) = 2;
    Swift::String v22 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v75);
    sub_1D7592DD0((uint64_t)&v76);
    *(unsigned char *)uint64_t v21 = 2;
    *(Swift::String *)(v21 + 8) = v22;
    *(_OWORD *)(v21 + 24) = 0u;
    *(_OWORD *)(v21 + 40) = 0u;
    *(void *)(v21 + 56) = 0;
    goto LABEL_13;
  }
  char v59 = a3;
  uint64_t v23 = nullsub_1(v87);
  int v63 = *(unsigned __int8 *)(v23 + 16);
  int v58 = *(unsigned __int8 *)(v23 + 17);
  int v61 = *(unsigned __int8 *)(v23 + 18);
  int v60 = *(unsigned __int8 *)(v23 + 19);
  uint64_t v24 = *(void *)(v23 + 24);
  uint64_t v25 = *(void *)(v23 + 40);
  uint64_t v26 = *(void *)(v23 + 48);
  uint64_t v67 = *(void *)(v23 + 56);
  uint64_t v69 = *(void *)(v23 + 32);
  uint64_t v27 = *(void *)(v23 + 72);
  uint64_t v64 = *(void *)(v23 + 64);
  uint64_t v29 = *(void *)(v23 + 80);
  uint64_t v28 = *(void *)(v23 + 88);
  uint64_t v66 = v28;
  uint64_t v31 = *(void *)(v23 + 96);
  uint64_t v30 = *(void *)(v23 + 104);
  unint64_t v32 = *(void *)(v23 + 112);
  unint64_t v73 = v32;
  uint64_t v50 = v5;
  char v33 = *(unsigned char *)(v23 + 120);
  id v51 = *(id *)v23;
  uint64_t v54 = *(void **)(v23 + 8);
  char v56 = *(unsigned char *)(v23 + 20);
  id v52 = *(id *)v23;
  uint64_t v65 = v31;
  uint64_t v71 = v24;
  sub_1D75BBF70(v24, v69, v25, v26, v67, v64, v27, v29, v28, v31, v30, v32);
  sub_1D75D42CC((uint64_t)v89);
  uint64_t v53 = (char *)v52;
  sub_1D75BBF70(v24, v69, v25, v26, v67, v64, v27, v29, v28, v31, v30, v32);
  long long v55 = v54;
  sub_1D75BD788((uint64_t)v51);
  uint64_t v34 = (int *)(v50 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
  *(unsigned char *)(v50 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions + 4) = v56;
  int v35 = 256;
  if (!v58) {
    int v35 = 0;
  }
  *uint64_t v34 = v35 | v63 | (v61 << 16) | (v60 << 24);
  uint64_t v76 = v24;
  *(void *)&long long v77 = v69;
  uint64_t v62 = v26;
  *((void *)&v77 + 1) = v25;
  *(void *)&long long v78 = v26;
  *((void *)&v78 + 1) = v67;
  uint64_t v79 = v64;
  uint64_t v57 = v29;
  uint64_t v80 = v27;
  uint64_t v81 = v29;
  uint64_t v82 = v28;
  uint64_t v83 = v31;
  uint64_t v84 = v30;
  unint64_t v85 = v32;
  char v86 = v33;
  sub_1D75BBFEC(&v76);
  if (qword_1EBDEBCF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v36 = qword_1EBDEC468;
  unint64_t v37 = (char *)(id)qword_1EBDEBCE0;
  if (v36 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v38 = OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue;
  if (*(void *)(qword_1EBDEC460
                 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) < *(void *)&v55[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue])
  {

    uint64_t v76 = 0;
    *(void *)&long long v77 = 0xE000000000000000;
    sub_1D7661100();
    sub_1D7660BC0();
    uint64_t v74 = *(void *)(qword_1EBDEC460
                    + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D7660BC0();
    uint64_t v39 = *(void *)&v55[v38];

    uint64_t v74 = v39;
LABEL_25:
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D7660BC0();
    *(void *)&long long v78 = MEMORY[0x1E4FBB1A0];
    BYTE8(v78) = 1;
    sub_1D7592D84();
    uint64_t v42 = (void *)swift_allocError();
    uint64_t v44 = v43;
    LOBYTE(v74) = 5;
    Swift::String v45 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v74);
    sub_1D7592DD0((uint64_t)&v76);
    *(unsigned char *)uint64_t v44 = 5;
    *(Swift::String *)(v44 + 8) = v45;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_OWORD *)(v44 + 40) = 0u;
    *(void *)(v44 + 56) = 0;
    swift_willThrow();
    sub_1D759250C(v42);

    goto LABEL_27;
  }

  uint64_t v40 = OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue;
  uint64_t v41 = *(void *)&v53[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue];
  if (v41 < *(void *)&v37[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue])
  {
    uint64_t v76 = 0;
    *(void *)&long long v77 = 0xE000000000000000;
    sub_1D7661100();
    sub_1D7660BC0();

    uint64_t v74 = v41;
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D7660BC0();
    uint64_t v74 = *(void *)&v37[v40];
    goto LABEL_25;
  }

LABEL_27:
  sub_1D759423C(v71, v69, v25, v62, v67, v64, v27, v57, v66, v65, v30, v73);
  if (v59)
  {
    LOBYTE(v76) = 0;
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v47 = sub_1D7660A50();
    uint64_t v48 = sub_1D7660A50();
    sub_1D75CC950((unsigned __int8 *)&v76, 0, 0, 0, 0, 0xF000000000000000, 0, 0, v46, v47, v48);
    sub_1D75D42CC((uint64_t)v89);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v49 = v63;
    if (!v62) {
      int v49 = 0;
    }
    if (v49 == 1)
    {
      uint64_t v76 = 5;
      long long v77 = 0u;
      long long v78 = 0u;
      LOBYTE(v79) = 4;
      sub_1D759127C(&v76);
      sub_1D75BDD9C();
    }
    else
    {
      uint64_t v76 = 1;
      sub_1D758B47C();
    }
    sub_1D75D42CC((uint64_t)v89);
    swift_release();
  }
}

uint64_t sub_1D75C5A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_120(a1, a2, a3, a4, a5, a6, a7, a8, 7, *(long long *)&v10[8], v11, v12);
  *(_OWORD *)uint64_t v10 = xmmword_1D7665620;
  *(void *)&v10[16] = 0;
  *(void *)&long long v11 = 0;
  uint64_t v8 = OUTLINED_FUNCTION_55();
  swift_weakInit();
  swift_retain();
  sub_1D75C0B54((uint64_t *)v10, (uint64_t)sub_1D75D4094, v8);
  return OUTLINED_FUNCTION_36_1();
}

void sub_1D75C5B04(uint64_t a1)
{
  sub_1D75D2148(a1, (uint64_t)v61);
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return;
  }
  sub_1D7591448((uint64_t)&v55);
  if (v60 == 4 && v55 == 7 && (v57 | v56 | v58 | v59) == 0)
  {
    sub_1D75D2148((uint64_t)v61, (uint64_t)v52);
    int v11 = sub_1D75D409C((uint64_t)v52);
    if (v11 == 5)
    {
      uint64_t v15 = *(void **)nullsub_1(v52);
    }
    else
    {
      if (v11 != 4)
      {
        sub_1D75D2148((uint64_t)v61, (uint64_t)v49);
        if (sub_1D75D409C((uint64_t)v49) == 1)
        {
          uint64_t v17 = nullsub_1(v49);
          long long v18 = *(_OWORD *)(v17 + 32);
          long long v19 = *(_OWORD *)(v17 + 48);
          uint64_t v20 = *(void *)(v17 + 64);
          uint64_t v21 = *(unsigned __int8 *)(v17 + 72);
          char v22 = *(unsigned char *)(v17 + 96);
          long long v23 = *(_OWORD *)(v17 + 16);
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v17;
          *(_OWORD *)&v41[16] = v23;
          *(_OWORD *)&v41[32] = v18;
          long long v42 = v19;
          uint64_t v43 = v20;
          uint64_t v44 = v21;
          long long v45 = *(_OWORD *)(v17 + 80);
          char v46 = v22;
          sub_1D75D2148((uint64_t)v61, (uint64_t)v47);
          uint64_t v24 = nullsub_1(v47);
          uint64_t v25 = *(void *)(v24 + 80);
          unint64_t v26 = *(void *)(v24 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1D75AC3B4(v25, v26);
          sub_1D75BBFEC((uint64_t *)v41);
          *(void *)uint64_t v41 = 4;
          memset(&v41[8], 0, 32);
          v41[40] = 4;
          sub_1D759127C((uint64_t *)v41);
          sub_1D75BDD9C();
          goto LABEL_13;
        }
        os_log_type_t v27 = sub_1D7660DB0();
        if (qword_1EBDEBCD8 != -1) {
          swift_once();
        }
        uint64_t v28 = qword_1EBDEBCD0;
        if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v27))
        {
          swift_retain();
          sub_1D75D42CC((uint64_t)v61);
          swift_retain();
          sub_1D75D42CC((uint64_t)v61);
          uint64_t v29 = swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          *(void *)uint64_t v41 = v30;
          *(_DWORD *)uint64_t v29 = 136446466;
          uint64_t v31 = sub_1D75BC478();
          v47[0] = sub_1D758DBE8(v31, v32, (uint64_t *)v41);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v29 + 12) = 2080;
          sub_1D75D2148((uint64_t)v61, (uint64_t)v47);
          sub_1D75D42CC((uint64_t)v61);
          uint64_t v33 = sub_1D7660B60();
          v47[0] = sub_1D758DBE8(v33, v34, (uint64_t *)v41);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          sub_1D75D42CC((uint64_t)v61);
          sub_1D75D42CC((uint64_t)v61);
          _os_log_impl(&dword_1D757C000, v28, v27, "%{public}s Received unexpected response to handshake request: %s", (uint8_t *)v29, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9474C60](v30, -1, -1);
          MEMORY[0x1D9474C60](v29, -1, -1);
        }
        v47[3] = MEMORY[0x1E4FBB1A0];
        v47[0] = 0xD000000000000025;
        v47[1] = 0x80000001D7674030;
        char v48 = 1;
        sub_1D7592D84();
        uint64_t v15 = (void *)swift_allocError();
        uint64_t v36 = v35;
        v41[0] = 2;
        Swift::String v37 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v41);
        sub_1D7592DD0((uint64_t)v47);
        *(unsigned char *)uint64_t v36 = 2;
        *(Swift::String *)(v36 + 8) = v37;
        *(_OWORD *)(v36 + 24) = 0u;
        *(_OWORD *)(v36 + 40) = 0u;
        *(void *)(v36 + 56) = 0;
        goto LABEL_27;
      }
      uint64_t v12 = nullsub_1(v52);
      char v13 = *(unsigned char *)v12;
      long long v39 = *(_OWORD *)(v12 + 24);
      long long v40 = *(_OWORD *)(v12 + 8);
      long long v38 = *(_OWORD *)(v12 + 40);
      uint64_t v14 = *(void *)(v12 + 56);
      sub_1D7592D84();
      uint64_t v15 = (void *)swift_allocError();
      *(unsigned char *)uint64_t v16 = v13;
      *(_OWORD *)(v16 + 8) = v40;
      *(_OWORD *)(v16 + 24) = v39;
      *(_OWORD *)(v16 + 40) = v38;
      *(void *)(v16 + 56) = v14;
    }
    sub_1D75D42CC((uint64_t)v61);
LABEL_27:
    swift_willThrow();
    sub_1D759250C(v15);
    swift_release();

    return;
  }
  sub_1D758D424(v55, v56, v57, v58, v59, v60, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  os_log_type_t v3 = sub_1D7660DB0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBDEBCD0;
  swift_retain_n();
  if (os_log_type_enabled(v4, v3))
  {
    swift_retain_n();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v47[0] = v6;
    *(_DWORD *)uint64_t v5 = 136446466;
    uint64_t v7 = sub_1D75BC478();
    *(void *)&v52[0] = sub_1D758DBE8(v7, v8, v47);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1D7591448((uint64_t)v52);
    v49[0] = v52[0];
    v49[1] = v52[1];
    uint64_t v50 = v53;
    char v51 = v54;
    uint64_t v9 = sub_1D7660B60();
    *(void *)&v52[0] = sub_1D758DBE8(v9, v10, v47);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v4, v3, "%{public}s: Received peer info but in state %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v6, -1, -1);
    MEMORY[0x1D9474C60](v5, -1, -1);
LABEL_13:
    swift_release();
    return;
  }
  swift_release_n();
}

void sub_1D75C620C(void *a1)
{
  sub_1D7591448((uint64_t)&v20);
  uint64_t v9 = (uint64_t (*)(uint64_t *))v20;
  uint64_t v10 = *((void *)&v21 + 1);
  if ((v23 - 1) > 1u)
  {
    OUTLINED_FUNCTION_125(v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBD0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1D7664B10;
    sub_1D7591448((uint64_t)&v19);
    sub_1D7660B60();
    OUTLINED_FUNCTION_93();
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 64) = sub_1D75D4054();
    *(void *)(v18 + 32) = v1;
    *(void *)(v18 + 40) = v10;
    sub_1D7660010();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 5;
    long long v21 = 0u;
    long long v22 = 0u;
    char v23 = 4;
    sub_1D759127C(&v20);
    if (v9)
    {
      uint64_t v20 = (uint64_t)a1;
      *(void *)&long long v21 = 0;
      BYTE8(v21) = 0;
      id v11 = a1;
      uint64_t v12 = v9(&v20);
      OUTLINED_FUNCTION_125(v12, v13, v14, v15, v16, v17, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    }
  }
}

void sub_1D75C642C()
{
  sub_1D7591448((uint64_t)&v24);
  long long v0 = v24;
  long long v1 = v25;
  uint64_t v2 = v26;
  if (v27 == 1)
  {
    if ((void)v24)
    {
      long long v24 = xmmword_1D7665630;
      LOBYTE(v25) = 0x80;
      sub_1D75A74B4(v0);
      ((void (*)(long long *))v0)(&v24);
      sub_1D758D424(v0, *((uint64_t *)&v0 + 1), v1, *((uint64_t *)&v1 + 1), v2, 1, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      OUTLINED_FUNCTION_98();
      sub_1D758D424(v3, v4, v5, v6, v7, 1, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    }
  }
  else
  {
    OUTLINED_FUNCTION_98();
    sub_1D758D424(v8, v9, v10, v11, v12, v13, v14, v15, (void (*)(void))sub_1D75933F0);
    os_log_type_t v16 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1EBDEBCD0;
    OUTLINED_FUNCTION_41_0();
    if (OUTLINED_FUNCTION_20_3())
    {
      OUTLINED_FUNCTION_41_0();
      uint64_t v18 = OUTLINED_FUNCTION_40_0();
      uint64_t v23 = OUTLINED_FUNCTION_38_0();
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v19 = sub_1D75BC478();
      sub_1D758DBE8(v19, v20, &v23);
      OUTLINED_FUNCTION_167();
      sub_1D7661020();
      OUTLINED_FUNCTION_27_1();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1D7591448((uint64_t)&v24);
      uint64_t v21 = sub_1D7660B60();
      *(void *)&long long v24 = sub_1D758DBE8(v21, v22, &v23);
      sub_1D7661020();
      OUTLINED_FUNCTION_27_1();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v17, v16, "%{public}s: Ignoring awaiting user consent message from peer since state=%s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    else
    {
      OUTLINED_FUNCTION_27_1();
    }
  }
}

void sub_1D75C66F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 88);
  char v10 = *(unsigned char *)(a1 + 96);
  uint64_t v13 = *(void *)a1;
  long long v14 = *(_OWORD *)(a1 + 8);
  uint64_t v15 = v2;
  uint64_t v16 = v1;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  char v24 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = OUTLINED_FUNCTION_147();
  sub_1D75AC3B4(v11, v12);
  sub_1D75BBFEC(&v13);
}

#error "1D75C6878: call analysis failed (funcsize=79)"

void sub_1D75C68EC()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_4_3();
  uint64_t v1 = *(void *)(v0 + 528);
  if (v1
    && *(uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) >= 20)
  {
    sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_20_3())
    {
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_14_0();
      uint64_t v13 = OUTLINED_FUNCTION_11_4();
      uint64_t v6 = OUTLINED_FUNCTION_35_1(4.8751e-34);
      v12[0] = sub_1D758DBE8(v6, v7, &v13);
      sub_1D7661020();
      OUTLINED_FUNCTION_27_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_3(&dword_1D757C000, v8, v9, "%{public}s: Pushing metadata update event to host");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    sub_1D75CBD1C((uint64_t)&v25);
    uint64_t v10 = v34;
    unint64_t v11 = v35;
    long long v14 = v26;
    uint64_t v13 = v25;
    uint64_t v15 = v27;
    uint64_t v16 = v28;
    uint64_t v17 = v29;
    uint64_t v18 = v30;
    uint64_t v19 = v31;
    uint64_t v20 = v32;
    unint64_t v21 = v33 | 0x8000000000000000;
    uint64_t v22 = v34;
    unint64_t v23 = v35;
    char v24 = v36;
    sub_1D75D20D0((uint64_t)&v13);
    sub_1D75D20E0((uint64_t)&v13, (uint64_t)v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D75AC3B4(v10, v11);
    OUTLINED_FUNCTION_144();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75941DC(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75941DC(v10, v11);
  }
  else
  {
    sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_20_3())
    {
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_14_0();
      uint64_t v13 = OUTLINED_FUNCTION_11_4();
      uint64_t v2 = OUTLINED_FUNCTION_35_1(4.8751e-34);
      v12[0] = sub_1D758DBE8(v2, v3, &v13);
      OUTLINED_FUNCTION_123();
      OUTLINED_FUNCTION_27_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_3(&dword_1D757C000, v4, v5, "%{public}s: Not pushing metadata update event to host as it does not have a wire protocol version to support it");
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
  }
  OUTLINED_FUNCTION_84();
}

__n128 *sub_1D75C6CDC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  int v10 = *a2;
  unsigned __int8 v11 = a2[1];
  unsigned __int8 v12 = a2[2];
  unsigned __int8 v13 = a2[3];
  unsigned __int8 v47 = a2[4];
  if (!remotePairingIsEnabled())
  {
    os_log_type_t v19 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v19))
    {
      swift_retain_n();
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v55[0] = v22;
      *(_DWORD *)unint64_t v21 = 136446210;
      uint64_t v23 = sub_1D75BC478();
      v54[0] = sub_1D758DBE8(v23, v24, v55);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v20, v19, "%{public}s: Rejecting control channel connection because RemotePairing support is disabled on this device.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v22, -1, -1);
      MEMORY[0x1D9474C60](v21, -1, -1);
    }
    sub_1D75B0D60();
    uint64_t v25 = (void *)swift_allocError();
    sub_1D75AF4C0();
    sub_1D7661690();
    sub_1D763B958(v25, (uint64_t)v6, (uint64_t)__src);

    sub_1D75D2148((uint64_t)__src, (uint64_t)__dst);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v54[0] = a5->n128_u64[1];
      sub_1D75D2148((uint64_t)__dst, (uint64_t)&v54[1]);
      memcpy(v55, v54, 0x82uLL);
      sub_1D75D4AD4((uint64_t)v55);
      sub_1D75D20E0((uint64_t)v55, (uint64_t)v53);
      sub_1D75D42CC((uint64_t)__dst);
      sub_1D75C0C5C();
      swift_release();
      sub_1D75D42CC((uint64_t)__dst);
    }
    sub_1D75D42CC((uint64_t)__dst);
    goto LABEL_27;
  }
  char v46 = a5;
  id v14 = v6;
  sub_1D75BD788((uint64_t)v6);
  v55[0] = v8;
  v55[1] = v9;
  swift_bridgeObjectRetain();
  sub_1D75BC3F0(v55);
  if (v7)
  {
    v55[0] = 8;
    memset(&v55[1], 0, 32);
    LOBYTE(v55[5]) = 4;
    sub_1D759127C(v55);
    if (!v10) {
      goto LABEL_4;
    }
LABEL_17:
    sub_1D75CBD1C((uint64_t)v48);
    uint64_t v27 = v48[1];
    uint64_t v28 = v48[3];
    uint64_t v41 = v48[2];
    uint64_t v42 = v48[0];
    uint64_t v39 = v48[6];
    uint64_t v40 = v48[4];
    uint64_t v44 = v48[7];
    uint64_t v45 = v48[5];
    uint64_t v38 = v48[8];
    uint64_t v43 = v49;
    uint64_t v29 = v50;
    unint64_t v30 = v51;
    char v37 = v52;
    if (qword_1EBDEC468 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v31 = qword_1EBDEBCF0;
    id v32 = (id)qword_1EBDEC460;
    if (v31 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unsigned __int8 v33 = (void *)qword_1EBDEBCE0;
    __src[0] = v32;
    __src[1] = qword_1EBDEBCE0;
    LOBYTE(__src[2]) = 1;
    BYTE1(__src[2]) = v11;
    BYTE2(__src[2]) = v12;
    BYTE3(__src[2]) = v13;
    BYTE4(__src[2]) = v47;
    __src[3] = v42;
    __src[4] = v27;
    __src[5] = v41;
    __src[6] = v28;
    __src[7] = v40;
    __src[8] = v45;
    __src[9] = v39;
    __src[10] = v44;
    __src[11] = v38;
    __src[12] = v43;
    __src[13] = v29;
    __src[14] = v30;
    LOBYTE(__src[15]) = v37;
    memcpy(__dst, __src, 0x79uLL);
    sub_1D75D4C38((uint64_t)__dst);
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
      id v36 = v33;
      sub_1D75D4CF4((uint64_t)__src);
      a5 = v46;
      goto LABEL_27;
    }
    a5 = v46;
    v54[0] = v46->n128_u64[1];
    sub_1D75D2148((uint64_t)__dst, (uint64_t)&v54[1]);
    memcpy(v55, v54, 0x82uLL);
    sub_1D75D4AD4((uint64_t)v55);
    sub_1D75D20E0((uint64_t)v55, (uint64_t)v53);
    sub_1D75D4C40((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = v33;
    sub_1D75AC3B4(v29, v30);
    sub_1D75D4C40((uint64_t)__src);
    sub_1D75C0C5C();
    swift_release();
    sub_1D75D4CF4((uint64_t)__src);
    sub_1D75D4CF4((uint64_t)__src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75941DC(v29, v30);
LABEL_26:
    sub_1D75D4CF4((uint64_t)__src);
LABEL_27:
    swift_release();
    return sub_1D75D48CC(a5, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
  v55[0] = 5;
  memset(&v55[1], 0, 32);
  LOBYTE(v55[5]) = 4;
  sub_1D759127C(v55);
  sub_1D75BDD9C();
  if (v10) {
    goto LABEL_17;
  }
LABEL_4:
  if (qword_1EBDEC468 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v15 = qword_1EBDEBCF0;
  id v16 = (id)qword_1EBDEC460;
  if (v15 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = (void *)qword_1EBDEBCE0;
  __src[0] = v16;
  __src[1] = qword_1EBDEBCE0;
  LOBYTE(__src[2]) = 0;
  BYTE1(__src[2]) = v11;
  BYTE2(__src[2]) = v12;
  BYTE3(__src[2]) = v13;
  BYTE4(__src[2]) = v47;
  memset(&__src[3], 0, 97);
  memcpy(__dst, __src, 0x79uLL);
  sub_1D75D4C38((uint64_t)__dst);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v54[0] = a5->n128_u64[1];
    sub_1D75D2148((uint64_t)__dst, (uint64_t)&v54[1]);
    memcpy(v55, v54, 0x82uLL);
    sub_1D75D4AD4((uint64_t)v55);
    sub_1D75D20E0((uint64_t)v55, (uint64_t)v53);
    sub_1D75D4C40((uint64_t)__src);
    id v18 = v17;
    sub_1D75D4C40((uint64_t)__src);
    sub_1D75C0C5C();
    swift_release();
    sub_1D75D4CF4((uint64_t)__src);
    sub_1D75D4CF4((uint64_t)__src);
    goto LABEL_26;
  }
  id v26 = v17;
  sub_1D75D4CF4((uint64_t)__src);
  swift_release();
  return sub_1D75D48CC(a5, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
}

void sub_1D75C76F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_150();
  a25 = v27;
  a26 = v28;
  OUTLINED_FUNCTION_34_0();
  if (v29 < 0)
  {
    sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_78())
    {
      OUTLINED_FUNCTION_104();
      OUTLINED_FUNCTION_14_0();
      a10 = OUTLINED_FUNCTION_11_4();
      uint64_t v33 = OUTLINED_FUNCTION_56_0(4.8751e-34);
      OUTLINED_FUNCTION_105(v33, v34, v35);
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_36_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_1(&dword_1D757C000, v36, v37, "%{public}s: Ignoring invalid PairVerify failed message received by host");
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    goto LABEL_8;
  }
  if ((v29 & 1) == 0)
  {
    a13 = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_50_0();
    a10 = v30;
    a11 = v31;
    a14 = 1;
    sub_1D7592D84();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_163();
    ControlChannelConnectionError.Message.format(code:)(v32);
    OUTLINED_FUNCTION_93();
    sub_1D7592DD0((uint64_t)&a10);
    OUTLINED_FUNCTION_24_2();

LABEL_8:
    OUTLINED_FUNCTION_99();
    return;
  }
  OUTLINED_FUNCTION_87();
  sub_1D759127C(v38);
  OUTLINED_FUNCTION_99();
  sub_1D75BDD9C();
}

__n128 *sub_1D75C787C(uint64_t a1, uint64_t a2, __n128 *a3)
{
  if ((*(_DWORD *)(a1 + 240) & 0x8000) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_4:
    os_log_type_t v6 = sub_1D7660DD0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    uint64_t v50 = a3;
    char v7 = qword_1EBDEBCD0;
    os_log_type_t v8 = v6;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v6))
    {
      swift_retain_n();
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      __dst[0] = v10;
      *(_DWORD *)uint64_t v9 = 136446210;
      uint64_t v11 = sub_1D75BC478();
      __src[0] = sub_1D758DBE8(v11, v12, __dst);
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v7, v8, "%{public}s: Received PairSetup cancel request from host", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v10, -1, -1);
      MEMORY[0x1D9474C60](v9, -1, -1);
    }
    sub_1D7591448((uint64_t)&v56);
    uint64_t v14 = v56;
    uint64_t v13 = v57;
    uint64_t v16 = v58;
    uint64_t v15 = v59;
    uint64_t v17 = v60;
    char v18 = v61;
    switch(v61)
    {
      case 0:
        switch((char)v56)
        {
          case 1:
            swift_bridgeObjectRelease();
            break;
          default:
            char v37 = sub_1D7661560();
            swift_bridgeObjectRelease();
            char v18 = 0;
            if ((v37 & 1) == 0) {
              goto LABEL_28;
            }
            break;
        }
        __dst[0] = 5;
        memset(&__dst[1], 0, 32);
        LOBYTE(__dst[5]) = 4;
        sub_1D759127C(__dst);
        objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
        sub_1D75D4DA8((uint64_t)v55);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          __src[0] = v50->n128_u64[1];
          sub_1D75D2148((uint64_t)v55, (uint64_t)&__src[1]);
          memcpy(__dst, __src, 0x82uLL);
          sub_1D75D4AD4((uint64_t)__dst);
          sub_1D75D20E0((uint64_t)__dst, (uint64_t)v51);
          sub_1D75C0C5C();
          swift_release();
          uint64_t v38 = v14;
          a3 = v50;
          sub_1D758D424(v38, v13, v16, v15, v17, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          goto LABEL_37;
        }
        sub_1D758D424(v14, v13, v16, v15, v17, 0, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        swift_release();
        a3 = v50;
        break;
      case 1:
        sub_1D758D424(v56, v57, v58, v59, v60, 1, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        goto LABEL_23;
      case 2:
        sub_1D758D424(v56, v57, v58, v59, v60, 2, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        goto LABEL_23;
      case 3:
        os_log_type_t v26 = sub_1D7660DD0();
        uint64_t v27 = qword_1EBDEBCD0;
        os_log_type_t v28 = v26;
        if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v26))
        {
          swift_retain_n();
          uint64_t v48 = v15;
          __int16 v29 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = v17;
          uint64_t v30 = swift_slowAlloc();
          __dst[0] = v30;
          *(_DWORD *)__int16 v29 = 136446210;
          uint64_t v31 = sub_1D75BC478();
          __src[0] = sub_1D758DBE8(v31, v32, __dst);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D757C000, v27, v28, "%{public}s: Cancelling in-progress pairing consent collection", v29, 0xCu);
          swift_arrayDestroy();
          uint64_t v33 = v30;
          uint64_t v17 = v49;
          MEMORY[0x1D9474C60](v33, -1, -1);
          unint64_t v34 = v29;
          uint64_t v15 = v48;
          MEMORY[0x1D9474C60](v34, -1, -1);
        }
        swift_beginAccess();
        sub_1D75CFFE4(a1 + 320, (uint64_t)__dst, (uint64_t *)&unk_1EBDEB500);
        if (__dst[3])
        {
          sub_1D758B1EC((uint64_t)__dst, (uint64_t)__src);
          sub_1D75D505C((uint64_t)__dst, (uint64_t *)&unk_1EBDEB500);
          uint64_t v35 = __src[3];
          uint64_t v36 = __src[4];
          __swift_project_boxed_opaque_existential_0Tm(__src, __src[3]);
          (*(void (**)(uint64_t, uint64_t))(v36 + 32))(v35, v36);
          sub_1D758D424(v14, v13, v16, v15, v17, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__src);
        }
        else
        {
          sub_1D758D424(v14, v13, v16, v15, v17, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          sub_1D75D505C((uint64_t)__dst, (uint64_t *)&unk_1EBDEB500);
        }
LABEL_23:
        a3 = v50;
        __dst[0] = 5;
        memset(&__dst[1], 0, 32);
        LOBYTE(__dst[5]) = 4;
        sub_1D759127C(__dst);
        objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
        sub_1D75D4DA8((uint64_t)v55);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          __src[0] = v50->n128_u64[1];
          sub_1D75D2148((uint64_t)v55, (uint64_t)&__src[1]);
          memcpy(__dst, __src, 0x82uLL);
          sub_1D75D4AD4((uint64_t)__dst);
          sub_1D75D20E0((uint64_t)__dst, (uint64_t)v51);
          sub_1D75C0C5C();
          swift_release();
        }
        goto LABEL_37;
      default:
LABEL_28:
        sub_1D758D424(v14, v13, v16, v15, v17, v18, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
        __dst[3] = MEMORY[0x1E4FBB1A0];
        __dst[0] = 0xD000000000000029;
        __dst[1] = 0x80000001D7673660;
        LOBYTE(__dst[4]) = 1;
        LOBYTE(__src[0]) = 3;
        Swift::String v39 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
        sub_1D7592DD0((uint64_t)__dst);
        sub_1D7592D84();
        uint64_t v40 = (void *)swift_allocError();
        *(unsigned char *)uint64_t v41 = 3;
        *(Swift::String *)(v41 + 8) = v39;
        *(_OWORD *)(v41 + 24) = 0u;
        *(_OWORD *)(v41 + 40) = 0u;
        *(void *)(v41 + 56) = 0;
        swift_beginAccess();
        uint64_t v42 = *(void **)(a1 + 528);
        if (v42)
        {
          swift_bridgeObjectRetain();
          id v43 = 0;
          id v44 = v42;
          a3 = v50;
        }
        else
        {
          swift_bridgeObjectRetain();
          id v45 = 0;
          a3 = v50;
          if (qword_1EBDEBCF0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v44 = (id)qword_1EBDEBCE0;
          uint64_t v42 = 0;
        }
        id v46 = v42;
        sub_1D763B958(v40, (uint64_t)v44, (uint64_t)v55);

        sub_1D75D2148((uint64_t)v55, (uint64_t)v54);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          __src[0] = a3->n128_u64[1];
          sub_1D75D2148((uint64_t)v54, (uint64_t)&__src[1]);
          memcpy(__dst, __src, 0x82uLL);
          sub_1D75D4AD4((uint64_t)__dst);
          sub_1D75D20E0((uint64_t)__dst, (uint64_t)v51);
          sub_1D75D42CC((uint64_t)v54);
          sub_1D75C0C5C();
          swift_release();
          sub_1D75D42CC((uint64_t)v54);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        sub_1D75D42CC((uint64_t)v54);
        goto LABEL_37;
    }
    return sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
  char v5 = sub_1D7661560();
  swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_4;
  }
  os_log_type_t v19 = sub_1D7660DB0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EBDEBCD0;
  os_log_type_t v21 = v19;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v19))
  {
    swift_retain_n();
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    __dst[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v24 = sub_1D75BC478();
    __src[0] = sub_1D758DBE8(v24, v25, __dst);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v20, v21, "%{public}s: Ignoring invalid cancelPairSetup message received by host", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v23, -1, -1);
    MEMORY[0x1D9474C60](v22, -1, -1);
  }
LABEL_37:
  swift_release();
  return sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
}

void sub_1D75C8590()
{
  OUTLINED_FUNCTION_34_0();
  if (v3 < 0)
  {
    sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_78())
    {
      OUTLINED_FUNCTION_104();
      OUTLINED_FUNCTION_14_0();
      uint64_t v62 = OUTLINED_FUNCTION_11_4();
      uint64_t v5 = OUTLINED_FUNCTION_56_0(4.8751e-34);
      sub_1D758DBE8(v5, v6, &v62);
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_36_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_1(&dword_1D757C000, v7, v8, "%{public}s: Ignoring invalid PairSetup request received by host");
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
  }
  else
  {
    if ((v3 & 1) == 0)
    {
      *(void *)&long long v64 = MEMORY[0x1E4FBB1A0];
      uint64_t v62 = 0xD00000000000004BLL;
      *(void *)&long long v63 = 0x80000001D7673F40;
      BYTE8(v64) = 1;
      sub_1D7592D84();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_163();
      ControlChannelConnectionError.Message.format(code:)(v4);
      OUTLINED_FUNCTION_93();
      sub_1D7592DD0((uint64_t)&v62);
      OUTLINED_FUNCTION_24_2();

      return;
    }
    uint64_t v10 = (void *)v2[1];
    unint64_t v9 = v2[2];
    uint64_t v11 = v2[3];
    uint64_t v12 = v2[4];
    if ((v3 & 0x100) == 0)
    {
      LOBYTE(v61[0]) = 1;
      OUTLINED_FUNCTION_4_3();
      uint64_t v13 = *(void *)(v0 + 296);
      uint64_t v14 = *(void *)(v0 + 304);
      uint64_t v15 = OUTLINED_FUNCTION_216();
      sub_1D75A74B4(v15);
      uint64_t v16 = MEMORY[0x1E4FBC860];
      uint64_t v59 = v11;
      uint64_t v17 = v12;
      char v18 = v10;
      uint64_t v19 = OUTLINED_FUNCTION_215();
      uint64_t v20 = OUTLINED_FUNCTION_215();
      sub_1D75CC950((unsigned __int8 *)v61, v13, v14, 0, v18, v9, v59, v17, v16, v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = OUTLINED_FUNCTION_216();
LABEL_25:
      sub_1D75940A4(v21);
      return;
    }
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing))
    {
      sub_1D7660DB0();
      if (qword_1EBDEBCD8 != -1) {
        swift_once();
      }
      if (OUTLINED_FUNCTION_78())
      {
        OUTLINED_FUNCTION_104();
        OUTLINED_FUNCTION_14_0();
        uint64_t v62 = OUTLINED_FUNCTION_11_4();
        uint64_t v22 = OUTLINED_FUNCTION_56_0(4.8751e-34);
        sub_1D758DBE8(v22, v23, &v62);
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_36_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_32_1(&dword_1D757C000, v24, v25, "%{public}s: Automatically rejecting pairing request from host since user has already declined previous attempt");
        OUTLINED_FUNCTION_63();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      sub_1D75B0D60();
      os_log_type_t v26 = (void *)OUTLINED_FUNCTION_3_0();
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_201();
      OUTLINED_FUNCTION_4_3();
      uint64_t v27 = *(void **)(v0 + 528);
      if (v27)
      {
        id v28 = *(id *)(v0 + 528);
      }
      else
      {
        if (qword_1EBDEBCF0 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_4_3();
        id v28 = (id)qword_1EBDEBCE0;
      }
      OUTLINED_FUNCTION_188();
      if (v46 != v47)
      {
        uint64_t v50 = 0;
        unint64_t v49 = 0xC000000000000000;
      }
      else
      {
        id v48 = v26;
        unint64_t v49 = 0x4000000000000000;
        uint64_t v50 = v26;
      }
      id v51 = v27;

      long long v63 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      long long v66 = 0u;
      uint64_t v62 = (uint64_t)v50;
      unint64_t v67 = v49;
      uint64_t v68 = 0;
      uint64_t v69 = 0;
      char v70 = 0;
      sub_1D75D20D0((uint64_t)&v62);
      sub_1D75D20E0((uint64_t)&v62, (uint64_t)v61);
      OUTLINED_FUNCTION_66();
      OUTLINED_FUNCTION_8_5(v50, v52, v53, v54, v55, v56, v57, v58, 0, v49, 0, 0);
    }
    else
    {
      OUTLINED_FUNCTION_4_3();
      if (*(unsigned char *)(v0 + 312) != 1)
      {
        sub_1D7660DD0();
        if (qword_1EBDEBCD8 != -1) {
          swift_once();
        }
        if (OUTLINED_FUNCTION_96())
        {
          OUTLINED_FUNCTION_104();
          uint64_t v35 = (_DWORD *)OUTLINED_FUNCTION_14_0();
          uint64_t v62 = OUTLINED_FUNCTION_11_4();
          *uint64_t v35 = 136446210;
          uint64_t v36 = sub_1D75BC478();
          v61[0] = sub_1D758DBE8(v36, v37, &v62);
          sub_1D7661020();
          OUTLINED_FUNCTION_36_1();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_173(&dword_1D757C000, v38, v39, "%{public}s: Not requesting user consent for pairing attempt as requireUserConsentForPairing is set to false");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        LOBYTE(v61[0]) = 1;
        OUTLINED_FUNCTION_4_3();
        uint64_t v40 = *(void *)(v0 + 296);
        uint64_t v41 = *(void *)(v0 + 304);
        uint64_t v42 = OUTLINED_FUNCTION_147();
        sub_1D75A74B4(v42);
        uint64_t v43 = MEMORY[0x1E4FBC860];
        uint64_t v44 = OUTLINED_FUNCTION_217();
        uint64_t v45 = OUTLINED_FUNCTION_217();
        sub_1D75CC950((unsigned __int8 *)v61, v40, v41, 0, v10, v9, 0, 0, v43, v44, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = OUTLINED_FUNCTION_147();
        goto LABEL_25;
      }
      uint64_t v62 = (uint64_t)v10;
      long long v63 = v9;
      long long v64 = 0uLL;
      LOBYTE(v65) = 3;
      sub_1D75934F4((uint64_t)v10, v9);
      sub_1D759127C(&v62);
      OUTLINED_FUNCTION_4_3();
      sub_1D75CFFE4(v0 + 320, (uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
      if ((void)v64)
      {
        sub_1D758B1EC((uint64_t)&v62, (uint64_t)v61);
        sub_1D75D505C((uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
        uint64_t v29 = v61[4];
        __swift_project_boxed_opaque_existential_0Tm(v61, v61[3]);
        uint64_t v60 = *(void (**)(uint64_t))(v29 + 24);
        swift_bridgeObjectRetain();
        uint64_t v30 = OUTLINED_FUNCTION_176();
        sub_1D75AC3B4(v30, v31);
        swift_retain();
        uint64_t v32 = OUTLINED_FUNCTION_147();
        v60(v32);
        swift_release();
        uint64_t v33 = OUTLINED_FUNCTION_176();
        sub_1D75941DC(v33, v34);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v61);
      }
      else
      {
        sub_1D75D505C((uint64_t)&v62, (uint64_t *)&unk_1EBDEB500);
      }
    }
  }
}

void sub_1D75C8CB8(void **a1)
{
  uint64_t v1 = *a1;
  sub_1D75C947C(&v1);
}

void sub_1D75C8CF0()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_34_0();
  if ((v5 & 0x8000) == 0)
  {
    uint64_t v6 = v0;
    if ((v5 & 0x1000000) != 0
      && (char v7 = v3,
          uint64_t v1 = *(void **)(v4 + 8),
          unint64_t v8 = *(void *)(v4 + 16),
          uint64_t v2 = *(void *)(v0 + 216),
          __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 192), v2),
          uint64_t v9 = OUTLINED_FUNCTION_216(),
          (v10(v9) & 1) != 0))
    {
      sub_1D7591448((uint64_t)&v69);
      BOOL v11 = v72 == 4 && v69 == (void *)5;
      if (v11 && !(*((void *)&v70 + 1) | (unint64_t)v70 | (unint64_t)v71 | *((void *)&v71 + 1)))
      {
        OUTLINED_FUNCTION_4_3();
        sub_1D75CFFE4(v0 + 320, (uint64_t)&v69, (uint64_t *)&unk_1EBDEB500);
        uint64_t v14 = v71;
        if ((void)v71)
        {
          __swift_project_boxed_opaque_existential_0Tm(&v69, v71);
          OUTLINED_FUNCTION_1_1();
          uint64_t v16 = v15;
          MEMORY[0x1F4188790]();
          char v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v16 + 16))(v18);
          sub_1D75D505C((uint64_t)&v69, (uint64_t *)&unk_1EBDEB500);
          uint64_t v19 = OUTLINED_FUNCTION_216();
          v20(v19);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
          uint64_t v21 = v68;
          if (v68)
          {
            char v22 = v66;
            if (v66)
            {
              if ((v7 & 1) == 0)
              {
                uint64_t v64 = v67;
                unint64_t v23 = &unk_1F2EDE3B8;
                goto LABEL_35;
              }
            }
            else if (v7)
            {
              uint64_t v64 = v67;
              unint64_t v23 = &unk_1F2EDE388;
LABEL_35:
              uint64_t v65 = (uint64_t)v23;
              os_log_type_t v44 = sub_1D7660DD0();
              if (qword_1EBDEBCD8 != -1) {
                swift_once();
              }
              uint64_t v45 = qword_1EBDEBCD0;
              os_log_type_t v46 = v44;
              if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v44))
              {
                char v47 = v22 & 1;
                id v48 = (uint8_t *)OUTLINED_FUNCTION_14_0();
                uint64_t v63 = OUTLINED_FUNCTION_11_4();
                uint64_t v69 = (void *)v63;
                uint64_t v62 = v48;
                *(_DWORD *)id v48 = 136315138;
                v61[1] = v48 + 4;
                LOBYTE(v66) = v47;
                uint64_t v49 = sub_1D7660B60();
                uint64_t v66 = sub_1D758DBE8(v49, v50, (uint64_t *)&v69);
                sub_1D7661020();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1D757C000, v45, v46, "Host approved for promptless pairing of type %s.", v62, 0xCu);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_1();
                OUTLINED_FUNCTION_1();
              }
              if (v7) {
                char v51 = 3;
              }
              else {
                char v51 = 2;
              }
              LOBYTE(v66) = v51;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBC8);
              uint64_t v52 = swift_allocObject();
              *(_OWORD *)(v52 + 16) = xmmword_1D7664B10;
              uint64_t v69 = (void *)0xD00000000000001DLL;
              *(void *)&long long v70 = 0x80000001D7673F20;
              uint64_t v53 = MEMORY[0x1E4FBB1A0];
              sub_1D76610E0();
              *(void *)(v52 + 96) = v53;
              *(void *)(v52 + 72) = v64;
              *(void *)(v52 + 80) = v21;
              uint64_t v54 = OUTLINED_FUNCTION_186();
              uint64_t v60 = OUTLINED_FUNCTION_186();
              uint64_t v59 = v65;
              OUTLINED_FUNCTION_143();
              sub_1D75CC950(v55, v56, v57, v58, v1, v8, 0, 0, v59, v60, v54);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
            swift_bridgeObjectRelease();
            sub_1D75AF4C0();
            sub_1D7661660();
            uint64_t v78 = v66;
            uint64_t v79 = v67;
            OUTLINED_FUNCTION_76();
            uint64_t v30 = (uint64_t)v69;
            uint64_t v31 = v70;
            sub_1D75B0D60();
            os_log_type_t v26 = (void *)OUTLINED_FUNCTION_3_0();
            *uint64_t v32 = v30;
            v32[1] = v31;
            OUTLINED_FUNCTION_4_3();
            id v28 = *(void **)(v6 + 528);
            if (v28)
            {
              uint64_t v29 = *(char **)(v6 + 528);
              goto LABEL_30;
            }
            if (qword_1EBDEBCF0 == -1) {
              goto LABEL_26;
            }
            goto LABEL_44;
          }
        }
        else
        {
          sub_1D75D505C((uint64_t)&v69, (uint64_t *)&unk_1EBDEB500);
        }
        sub_1D75AF4C0();
        sub_1D7661660();
        uint64_t v78 = v66;
        uint64_t v79 = v67;
        OUTLINED_FUNCTION_76();
        uint64_t v24 = (uint64_t)v69;
        uint64_t v25 = v70;
        sub_1D75B0D60();
        os_log_type_t v26 = (void *)OUTLINED_FUNCTION_3_0();
        *uint64_t v27 = v24;
        v27[1] = v25;
        OUTLINED_FUNCTION_4_3();
        id v28 = *(void **)(v6 + 528);
        if (v28)
        {
          uint64_t v29 = *(char **)(v6 + 528);
LABEL_30:
          if (*(uint64_t *)&v29[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
          {
            id v35 = v26;
            unint64_t v34 = 0x4000000000000000;
            uint64_t v33 = v26;
          }
          else
          {
            uint64_t v33 = 0;
            unint64_t v34 = 0xC000000000000000;
          }
          id v36 = v28;

          long long v70 = 0u;
          long long v71 = 0u;
          long long v72 = 0u;
          long long v73 = 0u;
          uint64_t v69 = v33;
          unint64_t v74 = v34;
          uint64_t v75 = 0;
          uint64_t v76 = 0;
          char v77 = 0;
          sub_1D75D20D0((uint64_t)&v69);
          sub_1D75D20E0((uint64_t)&v69, (uint64_t)&v66);
          sub_1D75C0C5C();
          OUTLINED_FUNCTION_8_5(v33, v37, v38, v39, v40, v41, v42, v43, 0, v34, 0, 0);
          goto LABEL_15;
        }
        if (qword_1EBDEBCF0 == -1)
        {
LABEL_26:
          OUTLINED_FUNCTION_4_3();
          uint64_t v29 = (char *)(id)qword_1EBDEBCE0;
          goto LABEL_30;
        }
LABEL_44:
        swift_once();
        goto LABEL_26;
      }
      sub_1D758D424((uint64_t)v69, v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
      OUTLINED_FUNCTION_148(MEMORY[0x1E4FBB1A0]);
    }
    else
    {
      OUTLINED_FUNCTION_148(MEMORY[0x1E4FBB1A0]);
    }
    OUTLINED_FUNCTION_50_0();
    uint64_t v69 = (void *)v12;
    *(void *)&long long v70 = v13;
    BYTE8(v71) = 1;
    sub_1D7592D84();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_131();
    LOBYTE(v66) = v2;
    ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v66);
    OUTLINED_FUNCTION_138();
    sub_1D7592DD0((uint64_t)&v69);
    OUTLINED_FUNCTION_47_1();
    sub_1D759250C(v1);

    goto LABEL_15;
  }
  sub_1D7660DB0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  sub_1D7660010();
LABEL_15:
  OUTLINED_FUNCTION_84();
}

void sub_1D75C947C(void **a1)
{
  uint64_t v4 = v1;
  int v5 = *a1;
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  unint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8);
  if (v7 >> 60 != 15)
  {
    uint64_t v94 = *v6;
    *(void *)&long long v95 = v7;
    sub_1D75934F4(v94, v7);
    sub_1D75934F4(v94, v7);
    uint64_t v8 = sub_1D765FF00();
    sub_1D75941DC(v94, v7);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_42;
    }
    sub_1D765FE30();
    sub_1D75933F0(v94, v95);
  }
  sub_1D75BDC5C(0, 0xF000000000000000);
  sub_1D7591448((uint64_t)&v94);
  uint64_t v2 = *((void *)&v96 + 1);
  uint64_t v3 = v96;
  if (v97 == 3)
  {
    uint64_t v91 = (void *)v94;
    long long v92 = v95;
    LOBYTE(v7) = sub_1D7660DA0();
    if (qword_1EBDEBCD8 == -1)
    {
LABEL_6:
      uint64_t v9 = qword_1EBDEBCD0;
      if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, (os_log_type_t)v7))
      {
        swift_retain();
        sub_1D75D403C(v5);
        swift_retain();
        sub_1D75D403C(v5);
        uint64_t v10 = OUTLINED_FUNCTION_40_0();
        uint64_t v94 = OUTLINED_FUNCTION_38_0();
        *(_DWORD *)uint64_t v10 = 136446466;
        uint64_t v11 = sub_1D75BC478();
        sub_1D758DBE8(v11, v12, &v94);
        OUTLINED_FUNCTION_51_0();
        sub_1D7661020();
        OUTLINED_FUNCTION_36_1();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        v93[0] = v5;
        sub_1D75D403C(v5);
        uint64_t v13 = sub_1D7660B60();
        sub_1D758DBE8(v13, v14, &v94);
        OUTLINED_FUNCTION_51_0();
        sub_1D7661020();
        swift_bridgeObjectRelease();
        sub_1D75D402C(v5);
        sub_1D75D402C(v5);
        _os_log_impl(&dword_1D757C000, v9, (os_log_type_t)v7, "%{public}s: Received pairing consent collection outcome: %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      switch((unint64_t)v5)
      {
        case 0uLL:
        case 2uLL:
          LOBYTE(v94) = 1;
          sub_1D75934F4((uint64_t)v91, v92);
          uint64_t v15 = MEMORY[0x1E4FBC860];
          uint64_t v16 = OUTLINED_FUNCTION_225();
          uint64_t v85 = OUTLINED_FUNCTION_225();
          OUTLINED_FUNCTION_143();
          sub_1D75CC950(v17, v18, v19, v20, v91, v92, 0, 0, v15, v16, v85);
          sub_1D758D424((uint64_t)v91, v92, *((uint64_t *)&v92 + 1), v3, v2, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D758D424((uint64_t)v91, v92, *((uint64_t *)&v92 + 1), v3, v2, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          break;
        case 1uLL:
          OUTLINED_FUNCTION_4_3();
          uint64_t v30 = *(void *)(v4 + 528);
          if (v30
            && *(uint64_t *)(v30
                          + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) >= 10)
          {
            long long v95 = 0u;
            long long v96 = 0u;
            long long v97 = 0u;
            long long v98 = 0u;
            uint64_t v94 = 3;
            unint64_t v99 = 0xC000000000000000;
            uint64_t v100 = 0;
            uint64_t v101 = 0;
            char v102 = 0;
            sub_1D75D20D0((uint64_t)&v94);
            sub_1D75D20E0((uint64_t)&v94, (uint64_t)v93);
            OUTLINED_FUNCTION_66();
          }
          else
          {
            os_log_type_t v31 = sub_1D7660DA0();
            uint64_t v32 = qword_1EBDEBCD0;
            os_log_type_t v33 = v31;
            if (OUTLINED_FUNCTION_78())
            {
              OUTLINED_FUNCTION_104();
              unint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_14_0();
              uint64_t v94 = OUTLINED_FUNCTION_11_4();
              *(_DWORD *)unint64_t v34 = 136446210;
              uint64_t v35 = sub_1D75BC478();
              sub_1D758DBE8(v35, v36, &v94);
              OUTLINED_FUNCTION_51_0();
              sub_1D7661020();
              OUTLINED_FUNCTION_36_1();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1D757C000, v32, v33, "%{public}s: Not sending awaitingUserConsent message to host as its supported wire protocol is too old", v34, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_1();
              OUTLINED_FUNCTION_1();
            }
          }
          sub_1D758D424((uint64_t)v91, v92, *((uint64_t *)&v92 + 1), v3, v2, 3, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
          break;
        case 3uLL:
          uint64_t v37 = static Data.randomBytes(ofLength:)(0x400uLL);
          unint64_t v39 = v38;
          sub_1D75934F4(v37, v38);
          sub_1D75BDC5C(v37, v39);
          OUTLINED_FUNCTION_72();
          sub_1D759127C(v40);
          uint64_t v89 = v37;
          static RemotePairingError.managedConfigurationChallengeRequired(with:)(v37, v39);
          uint64_t v41 = v94;
          uint64_t v42 = v95;
          sub_1D75B0D60();
          uint64_t v43 = (void *)OUTLINED_FUNCTION_3_0();
          uint64_t *v44 = v41;
          v44[1] = v42;
          OUTLINED_FUNCTION_4_3();
          uint64_t v45 = *(void **)(v4 + 528);
          if (v45)
          {
            os_log_type_t v46 = *(char **)(v4 + 528);
          }
          else
          {
            if (qword_1EBDEBCF0 != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_4_3();
            os_log_type_t v46 = (char *)(id)qword_1EBDEBCE0;
          }
          if (*(uint64_t *)&v46[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
          {
            id v68 = v43;
            unint64_t v67 = 0x4000000000000000;
            uint64_t v66 = v43;
          }
          else
          {
            uint64_t v66 = 0;
            unint64_t v67 = 0xC000000000000000;
          }
          id v69 = v45;

          OUTLINED_FUNCTION_121();
          unint64_t v99 = v67;
          uint64_t v100 = 0;
          uint64_t v101 = 0;
          char v102 = 0;
          sub_1D75D20D0((uint64_t)&v94);
          sub_1D75D20E0((uint64_t)&v94, (uint64_t)v93);
          OUTLINED_FUNCTION_66();
          OUTLINED_FUNCTION_134(v70, v71, v72, v73, v74, v75, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0, v83, v84, v86, v87, v89, (uint64_t)v91, v92, *((uint64_t *)&v92 + 1));
          sub_1D75933F0(v90, v39);
          OUTLINED_FUNCTION_8_5(v66, v76, v77, v78, v79, v80, v81, v82, 0, v67, 0, 0);
          break;
        default:
          id v25 = v5;
          sub_1D75AF4C0();
          OUTLINED_FUNCTION_0();
          sub_1D7661690();
          v93[0] = v94;
          v93[1] = v95;
          char v26 = sub_1D7660330();
          swift_bridgeObjectRelease();
          if (v26) {
            *(unsigned char *)(v4 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing) = 1;
          }
          OUTLINED_FUNCTION_72();
          sub_1D759127C(v27);
          OUTLINED_FUNCTION_4_3();
          id v28 = *(void **)(v4 + 528);
          if (v28)
          {
            id v29 = *(id *)(v4 + 528);
          }
          else
          {
            if (qword_1EBDEBCF0 != -1) {
              swift_once();
            }
            OUTLINED_FUNCTION_4_3();
            id v29 = (id)qword_1EBDEBCE0;
          }
          OUTLINED_FUNCTION_188();
          if (v47 != v48)
          {
            char v51 = 0;
            unint64_t v50 = 0xC000000000000000;
          }
          else
          {
            id v49 = v5;
            unint64_t v50 = 0x4000000000000000;
            char v51 = v5;
          }
          id v52 = v28;

          OUTLINED_FUNCTION_121();
          unint64_t v99 = v50;
          uint64_t v100 = 0;
          uint64_t v101 = 0;
          char v102 = 0;
          sub_1D75D20D0((uint64_t)&v94);
          sub_1D75D20E0((uint64_t)&v94, (uint64_t)v93);
          OUTLINED_FUNCTION_66();
          sub_1D75D402C(v5);
          OUTLINED_FUNCTION_134(v53, v54, v55, v56, v57, v58, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0, v83, v84, v86, v87, v88, (uint64_t)v91, v92, *((uint64_t *)&v92 + 1));
          OUTLINED_FUNCTION_8_5(v51, v59, v60, v61, v62, v63, v64, v65, 0, v50, 0, 0);
          break;
      }
      return;
    }
LABEL_42:
    swift_once();
    goto LABEL_6;
  }
  sub_1D758D424(v94, v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  sub_1D7660DB0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  if (OUTLINED_FUNCTION_78())
  {
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_14_0();
    uint64_t v94 = OUTLINED_FUNCTION_11_4();
    uint64_t v21 = OUTLINED_FUNCTION_56_0(4.8751e-34);
    sub_1D758DBE8(v21, v22, &v94);
    OUTLINED_FUNCTION_51_0();
    sub_1D7661020();
    OUTLINED_FUNCTION_36_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_1(&dword_1D757C000, v23, v24, "%{public}s: User responded to pairing prompt but we are no longer in correct state to handle response");
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
}

void sub_1D75C9E38(void *a1)
{
  sub_1D7591448((uint64_t)&v20);
  if (v23 == 1)
  {
    sub_1D758D424(v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    uint64_t v20 = 5;
    long long v21 = 0u;
    long long v22 = 0u;
    LOBYTE(v23) = 4;
    sub_1D759127C(&v20);
    OUTLINED_FUNCTION_4_3();
    uint64_t v3 = *(void **)(v1 + 528);
    if (v3)
    {
      uint64_t v4 = *(char **)(v1 + 528);
    }
    else
    {
      if (qword_1EBDEBCF0 != -1) {
        swift_once();
      }
      OUTLINED_FUNCTION_4_3();
      uint64_t v4 = (char *)(id)qword_1EBDEBCE0;
    }
    if (*(uint64_t *)&v4[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
    {
      id v10 = a1;
      unint64_t v9 = 0x4000000000000000;
    }
    else
    {
      a1 = 0;
      unint64_t v9 = 0xC000000000000000;
    }
    id v11 = v3;

    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    uint64_t v20 = (uint64_t)a1;
    unint64_t v25 = v9;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 0;
    sub_1D75D20D0((uint64_t)&v20);
    sub_1D75D20E0((uint64_t)&v20, (uint64_t)v19);
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_8_5(a1, v12, v13, v14, v15, v16, v17, v18, 0, v9, 0, 0);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
  }
  else
  {
    sub_1D758D424(v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    sub_1D7660DB0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    if (OUTLINED_FUNCTION_20_3())
    {
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_14_0();
      uint64_t v20 = OUTLINED_FUNCTION_11_4();
      uint64_t v5 = OUTLINED_FUNCTION_35_1(4.8751e-34);
      v19[0] = sub_1D758DBE8(v5, v6, &v20);
      OUTLINED_FUNCTION_123();
      OUTLINED_FUNCTION_27_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_3(&dword_1D757C000, v7, v8, "%{public}s: Received PIN display error from user interaction provider but we are no longer in valid state for PIN pairing");
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
  }
}

__n128 *sub_1D75CA120(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, void *a5, uint64_t a6, __n128 *a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a6;
  memcpy((void *)(v14 + 24), a7, 0x92uLL);
  char v15 = *a3;
  swift_beginAccess();
  sub_1D75CFFE4((uint64_t)(a5 + 45), (uint64_t)__src, &qword_1EBDEB4F8);
  if (*(void *)&__src[24])
  {
    sub_1D758AB78((long long *)__src, (uint64_t)__dst);
    uint64_t v35 = __dst[3];
    uint64_t v32 = __dst[4];
    uint64_t v36 = a4;
    __swift_project_boxed_opaque_existential_0Tm(__dst, __dst[3]);
    uint64_t v16 = a5[27];
    uint64_t v17 = a5[28];
    __swift_project_boxed_opaque_existential_0Tm(a5 + 24, v16);
    uint64_t v33 = a1;
    uint64_t v34 = a2;
    uint64_t v18 = a7;
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 80);
    swift_retain();
    sub_1D75D48CC(v18, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    LOBYTE(v16) = v19(v16, v17);
    __src[0] = v15;
    uint64_t v20 = a5[29];
    long long v21 = (void *)swift_allocObject();
    v21[2] = sub_1D75D4BC0;
    v21[3] = v14;
    void v21[4] = a5;
    long long v22 = *(void (**)(uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, void *, uint64_t, void (*)(uint64_t), void *, uint64_t, uint64_t))(v32 + 8);
    swift_retain();
    swift_retain();
    v22(v16 & 1, v33, v34, __src, v36, a5, v20, sub_1D75D4C0C, v21, v35, v32);
    a7 = v18;
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1D75D48CC(a7, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704, (uint64_t (*)(void))sub_1D75D480C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
    sub_1D75D505C((uint64_t)__src, &qword_1EBDEB4F8);
    __dst[3] = MEMORY[0x1E4FBB1A0];
    __dst[0] = 0xD00000000000001FLL;
    __dst[1] = 0x80000001D7674340;
    LOBYTE(__dst[4]) = 1;
    __src[0] = 3;
    Swift::String v23 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
    sub_1D7592DD0((uint64_t)__dst);
    sub_1D7592D84();
    long long v24 = (void *)swift_allocError();
    *(unsigned char *)uint64_t v25 = 3;
    *(Swift::String *)(v25 + 8) = v23;
    *(_OWORD *)(v25 + 24) = 0u;
    *(_OWORD *)(v25 + 40) = 0u;
    *(void *)(v25 + 56) = 0;
    swift_beginAccess();
    uint64_t v26 = (void *)a5[66];
    if (v26)
    {
      swift_bridgeObjectRetain();
      id v27 = 0;
      id v28 = v26;
    }
    else
    {
      swift_bridgeObjectRetain();
      id v29 = 0;
      if (qword_1EBDEBCF0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v28 = (id)qword_1EBDEBCE0;
      uint64_t v26 = 0;
    }
    id v30 = v26;
    sub_1D763B958(v24, (uint64_t)v28, (uint64_t)v41);

    sub_1D75D2148((uint64_t)v41, (uint64_t)v40);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      *(void *)__src = a7->n128_u64[1];
      sub_1D75D2148((uint64_t)v40, (uint64_t)&__src[8]);
      memcpy(__dst, __src, 0x82uLL);
      sub_1D75D4AD4((uint64_t)__dst);
      sub_1D75D20E0((uint64_t)__dst, (uint64_t)v37);
      sub_1D75D42CC((uint64_t)v40);
      sub_1D75C0C5C();
      swift_release();
      sub_1D75D42CC((uint64_t)v40);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    sub_1D75D42CC((uint64_t)v40);
    swift_release();
  }
  swift_release();
  return sub_1D75D48CC(a7, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
}

void sub_1D75CA6A4(uint64_t a1, void (*a2)(unsigned char *), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24))
  {
    swift_beginAccess();
    unint64_t v9 = *(void **)(a4 + 528);
    if (v9)
    {
      id v10 = v5;
      id v11 = v9;
    }
    else
    {
      id v12 = v5;
      if (qword_1EBDEBCF0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v11 = (id)qword_1EBDEBCE0;
      unint64_t v9 = 0;
    }
    id v13 = v9;
    sub_1D763B958(v5, (uint64_t)v11, (uint64_t)&v16);

    sub_1D75D2148((uint64_t)&v16, (uint64_t)v15);
    sub_1D75D2148((uint64_t)v15, (uint64_t)v14);
    a2(v14);
    sub_1D75D4C18(v5, v6, v7, 1);
    sub_1D75D42CC((uint64_t)v15);
  }
  else
  {
    __int16 v16 = *(void *)a1;
    uint64_t v17 = v6;
    unint64_t v18 = v7;
    sub_1D75D4C2C((uint64_t)&v16);
    sub_1D75D2148((uint64_t)&v16, (uint64_t)v15);
    sub_1D75934F4(v6, v7);
    a2(v15);
    sub_1D75D4C18(v5, v6, v7, 0);
  }
}

__n128 *sub_1D75CA844(uint64_t a1, uint64_t a2, __n128 *a3)
{
  sub_1D75CBD1C((uint64_t)&v10);
  uint64_t v4 = v19;
  unint64_t v5 = v20;
  long long v23 = v11;
  uint64_t v22 = v10;
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  uint64_t v28 = v16;
  uint64_t v29 = v17;
  char v30 = v18;
  uint64_t v31 = v19;
  unint64_t v32 = v20;
  char v33 = v21;
  sub_1D75D4AE8((uint64_t)&v22);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    __src[0] = a3->n128_u64[1];
    sub_1D75D2148((uint64_t)&v22, (uint64_t)&__src[1]);
    memcpy(__dst, __src, 0x82uLL);
    sub_1D75D4AD4((uint64_t)__dst);
    sub_1D75D20E0((uint64_t)__dst, (uint64_t)v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D75AC3B4(v4, v5);
    sub_1D75C0C5C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1D75941DC(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1D75941DC(v4, v5);
  swift_release();
  return sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
}

__n128 *sub_1D75CAC20(uint64_t a1, uint64_t a2, __n128 *a3)
{
  unint64_t v5 = (void **)(a1 + 120);
  swift_beginAccess();
  uint64_t v6 = *(void **)(a1 + 120);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = CUPairedPeer.remoteUnlockKey.getter();
    unint64_t v10 = v9;

    if (v10 >> 60 != 15)
    {
      sub_1D75941DC(v8, v10);
      uint64_t v12 = MEMORY[0x1E4FBB1A0];
      __dst[3] = MEMORY[0x1E4FBB1A0];
      __dst[0] = 0xD00000000000002FLL;
      __dst[1] = 0x80000001D76743B0;
      LOBYTE(__dst[4]) = 1;
      sub_1D7592D84();
      uint64_t v13 = (void *)swift_allocError();
      uint64_t v15 = v14;
      __src[0] = 2;
      Swift::String v16 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
      sub_1D7592DD0((uint64_t)__dst);
      *(unsigned char *)uint64_t v15 = 2;
      *(Swift::String *)(v15 + 8) = v16;
      *(_OWORD *)(v15 + 24) = 0u;
      *(_OWORD *)(v15 + 40) = 0u;
      *(void *)(v15 + 56) = 0;
      swift_willThrow();
LABEL_10:
      sub_1D7660DB0();
      if (qword_1EBDEBCD8 != -1) {
        swift_once();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBD0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1D7664B10;
      __dst[0] = v13;
      id v23 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      uint64_t v24 = sub_1D7660B60();
      uint64_t v26 = v25;
      *(void *)(v22 + 56) = v12;
      *(void *)(v22 + 64) = sub_1D75D4054();
      *(void *)(v22 + 32) = v24;
      *(void *)(v22 + 40) = v26;
      sub_1D7660010();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v27 = *(void **)(a1 + 528);
      if (v27)
      {
        id v28 = *(id *)(a1 + 528);
      }
      else
      {
        if (qword_1EBDEBCF0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v28 = (id)qword_1EBDEBCE0;
        uint64_t v27 = 0;
      }
      id v29 = v27;
      sub_1D763B958(v13, (uint64_t)v28, (uint64_t)v45);

      sub_1D75D2148((uint64_t)v45, (uint64_t)v44);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        *(void *)__src = a3->n128_u64[1];
        sub_1D75D2148((uint64_t)v44, (uint64_t)&__src[8]);
        memcpy(__dst, __src, 0x82uLL);
        sub_1D75D4AD4((uint64_t)__dst);
        sub_1D75D20E0((uint64_t)__dst, (uint64_t)v41);
        sub_1D75D42CC((uint64_t)v44);
        sub_1D75C0C5C();
        swift_release();
        sub_1D75D42CC((uint64_t)v44);
      }
      else
      {
      }
      sub_1D75D42CC((uint64_t)v44);
LABEL_21:
      swift_release();
      return sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    }
  }
  type metadata accessor for RemoteUnlockKeypair();
  swift_allocObject();
  long long v11 = sub_1D764F300();
  swift_beginAccess();
  sub_1D75CFFE4(a1 + 440, (uint64_t)__src, &qword_1EBDEAC90);
  if (*(void *)&__src[24])
  {
    sub_1D758AB78((long long *)__src, (uint64_t)__dst);
    sub_1D764F7AC((uint64_t)__dst);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
  }
  else
  {
    sub_1D75D505C((uint64_t)__src, &qword_1EBDEAC90);
  }
  sub_1D764F46C();
  swift_beginAccess();
  unint64_t v17 = v11[5];
  if (v17 >> 60 == 15 || (v18 = v11[4], swift_beginAccess(), unint64_t v40 = v11[3], v40 >> 60 == 15))
  {
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    __dst[3] = MEMORY[0x1E4FBB1A0];
    __dst[0] = 0xD000000000000019;
    __dst[1] = 0x80000001D7674390;
    LOBYTE(__dst[4]) = 1;
    sub_1D7592D84();
    uint64_t v13 = (void *)swift_allocError();
    uint64_t v20 = v19;
    __src[0] = 3;
    Swift::String v21 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
    sub_1D7592DD0((uint64_t)__dst);
    *(unsigned char *)uint64_t v20 = 3;
    *(Swift::String *)(v20 + 8) = v21;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 40) = 0u;
    *(void *)(v20 + 56) = 0;
    swift_willThrow();
    swift_release();
    goto LABEL_10;
  }
  uint64_t v31 = *v5;
  if (*v5)
  {
    uint64_t v32 = v11[2];
    sub_1D75AC3B4(v18, v17);
    sub_1D75AC3B4(v18, v17);
    id v33 = v31;
    uint64_t v38 = v32;
    sub_1D75AC3B4(v32, v40);
    uint64_t v39 = v18;
    CUPairedPeer.remoteUnlockKey.setter(v18, v17);

    swift_beginAccess();
    sub_1D758B1EC(a1 + 400, (uint64_t)v44);
    uint64_t v34 = v44[4];
    __swift_project_boxed_opaque_existential_0Tm(v44, v44[3]);
    uint64_t v35 = *(void **)(a1 + 120);
    if (v35)
    {
      uint64_t v37 = *(void (**)(void))(v34 + 24);
      id v36 = v35;
      v37();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
      v45[0] = v38;
      v45[1] = v40;
      sub_1D75D4DDC((uint64_t)v45);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        *(void *)__src = a3->n128_u64[1];
        sub_1D75D2148((uint64_t)v45, (uint64_t)&__src[8]);
        memcpy(__dst, __src, 0x82uLL);
        sub_1D75D4AD4((uint64_t)__dst);
        sub_1D75D20E0((uint64_t)__dst, (uint64_t)v41);
        sub_1D75AC3B4(v38, v40);
        sub_1D75934F4(v38, v40);
        sub_1D75C0C5C();
        swift_release();
        sub_1D75941DC(v38, v40);
        sub_1D75941DC(v38, v40);
      }
      sub_1D764F3B0();
      sub_1D75941DC(v38, v40);
      sub_1D75941DC(v39, v17);
      swift_release();
      goto LABEL_21;
    }
  }
  else
  {
    swift_release();
    sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    __break(1u);
  }
  swift_release();
  uint64_t result = sub_1D75D48CC(a3, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  __break(1u);
  return result;
}

__n128 *sub_1D75CB49C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  swift_beginAccess();
  unint64_t v9 = *(void **)(a3 + 120);
  if (v9)
  {
    type metadata accessor for RemoteUnlockKeypair();
    id v10 = v9;
    uint64_t v11 = CUPairedPeer.remoteUnlockKey.getter();
    uint64_t v13 = v12;

    sub_1D75934F4(a1, a2);
    sub_1D764EA98(a1, a2, v11, v13);
    swift_beginAccess();
    sub_1D75CFFE4(a3 + 440, (uint64_t)__src, &qword_1EBDEAC90);
    if (*(void *)&__src[24])
    {
      sub_1D758AB78((long long *)__src, (uint64_t)__dst);
      sub_1D764F7AC((uint64_t)__dst);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
    }
    else
    {
      sub_1D75D505C((uint64_t)__src, &qword_1EBDEAC90);
    }
    sub_1D764F5A0();
    sub_1D764F3B0();
    sub_1D75D4DE8((uint64_t)v18);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      *(void *)__src = a5->n128_u64[1];
      sub_1D75D2148((uint64_t)v18, (uint64_t)&__src[8]);
      memcpy(__dst, __src, 0x82uLL);
      sub_1D75D4AD4((uint64_t)__dst);
      sub_1D75D20E0((uint64_t)__dst, (uint64_t)v15);
      sub_1D75C0C5C();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
    swift_release();
    return sub_1D75D48CC(a5, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  }
  else
  {
    swift_release();
    uint64_t result = sub_1D75D48CC(a5, (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24, (uint64_t (*)(void))sub_1D75D1FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75CB8E0()
{
  uint64_t v0 = (void *)sub_1D7660AE0();
  uint64_t v1 = MGCopyAnswer();

  if (v1 && (swift_dynamicCast() & 1) != 0) {
    return v3;
  }
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D75B0D60();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0();
  sub_1D76616A0();
  return swift_willThrow();
}

id sub_1D75CBA14()
{
  uint64_t v0 = (void *)sub_1D7660AE0();
  uint64_t v1 = MGCopyAnswer();

  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_unsignedLongLongValue);
      swift_unknownObjectRelease();
      return v3;
    }
    swift_unknownObjectRelease();
  }
  sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  if (OUTLINED_FUNCTION_20_3())
  {
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_181();
    uint64_t v4 = OUTLINED_FUNCTION_35_1(4.8751e-34);
    OUTLINED_FUNCTION_159(v4, v5, v6);
    OUTLINED_FUNCTION_169();
    OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_27_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_3(&dword_1D757C000, v7, v8, "%{public}s: Unable to fetch device ECID");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  return 0;
}

void sub_1D75CBBA8()
{
  uint64_t v0 = (void *)sub_1D7660AE0();
  uint64_t v1 = MGCopyAnswer();

  if (v1)
  {
    if (!swift_dynamicCast())
    {
      sub_1D7660DD0();
      if (qword_1EBDEBCD8 != -1) {
        swift_once();
      }
      if (OUTLINED_FUNCTION_20_3())
      {
        OUTLINED_FUNCTION_41_0();
        OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_181();
        uint64_t v2 = OUTLINED_FUNCTION_35_1(4.8751e-34);
        OUTLINED_FUNCTION_159(v2, v3, v4);
        OUTLINED_FUNCTION_123();
        OUTLINED_FUNCTION_27_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_19_3(&dword_1D757C000, v5, v6, "%{public}s: Unable to fetch device serial number");
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D75CBD1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(unsigned int *)(v1 + 240);
  unint64_t v5 = v4 | ((unint64_t)*(unsigned __int8 *)(v1 + 244) << 32);
  if ((v4 & 0x8000) != 0)
  {
    OUTLINED_FUNCTION_102();
    uint64_t result = sub_1D7661260();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_1D75CFFE4(v1 + 480, (uint64_t)&v35, qword_1EBDEC0B8);
    if (v36)
    {
      sub_1D758AB78(&v35, (uint64_t)&v37);
      uint64_t v6 = v39;
      uint64_t v7 = v40;
      __swift_project_boxed_opaque_existential_0Tm(&v37, v39);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 8))(HIDWORD(v5) & 1, v6, v7);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v37);
    }
    sub_1D75D505C((uint64_t)&v35, qword_1EBDEC0B8);
    unint64_t v9 = (void *)sub_1D7660AE0();
    uint64_t v10 = MGCopyAnswer();

    if (!v10) {
      goto LABEL_11;
    }
    *(void *)&long long v35 = v10;
    if ((OUTLINED_FUNCTION_223() & 1) == 0) {
      goto LABEL_11;
    }
    uint64_t v11 = v38;
    uint64_t v41 = v37;
    uint64_t v12 = (void *)sub_1D7660AE0();
    uint64_t v13 = MGCopyAnswer();

    if (!v13 || (*(void *)&long long v35 = v13, !OUTLINED_FUNCTION_223()))
    {
LABEL_10:
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v39 = MEMORY[0x1E4FBB1A0];
      OUTLINED_FUNCTION_50_0();
      uint64_t v37 = v18;
      uint64_t v38 = v19;
      LOBYTE(v40) = 1;
      sub_1D7592D84();
      OUTLINED_FUNCTION_3_0();
      LOBYTE(v35) = 1;
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v35);
      OUTLINED_FUNCTION_195();
      sub_1D7592DD0((uint64_t)&v37);
      OUTLINED_FUNCTION_107();
      return swift_willThrow();
    }
    uint64_t v14 = v37;
    uint64_t v15 = v38;
    uint64_t v16 = sub_1D75CB8E0();
    if (v2)
    {

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    uint64_t v32 = v16;
    uint64_t v33 = v14;
    unint64_t v34 = v17;
    uint64_t v20 = v5 & 0x100000000;
    type metadata accessor for DeviceKeyValueStore();
    id v21 = static DeviceKeyValueStore.keyValueStoreContainingStandardKeys()();
    uint64_t v22 = sub_1D75B635C(BYTE4(v5) & 1);
    uint64_t v24 = v23;

    if (v20)
    {
      id v25 = sub_1D75CBA14();
      char v27 = v26 & 1;
      uint64_t v28 = v41;
      uint64_t v30 = v33;
      unint64_t v29 = v34;
      uint64_t v31 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v25 = 0;
      uint64_t v31 = 0;
      unint64_t v29 = 0xE000000000000000;
      char v27 = 1;
      uint64_t v28 = v41;
      uint64_t v30 = v33;
    }
    *(void *)a1 = v31;
    *(void *)(a1 + 8) = v29;
    *(void *)(a1 + 16) = v28;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v30;
    *(void *)(a1 + 40) = v15;
    *(void *)(a1 + 48) = v31;
    *(void *)(a1 + 56) = v29;
    *(void *)(a1 + 64) = v25;
    *(unsigned char *)(a1 + 72) = v27;
    *(void *)(a1 + 80) = v22;
    *(void *)(a1 + 88) = v24;
    *(unsigned char *)(a1 + 96) = BYTE4(v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1D75CC220(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v5 = (void *)*((void *)a1 + 1);
  unint64_t v4 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v39 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 5);
  os_log_type_t v8 = sub_1D7660DD0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v40 = v3;
  unint64_t v9 = qword_1EBDEBCD0;
  if (OUTLINED_FUNCTION_20_3())
  {
    swift_retain();
    sub_1D75934F4((uint64_t)v5, v4);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D75934F4((uint64_t)v5, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = OUTLINED_FUNCTION_40_0();
    uint64_t v41 = OUTLINED_FUNCTION_38_0();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = sub_1D75BC478();
    sub_1D758DBE8(v11, v12, &v41);
    OUTLINED_FUNCTION_167();
    sub_1D7661020();
    OUTLINED_FUNCTION_27_1();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    LOBYTE(v42) = v2;
    BYTE1(v42) = v40;
    uint64_t v43 = (uint64_t)v5;
    unint64_t v44 = v4;
    uint64_t v45 = v39;
    uint64_t v46 = v6;
    uint64_t v47 = v7;
    sub_1D75934F4((uint64_t)v5, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1D7660B60();
    uint64_t v42 = sub_1D758DBE8(v13, v14, &v41);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    sub_1D75933F0((uint64_t)v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75933F0((uint64_t)v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v9, v8, "%{public}s: Received pairing data from peer: %s", (uint8_t *)v10, 0x16u);
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  if (v2)
  {
    OUTLINED_FUNCTION_34_0();
    if ((v15 & 0x8000) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v16 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v16)
    {
LABEL_9:
      OUTLINED_FUNCTION_209();
      switch(v40)
      {
        case 1:
          OUTLINED_FUNCTION_17_1();
          goto LABEL_24;
        default:
          char v28 = sub_1D7661560();
          swift_bridgeObjectRelease();
          if (v28)
          {
LABEL_24:
            LOBYTE(v42) = 1;
            BYTE1(v42) = v40;
            OUTLINED_FUNCTION_152();
            sub_1D75C8590();
          }
          else
          {
            OUTLINED_FUNCTION_200();
            switch(v40)
            {
              case 0:
              case 1:
              case 2:
                char v29 = OUTLINED_FUNCTION_211();
                swift_bridgeObjectRelease();
                if (v29) {
                  goto LABEL_31;
                }
                if (!v40) {
                  goto LABEL_32;
                }
                if (v40 == 1)
                {
                  OUTLINED_FUNCTION_200();
LABEL_32:
                  char v30 = OUTLINED_FUNCTION_211();
                  swift_bridgeObjectRelease();
                  uint64_t v31 = v6;
                  if ((v30 & 1) == 0)
                  {
                    LOBYTE(v42) = v40;
                    uint64_t v32 = MEMORY[0x1E4FBC860];
                    uint64_t v33 = OUTLINED_FUNCTION_224();
                    uint64_t v38 = OUTLINED_FUNCTION_224();
                    OUTLINED_FUNCTION_143();
                    sub_1D75CC950(v34, v35, v36, v37, v5, v4, 0, 0, v32, v33, v38);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    return;
                  }
                }
                else
                {
                  OUTLINED_FUNCTION_17_1();
                  uint64_t v31 = v6;
                }
                LOBYTE(v42) = 1;
                BYTE1(v42) = v40;
                uint64_t v43 = (uint64_t)v5;
                unint64_t v44 = v4;
                uint64_t v45 = v39;
                uint64_t v46 = v31;
                uint64_t v47 = v7;
LABEL_36:
                sub_1D75C8CF0();
                break;
              case 3:
                OUTLINED_FUNCTION_17_1();
LABEL_31:
                LOBYTE(v42) = 1;
                BYTE1(v42) = v40;
                OUTLINED_FUNCTION_152();
                goto LABEL_36;
              default:
                JUMPOUT(0);
            }
          }
          break;
      }
      return;
    }
  }
  sub_1D7591448((uint64_t)&v42);
  if (v47 - 1 < 2
    || (v47 == 4 ? (BOOL v20 = v42 == 3) : (BOOL v20 = 0), v20 && !(v44 | v43 | v45 | v46)))
  {
    sub_1D758D424(v42, v43, v44, v45, v46, v47, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    unint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = (void *)sub_1D765FEB0();
      objc_msgSend(v18, sel_receivedData_, v19);

      return;
    }
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_199();
    uint64_t v42 = v26 + 35;
    uint64_t v43 = 0x80000001D7673D60;
    char v25 = 1;
    LOBYTE(v46) = 1;
    sub_1D7592D84();
    uint64_t v22 = (void *)OUTLINED_FUNCTION_3_0();
    uint64_t v24 = v27;
  }
  else
  {
    sub_1D758D424(v42, v43, v44, v45, v46, v47, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_199();
    uint64_t v42 = v21 + 34;
    uint64_t v43 = 0x80000001D7673D20;
    LOBYTE(v46) = 1;
    sub_1D7592D84();
    uint64_t v22 = (void *)OUTLINED_FUNCTION_3_0();
    uint64_t v24 = v23;
    char v25 = 2;
  }
  LOBYTE(v41) = v25;
  ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v41);
  OUTLINED_FUNCTION_93();
  sub_1D7592DD0((uint64_t)&v42);
  *(unsigned char *)uint64_t v24 = v25;
  *(void *)(v24 + 8) = &v42;
  *(void *)(v24 + 16) = v4;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(void *)(v24 + 56) = 0;
  sub_1D759250C(v22);
}

void sub_1D75CC950(unsigned __int8 *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v305 = a7;
  uint64_t v313 = a8;
  uint64_t v341 = a5;
  unint64_t v347 = a6;
  uint64_t v353 = a4;
  uint64_t v329 = a2;
  uint64_t v335 = a3;
  uint64_t isUniquelyReferenced_nonNull_native = *a1;
  LOBYTE(v12) = sub_1D7660DA0();
  if (qword_1EBDEBCD8 != -1) {
    goto LABEL_97;
  }
LABEL_2:
  uint64_t v13 = qword_1EBDEBCD0;
  uint64_t v359 = isUniquelyReferenced_nonNull_native;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, (os_log_type_t)v12))
  {
    swift_retain_n();
    unint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_14_0();
    *(void *)&long long aBlock = OUTLINED_FUNCTION_11_4();
    *(_DWORD *)unint64_t v14 = 136446210;
    uint64_t v15 = sub_1D75BC478();
    v406[0] = OUTLINED_FUNCTION_71(v15, v16, v17, v18, v19, v20, v21, v22, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
                v274,
                v282,
                v289,
                v297,
                v305,
                v313,
                (uint64_t)v321,
                v329,
                v335,
                (uint64_t)v341,
                v347,
                (uint64_t)v353,
                isUniquelyReferenced_nonNull_native,
                v365,
                v371,
                v378,
                v384,
                v390,
                v396,
                *((uint64_t *)&v396 + 1),
                v397,
                v398,
                v399,
                v400,
                v401,
                v402,
                v403,
                v404,
                v405,
                v406[0],
                v406[1],
                v407,
                *((uint64_t *)&v407 + 1),
                v408,
                v409,
                v410,
                v411,
                v412,
                v413,
                v414,
                v415,
                v416,
                v417,
                v418);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v13, (os_log_type_t)v12, "%{public}s: _configureNewPairingSession", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t isUniquelyReferenced_nonNull_native = v359;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5E1A0]), sel_init);
  uint64_t v432 = a11;
  uint64_t v433 = a10;
  uint64_t v24 = v371;
  uint64_t v25 = *(void *)(v371 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(v23, sel_setDispatchQueue_, v25);
  OUTLINED_FUNCTION_146();
  if (isUniquelyReferenced_nonNull_native)
  {
    if (v26 < 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = OUTLINED_FUNCTION_2_0();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v27 = 2;
        goto LABEL_15;
      }
    }
    uint64_t v27 = 1;
  }
  else
  {
    if (v26 < 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = OUTLINED_FUNCTION_2_0();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v27 = 4;
        goto LABEL_15;
      }
    }
    uint64_t v27 = 3;
  }
LABEL_15:
  uint64_t v365 = a9;
  objc_msgSend(v23, sel_setSessionType_, v27);
  objc_msgSend(v23, sel_setFlags_, 8);
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_82();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v25;
  *(void *)(v28 + 24) = v23;
  uint64_t v422 = sub_1D75D514C;
  os_log_t v423 = (void *)v28;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v420 = (uint64_t)sub_1D75CE1AC;
  uint64_t v421 = &block_descriptor_1;
  char v29 = _Block_copy(&aBlock);
  id v30 = v23;
  swift_release();
  objc_msgSend(v30, sel_setCompletionHandler_, v29);
  _Block_release(v29);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = isUniquelyReferenced_nonNull_native;
  *(void *)(v31 + 24) = v30;
  *(void *)(v31 + 32) = v353;
  *(void *)(v31 + 40) = v371;
  uint64_t v422 = sub_1D75D51B4;
  os_log_t v423 = (void *)v31;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v420 = (uint64_t)sub_1D75CE60C;
  uint64_t v421 = &block_descriptor_201;
  uint64_t v32 = (long long *)_Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v33 = v30;
  uint64_t v34 = swift_release();
  OUTLINED_FUNCTION_174(v34, sel_setSendDataHandler_);
  _Block_release(v32);
  OUTLINED_FUNCTION_209();
  uint64_t v35 = MEMORY[0x1E4FBB1A0];
  uint64_t v353 = v33;
  switch(isUniquelyReferenced_nonNull_native)
  {
    case 1:
      OUTLINED_FUNCTION_146();
      if (v36 < 0)
      {
        sub_1D75BBEF4((uint64_t)&aBlock);
        uint64_t v71 = (uint64_t)v421;
        if (!v421) {
          goto LABEL_99;
        }
        uint64_t v268 = *((void *)&aBlock + 1);
        uint64_t v276 = aBlock;
        uint64_t v72 = v424;
        uint64_t v291 = (uint64_t)v423;
        uint64_t v299 = (uint64_t)v422;
        uint64_t v307 = v426;
        uint64_t v315 = v427;
        id v323 = v425;
        uint64_t v254 = v428;
        uint64_t v261 = v420;
        uint64_t v247 = v429;
        HIDWORD(v240) = v430;
        OUTLINED_FUNCTION_4_3();
        uint64_t v73 = *(void *)(v371 + 528);
        if (!v73
          || *(uint64_t *)(v73
                        + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) <= 16)
        {
          OUTLINED_FUNCTION_153();
          v406[0] = 0xD000000000000012;
          v406[1] = v74;
          uint64_t v32 = (long long *)MEMORY[0x1E4FBB1B0];
          OUTLINED_FUNCTION_52_0();
          *((void *)&v407 + 1) = v35;
          v406[0] = v72;
          v406[1] = (uint64_t)v323;
          swift_bridgeObjectRetain();
          sub_1D758CB10((uint64_t)v406, (uint64_t)&aBlock);
          OUTLINED_FUNCTION_153();
          v406[0] = 0xD000000000000012;
          v406[1] = v75;
          OUTLINED_FUNCTION_52_0();
          if (v315)
          {
            OUTLINED_FUNCTION_189();
          }
          else
          {
            *((void *)&v407 + 1) = MEMORY[0x1E4FBC538];
            uint64_t v76 = v307;
          }
          v406[0] = v76;
          sub_1D758CB10((uint64_t)v406, (uint64_t)&aBlock);
        }
        OUTLINED_FUNCTION_153();
        v406[0] = 0xD000000000000012;
        v406[1] = v97;
        uint64_t v98 = MEMORY[0x1E4FBB1A0];
        OUTLINED_FUNCTION_43_0();
        uint64_t v99 = sub_1D75CB8E0();
        OUTLINED_FUNCTION_33_3(v99, v100, v101, v102, v103, v104, v105, v106, v204, v210, v216, v222, v228, v234, v240, v247, v254, v261, v268,
          v276,
          v72,
          v291,
          v299,
          v307,
          v315,
          (uint64_t)v323,
          v329,
          v335,
          (uint64_t)v341,
          v347,
          (uint64_t)v33,
          v359,
          a9,
          v371,
          v378,
          v384,
          v390,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          v99,
          v100,
          v407,
          v98,
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        OUTLINED_FUNCTION_209();
        v406[0] = 0xD000000000000012;
        v406[1] = v107;
        OUTLINED_FUNCTION_43_0();
        id v108 = sub_1D75CBA14();
        uint64_t v55 = v367;
        if (v109) {
          OUTLINED_FUNCTION_189();
        }
        else {
          *((void *)&v407 + 1) = MEMORY[0x1E4FBC538];
        }
        uint64_t v124 = v285;
        OUTLINED_FUNCTION_33_3((uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v206, v212, v218, v224, v230, v236, v242, v249, v256, v263, v270,
          v278,
          v285,
          v293,
          v301,
          v309,
          v317,
          (uint64_t)v325,
          v331,
          v337,
          v343,
          v349,
          v355,
          v361,
          v367,
          v373,
          v380,
          v386,
          v392,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          (char)v108,
          v406[1],
          v407,
          *((uint64_t *)&v407 + 1),
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        OUTLINED_FUNCTION_179();
        OUTLINED_FUNCTION_43_0();
        sub_1D75CBBA8();
        if (v126)
        {
          *((void *)&v407 + 1) = v98;
          v406[0] = v125;
          v406[1] = v126;
        }
        else
        {
          *(_OWORD *)uint64_t v406 = 0u;
          long long v407 = 0u;
        }
        uint64_t v143 = v295;
        uint64_t v142 = v303;
        OUTLINED_FUNCTION_33_3(v125, v126, v127, v128, v129, v130, v131, v132, v208, v214, v220, v226, v232, v238, v244, v251, v258, v265, v272,
          v280,
          v287,
          v295,
          v303,
          v311,
          v319,
          (uint64_t)v327,
          v333,
          v339,
          v345,
          v351,
          v357,
          v363,
          v369,
          v375,
          v382,
          v388,
          v394,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          v406[0],
          v406[1],
          v407,
          *((uint64_t *)&v407 + 1),
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        if (*(unsigned char *)(v24 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) != 2
          && (*(unsigned char *)(v24 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions + 1) & 1) != 0)
        {
          OUTLINED_FUNCTION_92();
        }
        OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_82();
        uint64_t v422 = sub_1D75D5310;
        os_log_t v423 = v32;
        *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v420 = (uint64_t)sub_1D75CE91C;
        uint64_t v421 = &block_descriptor_208;
        uint64_t v144 = _Block_copy(&aBlock);
        uint64_t v145 = swift_release();
        OUTLINED_FUNCTION_174(v145, sel_setPromptForPINHandler_);
        _Block_release(v144);
        LOBYTE(v228) = BYTE4(v240);
        sub_1D759423C(v274, v267, v260, v71, v142, v143, v124, (uint64_t)v321, v305, v313, v253, v246);
        uint64_t v54 = 0;
      }
      else
      {
        if ((v36 & 0x100) != 0)
        {
          OUTLINED_FUNCTION_92();
        }
        else if (_RPIsAppleInternal())
        {
          if (qword_1EA82A900 != -1) {
            swift_once();
          }
          uint64_t v32 = &xmmword_1EA82B0C0;
          OUTLINED_FUNCTION_4_3();
          v434[0] = xmmword_1EA82B0C0;
          v434[1] = unk_1EA82B0D0;
          uint64_t v435 = qword_1EA82B0E0;
          sub_1D759CC08((uint64_t)v434);
          uint64_t v37 = sub_1D7595FE4();
          unint64_t v39 = v38;
          sub_1D759CC40((uint64_t)v434);
          if (v39)
          {
            os_log_type_t v40 = sub_1D7660DD0();
            uint64_t v41 = qword_1EBDEBCD0;
            if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v40))
            {
              swift_retain_n();
              swift_bridgeObjectRetain_n();
              uint64_t v42 = OUTLINED_FUNCTION_40_0();
              *(void *)&long long aBlock = OUTLINED_FUNCTION_38_0();
              *(_DWORD *)uint64_t v42 = 136446466;
              uint64_t v43 = sub_1D75BC478();
              v406[0] = OUTLINED_FUNCTION_71(v43, v44, v45, v46, v47, v48, v49, v50, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
                          v274,
                          v282,
                          v289,
                          v297,
                          v305,
                          v313,
                          (uint64_t)v321,
                          v329,
                          v335,
                          (uint64_t)v341,
                          v347,
                          (uint64_t)v33,
                          v359,
                          a9,
                          v371,
                          v378,
                          v384,
                          v390,
                          v396,
                          *((uint64_t *)&v396 + 1),
                          v397,
                          v398,
                          v399,
                          v400,
                          v401,
                          v402,
                          v403,
                          v404,
                          v405,
                          v406[0],
                          v406[1],
                          v407,
                          *((uint64_t *)&v407 + 1),
                          v408,
                          v409,
                          v410,
                          v411,
                          v412,
                          v413,
                          v414,
                          v415,
                          v416,
                          v417,
                          v418);
              sub_1D7661020();
              OUTLINED_FUNCTION_196();
              swift_bridgeObjectRelease();
              *(_WORD *)(v42 + 12) = 2080;
              uint64_t v32 = (long long *)(v42 + 14);
              swift_bridgeObjectRetain();
              v406[0] = sub_1D758DBE8(v37, v39, (uint64_t *)&aBlock);
              sub_1D7661020();
              swift_bridgeObjectRelease_n();
              OUTLINED_FUNCTION_139(&dword_1D757C000, v41, v51, "%{public}s: Using fixed pairing PIN from defaults: %s");
              swift_arrayDestroy();
              OUTLINED_FUNCTION_1();
              uint64_t v24 = v371;
              OUTLINED_FUNCTION_1();
            }
            id v33 = v353;
            sub_1D75D53BC(v37, v39, v353);
          }
        }
        OUTLINED_FUNCTION_209();
        v406[0] = (uint64_t)v32;
        v406[1] = v78;
        uint64_t v79 = MEMORY[0x1E4FBB1A0];
        OUTLINED_FUNCTION_43_0();
        uint64_t v80 = sub_1D75CB8E0();
        OUTLINED_FUNCTION_33_3(v80, v81, v82, v83, v84, v85, v86, v87, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
          v274,
          v282,
          v289,
          v297,
          v305,
          v313,
          0,
          v329,
          v335,
          (uint64_t)v341,
          v347,
          (uint64_t)v353,
          v359,
          v365,
          v371,
          v378,
          v384,
          v390,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          v80,
          v81,
          v407,
          v79,
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        OUTLINED_FUNCTION_153();
        v406[0] = (uint64_t)v32;
        v406[1] = v88;
        OUTLINED_FUNCTION_43_0();
        id v89 = sub_1D75CBA14();
        if (v90) {
          OUTLINED_FUNCTION_189();
        }
        else {
          *((void *)&v407 + 1) = MEMORY[0x1E4FBC538];
        }
        OUTLINED_FUNCTION_33_3((uint64_t)v89, v90, v91, v92, v93, v94, v95, v96, v205, v211, v217, v223, v229, v235, v241, v248, v255, v262, v269,
          v277,
          v284,
          v292,
          v300,
          v308,
          v316,
          (uint64_t)v324,
          v330,
          v336,
          v342,
          v348,
          v354,
          v360,
          v366,
          v372,
          v379,
          v385,
          v391,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          (char)v89,
          v406[1],
          v407,
          *((uint64_t *)&v407 + 1),
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        OUTLINED_FUNCTION_179();
        OUTLINED_FUNCTION_43_0();
        sub_1D75CBBA8();
        if (v117)
        {
          *((void *)&v407 + 1) = v79;
          v406[0] = v116;
          v406[1] = v117;
        }
        else
        {
          *(_OWORD *)uint64_t v406 = 0u;
          long long v407 = 0u;
        }
        OUTLINED_FUNCTION_33_3(v116, v117, v118, v119, v120, v121, v122, v123, v207, v213, v219, v225, v231, v237, v243, v250, v257, v264, v271,
          v279,
          v286,
          v294,
          v302,
          v310,
          v318,
          (uint64_t)v326,
          v332,
          v338,
          v344,
          v350,
          v356,
          v362,
          v368,
          v374,
          v381,
          v387,
          v393,
          v396,
          *((uint64_t *)&v396 + 1),
          v397,
          v398,
          v399,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          v406[0],
          v406[1],
          v407,
          *((uint64_t *)&v407 + 1),
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414,
          v415,
          v416,
          v417,
          v418);
        OUTLINED_FUNCTION_4_3();
        sub_1D75CFFE4(v24 + 320, (uint64_t)&aBlock, (uint64_t *)&unk_1EBDEB500);
        if (v421)
        {
          sub_1D758AB78(&aBlock, (uint64_t)v406);
          uint64_t v133 = *((void *)&v407 + 1);
          __swift_project_boxed_opaque_existential_0Tm(v406, *((uint64_t *)&v407 + 1));
          uint64_t v134 = OUTLINED_FUNCTION_194();
          if (v135(v134))
          {
            objc_msgSend(v33, sel_setFlags_, objc_msgSend(v33, sel_flags) | 0x80);
          }
          else
          {
            OUTLINED_FUNCTION_55();
            OUTLINED_FUNCTION_82();
            sub_1D758B1EC((uint64_t)v406, (uint64_t)&v396);
            unint64_t v136 = (void *)swift_allocObject();
            v136[2] = v133;
            sub_1D758AB78(&v396, (uint64_t)(v136 + 3));
            v136[8] = v305;
            v136[9] = v313;
            uint64_t v422 = sub_1D75D5360;
            os_log_t v423 = v136;
            *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
            *((void *)&aBlock + 1) = 1107296256;
            uint64_t v420 = (uint64_t)sub_1D75CE790;
            uint64_t v421 = &block_descriptor_215;
            uint64_t v137 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            uint64_t v138 = swift_release();
            OUTLINED_FUNCTION_174(v138, sel_setShowPINHandlerEx_);
            _Block_release(v137);
            OUTLINED_FUNCTION_55();
            OUTLINED_FUNCTION_82();
            sub_1D758B1EC((uint64_t)v406, (uint64_t)&v396);
            uint64_t v139 = swift_allocObject();
            *(void *)(v139 + 16) = v137;
            sub_1D758AB78(&v396, v139 + 24);
            uint64_t v422 = sub_1D75D53B0;
            os_log_t v423 = (void *)v139;
            *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
            *((void *)&aBlock + 1) = 1107296256;
            uint64_t v420 = (uint64_t)sub_1D75D6460;
            uint64_t v421 = &block_descriptor_222;
            uint64_t v140 = _Block_copy(&aBlock);
            uint64_t v141 = swift_release();
            OUTLINED_FUNCTION_174(v141, sel_setHidePINHandler_);
            _Block_release(v140);
          }
          uint64_t v55 = v365;
          uint64_t v54 = v321;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v406);
        }
        else
        {
          sub_1D75D505C((uint64_t)&aBlock, (uint64_t *)&unk_1EBDEB500);
          uint64_t v55 = v365;
          uint64_t v54 = v321;
        }
      }
      goto LABEL_73;
    case 3:
      goto LABEL_29;
    default:
      char v52 = sub_1D7661560();
      swift_bridgeObjectRelease();
      if (v52) {
        goto LABEL_30;
      }
      if (!isUniquelyReferenced_nonNull_native) {
        goto LABEL_46;
      }
      if (isUniquelyReferenced_nonNull_native == 1)
      {
        OUTLINED_FUNCTION_154();
        OUTLINED_FUNCTION_200();
LABEL_46:
        char v77 = sub_1D7661560();
        swift_bridgeObjectRelease();
        if ((v77 & 1) == 0) {
          goto LABEL_32;
        }
      }
      else
      {
LABEL_29:
        swift_bridgeObjectRelease();
      }
LABEL_30:
      OUTLINED_FUNCTION_146();
      if ((v53 & 0x8000) == 0)
      {
        OUTLINED_FUNCTION_92();
LABEL_32:
        uint64_t v54 = 0;
        uint64_t v55 = a9;
        goto LABEL_73;
      }
      sub_1D75BBEF4((uint64_t)&aBlock);
      uint64_t v56 = (uint64_t)v421;
      if (!v421) {
        goto LABEL_99;
      }
      uint64_t v298 = *((void *)&aBlock + 1);
      uint64_t v306 = aBlock;
      uint64_t v57 = v424;
      uint64_t v314 = (uint64_t)v423;
      id v322 = v422;
      uint64_t v58 = (uint64_t)v425;
      uint64_t v59 = v426;
      uint64_t v60 = v427;
      uint64_t v283 = v428;
      uint64_t v290 = v420;
      uint64_t v275 = v429;
      unsigned __int8 v61 = v430;
      v406[0] = 0xD000000000000012;
      v406[1] = 0x80000001D7674890;
      OUTLINED_FUNCTION_52_0();
      *((void *)&v407 + 1) = v35;
      v406[0] = v57;
      v406[1] = v58;
      swift_bridgeObjectRetain();
      sub_1D758CB10((uint64_t)v406, (uint64_t)&aBlock);
      v406[0] = 0xD000000000000012;
      v406[1] = 0x80000001D76748B0;
      OUTLINED_FUNCTION_52_0();
      if (v60)
      {
        OUTLINED_FUNCTION_189();
      }
      else
      {
        *((void *)&v407 + 1) = MEMORY[0x1E4FBC538];
        uint64_t v62 = v59;
      }
      v406[0] = v62;
      sub_1D758CB10((uint64_t)v406, (uint64_t)&aBlock);
      v406[0] = 0xD00000000000001BLL;
      v406[1] = 0x80000001D76748D0;
      sub_1D76610E0();
      sub_1D75CBBA8();
      if (v64)
      {
        *((void *)&v407 + 1) = v35;
        v406[0] = v63;
        v406[1] = v64;
      }
      else
      {
        *(_OWORD *)uint64_t v406 = 0u;
        long long v407 = 0u;
      }
      uint64_t v55 = a9;
      OUTLINED_FUNCTION_33_3(v63, v64, v65, v66, v67, v68, v69, v70, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
        v275,
        v283,
        v290,
        v298,
        v306,
        v314,
        (uint64_t)v322,
        v329,
        v335,
        (uint64_t)v341,
        v347,
        (uint64_t)v353,
        v359,
        a9,
        v371,
        v378,
        v384,
        v390,
        v396,
        *((uint64_t *)&v396 + 1),
        v397,
        v398,
        v399,
        v400,
        v401,
        v402,
        v403,
        v404,
        v405,
        v406[0],
        v406[1],
        v407,
        *((uint64_t *)&v407 + 1),
        v408,
        v409,
        v410,
        v411,
        v412,
        v413,
        v414,
        v415,
        v416,
        v417,
        v418);
      sub_1D75D52B8(0x303030303030, 0xE600000000000000, v353);
      LOBYTE(v228) = v61;
      id v33 = v353;
      sub_1D759423C(v305, v297, v289, v56, (uint64_t)v321, v313, v57, v58, v59, v60, v282, v274);
      uint64_t v54 = 0;
      uint64_t v24 = v371;
LABEL_73:
      uint64_t v146 = *(void *)(v55 + 16);
      if (!v146) {
        goto LABEL_85;
      }
      id v321 = v54;
      unint64_t v12 = (void *)sub_1D7660A50();
      swift_bridgeObjectRetain();
      unint64_t v147 = (uint64_t *)(v55 + 40);
      uint64_t v148 = MEMORY[0x1E4FBB1A0];
      break;
  }
  do
  {
    uint64_t v149 = *v147;
    v406[0] = *(v147 - 1);
    v406[1] = v149;
    swift_bridgeObjectRetain();
    sub_1D76610E0();
    *((void *)&v407 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v406[0]) = 1;
    sub_1D758CB98(v406, &v396);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_t v431 = v12;
    unint64_t v150 = sub_1D758C92C((uint64_t)&aBlock);
    if (__OFADD__(v12[2], (v151 & 1) == 0))
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      swift_once();
      goto LABEL_2;
    }
    unint64_t v152 = v150;
    char v153 = v151;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEADC0);
    if (sub_1D7661220())
    {
      unint64_t v154 = sub_1D758C92C((uint64_t)&aBlock);
      if ((v153 & 1) != (v155 & 1))
      {
        sub_1D76615F0();
        __break(1u);
LABEL_99:
        OUTLINED_FUNCTION_102();
        OUTLINED_FUNCTION_214();
        __break(1u);
        JUMPOUT(0x1D75CE128);
      }
      unint64_t v152 = v154;
    }
    unint64_t v12 = v431;
    if (v153)
    {
      uint64_t v156 = v148;
      uint64_t v157 = v431[7] + 32 * v152;
      __swift_destroy_boxed_opaque_existential_0Tm(v157);
      uint64_t v158 = (_OWORD *)v157;
      uint64_t v148 = v156;
      sub_1D758CB98(&v396, v158);
    }
    else
    {
      v431[(v152 >> 6) + 8] |= 1 << v152;
      sub_1D758CA38((uint64_t)&aBlock, v12[6] + 40 * v152);
      sub_1D758CB98(&v396, (_OWORD *)(v12[7] + 32 * v152));
      uint64_t v159 = v12[2];
      BOOL v160 = __OFADD__(v159, 1);
      uint64_t v161 = v159 + 1;
      if (v160) {
        goto LABEL_96;
      }
      void v12[2] = v161;
    }
    v147 += 2;
    swift_bridgeObjectRelease();
    sub_1D758CBA8((uint64_t)&aBlock);
    --v146;
  }
  while (v146);
  swift_bridgeObjectRelease();
  id v33 = v353;
  sub_1D75D51C4((uint64_t)v12, v353, (SEL *)&selRef_setAcl_);
  uint64_t v24 = v371;
  uint64_t v54 = v321;
LABEL_85:
  sub_1D75D51C4(v433, v33, (SEL *)&selRef_setAdditionalSelfInfo_);
  sub_1D75D51C4(v432, v33, (SEL *)&selRef_setAdditionalPeerInfo_);
  id v162 = v33;
  sub_1D7592464(v33);
  *(void *)&long long aBlock = v359;
  *((void *)&aBlock + 1) = v329;
  uint64_t v420 = v335;
  uint64_t v421 = v341;
  uint64_t v422 = (void *)v347;
  LOBYTE(v423) = 0;
  sub_1D75A74B4(v329);
  sub_1D75AC3B4((uint64_t)v341, v347);
  sub_1D759127C((uint64_t *)&aBlock);
  uint64_t v163 = v24 + 400;
  OUTLINED_FUNCTION_4_3();
  sub_1D758B1EC(v24 + 400, (uint64_t)&aBlock);
  __swift_project_boxed_opaque_existential_0Tm(&aBlock, (uint64_t)v421);
  uint64_t v164 = OUTLINED_FUNCTION_194();
  uint64_t v166 = v165(v164);
  if (v54)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    os_log_type_t v167 = sub_1D7660DB0();
    uint64_t v168 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v167))
    {
      swift_retain();
      id v169 = v54;
      swift_retain();
      id v170 = v54;
      uint64_t v171 = OUTLINED_FUNCTION_40_0();
      *(void *)&long long aBlock = OUTLINED_FUNCTION_38_0();
      *(_DWORD *)uint64_t v171 = 136446466;
      uint64_t v172 = sub_1D75BC478();
      OUTLINED_FUNCTION_71(v172, v173, v174, v175, v176, v177, v178, v179, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
        v274,
        v282,
        v289,
        v297,
        v305,
        v313,
        (uint64_t)v321,
        v329,
        v335,
        (uint64_t)v341,
        v347,
        (uint64_t)v353,
        v359,
        v365,
        v371,
        v378,
        v384,
        v390,
        v396,
        *((uint64_t *)&v396 + 1),
        v397,
        v398,
        v399,
        v400,
        v401,
        v402,
        v403,
        v404,
        v405,
        v406[0],
        v406[1],
        v407,
        *((uint64_t *)&v407 + 1),
        v408,
        v409,
        v410,
        v411,
        v412,
        v413,
        v414,
        v415,
        v416,
        v417,
        v418);
      OUTLINED_FUNCTION_191();
      sub_1D7661020();
      OUTLINED_FUNCTION_196();
      swift_bridgeObjectRelease();
      *(_WORD *)(v171 + 12) = 2080;
      *(void *)&long long v396 = v54;
      id v180 = v54;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      uint64_t v181 = sub_1D7660B60();
      *(void *)&long long v396 = OUTLINED_FUNCTION_71(v181, v182, v183, v184, v185, v186, v187, v188, v209, v215, v221, v227, v233, v239, v245, v252, v259, v266, v273,
                           v281,
                           v288,
                           v296,
                           v304,
                           v312,
                           v320,
                           (uint64_t)v328,
                           v334,
                           v340,
                           v346,
                           v352,
                           v358,
                           v364,
                           v370,
                           v376,
                           v383,
                           v389,
                           v395,
                           v396,
                           *((uint64_t *)&v396 + 1),
                           v397,
                           v398,
                           v399,
                           v400,
                           v401,
                           v402,
                           v403,
                           v404,
                           v405,
                           v406[0],
                           v406[1],
                           v407,
                           *((uint64_t *)&v407 + 1),
                           v408,
                           v409,
                           v410,
                           v411,
                           v412,
                           v413,
                           v414,
                           v415,
                           v416,
                           v417,
                           v418);
      sub_1D7661020();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_139(&dword_1D757C000, v168, v189, "%{public}s: Failed to query number of paired peers: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v24 = v377;
      OUTLINED_FUNCTION_1();
    }

LABEL_89:
    sub_1D758B1EC(v163, (uint64_t)&aBlock);
    uint64_t v190 = swift_allocObject();
    *(void *)(v190 + 16) = v24;
    *(void *)(v190 + 24) = v162;
    swift_retain();
    id v191 = v162;
    CUPairingSession.configure(customDataStorageProvider:completion:)(&aBlock, (uint64_t)sub_1D75D5290, v190);

    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  }
  else
  {
    uint64_t v192 = v166;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    if (v359 || v192) {
      goto LABEL_89;
    }
    sub_1D7660DD0();
    if (OUTLINED_FUNCTION_78())
    {
      swift_retain_n();
      uint64_t v193 = (_DWORD *)OUTLINED_FUNCTION_14_0();
      *(void *)&long long aBlock = OUTLINED_FUNCTION_11_4();
      *uint64_t v193 = 136446210;
      uint64_t v194 = sub_1D75BC478();
      OUTLINED_FUNCTION_71(v194, v195, v196, v197, v198, v199, v200, v201, v204, v210, v216, v222, v228, v234, v240, v246, v253, v260, v267,
        v274,
        v282,
        v289,
        v297,
        v305,
        v313,
        (uint64_t)v321,
        v329,
        v335,
        (uint64_t)v341,
        v347,
        (uint64_t)v353,
        v359,
        v365,
        v371,
        v378,
        v384,
        v390,
        v396,
        *((uint64_t *)&v396 + 1),
        v397,
        v398,
        v399,
        v400,
        v401,
        v402,
        v403,
        v404,
        v405,
        v406[0],
        v406[1],
        v407,
        *((uint64_t *)&v407 + 1),
        v408,
        v409,
        v410,
        v411,
        v412,
        v413,
        v414,
        v415,
        v416,
        v417,
        v418);
      OUTLINED_FUNCTION_191();
      sub_1D7661020();
      swift_release_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_32_1(&dword_1D757C000, v202, v203, "%{public}s: Not paired with anyone, failing pairVerify early.");
      OUTLINED_FUNCTION_63();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    CUPairingSession.configureFailing()();
    sub_1D75CE97C(v162);
  }
}

uint64_t sub_1D75CE138(void *a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D75CEE28(a3, a1);
    return swift_release();
  }
  return result;
}

void sub_1D75CE1AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1D75CE218(char a1, uint64_t a2, unint64_t a3, unsigned __int8 a4, void *a5, uint64_t a6)
{
  char v11 = a1 & 1;
  unsigned __int8 v40 = a1 & 1;
  unsigned __int8 v41 = a4;
  uint64_t v42 = a2;
  long long v43 = a3;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  sub_1D75934F4(a2, a3);
  unsigned int v12 = objc_msgSend(a5, sel_sessionType);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (v12 == 1)
  {
    CFStringRef v15 = SCDynamicStoreCopyComputerName(0, 0);
    if (v15)
    {
      unint64_t v16 = (__CFString *)v15;
      uint64_t v13 = sub_1D7660B10();
      uint64_t v14 = v17;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    *((void *)&v43 + 1) = v13;
    uint64_t v44 = v14;
  }
  if (a6) {
    uint64_t v45 = a6;
  }
  swift_bridgeObjectRetain();
  os_log_type_t v18 = sub_1D7660DA0();
  if (qword_1EBDEBCD8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1EBDEBCD0;
  if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v18))
  {
    swift_retain();
    sub_1D75934F4(a2, a3);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D75934F4(a2, a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v13;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v30[0] = v28;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v21 = sub_1D75BC478();
    unint64_t v31 = sub_1D758DBE8(v21, v22, v30);
    sub_1D7661020();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    LOBYTE(v31) = v11;
    BYTE1(v31) = a4;
    uint64_t v32 = a2;
    *(void *)&long long v33 = a3;
    *((void *)&v33 + 1) = v27;
    uint64_t v34 = v14;
    uint64_t v35 = a6;
    sub_1D75934F4(a2, a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1D7660B60();
    unint64_t v31 = sub_1D758DBE8(v23, v24, v30);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    sub_1D75933F0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75933F0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v19, v18, "%{public}s: Sending pairing data to peer: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v28, -1, -1);
    MEMORY[0x1D9474C60](v20, -1, -1);
  }
  swift_beginAccess();
  uint64_t v25 = v42;
  unint64_t v31 = v40 | ((unint64_t)v41 << 8);
  uint64_t v32 = v42;
  unint64_t v29 = v43;
  long long v33 = v43;
  uint64_t v34 = v44;
  uint64_t v35 = v45;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  char v39 = 0;
  sub_1D75D20D0((uint64_t)&v31);
  sub_1D75D20E0((uint64_t)&v31, (uint64_t)v30);
  sub_1D75934F4(v25, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D75C0C5C();
  sub_1D75933F0(v25, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D75933F0(v25, v29);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75CE60C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v6 = a3;
  uint64_t v7 = sub_1D765FED0();
  unint64_t v9 = v8;

  v5(a2, v7, v9);
  sub_1D75933F0(v7, v9);
  return swift_release();
}

uint64_t sub_1D75CE6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = a5[3];
    uint64_t v15 = a5[4];
    __swift_project_boxed_opaque_existential_0Tm(a5, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a2, a3, a6, a7, v13, v14, v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D75CE790(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = sub_1D7660B10();
  uint64_t v6 = v5;
  swift_retain();
  v3(a2, v4, v6);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75CE80C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = a2[3];
    uint64_t v6 = a2[4];
    __swift_project_boxed_opaque_existential_0Tm(a2, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D75CE8A8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D75C6798(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D75CE91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

#error "1D75CEB70: call analysis failed (funcsize=290)"

void sub_1D75CEE28(void *a1, id a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    if (a2)
    {
      id v21 = a2;
      sub_1D7660DD0();
      if (qword_1EBDEBCD8 != -1) {
        swift_once();
      }
      unint64_t v22 = qword_1EBDEBCD0;
      if (OUTLINED_FUNCTION_96())
      {
        id v23 = a2;
        swift_retain();
        id v24 = a1;
        id v25 = a2;
        swift_retain();
        id v26 = v24;
        uint64_t v27 = OUTLINED_FUNCTION_11_4();
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136446722;
        uint64_t v28 = sub_1D75BC478();
        OUTLINED_FUNCTION_105(v28, v29, v30);
        OUTLINED_FUNCTION_59_0();
        OUTLINED_FUNCTION_36_1();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2082;
        sub_1D75FFF18(&v49);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC88);
        uint64_t v31 = sub_1D7660B60();
        OUTLINED_FUNCTION_105(v31, v32, v33);
        OUTLINED_FUNCTION_59_0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 22) = 2082;
        uint64_t v49 = (uint64_t)a2;
        id v34 = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v35 = sub_1D7660B60();
        uint64_t v49 = OUTLINED_FUNCTION_159(v35, v36, v37);
        sub_1D7661020();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D757C000, v22, v3, "%{public}s: Pairing session of kind %{public}s failed with error %{public}s", (uint8_t *)v27, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      sub_1D75CF31C(a2);
    }
    else
    {
      os_log_type_t v38 = sub_1D7660DD0();
      if (qword_1EBDEBCD8 != -1) {
        swift_once();
      }
      char v39 = qword_1EBDEBCD0;
      if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v38))
      {
        OUTLINED_FUNCTION_104();
        id v40 = a1;
        uint64_t v41 = OUTLINED_FUNCTION_40_0();
        uint64_t v50 = OUTLINED_FUNCTION_38_0();
        *(_DWORD *)uint64_t v41 = 136446466;
        uint64_t v42 = sub_1D75BC478();
        OUTLINED_FUNCTION_105(v42, v43, v44);
        OUTLINED_FUNCTION_59_0();
        OUTLINED_FUNCTION_36_1();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2082;
        sub_1D75FFF18(&v49);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC88);
        uint64_t v45 = sub_1D7660B60();
        uint64_t v49 = OUTLINED_FUNCTION_105(v45, v46, v47);
        sub_1D7661020();

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_86(&dword_1D757C000, v39, v48, "%{public}s: Pairing session of kind %{public}s succeeded");
        OUTLINED_FUNCTION_61_0();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      sub_1D75CF5E8(a1);
    }
  }
  else
  {
    os_log_type_t v7 = sub_1D7660DA0();
    if (qword_1EBDEBCD8 != -1) {
      swift_once();
    }
    unint64_t v8 = qword_1EBDEBCD0;
    if (os_log_type_enabled((os_log_t)qword_1EBDEBCD0, v7))
    {
      id v9 = a2;
      swift_retain();
      id v10 = a2;
      swift_retain();
      uint64_t v11 = OUTLINED_FUNCTION_40_0();
      uint64_t v50 = OUTLINED_FUNCTION_38_0();
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v12 = sub_1D75BC478();
      OUTLINED_FUNCTION_105(v12, v13, v14);
      OUTLINED_FUNCTION_169();
      sub_1D7661020();
      OUTLINED_FUNCTION_36_1();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2082;
      id v15 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBC0);
      uint64_t v16 = sub_1D7660B60();
      uint64_t v49 = OUTLINED_FUNCTION_105(v16, v17, v18, a2, v50);
      sub_1D7661020();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_86(&dword_1D757C000, v8, v19, "%{public}s: Received completion with error=%{public}s from pairing session but ignoring since that is no longer active session");
      OUTLINED_FUNCTION_61_0();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
  }
}

void sub_1D75CF31C(void *a1)
{
  OUTLINED_FUNCTION_34_0();
  if (v3 < 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_95();
    if ((v1 & 1) == 0) {
      return;
    }
  }
  sub_1D7591448((uint64_t)v57);
  uint64_t v12 = (uint64_t (*)(unsigned char *))v57[0];
  if (v58 - 1 < 2)
  {
    OUTLINED_FUNCTION_60_0(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v33, v34, v35, v36, v37, v38, v39, v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      *(uint64_t *)v50,
      *(uint64_t *)&v50[8],
      *(uint64_t *)&v50[16],
      *(uint64_t *)&v50[24],
      *(uint64_t *)&v50[32],
      v51);
    if (!v12) {
      return;
    }
    memset(v50, 0, 32);
    v50[32] = 2;
    sub_1D7592D84();
    uint64_t v32 = OUTLINED_FUNCTION_3_0();
    uint64_t v14 = v13;
    LOBYTE(v33) = 4;
    id v15 = a1;
    Swift::String v16 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v33);
    sub_1D7592DD0((uint64_t)v50);
    *(unsigned char *)uint64_t v14 = 4;
    *(Swift::String *)(v14 + 8) = v16;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(void *)(v14 + 56) = a1;
    *(void *)uint64_t v50 = v32;
    *(void *)&v50[8] = 0;
    v50[16] = 0;
    uint64_t v17 = v12(v50);
    OUTLINED_FUNCTION_108(v17, v18, v19, v20, v21, v22, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    id v23 = (void *)v32;
    goto LABEL_16;
  }
  if (v58 != 4 || v57[0] != 3 || (v57[2] | v57[1] | v57[3] | v57[4]) != 0)
  {
    OUTLINED_FUNCTION_108(v4, v5, v6, v7, v8, v9, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
    *(void *)&v50[24] = MEMORY[0x1E4FBB1A0];
    OUTLINED_FUNCTION_50_0();
    *(void *)uint64_t v50 = v26;
    *(void *)&v50[8] = v27;
    v50[32] = 1;
    sub_1D7592D84();
    uint64_t v28 = OUTLINED_FUNCTION_3_0();
    LOBYTE(v33) = 1;
    ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v33);
    OUTLINED_FUNCTION_93();
    sub_1D7592DD0((uint64_t)v50);
    OUTLINED_FUNCTION_24_2();
    id v23 = (void *)v28;
LABEL_16:

    return;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) != 2
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) & 1) != 0)
  {
    OUTLINED_FUNCTION_60_0(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v33, v34, v35, v36, v37, v38, v39, v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      *(uint64_t *)v50,
      *(uint64_t *)&v50[8],
      *(uint64_t *)&v50[16],
      *(uint64_t *)&v50[24],
      *(uint64_t *)&v50[32],
      v51);
    memset(&v50[8], 0, 32);
    long long v51 = 0u;
    long long v52 = 0u;
    *(void *)uint64_t v50 = 1;
    unint64_t v53 = 0xC000000000000000;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    char v56 = 0;
    sub_1D75D20D0((uint64_t)v50);
    sub_1D75D20E0((uint64_t)v50, (uint64_t)&v33);
    OUTLINED_FUNCTION_144();
    sub_1D75BDD9C();
  }
  else
  {
    *(void *)uint64_t v50 = 1;
    sub_1D758B47C();
  }
}

void sub_1D75CF5E8(void *a1)
{
  sub_1D75BC18C((uint64_t)objc_msgSend(a1, sel_pairedPeer));
  id v2 = sub_1D75FFF70();
  sub_1D75923E4(v2);
  sub_1D7591448((uint64_t)&v28);
  OUTLINED_FUNCTION_205();
  if (v8 == 1
    || (OUTLINED_FUNCTION_161(v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0), sub_1D7591448((uint64_t)&v28), OUTLINED_FUNCTION_205(), v8 == 2))
  {
    OUTLINED_FUNCTION_25_1(v3, v4, v5, v6, v7, v8, v9, v10, v21, v23, v24, v25, v26, v27, v28, v29, v30, v31);
    return;
  }
  OUTLINED_FUNCTION_161(v3, v4, v5, v6, v7, v8, (void (*)(void))sub_1D75940A4, (void (*)(uint64_t, uint64_t))sub_1D75941DC, (void (*)(void))sub_1D75933F0);
  OUTLINED_FUNCTION_140();
  if (v11 < 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    uint64_t v12 = OUTLINED_FUNCTION_95();
    if ((v1 & 1) == 0) {
      goto LABEL_9;
    }
  }
  sub_1D75BBEF4((uint64_t)&v28);
  uint64_t v20 = v30;
  LOBYTE(v26) = v38;
  sub_1D759423C(v28, v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31, v32, v33, v34, v35, v36, v37);
  if (v20)
  {
LABEL_9:
    OUTLINED_FUNCTION_25_1(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
    sub_1D75BDD9C();
    return;
  }
  sub_1D75C5A7C(v12, v13, v14, v15, v16, v17, v18, v19);
}

#error "1D75CFB44: call analysis failed (funcsize=132)"

uint64_t sub_1D75CFBB8()
{
  return sub_1D7661760();
}

void sub_1D75CFBF8()
{
}

uint64_t sub_1D75CFC1C()
{
  return sub_1D75CFBB8();
}

uint64_t sub_1D75CFC40()
{
  return HashableByObjectIdentity.hash(into:)();
}

uint64_t sub_1D75CFC98(uint64_t result, unsigned char **a2)
{
  id v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1D75CFCA8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1D75CFCE4()
{
  OUTLINED_FUNCTION_113();
  if (v3)
  {
    OUTLINED_FUNCTION_43();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_74();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC28);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    _OWORD v6[2] = v1;
    _OWORD v6[3] = 2 * ((uint64_t)(v7 - 32) / 8);
  }
  if (v0)
  {
    uint64_t v8 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D10DC(v8, v9, v10);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_44_0();
    sub_1D75D0688(v11, v12, v13, v14);
  }
}

void sub_1D75CFDA0()
{
}

void sub_1D75CFDAC()
{
  OUTLINED_FUNCTION_113();
  if (v2)
  {
    OUTLINED_FUNCTION_43();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_74();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC000);
    char v5 = (void *)OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_30_1(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D11D0(v6, v7, v8);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_44_0();
    sub_1D75D077C(v9, v10, v11, v12);
  }
}

void sub_1D75CFE50()
{
  OUTLINED_FUNCTION_113();
  if (v2)
  {
    OUTLINED_FUNCTION_43();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_74();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC010);
    char v5 = (void *)OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_30_1(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D126C(v6, v7, v8);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_44_0();
    sub_1D75D089C(v9, v10, v11, v12);
  }
}

char *sub_1D75CFEF4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC200);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_1D75D1308((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D75D09BC(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_1D75CFFE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1D75D0040()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D75D0078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D75D00F0()
{
  OUTLINED_FUNCTION_113();
  if (v2)
  {
    OUTLINED_FUNCTION_43();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_74();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBF8);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_30_1(v5);
  }
  if (v0)
  {
    unint64_t v6 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D1364(v6, v7, v8);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_44_0();
    sub_1D75D0AB4(v9, v10, v11, v12);
  }
}

void sub_1D75D0194()
{
}

void sub_1D75D01B8()
{
}

void sub_1D75D01C4()
{
  OUTLINED_FUNCTION_113();
  if (v3)
  {
    OUTLINED_FUNCTION_43();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_74();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    id v7[2] = v1;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 16);
  }
  if (v0)
  {
    uint64_t v9 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D1308(v9, v10, v11);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_44_0();
    sub_1D75D0FF4(v12, v13, v14, v15);
  }
}

void sub_1D75D027C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1D75D02B0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1D75D02E4(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_43();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_74();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = _swift_stdlib_malloc_size(v16);
    _OWORD v16[2] = v14;
    void v16[3] = 2 * ((uint64_t)(v17 - 32) / 32);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

void sub_1D75D03CC()
{
}

void sub_1D75D03E4()
{
  OUTLINED_FUNCTION_158();
  char v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  if (v10)
  {
    OUTLINED_FUNCTION_43();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_74();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  else
  {
    uint64_t v11 = v0;
  }
  uint64_t v14 = *(void *)(v7 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(v1);
  uint64_t v16 = OUTLINED_FUNCTION_114();
  uint64_t v17 = *(void *)(v5(v16) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  size_t v21 = _swift_stdlib_malloc_size(v20);
  if (!v18 || (v21 - v19 == 0x8000000000000000 ? (BOOL v22 = v18 == -1) : (BOOL v22 = 0), v22))
  {
LABEL_23:
    OUTLINED_FUNCTION_0_1();
    sub_1D7661250();
    __break(1u);
    return;
  }
  void v20[2] = v14;
  id v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
LABEL_18:
  uint64_t v23 = OUTLINED_FUNCTION_114();
  uint64_t v24 = *(void *)(v5(v23) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v20 + v25;
  if (v9)
  {
    sub_1D75D1468(v7 + v25, v14, v26, v3);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    sub_1D75D0DA4(0, v14, v26, v7);
  }
  OUTLINED_FUNCTION_151();
}

void sub_1D75D05D8()
{
  OUTLINED_FUNCTION_113();
  if (v2)
  {
    OUTLINED_FUNCTION_43();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_74();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_41();
    }
  }
  OUTLINED_FUNCTION_42_0();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B7D0);
    char v5 = (void *)OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_30_1(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_110();
    sub_1D75D15C0(v6, v7, v8);
    OUTLINED_FUNCTION_73();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_44_0();
    sub_1D75D0ED4(v9, v10, v11, v12);
  }
}

void sub_1D75D067C()
{
}

char *sub_1D75D0688(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    uint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D077C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBDC8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D089C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDD0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D09BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0AB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0BB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0CAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0DA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
    goto LABEL_11;
  }
  uint64_t v8 = OUTLINED_FUNCTION_114();
  uint64_t v10 = *(void *)(v9(v8) - 8);
  uint64_t v11 = a4 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v12 = *(void *)(v10 + 72);
  unint64_t v13 = v11 + v12 * a1;
  unint64_t v14 = a3 + v12 * v4;
  if (v13 >= v14 || v13 + v12 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v14;
  }
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_15_3();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0ED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1D76612A0();
  __break(1u);
  return result;
}

uint64_t sub_1D75D0FF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 16 * a1 + 32;
  unint64_t v6 = a3 + 16 * v4;
  if (v5 >= v6 || v5 + 16 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADE8);
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_16_3();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_15_3();
  __break(1u);
  return result;
}

char *sub_1D75D10DC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D76612A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1D75D1174(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t result = (char *)OUTLINED_FUNCTION_7_4();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_3(a3, result);
  }
  return result;
}

char *sub_1D75D11D0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D76612A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1D75D126C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D76612A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1D75D1308(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t result = (char *)OUTLINED_FUNCTION_7_4();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_3(a3, result);
  }
  return result;
}

char *sub_1D75D1364(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D76612A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[96 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 96 * a2);
  }
  return __src;
}

char *sub_1D75D1400(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t result = (char *)OUTLINED_FUNCTION_7_4();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_3(a3, result);
  }
  return result;
}

void sub_1D75D145C(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_1D75D1468(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t))
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t v10 = OUTLINED_FUNCTION_7_4();
    __break(1u);
_swift_arrayInitWithTakeBackToFront:
    MEMORY[0x1F4186420](v10);
    return;
  }
  if (a3 < a1 || (uint64_t v8 = OUTLINED_FUNCTION_114(), a4(v8), OUTLINED_FUNCTION_2_2(), a1 + *(void *)(v9 + 72) * a2 <= a3))
  {
    uint64_t v11 = OUTLINED_FUNCTION_114();
    a4(v11);
    uint64_t v12 = OUTLINED_FUNCTION_185();
    MEMORY[0x1F4186428](v12);
  }
  else if (a3 != a1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_185();
    goto _swift_arrayInitWithTakeBackToFront;
  }
}

char *sub_1D75D155C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t result = (char *)OUTLINED_FUNCTION_7_4();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_3(a3, result);
  }
  return result;
}

char *sub_1D75D15C0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    uint64_t result = (char *)OUTLINED_FUNCTION_7_4();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_3(a3, result);
  }
  return result;
}

uint64_t sub_1D75D1628(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_70();
  if (v4 + 8 * v3 > v2 && v2 + 8 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B7E0);
  OUTLINED_FUNCTION_49_0();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D16E8()
{
  OUTLINED_FUNCTION_229();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_184();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1788()
{
  OUTLINED_FUNCTION_229();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  if (v2 + 96 * v1 > v0 && v0 + 96 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1838(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1D75D191C(a1, a2, a3);
}

uint64_t sub_1D75D1850(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_70();
  if (v4 + 16 * v3 > v2 && v2 + 16 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADE8);
  OUTLINED_FUNCTION_49_0();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1910(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1D75D191C(a1, a2, a3);
}

uint64_t sub_1D75D191C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_70();
  uint64_t v6 = OUTLINED_FUNCTION_114();
  v7(v6);
  OUTLINED_FUNCTION_2_2();
  uint64_t v9 = *(void *)(v8 + 72) * v3;
  unint64_t v10 = a3 + v9;
  unint64_t v11 = v4 + v9;
  if (v10 > v4 && v11 > a3)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_49_0();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D19EC()
{
  OUTLINED_FUNCTION_229();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  if (v2 + 48 * v1 > v0 && v0 + 48 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1A9C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_70();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
  OUTLINED_FUNCTION_49_0();
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1B60()
{
  OUTLINED_FUNCTION_229();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_17_3();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_15_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_184();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0_1();
    OUTLINED_FUNCTION_16_3();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D75D1C00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D75D1C28(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1D758DBE8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1D7661020();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

void *sub_1D75D1CA0(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1D76612A0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1D75D1D78(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC020);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1D75D1F28(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D75D1E50(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1D75D1E50(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1D76612A0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1D75D1F28(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1D76612A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned char **sub_1D75D1FB8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = *result;
  *char v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_1D75D1FCC(uint64_t a1)
{
  sub_1D75C2AB8(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D75D1FDC(uint64_t a1)
{
  return sub_1D75C382C(a1, *(void **)(v1 + 16), *(void (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

void *sub_1D75D1FE8(void *result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  if (v2 == 2)
  {
    unint64_t v3 = a2 & 0xCFFFFFFFFFFFFFFFLL;
    return (void *)sub_1D75933F0((uint64_t)result, v3);
  }
  else
  {
    if (v2 == 1)
    {
      sub_1D75933F0((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
    }
    else
    {
      if (v2) {
        return result;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
}

void sub_1D75D2074(uint64_t a1)
{
  sub_1D75C4048(a1, *(void *)(v1 + 16), *(void (**)(void *, void *, uint64_t))(v1 + 24));
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D75D20C4(uint64_t a1)
{
  sub_1D75C4688(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_1D75D20D0(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0x7FFu;
  return result;
}

uint64_t sub_1D75D20E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75D213C(uint64_t result)
{
  *(unsigned char *)(result + 121) = 4;
  return result;
}

uint64_t sub_1D75D2148(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1D75D21A8()
{
  unint64_t result = qword_1EA82BB10;
  if (!qword_1EA82BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BB10);
  }
  return result;
}

unint64_t sub_1D75D21F4(uint64_t a1)
{
  unint64_t result = sub_1D75D226C((uint64_t)&unk_1EBDEB578);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D75D2238()
{
  return sub_1D75D226C((uint64_t)&unk_1EBDEB580);
}

unint64_t sub_1D75D226C(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_171(a1);
  if (!result)
  {
    type metadata accessor for ControlChannelConnection();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void *sub_1D75D22B4()
{
  OUTLINED_FUNCTION_132();
  unint64_t result = sub_1D75BC150();
  void *v0 = result;
  return result;
}

uint64_t sub_1D75D2310()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D75BCFBC();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1D75D233C(char *a1)
{
  return sub_1D75BCFE8(*a1);
}

uint64_t sub_1D75D2364()
{
  return sub_1D75BD060();
}

uint64_t sub_1D75D2388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D75BD134(a1, a2, a3, a4, (uint64_t *)&unk_1EBDEB500, (uint64_t (*)(unsigned char *))sub_1D75BD0A4);
}

uint64_t sub_1D75D23BC()
{
  return sub_1D75BD17C();
}

uint64_t sub_1D75D23E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D75BD134(a1, a2, a3, a4, &qword_1EBDEB4F8, (uint64_t (*)(unsigned char *))sub_1D75921F8);
}

uint64_t sub_1D75D2414@<X0>(uint64_t a1@<X8>)
{
  return sub_1D75BD240(a1);
}

uint64_t sub_1D75D243C()
{
  return sub_1D75BD318();
}

uint64_t sub_1D75D2460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D75BD134(a1, a2, a3, a4, &qword_1EBDEAC90, (uint64_t (*)(unsigned char *))sub_1D75BD35C);
}

uint64_t sub_1D75D2494()
{
  return sub_1D75BD3EC();
}

uint64_t sub_1D75D24B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D75BD134(a1, a2, a3, a4, qword_1EBDEC0B8, (uint64_t (*)(unsigned char *))sub_1D75BD430);
}

uint64_t sub_1D75D24EC()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D75BD678();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1D75D2518(char *a1)
{
  return sub_1D75BD6A4(*a1);
}

void *sub_1D75D2540()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D75BD74C();
  void *v0 = result;
  return result;
}

void *sub_1D75D256C()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D75BD838();
  void *v0 = result;
  return result;
}

id sub_1D75D25A0@<X0>(void **a1@<X8>)
{
  return sub_1D758A954(a1);
}

uint64_t dispatch thunk of TunnelListenerCreator.startListener(peerToPeer:withKey:transportProtocolType:peerConnectionsInfo:forControlChannelConnection:invokingCompletionHandlerOnQueue:onComplete:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 8))();
}

uint64_t getEnumTagSinglePayload for PairingConsentCollectionOutcome(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PairingConsentCollectionOutcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

void *sub_1D75D26A4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

void type metadata accessor for PairingConsentCollectionOutcome()
{
}

void type metadata accessor for PermittedPromptlessPairingMode()
{
}

uint64_t dispatch thunk of UserInteractionProvider.show(pin:sendingHost:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of UserInteractionProvider.hidePin(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UserInteractionProvider.collectConsentForPinlessPairing(withHostNamed:hostPairingOptions:hostChallenge:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 24))();
}

uint64_t dispatch thunk of UserInteractionProvider.cancelConsentCollection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UserInteractionProvider.shouldUseOSProvidedPinUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UserInteractionProvider.promptlessPairingInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DeviceMetadataProvider.getDeviceInfo(includingSensitiveKeys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D75D279C()
{
  return type metadata accessor for ControlChannelConnection();
}

uint64_t sub_1D75D27A4()
{
  uint64_t result = sub_1D76609A0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ControlChannelConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlChannelConnection);
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of ControlChannelConnection.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of ControlChannelConnection.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ControlChannelConnection.loggingPrefix.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsTunnelConnections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsPairSetup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsPromptlessAutomationPairingUpgrade.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsRemoteUnlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsDowngradingAuthenticatedChannels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsUpgradingNonAutomationLockdownPairings.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1072))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1080))();
}

uint64_t dispatch thunk of ControlChannelConnection.__allocating_init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)()
{
  return (*(uint64_t (**)(void))(v0 + 1088))();
}

uint64_t dispatch thunk of ControlChannelConnection.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1144))();
}

uint64_t dispatch thunk of ControlChannelConnection.initiatePromptlessPairing(forAutomationRecord:pairingOutcomeHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1184))();
}

uint64_t dispatch thunk of ControlChannelConnection.initiatePairing(withOptions:pairingOutcomeHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1192))();
}

uint64_t dispatch thunk of ControlChannelConnection.attempt(pairingPIN:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1200))();
}

uint64_t dispatch thunk of ControlChannelConnection.cancelPairSetup(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1208))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestTunnelBringup(usingKey:transportProtocolType:peerConnectionsInfo:onComplete:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1216))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestCreateRemoteUnlockKey(onComplete:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1224))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestRemoteUnlock(hostKey:onComplete:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1232))();
}

uint64_t dispatch thunk of ControlChannelConnection.wakeDevice()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1240))();
}

uint64_t dispatch thunk of ControlChannelConnection.notifyPeerOfUnpairing()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1248))();
}

uint64_t dispatch thunk of ControlChannelConnection.pushDeviceInfoChangesToHost()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1304))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidate(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1488))();
}

uint64_t dispatch thunk of ControlChannelConnection.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1504))();
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 5))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16382;
    }
    else
    {
      unsigned int v2 = ((*(_DWORD *)a1 >> 1) & 0x3F00 | *(_DWORD *)a1 & 0xFE | (*(_DWORD *)a1 >> 15) & 1) ^ 0x3FFF;
      if (v2 >= 0x3FFE) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2)
    {
      *(unsigned char *)(result + 4) = 0;
      *(_DWORD *)uint64_t result = -a2 & 0xFE | ((((((-a2 & 0x3F00) >> 1) - (a2 << 13)) >> 7) & 0x7F) << 9);
    }
  }
  return result;
}

uint64_t sub_1D75D3668(_DWORD *a1)
{
  return (*a1 >> 15) & 1;
}

unsigned int *sub_1D75D3674(unsigned int *result)
{
  uint64_t v1 = *result;
  unint64_t v2 = v1 & 0xFFFFFFFFFFFF7FFFLL | ((unint64_t)*((unsigned __int8 *)result + 4) << 32);
  *uint64_t result = v1 & 0xFFFF7FFF;
  *((unsigned char *)result + 4) = BYTE4(v2);
  return result;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Host(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ControlChannelConnection.Options.Host(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75D37F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ControlChannelConnection.Options.Host()
{
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Device(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options.Device(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void **_s19RemotePairingDevice31PairingConsentCollectionOutcomeOwca_0(uint64_t a1)
{
  OUTLINED_FUNCTION_127(a1);
  if (v7)
  {
    OUTLINED_FUNCTION_210();
    if (v7)
    {
      id v5 = v2;
      unsigned int v6 = *v1;
      *uint64_t v1 = v2;
    }
    else
    {
      int64_t v9 = v4;

      *uint64_t v1 = *v9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_210();
    if (v7) {
      id v8 = v2;
    }
    *uint64_t v1 = v2;
  }
  return v1;
}

void *_s19RemotePairingDevice31PairingConsentCollectionOutcomeOwta_0(uint64_t a1)
{
  OUTLINED_FUNCTION_127(a1);
  if (!v3)
  {
    OUTLINED_FUNCTION_210();
LABEL_6:
    *uint64_t v1 = v2;
    return v1;
  }
  OUTLINED_FUNCTION_210();
  if (!v3)
  {

    goto LABEL_6;
  }
  *uint64_t v1 = v2;

  return v1;
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.InvalidationReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 4;
    }
  }
  return result;
}

unsigned char *_s19RemotePairingDevice30PermittedPromptlessPairingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75D3A9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ControlChannelConnection.PeerType()
{
}

unsigned char *storeEnumTagSinglePayload for ControlChannelConnection.Options.Device.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75D3B9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.Options.Device.CodingKeys()
{
  return &type metadata for ControlChannelConnection.Options.Device.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ControlChannelConnection.Options.Host.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D75D3C70);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.Options.Host.CodingKeys()
{
  return &type metadata for ControlChannelConnection.Options.Host.CodingKeys;
}

unint64_t sub_1D75D3CAC()
{
  unint64_t result = qword_1EA82BB80;
  if (!qword_1EA82BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BB80);
  }
  return result;
}

unint64_t sub_1D75D3CFC()
{
  unint64_t result = qword_1EA82BB88;
  if (!qword_1EA82BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BB88);
  }
  return result;
}

unint64_t sub_1D75D3D4C()
{
  unint64_t result = qword_1EA82BB90;
  if (!qword_1EA82BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BB90);
  }
  return result;
}

unint64_t sub_1D75D3D9C()
{
  unint64_t result = qword_1EBDEB528;
  if (!qword_1EBDEB528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB528);
  }
  return result;
}

unint64_t sub_1D75D3DEC()
{
  unint64_t result = qword_1EBDEB520;
  if (!qword_1EBDEB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB520);
  }
  return result;
}

unint64_t sub_1D75D3E3C()
{
  unint64_t result = qword_1EBDEB548;
  if (!qword_1EBDEB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB548);
  }
  return result;
}

unint64_t sub_1D75D3E8C()
{
  unint64_t result = qword_1EBDEB540;
  if (!qword_1EBDEB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB540);
  }
  return result;
}

unint64_t sub_1D75D3ED8()
{
  unint64_t result = qword_1EBDEB568;
  if (!qword_1EBDEB568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB568);
  }
  return result;
}

void sub_1D75D3F24(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v12 = a10 >> 62;
  if (a10 >> 62 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75941DC(a11, a12);
  }
  else if (v12 == 1)
  {
  }
  else if (!v12)
  {
    sub_1D75933F0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1D75D402C(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

id sub_1D75D403C(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

void sub_1D75D404C(void **a1)
{
}

unint64_t sub_1D75D4054()
{
  unint64_t result = qword_1EA82BBD8;
  if (!qword_1EA82BBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BBD8);
  }
  return result;
}

void sub_1D75D4094(uint64_t a1)
{
}

uint64_t sub_1D75D409C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 121) <= 5u) {
    return *(unsigned __int8 *)(a1 + 121);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

void sub_1D75D40B4(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, char a16, char a17)
{
  switch(a17)
  {
    case 0:
      id v23 = a1;
      id v24 = a2;
      sub_1D75BBF70(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
      return;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = a11;
      unint64_t v26 = a12;
      goto LABEL_7;
    case 2:
      uint64_t v25 = (uint64_t)a2;
      unint64_t v26 = a3;
LABEL_7:
      sub_1D75AC3B4(v25, v26);
      return;
    case 3:
      sub_1D75934F4((uint64_t)a1, (unint64_t)a2);
      return;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = (void *)a8;
      goto LABEL_14;
    case 5:
LABEL_14:
      id v27 = a1;
      break;
    default:
      return;
  }
}

uint64_t sub_1D75D42CC(uint64_t a1)
{
  OUTLINED_FUNCTION_171(a1);
  OUTLINED_FUNCTION_100();
  v10(v2, v3, v4, v5, v6, v7, v8, v9);
  return v1;
}

void sub_1D75D4328(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, char a16, char a17)
{
  switch(a17)
  {
    case 0:

      sub_1D759423C(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
      return;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = a11;
      unint64_t v24 = a12;
      goto LABEL_7;
    case 2:
      uint64_t v23 = (uint64_t)a2;
      unint64_t v24 = a3;
LABEL_7:
      sub_1D75941DC(v23, v24);
      return;
    case 3:
      sub_1D75933F0((uint64_t)a1, (unint64_t)a2);
      return;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = (void *)a8;
      goto LABEL_14;
    case 5:
LABEL_14:

      break;
    default:
      return;
  }
}

uint64_t sub_1D75D4540()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

void sub_1D75D4578(uint64_t a1)
{
  sub_1D75C5004(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

unint64_t sub_1D75D4584(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_171(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void sub_1D75D45C8(void *a1)
{
  sub_1D75C1648(a1, *(void *)(v1 + 16), (__n128 *)(v1 + 24));
}

uint64_t sub_1D75D45D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(void),uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a17 & 0x2000) != 0) {
    return sub_1D75D4664(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 0xDFFF, a19, a20,
  }
             a21);
  return a18();
}

uint64_t sub_1D75D4664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v20 = a17 >> 14;
  switch(v20)
  {
    case 2:
      return a20(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    case 1:
      return a19();
    case 0:
      return a18();
  }
  return result;
}

id sub_1D75D4704(id result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v12 = a10 >> 62;
  if (a10 >> 62 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)sub_1D75AC3B4(a11, a12);
  }
  else if (v12 == 1)
  {
    return result;
  }
  else if (!v12)
  {
    sub_1D75934F4(a2, a3);
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1D75D480C(id result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  switch(v2)
  {
    case 2:
      unint64_t v3 = a2 & 0xCFFFFFFFFFFFFFFFLL;
      return (id)sub_1D75934F4((uint64_t)result, v3);
    case 1:
      sub_1D75934F4((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
      return (id)swift_bridgeObjectRetain();
    case 0:
      id v4 = result;
      swift_bridgeObjectRetain();
      return v4;
  }
  return result;
}

__n128 *sub_1D75D48CC(__n128 *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_1D75D4920(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75D497C(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 128) >> 13) & 1;
}

uint64_t sub_1D75D4988(uint64_t result)
{
  *(_WORD *)(result + 128) &= ~0x2000u;
  return result;
}

uint64_t sub_1D75D4998(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 128) >> 14;
}

uint64_t sub_1D75D49A4(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_100();
  sub_1D75D4664(v3, v11, v12, v13, v7, v8, v9, v10, v2.n128_i64[0], v2.n128_i64[1], v14, v15, v16, v17, *(void *)(a1 + 112), *(void *)(a1 + 120), *(_WORD *)(a1 + 128), v4, v5,
    v6);
  return a1;
}

uint64_t sub_1D75D4A10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D75D4A78(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0x3FFFu;
  return result;
}

unint64_t sub_1D75D4A88()
{
  unint64_t result = qword_1EBDEB4F0;
  if (!qword_1EBDEB4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB4F0);
  }
  return result;
}

uint64_t sub_1D75D4AD4(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0x7FF | 0x8000;
  return result;
}

uint64_t sub_1D75D4AE8(uint64_t result)
{
  *(unsigned char *)(result + 121) = 1;
  return result;
}

uint64_t objectdestroy_139Tm()
{
  swift_release();
  sub_1D75D45D4(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(_WORD *)(v0 + 168), (uint64_t (*)(void))sub_1D75933F0, (uint64_t (*)(void))sub_1D75D3F24,
    (uint64_t (*)(void))sub_1D75D1FE8,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D4328);
  return MEMORY[0x1F4186498](v0, 170, 7);
}

uint64_t sub_1D75D4BC0(uint64_t a1)
{
  return sub_1D75BF568(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1D75D4BCC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D75D4C0C(uint64_t a1)
{
  sub_1D75CA6A4(a1, *(void (**)(unsigned char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1D75D4C18(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {

  }
  else {
    sub_1D75933F0(a2, a3);
  }
}

uint64_t sub_1D75D4C2C(uint64_t result)
{
  *(unsigned char *)(result + 121) = 2;
  return result;
}

uint64_t sub_1D75D4C38(uint64_t result)
{
  *(unsigned char *)(result + 121) = 0;
  return result;
}

uint64_t sub_1D75D4C40(uint64_t a1)
{
  __n128 v2 = *(void **)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 104);
  unint64_t v9 = *(void *)(a1 + 112);
  id v10 = *(id *)a1;
  id v11 = v2;
  sub_1D75BBF70(v16, v15, v14, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v8, v9);
  return a1;
}

uint64_t sub_1D75D4CF4(uint64_t a1)
{
  __n128 v2 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v11 = *(_OWORD *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 104);
  unint64_t v9 = *(void *)(a1 + 112);

  sub_1D759423C(v14, v13, v12, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v8, v9);
  return a1;
}

double sub_1D75D4DA8(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_WORD *)(a1 + 120) = 1536;
  return result;
}

uint64_t sub_1D75D4DDC(uint64_t result)
{
  *(unsigned char *)(result + 121) = 3;
  return result;
}

double sub_1D75D4DE8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 105) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 121) = 6;
  return result;
}

uint64_t sub_1D75D4E0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D75D4E68(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 144);
  if (((v1 >> 11) & 2) != 0) {
    return ((*(void *)a1 >> 2) & 0xFFFFFFFE | *(void *)a1 & 1) + 2;
  }
  else {
    return (v1 >> 11) & 3;
  }
}

uint64_t sub_1D75D4E90(uint64_t result)
{
  *(_WORD *)(result + 144) &= 0xE7FFu;
  return result;
}

uint64_t sub_1D75D4EA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D75D4F04()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75D4F3C(uint64_t a1, uint64_t a2)
{
  return sub_1D75BDA84(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1D75D4F44(uint64_t *a1)
{
  return sub_1D75BD964(a1, *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

uint64_t sub_1D75D4F4C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D75D4F74()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D75D4F9C()
{
  return sub_1D75E3884(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D75D4FA4(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0xC7FF | 0x2000;
  return result;
}

uint64_t sub_1D75D4FB8(uint64_t a1)
{
  __n128 v2 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_54_0(v3, v4, v5, v6, v7, v8, v9, v10, v11, v2, v12, v13);
  return a1;
}

uint64_t sub_1D75D5000(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0xC7FFu;
  return result;
}

unint64_t sub_1D75D5010()
{
  unint64_t result = qword_1EBDEB4E0;
  if (!qword_1EBDEB4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEB4E0);
  }
  return result;
}

uint64_t sub_1D75D505C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1D75D50B0(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0x7FF | 0x4000;
  return result;
}

unint64_t sub_1D75D50C4(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_171(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1D75D5108()
{
  unint64_t result = qword_1EBDEC4C0;
  if (!qword_1EBDEC4C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4C0);
  }
  return result;
}

uint64_t sub_1D75D514C(void *a1)
{
  return sub_1D75CE138(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1D75D516C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D75D51B4(char a1, uint64_t a2, unint64_t a3)
{
  return sub_1D75CE218(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32));
}

void sub_1D75D51C4(uint64_t a1, void *a2, SEL *a3)
{
  id v5 = (id)sub_1D7660A10();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a3, v5);
}

uint64_t objectdestroy_194Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75D5290()
{
  return sub_1D75CE97C(*(void *)(v0 + 24));
}

void sub_1D75D52B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1D7660AE0();
  objc_msgSend(a3, sel_setFixedPIN_, v4);
}

uint64_t sub_1D75D5310(uint64_t a1, uint64_t a2)
{
  return sub_1D75CE8A8(a1, a2);
}

uint64_t sub_1D75D5318()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D75D5360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75CE6A0(a1, a2, a3, v3[2], v3 + 3, v3[8], v3[9]);
}

uint64_t sub_1D75D5370()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D75D53B0()
{
  return sub_1D75CE80C(*(void *)(v0 + 16), (void *)(v0 + 24));
}

void sub_1D75D53BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1D7660AE0();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setFixedPIN_, v4);
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return sub_1D7661560();
}

void OUTLINED_FUNCTION_19_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

BOOL OUTLINED_FUNCTION_20_3()
{
  return os_log_type_enabled(v0, v1);
}

void OUTLINED_FUNCTION_25_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16, long long a17, char a18)
{
  a15 = 4;
  a16 = 0u;
  a17 = 0u;
  a18 = 4;
  sub_1D759127C(&a15);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  sub_1D75A74B4(v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return swift_release_n();
}

size_t OUTLINED_FUNCTION_30_1(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_33_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return sub_1D758CB10((uint64_t)&a49, (uint64_t)&a67);
}

uint64_t OUTLINED_FUNCTION_35_1(float a1)
{
  *uint64_t v1 = a1;
  return sub_1D75BC478();
}

char *OUTLINED_FUNCTION_37(char *a1, int64_t a2)
{
  return sub_1D75CFEF4(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return swift_retain_n();
}

double OUTLINED_FUNCTION_47_1()
{
  *(unsigned char *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v0;
  *(void *)(v1 + 16) = v2;
  double result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(void *)(v1 + 56) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_1D7661260();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return sub_1D76610E0();
}

void OUTLINED_FUNCTION_53_0(uint64_t a1@<X8>)
{
  *(void *)(v2 - 288) = a1;
  *(void *)(v2 - 280) = v1;
}

uint64_t OUTLINED_FUNCTION_54_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>)
{
  return sub_1D75D45D4(a1, a9, v12, v13, v14, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_i64[1], a12.n128_i64[0], a12.n128_i64[1], v15, v16, v17, a2, a3,
           a4,
           a5);
}

uint64_t OUTLINED_FUNCTION_56_0(float a1)
{
  *uint64_t v1 = a1;
  return sub_1D75BC478();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return sub_1D7661020();
}

void OUTLINED_FUNCTION_60_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  a29 = 5;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  a34 = 4;
  sub_1D759127C(&a29);
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_63()
{
  return swift_arrayDestroy();
}

__n128 *OUTLINED_FUNCTION_64()
{
  return sub_1D75D48CC((__n128 *)&STACK[0x2C8], v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_66()
{
  sub_1D75C0C5C();
}

void OUTLINED_FUNCTION_68(unsigned __int8 *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1D75CC950(a1, a2, a3, a4, 0, 0xF000000000000000, 0, 0, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_71(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return sub_1D758DBE8(a1, a2, &a67);
}

uint64_t OUTLINED_FUNCTION_76()
{
  return sub_1D76616A0();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return sub_1D76616A0();
}

BOOL OUTLINED_FUNCTION_78()
{
  return os_log_type_enabled(v0, v1);
}

void *OUTLINED_FUNCTION_79(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t __dst)
{
  return memcpy(&__dst, &STACK[0x2C8], 0x92uLL);
}

uint64_t OUTLINED_FUNCTION_81()
{
  return v0 - 224;
}

uint64_t OUTLINED_FUNCTION_82()
{
  return swift_weakInit();
}

void OUTLINED_FUNCTION_86(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_allocObject();
}

BOOL OUTLINED_FUNCTION_90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_94()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_96()
{
  return os_log_type_enabled(v1, v0);
}

__n128 OUTLINED_FUNCTION_100()
{
  return v0[4];
}

__n128 OUTLINED_FUNCTION_101()
{
  return v0[5];
}

uint64_t OUTLINED_FUNCTION_104()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_105(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_1D758DBE8(a1, a2, (uint64_t *)va);
}

double OUTLINED_FUNCTION_107()
{
  *(unsigned char *)uint64_t v0 = v3;
  *(void *)(v0 + 8) = v1;
  *(void *)(v0 + 16) = v2;
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_109()
{
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_110()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return v0;
}

void OUTLINED_FUNCTION_112(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  sub_1D758D424(v13, v12, v11, v10, v9, v14, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_114()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_115()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_116()
{
  return sub_1D7661020();
}

void OUTLINED_FUNCTION_120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, char a12)
{
  a10 = 0u;
  a11 = 0u;
  a12 = 4;
  sub_1D759127C(&a9);
}

double OUTLINED_FUNCTION_121()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_122()
{
  return 0x6E6E75742D70725FLL;
}

uint64_t OUTLINED_FUNCTION_123()
{
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return v0;
}

void OUTLINED_FUNCTION_125(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  sub_1D758D424(v9, v10, v11, v12, v13, v14, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_126(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  return sub_1D758DBE8(a1, a2, &a42);
}

uint64_t OUTLINED_FUNCTION_127(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_133()
{
  return sub_1D7661020();
}

void OUTLINED_FUNCTION_134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_1D758D424(a15, a16, a17, v18, v17, 3, a7, a8, a9);
}

void OUTLINED_FUNCTION_135()
{
  *(void *)(v1 + 16) = v2;
  uint64_t v5 = v1 + 16 * v4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v0;
}

id OUTLINED_FUNCTION_136(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  *(_WORD *)(v49 + 12) = 2080;
  return v50;
}

__n128 *OUTLINED_FUNCTION_137_0()
{
  return sub_1D75D48CC((__n128 *)&STACK[0x2C8], v2, v3, v0, v1);
}

void OUTLINED_FUNCTION_139(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

__n128 *OUTLINED_FUNCTION_141(__n128 *a1, uint64_t (*a2)(void))
{
  return sub_1D75D48CC(a1, a2, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_142()
{
  return sub_1D7661410();
}

uint64_t OUTLINED_FUNCTION_145()
{
  return sub_1D7661730();
}

uint64_t OUTLINED_FUNCTION_147()
{
  return v0;
}

void OUTLINED_FUNCTION_148(uint64_t a1@<X8>)
{
  *(void *)(v1 + 208) = a1;
}

uint64_t OUTLINED_FUNCTION_157()
{
  return sub_1D7661300();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return v0;
}

void OUTLINED_FUNCTION_161(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void), void (*a8)(uint64_t, uint64_t), void (*a9)(void))
{
  sub_1D758D424(v9, v10, v11, v12, v13, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_162()
{
  return sub_1D7660B90();
}

uint64_t OUTLINED_FUNCTION_165(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  return sub_1D75D49A4((uint64_t)&a54);
}

uint64_t OUTLINED_FUNCTION_166(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  return sub_1D75D49A4((uint64_t)&a54);
}

uint64_t OUTLINED_FUNCTION_170()
{
  return sub_1D75D49A4(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_171(uint64_t a1)
{
  return *(void *)a1;
}

void OUTLINED_FUNCTION_173(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

id OUTLINED_FUNCTION_174(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_175()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_176()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_177()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_182()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_185()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_186()
{
  return sub_1D7660A50();
}

uint64_t OUTLINED_FUNCTION_187()
{
  return sub_1D7661730();
}

uint64_t OUTLINED_FUNCTION_190()
{
  return sub_1D7660A50();
}

uint64_t OUTLINED_FUNCTION_193()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_196()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_201()
{
  return sub_1D7661690();
}

void OUTLINED_FUNCTION_202()
{
  OS_dispatch_queue.assertOnQueueHierarchy()();
}

void OUTLINED_FUNCTION_203()
{
  sub_1D75C0C5C();
}

uint64_t OUTLINED_FUNCTION_206()
{
  return sub_1D75941DC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_211()
{
  return sub_1D7661560();
}

uint64_t OUTLINED_FUNCTION_214()
{
  return sub_1D7661260();
}

uint64_t OUTLINED_FUNCTION_215()
{
  return sub_1D7660A50();
}

uint64_t OUTLINED_FUNCTION_216()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_217()
{
  return sub_1D7660A50();
}

id OUTLINED_FUNCTION_218()
{
  return sub_1D75D480C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_221(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D7592558(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_223()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_224()
{
  return sub_1D7660A50();
}

uint64_t OUTLINED_FUNCTION_225()
{
  return sub_1D7660A50();
}

uint64_t OUTLINED_FUNCTION_226()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_227(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D75CFFE4(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_228()
{
  return sub_1D7660A50();
}

uint64_t sub_1D75D6460(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D75D64A4()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82BC30 = result;
  return result;
}

uint64_t generatePairingKeyPair()()
{
  v4[0] = static Data.randomBytes(ofLength:)(0x20uLL);
  v4[1] = v0;
  v3[0] = static Data.randomBytes(ofLength:)(0x20uLL);
  v3[1] = v1;
  sub_1D75D8110(v4, v3);
  return v4[0];
}

uint64_t InProcessIRKGenerator.generateIRK(completion:)(void (*a1)(uint64_t, unint64_t, void))
{
  uint64_t v6 = static Data.randomBytes(ofLength:)(0x10uLL);
  unint64_t v7 = v2;
  sub_1D75D8668(&v6);
  uint64_t v3 = v6;
  unint64_t v4 = v7;
  a1(v6, v7, 0);
  return sub_1D75933F0(v3, v4);
}

uint64_t InProcessIRKGenerator.generateIRKSync()()
{
  v2[0] = static Data.randomBytes(ofLength:)(0x10uLL);
  v2[1] = v0;
  sub_1D75D8668(v2);
  return v2[0];
}

uint64_t sub_1D75D6634(void (*a1)(uint64_t, unint64_t, void))
{
  return InProcessIRKGenerator.generateIRK(completion:)(a1);
}

uint64_t OPACKEncoderCreateData(from:)(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v7 = 0;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  uint64_t v1 = (void *)sub_1D7661550();
  id NSDataTm = OPACKEncoderCreateNSDataTm(v1, (uint64_t)&v7, MEMORY[0x1E4F5E260]);
  swift_unknownObjectRelease();
  if (NSDataTm)
  {
    uint64_t v3 = sub_1D765FED0();
  }
  else
  {
    sub_1D7660B10();
    uint64_t v3 = v4;
    id v5 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
    OUTLINED_FUNCTION_3_6();
    swift_willThrow();
  }
  return v3;
}

void RapportIRKGenerator.init(queue:)(void *a1@<X0>, void *a2@<X8>)
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4B0);
  uint64_t v4 = sub_1D7660950();
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_1_7();
  sub_1D7660930();
  uint64_t v5 = sub_1D7660E60();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_7();
  sub_1D75D89BC((unint64_t *)&qword_1EBDEC5A0, MEMORY[0x1F41AB0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC590);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEC598, &qword_1EBDEC590);
  sub_1D7661090();
  sub_1D7660E90();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, void))(v9 + 104))(v8 - v7, *MEMORY[0x1E4FBCC50]);
  uint64_t v10 = sub_1D7660EB0();
  if (MEMORY[0x1E4F946D0])
  {
    uint64_t v11 = (void *)v10;
    id v12 = objc_allocWithZone(MEMORY[0x1E4F946D0]);
    id v13 = v11;
    id v14 = a1;
    id v15 = objc_msgSend(v12, sel_init);
    objc_msgSend(v15, sel_setDispatchQueue_, v13);

    *a2 = v15;
    a2[1] = v14;
    a2[2] = v13;
  }
  else
  {
    sub_1D7661260();
    __break(1u);
  }
}

uint64_t RapportIRKGenerator.generateIRK(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v2;
  uint64_t v5 = *(void **)(v2 + 8);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v6;
  v8[3] = v5;
  void v8[4] = v7;
  v8[5] = a1;
  v8[6] = a2;
  void aBlock[4] = sub_1D75D8994;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_2;
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = sub_1D7660950();
  OUTLINED_FUNCTION_0_5();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_7();
  uint64_t v16 = v15 - v14;
  id v17 = v6;
  id v18 = v5;
  v7;
  swift_retain();
  sub_1D7660930();
  uint64_t v19 = sub_1D7660910();
  OUTLINED_FUNCTION_0_5();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_1_7();
  uint64_t v25 = v24 - v23;
  sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v16, v25, v9);
  _Block_release(v9);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v19);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  return swift_release();
}

uint64_t sub_1D75D6C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D75D6C94(a4, a5);
}

uint64_t sub_1D75D6C94(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v2;
  uint64_t v5 = *(void **)(v2 + 8);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = sub_1D76609E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v11 = v7;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBE8], v8);
  id v12 = v7;
  LOBYTE(v7) = sub_1D7660A00();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v7)
  {
    uint64_t v14 = swift_allocObject();
    *(unsigned char *)(v14 + 16) = 0;
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 0;
    uint64_t v16 = swift_allocObject();
    *(_DWORD *)(v16 + 16) = -1;
    id v17 = (void *)swift_allocObject();
    v17[2] = v16;
    void v17[3] = v6;
    v17[4] = v5;
    v17[5] = v12;
    v17[6] = a1;
    v17[7] = a2;
    id v18 = (void *)swift_allocObject();
    long long v18[2] = v14;
    v18[3] = v15;
    v18[4] = v6;
    v18[5] = v5;
    id v27 = sub_1D75D8CC0;
    v18[6] = v12;
    v18[7] = sub_1D75D8CC0;
    v18[8] = v17;
    void aBlock[4] = sub_1D75D8D54;
    long long v29 = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D7631814;
    aBlock[3] = &block_descriptor_16;
    uint64_t v19 = _Block_copy(aBlock);
    v25[1] = v29;
    id v20 = v6;
    id v21 = v5;
    id v22 = v12;
    id v26 = v20;
    id v23 = v21;
    uint64_t v24 = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    swift_beginAccess();
    notify_register_dispatch("com.apple.rapport.identitiesChanged", (int *)(v16 + 16), v24, v19);
    swift_endAccess();
    _Block_release(v19);
    sub_1D75D72C0(v26, v23, v24, (uint64_t)v27, (uint64_t)v17, v15, v14);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75D6FBC(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v27[3] = a6;
  swift_beginAccess();
  int v14 = *(_DWORD *)(a4 + 16);
  if (v14 != -1) {
    notify_cancel(v14);
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a8;
  *(void *)(v15 + 24) = a9;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  char v16 = a3 & 1;
  *(unsigned char *)(v15 + 48) = a3 & 1;
  void aBlock[4] = sub_1D75D914C;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_28;
  id v17 = _Block_copy(aBlock);
  uint64_t v18 = sub_1D7660950();
  uint64_t v27[2] = v27;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1D75D9180(a1, a2, v16);
  sub_1D7660930();
  uint64_t v22 = sub_1D7660910();
  v27[1] = v27;
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[4] = MEMORY[0x1E4FBC860];
  sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v21, v25, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return swift_release();
}

void sub_1D75D72C0(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a4;
  uint64_t v13 = sub_1D76609E0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v16 = a3;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v13);
  id v17 = a3;
  char v18 = sub_1D7660A00();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1D7660DD0();
  if (qword_1EA82A9E0 != -1) {
LABEL_5:
  }
    swift_once();
  sub_1D7660010();
  uint64_t v19 = (void *)swift_allocObject();
  _OWORD v19[2] = a1;
  void v19[3] = a2;
  uint64_t v20 = v26;
  v19[4] = v17;
  v19[5] = v20;
  v19[6] = a5;
  v19[7] = a6;
  v19[8] = a7;
  void aBlock[4] = sub_1D75D8DC8;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D7CA4;
  aBlock[3] = &block_descriptor_22;
  id v21 = _Block_copy(aBlock);
  id v22 = a1;
  id v23 = a2;
  id v24 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_getIdentitiesWithFlags_completion_, 1, v21);
  _Block_release(v21);
}

void sub_1D75D7540(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v60 = a4;
  uint64_t v61 = a7;
  uint64_t v59 = a3;
  uint64_t v14 = sub_1D76609E0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (uint64_t *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v17 = a5;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBE8], v14);
  id v58 = a5;
  os_log_type_t v18 = sub_1D7660A00();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    os_log_type_t v18 = sub_1D7660DD0();
    if (qword_1EA82A9E0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v19 = qword_1EA82BC30;
  os_log_type_t v20 = v18;
  if (os_log_type_enabled((os_log_t)qword_1EA82BC30, v18))
  {
    id v21 = a2;
    swift_bridgeObjectRetain();
    id v22 = a2;
    swift_bridgeObjectRetain();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v66[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    v65[0] = (unint64_t)a2;
    id v25 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBC0);
    uint64_t v57 = a8;
    uint64_t v26 = sub_1D7660B60();
    v65[0] = sub_1D758DBE8(v26, v27, v66);
    sub_1D7661020();
    swift_bridgeObjectRelease();

    *(_WORD *)(v23 + 12) = 2080;
    v65[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC48);
    uint64_t v28 = sub_1D7660B60();
    v65[0] = sub_1D758DBE8(v28, v29, v66);
    a8 = v57;
    sub_1D7661020();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v19, v20, "Received IRK fetch response from Rapport. Error = %s, identities = %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v24, -1, -1);
    MEMORY[0x1D9474C60](v23, -1, -1);
  }
  if (!a2)
  {
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1D7661270()) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v31)
        {
LABEL_10:
          sub_1D762C108(0, (a1 & 0xC000000000000001) == 0, a1);
          if ((a1 & 0xC000000000000001) != 0) {
            id v32 = (id)MEMORY[0x1D94737E0](0, a1);
          }
          else {
            id v32 = *(id *)(a1 + 32);
          }
          uint64_t v33 = v32;
          swift_bridgeObjectRelease();
          uint64_t v34 = sub_1D75D9098(v33);
          if (v35 >> 60 == 15)
          {
            sub_1D7661260();
            __break(1u);
          }
          else
          {
            uint64_t v36 = v34;
            unint64_t v37 = v35;
            a6();
            sub_1D75941DC(v36, v37);
          }
          return;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_1D75D8DFC();
    long long v30 = (void *)swift_allocError();
    *char v38 = 1;
    goto LABEL_19;
  }
  long long v30 = a2;
LABEL_19:
  id v39 = a2;
  swift_willThrow();
  swift_beginAccess();
  if (*(unsigned char *)(a8 + 16) == 1)
  {
    os_log_type_t v40 = sub_1D7660DD0();
    uint64_t v41 = qword_1EA82BC30;
    os_log_type_t v42 = v40;
    if (os_log_type_enabled((os_log_t)qword_1EA82BC30, v40))
    {
      id v43 = v30;
      id v44 = v30;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v65[0] = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v64 = (uint64_t)v30;
      id v47 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      uint64_t v48 = sub_1D7660B60();
      uint64_t v64 = sub_1D758DBE8(v48, v49, (uint64_t *)v65);
      sub_1D7661020();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D757C000, v41, v42, "Second attempt to fetch IRK from Rapport failed. Propagating error to client: %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v46, -1, -1);
      MEMORY[0x1D9474C60](v45, -1, -1);
    }
    id v50 = v30;
    ((void (*)(void *, void, uint64_t))a6)(v30, 0, 1);
  }
  else
  {
    swift_beginAccess();
    *(unsigned char *)(a8 + 16) = 1;
    swift_beginAccess();
    if (*(unsigned char *)(a9 + 16) == 1)
    {
      os_log_type_t v51 = sub_1D7660DD0();
      long long v52 = qword_1EA82BC30;
      os_log_type_t v53 = v51;
      if (os_log_type_enabled((os_log_t)qword_1EA82BC30, v51))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        uint64_t v63 = v55;
        *(_DWORD *)uint64_t v54 = 136446210;
        uint64_t v62 = sub_1D758DBE8(0xD000000000000023, 0x80000001D7674A10, &v63);
        sub_1D7661020();
        _os_log_impl(&dword_1D757C000, v52, v53, "Attempting to fetch IRK from Rapport again due to %{public}s notification", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v55, -1, -1);
        MEMORY[0x1D9474C60](v54, -1, -1);
      }
      sub_1D75D72C0(v59, v60, v58, a6, v61, a8, a9);
    }
  }
}

uint64_t sub_1D75D7CA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D75AEF50(0, &qword_1EA82BC38);
    uint64_t v4 = sub_1D7660D00();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1D75D7D48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  os_log_type_t v12 = sub_1D7660DD0();
  if (qword_1EA82A9E0 != -1) {
    swift_once();
  }
  uint64_t v13 = (unsigned char *)(a2 + 16);
  uint64_t v14 = qword_1EA82BC30;
  if (os_log_type_enabled((os_log_t)qword_1EA82BC30, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v26[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    void v25[4] = sub_1D758DBE8(0xD000000000000023, 0x80000001D7674A10, v26);
    sub_1D7661020();
    _os_log_impl(&dword_1D757C000, v14, v12, "Received %{public}s darwin notification", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v16, -1, -1);
    MEMORY[0x1D9474C60](v15, -1, -1);
  }
  swift_beginAccess();
  if ((*v13 & 1) == 0)
  {
    swift_beginAccess();
    *uint64_t v13 = 1;
    swift_beginAccess();
    if (*(unsigned char *)(a3 + 16) == 1)
    {
      os_log_type_t v17 = sub_1D7660DD0();
      os_log_type_t v18 = qword_1EA82BC30;
      os_log_type_t v19 = v17;
      if (os_log_type_enabled((os_log_t)qword_1EA82BC30, v17))
      {
        os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        v25[0] = v21;
        *(_DWORD *)os_log_type_t v20 = 136446210;
        sub_1D758DBE8(0xD000000000000023, 0x80000001D7674A10, v25);
        sub_1D7661020();
        _os_log_impl(&dword_1D757C000, v18, v19, "Attempting to fetch IRK from Rapport again due to %{public}s notification", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v21, -1, -1);
        MEMORY[0x1D9474C60](v20, -1, -1);
      }
      sub_1D75D72C0(a4, a5, a6, a7, a8, a3, a2);
    }
  }
}

id sub_1D75D8060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_1D7660AE0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v8 = (void *)sub_1D7660A10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_1D75D8110(uint64_t *a1, uint64_t *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1D7665EB0;
      uint64_t v9 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v9 < (int)v3) {
        goto LABEL_16;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v3, sub_1D765FD10())) {
        goto LABEL_17;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v11 = sub_1D765FCC0();
      swift_release();
      uint64_t v8 = v11;
LABEL_11:
      if (v9 < (int)v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1D75D8E48((int)v3, v3 >> 32, v8, a2);
      unint64_t v10 = v8 | 0x4000000000000000;
      *a1 = v3;
LABEL_13:
      a1[1] = v10;
      return result;
    case 2uLL:
      *(void *)&long long v12 = *a1;
      *((void *)&v12 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1D765FDB0();
      uint64_t result = sub_1D75D8E48(*(void *)(v12 + 16), *(void *)(v12 + 24), *((uint64_t *)&v12 + 1), a2);
      unint64_t v10 = *((void *)&v12 + 1) | 0x8000000000000000;
      *a1 = v12;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v12 + 7) = 0;
      *(void *)&long long v12 = 0;
      return sub_1D75D83B8(a2, (uint64_t)&v12);
    default:
      *(void *)&long long v12 = *a1;
      WORD4(v12) = v2;
      BYTE10(v12) = BYTE2(v2);
      BYTE11(v12) = BYTE3(v2);
      BYTE12(v12) = BYTE4(v2);
      BYTE13(v12) = BYTE5(v2);
      BYTE14(v12) = BYTE6(v2);
      uint64_t result = sub_1D75D83B8(a2, (uint64_t)&v12);
      unint64_t v7 = DWORD2(v12) | ((unint64_t)BYTE12(v12) << 32) | ((unint64_t)BYTE13(v12) << 40) | ((unint64_t)BYTE14(v12) << 48);
      *a1 = v12;
      a1[1] = v7;
      return result;
  }
}

uint64_t sub_1D75D83B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1D7665EB0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = v3 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v10 < (int)v3) {
        goto LABEL_16;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v3, sub_1D765FD10())) {
        goto LABEL_17;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v12 = sub_1D765FCC0();
      swift_release();
      uint64_t v8 = v12;
      uint64_t v10 = v3 >> 32;
LABEL_11:
      if (v10 < (int)v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1D75D8EDC((int)v3, v10, v8, a2);
      unint64_t v11 = v8 | 0x4000000000000000;
      *a1 = v3;
LABEL_13:
      a1[1] = v11;
      return result;
    case 2uLL:
      *(void *)&long long v13 = *a1;
      *((void *)&v13 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1D765FDB0();
      uint64_t result = sub_1D75D8EDC(*(void *)(v13 + 16), *(void *)(v13 + 24), *((uint64_t *)&v13 + 1), a2);
      unint64_t v11 = *((void *)&v13 + 1) | 0x8000000000000000;
      *a1 = v13;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v13 + 7) = 0;
      *(void *)&long long v13 = 0;
      return sub_1D75D9028((uint64_t)&v13, 0, a2);
    default:
      *(void *)&long long v13 = *a1;
      WORD4(v13) = v2;
      BYTE10(v13) = BYTE2(v2);
      BYTE11(v13) = BYTE3(v2);
      BYTE12(v13) = BYTE4(v2);
      BYTE13(v13) = BYTE5(v2);
      BYTE14(v13) = BYTE6(v2);
      uint64_t result = sub_1D75D9028((uint64_t)&v13, BYTE6(v2), a2);
      unint64_t v7 = DWORD2(v13) | ((unint64_t)BYTE12(v13) << 32) | ((unint64_t)BYTE13(v13) << 40) | ((unint64_t)BYTE14(v13) << 48);
      *a1 = v13;
      a1[1] = v7;
      return result;
  }
}

uint64_t sub_1D75D8668(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1D7665EB0;
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v6 < (int)v2) {
        goto LABEL_16;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v2, sub_1D765FD10())) {
        goto LABEL_17;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v8 = sub_1D765FCC0();
      swift_release();
      uint64_t v5 = v8;
LABEL_11:
      if (v6 < (int)v2)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1D75D8F7C((int)v2, v2 >> 32);
      unint64_t v7 = v5 | 0x4000000000000000;
      *a1 = v2;
LABEL_13:
      a1[1] = v7;
      return result;
    case 2uLL:
      uint64_t v10 = *a1;
      uint64_t v12 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1D765FDB0();
      uint64_t result = sub_1D75D8F7C(*(void *)(v10 + 16), *(void *)(v10 + 24));
      unint64_t v7 = v12 | 0x8000000000000000;
      *a1 = v10;
      goto LABEL_13;
    case 3uLL:
      return CryptoHKDF();
    default:
      LOWORD(v9) = *a1;
      BYTE2(v9) = BYTE2(*a1);
      BYTE3(v9) = BYTE3(*a1);
      WORD2(v9) = WORD2(*a1);
      BYTE6(v9) = BYTE6(*a1);
      HIBYTE(v9) = HIBYTE(*a1);
      LOWORD(v11) = a1[1];
      BYTE2(v11) = BYTE2(a1[1]);
      HIBYTE(v11) = BYTE3(a1[1]);
      __int16 v13 = WORD2(a1[1]);
      unsigned __int8 v14 = BYTE6(a1[1]);
      uint64_t result = CryptoHKDF();
      *a1 = v9;
      a1[1] = v11 | ((unint64_t)v13 << 32) | ((unint64_t)HIBYTE(v13) << 40) | ((unint64_t)v14 << 48);
      return result;
  }
}

uint64_t sub_1D75D8944()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D75D8994()
{
  return sub_1D75D6C58(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1D75D89BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75D8A04(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of IRKGenerator.generateIRK(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for InProcessIRKGenerator()
{
  return &type metadata for InProcessIRKGenerator;
}

void *initializeBufferWithCopyOfBuffer for RapportIRKGenerator(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for RapportIRKGenerator(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for RapportIRKGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  unsigned int v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for RapportIRKGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for RapportIRKGenerator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RapportIRKGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RapportIRKGenerator()
{
  return &type metadata for RapportIRKGenerator;
}

uint64_t sub_1D75D8C50()
{
  return OUTLINED_FUNCTION_2_3(v0, 17);
}

uint64_t sub_1D75D8C5C()
{
  return OUTLINED_FUNCTION_2_3(v0, 20);
}

uint64_t sub_1D75D8C68()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D75D8CC0(void *a1, unint64_t a2, char a3)
{
  return sub_1D75D6FBC(a1, a2, a3 & 1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_1D75D8CF4()
{
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1D75D8D54(uint64_t a1)
{
  sub_1D75D7D48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1D75D8D68()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1D75D8DC8(unint64_t a1, void *a2)
{
  sub_1D75D7540(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void (**)(void))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

unint64_t sub_1D75D8DFC()
{
  unint64_t result = qword_1EA82BC40;
  if (!qword_1EA82BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BC40);
  }
  return result;
}

uint64_t sub_1D75D8E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result = sub_1D765FCE0();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t result = sub_1D765FD10();
    uint64_t v9 = a1 - result;
    if (__OFSUB__(a1, result))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1D765FD00();
      return sub_1D75D83B8(a4, v8 + v9);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D75D8EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1D765FCE0();
  if (!result) {
    goto LABEL_8;
  }
  uint64_t result = sub_1D765FD10();
  if (__OFSUB__(a1, result))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1D765FD00();
  uint64_t result = ccsha512_di();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = ccrng();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a4) {
    return cced25519_make_key_pair();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D75D8F7C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D765FCE0();
  if (result)
  {
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1D765FD00();
      return CryptoHKDF();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D75D9028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = ccsha512_di();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t result = ccrng();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a3) {
    return cced25519_make_key_pair();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D75D9098(void *a1)
{
  id v1 = objc_msgSend(a1, sel_deviceIRKData);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D765FED0();

  return v3;
}

uint64_t sub_1D75D90FC()
{
  swift_release();
  sub_1D75D9140(*(id *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return MEMORY[0x1F4186498](v0, 49, 7);
}

void sub_1D75D9140(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1D75933F0((uint64_t)a1, a2);
  }
}

uint64_t sub_1D75D914C()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

id sub_1D75D9180(id a1, unint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)sub_1D75934F4((uint64_t)a1, a2);
  }
}

uint64_t sub_1D75D91A8()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82BC50 = result;
  return result;
}

uint64_t static VirtualInterface.minSupportedMTU.getter()
{
  return 1280;
}

uint64_t static VirtualInterface.maxSupportedMTU.getter()
{
  return 16000;
}

uint64_t static VirtualInterface.maxSupportedPendingPackets.getter()
{
  if (qword_1EA82A8E0 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17[0], v17[1], v18);
  unint64_t v8 = sub_1D7595FCC();
  char v10 = v9;
  sub_1D759CCA4((uint64_t)v17);
  if (v8 <= 1) {
    unsigned int v11 = 1;
  }
  else {
    unsigned int v11 = v8;
  }
  if (v11 >= 0x400) {
    unsigned int v11 = 1024;
  }
  if (v10 & 1 | (HIDWORD(v8) != 0)) {
    return 32;
  }
  else {
    return v11;
  }
}

uint64_t static VirtualInterface.defaultMTU.getter()
{
  if (qword_1EA82A8E8 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_11(v0, v1, v2, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17[0], v17[1], v18);
  uint64_t v8 = sub_1D7595FCC();
  char v10 = v9;
  sub_1D759CCA4((uint64_t)v17);
  unsigned int v11 = (unsigned __int16)v8;
  if ((unsigned __int16)v8 <= 0x500u) {
    unsigned int v11 = 1280;
  }
  if (v11 >= 0x3E80) {
    unsigned int v11 = 16000;
  }
  if (v10 & 1 | ((v8 & 0xFFFFFFFFFFFF0000) != 0)) {
    return 16000;
  }
  else {
    return v11;
  }
}

uint64_t VirtualInterface.interfaceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VirtualInterface.address.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D758B1EC(v1 + 32, a1);
}

uint64_t VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(void *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  VirtualInterface.init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32), a6, a7);
  return v14;
}

uint64_t VirtualInterface.init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  char v10 = v7;
  int v170 = a4;
  uint64_t v161 = a3;
  uint64_t v15 = *v7;
  v7[20] = 0;
  v7[11] = 0;
  v7[12] = 0;
  uint64_t v16 = v15;
  if (qword_1EA82A8F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = qword_1EA82B0A8;
  uint64_t v18 = unk_1EA82B0B0;
  if (byte_1EA82B0B9) {
    __int16 v19 = 256;
  }
  else {
    __int16 v19 = 0;
  }
  __int16 v20 = v19 | byte_1EA82B0B8;
  swift_bridgeObjectRetain();
  LOBYTE(v20) = sub_1D758C360(v17, v18, v20);
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_1D75D9F48();
    uint64_t v21 = (void *)v10[20];
    v10[20] = v22;
  }
  uint64_t v23 = sub_1D75DA738();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    uint64_t v57 = OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_16_4(v57, v58, v59, v60, v61, v62, v63, v64, v132, v136, v140, v144, v149, v151, v155, v156, a6, v159, v161,
      v164,
      v165,
      v166,
      v167);
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_2_1();
    swift_willThrow();

    goto LABEL_21;
  }
  uint64_t v133 = v9;
  uint64_t v137 = a5;
  BOOL v160 = (void *)v23;
  uint64_t result = NEVirtualInterfaceCopyName();
  if (result)
  {
    id v25 = (void *)result;
    uint64_t v26 = sub_1D7660B10();
    unint64_t v28 = v27;

    char v171 = 0;
    swift_bridgeObjectRetain();
    sub_1D7661100();
    swift_bridgeObjectRelease();
    uint64_t v166 = 0xD000000000000029;
    uint64_t v167 = 0x80000001D7674AF0;
    sub_1D7660BC0();
    sub_1D7660B70();
    swift_bridgeObjectRelease();
    uint64_t v29 = os_transaction_create();
    swift_release();
    if (v29)
    {
      uint64_t v145 = v26;
      unint64_t v150 = v28;
      uint64_t v157 = a2;
      unint64_t v152 = a1;
      uint64_t v141 = v29;
      if (a7)
      {
        os_log_type_t v30 = sub_1D7660DD0();
        if (qword_1EA82A9E8 != -1) {
          swift_once();
        }
        if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v30))
        {
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_22_2();
          uint64_t v166 = OUTLINED_FUNCTION_17_4();
          uint64_t v31 = OUTLINED_FUNCTION_12_3(4.8751e-34);
          uint64_t v39 = OUTLINED_FUNCTION_21_6(v31, v32, v33, v34, v35, v36, v37, v38, v133, v137, v29, v26, v28);
          OUTLINED_FUNCTION_5_5(v39);
          swift_bridgeObjectRelease_n();
          OUTLINED_FUNCTION_33_4(&dword_1D757C000, v40, v41, "Physical interface name is:%{public}s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        os_log_type_t v42 = (void *)sub_1D7660AE0();
        int v43 = NEVirtualInterfaceSetDelegateInterface();

        if (v43)
        {
          os_log_type_t v44 = sub_1D7660DD0();
          if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v44))
          {
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_22_2();
            uint64_t v166 = OUTLINED_FUNCTION_17_4();
            uint64_t v45 = OUTLINED_FUNCTION_12_3(4.8149e-34);
            uint64_t v53 = OUTLINED_FUNCTION_21_6(v45, v46, v47, v48, v49, v50, v51, v52, v133, v137, v141, v145, v150);
            OUTLINED_FUNCTION_5_5(v53);
            swift_bridgeObjectRelease_n();
            uint64_t v56 = "Assigned %s as the delegate interface on virtual interface successfully";
LABEL_28:
            OUTLINED_FUNCTION_33_4(&dword_1D757C000, v54, v55, v56);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_1();
            OUTLINED_FUNCTION_1();
            goto LABEL_30;
          }
        }
        else
        {
          os_log_type_t v74 = sub_1D7660DC0();
          if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v74))
          {
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_22_2();
            uint64_t v166 = OUTLINED_FUNCTION_17_4();
            uint64_t v75 = OUTLINED_FUNCTION_12_3(4.8149e-34);
            uint64_t v83 = OUTLINED_FUNCTION_21_6(v75, v76, v77, v78, v79, v80, v81, v82, v133, v137, v141, v145, v150);
            OUTLINED_FUNCTION_5_5(v83);
            swift_bridgeObjectRelease_n();
            uint64_t v56 = "Failed to set %s as the delegate interface on virtual interface";
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1D7660DD0();
        if (qword_1EA82A9E8 != -1) {
          swift_once();
        }
        sub_1D7660010();
      }
LABEL_30:
      sub_1D758B1EC(a2, (uint64_t)&v166);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC58);
      sub_1D7660B60();
      sub_1D758B1EC(v161, (uint64_t)&v166);
      sub_1D7660B60();
      uint64_t v84 = (void *)sub_1D7660AE0();
      uint64_t v85 = (void *)sub_1D7660AE0();
      int v86 = NEVirtualInterfaceAddAddress();

      if (v86)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (NEVirtualInterfaceSetRankNever())
        {
          uint64_t v87 = a2;
          uint64_t v88 = v161;
          if (NEVirtualInterfaceUpdateAdHocService())
          {
            if ((v170 & 0x10000) != 0) {
              static VirtualInterface.defaultMTU.getter();
            }
            if (NEVirtualInterfaceSetMTU()
              && ((v137 & 0x100000000) != 0 || NEVirtualInterfaceSetMaxPendingPackets()))
            {
              _OWORD v10[2] = v145;
              v10[3] = v150;
              sub_1D758B1EC(v157, (uint64_t)(v10 + 4));
              v10[9] = (uint64_t)v160;
              v10[10] = (uint64_t)v152;
              *(_OWORD *)(v10 + 13) = 0u;
              *(_OWORD *)(v10 + 15) = 0u;
              *(_OWORD *)(v10 + 17) = 0u;
              v10[19] = v141;
              swift_retain();
              id v89 = v152;
              OUTLINED_FUNCTION_31_1();
              swift_unknownObjectRetain();
              sub_1D75DAA4C();
              if (v133)
              {
                swift_unknownObjectRelease();
                sub_1D75DA888(&v171, v145, v150);
                swift_bridgeObjectRelease();
                swift_release();

                swift_release();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_release();

                swift_unknownObjectRelease();
              }
              __swift_destroy_boxed_opaque_existential_0Tm(v161);
              __swift_destroy_boxed_opaque_existential_0Tm(v157);
              return (uint64_t)v10;
            }
            swift_bridgeObjectRelease();
            sub_1D75AF4C0();
            OUTLINED_FUNCTION_31_1();
            OUTLINED_FUNCTION_0();
            uint64_t v116 = OUTLINED_FUNCTION_1_8();
            OUTLINED_FUNCTION_16_4(v116, v117, v118, v119, v120, v121, v122, v123, v133, v137, v141, v145, v150, (uint64_t)v152, v16, v157, a6, (uint64_t)v160, v161,
              v164,
              v165,
              v166,
              v167);
            OUTLINED_FUNCTION_3_7();
            OUTLINED_FUNCTION_2_1();
            swift_willThrow();
            uint64_t v124 = swift_unknownObjectRelease();
            OUTLINED_FUNCTION_34_1(v124, v125, v126, v127, v128, v129, v130, v131, v135, v139, v143, v148);
            swift_bridgeObjectRelease();
            swift_release();

            uint64_t v115 = v163;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1D75AF4C0();
            OUTLINED_FUNCTION_31_1();
            OUTLINED_FUNCTION_0();
            uint64_t v99 = OUTLINED_FUNCTION_1_8();
            OUTLINED_FUNCTION_16_4(v99, v100, v101, v102, v103, v104, v105, v106, v133, v137, v141, v145, v150, (uint64_t)v152, v16, v157, a6, (uint64_t)v160, v161,
              v164,
              v165,
              v166,
              v167);
            OUTLINED_FUNCTION_3_7();
            OUTLINED_FUNCTION_36_2();
            OUTLINED_FUNCTION_2_1();
            swift_willThrow();
            uint64_t v107 = swift_unknownObjectRelease();
            OUTLINED_FUNCTION_34_1(v107, v108, v109, v110, v111, v112, v113, v114, v134, v138, v142, v147);
            swift_bridgeObjectRelease();
            swift_release();

            uint64_t v115 = v88;
          }
          __swift_destroy_boxed_opaque_existential_0Tm(v115);
          uint64_t v73 = v87;
          goto LABEL_22;
        }
        unint64_t v90 = v150;
        swift_bridgeObjectRelease();
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        uint64_t v91 = OUTLINED_FUNCTION_1_8();
        OUTLINED_FUNCTION_16_4(v91, v92, v93, v94, v95, v96, v97, v98, v133, v137, v141, v145, v150, (uint64_t)v152, v16, a2, a6, (uint64_t)v160, v161,
          v164,
          v165,
          v166,
          v167);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_1();
        swift_willThrow();
        swift_unknownObjectRelease();
        sub_1D75DA888(&v171, v146, v90);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        sub_1D7661690();
        uint64_t v168 = v166;
        uint64_t v169 = v167;
        sub_1D7661100();
        sub_1D7660BC0();
        sub_1D7660BC0();
        swift_bridgeObjectRelease();
        sub_1D7660BC0();
        sub_1D7660BC0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_18_4(0x6F742027u);
        sub_1D7660BC0();
        sub_1D75B0D60();
        swift_allocError();
        sub_1D76616A0();
        swift_willThrow();
        swift_unknownObjectRelease();
        sub_1D75DA888(&v171, v145, v150);
        swift_bridgeObjectRelease();
      }
      swift_release();

      __swift_destroy_boxed_opaque_existential_0Tm(v161);
      __swift_destroy_boxed_opaque_existential_0Tm(v157);
      goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    uint64_t v65 = OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_16_4(v65, v66, v67, v68, v69, v70, v71, v72, v133, v137, v140, v144, v149, v151, v155, v156, a6, (uint64_t)v160, v161,
      v164,
      v165,
      v166,
      v167);
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_2_1();
    swift_willThrow();
    sub_1D75DA888(&v171, v26, v28);
    swift_bridgeObjectRelease();
    swift_release();

LABEL_21:
    __swift_destroy_boxed_opaque_existential_0Tm(v162);
    uint64_t v73 = a2;
LABEL_22:
    __swift_destroy_boxed_opaque_existential_0Tm(v73);
LABEL_43:
    sub_1D75940A4(v10[11]);

    swift_deallocPartialClassInstance();
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

void sub_1D75D9F48()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D765FD90();
  OUTLINED_FUNCTION_0_5();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v8 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v9 = objc_msgSend(self, sel_defaultManager);
  id v10 = objc_msgSend(v9, sel_URLsForDirectory_inDomains_, 13, 1);

  uint64_t v11 = sub_1D7660D00();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BC90);
  MEMORY[0x1F4188790](v12 - 8);
  OUTLINED_FUNCTION_8();
  sub_1D75EEFD8(v11, (uint64_t)v9);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v2) == 1)
  {
    sub_1D75DD594((uint64_t)v9, (uint64_t *)&unk_1EA82BC90);
    sub_1D7660DB0();
    if (qword_1EA82A9E8 != -1) {
      swift_once();
    }
    sub_1D7660010();
    goto LABEL_17;
  }
  uint64_t v13 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  uint64_t v84 = v4 + 32;
  uint64_t v85 = v1;
  uint64_t v83 = v13;
  v13((unint64_t)v78 - v8, (char *)v9, v2);
  uint64_t v91 = 0;
  unint64_t v92 = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC58);
  sub_1D7661200();
  sub_1D7660BC0();
  uint64_t v89 = 58;
  unint64_t v90 = 0xE100000000000000;
  uint64_t v87 = 45;
  unint64_t v88 = 0xE100000000000000;
  sub_1D75DD5E4();
  sub_1D7661040();
  uint64_t v14 = swift_bridgeObjectRelease();
  v78[3] = (uint64_t)v78;
  MEMORY[0x1F4188790](v14);
  uint64_t v82 = v6;
  uint64_t v15 = (char *)v78 - v8;
  uint64_t v79 = (char *)v78 - v8;
  sub_1D765FD70();
  swift_bridgeObjectRelease();
  sub_1D7660DF0();
  uint64_t v81 = v78;
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1_7();
  uint64_t v19 = v18 - v17;
  uint64_t v21 = *(void (**)(void))(v20 + 104);
  uint64_t v80 = v19;
  v21();
  uint64_t v91 = sub_1D765FD80();
  unint64_t v92 = v22;
  uint64_t v23 = v4;
  uint64_t v24 = sub_1D7660B50();
  uint64_t v25 = v2;
  OUTLINED_FUNCTION_0_5();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_1_7();
  uint64_t v31 = v30 - v29;
  sub_1D7660B40();
  uint64_t v32 = sub_1D7661050();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v24);
  swift_bridgeObjectRelease();
  if (v32)
  {
    uint64_t v33 = sub_1D75AEF50(0, (unint64_t *)&unk_1EA82BCA0);
    v78[2] = (uint64_t)v78;
    uint64_t v34 = v82;
    MEMORY[0x1F4188790](v33);
    v78[1] = v23;
    uint64_t v36 = v23 + 16;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    int v86 = v15;
    v35((char *)v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v25);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 64);
    unint64_t v38 = swift_allocObject() + v37;
    uint64_t v39 = v25;
    v83(v38, (char *)v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
    uint64_t v40 = v85;
    uint64_t v41 = sub_1D7660E20();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1D7660DB0();
    os_log_type_t v43 = v42;
    os_log_type_t v44 = (void (*)(void))v35;
    if (v41)
    {
      if (qword_1EA82A9E8 != -1) {
        uint64_t v42 = swift_once();
      }
      uint64_t v45 = qword_1EA82BC50;
      uint64_t v46 = MEMORY[0x1F4188790](v42);
      uint64_t v54 = OUTLINED_FUNCTION_6_4(v46, v47, v48, v49, v50, v51, v52, v53, v78[0]);
      ((void (*)(char *))v44)(v54);
      if (os_log_type_enabled(v45, v43))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        uint64_t v85 = v78;
        uint64_t v91 = v56;
        *(_DWORD *)uint64_t v55 = 136315138;
        sub_1D75DD724((unint64_t *)&unk_1EA82C660, MEMORY[0x1F418B840]);
        uint64_t v57 = sub_1D7661500();
        uint64_t v59 = (void (*)(void))v58;
        uint64_t v60 = sub_1D758DBE8(v57, v58, &v91);
        OUTLINED_FUNCTION_19_4(v60);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        uint64_t v61 = OUTLINED_FUNCTION_4_4();
        ((void (*)(uint64_t))v59)(v61);
        uint64_t v62 = "Successfully created packet tracing logger at %s";
LABEL_15:
        _os_log_impl(&dword_1D757C000, v45, v43, v62, (uint8_t *)v55, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_8_6();
        v59();
        OUTLINED_FUNCTION_8_6();
        v59();
LABEL_17:
        OUTLINED_FUNCTION_84();
        return;
      }
    }
    else
    {
      if (qword_1EA82A9E8 != -1) {
        uint64_t v42 = swift_once();
      }
      uint64_t v45 = qword_1EA82BC50;
      uint64_t v63 = MEMORY[0x1F4188790](v42);
      uint64_t v71 = OUTLINED_FUNCTION_6_4(v63, v64, v65, v66, v67, v68, v69, v70, v78[0]);
      ((void (*)(char *))v44)(v71);
      if (os_log_type_enabled(v45, v43))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        uint64_t v85 = v78;
        uint64_t v91 = v72;
        *(_DWORD *)uint64_t v55 = 136315138;
        uint64_t v59 = (void (*)(void))(v55 + 12);
        sub_1D75DD724((unint64_t *)&unk_1EA82C660, MEMORY[0x1F418B840]);
        uint64_t v73 = sub_1D7661500();
        uint64_t v75 = sub_1D758DBE8(v73, v74, &v91);
        OUTLINED_FUNCTION_19_4(v75);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        uint64_t v76 = OUTLINED_FUNCTION_4_4();
        ((void (*)(uint64_t))(v55 + 12))(v76);
        uint64_t v62 = "Failed to create packet tracing logger at %s";
        goto LABEL_15;
      }
    }
    uint64_t v77 = OUTLINED_FUNCTION_4_4();
    ((void (*)(uint64_t))v44)(v77);
    OUTLINED_FUNCTION_8_6();
    v44();
    ((void (*)(char *, uint64_t))v44)(v79, v39);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_1D75DA738()
{
  sub_1D7660A50();
  sub_1D75B45A0();
  sub_1D75B45A0();
  uint64_t v0 = (void *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  uint64_t v1 = NEVirtualInterfaceCreateWithOptions();

  uint64_t result = 0;
  if (v1)
  {
    type metadata accessor for _ManagedOpaqueCFTypeWrapper();
    swift_allocObject();
    return _ManagedOpaqueCFTypeWrapper.init(retainedValue:)(v1);
  }
  return result;
}

unsigned char *sub_1D75DA888(unsigned char *result, uint64_t a2, unint64_t a3)
{
  if ((*result & 1) == 0)
  {
    os_log_type_t v5 = sub_1D7660DB0();
    if (qword_1EA82A9E8 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_1EA82BC50;
    if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v5))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v10 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      if (a3)
      {
        unint64_t v9 = a3;
      }
      else
      {
        a2 = 0x6E776F6E6B6E753CLL;
        unint64_t v9 = 0xE90000000000003ELL;
      }
      swift_bridgeObjectRetain();
      sub_1D758DBE8(a2, v9, &v10);
      sub_1D7661020();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v6, v5, "Cleaning up virtual interface %{public}s due to throwing init", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v8, -1, -1);
      MEMORY[0x1D9474C60](v7, -1, -1);
    }
    return (unsigned char *)NEVirtualInterfaceInvalidate();
  }
  return result;
}

void sub_1D75DAA4C()
{
  NEVirtualInterfaceSetReadAutomatically();
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  void aBlock[4] = sub_1D75DD7A4;
  void aBlock[5] = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75DC9B0;
  aBlock[3] = &block_descriptor_14;
  uint64_t v1 = _Block_copy(aBlock);
  swift_release();
  int MultipleIPPacketsHandler = NEVirtualInterfaceSetReadMultipleIPPacketsHandler();
  _Block_release(v1);
  if (!MultipleIPPacketsHandler)
  {
    sub_1D75AF4C0();
    sub_1D7661690();
    sub_1D75B0D60();
    swift_allocError();
    sub_1D76616A0();
    swift_willThrow();
  }
}

void VirtualInterface.deinit()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  os_log_type_t v2 = sub_1D7660DD0();
  if (qword_1EA82A9E8 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EA82BC50;
  uint64_t v4 = v2;
  if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v2))
  {
    swift_retain();
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136446210;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    sub_1D758DBE8(v6, v7, &v14);
    sub_1D7661020();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v3, (os_log_type_t)v4, "Invalidating virtual interface ref for interface %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  NEVirtualInterfaceInvalidate();
  if (*(void *)(v1 + 104)) {
    OUTLINED_FUNCTION_1();
  }
  if (*(void *)(v1 + 120)) {
    OUTLINED_FUNCTION_1();
  }
  if (*(void *)(v1 + 136)) {
    OUTLINED_FUNCTION_1();
  }
  uint64_t v8 = *(void **)(v1 + 160);
  if (v8)
  {
    uint64_t v9 = sub_1D7660DE0();
    OUTLINED_FUNCTION_0_5();
    uint64_t v11 = v10;
    MEMORY[0x1F4188790](v12);
    OUTLINED_FUNCTION_8();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1D75DD724((unint64_t *)&unk_1EA82BC60, MEMORY[0x1F41AB050]);
    id v13 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C6C0);
    sub_1D75D8A04((unint64_t *)&unk_1EA82BC70, (uint64_t *)&unk_1EA82C6C0);
    sub_1D7661090();
    sub_1D7660E30();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 32);
  swift_release();

  sub_1D75940A4(*(void *)(v1 + 88));
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_84();
}

uint64_t VirtualInterface.__deallocating_deinit()
{
  VirtualInterface.deinit();
  return MEMORY[0x1F4186488](v0, 168, 7);
}

void VirtualInterface.writePackets(_:completion:)(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  unint64_t v8 = *(void *)(a1 + 16);
  if (v4[14] < (int64_t)v8)
  {
    if (v4[13]) {
      OUTLINED_FUNCTION_1();
    }
    if (v4[15]) {
      OUTLINED_FUNCTION_1();
    }
    if (v4[17]) {
      OUTLINED_FUNCTION_1();
    }
    if (v8 >> 61)
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
    }
    v4[13] = swift_slowAlloc();
    v4[14] = v8;
    if (v8 >> 60) {
      goto LABEL_50;
    }
    v4[15] = swift_slowAlloc();
    v4[16] = v8;
    v4[17] = swift_slowAlloc();
    v4[18] = v8;
  }
  if (!v8) {
    goto LABEL_41;
  }
  uint64_t v60 = a3;
  uint64_t v61 = (uint64_t)a2;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v62 = a1;
  uint64_t v10 = (unint64_t *)(a1 + 120);
  uint64_t v67 = (uint64_t)v4;
  unint64_t v68 = v8;
  while (2)
  {
    int v11 = *((_DWORD *)v10 - 22);
    if (v11 < 0) {
      goto LABEL_53;
    }
    uint64_t v12 = v9;
    uint64_t v13 = *(v10 - 7);
    unint64_t v14 = *(v10 - 6);
    uint64_t v16 = *(v10 - 5);
    unint64_t v15 = *(v10 - 4);
    uint64_t v17 = *(v10 - 3);
    unint64_t v18 = *(v10 - 2);
    uint64_t v20 = *(v10 - 1);
    unint64_t v19 = *v10;
    ++v9;
    v10 += 12;
    *(_DWORD *)(v4[13] + 4 * v12) = v11;
    switch(v19 >> 62)
    {
      case 1uLL:
        if (v20 >> 32 < (int)v20)
        {
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        uint64_t v64 = v20 >> 32;
        uint64_t v65 = v9;
        unint64_t v27 = v14;
        uint64_t v28 = v16;
        unint64_t v74 = v18;
        uint64_t v29 = v17;
        uint64_t v30 = v13;
        unint64_t v31 = v15;
        swift_retain();
        uint64_t v69 = v30;
        sub_1D75934F4(v30, v27);
        uint64_t v73 = v28;
        unint64_t v71 = v31;
        sub_1D75934F4(v28, v31);
        sub_1D75DD424(v29, v74);
        sub_1D75934F4(v20, v19);
        sub_1D75934F4(v20, v19);
        uint64_t v4 = (void *)sub_1D765FCE0();
        if (v4)
        {
          uint64_t v32 = sub_1D765FD10();
          uint64_t v33 = (int)v20;
          if (__OFSUB__((int)v20, v32)) {
            goto LABEL_48;
          }
          uint64_t v4 = (void *)((char *)v4 + (int)v20 - v32);
        }
        else
        {
          uint64_t v33 = (int)v20;
        }
        uint64_t v39 = sub_1D765FD00();
        uint64_t v9 = v65;
        if (!v4) {
          goto LABEL_52;
        }
        uint64_t v40 = v64 - v33;
        if (v39 < v64 - v33) {
          uint64_t v40 = v39;
        }
        OUTLINED_FUNCTION_14_4(v40, v56, v57, v58, v59, v60, v61, v62, v64, v65, (int)v20, v67);
        sub_1D75933F0(v20, v19);
        sub_1D75933F0(v69, v27);
        sub_1D75933F0(v73, v71);
        uint64_t v37 = v29;
        unint64_t v38 = v74;
LABEL_36:
        sub_1D75DD450(v37, v38);
        sub_1D75933F0(v20, v19);
        swift_release();
        unint64_t v8 = v68;
LABEL_37:
        if (v8 != v9) {
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v41 = v8;
        uint64_t v42 = (uint64_t *)(v62 + 64);
        unint64_t v43 = v41;
        do
        {
          char v44 = *((unsigned char *)v42 - 8);
          unint64_t v45 = v42[1];
          uint64_t v76 = *v42;
          uint64_t v47 = v42[2];
          unint64_t v46 = v42[3];
          uint64_t v49 = v42[4];
          unint64_t v48 = v42[5];
          uint64_t v51 = v42[6];
          unint64_t v50 = v42[7];
          LODWORD(v77) = *((_DWORD *)v42 - 8);
          long long v78 = *(_OWORD *)(v42 - 3);
          char v79 = v44;
          uint64_t v80 = v76;
          unint64_t v81 = v45;
          uint64_t v82 = v47;
          unint64_t v83 = v46;
          uint64_t v84 = v49;
          unint64_t v85 = v48;
          uint64_t v86 = v51;
          unint64_t v87 = v50;
          sub_1D75934F4(v76, v45);
          sub_1D75934F4(v47, v46);
          sub_1D75DD424(v49, v48);
          sub_1D75934F4(v51, v50);
          sub_1D75DB568();
          sub_1D75933F0(v76, v45);
          sub_1D75933F0(v47, v46);
          sub_1D75DD450(v49, v48);
          sub_1D75933F0(v51, v50);
          v42 += 12;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        a2 = (void (*)(void *))v61;
        if (HIDWORD(v68))
        {
          while (1)
          {
LABEL_53:
            OUTLINED_FUNCTION_0_1();
            sub_1D7661250();
            __break(1u);
          }
        }
LABEL_41:
        if (NEVirtualInterfaceWriteMultipleIPPackets())
        {
          uint64_t v52 = 0;
        }
        else
        {
          sub_1D75AF4C0();
          OUTLINED_FUNCTION_0();
          sub_1D7661690();
          uint64_t v77 = 0;
          *(void *)&long long v78 = 0xE000000000000000;
          sub_1D7661100();
          sub_1D7660BC0();
          swift_bridgeObjectRetain();
          sub_1D7660BC0();
          swift_bridgeObjectRelease();
          sub_1D7660BC0();
          sub_1D76616A0();
          uint64_t v53 = v77;
          uint64_t v54 = v78;
          sub_1D75B0D60();
          uint64_t v52 = (void *)swift_allocError();
          *uint64_t v55 = v53;
          v55[1] = v54;
        }
        a2(v52);

        return;
      case 2uLL:
        uint64_t v66 = *(void *)(v20 + 16);
        uint64_t v63 = *(void *)(v20 + 24);
        uint64_t v21 = v17;
        unint64_t v75 = v14;
        uint64_t v22 = v13;
        uint64_t v23 = v16;
        unint64_t v24 = v15;
        swift_retain();
        sub_1D75934F4(v22, v75);
        unint64_t v70 = v24;
        sub_1D75934F4(v23, v24);
        uint64_t v72 = v21;
        sub_1D75DD424(v21, v18);
        sub_1D75934F4(v20, v19);
        swift_retain();
        swift_retain();
        uint64_t v4 = (void *)sub_1D765FCE0();
        if (v4)
        {
          uint64_t v25 = sub_1D765FD10();
          uint64_t v26 = v66;
          if (__OFSUB__(v66, v25)) {
            goto LABEL_47;
          }
          uint64_t v4 = (void *)((char *)v4 + v66 - v25);
        }
        else
        {
          uint64_t v26 = v66;
        }
        uint64_t v34 = v63 - v26;
        if (__OFSUB__(v63, v26)) {
          goto LABEL_46;
        }
        uint64_t v35 = sub_1D765FD00();
        if (!v4) {
          goto LABEL_51;
        }
        if (v35 >= v34) {
          uint64_t v36 = v34;
        }
        else {
          uint64_t v36 = v35;
        }
        OUTLINED_FUNCTION_14_4(v36, v56, v57, v58, v59, v60, v61, v62, v63, v19 & 0x3FFFFFFFFFFFFFFFLL, v66, v67);
        swift_release();
        swift_release();
        sub_1D75933F0(v22, v75);
        sub_1D75933F0(v23, v70);
        uint64_t v37 = v72;
        unint64_t v38 = v18;
        goto LABEL_36;
      case 3uLL:
        *(void *)(v4[15] + 8 * v12) = &v77;
        *(void *)(v4[17] + 8 * v12) = 0;
        goto LABEL_37;
      default:
        *(void *)(v4[15] + 8 * v12) = &v77;
        *(void *)(v4[17] + 8 * v12) = BYTE6(v19);
        goto LABEL_37;
    }
  }
}

void sub_1D75DB568()
{
  OUTLINED_FUNCTION_97();
  unint64_t v2 = v1[9];
  uint64_t v3 = *(void **)(v0 + 160);
  if (v3) {
    BOOL v4 = v2 >> 60 == 15;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v49 = v0;
    uint64_t v6 = v1[4];
    unint64_t v5 = v1[5];
    unint64_t v7 = v1[7];
    uint64_t v8 = v1[8];
    uint64_t v61 = v1[6];
    unint64_t v62 = v7;
    uint64_t v9 = sub_1D7660430();
    uint64_t v60 = &v45;
    OUTLINED_FUNCTION_0_5();
    uint64_t v59 = v10;
    MEMORY[0x1F4188790](v11);
    unint64_t v54 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v55 = v12;
    uint64_t v58 = (char *)&v45 - v54;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
    uint64_t v57 = &v45;
    MEMORY[0x1F4188790](v13 - 8);
    unint64_t v52 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v53 = v14;
    unint64_t v15 = (char *)&v45 - v52;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BC80);
    unint64_t v56 = (unint64_t)&v45;
    uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    MEMORY[0x1F4188790](v16 - 8);
    unint64_t v51 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v18 = (char *)&v45 - v51;
    uint64_t v50 = sub_1D76604A0();
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v50);
    id v19 = v3;
    unint64_t v20 = v5;
    id v21 = v19;
    sub_1D75DD424(v8, v2);
    sub_1D75934F4(v6, v20);
    sub_1D75934F4(v61, v62);
    sub_1D75934F4(v6, v20);
    sub_1D7660440();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9) == 1)
    {

      sub_1D75DD450(v8, v2);
      sub_1D75933F0(v6, v20);
      sub_1D75933F0(v61, v62);
      sub_1D75DD594((uint64_t)v15, (uint64_t *)&unk_1EA82C2A0);
    }
    else
    {
      id v46 = v21;
      unint64_t v47 = v8;
      unint64_t v56 = v2;
      uint64_t v45 = v6;
      unint64_t v48 = v20;
      uint64_t v23 = (char *)(v59 + 32);
      uint64_t v22 = *(void (**)(void))(v59 + 32);
      uint64_t v24 = v9;
      uint64_t v25 = ((uint64_t (*)(char *, char *, uint64_t))v22)(v58, v15, v9);
      uint64_t v26 = MEMORY[0x1F4188790](v25);
      unint64_t v27 = (char *)&v45 - v54;
      uint64_t v57 = &v45;
      uint64_t v28 = MEMORY[0x1F4188790](v26);
      uint64_t v29 = (char *)&v45 - v52;
      MEMORY[0x1F4188790](v28);
      __swift_storeEnumTagSinglePayload((uint64_t)&v45 - v51, 1, 1, v50);
      uint64_t v31 = v61;
      unint64_t v30 = v62;
      sub_1D75934F4(v61, v62);
      sub_1D7660440();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v24) == 1)
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v24);

        sub_1D75DD450(v47, v56);
        sub_1D75933F0(v45, v48);
        sub_1D75933F0(v31, v30);
        sub_1D75DD594((uint64_t)v29, (uint64_t *)&unk_1EA82C2A0);
      }
      else
      {
        uint64_t v32 = v27;
        uint64_t v33 = v58;
        uint64_t v34 = v32;
        v22();
        unint64_t v35 = v56;
        uint64_t v57 = &v45;
        switch(v56 >> 61)
        {
          case 1uLL:
            uint64_t v36 = v47;
            unint64_t v55 = v47 >> 16;
            OUTLINED_FUNCTION_13();
            sub_1D7661100();
            OUTLINED_FUNCTION_29_2();
            sub_1D7660BC0();
            OUTLINED_FUNCTION_28_2();
            OUTLINED_FUNCTION_30_2();
            LOWORD(v63) = v36;
            uint64_t v37 = v24;
            sub_1D7661500();
            sub_1D7660BC0();
            unint64_t v35 = v56;
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_26_1();
            OUTLINED_FUNCTION_39_1();
            sub_1D7661200();
            OUTLINED_FUNCTION_30_2();
            LOWORD(v63) = v55;
            sub_1D7661500();
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            break;
          case 2uLL:
            uint64_t v36 = v47;
            unint64_t v55 = v47 >> 8;
            OUTLINED_FUNCTION_13();
            sub_1D7661100();
            OUTLINED_FUNCTION_29_2();
            sub_1D7660BC0();
            uint64_t v37 = v24;
            uint64_t v23 = v33;
            OUTLINED_FUNCTION_7_5();
            OUTLINED_FUNCTION_26_1();
            uint64_t v33 = v34;
            OUTLINED_FUNCTION_7_5();
            sub_1D7660BC0();
            LOBYTE(v63) = v36;
            OUTLINED_FUNCTION_27_2();
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            LOBYTE(v63) = v55;
            goto LABEL_13;
          case 3uLL:
            uint64_t v64 = 0;
            unint64_t v65 = 0xE000000000000000;
            uint64_t v36 = v47;
            sub_1D75DD438(v47, v56);
            sub_1D7661100();
            sub_1D7660BC0();
            LOBYTE(v63) = v36;
            sub_1D7661500();
            uint64_t v37 = v24;
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            uint64_t v23 = v33;
            OUTLINED_FUNCTION_7_5();
            OUTLINED_FUNCTION_26_1();
            uint64_t v33 = v34;
            OUTLINED_FUNCTION_7_5();
            sub_1D7660BC0();
            uint64_t v63 = v35 & 0x1FFFFFFFFFFFFFFFLL;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
            sub_1D7661200();
            sub_1D7660BC0();
            sub_1D75DD450(v36, v35);
            break;
          case 4uLL:
            OUTLINED_FUNCTION_13();
            sub_1D7661100();
            sub_1D7660BC0();
            uint64_t v36 = v47;
            LOBYTE(v63) = v47;
            sub_1D7661500();
            uint64_t v37 = v24;
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            uint64_t v23 = v33;
            OUTLINED_FUNCTION_7_5();
            OUTLINED_FUNCTION_26_1();
            uint64_t v33 = v34;
            OUTLINED_FUNCTION_7_5();
            break;
          default:
            uint64_t v36 = v47;
            unint64_t v54 = HIDWORD(v47);
            unint64_t v55 = HIDWORD(v56);
            unint64_t v52 = v47 >> 16;
            unint64_t v53 = HIWORD(v56);
            OUTLINED_FUNCTION_13();
            sub_1D7661100();
            OUTLINED_FUNCTION_29_2();
            sub_1D7660BC0();
            uint64_t v37 = v24;
            OUTLINED_FUNCTION_28_2();
            OUTLINED_FUNCTION_30_2();
            LOWORD(v63) = v36;
            sub_1D7661500();
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_26_1();
            OUTLINED_FUNCTION_39_1();
            sub_1D7661200();
            OUTLINED_FUNCTION_30_2();
            LOWORD(v63) = v52;
            sub_1D7661500();
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            sub_1D7622EC8();
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            LODWORD(v63) = v54;
            unint64_t v35 = v56;
            OUTLINED_FUNCTION_27_2();
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            LODWORD(v63) = v35;
            OUTLINED_FUNCTION_27_2();
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            LOWORD(v63) = v55;
LABEL_13:
            sub_1D7661500();
            OUTLINED_FUNCTION_15_4();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            break;
        }
        OUTLINED_FUNCTION_29_2();
        sub_1D7660BC0();
        sub_1D75F5B6C();
        uint64_t v39 = v38;
        unint64_t v41 = v40;
        id v42 = *(id *)(v49 + 80);
        id v43 = v46;
        OS_dispatch_io.write(content:completingOn:completion:)(v39, v41, (uint64_t)v42, (uint64_t)nullsub_1, 0);

        sub_1D75933F0(v39, v41);
        sub_1D75DD450(v36, v35);
        sub_1D75933F0(v45, v48);
        sub_1D75933F0(v61, v62);
        char v44 = *(void (**)(char *, uint64_t))(v59 + 8);
        v44(v33, v37);
        v44(v23, v37);
      }
    }
  }
  OUTLINED_FUNCTION_84();
}

void VirtualInterface.readPackets(completion:)()
{
  OUTLINED_FUNCTION_97();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v7 = *(void **)(v2 + 80);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v2;
  v8[3] = v6;
  void v8[4] = v4;
  v22[4] = sub_1D75DD4BC;
  v22[5] = v8;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  v22[2] = sub_1D75D6460;
  void v22[3] = &block_descriptor_3;
  uint64_t v9 = _Block_copy(v22);
  uint64_t v21 = sub_1D7660950();
  OUTLINED_FUNCTION_0_5();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_8();
  id v13 = v7;
  swift_retain();
  swift_retain();
  sub_1D7660930();
  uint64_t v14 = sub_1D7660910();
  OUTLINED_FUNCTION_0_5();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1_7();
  uint64_t v20 = v19 - v18;
  sub_1D75DD724((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF98]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v1, v20, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v21);
  swift_release();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D75DC1A0(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1[11])
  {
    uint64_t v10 = a1[11];
    uint64_t v11 = a1[12];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v10;
    *(void *)(v12 + 24) = v11;
    sub_1D75A74B4(v10);
    uint64_t v8 = sub_1D75940A4((uint64_t)sub_1D75A74CC);
    __break(1u);
  }
  else
  {
    sub_1D75A74B4(0);
    sub_1D75940A4(0);
    uint64_t v6 = a1[11];
    a1[11] = a2;
    a1[12] = a3;
    sub_1D75940A4(v6);
    uint64_t v7 = *(void *)(a1[9] + 16);
    swift_retain();
    uint64_t v8 = v7;
    uint64_t v9 = 0xFFFFFFFFLL;
  }
  return MEMORY[0x1F40F4328](v8, v9);
}

void sub_1D75DC270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = a6;
    uint64_t v13 = *(void *)(Strong + 88);
    unint64_t v52 = (void (**)(void))(Strong + 88);
    if (v13)
    {
      uint64_t v54 = a6;
      uint64_t v12 = sub_1D76609E0();
      uint64_t v14 = *(void *)(v12 - 8);
      MEMORY[0x1F4188790](v12);
      uint64_t v16 = (uint64_t *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v17 = *(void **)(v11 + 80);
      void *v16 = v17;
      (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBE8], v12);
      id v18 = v17;
      LOBYTE(v17) = sub_1D7660A00();
      (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v12);
      if (v17)
      {
        if (a2 && a4)
        {
          uint64_t v19 = v54;
          if (a5)
          {
            uint64_t v53 = v11;
            if (a6)
            {
              uint64_t v20 = 0;
              uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
              do
              {
                uint64_t v67 = v20;
                sub_1D75DC75C(&v67, a4, a5, (uint64_t)&v59);
                if ((unint64_t)v63 >> 60 != 15)
                {
                  long long v58 = v63;
                  int v22 = (int)v59;
                  long long v55 = v60;
                  char v23 = v61;
                  uint64_t v24 = v62;
                  long long v57 = v64;
                  long long v56 = v65;
                  unint64_t v25 = v66;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1D75D00F0();
                    uint64_t v21 = v30;
                  }
                  unint64_t v26 = v21[2];
                  unint64_t v27 = v21;
                  long long v28 = v58;
                  if (v26 >= v21[3] >> 1)
                  {
                    sub_1D75D00F0();
                    long long v28 = v58;
                    unint64_t v27 = v31;
                  }
                  uint64_t v27[2] = v26 + 1;
                  uint64_t v21 = v27;
                  uint64_t v29 = &v27[12 * v26];
                  *((_DWORD *)v29 + 8) = v22;
                  *(_OWORD *)(v29 + 5) = v55;
                  *((unsigned char *)v29 + 56) = v23;
                  v29[8] = v24;
                  *(_OWORD *)(v29 + 9) = v28;
                  *(_OWORD *)(v29 + 11) = v57;
                  *(_OWORD *)(v29 + 13) = v56;
                  v29[15] = v25;
                  uint64_t v19 = v54;
                }
                ++v20;
              }
              while (v19 != v20);
            }
            else
            {
              uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
            }
            uint64_t v35 = v21[2];
            if (v35)
            {
              swift_bridgeObjectRetain();
              *(void *)&long long v57 = v21;
              uint64_t v36 = v21 + 8;
              do
              {
                *(void *)&long long v58 = v35;
                char v37 = *((unsigned char *)v36 - 8);
                uint64_t v38 = *v36;
                unint64_t v39 = v36[1];
                uint64_t v40 = v36[2];
                unint64_t v41 = v36[3];
                uint64_t v42 = v36[4];
                unint64_t v43 = v36[5];
                uint64_t v44 = v36[6];
                unint64_t v45 = v36[7];
                long long v46 = *(_OWORD *)(v36 - 3);
                LODWORD(v59) = *((_DWORD *)v36 - 8);
                long long v60 = v46;
                LOBYTE(v61) = v37;
                uint64_t v62 = v38;
                *(void *)&long long v63 = v39;
                *((void *)&v63 + 1) = v40;
                *(void *)&long long v64 = v41;
                *((void *)&v64 + 1) = v42;
                *(void *)&long long v65 = v43;
                *((void *)&v65 + 1) = v44;
                unint64_t v66 = v45;
                sub_1D75934F4(v38, v39);
                sub_1D75934F4(v40, v41);
                sub_1D75DD424(v42, v43);
                sub_1D75934F4(v44, v45);
                sub_1D75DB568();
                uint64_t v47 = v38;
                uint64_t v48 = v58;
                sub_1D75933F0(v47, v39);
                sub_1D75933F0(v40, v41);
                sub_1D75DD450(v42, v43);
                sub_1D75933F0(v44, v45);
                v36 += 12;
                uint64_t v35 = v48 - 1;
              }
              while (v35);
              uint64_t v21 = (void *)v57;
              swift_bridgeObjectRelease();
            }
            uint64_t v49 = v52;
            uint64_t v50 = *v52;
            if (*v52)
            {
              *unint64_t v52 = 0;
              v49[1] = 0;
              swift_retain();
              sub_1D75940A4((uint64_t)v50);
              uint64_t v59 = v21;
              *(void *)&long long v60 = nullsub_1;
              *((void *)&v60 + 1) = 0;
              v50(&v59);
              sub_1D75940A4((uint64_t)v50);
              swift_bridgeObjectRelease();
              swift_release();
              return;
            }
LABEL_31:
            __break(1u);
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_31;
      }
      __break(1u);
    }
    else
    {
      sub_1D7660DB0();
      if (qword_1EA82A9E8 == -1)
      {
LABEL_18:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBD0);
        uint64_t v32 = swift_allocObject();
        uint64_t v33 = MEMORY[0x1E4FBB550];
        *(_OWORD *)(v32 + 16) = xmmword_1D7664B10;
        uint64_t v34 = MEMORY[0x1E4FBB5C8];
        *(void *)(v32 + 56) = v33;
        *(void *)(v32 + 64) = v34;
        *(void *)(v32 + 32) = v12;
        sub_1D7660010();
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_once();
    goto LABEL_18;
  }
}

void sub_1D75DC75C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!*(void *)(a2 + 8 * *a1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!a3)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v6 = MEMORY[0x1D94725A0]();
  unint64_t v8 = v7;
  sub_1D75934F4(v6, v7);
  TunnelPacket.init(data:)(v6, v8, (uint64_t)&v21);
  if (v4)
  {
    os_log_type_t v9 = sub_1D7660DB0();
    if (qword_1EA82A9E8 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_1EA82BC50;
    os_log_type_t v11 = v9;
    if (os_log_type_enabled((os_log_t)qword_1EA82BC50, v9))
    {
      id v12 = v4;
      id v13 = v4;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      long long v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543362;
      id v15 = v4;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v21 = v16;
      sub_1D7661020();
      uint64_t v17 = v28;
      *long long v28 = v16;

      _os_log_impl(&dword_1D757C000, v10, v11, "Discarding packet data as it is not a valid IPv6 packet: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C650);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v17, -1, -1);
      MEMORY[0x1D9474C60](v14, -1, -1);
    }
    sub_1D75933F0(v6, v8);

    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(void *)(a4 + 32) = 0;
    *(void *)(a4 + 40) = 0xF000000000000000;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
  }
  else
  {
    sub_1D75933F0(v6, v8);
    uint64_t v18 = v23;
    *(void *)a4 = v21;
    *(_OWORD *)(a4 + 8) = v22;
    *(void *)(a4 + 24) = v18;
    long long v19 = v25;
    *(_OWORD *)(a4 + 32) = v24;
    *(_OWORD *)(a4 + 48) = v19;
    long long v20 = v27;
    *(_OWORD *)(a4 + 64) = v26;
    *(_OWORD *)(a4 + 80) = v20;
  }
}

uint64_t sub_1D75DC9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v15(a2, a3, a4, a5, a6, a7, a8);
  return swift_release();
}

uint64_t sub_1D75DCA50(int a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = sub_1D765FC50();
    uint64_t v46 = *(void *)(v4 - 8);
    uint64_t v5 = *(void *)(v46 + 64);
    MEMORY[0x1F4188790](v4);
    unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v7 = (char *)v40 - v6;
    int v45 = a1;
    uint64_t v8 = sub_1D7660020();
    if ((v8 & 0x100000000) != 0) {
      int v9 = 5;
    }
    else {
      int v9 = v8;
    }
    LODWORD(v50) = v9;
    sub_1D75B0C34(MEMORY[0x1E4FBC860]);
    sub_1D75DD724(qword_1EA82BCB0, MEMORY[0x1F418ACA8]);
    sub_1D765FD40();
    os_log_type_t v10 = sub_1D7660DB0();
    if (qword_1EA82A9E8 != -1) {
      swift_once();
    }
    os_log_type_t v11 = qword_1EA82BC50;
    uint64_t v12 = sub_1D765FD90();
    uint64_t v48 = v40;
    uint64_t v13 = *(void *)(v12 - 8);
    MEMORY[0x1F4188790](v12);
    id v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    uint64_t v47 = v40;
    MEMORY[0x1F4188790](v16);
    uint64_t v17 = (char *)v40 - v6;
    uint64_t v18 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v17, v7, v4);
    os_log_t v44 = v11;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v19 = swift_slowAlloc();
      unint64_t v43 = v7;
      int v41 = v10;
      uint64_t v20 = v19;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v50 = v42;
      *(_DWORD *)uint64_t v20 = 136446722;
      sub_1D75DD724((unint64_t *)&unk_1EA82C660, MEMORY[0x1F418B840]);
      uint64_t v21 = sub_1D7661500();
      uint64_t v49 = sub_1D758DBE8(v21, v22, &v50);
      v40[1] = &v50;
      sub_1D7661020();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      *(_WORD *)(v20 + 12) = 1024;
      LODWORD(v49) = v45;
      sub_1D7661020();
      *(_WORD *)(v20 + 18) = 2080;
      sub_1D75DD724((unint64_t *)&unk_1EA82C670, MEMORY[0x1F418ACA8]);
      uint64_t v23 = sub_1D7661620();
      uint64_t v49 = sub_1D758DBE8(v23, v24, &v50);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      long long v25 = *(void (**)(char *, uint64_t))(v18 + 8);
      v25(v17, v4);
      _os_log_impl(&dword_1D757C000, v44, (os_log_type_t)v41, "%{public}s: IO cleanup error: %d, %s", (uint8_t *)v20, 0x1Cu);
      uint64_t v26 = v42;
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v26, -1, -1);
      MEMORY[0x1D9474C60](v20, -1, -1);
      return ((uint64_t (*)(char *, uint64_t))v25)(v43, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      unint64_t v39 = *(void (**)(char *, uint64_t))(v18 + 8);
      v39(v17, v4);
      return ((uint64_t (*)(char *, uint64_t))v39)(v7, v4);
    }
  }
  else
  {
    os_log_type_t v28 = sub_1D7660D90();
    if (qword_1EA82A9E8 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_1EA82BC50;
    uint64_t v30 = sub_1D765FD90();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x1F4188790](v30);
    uint64_t v33 = (char *)v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, a2, v30);
    os_log_type_t v34 = v28;
    if (os_log_type_enabled(v29, v28))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v50 = v36;
      *(_DWORD *)uint64_t v35 = 136446210;
      sub_1D75DD724((unint64_t *)&unk_1EA82C660, MEMORY[0x1F418B840]);
      uint64_t v37 = sub_1D7661500();
      uint64_t v49 = sub_1D758DBE8(v37, v38, &v50);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      _os_log_impl(&dword_1D757C000, v29, v34, "%{public}s: IO cleanup complete", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v36, -1, -1);
      return MEMORY[0x1D9474C60](v35, -1, -1);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }
  }
}

void VirtualInterface.getInterfaceStatistics()()
{
  uint64_t v0 = (void *)NEVirtualInterfaceCopyStatistics();
  if (v0)
  {
    id v1 = v0;
    sub_1D7660A20();

    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    sub_1D7661690();
    sub_1D7661100();
    sub_1D7660BC0();
    type metadata accessor for CFDictionary(0);
    id v2 = v1;
    sub_1D7660B60();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_4(0x726F6620u);
    sub_1D7660BC0();
    swift_bridgeObjectRetain();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D75B0D60();
    swift_allocError();
    sub_1D76616A0();
    swift_willThrow();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D75DD2F4()
{
  return static VirtualInterface.defaultMTU.getter();
}

uint64_t sub_1D75DD30C()
{
  return 1280;
}

uint64_t sub_1D75DD314()
{
  return 16000;
}

uint64_t sub_1D75DD31C()
{
  return static VirtualInterface.maxSupportedPendingPackets.getter();
}

uint64_t sub_1D75DD334()
{
  return VirtualInterface.interfaceName.getter();
}

uint64_t sub_1D75DD358@<X0>(uint64_t a1@<X8>)
{
  return VirtualInterface.address.getter(a1);
}

uint64_t sub_1D75DD37C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t result = VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32), a6, a7);
  if (!v8) {
    *a8 = result;
  }
  return result;
}

void sub_1D75DD3B8(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
}

void sub_1D75DD3DC()
{
}

void sub_1D75DD400()
{
}

uint64_t sub_1D75DD424(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return (uint64_t)sub_1D75DD438(a1, a2);
  }
  return a1;
}

id sub_1D75DD438(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61 == 3) {
    return (id)(a2 & 0x1FFFFFFFFFFFFFFFLL);
  }
  return result;
}

void sub_1D75DD450(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    sub_1D75DD464(a1, a2);
  }
}

void sub_1D75DD464(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61 == 3) {
}
  }

uint64_t sub_1D75DD47C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D75DD4BC()
{
  return sub_1D75DC1A0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t type metadata accessor for VirtualInterface()
{
  return self;
}

uint64_t method lookup function for VirtualInterface(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VirtualInterface);
}

uint64_t dispatch thunk of VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, unint64_t))(v5 + 160))(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32));
}

uint64_t sub_1D75DD55C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75DD594(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_37_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1D75DD5E4()
{
  unint64_t result = qword_1EBDEBDA0;
  if (!qword_1EBDEBDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBDA0);
  }
  return result;
}

uint64_t sub_1D75DD630()
{
  sub_1D765FD90();
  OUTLINED_FUNCTION_37_0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D75DD6B4(int a1)
{
  uint64_t v3 = *(void *)(sub_1D765FD90() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1D75DCA50(a1, v4);
}

uint64_t sub_1D75DD724(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75DD76C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D75DD7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
}

uint64_t OUTLINED_FUNCTION_5_5(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return sub_1D7661020();
}

uint64_t OUTLINED_FUNCTION_12_3(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_18_4(unsigned int a1)
{
  return a1 | 0x746E692000000000;
}

uint64_t OUTLINED_FUNCTION_19_4(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t OUTLINED_FUNCTION_21_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  return sub_1D758DBE8(v14, v13, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_1D7660BC0();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return sub_1D7661500();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return sub_1D7660BC0();
}

void OUTLINED_FUNCTION_33_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return v0;
}

uint64_t LockedValueType.__allocating_init(value:)()
{
  uint64_t v0 = swift_allocObject();
  LockedValueType.init(value:)();
  return v0;
}

uint64_t LockedValueType<A>.testAndSet()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  *(unsigned char *)(v0 + 24) = 1;
  os_unfair_lock_unlock(v1);
  return v2;
}

void LockedValueType.read()(uint64_t a1@<X8>)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  OUTLINED_FUNCTION_1_9();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  OUTLINED_FUNCTION_16();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
  sub_1D75DE550(v1);
}

uint64_t LockedValueType.init(value:)()
{
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_16();
  (*(void (**)(void))(v2 + 32))();
  return v0;
}

uint64_t LockedValueType.deinit()
{
  MEMORY[0x1D9474C60](*(void *)(v0 + 16), -1, -1);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_16();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t LockedValueType.__deallocating_deinit()
{
  LockedValueType.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

void sub_1D75DDBE0(uint64_t a1)
{
  uint64_t v4 = _s5StateVMa();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_2_8();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v18[-v7];
  int v9 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v9);
  OUTLINED_FUNCTION_1_9();
  uint64_t v11 = a1 + *(void *)(v10 + 96);
  OUTLINED_FUNCTION_4_5();
  sub_1D75B4420(v11, (uint64_t)v8);
  v8[*(int *)(v5 + 32)] = 1;
  uint64_t v12 = *(int *)(v5 + 36);
  uint64_t v13 = *(void *)&v8[v12];
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v19 = v1;
    swift_bridgeObjectRetain();
    uint64_t v15 = v13 + 40;
    do
    {
      uint64_t v16 = *(void (**)(uint64_t))(v15 - 8);
      uint64_t v17 = swift_retain();
      v16(v17);
      swift_release();
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *(void *)&v8[v12] = MEMORY[0x1E4FBC860];
  sub_1D75B43A8((uint64_t)v8, v2);
  OUTLINED_FUNCTION_5_6();
  sub_1D75DE7B4(v2, v11);
  swift_endAccess();
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1D75DDD54(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = _s5StateVMa();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_2_8();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - v10;
  os_unfair_lock_t v23 = (os_unfair_lock_t)a1[2];
  os_unfair_lock_lock(v23);
  uint64_t v12 = (uint64_t)a1 + *(void *)(*a1 + 96);
  OUTLINED_FUNCTION_4_5();
  sub_1D75B4420(v12, (uint64_t)v11);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = *(int *)(v8 + 36);
  uint64_t v15 = *(void *)&v11[v14];
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D75D01B8();
    uint64_t v15 = v20;
  }
  unint64_t v17 = *(void *)(v15 + 16);
  unint64_t v16 = *(void *)(v15 + 24);
  if (v17 >= v16 >> 1)
  {
    OUTLINED_FUNCTION_6_5(v16);
    sub_1D75D01B8();
    uint64_t v15 = v21;
  }
  *(void *)(v15 + 16) = v17 + 1;
  uint64_t v18 = v15 + 16 * v17;
  *(void *)(v18 + 32) = sub_1D75D4F9C;
  *(void *)(v18 + 40) = v13;
  *(void *)&v11[v14] = v15;
  sub_1D75B43A8((uint64_t)v11, v3);
  OUTLINED_FUNCTION_5_6();
  sub_1D75DE7B4(v3, v12);
  swift_endAccess();
  os_unfair_lock_unlock(v23);
  return swift_release();
}

uint64_t sub_1D75DDF04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (os_unfair_lock_s *)a1[2];
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  uint64_t v7 = (void *)a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  sub_1D75B440C(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D75D067C();
    uint64_t v8 = v16;
  }
  unint64_t v12 = *(void *)(v8 + 16);
  unint64_t v11 = *(void *)(v8 + 24);
  if (v12 >= v11 >> 1)
  {
    OUTLINED_FUNCTION_6_5(v11);
    sub_1D75D067C();
    uint64_t v8 = v17;
  }
  *(void *)(v8 + 16) = v12 + 1;
  uint64_t v13 = v8 + 16 * v12;
  *(void *)(v13 + 32) = sub_1D75DE850;
  *(void *)(v13 + 40) = v10;
  uint64_t v14 = (void *)a1[3];
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  sub_1D75DE7A0(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v6);
  return swift_release();
}

void sub_1D75DE058(void *a1, void *a2)
{
  uint64_t v5 = (os_unfair_lock_s *)a1[2];
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  id v11 = (id)a1[3];
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  sub_1D75B440C(v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7620890(&v11);
  uint64_t v8 = v12;
  uint64_t v9 = v13;
  if (v2)
  {
    sub_1D75DE7A0(v11);
  }
  else
  {
    uint64_t v10 = (void *)a1[3];
    a1[3] = v11;
    a1[4] = v8;
    a1[5] = v9;
    sub_1D75DE7A0(v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v5);
}

void sub_1D75DE158(void *a1, void *a2, void *a3)
{
  uint64_t v7 = (os_unfair_lock_s *)a1[2];
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  id v13 = (id)a1[3];
  uint64_t v14 = v8;
  uint64_t v15 = v9;
  sub_1D75B440C(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D76214A8((uint64_t)&v13, a2);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  if (v3)
  {
    sub_1D75DE7A0(v13);
  }
  else
  {
    uint64_t v12 = (void *)a1[3];
    a1[3] = v13;
    a1[4] = v10;
    a1[5] = v11;
    sub_1D75DE7A0(v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);
}

void LockedValueType.write<A>(_:)(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  OUTLINED_FUNCTION_0_11();
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 80);
  OUTLINED_FUNCTION_0_11();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v21 - v17;
  os_unfair_lock_lock(v3[2]);
  uint64_t v19 = (char *)v3 + *(void *)&(*v3)[24]._os_unfair_lock_opaque;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v10);
  uint64_t v20 = v25;
  a1(v18);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v18, v10);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v19, v16, v10);
    swift_endAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v23, v8, v24);
  }
  os_unfair_lock_unlock(v3[2]);
}

void LockedValueType.put(newValue:)(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  OUTLINED_FUNCTION_1_9();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  OUTLINED_FUNCTION_16();
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, a1);
  swift_endAccess();
  sub_1D75DE550(v1);
}

void sub_1D75DE550(uint64_t a1)
{
}

uint64_t LockedValueType<A>.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v3 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_0_11();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v14[-v7];
  LockedValueType.read()((uint64_t)&v14[-v7]);
  uint64_t v9 = (void (*)(unsigned char *, void))sub_1D7660D80();
  uint64_t v11 = v10;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_16();
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(a1, v11);
  v9(v14, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1D75DE6B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LockedValueType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for LockedValueType(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LockedValueType);
}

uint64_t dispatch thunk of LockedValueType.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1D75DE7A0(id a1)
{
  if ((char *)a1 - 1 >= (char *)2) {
}
  }

uint64_t sub_1D75DE7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D75DE818()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75DE850(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_beginAccess();
}

uint64_t sub_1D75DE8A0()
{
  sub_1D75D5108();
  uint64_t result = sub_1D7660FE0();
  qword_1EA82BD38 = result;
  return result;
}

uint64_t RemoteDevice.createTransport(withTargetQueue:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D7660030();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1D7660270();
    sub_1D7660220();
    uint64_t v6 = swift_dynamicCastClassUnconditional();
    if (xpc_remote_connection_get_remote_service_version() < 2)
    {
      sub_1D7660DB0();
      if (qword_1EA82A9F0 != -1) {
        swift_once();
      }
      sub_1D7660010();
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_1_10();
      sub_1D7661690();
      sub_1D75B0D60();
      uint64_t v26 = OUTLINED_FUNCTION_3_7();
      OUTLINED_FUNCTION_0_12(v26, v27, v28, v29, v30, v31, v32, v33, (uint64_t)log, v36, v37, v39, v40, v41, v42, v43, v41);
      sub_1D76616A0();
      swift_willThrow();

      return swift_release();
    }
    else
    {
      uint64_t v7 = type metadata accessor for RemoteXPCControlChannelTransport();
      uint64_t v8 = swift_allocObject();
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_1D75DEE24(v6, v2, v8);
      os_log_type_t v10 = sub_1D7660DD0();
      if (qword_1EA82A9F0 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EA82BD38;
      if (os_log_type_enabled((os_log_t)qword_1EA82BD38, v10))
      {
        swift_retain_n();
        swift_retain();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        v44[0] = v38;
        *(_DWORD *)uint64_t v12 = 136446466;
        swift_beginAccess();
        os_log_t loga = v11;
        uint64_t v13 = *(void *)(v9 + 16);
        unint64_t v14 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1D758DBE8(v13, v14, v44);
        sub_1D7661020();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2082;
        uint64_t v15 = _s7Mercury12RemoteDeviceC0b7PairingC0E18endpointIdentifierSSvg_0();
        uint64_t v45 = sub_1D758DBE8(v15, v16, v44);
        sub_1D7661020();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D757C000, loga, v10, "Created control channel transport %{public}s from RSD device %{public}s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v38, -1, -1);
        MEMORY[0x1D9474C60](v12, -1, -1);
      }
      a1[3] = v7;
      a1[4] = (uint64_t)&protocol witness table for RemoteXPCControlChannelTransport;

      uint64_t result = swift_release();
      *a1 = v9;
    }
  }
  else
  {
    sub_1D7660DB0();
    if (qword_1EA82A9F0 != -1) {
      swift_once();
    }
    sub_1D7660010();
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_1_10();
    sub_1D7661690();
    v44[1] = v42;
    sub_1D75B0D60();
    uint64_t v18 = OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_0_12(v18, v19, v20, v21, v22, v23, v24, v25, (uint64_t)log, v36, v37, v39, v40, v41, v42, v43, v41);
    sub_1D76616A0();
    return swift_willThrow();
  }
  return result;
}

BOOL RemoteDevice.isValid.getter()
{
  int v0 = sub_1D7660060();
  return v0 == sub_1D7660F70();
}

uint64_t sub_1D75DEDB4@<X0>(uint64_t *a1@<X8>)
{
  return RemoteDevice.createTransport(withTargetQueue:)(a1);
}

BOOL sub_1D75DEDD8()
{
  return RemoteDevice.isValid.getter();
}

uint64_t sub_1D75DEE00()
{
  return RemoteDevice.endpointIdentifier.getter();
}

uint64_t sub_1D75DEE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + 56) = 33619968;
  uint64_t v4 = MEMORY[0x1E4F77AC8];
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = v4;
  *(void *)(a3 + 48) = a2;
  uint64_t v5 = qword_1EBDEAED8;
  swift_retain();
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  sub_1D758A804();
  sub_1D7661500();
  sub_1D7660BC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(a3 + 16) = 0x707865746F6D6572;
  *(void *)(a3 + 24) = 0xEA00000000002D63;
  return a3;
}

uint64_t dispatch thunk of ControlChannelEndpoint.createTransport(withTargetQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ControlChannelEndpoint.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlChannelEndpoint.endpointIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1D75DEF80()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82BD40 = result;
  return result;
}

uint64_t sub_1D75DEFFC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1D75DF008(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t WiFiKeepAlive.__allocating_init(reason:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  WiFiKeepAlive.init(reason:)(a1, a2);
  return v4;
}

void *WiFiKeepAlive.init(reason:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  void v30[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3[2] = 0;
  v3[3] = 0;
  uint64_t v6 = (id *)(v3 + 2);
  v3[4] = a1;
  v3[5] = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = objc_retain_x1;
  if (_RPIsDarwinOS())
  {
    swift_bridgeObjectRelease();
    sub_1D75AF4C0();
    sub_1D7661650();
    sub_1D75B0D60();
    uint64_t v8 = (void *)swift_allocError();
    sub_1D76616A0();
    swift_willThrow();
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5E320]), sel_init);
    objc_msgSend(v9, sel_activate);
    id v10 = *v6;
    *uint64_t v6 = v9;
    id v11 = v9;

    os_log_type_t v12 = sub_1D7660DD0();
    if (qword_1EA82A9F8 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EA82BD40;
    if (os_log_type_enabled((os_log_t)qword_1EA82BD40, v12))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v29 = v3;
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      v30[0] = (id)swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D758DBE8(a1, a2, (uint64_t *)v30);
      OUTLINED_FUNCTION_1_11();
      uint64_t v7 = objc_retain_x1;
      sub_1D7661020();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D757C000, v13, v12, "Starting background WiFi activity: %s", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v3 = v29;
      OUTLINED_FUNCTION_1();
    }
    sub_1D75AEF50(0, &qword_1EA82BD48);
    id v15 = sub_1D75DF50C(1, a1, a2);
    v30[0] = 0;
    if (objc_msgSend(v11, sel_beginActivity_error_, v15, v30))
    {
      id v16 = v30[0];

      id v17 = (id)v3[3];
      v3[3] = v15;
      goto LABEL_18;
    }
    id v18 = v30[0];
    uint64_t v8 = (void *)sub_1D765FD60();

    swift_willThrow();
  }
  os_log_type_t v19 = sub_1D7660DB0();
  if (qword_1EA82A9F8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EA82BD40;
  if (os_log_type_enabled((os_log_t)qword_1EA82BD40, v19))
  {
    id v21 = v8;
    id v22 = v8;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    v30[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = *((void *)v7 + 358);
    id v24 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
    uint64_t v25 = sub_1D7660B60();
    sub_1D758DBE8(v25, v26, (uint64_t *)v30);
    OUTLINED_FUNCTION_1_11();
    sub_1D7661020();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D757C000, v20, v19, "Unable to start background WiFi activity: %s", v23, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  if (*v6)
  {
    id v27 = *v6;
    objc_msgSend(v27, sel_invalidate);
  }
  else
  {
  }
  id v17 = *v6;
  *uint64_t v6 = 0;
LABEL_18:

  return v3;
}

id sub_1D75DF50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = (void *)sub_1D7660AE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityWithType_reason_, a1, v4);

  return v5;
}

void sub_1D75DF590()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = v1;
    os_log_type_t v3 = sub_1D7660DD0();
    if (qword_1EA82A9F8 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EA82BD40;
    os_log_type_t v5 = v3;
    if (os_log_type_enabled((os_log_t)qword_1EA82BD40, v3))
    {
      swift_retain();
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = *(void *)(v0 + 32);
      unint64_t v8 = *(void *)(v0 + 40);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1D758DBE8(v7, v8, &v10);
      sub_1D7661020();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v4, v5, "Stopping background WiFi activity: %s", v6, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
    }
    objc_msgSend(*(id *)(v0 + 16), sel_endActivity_, v2, v9, v10);
    sub_1D75DF008(0);
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
    sub_1D75DEFFC(0);
  }
}

uint64_t WiFiKeepAlive.deinit()
{
  sub_1D75DF590();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WiFiKeepAlive.__deallocating_deinit()
{
  WiFiKeepAlive.deinit();
  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t type metadata accessor for WiFiKeepAlive()
{
  return self;
}

uint64_t method lookup function for WiFiKeepAlive(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WiFiKeepAlive);
}

uint64_t dispatch thunk of WiFiKeepAlive.__allocating_init(reason:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of WiFiKeepAlive.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

Swift::Void __swiftcall CUPairingSession.configureFailing()()
{
  unint64_t v8 = sub_1D75E031C;
  uint64_t v9 = 0;
  uint64_t v4 = MEMORY[0x1E4F143A8];
  uint64_t v5 = 1107296256;
  uint64_t v6 = sub_1D75DFCF4;
  uint64_t v7 = &block_descriptor_4;
  uint64_t v1 = _Block_copy(&v4);
  objc_msgSend(v0, sel_setFindPeerHandler_, v1);
  _Block_release(v1);
  unint64_t v8 = OUTLINED_FUNCTION_33_2;
  uint64_t v9 = 0;
  uint64_t v4 = MEMORY[0x1E4F143A8];
  uint64_t v5 = 1107296256;
  uint64_t v6 = sub_1D75DFE88;
  uint64_t v7 = &block_descriptor_3;
  id v2 = _Block_copy(&v4);
  objc_msgSend(v0, sel_setSavePeerHandler_, v2);
  _Block_release(v2);
  unint64_t v8 = sub_1D75E031C;
  uint64_t v9 = 0;
  uint64_t v4 = MEMORY[0x1E4F143A8];
  uint64_t v5 = 1107296256;
  uint64_t v6 = sub_1D75E02B0;
  uint64_t v7 = &block_descriptor_6;
  os_log_type_t v3 = _Block_copy(&v4);
  objc_msgSend(v0, sel_setCopyIdentityHandler_, v3);
  _Block_release(v3);
}

uint64_t CUPairingSession.configure(customDataStorageProvider:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1D758B1EC((uint64_t)a1, (uint64_t)v23);
  uint64_t v7 = swift_allocObject();
  sub_1D758AB78(v23, v7 + 16);
  id v21 = sub_1D75E0374;
  uint64_t v22 = v7;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  os_log_type_t v19 = sub_1D75DFCF4;
  uint64_t v20 = &block_descriptor_9;
  unint64_t v8 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v3, sel_setFindPeerHandler_, v8);
  _Block_release(v8);
  sub_1D758B1EC((uint64_t)a1, (uint64_t)v23);
  uint64_t v9 = swift_allocObject();
  sub_1D758AB78(v23, v9 + 16);
  id v21 = sub_1D75E037C;
  uint64_t v22 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  os_log_type_t v19 = sub_1D75DFE88;
  uint64_t v20 = &block_descriptor_15;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v3, sel_setSavePeerHandler_, v10);
  _Block_release(v10);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v11);
  uint64_t v13 = (void *)swift_allocObject();
  long long v13[2] = v3;
  v13[3] = a2;
  void v13[4] = a3;
  unint64_t v14 = *(void (**)(uint64_t (*)(void *, char), void *, uint64_t, uint64_t))(v12 + 8);
  id v15 = v3;
  swift_retain();
  v14(sub_1D75E03C4, v13, v11, v12);
  return swift_release();
}

uint64_t sub_1D75DFBE4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    uint64_t v5 = a4[4];
    __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 16);
    id v7 = a1;
    uint64_t v8 = v6();

    return v8;
  }
  else
  {
    uint64_t result = sub_1D7661260();
    __break(1u);
  }
  return result;
}

id sub_1D75DFCF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v8 = a2;
  uint64_t v9 = (void *)v7(a2, a3, a4);
  swift_release();

  return v9;
}

uint64_t sub_1D75DFD7C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    uint64_t v5 = a4[4];
    __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    uint64_t v6 = *(void (**)(void))(v5 + 24);
    id v7 = a1;
    v6();

    return 1;
  }
  else
  {
    uint64_t result = sub_1D7661260();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75DFE88(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v8 = a2;
  LOBYTE(a4) = v7(a2, a3, a4);
  swift_release();

  return a4 & 1;
}

uint64_t sub_1D75DFF00(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(unsigned char *)(v10 + 24) = a2 & 1;
  uint64_t v29 = sub_1D75E04EC;
  uint64_t v30 = v10;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  id v27 = sub_1D75E02B0;
  uint64_t v28 = &block_descriptor_24;
  uint64_t v11 = _Block_copy(&aBlock);
  sub_1D75ABC50(a1);
  swift_release();
  objc_msgSend(a3, sel_setCopyIdentityHandler_, v11);
  _Block_release(v11);
  id v12 = objc_msgSend(a3, sel_dispatchQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v29 = sub_1D75E0530;
  uint64_t v30 = v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  id v27 = sub_1D75D6460;
  uint64_t v28 = &block_descriptor_30;
  unint64_t v14 = _Block_copy(&aBlock);
  uint64_t v15 = sub_1D7660950();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1D7660930();
  uint64_t v19 = sub_1D7660910();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v22 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = MEMORY[0x1E4FBC860];
  sub_1D75AEEF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v18, v22, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return swift_release();
}

id sub_1D75E0244(int a1, void *a2, id a3, char a4)
{
  id v4 = a3;
  if (a4)
  {
    if (a2)
    {
      id v7 = a3;
      id v8 = (void *)sub_1D765FD50();
      id v9 = v8;
      *a2 = v8;
      sub_1D75ABBA0(v4);
    }
    return 0;
  }
  else
  {
    id v5 = a3;
  }
  return v4;
}

id sub_1D75E02B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_1D75E031C()
{
  return 0;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1D75E033C()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D75E0374(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75DFBE4(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_1D75E037C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75DFD7C(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_1D75E0384()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D75E03C4(void *a1, char a2)
{
  return sub_1D75DFF00(a1, a2 & 1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t dispatch thunk of PairingDataStorageProvider.copyOrCreateSelfIdentity(completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.fetchPeer(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.save(peer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.resolve(authTag:for:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.generateAuthTag(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.generateAuthTagCreatingSelfIdentityIfRequired(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.numPairedPeers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1D75E04B0()
{
  sub_1D75ABBA0(*(id *)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 25, 7);
}

id sub_1D75E04EC(int a1, void *a2)
{
  return sub_1D75E0244(a1, a2, *(id *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1D75E04F8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75E0530()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void (*sub_1D75E058C(void *a1, uint64_t a2, uint64_t a3))(void **a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  void v6[4] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6[5] = sub_1D75E4A34(v6, a2, a3);
  return sub_1D75E060C;
}

void sub_1D75E060C(void **a1)
{
  uint64_t v1 = *a1;
  OUTLINED_FUNCTION_29_3();
  v2();
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t static AuxiliaryMetadataItem.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v5 >> 61 != 1) {
        goto LABEL_24;
      }
      char v6 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      return v6 & 1;
    case 2uLL:
      if (v5 >> 61 != 2
        || *(double *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) != *(double *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
      {
        goto LABEL_24;
      }
      goto LABEL_26;
    case 3uLL:
      if (v5 >> 61 != 3) {
        goto LABEL_24;
      }
      uint64_t v7 = v4 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v8 = v5 & 0x1FFFFFFFFFFFFFFFLL;
      if (*(void *)(v7 + 16) == *(void *)(v8 + 16) && *(void *)(v7 + 24) == *(void *)(v8 + 24))
      {
LABEL_26:
        char v6 = 1;
        return v6 & 1;
      }
      else
      {
        return sub_1D7661560();
      }
    case 4uLL:
      if (v5 >> 61 != 4) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v11 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v13 = *(void *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v14 = *(void *)((v5 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain();
      sub_1D75934F4(v12, v11);
      sub_1D75934F4(v13, v14);
      char v15 = MEMORY[0x1D9472580](v12, v11, v13, v14);
      sub_1D75933F0(v13, v14);
      sub_1D75933F0(v12, v11);
      swift_release();
      swift_release();
      return v15 & 1;
    case 5uLL:
      if (v5 >> 61 != 5) {
        goto LABEL_24;
      }
      OUTLINED_FUNCTION_21_7();
      swift_retain();
      char v16 = sub_1D75E0898(v2, v3);
      goto LABEL_23;
    case 6uLL:
      if (v5 >> 61 != 6) {
        goto LABEL_24;
      }
      OUTLINED_FUNCTION_21_7();
      swift_retain();
      char v16 = sub_1D75E0928(v2, v3);
LABEL_23:
      char v17 = v16;
      swift_release();
      swift_release();
      return v17 & 1;
    default:
      if (v5 >> 61) {
LABEL_24:
      }
        char v6 = 0;
      else {
        char v6 = *(unsigned char *)(v4 + 16) ^ *(unsigned char *)(v5 + 16) ^ 1;
      }
      return v6 & 1;
  }
}

uint64_t sub_1D75E0898(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v9 = 1;
    }
    else
    {
      uint64_t v3 = (uint64_t *)(a1 + 32);
      uint64_t v4 = (uint64_t *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v7 = *v3++;
        uint64_t v6 = v7;
        uint64_t v8 = *v4++;
        uint64_t v13 = v8;
        uint64_t v14 = v6;
        char v9 = static AuxiliaryMetadataItem.== infix(_:_:)(&v14, &v13);
        BOOL v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1D75E0928(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1D75B6C1C();
    char v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    uint64_t v19 = *(void *)(*(void *)(a2 + 56) + 8 * v15);
    char v18 = static AuxiliaryMetadataItem.== infix(_:_:)(&v19, &v20);
    uint64_t result = swift_release();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D75E0B10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E61656C6F6F62 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7630441 && a2 == 0xE300000000000000;
    if (v6 || (sub_1D7661560() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x74616F6C66 && a2 == 0xE500000000000000;
      if (v7 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
        if (v8 || (sub_1D7661560() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 1635017060 && a2 == 0xE400000000000000;
          if (v9 || (sub_1D7661560() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x7961727261 && a2 == 0xE500000000000000;
            if (v10 || (sub_1D7661560() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1D7661560();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D75E0DB4()
{
  return 7;
}

uint64_t sub_1D75E0DBC(char a1)
{
  uint64_t result = 0x6E61656C6F6F62;
  switch(a1)
  {
    case 1:
      uint64_t result = 7630441;
      break;
    case 2:
      uint64_t result = 0x74616F6C66;
      break;
    case 3:
      uint64_t result = 0x676E69727473;
      break;
    case 4:
      uint64_t result = 1635017060;
      break;
    case 5:
      uint64_t result = 0x7961727261;
      break;
    case 6:
      uint64_t result = 0x616E6F6974636964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75E0E8C()
{
  return 12383;
}

uint64_t sub_1D75E0E98(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D75E0F0C(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1B1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E0F48(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1B1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E0F84(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1CD8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E0FC0(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1CD8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E0FFC()
{
  return sub_1D75E0DBC(*v0);
}

uint64_t sub_1D75E1004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75E0B10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75E102C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E0DB4();
  *a1 = result;
  return result;
}

uint64_t sub_1D75E1054(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1A38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E1090(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1A38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E10CC(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1B68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E1108(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1B68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E1144(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1A84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E1180(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1A84();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E11BC(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1C40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E11F8(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1C40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E1234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75E0E98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75E1260(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1C8C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E129C(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1C8C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E12D8(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1BF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E1314(uint64_t a1)
{
  unint64_t v2 = sub_1D75E1BF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AuxiliaryMetadataItem.encode(to:)(void *a1)
{
  char v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC3B8);
  OUTLINED_FUNCTION_0_5();
  uint64_t v58 = v6;
  uint64_t v59 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16_5(v7, v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC398);
  OUTLINED_FUNCTION_0_5();
  uint64_t v55 = v9;
  uint64_t v56 = v8;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_17_5(v10, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC390);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC3A8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC3A0);
  OUTLINED_FUNCTION_0_5();
  uint64_t v52 = v14;
  uint64_t v53 = v13;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_1_7();
  uint64_t v17 = v16 - v15;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC388);
  OUTLINED_FUNCTION_0_5();
  uint64_t v50 = v18;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC3B0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_1_7();
  uint64_t v23 = v22 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC380);
  OUTLINED_FUNCTION_0_5();
  uint64_t v60 = v24;
  uint64_t v61 = v25;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_1_7();
  uint64_t v28 = v27 - v26;
  unint64_t v29 = *v3;
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E1A38();
  sub_1D76617C0();
  switch(v29 >> 61)
  {
    case 1uLL:
      sub_1D75E1C8C();
      OUTLINED_FUNCTION_8_7();
      sub_1D76614B0();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v2, v51);
      goto LABEL_10;
    case 2uLL:
      sub_1D75E1C40();
      OUTLINED_FUNCTION_8_7();
      sub_1D7661470();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v17, v53);
      goto LABEL_10;
    case 3uLL:
      sub_1D75E1BF4();
      sub_1D76613F0();
      sub_1D7661450();
      OUTLINED_FUNCTION_6();
      v36(v35);
      uint64_t v34 = OUTLINED_FUNCTION_30_3();
      return v33(v34, v37);
    case 4uLL:
      uint64_t v38 = *(void *)((v29 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v39 = *(void *)((v29 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1D75934F4(v38, v39);
      sub_1D75E1B68();
      sub_1D76613F0();
      sub_1D75E1BB4();
      sub_1D7661490();
      OUTLINED_FUNCTION_6();
      v41(v40);
      OUTLINED_FUNCTION_6();
      v43(v42);
      return sub_1D75933F0(v38, v39);
    case 5uLL:
      sub_1D75E1B1C();
      uint64_t v45 = v54;
      OUTLINED_FUNCTION_8_7();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BD60);
      sub_1D75E4E0C(&qword_1EA82BD68, (void (*)(void))sub_1D75E1AD0);
      uint64_t v46 = v56;
      OUTLINED_FUNCTION_34_2();
      uint64_t v47 = v55;
      goto LABEL_9;
    case 6uLL:
      sub_1D75E1A84();
      uint64_t v45 = v57;
      OUTLINED_FUNCTION_8_7();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC580);
      sub_1D75E4D44((unint64_t *)&unk_1EBDEC358, (void (*)(void))sub_1D75E1AD0);
      uint64_t v46 = v59;
      OUTLINED_FUNCTION_34_2();
      uint64_t v47 = v58;
LABEL_9:
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
LABEL_10:
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8);
      uint64_t v34 = v23;
      break;
    default:
      sub_1D75E1CD8();
      uint64_t v30 = v60;
      sub_1D76613F0();
      sub_1D7661460();
      OUTLINED_FUNCTION_6();
      v32(v31);
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8);
      uint64_t v34 = v28;
      break;
  }
  uint64_t v37 = v30;
  return v33(v34, v37);
}

unint64_t sub_1D75E1A38()
{
  unint64_t result = qword_1EBDEC4D8;
  if (!qword_1EBDEC4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4D8);
  }
  return result;
}

unint64_t sub_1D75E1A84()
{
  unint64_t result = qword_1EA82BD50;
  if (!qword_1EA82BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD50);
  }
  return result;
}

unint64_t sub_1D75E1AD0()
{
  unint64_t result = qword_1EBDEC318;
  if (!qword_1EBDEC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC318);
  }
  return result;
}

unint64_t sub_1D75E1B1C()
{
  unint64_t result = qword_1EA82BD58;
  if (!qword_1EA82BD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD58);
  }
  return result;
}

unint64_t sub_1D75E1B68()
{
  unint64_t result = qword_1EA82BD70;
  if (!qword_1EA82BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD70);
  }
  return result;
}

unint64_t sub_1D75E1BB4()
{
  unint64_t result = qword_1EBDEADF8;
  if (!qword_1EBDEADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEADF8);
  }
  return result;
}

unint64_t sub_1D75E1BF4()
{
  unint64_t result = qword_1EA82BD78;
  if (!qword_1EA82BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD78);
  }
  return result;
}

unint64_t sub_1D75E1C40()
{
  unint64_t result = qword_1EA82BD80;
  if (!qword_1EA82BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD80);
  }
  return result;
}

unint64_t sub_1D75E1C8C()
{
  unint64_t result = qword_1EA82BD88;
  if (!qword_1EA82BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD88);
  }
  return result;
}

unint64_t sub_1D75E1CD8()
{
  unint64_t result = qword_1EBDEC540;
  if (!qword_1EBDEC540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC540);
  }
  return result;
}

uint64_t AuxiliaryMetadataItem.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1D8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1B8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1B0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16_5(v7, v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1C8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1C0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1A8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1D0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1A0);
  OUTLINED_FUNCTION_0_5();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_25();
  unint64_t v85 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E1A38();
  sub_1D76617A0();
  if (v86)
  {
    uint64_t v16 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v16);
  }
  uint64_t v87 = v14;
  uint64_t v17 = v2;
  uint64_t v18 = sub_1D76613D0();
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = v12;
  if (!v19)
  {
    uint64_t v16 = (uint64_t)a1;
LABEL_9:
    uint64_t v29 = sub_1D7661150();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B490);
    *uint64_t v31 = &type metadata for AuxiliaryMetadataItem;
    sub_1D76612E0();
    sub_1D7661140();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v29);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v17, v20);
    return __swift_destroy_boxed_opaque_existential_0Tm(v16);
  }
  uint64_t v82 = v12;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 32);
  uint64_t v22 = sub_1D75AB7D8(1, v19, v18, v18 + 32, 0, (2 * v19) | 1);
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v16 = v22;
  if (v24 != v26 >> 1)
  {
    uint64_t v16 = (uint64_t)v85;
    uint64_t v20 = v12;
    goto LABEL_9;
  }
  uint64_t v27 = v17;
  uint64_t v28 = a2;
  switch(v21)
  {
    case 1:
      sub_1D75E1C8C();
      OUTLINED_FUNCTION_3_8();
      uint64_t v44 = OUTLINED_FUNCTION_55();
      uint64_t v45 = sub_1D76613A0();
      OUTLINED_FUNCTION_10_5();
      v67();
      swift_unknownObjectRelease();
      uint64_t v68 = OUTLINED_FUNCTION_5_7();
      v69(v68);
      *(void *)(v44 + 16) = v45;
      unint64_t v70 = v44 | 0x2000000000000000;
      uint64_t v16 = (uint64_t)v85;
      goto LABEL_35;
    case 2:
      sub_1D75E1C40();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      uint64_t v33 = OUTLINED_FUNCTION_55();
      sub_1D7661360();
      if (v26)
      {
        OUTLINED_FUNCTION_10_5();
        v35();
        swift_unknownObjectRelease();
        uint64_t v36 = OUTLINED_FUNCTION_5_7();
        v37(v36);
        goto LABEL_27;
      }
      uint64_t v55 = v34;
      OUTLINED_FUNCTION_10_5();
      v56();
      swift_unknownObjectRelease();
      uint64_t v57 = OUTLINED_FUNCTION_5_7();
      v58(v57);
      *(void *)(v33 + 16) = v55;
      unint64_t v70 = v33 | 0x4000000000000000;
      goto LABEL_35;
    case 3:
      sub_1D75E1BF4();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      uint64_t v46 = swift_allocObject();
      uint64_t v47 = sub_1D7661340();
      if (v26) {
        goto LABEL_26;
      }
      uint64_t v84 = v47;
      uint64_t v71 = v48;
      OUTLINED_FUNCTION_6();
      v72();
      swift_unknownObjectRelease();
      uint64_t v73 = OUTLINED_FUNCTION_1_12();
      v74(v73);
      *(void *)(v46 + 16) = v84;
      *(void *)(v46 + 24) = v71;
      unint64_t v70 = v46 | 0x6000000000000000;
      goto LABEL_35;
    case 4:
      sub_1D75E1B68();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      uint64_t v38 = swift_allocObject();
      sub_1D75E4EB4();
      sub_1D7661380();
      if (v26) {
        goto LABEL_26;
      }
      OUTLINED_FUNCTION_6();
      v59();
      swift_unknownObjectRelease();
      uint64_t v60 = OUTLINED_FUNCTION_1_12();
      v61(v60);
      unint64_t v70 = v38 | 0x8000000000000000;
      goto LABEL_31;
    case 5:
      sub_1D75E1B1C();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      uint64_t v49 = OUTLINED_FUNCTION_55();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BD60);
      sub_1D75E4E0C(&qword_1EA82BD90, (void (*)(void))sub_1D75E4DC0);
      sub_1D7661380();
      if (v26)
      {
        OUTLINED_FUNCTION_6();
        v50();
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v27, v82);
        goto LABEL_27;
      }
      OUTLINED_FUNCTION_6();
      v75();
      swift_unknownObjectRelease();
      uint64_t v76 = OUTLINED_FUNCTION_1_12();
      v77(v76);
      unint64_t v70 = v49 | 0xA000000000000000;
      goto LABEL_35;
    case 6:
      sub_1D75E1A84();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      uint64_t v51 = OUTLINED_FUNCTION_55();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC580);
      sub_1D75E4D44(&qword_1EBDEC188, (void (*)(void))sub_1D75E4DC0);
      sub_1D7661380();
      if (v26)
      {
LABEL_26:
        OUTLINED_FUNCTION_6();
        v52();
        swift_unknownObjectRelease();
        uint64_t v53 = OUTLINED_FUNCTION_1_12();
        v54(v53);
        goto LABEL_27;
      }
      OUTLINED_FUNCTION_6();
      v78();
      swift_unknownObjectRelease();
      uint64_t v79 = OUTLINED_FUNCTION_1_12();
      v80(v79);
      unint64_t v70 = v51 | 0xC000000000000000;
      goto LABEL_35;
    default:
      sub_1D75E1CD8();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_14_5();
      unint64_t v70 = swift_allocObject();
      char v39 = sub_1D7661350();
      if (v26)
      {
        uint64_t v40 = OUTLINED_FUNCTION_22_3();
        v41(v40);
        swift_unknownObjectRelease();
        uint64_t v42 = OUTLINED_FUNCTION_13_5();
        v43(v42);
LABEL_27:
        swift_deallocUninitializedObject();
      }
      else
      {
        char v62 = v39;
        uint64_t v63 = OUTLINED_FUNCTION_22_3();
        v64(v63);
        swift_unknownObjectRelease();
        uint64_t v65 = OUTLINED_FUNCTION_13_5();
        v66(v65);
        *(unsigned char *)(v70 + 16) = v62 & 1;
LABEL_31:
        uint64_t v28 = a2;
LABEL_35:
        *uint64_t v28 = v70;
      }
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v16);
}

uint64_t sub_1D75E289C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return AuxiliaryMetadataItem.init(from:)(a1, a2);
}

uint64_t sub_1D75E28B4(void *a1)
{
  return AuxiliaryMetadataItem.encode(to:)(a1);
}

uint64_t sub_1D75E28D0()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EBDEC338 = result;
  return result;
}

uint64_t AuxiliaryMetadataUpdate.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuxiliaryMetadataUpdate.domain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AuxiliaryMetadataUpdate.domain.modify())(void)
{
  return nullsub_1;
}

uint64_t AuxiliaryMetadataUpdate.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AuxiliaryMetadataUpdate.metadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AuxiliaryMetadataUpdate.metadata.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1D75E2A28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D75E2B10(char a1)
{
  if (a1) {
    return 0x617461646174656DLL;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_1D75E2B44()
{
  return sub_1D75E2B10(*v0);
}

uint64_t sub_1D75E2B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75E2A28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75E2B74(uint64_t a1)
{
  unint64_t v2 = sub_1D75E4F44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E2BB0(uint64_t a1)
{
  unint64_t v2 = sub_1D75E4F44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AuxiliaryMetadataUpdate.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC3C0);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E4F44();
  sub_1D76617C0();
  sub_1D7661450();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC580);
    sub_1D75E4D44((unint64_t *)&unk_1EBDEC358, (void (*)(void))sub_1D75E1AD0);
    sub_1D7661490();
  }
  OUTLINED_FUNCTION_6();
  return v4();
}

uint64_t AuxiliaryMetadataUpdate.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC1E8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E4F44();
  sub_1D76617A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v6 = sub_1D7661340();
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC580);
  sub_1D75E4D44(&qword_1EBDEC188, (void (*)(void))sub_1D75E4DC0);
  swift_bridgeObjectRetain();
  sub_1D7661380();
  uint64_t v9 = OUTLINED_FUNCTION_24_3();
  v10(v9);
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D75E2F88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AuxiliaryMetadataUpdate.init(from:)(a1, a2);
}

uint64_t sub_1D75E2FA0(void *a1)
{
  return AuxiliaryMetadataUpdate.encode(to:)(a1);
}

unint64_t static AuxiliaryMetadataProvider.XPCKeys.xpcEventStreamName.getter()
{
  return 0xD000000000000020;
}

uint64_t static AuxiliaryMetadataProvider.XPCKeys.domainKey.getter()
{
  return 0x6E69616D6F64;
}

void (*sub_1D75E2FE8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D75E3040;
}

void sub_1D75E3040(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    OS_dispatch_queue.assertOnQueueHierarchy()();
  }
}

void *sub_1D75E3078()
{
  sub_1D7660280();
  sub_1D7660240();
  uint64_t v0 = swift_dynamicCastClassUnconditional();
  type metadata accessor for AuxiliaryMetadataProvider();
  uint64_t v1 = (void *)swift_allocObject();
  uint64_t result = sub_1D75E31BC(v0, v1);
  qword_1EBDEC330 = (uint64_t)result;
  return result;
}

uint64_t sub_1D75E3100(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t static AuxiliaryMetadataProvider.shared.getter()
{
  if (qword_1EBDEC098 != -1) {
    swift_once();
  }
  return swift_retain();
}

void *sub_1D75E31BC(uint64_t a1, void *a2)
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4B0);
  uint64_t v4 = sub_1D7660950();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1D7660930();
  uint64_t v5 = sub_1D7660E60();
  MEMORY[0x1F4188790](v5);
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D75E61A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC590);
  sub_1D75E61EC();
  sub_1D7661090();
  uint64_t v6 = sub_1D7660E90();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, void))(v8 + 104))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  uint64_t v9 = (void *)sub_1D7660EB0();
  a2[3] = v9;
  sub_1D76601B0();
  swift_allocObject();
  a2[4] = sub_1D7660180();
  sub_1D7660190();
  swift_allocObject();
  a2[5] = sub_1D7660180();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC368);
  a2[6] = sub_1D7660A50();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEC580);
  a2[7] = sub_1D7660A50();
  a2[2] = a1;
  swift_retain();
  sub_1D76600D0();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  void aBlock[4] = sub_1D75E6278;
  void aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75E3100;
  aBlock[3] = &block_descriptor_87;
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = v9;
  swift_retain_n();
  xpc_set_event_stream_handler("com.apple.remotepairing.metadata", v12, v11);
  _Block_release(v11);
  swift_release_n();
  swift_release();
  swift_release();

  return a2;
}

uint64_t sub_1D75E355C()
{
  uint64_t v0 = sub_1D7660130();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    sub_1D7660140();
    sub_1D75E3DF8();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

void sub_1D75E3674()
{
  OUTLINED_FUNCTION_97();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1D76609E0();
  OUTLINED_FUNCTION_0_5();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_25();
  uint64_t v12 = *(void **)(v0 + 24);
  *uint64_t v1 = v12;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v1, *MEMORY[0x1E4FBCBE0], v8);
  uint64_t v13 = v12;
  char v14 = sub_1D7660A00();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v1, v8);
  if (v14)
  {
    uint64_t v15 = (void *)swift_allocObject();
    long long v15[2] = v0;
    void v15[3] = v7;
    v15[4] = v5;
    v15[5] = v3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1D75E4FD8;
    *(void *)(v16 + 24) = v15;
    v19[4] = sub_1D75E0530;
    v19[5] = v16;
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 1107296256;
    _OWORD v19[2] = sub_1D75E38AC;
    void v19[3] = &block_descriptor_5;
    uint64_t v17 = _Block_copy(v19);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v13, v17);
    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      OUTLINED_FUNCTION_84();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D75E3884(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D75E38AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_1D75E38D4()
{
  OUTLINED_FUNCTION_97();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC348);
  MEMORY[0x1F4188790](v7 - 8);
  OUTLINED_FUNCTION_17_5(v8, v41[0]);
  uint64_t v9 = sub_1D7660130();
  OUTLINED_FUNCTION_0_5();
  uint64_t v44 = v10;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v43 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v42 = (char *)v41 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)v41 - v16;
  uint64_t v49 = v0;
  v41[2] = *(void *)(v0 + 24);
  OS_dispatch_queue.assertOnQueueHierarchy()();
  LOBYTE(v17) = sub_1D7660DD0();
  if (qword_1EBDEC340 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v18 = qword_1EBDEC338;
  if (os_log_type_enabled((os_log_t)qword_1EBDEC338, (os_log_type_t)v17))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v19 = (uint8_t *)OUTLINED_FUNCTION_14_0();
    v52[0] = OUTLINED_FUNCTION_11_4();
    *(_DWORD *)uint64_t v19 = 136446210;
    swift_bridgeObjectRetain();
    v51[0] = sub_1D758DBE8(v6, v4, v52);
    sub_1D7661020();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D757C000, v18, (os_log_type_t)v17, "Client registered metadata for domain %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  v41[3] = (uint64_t)v2;
  sub_1D75E4374();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D75E2FE8((uint64_t)v52);
  uint64_t v17 = v51;
  uint64_t v21 = sub_1D75E058C(v51, v6, v4);
  uint64_t v22 = *v20;
  if (*v20)
  {
    uint64_t v23 = v20;
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v44 + 32);
    uint64_t v45 = v44 + 8;
    v41[1] = (unint64_t)v51 | 0xF45000000000000;
    do
    {
      if (*(void *)(v22 + 16))
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        void *v23 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1D75E6194();
          uint64_t v22 = v39;
          void *v23 = v39;
        }
        uint64_t v25 = *(void *)(v22 + 16);
        if (!v25)
        {
          __break(1u);
          goto LABEL_17;
        }
        uint64_t v26 = v25 - 1;
        unint64_t v27 = v22
            + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
            + *(void *)(v44 + 72) * (v25 - 1);
        uint64_t v48 = v2;
        uint64_t v28 = v6;
        unint64_t v29 = v4;
        uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 32);
        uint64_t v31 = v9;
        uint64_t v32 = v43;
        v30(v43, v27, v31);
        *(void *)(v22 + 16) = v26;
        void *v23 = v22;
        uint64_t v33 = v42;
        uint64_t v34 = v32;
        uint64_t v9 = v31;
        uint64_t v17 = v51;
        v30(v42, (unint64_t)v34, v9);
        uint64_t v35 = (uint64_t)v47;
        v30(v47, (unint64_t)v33, v9);
        unint64_t v4 = v29;
        uint64_t v6 = v28;
        uint64_t v2 = v48;
        uint64_t v36 = 0;
      }
      else
      {
        uint64_t v36 = 1;
        uint64_t v35 = (uint64_t)v47;
      }
      __swift_storeEnumTagSinglePayload(v35, v36, 1, v9);
      ((void (*)(void *, void))v21)(v51, 0);
      swift_bridgeObjectRelease();
      v2((uint64_t)v52, 0);
      if (__swift_getEnumTagSinglePayload(v35, 1, v9) == 1) {
        goto LABEL_15;
      }
      (*v50)(v46, v35, v9);
      sub_1D7660120();
      OUTLINED_FUNCTION_6();
      v37();
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1D75E2FE8((uint64_t)v52);
      uint64_t v21 = sub_1D75E058C(v51, v6, v4);
      uint64_t v23 = v38;
      uint64_t v22 = *v38;
    }
    while (*v38);
  }
  ((void (*)(void *, void))v21)(v51, 0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29_3();
  ((void (*)(void))v2)();
  uint64_t v35 = (uint64_t)v47;
  __swift_storeEnumTagSinglePayload((uint64_t)v47, 1, 1, v9);
LABEL_15:
  sub_1D75E613C(v35, &qword_1EBDEC348);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v40 = swift_bridgeObjectRetain();
  sub_1D75B6FE4(v40, v6, v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  OS_dispatch_queue.assertOnQueueHierarchy()();
  OUTLINED_FUNCTION_84();
}

void sub_1D75E3DF8()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC348);
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_9();
  uint64_t v2 = sub_1D7660130();
  OUTLINED_FUNCTION_0_5();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_1_7();
  uint64_t v8 = v7 - v6;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  sub_1D7660110();
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    sub_1D75E613C(v0, &qword_1EBDEC348);
    sub_1D7660DC0();
    if (qword_1EBDEC340 != -1) {
      swift_once();
    }
    sub_1D7660010();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v8, v0, v2);
    uint64_t v9 = sub_1D7660150();
    if (v10)
    {
      uint64_t v11 = v9;
      unint64_t v12 = v10;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = OUTLINED_FUNCTION_30_3();
      uint64_t v14 = sub_1D75B53B0(v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14)
      {
        os_log_type_t v15 = sub_1D7660DD0();
        if (qword_1EBDEC340 != -1) {
          swift_once();
        }
        uint64_t v16 = qword_1EBDEC338;
        if (os_log_type_enabled((os_log_t)qword_1EBDEC338, v15))
        {
          swift_bridgeObjectRetain_n();
          uint64_t v26 = v11;
          uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_14_0();
          v28[0] = OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_18_5(4.8751e-34);
          uint64_t v18 = sub_1D758DBE8(v26, v12, v28);
          OUTLINED_FUNCTION_15_5(v18);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D757C000, v16, v15, "Received event from publisher for currently registered domain %{public}s. Pushing metadata to service", v17, 0xCu);
          OUTLINED_FUNCTION_32_2();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        OUTLINED_FUNCTION_30_3();
        sub_1D75E4374();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D7660120();
      }
      else
      {
        uint64_t v27 = v11;
        uint64_t v19 = sub_1D7660DD0();
        if (qword_1EBDEC340 != -1) {
          swift_once();
        }
        uint64_t v20 = qword_1EBDEC338;
        if (os_log_type_enabled((os_log_t)qword_1EBDEC338, (os_log_type_t)v19))
        {
          swift_bridgeObjectRetain_n();
          uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_14_0();
          v28[0] = OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_18_5(4.8751e-34);
          uint64_t v22 = sub_1D758DBE8(v27, v12, v28);
          OUTLINED_FUNCTION_15_5(v22);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D757C000, v20, (os_log_type_t)v19, "Received event from publisher for currently unregistered domain %{public}s. Storing event", v21, 0xCu);
          OUTLINED_FUNCTION_32_2();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBB8);
        unint64_t v23 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1D7664B10;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v24 + v23, v8, v2);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v25 = OUTLINED_FUNCTION_30_3();
        sub_1D75B53B0(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D761948C();
        swift_beginAccess();
        sub_1D75B6FD8(v24, v27, v12);
        swift_endAccess();
        swift_bridgeObjectRelease();
        OS_dispatch_queue.assertOnQueueHierarchy()();
      }
    }
    else
    {
      sub_1D7660DC0();
      if (qword_1EBDEC340 != -1) {
        swift_once();
      }
      sub_1D7660010();
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  }
  OUTLINED_FUNCTION_84();
}

void sub_1D75E4374()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC350);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_1_7();
  sub_1D76603A0();
  OUTLINED_FUNCTION_0_5();
  v15[1] = v7;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  v15[0] = (char *)v15 - v10;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  long long v15[2] = v5;
  uint64_t v16 = v5;
  uint64_t v17 = v3;
  uint64_t v18 = v1;
  sub_1D75E5058();
  sub_1D75E50A4();
  sub_1D75A7154();
  sub_1D75A71A0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D76600F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1D7660DD0();
  if (qword_1EBDEC340 != -1) {
    swift_once();
  }
  unint64_t v12 = qword_1EBDEC338;
  if (os_log_type_enabled((os_log_t)qword_1EBDEC338, (os_log_type_t)v11))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_14_0();
    uint64_t v16 = OUTLINED_FUNCTION_11_4();
    *(_DWORD *)uint64_t v13 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v14 = OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_12_4(v14);
    sub_1D7661020();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D757C000, v12, (os_log_type_t)v11, "Successfully pushed auxiliary metadata to service for domain %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  OUTLINED_FUNCTION_84();
}

uint64_t AuxiliaryMetadataProvider.deinit()
{
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AuxiliaryMetadataProvider.__deallocating_deinit()
{
  AuxiliaryMetadataProvider.deinit();
  return MEMORY[0x1F4186488](v0, 64, 7);
}

void (*sub_1D75E4A34(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1D75E4CD0(v6);
  v6[10] = sub_1D75E4B4C(v6 + 4, a2, a3);
  return sub_1D75E4AE0;
}

void sub_1D75E4AE0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29_3();
  v2();
  free(v1);
}

void (*sub_1D75E4B4C(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  void v8[2] = a3;
  v8[3] = v3;
  v8[1] = a2;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_1D75B6C1C();
  *((unsigned char *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(void *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC378);
  if (sub_1D7661220())
  {
    unint64_t v14 = sub_1D75B6C1C();
    if ((v13 & 1) == (v15 & 1))
    {
      unint64_t v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **))sub_1D76615F0();
    __break(1u);
    return result;
  }
LABEL_5:
  void v8[4] = v12;
  if (v13) {
    uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v12);
  }
  else {
    uint64_t v16 = 0;
  }
  *uint64_t v8 = v16;
  return sub_1D75E4C80;
}

void sub_1D75E4C80(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1D75B8D54(*a1, *((unsigned char *)*a1 + 40), (void **)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1D75E4CD0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1D75E4D00;
}

uint64_t sub_1D75E4D00(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1D75E4D0C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D75E4D44(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDEC580);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D75E4DC0()
{
  unint64_t result = qword_1EBDEC168;
  if (!qword_1EBDEC168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC168);
  }
  return result;
}

uint64_t sub_1D75E4E0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA82BD60);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75E4E7C()
{
  sub_1D75933F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D75E4EB4()
{
  unint64_t result = qword_1EBDEAE00;
  if (!qword_1EBDEAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAE00);
  }
  return result;
}

uint64_t sub_1D75E4EF4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75E4F2C()
{
  return OUTLINED_FUNCTION_2_3(v0, 24);
}

uint64_t sub_1D75E4F38()
{
  return OUTLINED_FUNCTION_2_3(v0, 17);
}

unint64_t sub_1D75E4F44()
{
  unint64_t result = qword_1EBDEC568;
  if (!qword_1EBDEC568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC568);
  }
  return result;
}

uint64_t sub_1D75E4F90()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D75E4FD8()
{
}

uint64_t sub_1D75E5004()
{
  return OUTLINED_FUNCTION_2_3(v0, 32);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1D75E5028(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75E5058();
  unint64_t result = sub_1D75E50A4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D75E5058()
{
  unint64_t result = qword_1EBDEC328;
  if (!qword_1EBDEC328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC328);
  }
  return result;
}

unint64_t sub_1D75E50A4()
{
  unint64_t result = qword_1EBDEC320;
  if (!qword_1EBDEC320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC320);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AuxiliaryMetadataItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for AuxiliaryMetadataItem()
{
  return swift_release();
}

void *assignWithCopy for AuxiliaryMetadataItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for AuxiliaryMetadataItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataItem(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7A && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 121;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x79) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(void *)unint64_t result = a2 - 122;
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1D75E5250(void *a1)
{
  return *a1 >> 61;
}

void *sub_1D75E525C(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1D75E526C(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

void type metadata accessor for AuxiliaryMetadataItem()
{
}

uint64_t destroy for AuxiliaryMetadataUpdate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19RemotePairingDevice23AuxiliaryMetadataUpdateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AuxiliaryMetadataUpdate(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AuxiliaryMetadataUpdate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataUpdate(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AuxiliaryMetadataUpdate()
{
}

uint64_t type metadata accessor for AuxiliaryMetadataProvider()
{
  return self;
}

uint64_t method lookup function for AuxiliaryMetadataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AuxiliaryMetadataProvider);
}

uint64_t dispatch thunk of AuxiliaryMetadataProvider.registerMetadata(forDomain:metadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

void type metadata accessor for AuxiliaryMetadataProvider.XPCKeys()
{
}

unsigned char *storeEnumTagSinglePayload for AuxiliaryMetadataUpdate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E5580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataUpdate.CodingKeys()
{
  return &type metadata for AuxiliaryMetadataUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuxiliaryMetadataItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E570CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.CodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.CodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.BooleanCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.IntCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.IntCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.FloatCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.StringCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.StringCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.DataCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.DataCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.ArrayCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys;
}

unsigned char *_s19RemotePairingDevice21AuxiliaryMetadataItemO17BooleanCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D75E5844);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.DictionaryCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys;
}

unint64_t sub_1D75E5880()
{
  unint64_t result = qword_1EA82BD98;
  if (!qword_1EA82BD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BD98);
  }
  return result;
}

unint64_t sub_1D75E58D0()
{
  unint64_t result = qword_1EA82BDA0;
  if (!qword_1EA82BDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDA0);
  }
  return result;
}

unint64_t sub_1D75E5920()
{
  unint64_t result = qword_1EA82BDA8;
  if (!qword_1EA82BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDA8);
  }
  return result;
}

unint64_t sub_1D75E5970()
{
  unint64_t result = qword_1EA82BDB0;
  if (!qword_1EA82BDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDB0);
  }
  return result;
}

unint64_t sub_1D75E59C0()
{
  unint64_t result = qword_1EA82BDB8;
  if (!qword_1EA82BDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDB8);
  }
  return result;
}

unint64_t sub_1D75E5A10()
{
  unint64_t result = qword_1EA82BDC0;
  if (!qword_1EA82BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDC0);
  }
  return result;
}

unint64_t sub_1D75E5A60()
{
  unint64_t result = qword_1EA82BDC8;
  if (!qword_1EA82BDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDC8);
  }
  return result;
}

unint64_t sub_1D75E5AB0()
{
  unint64_t result = qword_1EA82BDD0;
  if (!qword_1EA82BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDD0);
  }
  return result;
}

unint64_t sub_1D75E5B00()
{
  unint64_t result = qword_1EA82BDD8;
  if (!qword_1EA82BDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDD8);
  }
  return result;
}

unint64_t sub_1D75E5B50()
{
  unint64_t result = qword_1EBDEC578;
  if (!qword_1EBDEC578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC578);
  }
  return result;
}

unint64_t sub_1D75E5BA0()
{
  unint64_t result = qword_1EBDEC570;
  if (!qword_1EBDEC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC570);
  }
  return result;
}

unint64_t sub_1D75E5BF0()
{
  unint64_t result = qword_1EBDEC550;
  if (!qword_1EBDEC550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC550);
  }
  return result;
}

unint64_t sub_1D75E5C40()
{
  unint64_t result = qword_1EBDEC548;
  if (!qword_1EBDEC548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC548);
  }
  return result;
}

unint64_t sub_1D75E5C90()
{
  unint64_t result = qword_1EBDEC4F8;
  if (!qword_1EBDEC4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4F8);
  }
  return result;
}

unint64_t sub_1D75E5CE0()
{
  unint64_t result = qword_1EBDEC4F0;
  if (!qword_1EBDEC4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4F0);
  }
  return result;
}

unint64_t sub_1D75E5D30()
{
  unint64_t result = qword_1EBDEC528;
  if (!qword_1EBDEC528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC528);
  }
  return result;
}

unint64_t sub_1D75E5D80()
{
  unint64_t result = qword_1EBDEC520;
  if (!qword_1EBDEC520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC520);
  }
  return result;
}

unint64_t sub_1D75E5DD0()
{
  unint64_t result = qword_1EBDEC530;
  if (!qword_1EBDEC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC530);
  }
  return result;
}

unint64_t sub_1D75E5E20()
{
  unint64_t result = qword_1EBDEC538;
  if (!qword_1EBDEC538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC538);
  }
  return result;
}

unint64_t sub_1D75E5E70()
{
  unint64_t result = qword_1EBDEC508;
  if (!qword_1EBDEC508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC508);
  }
  return result;
}

unint64_t sub_1D75E5EC0()
{
  unint64_t result = qword_1EBDEC500;
  if (!qword_1EBDEC500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC500);
  }
  return result;
}

unint64_t sub_1D75E5F10()
{
  unint64_t result = qword_1EBDEC518;
  if (!qword_1EBDEC518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC518);
  }
  return result;
}

unint64_t sub_1D75E5F60()
{
  unint64_t result = qword_1EBDEC510;
  if (!qword_1EBDEC510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC510);
  }
  return result;
}

unint64_t sub_1D75E5FB0()
{
  unint64_t result = qword_1EBDEC560;
  if (!qword_1EBDEC560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC560);
  }
  return result;
}

unint64_t sub_1D75E6000()
{
  unint64_t result = qword_1EBDEC558;
  if (!qword_1EBDEC558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC558);
  }
  return result;
}

unint64_t sub_1D75E6050()
{
  unint64_t result = qword_1EBDEC4E8;
  if (!qword_1EBDEC4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4E8);
  }
  return result;
}

unint64_t sub_1D75E60A0()
{
  unint64_t result = qword_1EBDEC4E0;
  if (!qword_1EBDEC4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC4E0);
  }
  return result;
}

unint64_t sub_1D75E60EC()
{
  unint64_t result = qword_1EA82BDE0;
  if (!qword_1EA82BDE0)
  {
    sub_1D76603A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDE0);
  }
  return result;
}

uint64_t sub_1D75E613C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_6();
  v3();
  return a1;
}

void sub_1D75E6194()
{
}

unint64_t sub_1D75E61A8()
{
  unint64_t result = qword_1EBDEC5A0;
  if (!qword_1EBDEC5A0)
  {
    sub_1D7660E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC5A0);
  }
  return result;
}

unint64_t sub_1D75E61EC()
{
  unint64_t result = qword_1EBDEC598;
  if (!qword_1EBDEC598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDEC590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC598);
  }
  return result;
}

uint64_t sub_1D75E6240()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D75E6278()
{
  return sub_1D75E355C();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_4(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

void OUTLINED_FUNCTION_17_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_18_5(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 176) = v1 + 1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  uint64_t v3 = *(void *)(v1 - 128);
  return sub_1D758DBE8(v3, v0, (uint64_t *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return v0;
}

uint64_t ControlChannelConnectionError.init(_:message:failureReason:recoverySuggestion:underlyingError:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v18 = *a1;
  char v15 = v18;
  Swift::String v16 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v18);
  uint64_t result = sub_1D7592DD0(a2);
  *(unsigned char *)a8 = v15;
  *(Swift::String *)(a8 + 8) = v16;
  *(void *)(a8 + 24) = a3;
  *(void *)(a8 + 32) = a4;
  *(void *)(a8 + 40) = a5;
  *(void *)(a8 + 48) = a6;
  *(void *)(a8 + 56) = a7;
  return result;
}

unint64_t ControlChannelConnectionError.Code.defaultMessage.getter()
{
  unint64_t result = 0x206E776F6E6B6E55;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      unint64_t result = 0x726F70736E617254;
      break;
  }
  return result;
}

RemotePairingDevice::ControlChannelConnectionError::Code_optional __swiftcall ControlChannelConnectionError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 6;
  if ((unint64_t)rawValue < 6) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (RemotePairingDevice::ControlChannelConnectionError::Code_optional)rawValue;
}

uint64_t sub_1D75E652C()
{
  return sub_1D75BA168();
}

uint64_t sub_1D75E6534()
{
  return sub_1D75BABEC();
}

RemotePairingDevice::ControlChannelConnectionError::Code_optional sub_1D75E653C(Swift::Int *a1)
{
  return ControlChannelConnectionError.Code.init(rawValue:)(*a1);
}

uint64_t ControlChannelConnectionError.message.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t ControlChannelConnectionError.failureReason.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t ControlChannelConnectionError.recoverySuggestion.getter()
{
  return OUTLINED_FUNCTION_36();
}

void *ControlChannelConnectionError.underlyingError.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t sub_1D75E65F4()
{
  return sub_1D7661600();
}

uint64_t ControlChannelConnectionError.errorCode.getter()
{
  return *v0;
}

uint64_t ControlChannelConnectionError.errorUserInfo.getter()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = v0[6];
  uint64_t v46 = v0[5];
  uint64_t v6 = v0[7];
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v68 = sub_1D7660A50();
  sub_1D7660B10();
  *((void *)&v67 + 1) = v7;
  *((void *)&v66 + 1) = v1;
  uint64_t v8 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_8(v8, v9, v10, v11, v12, v13, v14, v15, v42, v46, v50, v54, v58, v62, v2);
  sub_1D75B45A0();
  sub_1D7660B10();
  if (v3)
  {
    *((void *)&v67 + 1) = v7;
    *(void *)&long long v66 = v4;
    *((void *)&v66 + 1) = v3;
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_8(v16, v17, v18, v19, v20, v21, v22, v23, v43, v47, v51, v55, v59, v63, v66);
  sub_1D75B45A0();
  sub_1D7660B10();
  if (v5)
  {
    *((void *)&v67 + 1) = v7;
    *(void *)&long long v66 = v48;
    *((void *)&v66 + 1) = v5;
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  uint64_t v24 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_8(v24, v25, v26, v27, v28, v29, v30, v31, v44, v48, v52, v56, v60, v64, v66);
  sub_1D75B45A0();
  uint64_t v32 = sub_1D7660B10();
  if (v6)
  {
    swift_getErrorValue();
    *((void *)&v67 + 1) = v57;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v66);
    uint64_t v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(boxed_opaque_existential_0, v53, v57);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  OUTLINED_FUNCTION_8_8(v32, v33, v34, v35, v36, v37, v38, v39, v45, v49, v53, v57, v61, v65, v66);
  sub_1D75B45A0();
  return v68;
}

uint64_t sub_1D75E680C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1D7661560() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165;
      if (v7 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001D76755E0 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7675600 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x69796C7265646E75 && a2 == 0xEF726F727245676ELL)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v9 = sub_1D7661560();
        swift_bridgeObjectRelease();
        if (v9) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

uint64_t sub_1D75E6AB0()
{
  return 6;
}

unint64_t sub_1D75E6AB8(char a1)
{
  unint64_t result = 1701080931;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      unint64_t result = 0x526572756C696166;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x69796C7265646E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75E6BA0()
{
  uint64_t v0 = sub_1D76612C0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1D75E6BF4(char a1)
{
  if (a1) {
    return 0x726F727265736ELL;
  }
  else {
    return 0x656C6261646F63;
  }
}

unint64_t sub_1D75E6C2C()
{
  return sub_1D75E6AB8(*v0);
}

uint64_t sub_1D75E6C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75E680C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75E6C5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E6AB0();
  *a1 = result;
  return result;
}

uint64_t sub_1D75E6C84(uint64_t a1)
{
  unint64_t v2 = sub_1D75E71D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E6CC0(uint64_t a1)
{
  unint64_t v2 = sub_1D75E71D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E6CFC(char *a1, char *a2)
{
  return sub_1D75B95FC(*a1, *a2);
}

uint64_t sub_1D75E6D08()
{
  return sub_1D75BA1A8();
}

uint64_t sub_1D75E6D10()
{
  return sub_1D75BA280();
}

uint64_t sub_1D75E6D18()
{
  return sub_1D75BAB80();
}

uint64_t sub_1D75E6D20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E6BA0();
  *a1 = result;
  return result;
}

uint64_t sub_1D75E6D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75E6BF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D75E6D7C()
{
  return sub_1D7660CC0();
}

uint64_t sub_1D75E6DDC()
{
  return sub_1D7660CA0();
}

char ControlChannelConnectionError.init(from:)@<W0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BDE8);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E71D4();
  sub_1D76617A0();
  if (!v2)
  {
    OUTLINED_FUNCTION_5_8();
    Swift::Int v6 = sub_1D7661370();
    ControlChannelConnectionError.Code.init(rawValue:)(v6);
    OUTLINED_FUNCTION_5_8();
    uint64_t v7 = sub_1D7661340();
    unint64_t v10 = v9;
    uint64_t v21 = v7;
    uint64_t v19 = OUTLINED_FUNCTION_4_6(2);
    uint64_t v20 = v11;
    uint64_t v17 = OUTLINED_FUNCTION_4_6(3);
    uint64_t v18 = v12;
    LOBYTE(v22) = 4;
    sub_1D75E7220();
    OUTLINED_FUNCTION_5_8();
    sub_1D7661320();
    if (v26 == 2)
    {
      uint64_t v16 = 0;
    }
    else
    {
      char v25 = 5;
      if (v26)
      {
        sub_1D75E4EB4();
        OUTLINED_FUNCTION_9_5();
        OUTLINED_FUNCTION_5_8();
        sub_1D7661380();
        sub_1D75AEF50(0, &qword_1EA82BE00);
        sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEBE10);
        uint64_t v16 = sub_1D7660E50();
        sub_1D75933F0(v22, v23);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        sub_1D75B2374(&qword_1EA82BE08, &qword_1EA82BDE8);
        sub_1D75A71EC();
        OUTLINED_FUNCTION_9_5();
        OUTLINED_FUNCTION_5_8();
        sub_1D76615C0();
        uint64_t v16 = v22;
      }
    }
    uint64_t v22 = v21;
    unint64_t v23 = v10;
    char v24 = 0;
    char v26 = 0;
    Swift::String v13 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v26);
    sub_1D7592DD0((uint64_t)&v22);
    uint64_t v14 = OUTLINED_FUNCTION_22();
    v15(v14);
    *(unsigned char *)a2 = 0;
    *(Swift::String *)(a2 + 8) = v13;
    *(void *)(a2 + 24) = v19;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v18;
    *(void *)(a2 + 56) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

unint64_t sub_1D75E71D4()
{
  unint64_t result = qword_1EA82BDF0;
  if (!qword_1EA82BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDF0);
  }
  return result;
}

unint64_t sub_1D75E7220()
{
  unint64_t result = qword_1EA82BDF8;
  if (!qword_1EA82BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BDF8);
  }
  return result;
}

void ControlChannelConnectionError.encode(to:)(void *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE10);
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v9;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[5];
  uint64_t v12 = (void *)v1[7];
  uint64_t v17 = v1[6];
  uint64_t v18 = v11;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E71D4();
  sub_1D76617C0();
  LOBYTE(v25) = 0;
  id v13 = v23;
  sub_1D7661480();
  if (v13) {
    goto LABEL_10;
  }
  uint64_t v14 = v19;
  id v23 = v12;
  LOBYTE(v25) = 1;
  OUTLINED_FUNCTION_3_9();
  if (v14)
  {
    LOBYTE(v25) = 2;
    OUTLINED_FUNCTION_3_9();
  }
  if (v17)
  {
    LOBYTE(v25) = 3;
    OUTLINED_FUNCTION_3_9();
  }
  if (!v23)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  else
  {
    id v25 = v23;
    char v24 = 5;
    id v15 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
    sub_1D75B2374(&qword_1EA82BE18, &qword_1EA82BE10);
    sub_1D75A71EC();
    sub_1D76615D0();
    LOBYTE(v25) = 0;
    char v24 = 4;
    sub_1D75E76E0();
    sub_1D7661490();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
}

unint64_t sub_1D75E76E0()
{
  unint64_t result = qword_1EA82BE20;
  if (!qword_1EA82BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE20);
  }
  return result;
}

unint64_t sub_1D75E7730()
{
  unint64_t result = qword_1EA82BE28;
  if (!qword_1EA82BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE28);
  }
  return result;
}

uint64_t sub_1D75E777C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlChannelConnectionError.init(from:)(a1, a2);
}

void sub_1D75E7794(void *a1)
{
}

uint64_t assignWithCopy for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a2 + 56);
  id v6 = v5;
  *(void *)(a1 + 56) = v5;

  return a1;
}

uint64_t assignWithTake for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnectionError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnectionError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for ControlChannelConnectionError.Message(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 32);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 32) = 1;
    }
    else if (v5)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 32) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for ControlChannelConnectionError.Message(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      if (!v5)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 32) = 0;
        return a1;
      }
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      LOBYTE(v5) = *(unsigned char *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnectionError.Message(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnectionError.Message(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D75E7B8C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1D75E7BA8(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

void type metadata accessor for ControlChannelConnectionError.Message()
{
}

unsigned char *storeEnumTagSinglePayload for ControlChannelConnectionError.UnderlyingErrorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E7CACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnectionError.UnderlyingErrorType()
{
  return &type metadata for ControlChannelConnectionError.UnderlyingErrorType;
}

uint64_t getEnumTagSinglePayload for TunnelMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s19RemotePairingDevice29ControlChannelConnectionErrorV4CodeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E7E38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnectionError.CodingKeys()
{
  return &type metadata for ControlChannelConnectionError.CodingKeys;
}

unint64_t sub_1D75E7E74()
{
  unint64_t result = qword_1EA82BE30;
  if (!qword_1EA82BE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE30);
  }
  return result;
}

unint64_t sub_1D75E7EC4()
{
  unint64_t result = qword_1EA82BE38;
  if (!qword_1EA82BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE38);
  }
  return result;
}

unint64_t sub_1D75E7F14()
{
  unint64_t result = qword_1EA82BE40;
  if (!qword_1EA82BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE40);
  }
  return result;
}

unint64_t sub_1D75E7F64()
{
  unint64_t result = qword_1EA82BE48;
  if (!qword_1EA82BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE48);
  }
  return result;
}

unint64_t sub_1D75E7FB0()
{
  unint64_t result = qword_1EA82BE50;
  if (!qword_1EA82BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE50);
  }
  return result;
}

uint64_t sub_1D75E8008()
{
  unint64_t v0 = sub_1D76612C0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1D75E8058(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 7697517;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6441726576726573;
      break;
    case 4:
      unint64_t result = 0x5352726576726573;
      break;
    case 5:
      unint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D75E8130(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 7697517;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6441726576726573;
      break;
    case 4:
      unint64_t result = 0x5352726576726573;
      break;
    case 5:
      unint64_t result = 0x797469726F697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75E8208()
{
  unint64_t v0 = sub_1D76612C0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1D75E8254(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75E82DC(unsigned __int8 *a1, char *a2)
{
  return sub_1D75B99D4(*a1, *a2);
}

uint64_t sub_1D75E82E8()
{
  return sub_1D75BA1B4(*v0);
}

uint64_t sub_1D75E82F0(uint64_t a1)
{
  return sub_1D75BA510(a1, *v1);
}

uint64_t sub_1D75E82F8()
{
  return sub_1D75BA958();
}

uint64_t sub_1D75E8300@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E8008();
  *a1 = result;
  return result;
}

unint64_t sub_1D75E8330@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D75E8058(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D75E835C()
{
  return sub_1D75E8130(*v0);
}

uint64_t sub_1D75E8364@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E8054();
  *a1 = result;
  return result;
}

uint64_t sub_1D75E838C(uint64_t a1)
{
  unint64_t v2 = sub_1D75E8A6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75E83C8(uint64_t a1)
{
  unint64_t v2 = sub_1D75E8A6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75E8404(unsigned __int8 *a1, char *a2)
{
  return sub_1D75B9BB4(*a1, *a2);
}

uint64_t sub_1D75E8410()
{
  return sub_1D75BA1FC(*v0);
}

uint64_t sub_1D75E8418(uint64_t a1)
{
  return sub_1D75BA600(a1, *v1);
}

uint64_t sub_1D75E8420(uint64_t a1)
{
  return sub_1D75BA940(a1, *v1);
}

uint64_t sub_1D75E8428@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75E8208();
  *a1 = result;
  return result;
}

unint64_t sub_1D75E8458@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D75E8254(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D75E8484()
{
  return sub_1D7660CC0();
}

uint64_t sub_1D75E84E4()
{
  return sub_1D7660CA0();
}

uint64_t TunnelMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for TunnelInterfaceParameters();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_1_7();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE58);
  OUTLINED_FUNCTION_0_5();
  uint64_t v42 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1_7();
  uint64_t v13 = v12 - v11;
  type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1_7();
  uint64_t v17 = (void *)(v16 - v15);
  uint64_t v18 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, v18);
  sub_1D75E8A6C();
  sub_1D76617A0();
  if (v45)
  {
    uint64_t v27 = (uint64_t)v44;
  }
  else
  {
    uint64_t v41 = v7;
    uint64_t v45 = v17;
    uint64_t v19 = v43;
    char v47 = 0;
    sub_1D75E8AB8();
    sub_1D7661380();
    switch(v46)
    {
      case 1:
        char v46 = 2;
        sub_1D75E9194(&qword_1EA82BE78, (void (*)(uint64_t))type metadata accessor for TunnelInterfaceParameters);
        sub_1D7661380();
        uint64_t v24 = sub_1D7660430();
        uint64_t v40 = &v38;
        OUTLINED_FUNCTION_0_5();
        uint64_t v39 = v25;
        MEMORY[0x1F4188790](v26);
        OUTLINED_FUNCTION_8();
        char v46 = 3;
        sub_1D75E9194(&qword_1EA82BE80, MEMORY[0x1F418D9A0]);
        sub_1D7661380();
        uint64_t v38 = v3;
        __int16 v32 = OUTLINED_FUNCTION_11_5(4);
        uint64_t v33 = OUTLINED_FUNCTION_3_10();
        v34(v33);
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
        id v23 = v45;
        uint64_t v36 = (char *)v45 + *(int *)(v35 + 48);
        uint64_t v37 = *(int *)(v35 + 64);
        sub_1D75E8B50(v41, (uint64_t)v45, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v36, v38, v24);
        *(_WORD *)((char *)v23 + v37) = v32;
        swift_storeEnumTagMultiPayload();
        goto LABEL_10;
      case 2:
        char v47 = 5;
        sub_1D75E8B04();
        OUTLINED_FUNCTION_7_7();
        uint64_t v29 = OUTLINED_FUNCTION_2_10();
        v30(v29);
        id v23 = v45;
        *uint64_t v45 = v13;
        goto LABEL_9;
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v13, v8);
        id v23 = v45;
        goto LABEL_9;
      default:
        __int16 v20 = OUTLINED_FUNCTION_11_5(1);
        char v47 = 5;
        sub_1D75E8B04();
        OUTLINED_FUNCTION_7_7();
        uint64_t v21 = OUTLINED_FUNCTION_2_10();
        v22(v21);
        id v23 = v45;
        *(_WORD *)uint64_t v45 = v20;
        v23[1] = v13;
LABEL_9:
        swift_storeEnumTagMultiPayload();
LABEL_10:
        uint64_t v31 = (uint64_t)v44;
        sub_1D75E8B50((uint64_t)v23, v19, (void (*)(void))type metadata accessor for TunnelMessage);
        uint64_t v27 = v31;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v27);
}

uint64_t type metadata accessor for TunnelMessage()
{
  uint64_t result = qword_1EA82BEB8;
  if (!qword_1EA82BEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D75E8A6C()
{
  unint64_t result = qword_1EA82BE60;
  if (!qword_1EA82BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE60);
  }
  return result;
}

unint64_t sub_1D75E8AB8()
{
  unint64_t result = qword_1EA82BE68;
  if (!qword_1EA82BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE68);
  }
  return result;
}

unint64_t sub_1D75E8B04()
{
  unint64_t result = qword_1EA82BE70;
  if (!qword_1EA82BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE70);
  }
  return result;
}

uint64_t sub_1D75E8B50(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t TunnelMessage.encode(to:)(void *a1)
{
  uint64_t v5 = v1;
  type metadata accessor for TunnelInterfaceParameters();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_1_7();
  uint64_t v32 = v9 - v8;
  type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_52();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE90);
  OUTLINED_FUNCTION_0_5();
  uint64_t v33 = v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75E8A6C();
  sub_1D76617C0();
  sub_1D75E9098(v5, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
      uint64_t v16 = (char *)v4 + *(int *)(v15 + 48);
      int v35 = *(unsigned __int16 *)((char *)v4 + *(int *)(v15 + 64));
      uint64_t v17 = v32;
      sub_1D75E8B50((uint64_t)v4, v32, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
      uint64_t v18 = sub_1D7660430();
      v31[1] = v31;
      OUTLINED_FUNCTION_0_5();
      uint64_t v20 = v19;
      MEMORY[0x1F4188790](v21);
      OUTLINED_FUNCTION_52();
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(v4, v16, v18);
      LOBYTE(v34) = 1;
      char v36 = 0;
      sub_1D75E90FC();
      OUTLINED_FUNCTION_4_7();
      if (v2)
      {
        uint64_t v22 = OUTLINED_FUNCTION_5_9();
        v23(v22);
        sub_1D75E96FC(v17, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
      }
      else
      {
        LOBYTE(v34) = 2;
        sub_1D75E9194(&qword_1EA82BEA8, (void (*)(uint64_t))type metadata accessor for TunnelInterfaceParameters);
        sub_1D7661490();
        LOBYTE(v34) = 3;
        sub_1D75E9194(&qword_1EA82BEB0, MEMORY[0x1F418D9A0]);
        sub_1D7661490();
        LOBYTE(v34) = 4;
        sub_1D76614C0();
        uint64_t v25 = v32;
        uint64_t v26 = OUTLINED_FUNCTION_5_9();
        v27(v26);
        sub_1D75E96FC(v25, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
      }
      uint64_t v28 = OUTLINED_FUNCTION_8_9();
      return v29(v28);
    case 2u:
      uint64_t v24 = *v4;
      LOBYTE(v34) = 2;
      char v36 = 0;
      sub_1D75E90FC();
      OUTLINED_FUNCTION_4_7();
      if (v2) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v3, v11);
      }
      uint64_t v34 = v24;
      goto LABEL_10;
    case 3u:
      LOBYTE(v34) = 3;
      char v36 = 0;
      sub_1D75E90FC();
      goto LABEL_12;
    default:
      uint64_t v14 = v4[1];
      LOBYTE(v34) = 0;
      char v36 = 0;
      sub_1D75E90FC();
      OUTLINED_FUNCTION_4_7();
      if (v2) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v3, v11);
      }
      sub_1D76614C0();
      uint64_t v34 = v14;
LABEL_10:
      char v36 = 5;
      sub_1D75E9148();
LABEL_12:
      sub_1D7661490();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v3, v11);
  }
}

uint64_t sub_1D75E9098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TunnelMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D75E90FC()
{
  unint64_t result = qword_1EA82BE98;
  if (!qword_1EA82BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BE98);
  }
  return result;
}

unint64_t sub_1D75E9148()
{
  unint64_t result = qword_1EA82BEA0;
  if (!qword_1EA82BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEA0);
  }
  return result;
}

uint64_t sub_1D75E9194(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75E91DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TunnelMessage.init(from:)(a1, a2);
}

uint64_t sub_1D75E91F4(void *a1)
{
  return TunnelMessage.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TunnelMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1D7660430();
      uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = type metadata accessor for TunnelInterfaceParameters();
      v8((uint64_t *)((char *)a1 + *(int *)(v9 + 20)), (uint64_t *)((char *)a2 + *(int *)(v9 + 20)), v7);
      *(_WORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_WORD *)((char *)a2 + *(int *)(v9 + 24));
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
      v8((uint64_t *)((char *)a1 + *(int *)(v10 + 48)), (uint64_t *)((char *)a2 + *(int *)(v10 + 48)), v7);
      *(_WORD *)((char *)a1 + *(int *)(v10 + 64)) = *(_WORD *)((char *)a2 + *(int *)(v10 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for TunnelMessage(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1D7660430();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v3 - 8), a1, v3);
    uint64_t v4 = type metadata accessor for TunnelInterfaceParameters();
    v6(a1 + *(int *)(v4 + 20), v3);
    uint64_t v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88) + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v3);
  }
  return result;
}

char *initializeWithCopy for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1D7660430();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for TunnelInterfaceParameters();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
    v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
    *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithCopy for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D75E96FC((uint64_t)a1, (void (*)(void))type metadata accessor for TunnelMessage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1D7660430();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for TunnelInterfaceParameters();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
      v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
      *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D75E96FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *initializeWithTake for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1D7660430();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for TunnelInterfaceParameters();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
    v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
    *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D75E96FC((uint64_t)a1, (void (*)(void))type metadata accessor for TunnelMessage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1D7660430();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for TunnelInterfaceParameters();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
      v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
      *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D75E99F4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D75E9A04()
{
  uint64_t v4 = &unk_1D76671B8;
  uint64_t result = type metadata accessor for TunnelInterfaceParameters();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D7660430();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v5 = &v3;
      uint64_t v6 = MEMORY[0x1E4FBADA0] + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TunnelMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E9BC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TunnelMessage.MessageType()
{
  return &type metadata for TunnelMessage.MessageType;
}

unsigned char *storeEnumTagSinglePayload for TunnelMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75E9CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TunnelMessage.CodingKeys()
{
  return &type metadata for TunnelMessage.CodingKeys;
}

unint64_t sub_1D75E9D04()
{
  unint64_t result = qword_1EA82BEC8;
  if (!qword_1EA82BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEC8);
  }
  return result;
}

unint64_t sub_1D75E9D54()
{
  unint64_t result = qword_1EA82BED0;
  if (!qword_1EA82BED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BED0);
  }
  return result;
}

unint64_t sub_1D75E9DA4()
{
  unint64_t result = qword_1EA82BED8;
  if (!qword_1EA82BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BED8);
  }
  return result;
}

unint64_t sub_1D75E9DF4()
{
  unint64_t result = qword_1EA82BEE0;
  if (!qword_1EA82BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEE0);
  }
  return result;
}

unint64_t sub_1D75E9E40()
{
  unint64_t result = qword_1EA82BEE8;
  if (!qword_1EA82BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_9()
{
  return v0;
}

uint64_t static NetworkPairingKeys.name.getter()
{
  return 1701667182;
}

uint64_t static NetworkPairingKeys.model.getter()
{
  return 0x6C65646F6DLL;
}

uint64_t BonjourAdvertFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static BonjourAdvertFlags.onDemand.getter(void *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_1D75E9EE0()
{
  unint64_t result = qword_1EA82BEF0;
  if (!qword_1EA82BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEF0);
  }
  return result;
}

unint64_t sub_1D75E9F30()
{
  unint64_t result = qword_1EA82BEF8;
  if (!qword_1EA82BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BEF8);
  }
  return result;
}

uint64_t sub_1D75E9F7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return BonjourAdvertFlags.init(rawValue:)(*a1, a2);
}

unint64_t sub_1D75E9F88()
{
  unint64_t result = qword_1EBDEAC98;
  if (!qword_1EBDEAC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEAC98);
  }
  return result;
}

unint64_t sub_1D75E9FD8()
{
  unint64_t result = qword_1EBDEACA0;
  if (!qword_1EBDEACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEACA0);
  }
  return result;
}

uint64_t sub_1D75EA024(void *a1)
{
  return sub_1D765ACE8(*a1, *v1);
}

void sub_1D75EA030(void *a1@<X8>)
{
}

uint64_t sub_1D75EA03C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D7657EEC(*a1, *v2, a2);
}

void sub_1D75EA048(void *a1@<X8>)
{
}

BOOL sub_1D75EA054(void *a1, uint64_t *a2)
{
  return sub_1D7622454(a1, *a2);
}

void sub_1D75EA05C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D75EA064(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D75EA06C(uint64_t *a1)
{
}

uint64_t sub_1D75EA074(uint64_t *a1)
{
  return sub_1D7657F08(*a1);
}

void sub_1D75EA07C(uint64_t *a1)
{
}

void sub_1D75EA084(void *a1@<X8>)
{
}

BOOL sub_1D75EA090(uint64_t *a1)
{
  return sub_1D7657F28(*a1, *v1);
}

BOOL sub_1D75EA09C(uint64_t *a1)
{
  return sub_1D7622558(*a1, *v1);
}

BOOL sub_1D75EA0A8(uint64_t *a1)
{
  return sub_1D7657F44(*a1, *v1);
}

BOOL sub_1D75EA0B4()
{
  return sub_1D7622580(*v0);
}

void sub_1D75EA0BC(uint64_t *a1)
{
}

uint64_t sub_1D75EA0C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = BonjourAdvertFlags.init(rawValue:)(*a1, (void *)a2);
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1D75EA0F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BonjourAdvertFlags.rawValue.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for NetworkPairingKeys()
{
  return &type metadata for NetworkPairingKeys;
}

void sub_1D75EA12C(void (*a1)(unsigned char *))
{
  uint64_t v4 = _s5StateVMa();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  uint64_t v10 = (os_unfair_lock_s *)v1[2];
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_1D75EDE60(v11, (uint64_t)v9, (void (*)(void))_s5StateVMa);
  a1(v9);
  if (v2)
  {
    sub_1D75EDF14((uint64_t)v9, (void (*)(void))_s5StateVMa);
  }
  else
  {
    sub_1D75EDEB4((uint64_t)v9, (uint64_t)v7, (void (*)(void))_s5StateVMa);
    swift_beginAccess();
    sub_1D75DE7B4((uint64_t)v7, v11);
    swift_endAccess();
  }
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1D75EA2C0()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82BF00 = result;
  return result;
}

uint64_t RPPairableHost.name.getter()
{
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_6_6();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_6();
  uint64_t v5 = OUTLINED_FUNCTION_8_10();
  sub_1D75EDE60(v5, v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  sub_1D75EDF14(v2, (void (*)(void))_s5StateVMa);
  uint64_t v6 = *(void *)(v1 + *(int *)(v0 + 28));
  swift_bridgeObjectRetain();
  sub_1D75EDF14(v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  return v6;
}

uint64_t _s5StateVMa()
{
  uint64_t result = qword_1EA82BF20;
  if (!qword_1EA82BF20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RPPairableHost.model.getter()
{
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_6_6();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_6();
  uint64_t v5 = OUTLINED_FUNCTION_8_10();
  sub_1D75EDE60(v5, v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  sub_1D75EDF14(v2, (void (*)(void))_s5StateVMa);
  uint64_t v6 = *(void *)(v1 + *(int *)(v0 + 32));
  swift_bridgeObjectRetain();
  sub_1D75EDF14(v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  return v6;
}

uint64_t RPPairableHost.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_6();
  uint64_t v6 = OUTLINED_FUNCTION_8_10();
  sub_1D75EDE60(v6, v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  sub_1D75EDF14(v2, (void (*)(void))_s5StateVMa);
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(a1, v1);
  return sub_1D75EDF14(v1, (void (*)(void))type metadata accessor for PairableHostInfo);
}

uint64_t RPPairableHost.available.getter()
{
  uint64_t v1 = type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D75B3DF0((uint64_t)v6);
  if (v6[*(int *)(v3 + 24)] == 1)
  {
    sub_1D75EDF14((uint64_t)v6, (void (*)(void))_s5StateVMa);
    return 0;
  }
  else
  {
    sub_1D75EDE60((uint64_t)&v6[*(int *)(v3 + 20)], v0, (void (*)(void))type metadata accessor for PairableHostInfo);
    sub_1D75EDF14((uint64_t)v6, (void (*)(void))_s5StateVMa);
    uint64_t v7 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 28));
    sub_1D75EDF14(v0, (void (*)(void))type metadata accessor for PairableHostInfo);
  }
  return v7;
}

uint64_t RPPairableHost.paired.getter()
{
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_6_6();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_0_13();
  OUTLINED_FUNCTION_4_8();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_9_6();
  uint64_t v5 = OUTLINED_FUNCTION_8_10();
  sub_1D75EDE60(v5, v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  sub_1D75EDF14(v2, (void (*)(void))_s5StateVMa);
  uint64_t v6 = *(unsigned __int8 *)(v1 + *(int *)(v0 + 40));
  sub_1D75EDF14(v1, (void (*)(void))type metadata accessor for PairableHostInfo);
  return v6;
}

id sub_1D75EAB40(uint64_t a1)
{
  uint64_t v4 = _s5StateVMa();
  uint64_t v5 = (int *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_30();
  sub_1D75EDE60(a1, (uint64_t)v2 + v5[7], (void (*)(void))type metadata accessor for PairableHostInfo);
  void *v2 = 0;
  v2[1] = 0;
  *((unsigned char *)v2 + v5[8]) = 0;
  *(void *)((char *)v2 + v5[9]) = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF30);
  swift_allocObject();
  uint64_t v6 = v1;
  *(void *)&v6[OBJC_IVAR___RPPairableHost__state] = sub_1D75B4254((uint64_t)v2);
  type metadata accessor for PairableHostInfo(0);
  WirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0 = (_xpc_endpoint_s *)_s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0();
  xpc_connection_create_from_endpoint(WirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0);
  swift_unknownObjectRelease();
  sub_1D7660280();
  sub_1D7660230();
  *(void *)&v6[OBJC_IVAR___RPPairableHost__serviceConnection] = swift_dynamicCastClassUnconditional();

  v11.receiver = v6;
  v11.super_class = (Class)RPPairableHost;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DeviceServiceEvent(0);
  sub_1D75EDE1C(&qword_1EA82BF38);
  sub_1D75EDE1C(&qword_1EA82BF40);
  id v9 = v8;
  swift_retain();
  sub_1D76601C0();
  swift_release();
  swift_release();
  swift_retain();
  sub_1D76600D0();
  swift_release();
  sub_1D75A46C4();
  swift_unknownObjectRelease();

  sub_1D75EDF14(a1, (void (*)(void))type metadata accessor for PairableHostInfo);
  return v9;
}

void sub_1D75EAE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceServiceEvent(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF48);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void **)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1D9474D50](a2 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    sub_1D75EE174(a1, (uint64_t)v15, &qword_1EA82BF48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = *v15;
      os_log_type_t v19 = sub_1D7660DB0();
      if (qword_1EA82AA00 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EA82BF00;
      if (os_log_type_enabled((os_log_t)qword_1EA82BF00, v19))
      {
        id v21 = v17;
        int v45 = v19;
        id v22 = v21;
        id v23 = v18;
        id v24 = v22;
        id v25 = v18;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        v46[0] = v44;
        *(_DWORD *)uint64_t v26 = 136446466;
        id v27 = objc_msgSend(v24, sel_identifier, v26 + 4);
        uint64_t v28 = sub_1D765FFD0();
        os_log_t v43 = v20;
        uint64_t v29 = *(void *)(v28 - 8);
        MEMORY[0x1F4188790](v28);
        uint64_t v31 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1D765FFC0();

        sub_1D75EE1FC((unint64_t *)&qword_1EBDEC0A8, MEMORY[0x1F418BCD8]);
        uint64_t v32 = sub_1D7661500();
        unint64_t v34 = v33;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
        uint64_t v48 = sub_1D758DBE8(v32, v34, v46);
        sub_1D7661020();

        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2082;
        uint64_t v48 = (uint64_t)v18;
        id v35 = v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v36 = sub_1D7660B60();
        uint64_t v48 = sub_1D758DBE8(v36, v37, v46);
        sub_1D7661020();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D757C000, v43, (os_log_type_t)v45, "Received XPC error for host %{public}s: %{public}s", (uint8_t *)v26, 0x16u);
        uint64_t v38 = v44;
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v38, -1, -1);
        MEMORY[0x1D9474C60](v26, -1, -1);
      }
      uint64_t v39 = swift_retain();
      sub_1D75DDBE0(v39);

      swift_release();
    }
    else
    {
      sub_1D75EDEB4((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for DeviceServiceEvent);
      sub_1D75EDE60((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for DeviceServiceEvent);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v40 = *((void *)v10 + 1);
        char v41 = v10[16];
        LOBYTE(v46[0]) = *v10;
        v46[1] = v40;
        char v47 = v41;
        sub_1D75EB370((unsigned __int8 *)v46);
      }
      else
      {
        sub_1D75EDEB4((uint64_t)v10, (uint64_t)v6, (void (*)(void))type metadata accessor for PairableHostInfo);
        sub_1D75EB69C();

        sub_1D75EDF14((uint64_t)v6, (void (*)(void))type metadata accessor for PairableHostInfo);
      }
      sub_1D75EDF14((uint64_t)v12, (void (*)(void))type metadata accessor for DeviceServiceEvent);
    }
  }
}

uint64_t sub_1D75EB370(unsigned __int8 *a1)
{
  uint64_t v3 = _s5StateVMa();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v6 = *a1;
  uint64_t v7 = *((void *)a1 + 1);
  int v8 = a1[16];
  sub_1D75B3DF0((uint64_t)v5);
  uint64_t v9 = (void (*)(uint64_t))*v5;
  sub_1D75A74B4(*v5);
  uint64_t result = sub_1D75EDF14((uint64_t)v5, (void (*)(void))_s5StateVMa);
  if (v9)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v1;
    uint64_t v11 = swift_allocObject();
    int v27 = v8;
    uint64_t v12 = v11;
    swift_unknownObjectWeakInit();
    uint64_t v13 = sub_1D765FFD0();
    uint64_t v28 = &v24;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v26 = v7;
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)(v14 + 64);
    MEMORY[0x1F4188790](v13);
    int v25 = v6;
    uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v18 = objc_msgSend(v1, sel_identifier);
    sub_1D765FFC0();

    uint64_t v24 = (uint64_t)&v24;
    MEMORY[0x1F4188790](v19);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v17, v13);
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v22 + v20, v17, v13);
    *(void *)(v22 + v21) = v12;
    type metadata accessor for PairingChallenge();
    swift_allocObject();
    swift_retain();
    uint64_t v23 = PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(v25, v26, v27, (uint64_t)sub_1D75EDF9C, v29, (uint64_t)sub_1D75EE05C, v22);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    swift_release();
    v9(v23);
    swift_release();
    return sub_1D75940A4((uint64_t)v9);
  }
  return result;
}

void sub_1D75EB69C()
{
}

uint64_t RPPairableHost.registerChangeHandler(on:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v7 = a1;
  }
  else
  {
    if (qword_1EA82AAC0 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EA82CAA0;
  }
  int v8 = (void *)OUTLINED_FUNCTION_192();
  void v8[2] = v7;
  v8[3] = a2;
  void v8[4] = a3;
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR___RPPairableHost__state);
  swift_retain();
  id v10 = a1;
  swift_retain();
  id v11 = v7;
  sub_1D75DDD54(v9, (uint64_t)sub_1D75ED1B4, (uint64_t)v8);
  sub_1D75EB80C((uint64_t)v11, a2, a3);

  return swift_release();
}

uint64_t sub_1D75EB80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  void aBlock[4] = sub_1D75E0530;
  void aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_51;
  int v6 = _Block_copy(aBlock);
  uint64_t v7 = sub_1D7660950();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1D7660930();
  uint64_t v11 = sub_1D7660910();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1D75EE1FC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAEE8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v10, v14, v6);
  _Block_release(v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = _s5StateVMa();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t (**)(uint64_t))((char *)&v32 - v14);
  if (a1)
  {
    id v16 = a1;
  }
  else
  {
    if (qword_1EA82AAC0 != -1) {
      swift_once();
    }
    id v16 = (id)qword_1EA82CAA0;
  }
  uint64_t v17 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_192();
  *((void *)v17 + 2) = v16;
  *((void *)v17 + 3) = a2;
  *((void *)v17 + 4) = a3;
  id v18 = (void *)OUTLINED_FUNCTION_192();
  long long v18[2] = v16;
  v18[3] = a4;
  v18[4] = a5;
  id v35 = v5;
  uint64_t v33 = a4;
  uint64_t v19 = *(void **)&v5[OBJC_IVAR___RPPairableHost__state];
  unint64_t v20 = (os_unfair_lock_s *)v19[2];
  id v21 = v16;
  swift_retain_n();
  id v22 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  id v23 = a1;
  id v24 = v22;
  os_unfair_lock_lock(v20);
  uint64_t v25 = (uint64_t)v19 + *(void *)(*v19 + 96);
  swift_beginAccess();
  sub_1D75EDE60(v25, (uint64_t)v15, (void (*)(void))_s5StateVMa);
  if (*v15)
  {
    sub_1D75B0D60();
    uint64_t v26 = (void *)swift_allocError();
    sub_1D75AF4C0();
    sub_1D7661690();
    sub_1D75EC14C(v26, (uint64_t)v24, v33, a5);
  }
  else
  {
    *uint64_t v15 = sub_1D75ED1C4;
    v15[1] = v17;
    swift_retain();
  }
  uint64_t v27 = v34;
  sub_1D75EDEB4((uint64_t)v15, v34, (void (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_1D75DE7B4(v27, v25);
  swift_endAccess();
  os_unfair_lock_unlock(v20);
  swift_release();
  swift_release();
  uint64_t v28 = v35;
  uint64_t v29 = (void *)OUTLINED_FUNCTION_192();
  v29[2] = v28;
  v29[3] = sub_1D75ED1D4;
  v29[4] = v18;
  id v30 = v24;
  swift_retain();
  id v31 = v28;
  sub_1D75A47BC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1D75EBEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  id v7[2] = a3;
  v7[3] = a4;
  _OWORD v7[4] = a1;
  void aBlock[4] = sub_1D75EE2AC;
  void aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_45;
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = sub_1D7660950();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1D7660930();
  uint64_t v13 = sub_1D7660910();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1D75EE1FC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAEE8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v12, v16, v8);
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1D75EC14C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  id v7[2] = a3;
  v7[3] = a4;
  _OWORD v7[4] = a1;
  void aBlock[4] = sub_1D75EE1DC;
  void aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D75D6460;
  aBlock[3] = &block_descriptor_6;
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = sub_1D7660950();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v13 = a1;
  sub_1D7660930();
  uint64_t v14 = sub_1D7660910();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1D75EE1FC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAEE8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  MEMORY[0x1D9473560](0, v12, v17, v8);
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1D75EC3E0(uint64_t a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v23 = a4;
  id v24 = a3;
  uint64_t v6 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF50);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = _s5StateVMa();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v23 - v16);
  id v18 = *(void **)(a2 + OBJC_IVAR___RPPairableHost__state);
  uint64_t v19 = (os_unfair_lock_s *)v18[2];
  os_unfair_lock_lock(v19);
  uint64_t v20 = (uint64_t)v18 + *(void *)(*v18 + 96);
  swift_beginAccess();
  sub_1D75EDE60(v20, (uint64_t)v17, (void (*)(void))_s5StateVMa);
  sub_1D75940A4(*v17);
  *uint64_t v17 = 0;
  v17[1] = 0;
  sub_1D75EDEB4((uint64_t)v17, (uint64_t)v15, (void (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_1D75DE7B4((uint64_t)v15, v20);
  swift_endAccess();
  os_unfair_lock_unlock(v19);
  sub_1D75EE174(a1, (uint64_t)v11, &qword_1EA82BF50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v21 = *v11;
    id v22 = *v11;
    v24(v21);
  }
  else
  {
    sub_1D75EDEB4((uint64_t)v11, (uint64_t)v8, (void (*)(void))type metadata accessor for PairableHostInfo);
    sub_1D75EB69C();
    v24(0);
    sub_1D75EDF14((uint64_t)v8, (void (*)(void))type metadata accessor for PairableHostInfo);
  }
}

uint64_t RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  *(void *)(v11 + 24) = a5;
  swift_retain();
  swift_retain();
  RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(a1, (uint64_t)sub_1D75ED268, v10, (uint64_t)sub_1D75ED270, v11);
  swift_release();
  return swift_release();
}

void sub_1D75EC778(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for RPPairingChallenge(0);
  id v4 = sub_1D75B412C(a1);
  a2();
}

uint64_t sub_1D75EC8E4()
{
  swift_bridgeObjectRetain();
  sub_1D75A4930();
  return swift_bridgeObjectRelease();
}

void sub_1D75EC960(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  os_log_type_t v4 = sub_1D7660DA0();
  if (qword_1EA82AA00 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EA82BF00;
  uint64_t v6 = sub_1D765FFD0();
  uint64_t v36 = &v30;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v33 = v8;
  v32(v9, a1, v6);
  os_log_type_t v10 = v4;
  os_log_t v34 = v5;
  if (os_log_type_enabled(v5, v4))
  {
    uint64_t v35 = v7;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v13 = v12;
    v39[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_1D75EE1FC((unint64_t *)&qword_1EBDEC0A8, MEMORY[0x1F418BCD8]);
    uint64_t v14 = sub_1D7661500();
    uint64_t v38 = sub_1D758DBE8(v14, v15, v39);
    uint64_t v7 = v35;
    sub_1D7661020();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v9, v6);
    _os_log_impl(&dword_1D757C000, v34, v10, "Handling pairing challenge request for pairable host %s", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v13;
    a1 = v31;
    MEMORY[0x1D9474C60](v17, -1, -1);
    MEMORY[0x1D9474C60](v11, -1, -1);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v9, v6);
  }
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1D9474D50](v3);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    sub_1D75A4A84();
  }
  else
  {
    uint64_t v35 = v7;
    uint64_t v20 = sub_1D7660DA0();
    os_log_type_t v21 = v20;
    id v22 = qword_1EA82BF00;
    MEMORY[0x1F4188790](v20);
    id v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v32(v24, a1, v6);
    if (os_log_type_enabled(v22, v21))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v36 = &v30;
      uint64_t v26 = (uint8_t *)v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v38 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      sub_1D75EE1FC((unint64_t *)&qword_1EBDEC0A8, MEMORY[0x1F418BCD8]);
      uint64_t v28 = sub_1D7661500();
      uint64_t v37 = sub_1D758DBE8(v28, v29, &v38);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      v16(v24, v6);
      _os_log_impl(&dword_1D757C000, v22, v21, "Ignoring pairing challenge cancellation request for pairable host %s because associated host object has been deallocated", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v27, -1, -1);
      MEMORY[0x1D9474C60](v26, -1, -1);
    }
    else
    {
      v16(v24, v6);
    }
  }
}

void sub_1D75ECE04(uint64_t a1)
{
}

void sub_1D75ECE10(uint64_t a1)
{
}

void sub_1D75ECE1C(uint64_t a1, const char *a2)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    id v3 = *(id *)a1;
    id v4 = *(id *)a1;
    os_log_type_t v5 = sub_1D7660DB0();
    if (qword_1EA82AA00 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_1EA82BF00;
    if (os_log_type_enabled((os_log_t)qword_1EA82BF00, v5))
    {
      sub_1D75EE0E8(v3, 1);
      sub_1D75EE0E8(v3, 1);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      id v9 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      uint64_t v10 = sub_1D7660B60();
      sub_1D758DBE8(v10, v11, &v12);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      sub_1D75ABBB4(v3, 1);
      sub_1D75ABBB4(v3, 1);
      _os_log_impl(&dword_1D757C000, v6, v5, a2, v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v8, -1, -1);
      MEMORY[0x1D9474C60](v7, -1, -1);
      sub_1D75ABBB4(v3, 1);
    }
    else
    {
      sub_1D75ABBB4(v3, 1);
    }
  }
}

uint64_t sub_1D75ED028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateVMa();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t result = type metadata accessor for PairableHostInfo(0);
  if (*(void *)(v5 + *(int *)(result + 36)) < *(void *)(a2 + *(int *)(result + 36)))
  {
    uint64_t result = sub_1D75EE110(a2, v5);
    uint64_t v7 = *(void *)(a1 + *(int *)(v4 + 28));
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v7 + 40;
      do
      {
        uint64_t v10 = *(void (**)(uint64_t))(v9 - 8);
        uint64_t v11 = swift_retain();
        v10(v11);
        swift_release();
        v9 += 16;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void __swiftcall RPPairableHost.init()(RPPairableHost *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void RPPairableHost.init()()
{
}

uint64_t sub_1D75ED1B4()
{
  return sub_1D75EB80C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D75ED1C4(uint64_t a1)
{
  return sub_1D75EBEB8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D75ED1D4(void *a1)
{
  return sub_1D75EC14C(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroyTm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D75ED224(uint64_t a1)
{
  sub_1D75EC3E0(a1, *(void *)(v1 + 16), *(void (**)(id))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D75ED230()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D75ED268(uint64_t a1)
{
  sub_1D75EC778(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1D75ED270()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for RPPairableHost(uint64_t a1)
{
  return sub_1D75AEF50(a1, &qword_1EA82BF18);
}

void *sub_1D75ED2AC(_OWORD *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *uint64_t v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1D765FFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for PairableHostInfo(0);
    uint64_t v14 = v13[5];
    unint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)unint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = v13[6];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
    uint64_t v22 = v13[10];
    uint64_t v23 = &v10[v22];
    id v24 = &v11[v22];
    uint64_t v25 = sub_1D7660210();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v27 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v4 + v27) = *(void *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1D75ED478(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D765FFD0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for PairableHostInfo(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = &v4[*(int *)(v6 + 40)];
  uint64_t v8 = sub_1D7660210();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

void *sub_1D75ED578(void *a1, void *a2, int *a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D765FFD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PairableHostInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = v11[6];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  uint64_t v20 = v11[10];
  uint64_t v21 = &v8[v20];
  uint64_t v22 = &v9[v20];
  uint64_t v23 = sub_1D7660210();
  id v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  uint64_t v25 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1D75ED6F4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      uint64_t v8 = a2[1];
      *a1 = v6;
      a1[1] = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[1];
  *a1 = v6;
  a1[1] = v7;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1D765FFD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for PairableHostInfo(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[6];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v13[7]] = v11[v13[7]];
  v10[v13[8]] = v11[v13[8]];
  *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
  uint64_t v20 = v13[10];
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  uint64_t v23 = sub_1D7660210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1D75ED8C8(void *a1, void *a2, int *a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D765FFD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PairableHostInfo(0);
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  uint64_t v12 = v11[10];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1D7660210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  return a1;
}

void *sub_1D75EDA08(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      uint64_t v8 = a2[1];
      *a1 = v6;
      a1[1] = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[1];
  *a1 = v6;
  a1[1] = v7;
  swift_release();
LABEL_8:
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1D765FFD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for PairableHostInfo(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = v13[6];
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v10[v13[7]] = v11[v13[7]];
  v10[v13[8]] = v11[v13[8]];
  *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
  uint64_t v24 = v13[10];
  uint64_t v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  uint64_t v27 = sub_1D7660210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D75EDB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75EDBB0);
}

uint64_t sub_1D75EDBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1D75EDC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75EDC54);
}

void sub_1D75EDC54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t sub_1D75EDCE0()
{
  uint64_t result = type metadata accessor for PairableHostInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D75EDD90()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = OUTLINED_FUNCTION_5_1();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75EDDC0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1D75EDDD4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1D75EDDE4()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = OUTLINED_FUNCTION_5_1();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1D75EDE14(uint64_t a1)
{
  sub_1D75EAE00(a1, v1);
}

uint64_t sub_1D75EDE1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DeviceServiceEvent(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75EDE60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_2();
  uint64_t v4 = OUTLINED_FUNCTION_7_8();
  v5(v4);
  return a2;
}

uint64_t sub_1D75EDEB4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1D75EDF14(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1D75EDF6C()
{
  uint64_t v1 = OUTLINED_FUNCTION_5_1();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75EDF9C()
{
  return sub_1D75EC8E4();
}

uint64_t sub_1D75EDFC0()
{
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();
  return MEMORY[0x1F4186498](v0, v5, v4);
}

void sub_1D75EE05C()
{
  uint64_t v1 = *(void *)(sub_1D765FFD0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1D75EC960(v0 + v2, v3);
}

id sub_1D75EE0E8(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_1D75EE0F4(uint64_t a1)
{
  return sub_1D75ED028(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D75EE110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PairableHostInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D75EE174(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_2();
  uint64_t v4 = OUTLINED_FUNCTION_7_8();
  v5(v4);
  return a2;
}

uint64_t sub_1D75EE1C4()
{
  return objectdestroy_38Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1D75EE1DC()
{
  return sub_1D75EE2B4();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1D75EE1FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75EE244()
{
  return objectdestroy_38Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_38Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1D75EE2AC()
{
  return sub_1D75EE2B4();
}

uint64_t sub_1D75EE2B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t Identifier.description.getter(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
  sub_1D7660BC0();
  swift_bridgeObjectRetain();
  sub_1D7660BC0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Identifier.init()@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a1 + 8))();
  BOOL v6 = v4 < 1;
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v4;
    uint64_t v2 = sub_1D75EEEF0(v4);
    v11[1] = v7;
    uint64_t v12 = 0;
    v11[0] = v8;
    sub_1D75EE480((uint64_t)v11, &v12, v7);
    uint64_t v5 = v12;
    BOOL v6 = v7 < v12;
    if (v7 >= v12)
    {
      *(void *)(v2 + 16) = v12;
      v11[0] = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBE0);
      sub_1D75EECE8();
      uint64_t result = sub_1D7660C40();
      *a2 = result;
      a2[1] = v10;
      return result;
    }
  }
  __break(1u);
  if (v6) {
    __break(1u);
  }
  *(void *)(v2 + 16) = v5;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1D75EE480(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  if (*a2 < a3)
  {
    if ((((unint64_t)", device supports >=" >> 61) & ((((unint64_t)", device supports >=" >> 56) & 0xF) == 0)) == 0)
    {
      BOOL v6 = (void *)result;
      while (1)
      {
        uint64_t v7 = sub_1D7660BA0();
        if (v7 < 0) {
          break;
        }
        unint64_t v8 = v7;
        if (!v7) {
          goto LABEL_13;
        }
        uint64_t v14 = 0;
        MEMORY[0x1D9474C80](&v14, 8);
        if (v8 > v14 * v8)
        {
          unint64_t v9 = -(uint64_t)v8 % v8;
          while (v9 > v14 * v8)
          {
            uint64_t v14 = 0;
            MEMORY[0x1D9474C80](&v14, 8);
          }
        }
        sub_1D7660BB0();
        uint64_t v10 = sub_1D7660C30();
        uint64_t v12 = v11;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v13 = (uint64_t *)(*v6 + 16 * v3);
        *uint64_t v13 = v10;
        v13[1] = v12;
        if (++v3 >= a3)
        {
          *a2 = a3;
          return result;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1D7661100();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0x206E6920677542;
    unint64_t v15 = 0xE700000000000000;
    type metadata accessor for Identifier();
    sub_1D76617F0();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    sub_1D7660BC0();
    uint64_t result = sub_1D7661260();
    __break(1u);
  }
  return result;
}

uint64_t Identifier.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D7660B90();
  return swift_bridgeObjectRelease();
}

uint64_t static Identifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1D7661560();
  }
}

uint64_t sub_1D75EE73C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1D7661560();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D75EE7BC()
{
  return 0x65756C6176;
}

uint64_t sub_1D75EE7D0()
{
  return sub_1D75A0E10();
}

uint64_t sub_1D75EE7D8()
{
  return sub_1D75A1080();
}

uint64_t sub_1D75EE7E4()
{
  return sub_1D75A0FD0();
}

uint64_t sub_1D75EE7F0()
{
  return sub_1D7661760();
}

uint64_t sub_1D75EE834()
{
  return sub_1D75EE7BC();
}

uint64_t sub_1D75EE840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75EE73C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D75EE874()
{
  return sub_1D75A0E18();
}

uint64_t sub_1D75EE898@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75A0E10();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D75EE8CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1D75EE920(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t Identifier.encode(to:)(void *a1)
{
  type metadata accessor for Identifier.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1D76614E0();
  OUTLINED_FUNCTION_0_5();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *v1;
  v11[0] = v1[1];
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D76617C0();
  sub_1D7661450();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t Identifier.hashValue.getter()
{
  return sub_1D7661760();
}

uint64_t Identifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Identifier.CodingKeys();
  swift_getWitnessTable();
  sub_1D76613E0();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v4);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D76617A0();
  if (!v2)
  {
    uint64_t v5 = sub_1D7661340();
    uint64_t v7 = v6;
    uint64_t v8 = OUTLINED_FUNCTION_3_11();
    v9(v8);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1D75EEC60()
{
  return sub_1D7661760();
}

uint64_t sub_1D75EECA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Identifier.init(from:)(a1, a2);
}

uint64_t sub_1D75EECC4(void *a1)
{
  return Identifier.encode(to:)(a1);
}

uint64_t sub_1D75EECDC(uint64_t a1)
{
  return sub_1D75EEEF0(a1);
}

unint64_t sub_1D75EECE8()
{
  unint64_t result = qword_1EA82BBE8;
  if (!qword_1EA82BBE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA82BBE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BBE8);
  }
  return result;
}

uint64_t type metadata accessor for Identifier.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D75EED54()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of static IdentifierCategory.numberOfCharacters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static IdentifierCategory.prefix.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D75EED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for Identifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D75EEDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

unsigned char *sub_1D75EEDC0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D75EEE5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D75EEE84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D75EEEA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D75EEEBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D75EEED8(uint64_t a1)
{
  return sub_1D75EEEF0(a1);
}

uint64_t sub_1D75EEEE4(uint64_t a1)
{
  return sub_1D75EEEF0(a1);
}

uint64_t sub_1D75EEEF0(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_13();
    uint64_t result = OUTLINED_FUNCTION_2_11();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1D7660D20();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1D75EEF60(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_13();
    uint64_t result = OUTLINED_FUNCTION_2_11();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1D7660D20();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1D75EEFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D75EF144(a1, MEMORY[0x1F418B828], a2);
}

uint64_t sub_1D75EEFE4(uint64_t a1, unint64_t a2)
{
  int v2 = 1;
  unsigned __int8 v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)a1;
      if ((int)a1 != a1 >> 32) {
        goto LABEL_15;
      }
      unsigned __int8 v3 = 0;
      return v3 | (v2 << 8);
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      if (v4 != v5)
      {
        if (a2 >> 62 == 2)
        {
          if (v4 >= v5) {
            goto LABEL_25;
          }
          uint64_t v6 = sub_1D765FCE0();
          if (!v6) {
            goto LABEL_27;
          }
          uint64_t v7 = v6;
          a1 = sub_1D765FD10();
          uint64_t v8 = v4 - a1;
          if (!__OFSUB__(v4, a1)) {
            goto LABEL_22;
          }
          __break(1u);
        }
LABEL_15:
        if (v4 < (int)a1 || v4 >= a1 >> 32)
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
        }
        uint64_t v10 = sub_1D765FCE0();
        if (v10)
        {
          uint64_t v7 = v10;
          uint64_t v11 = sub_1D765FD10();
          uint64_t v8 = v4 - v11;
          if (!__OFSUB__(v4, v11))
          {
LABEL_22:
            int v2 = 0;
            unsigned __int8 v3 = *(unsigned char *)(v7 + v8);
            return v3 | (v2 << 8);
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x1D75EF128);
      }
      unsigned __int8 v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      int v2 = (a2 & 0xFF000000000000) == 0;
      if ((a2 & 0xFF000000000000) != 0) {
        unsigned __int8 v3 = a1;
      }
      else {
        unsigned __int8 v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_1D75EF138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D75EF144(a1, MEMORY[0x1F418D9E0], a2);
}

uint64_t sub_1D75EF144@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  if (v5)
  {
    OUTLINED_FUNCTION_16();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(a3, a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v8, 1, v6);
}

double sub_1D75EF1EC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_1D75B93BC(a1 + 32, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t IPv6Address.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  OUTLINED_FUNCTION_4_9();
  sub_1D7661790();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_0Tm(v12, v12[3]);
    OUTLINED_FUNCTION_4_9();
    sub_1D7661570();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
    MEMORY[0x1F4188790](v5 - 8);
    OUTLINED_FUNCTION_1_7();
    uint64_t v8 = v7 - v6;
    swift_bridgeObjectRetain();
    sub_1D7660450();
    uint64_t v9 = sub_1D7660430();
    if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
    {
      sub_1D758C5F8(v8, (uint64_t *)&unk_1EA82C2A0);
      sub_1D7661100();
      swift_bridgeObjectRelease();
      sub_1D7660BC0();
      swift_bridgeObjectRelease();
      sub_1D7661150();
      swift_allocError();
      sub_1D7661130();
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_16();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a2, v8, v9);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t IPv6Address.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D76617B0();
  uint64_t v3 = sub_1D7660430();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5 - v4, v2, v3);
  sub_1D7660B60();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1D7661590();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void __swiftcall IPv6Address.copy_sockaddr_in6()(sockaddr_in6 *__return_ptr retstr)
{
  uint64_t v1 = sub_1D7660410();
  int v3 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v1 >> 32 < (int)v1)
      {
        __break(1u);
        goto LABEL_12;
      }
      swift_retain();
      sub_1D75EF8C0(v3);
      OUTLINED_FUNCTION_0_14();
      OUTLINED_FUNCTION_0_14();
LABEL_6:
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BC80);
      MEMORY[0x1F4188790](v5 - 8);
      OUTLINED_FUNCTION_1_7();
      uint64_t v8 = v7 - v6;
      sub_1D7660420();
      uint64_t v9 = sub_1D76604A0();
      if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
      {
        sub_1D758C5F8(v8, (uint64_t *)&unk_1EA82BC80);
        return;
      }
      unint64_t v10 = sub_1D7660490();
      OUTLINED_FUNCTION_16();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v9);
      if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
      {
LABEL_12:
        OUTLINED_FUNCTION_0_1();
        sub_1D7661250();
        __break(1u);
        OUTLINED_FUNCTION_0_14();
        __break(1u);
        JUMPOUT(0x1D75EF830);
      }
      return;
    case 2uLL:
      uint64_t v4 = *(void *)(v1 + 16);
      swift_retain();
      swift_retain();
      sub_1D75EF8C0(v4);
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_0_14();
      goto LABEL_6;
    default:
      OUTLINED_FUNCTION_0_14();
      goto LABEL_6;
  }
}

BOOL IPv6Address.isUniqueLocalAddress.getter()
{
  uint64_t v0 = sub_1D7660410();
  unint64_t v2 = v1;
  __int16 v3 = sub_1D75EEFE4(v0, v1);
  sub_1D75933F0(v0, v2);
  return (v3 & 0x1FF) == 253;
}

uint64_t sub_1D75EF890@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IPv6Address.init(from:)(a1, a2);
}

uint64_t sub_1D75EF8A8(void *a1)
{
  return IPv6Address.encode(to:)(a1);
}

uint64_t sub_1D75EF8C0(uint64_t a1)
{
  uint64_t v2 = sub_1D765FCE0();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = v3 + a1 - result;
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t result = sub_1D765FD00();
  if (v5) {
    return *(void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t static IPv6Header.minHeaderLength.getter()
{
  return 40;
}

uint64_t static IPv6Header.addressLength.getter()
{
  return 16;
}

uint64_t IPv6Header.headerLength.getter()
{
  return *(void *)v0;
}

uint64_t (*IPv6Header.headerLength.modify())(void)
{
  return nullsub_1;
}

uint64_t (*IPv6Header.payloadLength.modify())(void)
{
  return nullsub_1;
}

uint64_t (*IPv6Header.ipProtocol.modify())(void)
{
  return nullsub_1;
}

uint64_t (*IPv6Header.sourceAddress.modify())(void)
{
  return nullsub_1;
}

uint64_t (*IPv6Header.destinationAddress.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv6Header.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  if (sub_1D765FF00() < 40)
  {
    sub_1D75AF4C0();
    sub_1D7661640();
    sub_1D7661100();
    swift_bridgeObjectRelease();
    sub_1D765FF00();
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_0();
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_2();
    sub_1D75B0D60();
    OUTLINED_FUNCTION_3_0();
    sub_1D76616A0();
    swift_willThrow();
    return sub_1D75933F0(a1, a2);
  }
  unint64_t v9 = a2 >> 62;
  uint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a1;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      break;
    default:
      break;
  }
  BOOL v11 = __OFADD__(v10, 4);
  uint64_t v12 = v10 + 4;
  if (v11)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v13 = v12 + 2;
  if (__OFADD__(v12, 2))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_release();
    swift_release();
    __break(1u);
LABEL_39:
    sub_1D75933F0(a1, a2);
    __break(1u);
    JUMPOUT(0x1D75EFDF8);
  }
  uint64_t v14 = BYTE6(a2);
  switch((int)v9)
  {
    case 1:
      goto LABEL_16;
    case 2:
      if (v12 < *(void *)(a1 + 16)) {
        goto LABEL_35;
      }
      uint64_t v15 = *(void *)(a1 + 24);
      goto LABEL_18;
    case 3:
      if ((v12 & 0x8000000000000000) == 0 && v13 <= 0) {
        goto LABEL_19;
      }
      __break(1u);
LABEL_16:
      if (v12 < (int)a1) {
        goto LABEL_36;
      }
      uint64_t v15 = a1 >> 32;
LABEL_18:
      if (v15 < v13) {
        goto LABEL_33;
      }
LABEL_19:
      if (v12 >= v13) {
        goto LABEL_32;
      }
      switch((int)v9)
      {
        case 1:
          if (a1 >> 32 < (int)a1) {
            goto LABEL_37;
          }
          swift_retain();
          unsigned __int16 v22 = sub_1D75F05BC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, 4);
          if (v3) {
            goto LABEL_39;
          }
          unsigned __int16 v21 = v22;
          sub_1D75933F0(a1, a2);
LABEL_29:
          uint64_t v23 = v21;
          char v24 = sub_1D765FF40();
          uint64_t v25 = sub_1D765FE70();
          uint64_t v27 = v26;
          uint64_t v28 = sub_1D765FE70();
          unint64_t v29 = a2;
          uint64_t v31 = v30;
          uint64_t result = sub_1D75933F0(a1, v29);
          *(void *)a3 = 40;
          *(void *)(a3 + 8) = v23;
          *(unsigned char *)(a3 + 16) = v24;
          *(void *)(a3 + 24) = v25;
          *(void *)(a3 + 32) = v27;
          *(void *)(a3 + 40) = v28;
          *(void *)(a3 + 48) = v31;
          break;
        case 2:
          uint64_t v18 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          unsigned __int16 v20 = sub_1D75F05BC(v18, v19, a2 & 0x3FFFFFFFFFFFFFFFLL, 4);
          if (v4) {
            goto LABEL_38;
          }
          unsigned __int16 v21 = v20;
          swift_release();
          swift_release();
          goto LABEL_29;
        case 3:
          uint64_t v17 = 0;
          uint64_t v16 = 0;
          uint64_t v14 = 0;
          goto LABEL_25;
        default:
          uint64_t v16 = a2 & 0xFFFFFFFFFFFFLL;
          uint64_t v17 = a1;
LABEL_25:
          unsigned __int16 v21 = sub_1D75F04E4(v17, v16, v14, 4);
          goto LABEL_29;
      }
      break;
    default:
      if (v12 < 0) {
        goto LABEL_34;
      }
      uint64_t v15 = BYTE6(a2);
      goto LABEL_18;
  }
  return result;
}

uint64_t sub_1D75EFE28()
{
  return 40;
}

uint64_t sub_1D75EFE30()
{
  return 16;
}

uint64_t sub_1D75EFE4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return IPv6Header.init(_:)(a1, a2, a3);
}

uint64_t static IPv4Header.minHeaderLength.getter()
{
  return 20;
}

uint64_t static IPv4Header.addressLength.getter()
{
  return 4;
}

uint64_t IPv4Header.headerLength.getter()
{
  return *(void *)v0;
}

uint64_t IPv4Header.headerLength.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*IPv4Header.headerLength.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv4Header.payloadLength.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t IPv4Header.payloadLength.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*IPv4Header.payloadLength.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv4Header.ipProtocol.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t IPv4Header.ipProtocol.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*IPv4Header.ipProtocol.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv4Header.sourceAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1D75934F4(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderV13sourceAddress10Foundation4DataVvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D75933F0(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*IPv4Header.sourceAddress.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv4Header.destinationAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1D75934F4(v1, *(void *)(v0 + 48));
  return v1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderV18destinationAddress10Foundation4DataVvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D75933F0(*(void *)(v2 + 40), *(void *)(v2 + 48));
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*IPv4Header.destinationAddress.modify())(void)
{
  return nullsub_1;
}

uint64_t IPv4Header.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_1D765FF00() < 20)
  {
    sub_1D75AF4C0();
    sub_1D7661640();
    sub_1D7661100();
    swift_bridgeObjectRelease();
    sub_1D765FF00();
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_0();
    sub_1D7661500();
    sub_1D7660BC0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_2();
    sub_1D75B0D60();
    OUTLINED_FUNCTION_3_0();
LABEL_6:
    sub_1D76616A0();
    swift_willThrow();
    return OUTLINED_FUNCTION_3_12();
  }
  char v6 = sub_1D765FF40();
  if ((v6 & 0xF0) != 0x40 || (unint64_t v7 = 4 * (v6 & 0xFu), v7 < 0x14))
  {
LABEL_5:
    sub_1D75AF4C0();
    sub_1D7661640();
    sub_1D75B0D60();
    uint64_t v8 = OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_6_7(v8, v9, v10, v11, v12, v13, v14, v15, v39, v41, v43, v44, v45);
    goto LABEL_6;
  }
  unint64_t v17 = a2 >> 62;
  uint64_t v18 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v18 = (int)a1;
      break;
    case 2uLL:
      uint64_t v18 = *(void *)(a1 + 16);
      break;
    default:
      break;
  }
  BOOL v19 = __OFADD__(v18, 2);
  uint64_t v20 = v18 + 2;
  if (v19)
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v21 = v20 + 2;
  if (__OFADD__(v20, 2))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v22 = BYTE6(a2);
  switch((int)v17)
  {
    case 1:
      if (v20 >= (int)a1) {
        goto LABEL_26;
      }
      goto LABEL_5;
    case 2:
      if (v20 < *(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      if (v17 == 2) {
        uint64_t v23 = *(void *)(a1 + 24);
      }
      else {
LABEL_26:
      }
        uint64_t v23 = a1 >> 32;
      goto LABEL_27;
    case 3:
      if (v20 < 0) {
        goto LABEL_5;
      }
      if (v21 > 0 || __OFSUB__(v20, v21)) {
        goto LABEL_5;
      }
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v22 = 0;
      goto LABEL_37;
    default:
      if (v20 < 0) {
        goto LABEL_5;
      }
      uint64_t v23 = BYTE6(a2);
LABEL_27:
      if (v20 >= v21 || v23 < v21) {
        goto LABEL_5;
      }
      if (v17)
      {
        if (v17 == 1)
        {
          if (a1 >> 32 >= (int)a1)
          {
            swift_retain();
            unsigned __int16 v28 = OUTLINED_FUNCTION_2_12();
            if (!a1)
            {
              unsigned __int16 v29 = v28;
              OUTLINED_FUNCTION_3_12();
              goto LABEL_40;
            }
LABEL_47:
            OUTLINED_FUNCTION_3_12();
            __break(1u);
            JUMPOUT(0x1D75F04A4);
          }
          goto LABEL_45;
        }
        uint64_t v30 = *(void *)(a1 + 16);
        swift_retain();
        swift_retain();
        unsigned __int16 v31 = OUTLINED_FUNCTION_2_12();
        if (v30)
        {
LABEL_46:
          swift_release();
          swift_release();
          __break(1u);
          goto LABEL_47;
        }
        unsigned __int16 v29 = v31;
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v26 = a2 & 0xFFFFFFFFFFFFLL;
        uint64_t v25 = a1;
LABEL_37:
        unsigned __int16 v29 = sub_1D75F04E4(v25, v26, v22, 2);
      }
LABEL_40:
      BOOL v32 = v29 >= v7;
      unint64_t v33 = v29 - v7;
      if (!v32) {
        goto LABEL_5;
      }
      char v42 = sub_1D765FF40();
      uint64_t v40 = sub_1D765FE70();
      uint64_t v35 = v34;
      uint64_t v36 = sub_1D765FE70();
      uint64_t v38 = v37;
      uint64_t result = OUTLINED_FUNCTION_3_12();
      *(void *)a3 = v7;
      *(void *)(a3 + 8) = v33;
      *(unsigned char *)(a3 + 16) = v42;
      *(void *)(a3 + 24) = v40;
      *(void *)(a3 + 32) = v35;
      *(void *)(a3 + 40) = v36;
      *(void *)(a3 + 48) = v38;
      return result;
  }
}

uint64_t sub_1D75F04C4()
{
  return 20;
}

uint64_t sub_1D75F04CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return IPv4Header.init(_:)(a1, a2, a3);
}

uint64_t sub_1D75F04E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a1;
  __int16 v6 = a2;
  char v7 = BYTE2(a2);
  char v8 = BYTE3(a2);
  char v9 = BYTE4(a2);
  char v10 = BYTE5(a2);
  return bswap32(*(unsigned __int16 *)((char *)&v5 + a4)) >> 16;
}

uint64_t sub_1D75F05A4(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(a2 + a1);
}

uint64_t sub_1D75F05AC(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + a1);
}

uint64_t sub_1D75F05B4(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + a1);
}

uint64_t sub_1D75F05BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1D765FCE0();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v9 = v7 + a1 - result;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t result = sub_1D765FD00();
  if (v9) {
    return bswap32(*(unsigned __int16 *)(v9 + a4)) >> 16;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D75F063C@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  if (result)
  {
    uint64_t result = sub_1D75F05A4(a2, result);
    *a3 = bswap32(result) >> 16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of static IPHeader.minHeaderLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static IPHeader.addressLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IPHeader.headerLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IPHeader.payloadLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IPHeader.ipProtocol.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of IPHeader.sourceAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of IPHeader.destinationAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of IPHeader.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for IPv6Header()
{
  return &type metadata for IPv6Header;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwxx_0(void *a1)
{
  sub_1D75933F0(a1[3], a1[4]);
  uint64_t v2 = a1[5];
  unint64_t v3 = a1[6];
  return sub_1D75933F0(v2, v3);
}

void *_s19RemotePairingDevice10IPv6HeaderVwcp_0(__n128 *a1, __n128 *a2)
{
  OUTLINED_FUNCTION_1_14(a1, a2);
  uint64_t v5 = *(void *)(v4 + 24);
  unint64_t v6 = *(void *)(v4 + 32);
  sub_1D75934F4(v5, v6);
  v3[3] = v5;
  v3[4] = v6;
  uint64_t v8 = *(void *)(v2 + 40);
  unint64_t v7 = *(void *)(v2 + 48);
  sub_1D75934F4(v8, v7);
  v3[5] = v8;
  v3[6] = v7;
  return v3;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_1D75934F4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  sub_1D75933F0(v6, v7);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  sub_1D75934F4(v9, v8);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v8;
  sub_1D75933F0(v10, v11);
  return a1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwta_0(__n128 *a1, __n128 *a2)
{
  OUTLINED_FUNCTION_1_14(a1, a2);
  uint64_t v5 = *(void *)(v4 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v2 + 24);
  sub_1D75933F0(v5, v6);
  uint64_t v7 = *(void *)(v3 + 40);
  unint64_t v8 = *(void *)(v3 + 48);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v2 + 40);
  sub_1D75933F0(v7, v8);
  return v3;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwet_0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 56))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 32) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 32) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2)
    {
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IPv4Header()
{
  return &type metadata for IPv4Header;
}

uint64_t sub_1D75F09AC(unint64_t a1, unint64_t a2)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  unint64_t v4 = a1;
  unint64_t v39 = HIDWORD(a1);
  uint64_t v40 = BYTE6(a2);
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_48;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v5)
      {
        uint64_t v44 = MEMORY[0x1E4FBC860];
        uint64_t v8 = v5 & ~(v5 >> 63);
        sub_1D75A6460();
        uint64_t v9 = v44;
        uint64_t v37 = (int)v4;
        char v38 = a2;
        if (v2)
        {
          if (v2 == 1) {
            uint64_t v10 = (int)v4;
          }
          else {
            uint64_t v10 = *(void *)(v4 + 16);
          }
          if (v5 < 0)
          {
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
          }
        }
        else
        {
          if (v5 < 0) {
            goto LABEL_50;
          }
          uint64_t v10 = 0;
        }
        unint64_t v35 = v4 >> 8;
        uint64_t v36 = (uint64_t)v4 >> 32;
        unint64_t v33 = v4 >> 24;
        unint64_t v34 = v4 >> 16;
        unint64_t v31 = HIWORD(v4);
        unint64_t v32 = v4 >> 40;
        unint64_t v29 = a2 >> 8;
        unint64_t v30 = HIBYTE(v4);
        unint64_t v28 = a2 >> 16;
        unint64_t v26 = HIDWORD(a2);
        unint64_t v27 = a2 >> 24;
        unint64_t v25 = a2 >> 40;
        int v41 = v2;
        unint64_t v42 = v4;
        while (v8)
        {
          if (v2)
          {
            if (v2 == 1)
            {
              if (v10 < v37 || v10 >= v36) {
                goto LABEL_41;
              }
              uint64_t v12 = sub_1D765FCE0();
              if (!v12) {
                goto LABEL_51;
              }
              uint64_t v13 = v12;
              uint64_t v14 = sub_1D765FD10();
              uint64_t v15 = v10 - v14;
              if (__OFSUB__(v10, v14)) {
                goto LABEL_44;
              }
            }
            else
            {
              if (v10 < *(void *)(v4 + 16)) {
                goto LABEL_43;
              }
              if (v10 >= *(void *)(v4 + 24)) {
                goto LABEL_45;
              }
              uint64_t v17 = sub_1D765FCE0();
              if (!v17) {
                goto LABEL_52;
              }
              uint64_t v13 = v17;
              uint64_t v18 = sub_1D765FD10();
              uint64_t v15 = v10 - v18;
              if (__OFSUB__(v10, v18)) {
                goto LABEL_46;
              }
            }
            char v16 = *(unsigned char *)(v13 + v15);
          }
          else
          {
            if (v10 >= v40) {
              goto LABEL_42;
            }
            v43[0] = v4;
            v43[1] = v35;
            v43[2] = v34;
            v43[3] = v33;
            v43[4] = v39;
            v43[5] = v32;
            v43[6] = v31;
            v43[7] = v30;
            v43[8] = v38;
            v43[9] = v29;
            v43[10] = v28;
            v43[11] = v27;
            v43[12] = v26;
            v43[13] = v25;
            char v16 = v43[v10];
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBD0);
          uint64_t v19 = swift_allocObject();
          *(_OWORD *)(v19 + 16) = xmmword_1D7664B10;
          *(void *)(v19 + 56) = MEMORY[0x1E4FBC358];
          *(void *)(v19 + 64) = MEMORY[0x1E4FBC3B0];
          *(unsigned char *)(v19 + 32) = v16;
          unint64_t v2 = sub_1D7660B30();
          uint64_t v21 = v20;
          uint64_t v44 = v9;
          unint64_t v22 = *(void *)(v9 + 16);
          if (v22 >= *(void *)(v9 + 24) >> 1)
          {
            sub_1D75A6460();
            uint64_t v9 = v44;
          }
          *(void *)(v9 + 16) = v22 + 1;
          uint64_t v23 = v9 + 16 * v22;
          *(void *)(v23 + 32) = v2;
          *(void *)(v23 + 40) = v21;
          ++v10;
          --v8;
          --v5;
          LODWORD(v2) = v41;
          unint64_t v4 = v42;
          if (!v5)
          {
            swift_bridgeObjectRelease();
            return v9;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
LABEL_10:
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_49;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t static Data.randomBytes(ofLength:)(size_t a1)
{
  v4[0] = MEMORY[0x1D94725B0]();
  v4[1] = v2;
  if (!sub_1D75F13B0(v4, a1)) {
    return v4[0];
  }
  uint64_t result = sub_1D7661260();
  __break(1u);
  return result;
}

uint64_t Data.parseBE<A>(_:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v7 = a4 >> 62;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (int)a3;
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
      break;
    default:
      break;
  }
  BOOL v10 = __OFADD__(v9, a2);
  uint64_t v11 = v9 + a2;
  if (v10)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v12 = *(void *)(*(void *)(a5 - 8) + 64);
  BOOL v10 = __OFADD__(v11, v12);
  uint64_t v13 = v11 + v12;
  if (v10)
  {
LABEL_31:
    __break(1u);
    JUMPOUT(0x1D75F0FB4);
  }
  switch((int)v7)
  {
    case 1:
      if (v11 >= (int)a3) {
        goto LABEL_21;
      }
      goto LABEL_27;
    case 2:
      if (v11 < *(void *)(a3 + 16)) {
        goto LABEL_27;
      }
      if (v7 == 2) {
        uint64_t v14 = *(void *)(a3 + 24);
      }
      else {
LABEL_21:
      }
        uint64_t v14 = a3 >> 32;
      break;
    case 3:
      if (v11 < 0) {
        goto LABEL_27;
      }
      if (v13 > 0 || v11 >= v13) {
        goto LABEL_27;
      }
      goto LABEL_20;
    default:
      if (v11 < 0) {
        goto LABEL_27;
      }
      uint64_t v14 = BYTE6(a4);
      break;
  }
  if (v11 >= v13 || v14 < v13)
  {
LABEL_27:
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, a5);
  }
  else
  {
LABEL_20:
    MEMORY[0x1F4188790](a1);
    sub_1D765FEA0();
    return __swift_storeEnumTagSinglePayload(a6, 0, 1, a5);
  }
}

uint64_t sub_1D75F0FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1F4188790](a1);
  sub_1D75F108C(v6, v7, a4, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D7661210();
}

uint64_t sub_1D75F108C@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a2) {
    return sub_1D75F1220(result, a2, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t Data.HexStringEncodingOptions.init(separator:uppercase:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

void static Data.HexStringEncodingOptions.authTag.getter(__n128 *a1@<X8>)
{
}

double static Data.HexStringEncodingOptions.bluetoothAddress.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 58;
  *(_OWORD *)a1 = xmmword_1D7667A20;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

void static Data.HexStringEncodingOptions.macAddress.getter(__n128 *a1@<X8>)
{
}

uint64_t Data.HexStringEncodingOptions.separator.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Data.HexStringEncodingOptions.uppercase.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Data.hexEncodedString(options:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_1D75F09AC(a2, a3);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC190);
  sub_1D75F1688();
  uint64_t v5 = sub_1D7660A90();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D75F1220@<X0>(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if ((v6 & (unint64_t)(v6 + 1)) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = isStackAllocationSafe;
  uint64_t v10 = *(void *)(a3 - 8);
  if (v6 > 0xF
    || *(uint64_t *)(v5 + 72) >= 1025
    && (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), !isStackAllocationSafe))
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    size_t v16 = *(void *)(v10 + 64);
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v15;
      memcpy(v15, (const void *)(a2 + v9), v16);
      (*(void (**)(uint64_t, void *, uint64_t))(v10 + 16))(a4, v17, a3);
LABEL_14:
      JUMPOUT(0x1D9474C60);
    }
    goto LABEL_12;
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v12 = (char *)&v18 - v11;
  size_t v13 = *(void *)(v10 + 64);
  if ((v13 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  memcpy((char *)&v18 - v11, (const void *)(a2 + v9), v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(a4, v12, a3);
}

uint64_t sub_1D75F13B0(uint64_t *a1, size_t count)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1D7665EB0;
      uint64_t v9 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v9 < (int)v3) {
        goto LABEL_16;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v3, sub_1D765FD10())) {
        goto LABEL_17;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v11 = sub_1D765FCC0();
      swift_release();
      uint64_t v8 = v11;
LABEL_11:
      if (v9 < (int)v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1D75F187C((int)v3, v3 >> 32, v8, count);
      unint64_t v10 = v8 | 0x4000000000000000;
      *a1 = v3;
LABEL_13:
      a1[1] = v10;
      return result;
    case 2uLL:
      *(void *)&long long bytes = *a1;
      *((void *)&bytes + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1D765FDB0();
      uint64_t result = sub_1D75F187C(*(void *)(bytes + 16), *(void *)(bytes + 24), *((uint64_t *)&bytes + 1), count);
      unint64_t v10 = *((void *)&bytes + 1) | 0x8000000000000000;
      *a1 = bytes;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&bytes + 7) = 0;
      *(void *)&long long bytes = 0;
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E4F3BC58], count, &bytes);
    default:
      LOWORD(bytes) = *a1;
      BYTE2(bytes) = BYTE2(v3);
      BYTE3(bytes) = BYTE3(v3);
      BYTE4(bytes) = BYTE4(v3);
      BYTE5(bytes) = BYTE5(v3);
      BYTE6(bytes) = BYTE6(v3);
      BYTE7(bytes) = HIBYTE(v3);
      WORD4(bytes) = v2;
      BYTE10(bytes) = BYTE2(v2);
      BYTE11(bytes) = BYTE3(v2);
      BYTE12(bytes) = BYTE4(v2);
      BYTE13(bytes) = BYTE5(v2);
      BYTE14(bytes) = BYTE6(v2);
      uint64_t result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E4F3BC58], count, &bytes);
      unint64_t v7 = DWORD2(bytes) | ((unint64_t)BYTE12(bytes) << 32) | ((unint64_t)BYTE13(bytes) << 40) | ((unint64_t)BYTE14(bytes) << 48);
      *a1 = bytes;
      a1[1] = v7;
      return result;
  }
}

uint64_t sub_1D75F1668(uint64_t a1, uint64_t a2)
{
  return sub_1D75F0FD4(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 16));
}

unint64_t sub_1D75F1688()
{
  unint64_t result = qword_1EBDEC198;
  if (!qword_1EBDEC198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDEC190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEC198);
  }
  return result;
}

uint64_t sub_1D75F16E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s24HexStringEncodingOptionsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s24HexStringEncodingOptionsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s24HexStringEncodingOptionsVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s24HexStringEncodingOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.HexStringEncodingOptions()
{
  return &type metadata for Data.HexStringEncodingOptions;
}

uint64_t sub_1D75F187C(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4)
{
  uint64_t result = sub_1D765FCE0();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t result = sub_1D765FD10();
    if (!__OFSUB__(a1, result))
    {
      uint64_t v8 = (void *)(v7 + a1 - result);
      sub_1D765FD00();
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E4F3BC58], a4, v8);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PairableHostInfo.endpoint.getter()
{
  return _s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0();
}

uint64_t type metadata accessor for PairableHostInfo(uint64_t a1)
{
  return sub_1D75A6F50(a1, (uint64_t *)&unk_1EA82BFF8);
}

uint64_t PairableHostInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t PairableHostInfo.identifier.setter(uint64_t a1)
{
  sub_1D765FFD0();
  OUTLINED_FUNCTION_2_2();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*PairableHostInfo.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t PairableHostInfo.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PairableHostInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PairableHostInfo(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PairableHostInfo.name.modify())(void)
{
  return nullsub_1;
}

uint64_t PairableHostInfo.model.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PairableHostInfo.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PairableHostInfo(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PairableHostInfo.model.modify())(void)
{
  return nullsub_1;
}

uint64_t PairableHostInfo.available.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 28));
}

uint64_t PairableHostInfo.available.setter(char a1)
{
  uint64_t result = type metadata accessor for PairableHostInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*PairableHostInfo.available.modify())(void)
{
  return nullsub_1;
}

uint64_t PairableHostInfo.paired.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 32));
}

uint64_t PairableHostInfo.paired.setter(char a1)
{
  uint64_t result = type metadata accessor for PairableHostInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*PairableHostInfo.paired.modify())(void)
{
  return nullsub_1;
}

uint64_t PairableHostInfo.monotonicIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 36));
}

uint64_t PairableHostInfo.monotonicIdentifier.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PairableHostInfo(0);
  *(void *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*PairableHostInfo.monotonicIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1D75F1D84()
{
  return PairableHostInfo.endpoint.setter();
}

uint64_t PairableHostInfo.endpoint.setter()
{
  return _s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvs_0();
}

void (*PairableHostInfo.endpoint.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PairableHostInfo(0);
  v2[4] = sub_1D76601E0();
  return sub_1D75A1B60;
}

uint64_t PairableHostInfo.init(identifier:name:model:available:paired:monotonicIdentifier:endpoint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  size_t v16 = (int *)type metadata accessor for PairableHostInfo(0);
  uint64_t v17 = (void *)(a9 + v16[6]);
  uint64_t v18 = sub_1D765FFD0();
  OUTLINED_FUNCTION_1_0();
  uint64_t v23 = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a9, a1, v18);
  uint64_t v20 = (void *)(a9 + v16[5]);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *uint64_t v17 = a4;
  v17[1] = a5;
  *(unsigned char *)(a9 + v16[7]) = a6;
  *(unsigned char *)(a9 + v16[8]) = a7;
  *(void *)(a9 + v16[9]) = a8;
  sub_1D76601D0();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
  return v21(a1, v18);
}

uint64_t sub_1D75F1F6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1D7661560() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1D7661560() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
        if (v8 || (sub_1D7661560() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x646572696170 && a2 == 0xE600000000000000;
          if (v9 || (sub_1D7661560() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001D76757F0 || (sub_1D7661560() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = sub_1D7661560();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1D75F2230(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 3:
      unint64_t result = 0x6C62616C69617661;
      break;
    case 4:
      unint64_t result = 0x646572696170;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x746E696F70646E65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D75F2314()
{
  return sub_1D75F2230(*v0);
}

uint64_t sub_1D75F231C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75F1F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75F2344(uint64_t a1)
{
  unint64_t v2 = sub_1D75F264C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F2380(uint64_t a1)
{
  unint64_t v2 = sub_1D75F264C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PairableHostInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF58);
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1D75F264C();
  sub_1D76617C0();
  sub_1D765FFD0();
  sub_1D75B31D4(&qword_1EA82B418);
  sub_1D7661490();
  if (!v1)
  {
    type metadata accessor for PairableHostInfo(0);
    sub_1D7661450();
    sub_1D7661400();
    sub_1D7661460();
    sub_1D7661460();
    sub_1D76614D0();
    sub_1D7660210();
    sub_1D75F2B34(&qword_1EA82B560, MEMORY[0x1E4F77AB0]);
    sub_1D7661490();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1D75F264C()
{
  unint64_t result = qword_1EA82BF60;
  if (!qword_1EA82BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BF60);
  }
  return result;
}

void PairableHostInfo.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1D7660210();
  OUTLINED_FUNCTION_0_5();
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF68);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_7_9();
  BOOL v9 = (int *)type metadata accessor for PairableHostInfo(v8);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1_7();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = (uint64_t *)(v13 + *(int *)(v14 + 24));
  *uint64_t v15 = 0;
  v15[1] = 0;
  unint64_t v28 = v15;
  uint64_t v29 = v13;
  uint64_t v16 = v3[3];
  __swift_project_boxed_opaque_existential_0Tm(v3, v16);
  sub_1D75F264C();
  sub_1D76617A0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = sub_1D765FFD0();
    OUTLINED_FUNCTION_0_5();
    uint64_t v19 = v18;
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_25();
    sub_1D75B31D4(&qword_1EA82B430);
    sub_1D7661380();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v29, v16, v17);
    uint64_t v21 = sub_1D7661340();
    unint64_t v22 = (uint64_t *)(v29 + v9[5]);
    *unint64_t v22 = v21;
    v22[1] = v23;
    *unint64_t v28 = sub_1D76612F0();
    v28[1] = v24;
    *(unsigned char *)(v29 + v9[7]) = sub_1D7661350() & 1;
    *(unsigned char *)(v29 + v9[8]) = sub_1D7661350() & 1;
    *(void *)(v29 + v9[9]) = sub_1D76613C0();
    sub_1D75F2B34(&qword_1EA82B570, MEMORY[0x1E4F77AB0]);
    sub_1D7661380();
    uint64_t v25 = OUTLINED_FUNCTION_6_8();
    v26(v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v29 + v9[10], v1, v4);
    sub_1D75F3224();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
    sub_1D75F4EC8(v29, (void (*)(void))type metadata accessor for PairableHostInfo);
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_1D75F2B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D75F2B7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001D7675810 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7675830)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1D75F2C68(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000011;
  }
}

void sub_1D75F2CA4()
{
}

uint64_t sub_1D75F2CBC(void *a1)
{
  return PairableHostInfo.encode(to:)(a1);
}

unint64_t sub_1D75F2CD4()
{
  return sub_1D75F2C68(*v0);
}

uint64_t sub_1D75F2CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D75F2B7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75F2D04(uint64_t a1)
{
  unint64_t v2 = sub_1D75F31D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F2D40(uint64_t a1)
{
  unint64_t v2 = sub_1D75F31D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75F2D7C(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3310();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F2DB8(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3310();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D75F2DF4(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3278();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F2E30(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3278();
  return MEMORY[0x1F41862B0](a1, v2);
}

void DeviceServiceEvent.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF70);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF78);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_14();
  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_7_9();
  type metadata accessor for DeviceServiceEvent(v6);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BF80);
  OUTLINED_FUNCTION_0_5();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_7();
  uint64_t v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75F31D8();
  sub_1D76617C0();
  sub_1D75F3224();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D75F3278();
    OUTLINED_FUNCTION_17_6();
    sub_1D75F32C4();
    sub_1D7661490();
    OUTLINED_FUNCTION_6();
    v15();
  }
  else
  {
    sub_1D75F3D54();
    sub_1D75F3310();
    OUTLINED_FUNCTION_17_6();
    sub_1D75F2B34((unint64_t *)&unk_1EA82B870, (void (*)(uint64_t))type metadata accessor for PairableHostInfo);
    sub_1D7661490();
    OUTLINED_FUNCTION_6();
    v16();
    sub_1D75F4EC8(v0, (void (*)(void))type metadata accessor for PairableHostInfo);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  OUTLINED_FUNCTION_4_0();
}

uint64_t type metadata accessor for DeviceServiceEvent(uint64_t a1)
{
  return sub_1D75A6F50(a1, (uint64_t *)&unk_1EA82C008);
}

unint64_t sub_1D75F31D8()
{
  unint64_t result = qword_1EA82BF88;
  if (!qword_1EA82BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BF88);
  }
  return result;
}

uint64_t sub_1D75F3224()
{
  uint64_t v2 = OUTLINED_FUNCTION_16_6();
  v3(v2);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

unint64_t sub_1D75F3278()
{
  unint64_t result = qword_1EA82BF90;
  if (!qword_1EA82BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BF90);
  }
  return result;
}

unint64_t sub_1D75F32C4()
{
  unint64_t result = qword_1EA82BF98;
  if (!qword_1EA82BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BF98);
  }
  return result;
}

unint64_t sub_1D75F3310()
{
  unint64_t result = qword_1EA82BFA0;
  if (!qword_1EA82BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BFA0);
  }
  return result;
}

void DeviceServiceEvent.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  uint64_t v52 = v3;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BFA8);
  OUTLINED_FUNCTION_0_5();
  uint64_t v56 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_14();
  uint64_t v57 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BFB0);
  OUTLINED_FUNCTION_0_5();
  uint64_t v54 = v8;
  uint64_t v55 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_14();
  uint64_t v59 = v9;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BFB8);
  OUTLINED_FUNCTION_0_5();
  uint64_t v58 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_1_7();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for DeviceServiceEvent(0);
  OUTLINED_FUNCTION_2_2();
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  unint64_t v22 = (char *)v50 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v50 - v23;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1D75F31D8();
  sub_1D76617A0();
  if (v0) {
    goto LABEL_10;
  }
  v50[1] = v24;
  v50[2] = v22;
  v50[0] = v19;
  uint64_t v25 = v60;
  uint64_t v51 = v15;
  uint64_t v64 = v2;
  uint64_t v26 = sub_1D76613D0();
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v28 = v14;
  if (!v27)
  {
    uint64_t v35 = v58;
LABEL_8:
    uint64_t v36 = v51;
    uint64_t v37 = sub_1D7661150();
    swift_allocError();
    unint64_t v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B490);
    *unint64_t v39 = v36;
    sub_1D76612E0();
    sub_1D7661140();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x1E4FBBA70], v37);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v28, v25);
    uint64_t v2 = v64;
LABEL_10:
    uint64_t v40 = (uint64_t)v2;
    goto LABEL_11;
  }
  uint64_t v29 = v25;
  char v30 = *(unsigned char *)(v26 + 32);
  sub_1D75AB7D8(1, v27, v26, v26 + 32, 0, (2 * v27) | 1);
  uint64_t v32 = v31;
  unint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (v32 != v34 >> 1)
  {
    uint64_t v35 = v58;
    uint64_t v25 = v29;
    goto LABEL_8;
  }
  if (v30)
  {
    char v61 = 1;
    sub_1D75F3278();
    OUTLINED_FUNCTION_13_6();
    sub_1D75F3D08();
    sub_1D7661380();
    OUTLINED_FUNCTION_6();
    v41();
    swift_unknownObjectRelease();
    uint64_t v42 = OUTLINED_FUNCTION_45_0();
    v43(v42);
    uint64_t v44 = v62;
    char v45 = v63;
    uint64_t v46 = v50[0];
    *(unsigned char *)v50[0] = v61;
    *(void *)(v46 + 8) = v44;
    *(unsigned char *)(v46 + 16) = v45;
  }
  else
  {
    char v61 = 0;
    sub_1D75F3310();
    OUTLINED_FUNCTION_13_6();
    type metadata accessor for PairableHostInfo(0);
    sub_1D75F2B34(&qword_1EA82B868, (void (*)(uint64_t))type metadata accessor for PairableHostInfo);
    sub_1D7661380();
    OUTLINED_FUNCTION_6();
    v47();
    swift_unknownObjectRelease();
    uint64_t v48 = OUTLINED_FUNCTION_45_0();
    v49(v48);
  }
  swift_storeEnumTagMultiPayload();
  sub_1D75F3D54();
  sub_1D75F3D54();
  uint64_t v40 = (uint64_t)v64;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0Tm(v40);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D75F390C()
{
}

void sub_1D75F3924()
{
}

uint64_t sub_1D75F393C(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3DA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F3978(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3DA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void BrowseForPairableHostRequest.encode(to:)()
{
}

uint64_t BrowseForPairableHostRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1D75F3A18(uint64_t a1)
{
  return InitiatePairingWithHostCommand.init(from:)(a1);
}

void sub_1D75F3A30()
{
}

uint64_t sub_1D75F3A48(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3DF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F3A84(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3DF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void InitiatePairingWithHostCommand.encode(to:)()
{
}

uint64_t InitiatePairingWithHostCommand.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void sub_1D75F3B24()
{
}

uint64_t sub_1D75F3B3C(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3E40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D75F3B78(uint64_t a1)
{
  unint64_t v2 = sub_1D75F3E40();
  return MEMORY[0x1F41862B0](a1, v2);
}

void HostCheckInRequest.encode(to:)()
{
}

void sub_1D75F3BF0()
{
  OUTLINED_FUNCTION_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_0_5();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_25();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  v2();
  sub_1D76617C0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  OUTLINED_FUNCTION_4_0();
}

uint64_t HostCheckInRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void sub_1D75F3CF0()
{
}

unint64_t sub_1D75F3D08()
{
  unint64_t result = qword_1EA82BFC0;
  if (!qword_1EA82BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BFC0);
  }
  return result;
}

uint64_t sub_1D75F3D54()
{
  uint64_t v2 = OUTLINED_FUNCTION_16_6();
  v3(v2);
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_1D75F3DA8()
{
  unint64_t result = qword_1EA82BFD0;
  if (!qword_1EA82BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BFD0);
  }
  return result;
}

unint64_t sub_1D75F3DF4()
{
  unint64_t result = qword_1EA82BFE0;
  if (!qword_1EA82BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BFE0);
  }
  return result;
}

unint64_t sub_1D75F3E40()
{
  unint64_t result = qword_1EA82BFF0;
  if (!qword_1EA82BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82BFF0);
  }
  return result;
}

uint64_t sub_1D75F3E8C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D75F2B34(&qword_1EA82B868, (void (*)(uint64_t))type metadata accessor for PairableHostInfo);
  uint64_t result = sub_1D75F2B34((unint64_t *)&unk_1EA82B870, (void (*)(uint64_t))type metadata accessor for PairableHostInfo);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D75F3F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75F3F94(a1, a2, a3, (uint64_t (*)(void))sub_1D75AB8A8, (uint64_t (*)(void))sub_1D75AB8F4);
}

uint64_t sub_1D75F3F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75F3F94(a1, a2, a3, (uint64_t (*)(void))sub_1D75ABB08, (uint64_t (*)(void))sub_1D75ABB54);
}

uint64_t sub_1D75F3F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75F3F94(a1, a2, a3, (uint64_t (*)(void))sub_1D75AB940, (uint64_t (*)(void))sub_1D75AB98C);
}

uint64_t sub_1D75F3F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D75F3FD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PairableHostInfo.endpoint.getter();
  *a1 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for PairableHostInfo(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D765FFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1D7660210();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for PairableHostInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D765FFD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  uint64_t v6 = sub_1D7660210();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D765FFD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1D7660210();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D765FFD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D765FFD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D765FFD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1D7660210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for PairableHostInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D75F468C);
}

uint64_t sub_1D75F468C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D765FFD0();
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_1D7660210();
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PairableHostInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D75F4754);
}

void sub_1D75F4754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1D765FFD0();
  OUTLINED_FUNCTION_1_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_1D7660210();
    uint64_t v11 = a1 + *(int *)(a4 + 40);
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_1D75F4804()
{
  uint64_t result = sub_1D765FFD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D7660210();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceServiceEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1D765FFD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for PairableHostInfo(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      void *v11 = *v12;
      v11[1] = v13;
      uint64_t v14 = v9[6];
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      *(uint64_t *)((char *)a1 + v9[9]) = *(uint64_t *)((char *)a2 + v9[9]);
      uint64_t v18 = v9[10];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_1D7660210();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for DeviceServiceEvent(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1D765FFD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = type metadata accessor for PairableHostInfo(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 40);
    uint64_t v6 = sub_1D7660210();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

char *initializeWithCopy for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D765FFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for PairableHostInfo(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = v7[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    a1[v7[7]] = a2[v7[7]];
    a1[v7[8]] = a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    uint64_t v16 = v7[10];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_1D7660210();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D75F4EC8((uint64_t)a1, (void (*)(void))type metadata accessor for DeviceServiceEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1D765FFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for PairableHostInfo(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      uint64_t v11 = v7[6];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      a1[v7[7]] = a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      uint64_t v14 = v7[10];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1D7660210();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D75F4EC8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_6();
  v3();
  return a1;
}

char *initializeWithTake for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D765FFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for PairableHostInfo(0);
    *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
    *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
    a1[v7[7]] = a2[v7[7]];
    a1[v7[8]] = a2[v7[8]];
    *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
    uint64_t v8 = v7[10];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1D7660210();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D75F4EC8((uint64_t)a1, (void (*)(void))type metadata accessor for DeviceServiceEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1D765FFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for PairableHostInfo(0);
      *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      a1[v7[7]] = a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      uint64_t v8 = v7[10];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1D7660210();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D75F51C0()
{
  uint64_t result = type metadata accessor for PairableHostInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for BrowseForPairableHostRequest()
{
}

void type metadata accessor for InitiatePairingWithHostCommand()
{
}

void type metadata accessor for HostCheckInRequest()
{
}

ValueMetadata *type metadata accessor for HostCheckInRequest.CodingKeys()
{
  return &type metadata for HostCheckInRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InitiatePairingWithHostCommand.CodingKeys()
{
  return &type metadata for InitiatePairingWithHostCommand.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseForPairableHostRequest.CodingKeys()
{
  return &type metadata for BrowseForPairableHostRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DeviceServiceEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75F5370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.CodingKeys()
{
  return &type metadata for DeviceServiceEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.PairableHostFoundCodingKeys()
{
  return &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys;
}

unsigned char *_s19RemotePairingDevice18DeviceServiceEventO27PairableHostFoundCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D75F5458);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.PairingChallengeCodingKeys()
{
  return &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PairableHostInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D75F555CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PairableHostInfo.CodingKeys()
{
  return &type metadata for PairableHostInfo.CodingKeys;
}

unint64_t sub_1D75F5598()
{
  unint64_t result = qword_1EA82C018;
  if (!qword_1EA82C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C018);
  }
  return result;
}

unint64_t sub_1D75F55E8()
{
  unint64_t result = qword_1EA82C020;
  if (!qword_1EA82C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C020);
  }
  return result;
}

unint64_t sub_1D75F5638()
{
  unint64_t result = qword_1EA82C028;
  if (!qword_1EA82C028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C028);
  }
  return result;
}

unint64_t sub_1D75F5688()
{
  unint64_t result = qword_1EA82C030;
  if (!qword_1EA82C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C030);
  }
  return result;
}

unint64_t sub_1D75F56D8()
{
  unint64_t result = qword_1EA82C038;
  if (!qword_1EA82C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C038);
  }
  return result;
}

unint64_t sub_1D75F5728()
{
  unint64_t result = qword_1EA82C040;
  if (!qword_1EA82C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C040);
  }
  return result;
}

unint64_t sub_1D75F5778()
{
  unint64_t result = qword_1EA82C048;
  if (!qword_1EA82C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C048);
  }
  return result;
}

unint64_t sub_1D75F57C8()
{
  unint64_t result = qword_1EA82C050;
  if (!qword_1EA82C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C050);
  }
  return result;
}

unint64_t sub_1D75F5818()
{
  unint64_t result = qword_1EA82C058;
  if (!qword_1EA82C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C058);
  }
  return result;
}

unint64_t sub_1D75F5868()
{
  unint64_t result = qword_1EA82C060;
  if (!qword_1EA82C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C060);
  }
  return result;
}

unint64_t sub_1D75F58B8()
{
  unint64_t result = qword_1EA82C068;
  if (!qword_1EA82C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C068);
  }
  return result;
}

unint64_t sub_1D75F5908()
{
  unint64_t result = qword_1EA82C070;
  if (!qword_1EA82C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C070);
  }
  return result;
}

unint64_t sub_1D75F5958()
{
  unint64_t result = qword_1EA82C078;
  if (!qword_1EA82C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C078);
  }
  return result;
}

unint64_t sub_1D75F59A8()
{
  unint64_t result = qword_1EA82C080;
  if (!qword_1EA82C080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C080);
  }
  return result;
}

unint64_t sub_1D75F59F8()
{
  unint64_t result = qword_1EA82C088;
  if (!qword_1EA82C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C088);
  }
  return result;
}

unint64_t sub_1D75F5A48()
{
  unint64_t result = qword_1EA82C090;
  if (!qword_1EA82C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C090);
  }
  return result;
}

unint64_t sub_1D75F5A98()
{
  unint64_t result = qword_1EA82C098;
  if (!qword_1EA82C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C098);
  }
  return result;
}

unint64_t sub_1D75F5AE8()
{
  unint64_t result = qword_1EA82C0A0;
  if (!qword_1EA82C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C0A0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return type metadata accessor for PairableHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return sub_1D76613F0();
}

void sub_1D75F5B6C()
{
  OUTLINED_FUNCTION_97();
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  unint64_t v36 = v0;
  unint64_t v37 = v1;
  *(void *)&long long v40 = v0;
  *((void *)&v40 + 1) = v1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C0C8);
  if (swift_dynamicCast())
  {
    sub_1D758AB78(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_0Tm(&v41, v43);
    sub_1D765FD30();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
    goto LABEL_64;
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1D758C650((uint64_t)v38, &qword_1EA82C0D0);
  unint64_t v2 = v36;
  uint64_t v3 = v37;
  if ((v37 & 0x1000000000000000) == 0)
  {
    if ((v37 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v36;
      uint64_t v42 = v37 & 0xFFFFFFFFFFFFFFLL;
      unsigned int v6 = (char *)&v41 + (HIBYTE(v37) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((v36 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v36 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1D7661160();
      }
      if (v4) {
        unsigned int v6 = (char *)(v4 + v5);
      }
      else {
        unsigned int v6 = 0;
      }
      uint64_t v7 = (void *)v4;
    }
    uint64_t v8 = MEMORY[0x1D9472540](v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      goto LABEL_64;
    }
    unint64_t v2 = v36;
    uint64_t v3 = v37;
    if ((v37 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_69:
    uint64_t v11 = sub_1D7660BD0();
    goto LABEL_17;
  }
LABEL_68:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_69;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = MEMORY[0x1D9472510](v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x1F4188790](*(void *)&v38[0]);
  void v31[2] = &v36;
  unint64_t v13 = (unint64_t)sub_1D75FCA8C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1D75FDCC0, (uint64_t)v31);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  unint64_t v19 = v18;
  unint64_t v20 = v14;
  uint64_t v3 = BYTE14(v38[0]);
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v21) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_72;
      }
      uint64_t v21 = (int)v21;
LABEL_23:
      if (v15 != v21)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v3 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v3 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
LABEL_60:
        if (v3 < v15)
        {
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
        }
        sub_1D765FE40();
LABEL_62:
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
LABEL_29:
      if ((v19 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v19) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      unint64_t v32 = v10;
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v19 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v19 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = v8;
      uint64_t v34 = (v19 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v23 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v24 = __OFSUB__(v22, v23);
      uint64_t v21 = v22 - v23;
      if (!v24) {
        goto LABEL_23;
      }
      goto LABEL_73;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v3 = 0;
      goto LABEL_60;
    default:
      uint64_t v21 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v2 = v20;
    if ((v20 & 0xC) == v28) {
      unint64_t v2 = sub_1D75FEBDC(v20, v17, v19);
    }
    unint64_t v29 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if ((v19 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1D7660C10();
      char v30 = v2;
    }
    else if ((v19 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v30 = *((unsigned char *)&v41 + v29);
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1D7661160();
      }
      char v30 = *(unsigned char *)(v2 + v29);
    }
    if ((v20 & 0xC) == v28)
    {
      unint64_t v2 = sub_1D75FEBDC(v20, v17, v19);
      unint64_t v20 = v2;
      if ((v19 & 0x1000000000000000) == 0)
      {
LABEL_47:
        unint64_t v20 = (v20 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_52;
      }
    }
    else if ((v19 & 0x1000000000000000) == 0)
    {
      goto LABEL_47;
    }
    if (v25 <= v20 >> 16) {
      goto LABEL_67;
    }
    unint64_t v2 = sub_1D7660BE0();
    unint64_t v20 = v2;
LABEL_52:
    *((unsigned char *)&v40 + v26) = v30;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_66;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      OUTLINED_FUNCTION_18_6();
      sub_1D765FE60();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v20 >> 14);
  uint64_t v8 = v33;
  unint64_t v10 = v32;
  if ((_BYTE)v26)
  {
    OUTLINED_FUNCTION_18_6();
    sub_1D765FE60();
    sub_1D75941DC(v8, v10);
    goto LABEL_62;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_1D75941DC(v8, v10);
LABEL_63:
  swift_bridgeObjectRelease();
LABEL_64:
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D75F6050(uint64_t a1, unint64_t a2)
{
  v13[3] = MEMORY[0x1E4F277B8];
  void v13[4] = MEMORY[0x1E4F277A8];
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_0Tm(v13, MEMORY[0x1E4F277B8]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
        JUMPOUT(0x1D75F61ECLL);
      }
      sub_1D75934F4(a1, a2);
      sub_1D75934F4(v5, v6);
      sub_1D75FC95C((int)v5, v5 >> 32, &v12);
      sub_1D75933F0(v5, v6);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = *(void *)(v5 + 24);
      sub_1D75934F4(a1, a2);
      swift_retain();
      swift_retain();
      sub_1D75FC95C(v8, v9, &v12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_1D75934F4(a1, a2);
      uint64_t v7 = 0;
      goto LABEL_7;
    default:
      sub_1D75934F4(a1, a2);
      uint64_t v7 = BYTE6(v6);
LABEL_7:
      sub_1D75FC028(v7, &v12);
      break;
  }
  sub_1D75933F0(a1, a2);
  uint64_t v10 = v12;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  return v10;
}

uint64_t sub_1D75F61FC(uint64_t a1, uint64_t a2)
{
  v7[3] = MEMORY[0x1E4FBB2B8];
  _OWORD v7[4] = MEMORY[0x1E4F27EF8];
  v7[0] = a1;
  v7[1] = a2;
  unint64_t v2 = __swift_project_boxed_opaque_existential_0Tm(v7, MEMORY[0x1E4FBB2B8]);
  uint64_t v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = v2[1];
    uint64_t v5 = v4 - v3;
    if (v4 != v3)
    {
      if (v5 <= 14)
      {
        sub_1D765FDA0();
      }
      else if ((unint64_t)v5 >= 0x7FFFFFFF)
      {
        MEMORY[0x1D9472480]();
      }
      else
      {
        MEMORY[0x1D94724A0]();
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
  return OUTLINED_FUNCTION_36();
}

uint64_t sub_1D75F62B4()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82C0B0 = result;
  return result;
}

uint64_t sub_1D75F632C()
{
  type metadata accessor for AtomicCounter();
  swift_allocObject();
  uint64_t result = AtomicCounter.init()();
  qword_1EA82C0B8 = result;
  return result;
}

uint64_t sub_1D75F636C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1D75F63EC(v1, v2);
}

uint64_t sub_1D75F63AC()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t sub_1D75F63EC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_13_0();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D75F6434())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D75F6480(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 88);
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return OUTLINED_FUNCTION_13_7(v3);
}

uint64_t sub_1D75F648C(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1D75F6498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 112);
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return OUTLINED_FUNCTION_13_7(v3);
}

uint64_t sub_1D75F64A4(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return OUTLINED_FUNCTION_17_7();
}

uint64_t sub_1D75F64B0(uint64_t a1)
{
  *(void *)(v1 + 144) = a1;
  return OUTLINED_FUNCTION_17_7();
}

uint64_t sub_1D75F64BC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_13_0();
  uint64_t v5 = *(void *)(v2 + 160);
  unint64_t v6 = *(void *)(v2 + 168);
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return sub_1D75933F0(v5, v6);
}

uint64_t SecureSocketDataTransport.__allocating_init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  SecureSocketDataTransport.init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v19, a8, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30);
  return v17;
}

void SecureSocketDataTransport.init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_97();
  uint64_t v24 = (void *)v22;
  uint64_t v41 = v26;
  uint64_t v42 = v25;
  uint64_t v47 = v27;
  uint64_t v48 = v28;
  uint64_t v43 = v29;
  char v44 = v30;
  int v45 = v31;
  uint64_t v46 = v32;
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4B0);
  uint64_t v33 = sub_1D7660950();
  *(void *)(v22 + 88) = 0;
  *(void *)(v22 + 96) = 0;
  *(void *)(v22 + 112) = 0;
  *(void *)(v22 + 120) = 0;
  MEMORY[0x1F4188790](v33 - 8);
  OUTLINED_FUNCTION_52();
  sub_1D7660940();
  sub_1D7660E90();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_3_13();
  (*(void (**)(uint64_t, void))(v35 + 104))(v23, *MEMORY[0x1E4FBCC60]);
  uint64_t v36 = sub_1D7660E60();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_1_7();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D75D89BC((unint64_t *)&qword_1EBDEC5A0, MEMORY[0x1F41AB0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC590);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEC598, &qword_1EBDEC590);
  sub_1D7661090();
  *(void *)(v22 + 128) = sub_1D7660EB0();
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 144) = 0;
  *(void *)(v22 + 152) = v37;
  *(_OWORD *)(v22 + 160) = xmmword_1D7665EB0;
  *(void *)(v22 + 176) = v37;
  *(unsigned char *)(v22 + 185) = 2;
  *(_OWORD *)(v22 + 192) = 0u;
  *(_OWORD *)(v22 + 208) = 0u;
  *(_OWORD *)(v22 + 217) = 0u;
  *(unsigned char *)(v22 + 184) = v44;
  *(_DWORD *)(v22 + 32) = v45;
  *(void *)(v22 + 40) = v46;
  *(void *)(v22 + 48) = v42;
  *(void *)(v22 + 56) = v47;
  *(void *)(v22 + 64) = v43;
  *(void *)(v22 + 72) = v48;
  *(void *)(v22 + 80) = v41;
  uint64_t v38 = *(void *)(v22 + 88);
  v24[11] = a21;
  v24[12] = a22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D75940A4(v38);
  if (qword_1EA82AA10 != -1) {
    swift_once();
  }
  sub_1D758A804();
  sub_1D7661500();
  sub_1D7660BC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  void v24[2] = 0x2D74656B636F73;
  v24[3] = 0xE700000000000000;
  uint64_t v39 = (void *)v24[16];
  v24[13] = v39;
  id v40 = v39;
  OUTLINED_FUNCTION_84();
}

void sub_1D75F68F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_97();
  a19 = v23;
  a20 = v24;
  uint64_t v25 = (uint64_t)v20;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  if (!v20[17]) {
    goto LABEL_55;
  }
  uint64_t v26 = v20[14];
  if (!v26) {
    goto LABEL_55;
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1D75A74B4(v26);
  uint64_t v146 = v20;
  if (!sub_1D7660F30())
  {
    OUTLINED_FUNCTION_16_7();
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    sub_1D7661690();
    uint64_t v147 = (void *)v153;
    unint64_t v148 = v154;
    sub_1D76616A0();
    uint64_t v22 = v155;
    uint64_t v33 = v156;
    LOBYTE(v32) = sub_1D7660DB0();
    if (qword_1EA82AA08 == -1)
    {
LABEL_40:
      uint64_t v56 = qword_1EA82C0B0;
      os_log_type_t v57 = v32;
      if (os_log_type_enabled((os_log_t)qword_1EA82C0B0, (os_log_type_t)v32))
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v58 = OUTLINED_FUNCTION_40_0();
        uint64_t v21 = OUTLINED_FUNCTION_38_0();
        uint64_t v147 = (void *)v21;
        *(_DWORD *)uint64_t v58 = 136446466;
        OUTLINED_FUNCTION_4_3();
        uint64_t v59 = (uint64_t)v22;
        uint64_t v60 = *(void *)(v25 + 16);
        unint64_t v61 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1D758DBE8(v60, v61, (uint64_t *)&v147);
        OUTLINED_FUNCTION_33_0(v62);
        sub_1D7661020();
        swift_release();
        uint64_t v22 = (uint64_t *)v59;
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 12) = 2080;
        uint64_t v155 = (uint64_t *)v59;
        uint64_t v156 = v33;
        sub_1D75B0D60();
        uint64_t v63 = sub_1D7661620();
        uint64_t v155 = (uint64_t *)sub_1D758DBE8(v63, v64, (uint64_t *)&v147);
        uint64_t v25 = (uint64_t)v146;
        sub_1D7661020();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D757C000, v56, v57, "%{public}s: %s", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      uint64_t v65 = *(void **)(v25 + 104);
      long long v66 = (void *)OUTLINED_FUNCTION_45_3();
      uint64_t v67 = v143;
      uint64_t v68 = v144;
      v66[2] = v143;
      v66[3] = v68;
      uint64_t v66[4] = v22;
      v66[5] = v33;
      uint64_t v159 = sub_1D75FDF10;
      BOOL v160 = v66;
      uint64_t v155 = (uint64_t *)MEMORY[0x1E4F143A8];
      OUTLINED_FUNCTION_29_4(COERCE_DOUBLE(1107296256));
      uint64_t v157 = sub_1D75D6460;
      uint64_t v158 = &block_descriptor_84;
      uint64_t v69 = _Block_copy(&v155);
      id v145 = (id)OUTLINED_FUNCTION_15_6((uint64_t)v69, (uint64_t)&a14);
      uint64_t v146 = &v135;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v70);
      OUTLINED_FUNCTION_1_7();
      uint64_t v73 = v72 - v71;
      sub_1D75A74B4(v67);
      id v74 = v65;
      sub_1D7660930();
      sub_1D7660910();
      uint64_t v141 = &v135;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v75);
      OUTLINED_FUNCTION_52();
      uint64_t v147 = (void *)MEMORY[0x1E4FBC860];
      sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
      sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
      sub_1D7661090();
      uint64_t v76 = v142;
      MEMORY[0x1D9473560](0, v73, v21, v142);
      _Block_release(v76);
      OUTLINED_FUNCTION_39_2();

      sub_1D75940A4(v67);
      uint64_t v77 = OUTLINED_FUNCTION_28_3();
      v78(v77);
      OUTLINED_FUNCTION_26_2();
      v79();
LABEL_54:
      swift_release();
      goto LABEL_55;
    }
LABEL_64:
    swift_once();
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_4_3();
  if (!*(void *)(v20[19] + 16))
  {
    sub_1D75940A4(v26);
    swift_unknownObjectRelease();
    goto LABEL_55;
  }
  uint64_t v137 = ObjectType;
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_5();
  uint64_t v138 = (uint64_t)(v20 + 19);
  uint64_t v141 = (uint64_t *)sub_1D75F7A64();
  uint64_t v139 = v28;
  uint64_t v140 = (uint64_t *)v29;
  uint64_t v142 = (const void *)v30;
  swift_endAccess();
  sub_1D765FD20();
  swift_allocObject();
  uint64_t v151 = 0x200000000000;
  unint64_t v152 = sub_1D765FCF0() | 0x4000000000000000;
  id v145 = v20 + 20;
  while (2)
  {
    swift_retain();
    uint64_t v31 = sub_1D75FCD38(&v151, v25, 0x2000);
    uint64_t v32 = v31;
    if (v31 <= 0)
    {
      if (v31 < 0)
      {
        uint64_t v101 = sub_1D765FC50();
        OUTLINED_FUNCTION_0_5();
        uint64_t v103 = v102;
        MEMORY[0x1F4188790](v104);
        OUTLINED_FUNCTION_12_6();
        id v145 = (id)sub_1D765FC40();
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v32, v101);
      }
      else
      {
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        sub_1D7661690();
        uint64_t v147 = v155;
        unint64_t v148 = v156;
        sub_1D75B0D60();
        id v145 = (id)OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_0();
        sub_1D76616A0();
      }
      os_log_type_t v105 = sub_1D7660DB0();
      uint64_t v106 = (uint64_t)v142;
      if (qword_1EA82AA08 != -1) {
        swift_once();
      }
      uint64_t v107 = qword_1EA82C0B0;
      if (os_log_type_enabled((os_log_t)qword_1EA82C0B0, v105))
      {
        id v108 = v145;
        id v109 = v145;
        swift_retain();
        id v110 = v145;
        uint64_t v111 = OUTLINED_FUNCTION_40_0();
        uint64_t v138 = OUTLINED_FUNCTION_38_0();
        uint64_t v155 = (uint64_t *)v138;
        *(_DWORD *)uint64_t v111 = 136446466;
        OUTLINED_FUNCTION_4_3();
        uint64_t v113 = *(void *)(v25 + 16);
        unint64_t v112 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        uint64_t v149 = sub_1D758DBE8(v113, v112, (uint64_t *)&v155);
        uint64_t v22 = &v150;
        sub_1D7661020();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v111 + 12) = 2080;
        uint64_t v136 = (uint64_t *)(v111 + 14);
        swift_getErrorValue();
        LODWORD(v137) = v105;
        OUTLINED_FUNCTION_0_11();
        uint64_t v115 = v114;
        MEMORY[0x1F4188790](v116);
        (*(void (**)(char *))(v115 + 16))((char *)&v135 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
        uint64_t v118 = sub_1D7661620();
        unint64_t v120 = v119;
        OUTLINED_FUNCTION_26_2();
        v121();
        uint64_t v25 = (uint64_t)v146;
        uint64_t v149 = sub_1D758DBE8(v118, v120, (uint64_t *)&v155);
        sub_1D7661020();
        swift_bridgeObjectRelease();

        uint64_t v122 = v108;
        uint64_t v106 = (uint64_t)v142;

        _os_log_impl(&dword_1D757C000, v107, (os_log_type_t)v137, "%{public}s: Connection receive error: %s", (uint8_t *)v111, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      uint64_t v123 = *(void **)(v25 + 104);
      uint64_t v124 = (void *)OUTLINED_FUNCTION_46_1();
      uint64_t v125 = v139;
      v124[2] = v141;
      v124[3] = v125;
      v124[4] = v140;
      v124[5] = v106;
      id v126 = v145;
      v124[6] = v145;
      id v145 = v126;
      uint64_t v159 = sub_1D75FDC1C;
      BOOL v160 = v124;
      uint64_t v155 = (uint64_t *)MEMORY[0x1E4F143A8];
      OUTLINED_FUNCTION_29_4(COERCE_DOUBLE(1107296256));
      uint64_t v157 = sub_1D75D6460;
      uint64_t v158 = &block_descriptor_90;
      uint64_t v127 = _Block_copy(&v155);
      uint64_t v142 = (const void *)OUTLINED_FUNCTION_15_6((uint64_t)v127, (uint64_t)&a12);
      uint64_t v146 = &v135;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v128);
      OUTLINED_FUNCTION_9();
      id v129 = v126;
      id v130 = v123;
      swift_retain();
      sub_1D7660930();
      sub_1D7660910();
      uint64_t v141 = &v135;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v131);
      OUTLINED_FUNCTION_3_13();
      uint64_t v149 = MEMORY[0x1E4FBC860];
      sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
      sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
      sub_1D7661090();
      uint64_t v132 = v140;
      MEMORY[0x1D9473560](0, v107, v22, v140);
      _Block_release(v132);
      swift_release();
      OUTLINED_FUNCTION_39_2();

      sub_1D75940A4(v143);
      OUTLINED_FUNCTION_26_2();
      v133();
      OUTLINED_FUNCTION_27_3();
      v134();
      sub_1D75933F0(v151, v152);
      goto LABEL_54;
    }
    uint64_t v33 = v151;
    uint64_t v22 = (uint64_t *)v152;
    unint64_t v34 = v152 >> 62;
    uint64_t v21 = 0;
    uint64_t v25 = v151 >> 32;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    switch(v152 >> 62)
    {
      case 1uLL:
        sub_1D75934F4(v151, v152);
        if (v25 < (int)v33) {
          goto LABEL_58;
        }
        uint64_t v21 = v33 >> 32;
        uint64_t v35 = (int)v33;
        uint64_t v36 = v33 >> 32;
        uint64_t v37 = (int)v33;
        goto LABEL_13;
      case 2uLL:
        uint64_t v35 = *(void *)(v151 + 16);
        uint64_t v21 = *(void *)(v151 + 24);
        sub_1D75934F4(v151, v152);
        if (v21 < v35)
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        uint64_t v37 = *(void *)(v33 + 16);
        uint64_t v36 = *(void *)(v33 + 24);
LABEL_13:
        if (v36 < v21 || v21 < v37) {
          goto LABEL_59;
        }
        uint64_t v39 = v21 - v35;
        if (__OFSUB__(v21, v35)) {
          goto LABEL_60;
        }
        if ((v39 & 0x8000000000000000) == 0 && v39 < v32)
        {
          switch((int)v34)
          {
            case 1:
              uint64_t v40 = v33 >> 32;
              goto LABEL_33;
            case 2:
              uint64_t v40 = *(void *)(v33 + 24);
              goto LABEL_34;
            default:
              goto LABEL_36;
          }
        }
        uint64_t v40 = v35 + v32;
        if (__OFADD__(v35, v32)) {
          goto LABEL_62;
        }
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        switch((int)v34)
        {
          case 1:
            uint64_t v41 = v33 >> 32;
            uint64_t v42 = (int)v33;
            break;
          case 2:
            uint64_t v42 = *(void *)(v33 + 16);
            uint64_t v41 = *(void *)(v33 + 24);
            break;
          case 3:
            break;
          default:
            uint64_t v42 = 0;
            uint64_t v41 = BYTE6(v22);
            break;
        }
        if (v41 < v40 || v40 < v42) {
          goto LABEL_63;
        }
        uint64_t v44 = 0;
        switch((int)v34)
        {
          case 1:
LABEL_33:
            uint64_t v44 = (int)v33;
            break;
          case 2:
LABEL_34:
            uint64_t v44 = *(void *)(v33 + 16);
            break;
          default:
            break;
        }
        if (v40 < v44) {
          goto LABEL_61;
        }
LABEL_36:
        uint64_t v45 = sub_1D765FE70();
        unint64_t v47 = v46;
        sub_1D75933F0(v33, (unint64_t)v22);
        OUTLINED_FUNCTION_5();
        sub_1D765FF10();
        swift_endAccess();
        uint64_t v48 = sub_1D75933F0(v45, v47);
        uint64_t v25 = (uint64_t)v146;
        if (((uint64_t (*)(uint64_t))v146[5])(v48) > 0) {
          continue;
        }
        OUTLINED_FUNCTION_25_2();
        OUTLINED_FUNCTION_36();
        uint64_t v49 = sub_1D765FF00();
        uint64_t v50 = OUTLINED_FUNCTION_36();
        sub_1D75933F0(v50, v51);
        if (v49 < (uint64_t)v141)
        {
          OUTLINED_FUNCTION_5();
          swift_retain();
          uint64_t v52 = OUTLINED_FUNCTION_40_1();
          sub_1D75FD3FC(v52, v53, (uint64_t)v141, v139, (uint64_t)v140, (uint64_t)v142);
          swift_endAccess();
          swift_release();
          OUTLINED_FUNCTION_39_2();
          OUTLINED_FUNCTION_36_3();
          uint64_t v54 = v33;
          unint64_t v55 = (unint64_t)v22;
          goto LABEL_57;
        }
        OUTLINED_FUNCTION_25_2();
        uint64_t v80 = v139;
        sub_1D75F7BF0(v139, v47, (unint64_t)v141, (uint64_t *)&v155);
        uint64_t v81 = v155;
        unint64_t v82 = v156;
        OUTLINED_FUNCTION_25_2();
        uint64_t v83 = sub_1D765FF00();
        sub_1D75F7D7C(v83, v47, (unint64_t)v141, (uint64_t *)&v155);
        uint64_t v84 = sub_1D75F6050((uint64_t)v155, v156);
        sub_1D75F64BC(v84, v85);
        uint64_t v86 = (void *)v146[13];
        uint64_t v87 = (void *)swift_allocObject();
        v87[2] = v141;
        v87[3] = v80;
        uint64_t v88 = (uint64_t)v142;
        v87[4] = v140;
        v87[5] = v88;
        v87[6] = v81;
        v87[7] = v82;
        uint64_t v159 = sub_1D75FDC8C;
        BOOL v160 = v87;
        uint64_t v155 = (uint64_t *)MEMORY[0x1E4F143A8];
        uint64_t v156 = 1107296256;
        uint64_t v157 = sub_1D75D6460;
        uint64_t v158 = &block_descriptor_96;
        uint64_t v89 = _Block_copy(&v155);
        uint64_t v139 = OUTLINED_FUNCTION_15_6((uint64_t)v89, (uint64_t)&a10);
        uint64_t v140 = &v135;
        OUTLINED_FUNCTION_0_5();
        MEMORY[0x1F4188790](v90);
        OUTLINED_FUNCTION_3_13();
        swift_retain();
        id v91 = v86;
        id v145 = v81;
        uint64_t v141 = (uint64_t *)v82;
        sub_1D75934F4((uint64_t)v81, v82);
        sub_1D7660930();
        uint64_t v92 = sub_1D7660910();
        uint64_t v136 = &v135;
        OUTLINED_FUNCTION_0_5();
        uint64_t v94 = v93;
        MEMORY[0x1F4188790](v95);
        OUTLINED_FUNCTION_1_7();
        uint64_t v98 = v97 - v96;
        uint64_t v147 = (void *)MEMORY[0x1E4FBC860];
        sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
        sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
        sub_1D7661090();
        uint64_t v99 = (const void *)v138;
        MEMORY[0x1D9473560](0, v22, v98, v138);
        _Block_release(v99);

        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v98, v92);
        OUTLINED_FUNCTION_26_2();
        v100();
        swift_release();
        if (*(void *)(v146[19] + 16))
        {
          sub_1D75933F0(v151, v152);
          sub_1D75940A4(v143);
          OUTLINED_FUNCTION_30_4();
          OUTLINED_FUNCTION_39_2();
          goto LABEL_54;
        }
        sub_1D7660F60();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_30_4();
        swift_release();
        OUTLINED_FUNCTION_36_3();
        uint64_t v54 = v151;
        unint64_t v55 = v152;
LABEL_57:
        sub_1D75933F0(v54, v55);
LABEL_55:
        OUTLINED_FUNCTION_84();
        return;
      case 3uLL:
        goto LABEL_13;
      default:
        uint64_t v35 = 0;
        uint64_t v37 = 0;
        uint64_t v21 = BYTE6(v152);
        uint64_t v36 = BYTE6(v152);
        goto LABEL_13;
    }
  }
}

uint64_t sub_1D75F7A64()
{
  if (*(void *)(*(void *)v0 + 16))
  {
    uint64_t v1 = *(void *)(*(void *)v0 + 32);
    swift_retain();
    sub_1D75FD52C(0, 1);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D75F7ACC(uint64_t a1, uint64_t a2, void (*a3)(void *, void, uint64_t))
{
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D76616A0();
  sub_1D75B0D60();
  uint64_t v4 = (void *)swift_allocError();
  sub_1D7660350();
  swift_bridgeObjectRelease();
  a3(v4, 0, 1);
}

uint64_t sub_1D75F7BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    JUMPOUT(0x1D75F7D4CLL);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5)
  {
    case 1uLL:
      uint64_t v9 = a2 >> 32;
      uint64_t v10 = (int)a2;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1D75FDA0C(v10, a1, v9, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = v11;
    uint64_t v14 = 0;
    switch((int)v5)
    {
      case 0:
      case 3:
        goto LABEL_13;
      case 1:
        goto LABEL_10;
      case 2:
        goto LABEL_12;
      default:
        goto LABEL_17;
    }
  }
  switch((int)v5)
  {
    case 0:
    case 3:
      goto LABEL_14;
    case 1:
      uint64_t v13 = a2 >> 32;
LABEL_10:
      uint64_t v14 = (int)a2;
      goto LABEL_13;
    case 2:
      uint64_t v13 = *(void *)(a2 + 24);
LABEL_12:
      uint64_t v14 = *(void *)(a2 + 16);
LABEL_13:
      if (v13 < v14) {
        goto LABEL_16;
      }
LABEL_14:
      uint64_t v15 = sub_1D765FE70();
      uint64_t v17 = v16;
      uint64_t result = sub_1D75933F0(a2, a3);
      *a4 = v15;
      a4[1] = v17;
      return result;
    default:
LABEL_17:
      JUMPOUT(0);
  }
}

uint64_t sub_1D75F7D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x1D75F7ED8);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1D75FDA0C(v10, a1, v9, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 0:
        uint64_t v13 = BYTE6(a3);
        goto LABEL_12;
      case 1:
        uint64_t v13 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        goto LABEL_12;
      case 3:
LABEL_12:
        if (v13 < v11) {
          __break(1u);
        }
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  switch((int)v5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
LABEL_14:
      uint64_t v14 = sub_1D765FE70();
      uint64_t v16 = v15;
      uint64_t result = sub_1D75933F0(a2, a3);
      *a4 = v14;
      a4[1] = v16;
      return result;
    default:
LABEL_16:
      JUMPOUT(0);
  }
}

void sub_1D75F7F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_97();
  a19 = v24;
  a20 = v25;
  uint64_t v26 = v21;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  uint64_t v27 = v21[18];
  if (!v27) {
    goto LABEL_19;
  }
  uint64_t v28 = v21[14];
  if (!v28) {
    goto LABEL_19;
  }
  uint64_t v29 = (void *)v21[15];
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1D75A74B4(v28);
  unint64_t v31 = sub_1D7660F30();
  if ((v31 & 0x8000000000000000) != 0)
  {
    uint64_t v32 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  uint64_t v32 = v31;
  if (!v31)
  {
    sub_1D75AF4C0();
    OUTLINED_FUNCTION_0();
    sub_1D7661690();
    uint64_t v127 = (void *)v130[1];
    unint64_t v128 = v130[2];
    sub_1D76616A0();
    uint64_t v39 = (uint64_t)v131;
    unint64_t v40 = v132;
    os_log_type_t v41 = sub_1D7660DB0();
    if (qword_1EA82AA08 != -1) {
      swift_once();
    }
    uint64_t v125 = v27;
    uint64_t v42 = qword_1EA82C0B0;
    uint64_t v126 = v28;
    if (os_log_type_enabled((os_log_t)qword_1EA82C0B0, v41))
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v43 = OUTLINED_FUNCTION_40_0();
      uint64_t ObjectType = OUTLINED_FUNCTION_38_0();
      uint64_t v127 = (void *)ObjectType;
      *(_DWORD *)uint64_t v43 = 136446466;
      OUTLINED_FUNCTION_4_3();
      uint64_t v124 = v29;
      uint64_t v44 = v26[2];
      unint64_t v45 = v26[3];
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1D758DBE8(v44, v45, (uint64_t *)&v127);
      OUTLINED_FUNCTION_33_0(v46);
      sub_1D7661020();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v131 = (void *)v39;
      unint64_t v132 = v40;
      sub_1D75B0D60();
      uint64_t v47 = sub_1D7661620();
      uint64_t v131 = (void *)sub_1D758DBE8(v47, v48, (uint64_t *)&v127);
      uint64_t v29 = v124;
      sub_1D7661020();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v42, v41, "%{public}s: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v28 = v126;
      OUTLINED_FUNCTION_1();
    }
    uint64_t v49 = (void *)v26[13];
    uint64_t v50 = (void *)OUTLINED_FUNCTION_45_3();
    v50[2] = v28;
    void v50[3] = v29;
    v50[4] = v39;
    v50[5] = v40;
    uint64_t v135 = sub_1D75FC84C;
    uint64_t v136 = v50;
    uint64_t v131 = (void *)MEMORY[0x1E4F143A8];
    OUTLINED_FUNCTION_29_4(COERCE_DOUBLE(1107296256));
    uint64_t v133 = sub_1D75D6460;
    uint64_t v134 = &block_descriptor_65;
    unint64_t v51 = _Block_copy(&v131);
    uint64_t v123 = OUTLINED_FUNCTION_15_6((uint64_t)v51, (uint64_t)&a17);
    uint64_t v124 = v115;
    OUTLINED_FUNCTION_0_5();
    MEMORY[0x1F4188790](v52);
    OUTLINED_FUNCTION_9();
    sub_1D75A74B4(v28);
    id v53 = v49;
    sub_1D7660930();
    uint64_t v54 = sub_1D7660910();
    uint64_t v121 = v115;
    OUTLINED_FUNCTION_0_5();
    uint64_t v56 = v55;
    MEMORY[0x1F4188790](v57);
    OUTLINED_FUNCTION_3_13();
    uint64_t v127 = (void *)MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    uint64_t v58 = v122;
    MEMORY[0x1D9473560](0, v26, ObjectType, v122);
    _Block_release(v58);
    swift_unknownObjectRelease();

    sub_1D75940A4(v126);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(ObjectType, v54);
    OUTLINED_FUNCTION_27_3();
    v59();
    goto LABEL_18;
  }
  if (v31 >= 0x401)
  {
LABEL_6:
    uint64_t v33 = v21 + 22;
    OUTLINED_FUNCTION_4_3();
    if (!*(void *)(v26[22] + 16))
    {
      sub_1D75940A4(v28);
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_5();
    unint64_t v34 = (void *)*v33;
    if (*(void *)(*v33 + 16))
    {
      uint64_t v20 = v34[4];
      unint64_t v22 = v34[5];
      uint64_t v23 = v34[7];
      uint64_t v122 = (void *)v34[6];
      sub_1D75934F4(v20, v22);
      swift_retain();
      sub_1D75FD75C(0, 1);
      swift_endAccess();
      uint64_t v35 = sub_1D765FF00();
      if (v32 - 1024 >= v35) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = v32 - 1024;
      }
      uint64_t v126 = v28;
      uint64_t v123 = v23;
      switch(v22 >> 62)
      {
        case 1uLL:
          uint64_t v23 = v20 >> 32;
          if (v20 >> 32 < (int)v20)
          {
            __break(1u);
            JUMPOUT(0x1D75F8F48);
          }
          uint64_t v125 = (int)v20;
          swift_retain();
          sub_1D75934F4(v20, v22);
          uint64_t v61 = sub_1D75FC9F0((int)v20, v20 >> 32, v22 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v26, v36);
          sub_1D75933F0(v20, v22);
          uint64_t v28 = v126;
          OUTLINED_FUNCTION_31_2();
          break;
        case 2uLL:
          uint64_t v23 = v22;
          uint64_t v62 = *(void *)(v20 + 24);
          uint64_t v125 = *(void *)(v20 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v63 = v62;
          uint64_t v28 = v126;
          uint64_t v61 = sub_1D75FC9F0(v125, v63, v22 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v26, v36);
          OUTLINED_FUNCTION_31_2();
          swift_release();
          swift_release();
          break;
        case 3uLL:
          swift_retain();
          uint64_t v37 = OUTLINED_FUNCTION_40_1();
          goto LABEL_28;
        default:
          uint64_t v23 = v20;
          swift_retain();
          OUTLINED_FUNCTION_31_2();
LABEL_28:
          uint64_t v61 = sub_1D75FC86C(v37, v38, (uint64_t)v26, v36);
          break;
      }
      if (v61 > 0)
      {
        if (v61 >= sub_1D765FF00())
        {
          uint64_t v124 = v29;
          uint64_t v125 = v27;
          uint64_t v68 = (void *)v26[13];
          uint64_t v69 = (void *)OUTLINED_FUNCTION_45_3();
          v69[2] = v20;
          v69[3] = v22;
          v69[4] = v122;
          v69[5] = v23;
          uint64_t v135 = sub_1D75FD8EC;
          uint64_t v136 = v69;
          uint64_t v131 = (void *)MEMORY[0x1E4F143A8];
          OUTLINED_FUNCTION_29_4(COERCE_DOUBLE(1107296256));
          uint64_t v133 = sub_1D75D6460;
          uint64_t v134 = &block_descriptor_77;
          uint64_t v70 = _Block_copy(&v131);
          id v120 = (id)OUTLINED_FUNCTION_15_6((uint64_t)v70, (uint64_t)&a13);
          uint64_t v122 = v115;
          OUTLINED_FUNCTION_0_5();
          MEMORY[0x1F4188790](v20);
          OUTLINED_FUNCTION_30();
          uint64_t v121 = (void *)v71;
          sub_1D75934F4(v71, v22);
          swift_retain();
          uint64_t v116 = v68;
          sub_1D7660930();
          sub_1D7660910();
          uint64_t v117 = v115;
          OUTLINED_FUNCTION_0_5();
          MEMORY[0x1F4188790](v72);
          OUTLINED_FUNCTION_52();
          uint64_t v127 = (void *)MEMORY[0x1E4FBC860];
          sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
          unint64_t v119 = v22;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
          sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
          sub_1D7661090();
          os_log_t v73 = v118;
          id v74 = v116;
          MEMORY[0x1D9473560](0, v27, v28, v118);
          _Block_release(v73);

          OUTLINED_FUNCTION_42_1();
          v75();
          OUTLINED_FUNCTION_27_3();
          v76();
          OUTLINED_FUNCTION_38_2();
          swift_release();
          if (!*(void *)(v26[22] + 16)) {
            sub_1D7660F60();
          }
          sub_1D75940A4(v126);
          OUTLINED_FUNCTION_10_6();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1D75934F4(v20, v22);
          sub_1D75F7D7C(v61, v20, v22, (uint64_t *)&v131);
          uint64_t v64 = (uint64_t)v131;
          unint64_t v65 = v132;
          OUTLINED_FUNCTION_5();
          sub_1D75934F4(v64, v65);
          swift_retain();
          sub_1D75934F4(v64, v65);
          swift_retain();
          uint64_t v66 = OUTLINED_FUNCTION_40_1();
          sub_1D75FD62C(v66, v67, v64, v65, (uint64_t)v122, v23);
          swift_endAccess();
          sub_1D75933F0(v64, v65);
          sub_1D75933F0(v64, v65);
          swift_release();
          sub_1D75940A4(v28);
          sub_1D75933F0(v20, v22);
          swift_unknownObjectRelease();
        }
LABEL_18:
        swift_release();
LABEL_19:
        OUTLINED_FUNCTION_84();
        return;
      }
      if (v61 < 0)
      {
        sub_1D765FC50();
        uint64_t v23 = v20;
        OUTLINED_FUNCTION_0_5();
        uint64_t ObjectType = v22;
        MEMORY[0x1F4188790](v77);
        OUTLINED_FUNCTION_12_6();
        id v120 = (id)sub_1D765FC40();
        OUTLINED_FUNCTION_42_1();
        v78();
        OUTLINED_FUNCTION_31_2();
      }
      else
      {
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        sub_1D7661690();
        uint64_t v127 = v131;
        unint64_t v128 = v132;
        sub_1D75B0D60();
        id v120 = (id)OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_0();
        sub_1D76616A0();
      }
      LOBYTE(v33) = sub_1D7660DB0();
      if (qword_1EA82AA08 == -1)
      {
LABEL_38:
        uint64_t v121 = (void *)v20;
        uint64_t v124 = v29;
        uint64_t v125 = v27;
        uint64_t v79 = qword_1EA82C0B0;
        unint64_t v119 = v22;
        if (os_log_type_enabled((os_log_t)qword_1EA82C0B0, (os_log_type_t)v33))
        {
          os_log_t v118 = v79;
          id v80 = v120;
          id v81 = v120;
          swift_retain();
          id v82 = v120;
          uint64_t ObjectType = OUTLINED_FUNCTION_40_0();
          uint64_t v117 = (void *)OUTLINED_FUNCTION_38_0();
          uint64_t v131 = v117;
          *(_DWORD *)uint64_t ObjectType = 136446466;
          LODWORD(v116) = v33;
          OUTLINED_FUNCTION_4_3();
          swift_bridgeObjectRetain();
          uint64_t v83 = OUTLINED_FUNCTION_41_1();
          uint64_t v129 = sub_1D758DBE8(v83, v84, v85);
          v115[1] = v130;
          sub_1D7661020();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(ObjectType + 12) = 2080;
          v115[0] = ObjectType + 14;
          swift_getErrorValue();
          OUTLINED_FUNCTION_0_11();
          uint64_t v87 = v86;
          MEMORY[0x1F4188790](v88);
          OUTLINED_FUNCTION_52();
          (*(void (**)(uint64_t))(v87 + 16))(v28);
          uint64_t v89 = sub_1D7661620();
          unint64_t v91 = v90;
          OUTLINED_FUNCTION_42_1();
          v94(v92, v93);
          uint64_t v129 = sub_1D758DBE8(v89, v91, (uint64_t *)&v131);
          sub_1D7661020();
          unint64_t v22 = v119;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1D757C000, v118, (os_log_type_t)v116, "%{public}s: Connection send error: %s", (uint8_t *)ObjectType, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        uint64_t v95 = (void *)v26[13];
        uint64_t v96 = (void *)OUTLINED_FUNCTION_46_1();
        v96[2] = v121;
        v96[3] = v22;
        v96[4] = v122;
        v96[5] = v23;
        id v97 = v120;
        v96[6] = v120;
        id v120 = v97;
        uint64_t v135 = sub_1D75FD89C;
        uint64_t v136 = v96;
        uint64_t v131 = (void *)MEMORY[0x1E4F143A8];
        OUTLINED_FUNCTION_29_4(COERCE_DOUBLE(1107296256));
        uint64_t v133 = sub_1D75D6460;
        uint64_t v134 = &block_descriptor_71;
        uint64_t v98 = _Block_copy(&v131);
        os_log_t v118 = (os_log_t)OUTLINED_FUNCTION_15_6((uint64_t)v98, (uint64_t)&a12);
        uint64_t v122 = v115;
        OUTLINED_FUNCTION_0_5();
        MEMORY[0x1F4188790](v99);
        OUTLINED_FUNCTION_3_13();
        uint64_t v100 = OUTLINED_FUNCTION_41_1();
        sub_1D75934F4(v100, v101);
        swift_retain();
        id v102 = v97;
        id v103 = v95;
        sub_1D7660930();
        sub_1D7660910();
        uint64_t v116 = v115;
        OUTLINED_FUNCTION_0_5();
        MEMORY[0x1F4188790](v104);
        OUTLINED_FUNCTION_1_7();
        uint64_t v107 = v106 - v105;
        uint64_t v129 = MEMORY[0x1E4FBC860];
        sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
        sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
        sub_1D7661090();
        id v108 = v117;
        MEMORY[0x1D9473560](0, ObjectType, v107, v117);
        _Block_release(v108);
        swift_unknownObjectRelease();

        OUTLINED_FUNCTION_10_6();
        swift_release();
        sub_1D75940A4(v126);

        OUTLINED_FUNCTION_41_1();
        OUTLINED_FUNCTION_42_1();
        v111(v109, v110);
        OUTLINED_FUNCTION_26_2();
        v114(v112, v113);
        OUTLINED_FUNCTION_38_2();
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_38;
  }
  sub_1D75940A4(v28);
  OUTLINED_FUNCTION_84();
  swift_unknownObjectRelease();
}

void sub_1D75F8F58(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D75B0D60();
  uint64_t v7 = (void *)swift_allocError();
  *uint64_t v8 = a3;
  v8[1] = a4;
  v10[0] = v7;
  sub_1D75FDB84((uint64_t)v10);
  sub_1D75D4E0C((uint64_t)v10, (uint64_t)v9);
  swift_bridgeObjectRetain();
  a1(v9);
}

void sub_1D75F8FF8(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D76616A0();
  sub_1D75B0D60();
  uint64_t v4 = (void *)swift_allocError();
  sub_1D7660350();
  swift_bridgeObjectRelease();
  a3(v4);
}

void sub_1D75F9114()
{
  OUTLINED_FUNCTION_97();
  OS_dispatch_queue.assertOnQueueHierarchy()();
  uint64_t v3 = v0[11];
  if (v3 && !v0[17] && !v0[18])
  {
    uint64_t v4 = v0[12];
    swift_retain();
    uint64_t v5 = OUTLINED_FUNCTION_40_1();
    sub_1D75F6480(v5, v6);
    uint64_t v7 = (void *)v0[13];
    uint64_t v8 = OUTLINED_FUNCTION_33();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    v17[0] = v4;
    v22[4] = sub_1D75E0530;
    v22[5] = v8;
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 1107296256;
    v22[2] = sub_1D75D6460;
    void v22[3] = &block_descriptor_59;
    unint64_t v18 = _Block_copy(v22);
    uint64_t v19 = sub_1D7660950();
    uint64_t v20 = v17;
    OUTLINED_FUNCTION_0_5();
    uint64_t v10 = v9;
    MEMORY[0x1F4188790](v11);
    OUTLINED_FUNCTION_30();
    sub_1D75A74B4(v3);
    id v12 = v7;
    sub_1D7660930();
    sub_1D7660910();
    v17[1] = v17;
    OUTLINED_FUNCTION_0_5();
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_52();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    uint64_t v14 = v18;
    MEMORY[0x1D9473560](0, v1, v2, v18);
    _Block_release(v14);

    sub_1D75940A4(v3);
    uint64_t v15 = OUTLINED_FUNCTION_28_3();
    v16(v15);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v19);
    swift_release();
  }
  OUTLINED_FUNCTION_84();
}

uint64_t SecureSocketDataTransport.deinit()
{
  sub_1D75FB518();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1D75940A4(*(void *)(v0 + 88));

  sub_1D75940A4(*(void *)(v0 + 112));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D75933F0(*(void *)(v0 + 160), *(void *)(v0 + 168));
  swift_bridgeObjectRelease();
  sub_1D758C650(v0 + 192, &qword_1EBDEC180);
  return v0;
}

uint64_t SecureSocketDataTransport.__deallocating_deinit()
{
  SecureSocketDataTransport.deinit();
  return MEMORY[0x1F4186488](v0, 233, 7);
}

uint64_t sub_1D75F944C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (void *)OUTLINED_FUNCTION_45_3();
  void v8[2] = v4;
  v8[3] = a1;
  void v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = OUTLINED_FUNCTION_33();
  *(void *)(v9 + 16) = sub_1D75FC1C8;
  *(void *)(v9 + 24) = v8;
  v16[4] = sub_1D75D4F9C;
  v16[5] = v9;
  v16[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_44_1();
  void v16[2] = sub_1D75E38AC;
  void v16[3] = &block_descriptor_7;
  uint64_t v10 = _Block_copy(v16);
  swift_retain();
  id v11 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  id v12 = OUTLINED_FUNCTION_41_1();
  dispatch_sync(v12, v13);
  _Block_release(v10);
  char v14 = OUTLINED_FUNCTION_43_1();
  swift_release();
  uint64_t result = swift_release();
  if (v14) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75F95A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v88 = (void *)a4;
  if (*(void *)(a1 + 112) || (int v31 = *(_DWORD *)(a1 + 32), v31 == -1))
  {
    uint64_t v85 = a2;
    sub_1D75AF4C0();
    sub_1D7661690();
    uint64_t v89 = aBlock;
    uint64_t v90 = v93;
    sub_1D75B0D60();
    uint64_t v6 = (void *)swift_allocError();
    sub_1D76616A0();
    id v7 = v6;
    os_log_type_t v8 = sub_1D7660DB0();
    if (qword_1EA82AA08 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_1EA82C0B0;
    os_log_type_t v10 = v8;
    if (os_log_type_enabled((os_log_t)qword_1EA82C0B0, v8))
    {
      id v11 = v6;
      swift_retain();
      id v12 = v6;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t aBlock = v14;
      *(_DWORD *)uint64_t v13 = 136446466;
      swift_beginAccess();
      uint64_t v15 = *(void *)(a1 + 16);
      unint64_t v16 = *(void *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_1D758DBE8(v15, v16, &aBlock);
      uint64_t v87 = (void *)a3;
      sub_1D7661020();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v17 = sub_1D7661620();
      uint64_t v91 = sub_1D758DBE8(v17, v18, &aBlock);
      a3 = (uint64_t)v87;
      sub_1D7661020();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D757C000, v9, v10, "%{public}s: Unable to start transport: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v14, -1, -1);
      MEMORY[0x1D9474C60](v13, -1, -1);
    }
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v20 = (uint64_t)v88;
    void v19[2] = a3;
    void v19[3] = v20;
    v19[4] = v6;
    uint64_t v96 = sub_1D75FDED4;
    id v97 = v19;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_152;
    uint64_t v21 = _Block_copy(&aBlock);
    uint64_t v86 = sub_1D7660950();
    uint64_t v87 = v69;
    uint64_t v22 = *(void *)(v86 - 8);
    MEMORY[0x1F4188790](v86);
    uint64_t v24 = (char *)v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    id v25 = v6;
    sub_1D7660930();
    uint64_t v26 = sub_1D7660910();
    uint64_t v88 = v69;
    uint64_t v27 = v6;
    uint64_t v28 = *(void *)(v26 - 8);
    MEMORY[0x1F4188790](v26);
    uint64_t v30 = (char *)v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v91 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    MEMORY[0x1D9473560](0, v24, v30, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v86);
  }
  else
  {
    id v75 = a2;
    sub_1D75F648C((uint64_t)v75);
    swift_retain();
    sub_1D75F6498(a3, (uint64_t)v88);
    os_log_t v73 = (void *)sub_1D75AEF50(0, &qword_1EA82C2E0);
    uint64_t v72 = *(void **)(a1 + 128);
    uint64_t v32 = sub_1D7660EE0();
    swift_getObjectType();
    uint64_t v87 = (void *)a3;
    uint64_t v96 = sub_1D75FDE30;
    id v97 = (void *)a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    id v81 = &v94;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_131;
    uint64_t v33 = _Block_copy(&aBlock);
    uint64_t v70 = v69;
    int v71 = v31;
    uint64_t v34 = sub_1D7660950();
    uint64_t v78 = v34;
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v86 = *(void *)(v35 + 64);
    MEMORY[0x1F4188790](v34);
    unint64_t v76 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v37 = (char *)v69 - v76;
    swift_retain();
    sub_1D760ABDC();
    uint64_t v38 = sub_1D7660910();
    v69[1] = v69;
    uint64_t v82 = v38;
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v85 = *(void **)(v39 + 64);
    MEMORY[0x1F4188790](v38);
    unint64_t v84 = (v40 + 15) & 0xFFFFFFFFFFFFFFF0;
    os_log_type_t v41 = (char *)v69 - v84;
    sub_1D760ABF4();
    sub_1D7660F10();
    _Block_release(v33);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v39 + 8);
    uint64_t v80 = v39 + 8;
    v79(v41, v38);
    uint64_t v83 = *(void (**)(char *, uint64_t))(v35 + 8);
    v83(v37, v34);
    uint64_t v77 = v35 + 8;
    swift_release();
    uint64_t v96 = sub_1D75FDE34;
    id v97 = (void *)a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_134;
    uint64_t v42 = _Block_copy(&aBlock);
    uint64_t v70 = v69;
    MEMORY[0x1F4188790](v42);
    unint64_t v43 = v76;
    swift_retain();
    uint64_t v44 = sub_1D7660930();
    MEMORY[0x1F4188790](v44);
    unint64_t v45 = (char *)v69 - v84;
    sub_1D75FA508();
    sub_1D7660F20();
    _Block_release(v42);
    uint64_t v46 = v82;
    v79(v45, v82);
    v83((char *)v69 - v43, v78);
    swift_release();
    uint64_t v74 = v32;
    uint64_t v47 = swift_unknownObjectRetain();
    sub_1D75F64A4(v47);
    sub_1D7660F00();
    swift_getObjectType();
    uint64_t v96 = sub_1D75FDE3C;
    id v97 = (void *)a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_137;
    unint64_t v48 = _Block_copy(&aBlock);
    os_log_t v73 = v69;
    MEMORY[0x1F4188790](v48);
    unint64_t v49 = v43;
    swift_retain();
    uint64_t v50 = sub_1D760ABDC();
    uint64_t v72 = v69;
    MEMORY[0x1F4188790](v50);
    unint64_t v51 = (char *)v69 - v84;
    sub_1D760ABF4();
    sub_1D7660F10();
    _Block_release(v48);
    uint64_t v52 = v46;
    id v53 = v79;
    v79(v51, v52);
    uint64_t v54 = (char *)v69 - v43;
    uint64_t v55 = v78;
    v83(v54, v78);
    swift_release();
    uint64_t v96 = sub_1D75FDE40;
    id v97 = (void *)a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_140;
    uint64_t v56 = _Block_copy(&aBlock);
    os_log_t v73 = v69;
    MEMORY[0x1F4188790](v56);
    swift_retain();
    uint64_t v57 = sub_1D7660930();
    MEMORY[0x1F4188790](v57);
    uint64_t v58 = (char *)v69 - v84;
    sub_1D75FA508();
    sub_1D7660F20();
    _Block_release(v56);
    v53(v58, v82);
    uint64_t v59 = v83;
    v83((char *)v69 - v49, v55);
    swift_release();
    uint64_t v60 = swift_unknownObjectRetain();
    sub_1D75F64B0(v60);
    uint64_t v61 = (void *)swift_allocObject();
    uint64_t v62 = (uint64_t)v88;
    void v61[2] = v87;
    v61[3] = v62;
    v61[4] = a1;
    uint64_t v96 = sub_1D75FDE60;
    id v97 = v61;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v93 = 1107296256;
    uint64_t v94 = sub_1D75D6460;
    uint64_t v95 = &block_descriptor_146;
    uint64_t v63 = _Block_copy(&aBlock);
    uint64_t v87 = v69;
    MEMORY[0x1F4188790](v63);
    uint64_t v64 = (char *)v69 - v76;
    swift_retain();
    swift_retain();
    uint64_t v65 = sub_1D7660930();
    MEMORY[0x1F4188790](v65);
    uint64_t v66 = (char *)v69 - v84;
    uint64_t v89 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    uint64_t v67 = v82;
    sub_1D7661090();
    MEMORY[0x1D9473560](0, v64, v66, v63);
    _Block_release(v63);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v79(v66, v67);
    v59(v64, v78);
  }
  return swift_release();
}

void sub_1D75FA470(void (*a1)(unsigned char *), uint64_t a2, void *a3)
{
  v7[0] = a3;
  sub_1D75FDB84((uint64_t)v7);
  sub_1D75D4E0C((uint64_t)v7, (uint64_t)v6);
  id v5 = a3;
  a1(v6);
}

void sub_1D75FA4DC()
{
}

uint64_t sub_1D75FA508()
{
  return sub_1D7661090();
}

void sub_1D75FA5B8()
{
}

uint64_t sub_1D75FA5E4(void (*a1)(unsigned char *), uint64_t a2)
{
  sub_1D75FDEE0(v6);
  sub_1D75D4E0C((uint64_t)v6, (uint64_t)v5);
  a1(v5);
  return sub_1D76013DC((uint64_t)a1, a2);
}

uint64_t sub_1D75FA64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  os_log_type_t v10 = *(NSObject **)(v5 + 128);
  id v11 = (void *)OUTLINED_FUNCTION_46_1();
  void v11[2] = v5;
  v11[3] = a3;
  void v11[4] = a4;
  v11[5] = a1;
  void v11[6] = a2;
  uint64_t v12 = OUTLINED_FUNCTION_33();
  *(void *)(v12 + 16) = sub_1D75FC228;
  *(void *)(v12 + 24) = v11;
  v15[4] = sub_1D75D5480;
  void v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_44_1();
  long long v15[2] = sub_1D75E38AC;
  void v15[3] = &block_descriptor_13;
  uint64_t v13 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = OUTLINED_FUNCTION_43_1();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75FA7AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1[17])
  {
    id v11 = (void *)a1[13];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a3;
    uint64_t v62 = sub_1D75FDDBC;
    uint64_t v63 = (void *)v12;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v59 = 1107296256;
    uint64_t v60 = sub_1D75D6460;
    uint64_t v61 = &block_descriptor_122;
    uint64_t v13 = _Block_copy(&aBlock);
    uint64_t v54 = sub_1D7660950();
    uint64_t v55 = &v50;
    uint64_t v14 = *(void *)(v54 - 8);
    MEMORY[0x1F4188790](v54);
    unint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v17 = v11;
    swift_retain();
    sub_1D7660930();
    uint64_t v18 = sub_1D7660910();
    id v53 = &v50;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18);
    uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v57 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    MEMORY[0x1D9473560](0, v16, v21, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v54);
    return swift_release();
  }
  os_log_type_t v10 = a1 + 19;
  swift_beginAccess();
  if (!*(void *)(a1[19] + 16))
  {
    swift_beginAccess();
    uint64_t v22 = a1[20];
    unint64_t v23 = a1[21];
    swift_unknownObjectRetain();
    sub_1D75934F4(v22, v23);
    uint64_t v24 = sub_1D765FF00();
    sub_1D75933F0(v22, v23);
    if (v24 < a4) {
      goto LABEL_6;
    }
    uint64_t v30 = a1[20];
    unint64_t v31 = a1[21];
    sub_1D75934F4(v30, v31);
    sub_1D75F7BF0(a5, v30, v31, &aBlock);
    uint64_t v33 = aBlock;
    unint64_t v32 = v59;
    uint64_t v34 = a1[20];
    unint64_t v35 = a1[21];
    sub_1D75934F4(v34, v35);
    uint64_t v36 = sub_1D765FF00();
    sub_1D75F7D7C(v36, v34, v35, &aBlock);
    uint64_t v37 = sub_1D75F6050(aBlock, v59);
    sub_1D75F64BC(v37, v38);
    uint64_t v39 = (void *)a1[13];
    uint64_t v40 = (void *)swift_allocObject();
    void v40[2] = a2;
    v40[3] = a3;
    unint64_t v50 = v32;
    uint64_t v51 = v33;
    v40[4] = v33;
    v40[5] = v32;
    uint64_t v62 = sub_1D75FDDFC;
    uint64_t v63 = v40;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v59 = 1107296256;
    uint64_t v60 = sub_1D75D6460;
    uint64_t v61 = &block_descriptor_128;
    id v53 = (unint64_t *)_Block_copy(&aBlock);
    uint64_t v54 = sub_1D7660950();
    uint64_t v55 = &v50;
    uint64_t v41 = *(void *)(v54 - 8);
    MEMORY[0x1F4188790](v54);
    unint64_t v43 = (char *)&v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    id v44 = v39;
    sub_1D75934F4(v33, v32);
    sub_1D7660930();
    uint64_t v45 = sub_1D7660910();
    uint64_t v52 = &v50;
    uint64_t v46 = *(void *)(v45 - 8);
    MEMORY[0x1F4188790](v45);
    unint64_t v48 = (char *)&v50 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v56 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    unint64_t v49 = v53;
    MEMORY[0x1D9473560](0, v43, v48, v53);
    _Block_release(v49);
    swift_unknownObjectRelease();

    sub_1D75933F0(v51, v50);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v54);
    return swift_release();
  }
  swift_unknownObjectRetain();
LABEL_6:
  swift_beginAccess();
  swift_retain();
  sub_1D762160C();
  uint64_t v25 = *(void *)(*v10 + 16);
  sub_1D762173C(v25);
  uint64_t v26 = *v10;
  *(void *)(v26 + 16) = v25 + 1;
  uint64_t v27 = (void *)(v26 + 32 * v25);
  v27[4] = a4;
  void v27[5] = a5;
  v27[6] = a2;
  v27[7] = a3;
  uint64_t v28 = *v10;
  swift_endAccess();
  if (*(void *)(v28 + 16) == 1)
  {
    swift_getObjectType();
    sub_1D7660F50();
  }
  return swift_unknownObjectRelease();
}

void sub_1D75FAE64(void (*a1)(void *, void, uint64_t))
{
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D76616A0();
  sub_1D75B0D60();
  uint64_t v2 = (void *)swift_allocError();
  *uint64_t v3 = v4;
  v3[1] = v5;
  a1(v2, 0, 1);
}

uint64_t sub_1D75FAF54(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  os_log_type_t v10 = *(NSObject **)(v5 + 128);
  id v11 = (void *)OUTLINED_FUNCTION_46_1();
  void v11[2] = v5;
  v11[3] = a3;
  void v11[4] = a4;
  v11[5] = a1;
  void v11[6] = a2;
  uint64_t v12 = OUTLINED_FUNCTION_33();
  *(void *)(v12 + 16) = sub_1D75FC284;
  *(void *)(v12 + 24) = v11;
  v15[4] = sub_1D75D5480;
  void v15[5] = v12;
  v15[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_44_1();
  long long v15[2] = sub_1D75E38AC;
  void v15[3] = &block_descriptor_23;
  uint64_t v13 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  sub_1D75934F4(a1, a2);
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = OUTLINED_FUNCTION_43_1();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D75FB0C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a1[18])
  {
    swift_beginAccess();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1D75934F4(a4, a5);
    sub_1D7621624();
    uint64_t v10 = *(void *)(a1[22] + 16);
    sub_1D7621754(v10);
    uint64_t v11 = a1[22];
    *(void *)(v11 + 16) = v10 + 1;
    uint64_t v12 = (void *)(v11 + 32 * v10);
    void v12[4] = a4;
    v12[5] = a5;
    v12[6] = a2;
    v12[7] = a3;
    uint64_t v13 = a1[22];
    swift_endAccess();
    if (*(void *)(v13 + 16) == 1)
    {
      swift_getObjectType();
      sub_1D7660F50();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v15 = (void *)a1[13];
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    *(void *)(v16 + 24) = a3;
    void aBlock[4] = sub_1D75FDDB4;
    void aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D75D6460;
    aBlock[3] = &block_descriptor_116;
    id v17 = _Block_copy(aBlock);
    uint64_t v27 = sub_1D7660950();
    uint64_t v28 = &v26;
    uint64_t v18 = *(void *)(v27 - 8);
    MEMORY[0x1F4188790](v27);
    uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v21 = v15;
    swift_retain();
    sub_1D7660930();
    uint64_t v22 = sub_1D7660910();
    uint64_t v26 = (uint64_t)&v26;
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    uint64_t v25 = (char *)&v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
    sub_1D7661090();
    MEMORY[0x1D9473560](0, v20, v25, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
    return swift_release();
  }
}

void sub_1D75FB42C(void (*a1)(void *, void *))
{
  sub_1D75AF4C0();
  sub_1D7661690();
  sub_1D76616A0();
  sub_1D75B0D60();
  uint64_t v2 = (void *)swift_allocError();
  *uint64_t v3 = v4;
  v3[1] = v5;
  a1(v2, v3);
}

uint64_t sub_1D75FB518()
{
  uint64_t v1 = *(NSObject **)(v0 + 128);
  uint64_t v2 = OUTLINED_FUNCTION_33();
  *(void *)(v2 + 16) = sub_1D75FC2A0;
  *(void *)(v2 + 24) = v0;
  void v5[4] = sub_1D75D5480;
  v5[5] = v2;
  v5[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_44_1();
  long long v5[2] = sub_1D75E38AC;
  v5[3] = &block_descriptor_30_0;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = OUTLINED_FUNCTION_43_1();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

void sub_1D75FB638(void *a1)
{
  sub_1D75AF4C0();
  sub_1D7661690();
  uint64_t v47 = v49;
  uint64_t v48 = v50;
  sub_1D76616A0();
  uint64_t v2 = v42;
  uint64_t v38 = aBlock;
  swift_beginAccess();
  uint64_t v3 = a1[19];
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = (uint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v39 = a1;
  if (v4)
  {
    uint64_t aBlock = (uint64_t *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D75A6500();
    uint64_t v6 = (uint64_t *)(v3 + 56);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v8;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D75A6500();
        uint64_t v5 = aBlock;
      }
      unint64_t v10 = v5[2];
      if (v10 >= (unint64_t)v5[3] >> 1)
      {
        sub_1D75A6500();
        uint64_t v5 = aBlock;
      }
      long long v5[2] = v10 + 1;
      uint64_t v11 = &v5[2 * v10];
      void v11[4] = (uint64_t)sub_1D75FDD34;
      v11[5] = v9;
      v6 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a1 = v39;
  }
  swift_beginAccess();
  uint64_t v12 = a1[22];
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t aBlock = (uint64_t *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D75A64B0();
    uint64_t v14 = aBlock;
    uint64_t v15 = (uint64_t *)(v12 + 56);
    do
    {
      uint64_t v16 = *(v15 - 1);
      uint64_t v17 = *v15;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      *(void *)(v18 + 24) = v17;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D75A64B0();
        uint64_t v14 = aBlock;
      }
      unint64_t v19 = v14[2];
      if (v19 >= (unint64_t)v14[3] >> 1)
      {
        sub_1D75A64B0();
        uint64_t v14 = aBlock;
      }
      long long v14[2] = v19 + 1;
      uint64_t v20 = &v14[2 * v19];
      v20[4] = (uint64_t)sub_1D75AEE60;
      v20[5] = v18;
      v15 += 4;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v14 = (uint64_t *)MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = (void *)v39[13];
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v38;
  long long v23[2] = v5;
  void v23[3] = v24;
  v23[4] = v2;
  v23[5] = v14;
  uint64_t v45 = sub_1D75FDDA8;
  uint64_t v46 = v23;
  uint64_t aBlock = (uint64_t *)MEMORY[0x1E4F143A8];
  uint64_t v42 = 1107296256;
  unint64_t v43 = sub_1D75D6460;
  id v44 = &block_descriptor_110;
  uint64_t v36 = _Block_copy(&aBlock);
  uint64_t v37 = sub_1D7660950();
  uint64_t v38 = &v35;
  uint64_t v25 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = v22;
  sub_1D7660930();
  uint64_t v29 = sub_1D7660910();
  uint64_t v35 = (uint64_t)&v35;
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  unint64_t v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v21;
  sub_1D75D89BC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF48]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75D8A04((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
  sub_1D7661090();
  uint64_t v33 = v36;
  MEMORY[0x1D9473560](0, v27, v32, v36);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  uint64_t v34 = v39;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v37);
  swift_release();
  v34[19] = v21;
  swift_bridgeObjectRelease();
  v34[22] = v21;
  swift_bridgeObjectRelease();
  if (v34[17])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D7660F40();
    swift_unknownObjectRelease();
  }
  if (v34[18])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D7660F40();
    swift_unknownObjectRelease();
  }
  sub_1D75F9114();
}

uint64_t sub_1D75FBC14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v8 = result;
    sub_1D75B0D60();
    swift_bridgeObjectRetain();
    uint64_t v9 = v8 + 40;
    do
    {
      unint64_t v10 = *(void (**)(void *))(v9 - 8);
      uint64_t v11 = (void *)swift_allocError();
      *uint64_t v12 = a2;
      v12[1] = a3;
      v19[0] = v11;
      v19[1] = 0;
      char v20 = 1;
      swift_retain();
      swift_bridgeObjectRetain();
      v10(v19);

      swift_release();
      v9 += 16;
      --v7;
    }
    while (v7);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = a4;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  if (v13)
  {
    sub_1D75B0D60();
    swift_bridgeObjectRetain();
    uint64_t v14 = v4 + 40;
    do
    {
      uint64_t v15 = *(void (**)(void *))(v14 - 8);
      uint64_t v16 = (void *)swift_allocError();
      *uint64_t v17 = a2;
      v17[1] = a3;
      v19[0] = v16;
      swift_bridgeObjectRetain();
      swift_retain();
      v15(v19);

      swift_release();
      v14 += 16;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D75FBDB8()
{
}

uint64_t sub_1D75FBEB0()
{
  OUTLINED_FUNCTION_4_3();
  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t sub_1D75FBEDC(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 184) = a1;
  return result;
}

uint64_t SecureSocketDataTransport.networkAdvertActive.getter()
{
  return *(unsigned __int8 *)(v0 + 185);
}

uint64_t SecureSocketDataTransport.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D75FC2AC(v1 + 192, a1);
}

uint64_t SecureSocketDataTransport.endpointHasBeenUpdatedSinceInitialization.getter()
{
  return 0;
}

uint64_t sub_1D75FBF34()
{
  return sub_1D75F63AC();
}

uint64_t sub_1D75FBF58()
{
  return sub_1D75FBEB0() & 1;
}

uint64_t sub_1D75FBF80()
{
  return SecureSocketDataTransport.networkAdvertActive.getter();
}

uint64_t sub_1D75FBFA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75F944C(a1, a2, a3);
}

uint64_t sub_1D75FBFC8()
{
  return sub_1D75FB518();
}

void sub_1D75FBFEC()
{
}

uint64_t sub_1D75FC004@<X0>(uint64_t a1@<X8>)
{
  return SecureSocketDataTransport.endpoint.getter(a1);
}

uint64_t sub_1D75FC028@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    if (a1 <= 14)
    {
      uint64_t result = sub_1D765FDA0();
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFLL;
    }
    else
    {
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v4 = sub_1D765FCD0();
      if ((unint64_t)a1 >= 0x7FFFFFFF)
      {
        sub_1D765FE20();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = a1;
        unint64_t v6 = v4 | 0x8000000000000000;
      }
      else
      {
        uint64_t result = a1 << 32;
        unint64_t v6 = v4 | 0x4000000000000000;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1D75FC188()
{
  swift_release();

  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_5_10();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FC1C8()
{
  return sub_1D75F95A4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1D75FC1F0()
{
  swift_release();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_9_7();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1D75FC228()
{
  return sub_1D75FDC34((uint64_t (*)(void, void, void, void, void))sub_1D75FA7AC);
}

uint64_t sub_1D75FC244()
{
  swift_release();
  swift_release();
  sub_1D75933F0(*(void *)(v0 + 40), *(void *)(v0 + 48));
  uint64_t v1 = OUTLINED_FUNCTION_9_7();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FC284()
{
  return sub_1D75FDC34((uint64_t (*)(void, void, void, void, void))sub_1D75FB0C8);
}

void sub_1D75FC2A0()
{
  sub_1D75FB638(v0);
}

uint64_t sub_1D75FC2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D75FC314@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D75F63AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D75FC344@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D75FBEB0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D75FC374(char *a1)
{
  return sub_1D75FBEDC(*a1);
}

uint64_t type metadata accessor for SecureSocketDataTransport()
{
  return self;
}

uint64_t method lookup function for SecureSocketDataTransport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SecureSocketDataTransport);
}

uint64_t dispatch thunk of SecureSocketDataTransport.isPeerToPeer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.__allocating_init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.start(withTargetQueue:eventHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.receive(minLength:maxLength:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.send(content:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.getHost()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.physicallyConnected.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t destroy for SecureSocketDataTransport.SendRequest(uint64_t a1)
{
  sub_1D75933F0(*(void *)a1, *(void *)(a1 + 8));
  return swift_release();
}

uint64_t *initializeWithCopy for SecureSocketDataTransport.SendRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D75934F4(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for SecureSocketDataTransport.SendRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D75934F4(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D75933F0(v6, v7);
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SecureSocketDataTransport.SendRequest(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1D75933F0(v4, v5);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SecureSocketDataTransport.SendRequest()
{
  return &type metadata for SecureSocketDataTransport.SendRequest;
}

uint64_t destroy for SecureSocketDataTransport.ReceiveRequest()
{
  return swift_release();
}

uint64_t initializeWithCopy for SecureSocketDataTransport.ReceiveRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for SecureSocketDataTransport.ReceiveRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SecureSocketDataTransport.ReceiveRequest(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t _s19RemotePairingDevice25SecureSocketDataTransportC14ReceiveRequestVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D75FC7F8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureSocketDataTransport.ReceiveRequest()
{
  return &type metadata for SecureSocketDataTransport.ReceiveRequest;
}

void sub_1D75FC84C()
{
  sub_1D75F8F58(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1D75FC86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a1;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t *, uint64_t))(a3 + 72))(&v6, a4);
  swift_release();
  return v4;
}

uint64_t sub_1D75FC95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1D765FCE0();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1D765FD00();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return sub_1D75FD298(v7, v13, a3);
}

uint64_t sub_1D75FC9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1D765FCE0();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t result = sub_1D765FD10();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v11 = v9 + a1 - result;
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t result = sub_1D765FD00();
  if (v11)
  {
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(v11, a5);
    swift_release();
    return v12;
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_1D75FCA8C(void *(*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  unint64_t v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v2 = xmmword_1D7665EB0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v11 < (int)v4) {
        goto LABEL_16;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v4, sub_1D765FD10())) {
        goto LABEL_17;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v13 = sub_1D765FCC0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_11:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1D75FD0B0((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      uint64_t *v5 = v4;
LABEL_13:
      v5[1] = v12;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *v2;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1D765FDB0();
      uint64_t result = sub_1D75FD0B0(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = *((void *)&v14 + 1) | 0x8000000000000000;
      uint64_t *v2 = v14;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      return sub_1D75FD1F4((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, 0);
    default:
      *(void *)&long long v14 = *v2;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      uint64_t result = sub_1D75FD1F4((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, BYTE6(v3));
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      uint64_t *v2 = v14;
      v2[1] = v8;
      return result;
  }
}

uint64_t sub_1D75FCD38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *a1;
  unint64_t v8 = a1[1];
  swift_retain_n();
  switch(v8 >> 62)
  {
    case 1uLL:
      uint64_t v13 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1D7665EB0;
      swift_retain_n();
      uint64_t v14 = v9 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v14 < (int)v9) {
        goto LABEL_18;
      }
      if (sub_1D765FCE0() && __OFSUB__((int)v9, sub_1D765FD10())) {
        goto LABEL_19;
      }
      sub_1D765FD20();
      swift_allocObject();
      uint64_t v20 = sub_1D765FCC0();
      swift_release();
      uint64_t v13 = v20;
LABEL_11:
      if (v14 < (int)v9)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      swift_retain();
      uint64_t v11 = sub_1D75FD164((int)v9, v9 >> 32, v13, a2, a3);
      swift_release_n();
      unint64_t v18 = v13 | 0x4000000000000000;
LABEL_13:
      *a1 = v9;
      a1[1] = v18;
      if (v4) {
        swift_release_n();
      }
      else {
LABEL_15:
      }
        swift_release_n();
      return v11;
    case 2uLL:
      *(void *)&long long v22 = v9;
      *((void *)&v22 + 1) = v8 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      sub_1D765FDB0();
      uint64_t v15 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v9 + 16);
      uint64_t v16 = *(void *)(v9 + 24);
      swift_retain();
      uint64_t v11 = sub_1D75FD164(v17, v16, v15, a2, a3);
      swift_release_n();
      unint64_t v18 = v15 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v22 + 7) = 0;
      *(void *)&long long v22 = 0;
      swift_retain();
      unint64_t v19 = *(uint64_t (**)(long long *, uint64_t))(a2 + 56);
      swift_retain_n();
      uint64_t v11 = v19(&v22, a3);
      swift_release_n();
      goto LABEL_15;
    default:
      *(void *)&long long v22 = v9;
      WORD4(v22) = v8;
      BYTE10(v22) = BYTE2(v8);
      BYTE11(v22) = BYTE3(v8);
      BYTE12(v22) = BYTE4(v8);
      BYTE13(v22) = BYTE5(v8);
      BYTE14(v22) = BYTE6(v8);
      swift_retain();
      uint64_t v10 = *(uint64_t (**)(long long *, uint64_t))(a2 + 56);
      swift_retain_n();
      uint64_t v11 = v10(&v22, a3);
      swift_release_n();
      unint64_t v12 = DWORD2(v22) | ((unint64_t)BYTE12(v22) << 32) | ((unint64_t)BYTE13(v22) << 40) | ((unint64_t)BYTE14(v22) << 48);
      *a1 = v22;
      a1[1] = v12;
      goto LABEL_15;
  }
}

char *sub_1D75FD0B0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_1D765FCE0();
  if (!result) {
    goto LABEL_12;
  }
  unint64_t v8 = result;
  uint64_t result = (char *)sub_1D765FD10();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1D765FD00();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1D75FD164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1D765FCE0();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t result = sub_1D765FD10();
    if (!__OFSUB__(a1, result))
    {
      uint64_t v10 = v9 + a1 - result;
      sub_1D765FD00();
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(v10, a5);
      swift_release();
      return v11;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1D75FD1F4(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result = a2(&v6, a1, a1 + a4);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

void *sub_1D75FD240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[0] = a3;
  v6[1] = a4;
  long long v5[2] = v6;
  return sub_1D75FD394((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1D75FDCDC, (uint64_t)v5, a1, a2);
}

uint64_t sub_1D75FD298@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = sub_1D765FDA0();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = MEMORY[0x1D9472480]();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = MEMORY[0x1D94724A0]();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D75FD310(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D7661110();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1D75FD394(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = a4 - a3;
    uint64_t v7 = a3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  uint64_t result = a1(&v9, v7, v6);
  if (!v4) {
    return (void *)v9;
  }
  return result;
}

uint64_t sub_1D75FD3FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = *v6;
  uint64_t v9 = *(void *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = result;
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > *(void *)(v8 + 24) >> 1)
  {
    if (v9 <= v13) {
      uint64_t v17 = v9 + v12;
    }
    else {
      uint64_t v17 = v9;
    }
    sub_1D75D027C(isUniquelyReferenced_nonNull_native, v17, 1, v8);
    uint64_t v8 = v18;
  }
  uint64_t v19 = v8 + 32 + 32 * v10;
  uint64_t result = swift_arrayDestroy();
  if (!v12) {
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)(v8 + 16);
  if (__OFSUB__(v20, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_1D75D1400((char *)(v8 + 32 + 32 * a2), v20 - a2, (char *)(v19 + 32));
  uint64_t v21 = *(void *)(v8 + 16);
  BOOL v22 = __OFADD__(v21, v12);
  uint64_t v23 = v21 + v12;
  if (!v22)
  {
    *(void *)(v8 + 16) = v23;
LABEL_16:
    *(void *)uint64_t v19 = a3;
    *(void *)(v19 + 8) = a4;
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    *uint64_t v6 = v8;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D75FD52C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_1D75D027C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
  }
  uint64_t v13 = (char *)(v4 + 32 + 32 * v6);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_1D75D1400((char *)(v4 + 32 + 32 * a2), v14 - a2, v13);
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v16 = __OFADD__(v15, v8);
  uint64_t v17 = v15 - v7;
  if (!v16)
  {
    *(void *)(v4 + 16) = v17;
LABEL_16:
    uint64_t *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D75FD62C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = *v6;
  uint64_t v9 = *(void *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = result;
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > *(void *)(v8 + 24) >> 1)
  {
    if (v9 <= v13) {
      uint64_t v17 = v9 + v12;
    }
    else {
      uint64_t v17 = v9;
    }
    sub_1D75D02B0(isUniquelyReferenced_nonNull_native, v17, 1, v8);
    uint64_t v8 = v18;
  }
  uint64_t v19 = v8 + 32 + 32 * v10;
  uint64_t result = swift_arrayDestroy();
  if (!v12) {
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)(v8 + 16);
  if (__OFSUB__(v20, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_1D75D1400((char *)(v8 + 32 + 32 * a2), v20 - a2, (char *)(v19 + 32));
  uint64_t v21 = *(void *)(v8 + 16);
  BOOL v22 = __OFADD__(v21, v12);
  uint64_t v23 = v21 + v12;
  if (!v22)
  {
    *(void *)(v8 + 16) = v23;
LABEL_16:
    *(void *)uint64_t v19 = a3;
    *(void *)(v19 + 8) = a4;
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    *uint64_t v6 = v8;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D75FD75C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_1D75D02B0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
  }
  uint64_t v13 = (char *)(v4 + 32 + 32 * v6);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_1D75D1400((char *)(v4 + 32 + 32 * a2), v14 - a2, v13);
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v16 = __OFADD__(v15, v8);
  uint64_t v17 = v15 - v7;
  if (!v16)
  {
    *(void *)(v4 + 16) = v17;
LABEL_16:
    uint64_t *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D75FD85C()
{
  sub_1D75933F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();

  uint64_t v1 = OUTLINED_FUNCTION_9_7();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FD89C()
{
  return sub_1D75FDC34((uint64_t (*)(void, void, void, void, void))sub_1D75F8FF8);
}

uint64_t sub_1D75FD8B4()
{
  sub_1D75933F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_5_10();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FD8EC()
{
  return (*(uint64_t (**)(void))(v0 + 32))(0);
}

void *sub_1D75FD918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_1D75FD240(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

uint64_t sub_1D75FD950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1D75FD310(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1D75FD994(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v8 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)a3;
      uint64_t v5 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v6 = 0;
      uint64_t v5 = BYTE6(a4);
      break;
  }
  if (v5 >= result)
  {
    BOOL v8 = __OFSUB__(result, v6);
    BOOL v7 = result - v6 < 0;
  }
  else
  {
    BOOL v8 = 0;
    BOOL v7 = 1;
  }
  if (v7 != v8)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x1D75FD9FCLL);
  }
  return result;
}

uint64_t sub_1D75FDA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_1D75FDA94(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1D75FD994(a1, a2, a4, a5);
}

uint64_t sub_1D75FDA94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v4 = a3 >> 32;
      uint64_t v5 = (int)a3;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = a3 >> 32;
      uint64_t v8 = (int)a3;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a3 + 16);
      uint64_t v7 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v8 = 0;
      uint64_t v7 = BYTE6(a4);
      break;
  }
  if (v7 < a2 || v8 > a2) {
    goto LABEL_21;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v10)
  {
LABEL_22:
    __break(1u);
    JUMPOUT(0x1D75FDB64);
  }
  return result;
}

uint64_t sub_1D75FDB84(uint64_t result)
{
  __int16 v1 = *(_WORD *)(result + 144) & 0xE7FF | 0x800;
  *(void *)result &= 0xFFFFFFFFFFFFFF9uLL;
  *(_WORD *)(result + 144) = v1;
  return result;
}

uint64_t objectdestroy_61Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_5_10();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1D75FDBE4()
{
  swift_release();

  uint64_t v1 = OUTLINED_FUNCTION_9_7();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FDC1C()
{
  return sub_1D75FDC34((uint64_t (*)(void, void, void, void, void))sub_1D75F7ACC);
}

uint64_t sub_1D75FDC34(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1D75FDC4C()
{
  swift_release();
  sub_1D75933F0(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D75FDC8C()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 32))(*(void *)(v0 + 48), *(void *)(v0 + 56), 0);
}

void *sub_1D75FDCC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1D75FD918(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_1D75FDCDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D75FD950(a1, a2);
}

uint64_t sub_1D75FDCFC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D75FDD34(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1D75FDD68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_5_10();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1D75FDDA8()
{
  return sub_1D75FBC14(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1D75FDDB4()
{
  sub_1D75FB42C(*(void (**)(void *, void *))(v0 + 16));
}

void sub_1D75FDDBC()
{
  sub_1D75FAE64(*(void (**)(void *, void, uint64_t))(v0 + 16));
}

uint64_t sub_1D75FDDC4()
{
  swift_release();
  sub_1D75933F0(*(void *)(v0 + 32), *(void *)(v0 + 40));
  uint64_t v1 = OUTLINED_FUNCTION_5_10();
  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1D75FDDFC()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), 0);
}

void sub_1D75FDE34()
{
}

void sub_1D75FDE40()
{
}

uint64_t sub_1D75FDE48()
{
  return objectdestroy_142Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D75FDE60()
{
  return sub_1D75FA5E4(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D75FDE6C()
{
  return objectdestroy_142Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_142Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x1F4186498](v1, 40, 7);
}

void sub_1D75FDED4()
{
  sub_1D75FA470(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1D75FDEE0(_WORD *a1)
{
  a1[72] = 4096;
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return MEMORY[0x1F412ED30](5);
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return swift_unknownObjectRelease();
}

double OUTLINED_FUNCTION_18_6()
{
  __int16 v1 = *(_WORD *)(v0 - 148);
  double result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  uint64_t v2 = *(void *)(v0 + 160);
  unint64_t v3 = *(void *)(v0 + 168);
  return sub_1D75934F4(v2, v3);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  uint64_t v2 = *(void *)(v0 - 264);
  unint64_t v3 = *(void *)(v0 - 304);
  return sub_1D75933F0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return swift_allocObject();
}

BOOL static ControlChannelConnectionWireProtocolVersion.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) < *(void *)(a2 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
}

id sub_1D75FE10C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 22;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EBDEC460 = (uint64_t)result;
  return result;
}

id ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)(uint64_t a1)
{
  objc_super v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

void static ControlChannelConnectionWireProtocolVersion.current.setter(void *a1)
{
}

uint64_t (*static ControlChannelConnectionWireProtocolVersion.current.modify())()
{
  if (qword_1EBDEC468 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  return j_j__swift_endAccess;
}

id sub_1D75FE298()
{
  uint64_t v0 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EBDEBCE0 = (uint64_t)result;
  return result;
}

void static ControlChannelConnectionWireProtocolVersion.minimumSupported.setter(void *a1)
{
}

uint64_t (*static ControlChannelConnectionWireProtocolVersion.minimumSupported.modify())()
{
  if (qword_1EBDEBCF0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  return j_j__swift_endAccess;
}

id sub_1D75FE390()
{
  uint64_t v0 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 17;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EA82C0D8 = (uint64_t)result;
  return result;
}

id static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.getter()
{
  return sub_1D758A8EC(&qword_1EA82AA18, (void **)&qword_1EA82C0D8);
}

void static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.setter(void *a1)
{
}

void sub_1D75FE434(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  objc_super v5 = *a3;
  *a3 = a1;
}

uint64_t (*static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.modify())()
{
  if (qword_1EA82AA18 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2();
  return j__swift_endAccess;
}

id sub_1D75FE514()
{
  uint64_t v0 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 19;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EA83A378 = (uint64_t)result;
  return result;
}

uint64_t ControlChannelConnectionWireProtocolVersion.rawValue.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
}

id ControlChannelConnectionWireProtocolVersion.init(rawValue:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)(uint64_t result, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_1D7661160();
      }
      uint64_t v8 = (uint64_t)sub_1D75FF0A0(v7, v5);
      char v2 = v9 & 1;
      goto LABEL_46;
    }
    if (result == 43)
    {
      if (!v4) {
        goto LABEL_61;
      }
      if (v4 == 1) {
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_2_14();
      if (!v14 & v13) {
        goto LABEL_32;
      }
      uint64_t v8 = v16;
      if (v15 != 2)
      {
        OUTLINED_FUNCTION_2_14();
        if (!v14 & v13) {
          goto LABEL_32;
        }
        uint64_t v8 = 10 * v8 + v18;
        if (v17 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_5_11();
            if (!v14 & v13) {
              goto LABEL_32;
            }
            OUTLINED_FUNCTION_3_14();
            if (!v14) {
              goto LABEL_32;
            }
            uint64_t v8 = v20 + v19;
            if (__OFADD__(v20, v19)) {
              goto LABEL_32;
            }
            OUTLINED_FUNCTION_4_10();
            if (v14) {
              goto LABEL_46;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v4)
        {
          if (v4 != 1)
          {
            OUTLINED_FUNCTION_2_14();
            if (!(!v14 & v13))
            {
              if (v11 == 2)
              {
                char v2 = 0;
                uint64_t v8 = -(uint64_t)v12;
                goto LABEL_46;
              }
              if ((v10 - 48) <= 9u)
              {
                uint64_t v8 = -10 * v12 - (v10 - 48);
                if (v11 == 3) {
                  goto LABEL_45;
                }
                while (1)
                {
                  OUTLINED_FUNCTION_5_11();
                  if (!v14 & v13) {
                    break;
                  }
                  OUTLINED_FUNCTION_3_14();
                  if (!v14) {
                    break;
                  }
                  uint64_t v8 = v28 - v27;
                  if (__OFSUB__(v28, v27)) {
                    break;
                  }
                  OUTLINED_FUNCTION_4_10();
                  if (v14) {
                    goto LABEL_46;
                  }
                }
              }
            }
          }
LABEL_32:
          uint64_t v8 = 0;
          char v2 = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_61:
        __break(1u);
        return result;
      }
      if (!v4 || (result - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v8 = (result - 48);
      if (v4 != 1)
      {
        OUTLINED_FUNCTION_2_14();
        if (!v14 & v13) {
          goto LABEL_32;
        }
        uint64_t v8 = 10 * v8 + v22;
        if (v21 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_5_11();
            if (!v14 & v13) {
              goto LABEL_32;
            }
            OUTLINED_FUNCTION_3_14();
            if (!v14) {
              goto LABEL_32;
            }
            uint64_t v8 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_32;
            }
            OUTLINED_FUNCTION_4_10();
            if (v14) {
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_45:
    char v2 = 0;
    goto LABEL_46;
  }
  uint64_t v8 = sub_1D75FEFA8(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1D75FF0A0);
  char v2 = v29;
LABEL_46:
  swift_bridgeObjectRelease();
  id result = 0;
  if ((v2 & 1) == 0 && v8 >= 1)
  {
    uint64_t v25 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
    uint64_t v26 = (char *)objc_allocWithZone(v25);
    *(void *)&v26[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = v8;
    v30.receiver = v26;
    v30.super_class = v25;
    return (uint64_t)objc_msgSendSuper2(&v30, sel_init);
  }
  return result;
}

BOOL sub_1D75FE884()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 9;
}

BOOL sub_1D75FE89C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 10;
}

BOOL sub_1D75FE8B4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 11;
}

BOOL sub_1D75FE8CC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 12;
}

BOOL sub_1D75FE8E4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 13;
}

BOOL sub_1D75FE8FC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 14;
}

BOOL sub_1D75FE914()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 15;
}

BOOL sub_1D75FE92C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 16;
}

BOOL sub_1D75FE944()
{
  return (unint64_t)(*(void *)(v0
                                      + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue)
                          - 19) < 3;
}

BOOL sub_1D75FE960()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 19;
}

BOOL sub_1D75FE978()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 20;
}

BOOL sub_1D75FE990()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 21;
}

id ControlChannelConnectionWireProtocolVersion.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ControlChannelConnectionWireProtocolVersion.init()()
{
}

id ControlChannelConnectionWireProtocolVersion.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D75FEA54@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  id result = ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D75FEA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ControlChannelConnectionWireProtocolVersion.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1D75FEAAC()
{
  return sub_1D7660CD0();
}

uint64_t sub_1D75FEB20()
{
  return sub_1D7660CB0();
}

BOOL sub_1D75FEB84(uint64_t *a1, uint64_t *a2)
{
  return static ControlChannelConnectionWireProtocolVersion.< infix(_:_:)(*a1, *a2);
}

uint64_t sub_1D75FEBB4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D75FEBDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_1D7660C20();
    OUTLINED_FUNCTION_6_9(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x1D94732B0](15, a1 >> 16);
    OUTLINED_FUNCTION_6_9(v3);
    return v4 | 8;
  }
}

unsigned __int8 *sub_1D75FEC38(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1D75FF304(a1, a2);
}

uint64_t sub_1D75FEC50()
{
  return sub_1D75FECA0(&qword_1EA82C0E8);
}

uint64_t sub_1D75FEC78()
{
  return sub_1D75FECA0(&qword_1EA82C0F0);
}

uint64_t sub_1D75FECA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ControlChannelConnectionWireProtocolVersion();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for ControlChannelConnectionWireProtocolVersion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ControlChannelConnectionWireProtocolVersion);
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsReportingPairingUserConsentPrompt.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsCustomPairingRejectedReasons.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsArbitraryErrorResponses.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsRemoteUnlock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsKVSSensitivityLevel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsAnonymizedWirelessPairingAdverts.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDowngradingAuthenticatedChannels.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDeviceProvidedHardwareIdentifiersThroughPairSetup.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsQUICUDPProtocol.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDeviceMetadataUpdates.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsUpgradingNonAutomationLockdownRecords.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsMigratableTunnels.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t sub_1D75FEF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D75FEFA8(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1D75FF304);
}

uint64_t sub_1D75FEFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1D7660C50();
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v11 = HIBYTE(v9) & 0xF;
    uint64_t v16 = v8;
    uint64_t v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    char v10 = &v16;
    goto LABEL_7;
  }
  uint64_t v8 = sub_1D75FF568(v6, v7);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  unint64_t v9 = v13;
  if ((v13 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v8 & 0x1000000000000000) != 0)
  {
    char v10 = (void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v10 = (void *)sub_1D7661160();
  }
LABEL_7:
  uint64_t v14 = a4(v10, v11, a3);
  swift_bridgeObjectRelease();
  return v14;
}

unsigned __int8 *sub_1D75FF0A0(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_0_16();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0;
          char v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            uint64_t v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63) {
              return 0;
            }
            uint64_t v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31))) {
              return 0;
            }
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_0_16();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63) {
              return 0;
            }
            uint64_t v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_0_16();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0;
          for (unint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            uint64_t v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63) {
              return 0;
            }
            uint64_t v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16))) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1D75FF304(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_0_16();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0;
          char v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }
              else
              {
                char v33 = -55;
              }
            }
            else
            {
              char v33 = -48;
            }
            if (!is_mul_ok(v13, v25)) {
              return 0;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0;
            }
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_0_16();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }
              else
              {
                char v48 = -55;
              }
            }
            else
            {
              char v48 = -48;
            }
            if (!is_mul_ok(v46, v40)) {
              return 0;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0;
            }
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_0_16();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0;
          for (unint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            if (!is_mul_ok(v13, v7)) {
              return 0;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D75FF568(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_1D75FF5D4((uint64_t)sub_1D75FF5D0, 0, a1, a2);
  uint64_t v6 = sub_1D75FF608(v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D75FF5D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3;
  }
  uint64_t v5 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  return MEMORY[0x1F4183BA0](15, v5 | (v4 << 16));
}

uint64_t sub_1D75FF608(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1D75FF760(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned __int8 v11 = sub_1D758E16C(v9, 0);
      unint64_t v12 = sub_1D75FF860((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1D7661160();
LABEL_4:
        JUMPOUT(0x1D9473240);
      }
    }
    else
    {
      unsigned __int8 v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1D9473240](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D9473240]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1D75FF760(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1D75FEBDC(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1D75FEBDC(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1D75FF860(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    void *v9 = a4;
    v9[1] = a5;
    id v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_1D75FEBDC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1D7660C10();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1D7661160();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_1D75FEBDC(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_1D7660BE0();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t CUPairedPeer.udid.getter()
{
  return OUTLINED_FUNCTION_0_17(18, 0x80000001D7674890);
}

uint64_t CUPairingStream.decode<A>(message:)()
{
  sub_1D765FC80();
  swift_allocObject();
  sub_1D765FC70();
  uint64_t v0 = (void *)sub_1D765FEB0();
  id v7 = OUTLINED_FUNCTION_6_10((uint64_t)v0, sel_decryptData_aadData_error_, v1, v2, v3, v4, v5, v6, 0);

  id v8 = v14;
  if (v7)
  {
    uint64_t v9 = sub_1D765FED0();
    unint64_t v11 = v10;

    sub_1D765FC60();
    sub_1D75933F0(v9, v11);
  }
  else
  {
    unint64_t v12 = v8;
    sub_1D765FD60();

    swift_willThrow();
  }
  return swift_release();
}

void CUPairingStream.encode<A>(_:)(uint64_t *a1@<X8>)
{
  sub_1D765FCB0();
  swift_allocObject();
  sub_1D765FCA0();
  uint64_t v3 = sub_1D765FC90();
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  id v7 = (void *)sub_1D765FEB0();
  id v14 = OUTLINED_FUNCTION_6_10((uint64_t)v7, sel_encryptData_aadData_error_, v8, v9, v10, v11, v12, v13, 0);

  id v15 = v20;
  if (!v14)
  {
    char v19 = v15;
    sub_1D765FD60();

    swift_willThrow();
    sub_1D75933F0(v5, v6);
LABEL_2:
    swift_release();
    return;
  }
  uint64_t v16 = sub_1D765FED0();
  uint64_t v18 = v17;
  sub_1D75933F0(v5, v6);
  swift_release();

  *a1 = v16;
  a1[1] = v18;
}

uint64_t CUPairedPeer.remoteUnlockKey.getter()
{
  if (!sub_1D76010E4(v0, (SEL *)&selRef_info))
  {
    long long v4 = 0u;
    long long v5 = 0u;
    goto LABEL_8;
  }
  *(void *)&long long v4 = 0xD00000000000001BLL;
  *((void *)&v4 + 1) = 0x80000001D7675E10;
  uint64_t v1 = sub_1D76610E0();
  OUTLINED_FUNCTION_4_11(v1);
  sub_1D758CBA8((uint64_t)&v3);
  swift_bridgeObjectRelease();
  if (!*((void *)&v5 + 1))
  {
LABEL_8:
    sub_1D758C650((uint64_t)&v4, &qword_1EBDEC4D0);
    return 0;
  }
  if (OUTLINED_FUNCTION_2_15()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t CUPairedPeer.remoteUnlockKey.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1D76010E4(v2, (SEL *)&selRef_info);
  if (!v5) {
    uint64_t v5 = sub_1D7660A50();
  }
  uint64_t v10 = v5;
  *(void *)&long long v7 = 0xD00000000000001BLL;
  *((void *)&v7 + 1) = 0x80000001D7675E10;
  sub_1D76610E0();
  if (a2 >> 60 == 15)
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  else
  {
    *((void *)&v8 + 1) = MEMORY[0x1E4F277B8];
    *(void *)&long long v7 = a1;
    *((void *)&v7 + 1) = a2;
  }
  sub_1D75AC3B4(a1, a2);
  sub_1D758CB10((uint64_t)&v7, (uint64_t)v9);
  sub_1D7590814(v10, v2);
  return sub_1D75941DC(a1, a2);
}

id sub_1D75FFF18@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_sessionType);
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = 0x10104uLL >> (8 * result);
    if (result >= 5) {
      LOBYTE(v4) = 4;
    }
    *a1 = v4;
  }
  return result;
}

id sub_1D75FFF70()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1D7660AE0();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_openStreamWithName_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1D765FD60();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D7600038()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82C0F8 = result;
  return result;
}

BOOL static IdentityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IdentityError.hash(into:)()
{
  return sub_1D7661740();
}

uint64_t IdentityError.hashValue.getter()
{
  return sub_1D7661760();
}

uint64_t static CUPairingSession.remotePairingDefaultPin.getter()
{
  return 0x303030303030;
}

unint64_t static CUPairedPeer.udidInfoKey.getter()
{
  return OUTLINED_FUNCTION_0_6(18);
}

unint64_t static CUPairedPeer.ecidInfoKey.getter()
{
  return OUTLINED_FUNCTION_0_6(18);
}

unint64_t static CUPairedPeer.remotePairingAutomationRecordKey.getter()
{
  return OUTLINED_FUNCTION_0_6(29);
}

unint64_t static CUPairedPeer.remoteUnlockInfoKey.getter()
{
  return OUTLINED_FUNCTION_0_6(27);
}

unint64_t static CUPairedPeer.serialNumberInfoKey.getter()
{
  return OUTLINED_FUNCTION_0_6(27);
}

unint64_t static CUPairedPeer.initialPairingTimeInfoKey.getter()
{
  return OUTLINED_FUNCTION_0_6(32);
}

unint64_t static CUPairedPeer.associatedLockdownHostBUIDKey.getter()
{
  return OUTLINED_FUNCTION_0_6(29);
}

void CUPairedPeer.udid.setter(uint64_t a1, uint64_t a2)
{
}

uint64_t (*CUPairedPeer.udid.modify(uint64_t a1))(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_7_10(a1);
  *uint64_t v1 = CUPairedPeer.udid.getter();
  v1[1] = v2;
  return sub_1D760025C;
}

uint64_t sub_1D760025C(uint64_t a1, char a2)
{
  return sub_1D7600830(a1, a2, (void (*)(uint64_t))CUPairedPeer.udid.setter);
}

id CUPairedPeer.ecid.getter()
{
  uint64_t v1 = sub_1D76010E4(v0, (SEL *)&selRef_info);
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  sub_1D76610E0();
  sub_1D75B52A8((uint64_t)v6, v2, (uint64_t)&v7);
  sub_1D758CBA8((uint64_t)v6);
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_6:
    sub_1D758C650((uint64_t)&v7, &qword_1EBDEC4D0);
    return 0;
  }
  sub_1D75AEF50(0, (unint64_t *)&unk_1EBDEBE20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = v6[0];
  id v4 = objc_msgSend(v6[0], sel_unsignedLongLongValue);

  return v4;
}

id sub_1D7600394@<X0>(uint64_t a1@<X8>)
{
  id result = CUPairedPeer.ecid.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1D76003C8(uint64_t a1)
{
}

void CUPairedPeer.ecid.setter(uint64_t a1, char a2)
{
}

void (*CUPairedPeer.ecid.modify(uint64_t a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_7_10(a1);
  *(void *)uint64_t v1 = CUPairedPeer.ecid.getter();
  *(unsigned char *)(v1 + 8) = v2 & 1;
  return sub_1D760046C;
}

void sub_1D760046C(uint64_t a1)
{
}

uint64_t CUPairedPeer.btAddressString.getter()
{
  return sub_1D76004B0(0x726464417462, 0xE600000000000000);
}

uint64_t sub_1D76004B0(uint64_t a1, uint64_t a2)
{
  if (!sub_1D76010E4(v2, (SEL *)&selRef_info))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_8;
  }
  *(void *)&long long v8 = a1;
  *((void *)&v8 + 1) = a2;
  uint64_t v5 = sub_1D76610E0();
  OUTLINED_FUNCTION_4_11(v5);
  sub_1D758CBA8((uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_1D758C650((uint64_t)&v8, &qword_1EBDEC4D0);
    return 0;
  }
  if (OUTLINED_FUNCTION_2_15()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1D7600580(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_1D75AC3B4(*a1, v2);
  return CUPairedPeer.remoteUnlockKey.setter(v1, v2);
}

uint64_t (*CUPairedPeer.remoteUnlockKey.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_7_10(a1);
  *uint64_t v1 = CUPairedPeer.remoteUnlockKey.getter();
  v1[1] = v2;
  return sub_1D7600608;
}

uint64_t sub_1D7600608(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return CUPairedPeer.remoteUnlockKey.setter(*a1, v3);
  }
  sub_1D75AC3B4(*a1, v3);
  CUPairedPeer.remoteUnlockKey.setter(v2, v3);
  return sub_1D75941DC(v2, v3);
}

uint64_t CUPairedPeer.serialNumber.getter()
{
  return OUTLINED_FUNCTION_0_17(27, 0x80000001D76748D0);
}

uint64_t sub_1D760069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_5_12();
  return a5(v6);
}

void CUPairedPeer.serialNumber.setter(uint64_t a1, uint64_t a2)
{
}

void sub_1D76006F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v10 = sub_1D76010E4(v7, (SEL *)&selRef_info);
  if (!v10) {
    uint64_t v10 = sub_1D7660A50();
  }
  uint64_t v15 = v10;
  *(void *)&long long v12 = a3;
  *((void *)&v12 + 1) = a4;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  sub_1D76610E0();
  if (a2)
  {
    *((void *)&v13 + 1) = v11;
    *(void *)&long long v12 = a1;
    *((void *)&v12 + 1) = a2;
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_1D758CB10((uint64_t)&v12, (uint64_t)v14);
  sub_1D7590814(v15, v7);
}

uint64_t (*CUPairedPeer.serialNumber.modify(uint64_t a1))(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_7_10(a1);
  *uint64_t v1 = CUPairedPeer.serialNumber.getter();
  v1[1] = v2;
  return sub_1D7600818;
}

uint64_t sub_1D7600818(uint64_t a1, char a2)
{
  return sub_1D7600830(a1, a2, (void (*)(uint64_t))CUPairedPeer.serialNumber.setter);
}

uint64_t sub_1D7600830(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = OUTLINED_FUNCTION_5_12();
    a3(v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_5_12();
    return ((uint64_t (*)(uint64_t))a3)(v6);
  }
}

uint64_t sub_1D76008A0()
{
  uint64_t v1 = sub_1D76010E4(v0, (SEL *)&selRef_info);
  if (!v1)
  {
    long long v5 = 0u;
    long long v6 = 0u;
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  *(void *)&long long v5 = 0xD000000000000020;
  *((void *)&v5 + 1) = 0x80000001D7675E30;
  sub_1D76610E0();
  sub_1D75B52A8((uint64_t)v4, v2, (uint64_t)&v5);
  sub_1D758CBA8((uint64_t)v4);
  swift_bridgeObjectRelease();
  if (!*((void *)&v6 + 1))
  {
LABEL_8:
    sub_1D758C650((uint64_t)&v5, &qword_1EBDEC4D0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v4[0];
  }
  else {
    return 0;
  }
}

uint64_t CUPairedPeer.initialPairingTime.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D76008A0();
  if (v2)
  {
    uint64_t v3 = 1;
  }
  else
  {
    sub_1D765FF50();
    uint64_t v3 = 0;
  }
  uint64_t v4 = sub_1D765FF70();
  return __swift_storeEnumTagSinglePayload(a1, v3, 1, v4);
}

uint64_t sub_1D7600A00(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D758CBFC(a1, (uint64_t)v4);
  return CUPairedPeer.initialPairingTime.setter((uint64_t)v4);
}

void (*CUPairedPeer.initialPairingTime.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEAC80) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  CUPairedPeer.initialPairingTime.getter((uint64_t)v4);
  return sub_1D7600B10;
}

void sub_1D7600B10(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (a2)
  {
    MEMORY[0x1F4188790](a1);
    uint64_t v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1D758CBFC((uint64_t)v2, (uint64_t)v4);
    CUPairedPeer.initialPairingTime.setter((uint64_t)v4);
    sub_1D758C650((uint64_t)v2, &qword_1EBDEAC80);
    free(v2);
  }
  else
  {
    CUPairedPeer.initialPairingTime.setter(*(void *)(a1 + 16));
    free(v2);
  }
}

uint64_t CUPairedPeer.isPairedForAutomation.getter()
{
  if (!sub_1D76010E4(v0, (SEL *)&selRef_acl))
  {
    long long v4 = 0u;
    long long v5 = 0u;
    goto LABEL_6;
  }
  *(void *)&long long v4 = 0xD00000000000001DLL;
  *((void *)&v4 + 1) = 0x80000001D7671BD0;
  uint64_t v1 = sub_1D76610E0();
  OUTLINED_FUNCTION_4_11(v1);
  sub_1D758CBA8((uint64_t)v3);
  swift_bridgeObjectRelease();
  if (!*((void *)&v5 + 1))
  {
LABEL_6:
    sub_1D758C650((uint64_t)&v4, &qword_1EBDEC4D0);
    return 0;
  }
  uint64_t result = OUTLINED_FUNCTION_2_15();
  if (result) {
    return v3[0];
  }
  return result;
}

uint64_t CUPairedPeer.associatedLockdownHostBUID.getter()
{
  return OUTLINED_FUNCTION_0_17(29, 0x80000001D7673F20);
}

uint64_t CUPairedPeer.verify(authTag:data:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v39[1] = *MEMORY[0x1E4F143B8];
  if (!MEMORY[0x1E4F94718])
  {
    sub_1D7660DC0();
    if (qword_1EA82AA28 != -1) {
      swift_once();
    }
    sub_1D7660010();
    return 0;
  }
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94718]), sel_init);
  uint64_t v10 = sub_1D75928B4(v5);
  if (v11 >> 60 == 15)
  {
    long long v12 = 0;
  }
  else
  {
    uint64_t v13 = v10;
    unint64_t v14 = v11;
    long long v12 = (void *)sub_1D765FEB0();
    sub_1D75941DC(v13, v14);
  }
  objc_msgSend(v9, sel_setDeviceIRKData_, v12);

  uint64_t v15 = (void *)sub_1D765FEB0();
  uint64_t v16 = (void *)sub_1D765FEB0();
  v38[0] = 0;
  unsigned int v17 = objc_msgSend(v9, sel_verifyAuthTag_data_type_error_, v15, v16, a5, v38);

  if (v17)
  {
    id v18 = v38[0];

    return 1;
  }
  id v20 = v38[0];
  uint64_t v21 = (void *)sub_1D765FD60();

  swift_willThrow();
  if (a5 != 2
    || (CUPairedPeer.btAddressString.getter(), !v22)
    || (unint64_t v23 = (void *)sub_1D7660AE0(),
        swift_bridgeObjectRelease(),
        id v24 = _RPTextToMACAddress(v23),
        v23,
        !v24))
  {

    return 0;
  }
  uint64_t v25 = sub_1D765FED0();
  unint64_t v27 = v26;

  if ((MEMORY[0x1D9472580](v25, v27, a3, a4) & 1) == 0)
  {

    sub_1D75933F0(v25, v27);
    return 0;
  }
  os_log_type_t v28 = sub_1D7660DA0();
  if (qword_1EA82AA28 != -1) {
    swift_once();
  }
  unsigned __int8 v29 = qword_1EA82C0F8;
  BOOL v30 = os_log_type_enabled((os_log_t)qword_1EA82C0F8, v28);
  id v31 = v5;
  if (v30)
  {
    unsigned int v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v39[0] = v37;
    *(_DWORD *)unsigned int v32 = 136315138;
    v38[0] = (id)CUPairedPeer.udid.getter();
    v38[1] = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82B890);
    uint64_t v34 = sub_1D7660B60();
    v38[0] = (id)sub_1D758DBE8(v34, v35, v39);
    sub_1D7661020();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v29, v28, "Identity verified using BT Address in pairing record instead of authTag for device with udid: %s", v32, 0xCu);
    uint64_t v19 = 1;
    swift_arrayDestroy();
    MEMORY[0x1D9474C60](v37, -1, -1);
    MEMORY[0x1D9474C60](v32, -1, -1);

    sub_1D75933F0(v25, v27);
    return v19;
  }

  sub_1D75933F0(v25, v27);
  return 1;
}

uint64_t sub_1D76010E4(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1D7660A30();

  return v4;
}

unint64_t sub_1D7601150()
{
  unint64_t result = qword_1EA82C100;
  if (!qword_1EA82C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C100);
  }
  return result;
}

uint64_t sub_1D760119C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CUPairedPeer.udid.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D76011C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D760069C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))CUPairedPeer.udid.setter);
}

uint64_t sub_1D76011FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CUPairedPeer.remoteUnlockKey.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D760122C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CUPairedPeer.serialNumber.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D7601258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D760069C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))CUPairedPeer.serialNumber.setter);
}

uint64_t sub_1D7601284@<X0>(uint64_t a1@<X8>)
{
  return CUPairedPeer.initialPairingTime.getter(a1);
}

unsigned char *storeEnumTagSinglePayload for IdentityError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7601378);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityError()
{
  return &type metadata for IdentityError;
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return v0;
}

uint64_t RemoteXPCControlChannelTransport.__allocating_init(xpcConnection:to:)()
{
  OUTLINED_FUNCTION_19_6();
  return sub_1D7606E20(v1, v2, v0, v4, v3);
}

uint64_t sub_1D76013DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_55();
  swift_weakInit();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_192();
  long long v5[2] = v4;
  void v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_1D7606584((uint64_t)sub_1D7608694, (uint64_t)v5, (uint64_t)&unk_1F2EE3370, (uint64_t)sub_1D7608700, (void (*)(uint64_t, uint64_t, uint64_t, void *))sub_1D75FA64C);
  swift_release();
  return swift_release();
}

uint64_t sub_1D76014BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  long long v5[2] = v4;
  void v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_1D7606584((uint64_t)sub_1D7608408, (uint64_t)v5, (uint64_t)&unk_1F2EE32D0, (uint64_t)sub_1D760842C, (void (*)(uint64_t, uint64_t, uint64_t, void *))sub_1D7606328);
  swift_release();
  return swift_release();
}

uint64_t sub_1D76015AC()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82C108 = result;
  return result;
}

uint64_t sub_1D7601624(uint64_t a1)
{
  return sub_1D760270C(a1, &qword_1EBDEAED0);
}

uint64_t (*sub_1D7601638())()
{
  return j_j__swift_endAccess;
}

uint64_t RemoteXPCControlChannelTransport.xpcConnection.getter()
{
  return swift_retain();
}

uint64_t RemoteXPCControlChannelTransport.remoteDevice.getter()
{
  return swift_retain();
}

uint64_t sub_1D76016AC()
{
  OUTLINED_FUNCTION_4_3();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1D76016D8(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_1D760170C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D7601750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  if (v3)
  {
    *(void *)(a1 + 24) = sub_1D7660070();
    *(void *)(a1 + 32) = &protocol witness table for RemoteDevice;
    *(void *)a1 = v3;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_retain();
}

uint64_t RemoteXPCControlChannelTransport.init(xpcConnection:to:)()
{
  OUTLINED_FUNCTION_19_6();
  return sub_1D7606E88(v1, v2, v0, v4, v3);
}

uint64_t RemoteXPCControlChannelTransport.physicallyConnected.getter()
{
  return 1;
}

uint64_t RemoteXPCControlChannelTransport.networkAdvertActive.getter()
{
  return *(unsigned __int8 *)(v0 + 59);
}

void sub_1D76017EC()
{
  OUTLINED_FUNCTION_97();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_4_3();
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v6 = OUTLINED_FUNCTION_33();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v3;
    uint64_t v22 = sub_1D7607084;
    uint64_t v23 = v6;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    uint64_t v7 = &block_descriptor_9_0;
  }
  else
  {
    sub_1D7660080();
    uint64_t v1 = OUTLINED_FUNCTION_33();
    *(void *)(v1 + 16) = v5;
    *(void *)(v1 + 24) = v3;
    sub_1D7606FCC();
    sub_1D7607018();
    swift_retain();
    sub_1D76601C0();
    swift_release();
    sub_1D76600D0();
    uint64_t v8 = OUTLINED_FUNCTION_33();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v3;
    uint64_t v22 = sub_1D7607064;
    uint64_t v23 = v8;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    uint64_t v7 = &block_descriptor_8;
  }
  id v20 = sub_1D75D6460;
  uint64_t v21 = v7;
  id v9 = _Block_copy(&v18);
  sub_1D7660950();
  v17[1] = v17;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_9();
  swift_retain();
  sub_1D7660930();
  uint64_t v11 = sub_1D7660910();
  v17[0] = v17;
  OUTLINED_FUNCTION_1_1();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_25();
  void v17[2] = MEMORY[0x1E4FBC860];
  sub_1D76082EC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF70]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  sub_1D7661090();
  uint64_t v15 = OUTLINED_FUNCTION_34_3();
  MEMORY[0x1D9473560](v15);
  _Block_release(v9);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v11);
  OUTLINED_FUNCTION_28_0();
  v16();
  swift_release();
  OUTLINED_FUNCTION_84();
}

void sub_1D7601B20(void (*a1)(void *))
{
  sub_1D75AF4C0();
  sub_1D7661690();
  v3[0] = v4[0];
  v3[1] = v4[1];
  sub_1D75B0D60();
  uint64_t v2 = (void *)swift_allocError();
  sub_1D76616A0();
  v4[0] = v2;
  sub_1D75FDB84((uint64_t)v4);
  sub_1D75D4E0C((uint64_t)v4, (uint64_t)v3);
  a1(v3);
}

uint64_t sub_1D7601C28(uint64_t a1, void (*a2)(unsigned char *))
{
  sub_1D7608494(a1, (uint64_t)v10);
  sub_1D7608494((uint64_t)v10, (uint64_t)v11);
  if (sub_1D7608508((uint64_t)v11) == 1)
  {
    __dst[0] = *(void *)nullsub_1(v11);
    sub_1D75FDB84((uint64_t)__dst);
    sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v7);
    sub_1D7608494((uint64_t)v10, (uint64_t)v9);
    id v3 = *(id *)nullsub_1(v9);
  }
  else
  {
    uint64_t v4 = (const void *)nullsub_1(v11);
    memcpy(__dst, v4, 0x92uLL);
    sub_1D7608584((uint64_t)__dst);
    sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v7);
    sub_1D7608494((uint64_t)v10, (uint64_t)v9);
    uint64_t v5 = nullsub_1(v9);
    sub_1D76085A4(v5);
  }
  a2(v7);
  return sub_1D7608510((uint64_t)v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
}

uint64_t sub_1D7601D30(uint64_t (*a1)(unsigned char *))
{
  sub_1D75FDEE0(v4);
  sub_1D75D4E0C((uint64_t)v4, (uint64_t)v3);
  return a1(v3);
}

void sub_1D7601D84()
{
  OUTLINED_FUNCTION_97();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  void v19[3] = v6;
  memcpy(v20, v7, 0x92uLL);
  sub_1D7606FCC();
  sub_1D7607018();
  sub_1D76600B0();
  uint64_t v8 = OUTLINED_FUNCTION_33();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v3;
  v20[4] = sub_1D76070A4;
  v20[5] = v8;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  void v20[2] = sub_1D75D6460;
  id v20[3] = &block_descriptor_21;
  id v9 = _Block_copy(v20);
  uint64_t v10 = sub_1D7660950();
  void v19[2] = v19;
  OUTLINED_FUNCTION_1_1();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_9();
  swift_retain();
  sub_1D7660930();
  uint64_t v14 = sub_1D7660910();
  OUTLINED_FUNCTION_1_1();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_25();
  v19[4] = MEMORY[0x1E4FBC860];
  sub_1D76082EC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF70]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75ABCA4();
  OUTLINED_FUNCTION_24_4();
  sub_1D7661090();
  uint64_t v18 = OUTLINED_FUNCTION_34_3();
  MEMORY[0x1D9473560](v18);
  _Block_release(v9);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
  swift_release();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D76021C8()
{
  OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v0 + 56) = 1;
  return sub_1D76600C0();
}

uint64_t sub_1D7602204()
{
  return swift_willThrow();
}

uint64_t RemoteXPCControlChannelTransport.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteXPCControlChannelTransport.__deallocating_deinit()
{
  RemoteXPCControlChannelTransport.deinit();
  return MEMORY[0x1F4186488](v0, 60, 7);
}

uint64_t sub_1D7602334()
{
  return sub_1D7601630();
}

uint64_t sub_1D7602358()
{
  return RemoteXPCControlChannelTransport.networkAdvertActive.getter();
}

void sub_1D760237C()
{
}

void sub_1D76023A0()
{
}

uint64_t sub_1D76023C4()
{
  return sub_1D76021C8();
}

uint64_t sub_1D76023E8()
{
  return sub_1D7602204();
}

uint64_t sub_1D7602400@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7601750(a1);
}

uint64_t NWInterface.isAWDL.getter()
{
  if (sub_1D7660470() == 0x306C647761 && v0 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v2 = OUTLINED_FUNCTION_20_4();
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
}

uint64_t sub_1D7602490()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BC80);
  uint64_t v3 = OUTLINED_FUNCTION_23_0(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_1_7();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C118);
  uint64_t v8 = OUTLINED_FUNCTION_23_0(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_27_4();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C120);
  uint64_t v10 = OUTLINED_FUNCTION_23_0(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4_3();
  swift_retain();
  sub_1D76604F0();
  swift_release();
  uint64_t v11 = sub_1D76607F0();
  if (__swift_getEnumTagSinglePayload(v1, 1, v11) == 1)
  {
    uint64_t v12 = &qword_1EA82C120;
    uint64_t v13 = v1;
LABEL_7:
    sub_1D76070D0(v13, v12);
    char v18 = 0;
    return v18 & 1;
  }
  sub_1D76607C0();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_6();
  v14();
  uint64_t v15 = sub_1D76603E0();
  if (OUTLINED_FUNCTION_38_3(v15) == 1)
  {
    uint64_t v12 = &qword_1EA82C118;
    uint64_t v13 = v0;
    goto LABEL_7;
  }
  sub_1D76603D0();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_6();
  v16();
  uint64_t v17 = sub_1D76604A0();
  if (__swift_getEnumTagSinglePayload(v6, 1, v17) == 1)
  {
    uint64_t v12 = (uint64_t *)&unk_1EA82BC80;
    uint64_t v13 = v6;
    goto LABEL_7;
  }
  if (sub_1D7660470() == 0x306C647761 && v20 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v18 = 1;
  }
  else
  {
    char v18 = OUTLINED_FUNCTION_20_4();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_6();
  v22();
  return v18 & 1;
}

uint64_t sub_1D7602700(uint64_t a1)
{
  return sub_1D760270C(a1, &qword_1EA82C110);
}

uint64_t sub_1D760270C(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for AtomicCounter();
  OUTLINED_FUNCTION_33();
  uint64_t result = AtomicCounter.init()();
  *a2 = result;
  return result;
}

uint64_t sub_1D7602744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = OUTLINED_FUNCTION_5_0();
  return a5(v6);
}

uint64_t sub_1D7602788()
{
  uint64_t v0 = swift_retain();
  return sub_1D76027E4(v0);
}

uint64_t sub_1D76027B4()
{
  return swift_retain();
}

uint64_t sub_1D76027E4(uint64_t a1)
{
  OUTLINED_FUNCTION_13_0();
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*sub_1D7602820())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D7602868()
{
  OUTLINED_FUNCTION_4_3();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_1D7602894(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 41) = a1;
  return result;
}

uint64_t (*sub_1D76028C8())()
{
  return j_j__swift_endAccess;
}

BOOL sub_1D760290C()
{
  OUTLINED_FUNCTION_4_3();
  sub_1D7608290(v0 + 48, (uint64_t)v3, &qword_1EBDEC180);
  BOOL v1 = v4 != 0;
  sub_1D76070D0((uint64_t)v3, &qword_1EBDEC180);
  return v1;
}

uint64_t sub_1D7602974(uint64_t a1)
{
  sub_1D7608290(a1, (uint64_t)v2, &qword_1EBDEC180);
  return sub_1D7602A04((uint64_t)v2);
}

uint64_t sub_1D76029B8@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_3();
  return sub_1D7608290(v1 + 48, a1, &qword_1EBDEC180);
}

uint64_t sub_1D7602A04(uint64_t a1)
{
  swift_beginAccess();
  sub_1D7607124(a1, v1 + 48);
  swift_endAccess();
  sub_1D76070D0(a1, &qword_1EBDEC180);
  uint64_t result = OUTLINED_FUNCTION_13_0();
  *(unsigned char *)(v1 + 41) = 1;
  return result;
}

uint64_t (*sub_1D7602A80(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2();
  return sub_1D7602AC8;
}

uint64_t sub_1D7602AC8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v5 + 41) = 1;
  }
  return result;
}

uint64_t sub_1D7602B1C(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1D7602B28@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1D7602C28();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1D760825C;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_1D7602B98(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1D7608224;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1D75A74B4(v1);
  return sub_1D7602C68((uint64_t)v4, v3);
}

uint64_t sub_1D7602C28()
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v0 = OUTLINED_FUNCTION_36();
  sub_1D75A74B4(v0);
  return OUTLINED_FUNCTION_36();
}

uint64_t sub_1D7602C68(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_13_0();
  uint64_t v5 = *(void *)(v2 + 104);
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return sub_1D75940A4(v5);
}

uint64_t (*sub_1D7602CB0())()
{
  return j_j__swift_endAccess;
}

uint64_t NWConnectionControlChannelTransport.__allocating_init(connection:endpoint:netLinkManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = OUTLINED_FUNCTION_5_0();
  NWConnectionControlChannelTransport.init(connection:endpoint:netLinkManager:)(v5, v6, a3);
  return v4;
}

uint64_t NWConnectionControlChannelTransport.init(connection:endpoint:netLinkManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_WORD *)(v4 + 40) = 0;
  *(_OWORD *)(v4 + 64) = 0u;
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 104) = 0;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 32) = a1;
  swift_beginAccess();
  swift_retain();
  sub_1D7607124(a2, v4 + 48);
  swift_endAccess();
  *(void *)(v4 + 88) = a3;
  uint64_t v7 = qword_1EA82AA40;
  id v8 = a3;
  if (v7 != -1) {
    swift_once();
  }
  sub_1D758A804();
  sub_1D7661500();
  sub_1D7660BC0();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1D76070D0(a2, &qword_1EBDEC180);
  *(void *)(v4 + 16) = 762340212;
  *(void *)(v4 + 24) = 0xE400000000000000;
  return v4;
}

void sub_1D7602E90()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = v0 + 32;
  OUTLINED_FUNCTION_4_3();
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = OUTLINED_FUNCTION_55();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = v9;
  void v11[4] = v5;
  v11[5] = v3;
  void v11[6] = v7;
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v12 = v7;
  sub_1D75A74B4((uint64_t)sub_1D7607214);
  sub_1D7660540();
  swift_release();
  swift_release_n();
  swift_release();
  swift_retain();
  swift_retain();
  sub_1D75A74B4((uint64_t)sub_1D7607224);
  sub_1D7660550();
  swift_release();
  swift_release();
  uint64_t v13 = sub_1D76603E0();
  OUTLINED_FUNCTION_1_1();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_25();
  swift_retain();
  sub_1D76605F0();
  swift_release();
  ((void (**)(uint64_t (*)(uint64_t), uint64_t))v15)[11](sub_1D7607224, v13);
  if (MEMORY[0x1E4F38968] && (OUTLINED_FUNCTION_18_7(), v17))
  {
    ((void (**)(uint64_t (*)(uint64_t), uint64_t))v15)[12](sub_1D7607224, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C128);
    sub_1D76070D0((uint64_t)sub_1D7607224 + *(int *)(v18 + 80), (uint64_t *)&unk_1EA82BC80);
    uint64_t v52 = v46;
    uint64_t v50 = sub_1D76609A0();
    OUTLINED_FUNCTION_1_1();
    uint64_t v55 = v19;
    uint64_t v21 = MEMORY[0x1F4188790](v20);
    char v48 = v5;
    unint64_t v49 = v46;
    id v53 = v12;
    MEMORY[0x1F4188790](v21);
    uint64_t v23 = (char *)v46 - v22;
    sub_1D7660990();
    uint64_t v24 = sub_1D7660900();
    OUTLINED_FUNCTION_1_1();
    uint64_t v54 = v8;
    uint64_t v26 = v25;
    MEMORY[0x1F4188790](v27);
    OUTLINED_FUNCTION_1_7();
    uint64_t v30 = v29 - v28;
    *(void *)(v29 - v28) = 10;
    (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v29 - v28, *MEMORY[0x1E4FBCAE0], v24);
    MEMORY[0x1D94730B0](v46, v23, v30);
    OUTLINED_FUNCTION_28_0();
    v31();
    uint64_t v32 = *(void *)(v55 + 8);
    v55 += 8;
    uint64_t v51 = v32;
    OUTLINED_FUNCTION_6();
    v33();
    uint64_t v34 = OUTLINED_FUNCTION_55();
    swift_weakInit();
    uint64_t v35 = *(void *)(v1 + 32);
    char v36 = (void *)swift_allocObject();
    v36[2] = v34;
    v36[3] = v35;
    v46[0] = v35;
    v36[4] = 10;
    v36[5] = v48;
    v36[6] = v3;
    v57[4] = sub_1D7607274;
    void v57[5] = v36;
    v57[0] = MEMORY[0x1E4F143A8];
    v57[1] = 1107296256;
    v57[2] = sub_1D75D6460;
    v57[3] = &block_descriptor_34;
    uint64_t v37 = _Block_copy(v57);
    uint64_t v47 = sub_1D7660950();
    char v48 = v46;
    OUTLINED_FUNCTION_1_1();
    uint64_t v39 = v38;
    MEMORY[0x1F4188790](v40);
    OUTLINED_FUNCTION_25();
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1D7660930();
    uint64_t v41 = sub_1D7660910();
    v46[1] = v46;
    OUTLINED_FUNCTION_1_1();
    uint64_t v43 = v42;
    MEMORY[0x1F4188790](v44);
    OUTLINED_FUNCTION_27();
    uint64_t v56 = MEMORY[0x1E4FBC860];
    sub_1D76082EC((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAF70]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
    sub_1D75ABCA4();
    OUTLINED_FUNCTION_24_4();
    sub_1D7661090();
    MEMORY[0x1D9473530](v49, v24, v46, v37);
    _Block_release(v37);
    swift_release();
    (*(void (**)(void *, uint64_t))(v43 + 8))(v46, v41);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v24, v47);
    OUTLINED_FUNCTION_6();
    v45();
    swift_release();
    swift_release();
  }
  else
  {
    ((void (**)(uint64_t (*)(uint64_t), uint64_t))v15)[1](sub_1D7607224, v13);
  }
  swift_retain();
  sub_1D76605B0();
  swift_release();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D76034C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v12 = (void *)result;
    uint64_t v13 = (char *)(result + 32);
    swift_beginAccess();
    if (v12[4] != a3) {
      return swift_release();
    }
    uint64_t v77 = v13;
    uint64_t v80 = a4;
    uint64_t v81 = a5;
    os_log_type_t v14 = sub_1D7660DD0();
    if (qword_1EA82AA30 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_1EA82C108;
    uint64_t v16 = sub_1D76605A0();
    uint64_t v83 = v73;
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void *)(v17 + 64);
    MEMORY[0x1F4188790](v16);
    unint64_t isa = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = (char *)v73 - isa;
    uint64_t v82 = v17;
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v85((char *)v73 - isa, a1, v16);
    os_log_t v79 = v15;
    BOOL v20 = os_log_type_enabled(v15, v14);
    unint64_t v84 = v12;
    uint64_t v76 = a6;
    if (v20)
    {
      swift_retain();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      v88[0] = v75;
      *(_DWORD *)uint64_t v21 = 136446466;
      v73[1] = v21 + 4;
      swift_beginAccess();
      int v74 = v14;
      uint64_t v23 = v12[2];
      unint64_t v22 = v12[3];
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_1D758DBE8(v23, v22, v88);
      v73[2] = &v87;
      sub_1D7661020();
      swift_release();
      uint64_t v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      MEMORY[0x1F4188790](v24);
      v85((char *)v73 - isa, (uint64_t)v19, v16);
      uint64_t v25 = sub_1D7660B60();
      uint64_t v86 = sub_1D758DBE8(v25, v26, v88);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      uint64_t v27 = v82;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v82 + 8);
      v28(v19, v16);
      _os_log_impl(&dword_1D757C000, v79, (os_log_type_t)v74, "%{public}s: Connection state changed to %s", (uint8_t *)v21, 0x16u);
      uint64_t v29 = v75;
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v29, -1, -1);
      uint64_t v30 = MEMORY[0x1D9474C60](v21, -1, -1);
    }
    else
    {
      uint64_t v27 = v82;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v82 + 8);
      uint64_t v30 = ((uint64_t (*)(char *, uint64_t))v28)(v19, v16);
    }
    MEMORY[0x1F4188790](v30);
    v85((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
    int v31 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    if (MEMORY[0x1E4F38A20] && v31 == *MEMORY[0x1E4F38A20])
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
      uint64_t v32 = sub_1D7660800();
      uint64_t v33 = *(void *)(v32 - 8);
      MEMORY[0x1F4188790](v32);
      uint64_t v35 = (char *)v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
      swift_retain();
      sub_1D76605D0();
      swift_release();
      sub_1D76082EC((unint64_t *)&unk_1EA82C730, MEMORY[0x1F418DAF8]);
      char v36 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v37, v35, v32);
      v88[0] = (uint64_t)v36;
      sub_1D75FDB84((uint64_t)v88);
      sub_1D75D4E0C((uint64_t)v88, (uint64_t)&v86);
      v80(&v86);
LABEL_15:
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    }
    if (MEMORY[0x1E4F38A10] && v31 == *MEMORY[0x1E4F38A10])
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
      uint64_t v32 = sub_1D7660800();
      uint64_t v33 = *(void *)(v32 - 8);
      MEMORY[0x1F4188790](v32);
      uint64_t v35 = (char *)v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
      sub_1D76082EC((unint64_t *)&unk_1EA82C730, MEMORY[0x1F418DAF8]);
      char v36 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v39, v35, v32);
      v88[0] = (uint64_t)v36;
      sub_1D75FDB84((uint64_t)v88);
      sub_1D75D4E0C((uint64_t)v88, (uint64_t)&v86);
      v80(&v86);
      goto LABEL_15;
    }
    if (MEMORY[0x1E4F389F8] && v31 == *MEMORY[0x1E4F389F8]) {
      return swift_release();
    }
    uint64_t v40 = v84;
    if (MEMORY[0x1E4F38A40])
    {
      if (v31 == *MEMORY[0x1E4F38A40]) {
        return swift_release();
      }
    }
    if (!MEMORY[0x1E4F389F0] || v31 != *MEMORY[0x1E4F389F0])
    {
      if (!MEMORY[0x1E4F38A28] || v31 != *MEMORY[0x1E4F38A28])
      {
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v28)((char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
      }
      return swift_release();
    }
    uint64_t v41 = sub_1D76607F0();
    uint64_t v42 = *(void *)(v41 - 8);
    MEMORY[0x1F4188790](v41);
    uint64_t v44 = (char *)v73 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C120);
    MEMORY[0x1F4188790](v45 - 8);
    uint64_t v47 = (char *)v73 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    sub_1D76604F0();
    swift_release();
    if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v41) == 1)
    {
      sub_1D76070D0((uint64_t)v47, &qword_1EA82C120);
      os_log_type_t v48 = sub_1D7660DB0();
      unint64_t v49 = qword_1EA82C108;
      os_log_type_t v50 = v48;
      BOOL v51 = os_log_type_enabled((os_log_t)qword_1EA82C108, v48);
      uint64_t v52 = v80;
      uint64_t v53 = v81;
      if (v51)
      {
        swift_retain();
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v88[0] = v55;
        *(_DWORD *)uint64_t v54 = 136446210;
        uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))(v54 + 4);
        swift_beginAccess();
        uint64_t v57 = v40[2];
        unint64_t v56 = v40[3];
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_1D758DBE8(v57, v56, v88);
        sub_1D7661020();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D757C000, v49, v50, "%{public}s: Transport connection in state ready but has no associated path", v54, 0xCu);
        swift_arrayDestroy();
        uint64_t v58 = v55;
        uint64_t v52 = v80;
        MEMORY[0x1D9474C60](v58, -1, -1);
        unint64_t v59 = v54;
        uint64_t v53 = v81;
        MEMORY[0x1D9474C60](v59, -1, -1);
      }
      goto LABEL_33;
    }
    uint64_t v85 = (void (*)(char *, uint64_t, uint64_t))v73;
    uint64_t v82 = v42;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v44, v47, v41);
    uint64_t v60 = sub_1D76604A0();
    uint64_t v83 = v73;
    unint64_t isa = (unint64_t)v60[-1].isa;
    MEMORY[0x1F4188790](v60);
    uint64_t v77 = (char *)v73 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BC80);
    os_log_t v79 = (os_log_t)v73;
    MEMORY[0x1F4188790](v62 - 8);
    uint64_t v64 = (char *)v73 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C118);
    MEMORY[0x1F4188790](v65 - 8);
    uint64_t v67 = (char *)v73 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1D76607C0();
    uint64_t v68 = sub_1D76603E0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v68) == 1)
    {
      sub_1D76070D0((uint64_t)v67, &qword_1EA82C118);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 1, 1, (uint64_t)v60);
    }
    else
    {
      sub_1D76603D0();
      (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
      if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, (uint64_t)v60) != 1)
      {
        uint64_t v70 = v77;
        unint64_t v69 = isa;
        (*(void (**)(char *, char *, NSObject *))(isa + 32))(v77, v64, v60);
        int v71 = v84;
        swift_beginAccess();
        uint64_t v72 = (uint64_t (*)(char *))v71[13];
        uint64_t v52 = v80;
        if (v72)
        {
          os_log_t v79 = v60;
          swift_retain();
          if (v72(v70))
          {
            sub_1D7605CEC();
            sub_1D75940A4((uint64_t)v72);
            (*(void (**)(char *, os_log_t))(isa + 8))(v70, v79);
          }
          else
          {
            (*(void (**)(char *, os_log_t))(isa + 8))(v70, v79);
            sub_1D75940A4((uint64_t)v72);
          }
        }
        else
        {
          (*(void (**)(char *, NSObject *))(v69 + 8))(v70, v60);
        }
        goto LABEL_32;
      }
    }
    sub_1D76070D0((uint64_t)v64, (uint64_t *)&unk_1EA82BC80);
    uint64_t v52 = v80;
LABEL_32:
    uint64_t v53 = v81;
    sub_1D7604B30();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v41);
LABEL_33:
    sub_1D75FDEE0(v88);
    sub_1D75D4E0C((uint64_t)v88, (uint64_t)&v86);
    v52(&v86);
    sub_1D76014BC((uint64_t)v52, v53);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D7604224(uint64_t result, uint64_t a2)
{
  if ((result & 1) == 0)
  {
    os_log_type_t v3 = sub_1D7660DB0();
    if (qword_1EA82AA30 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EA82C108;
    os_log_type_t v5 = v3;
    if (os_log_type_enabled((os_log_t)qword_1EA82C108, v3))
    {
      swift_retain();
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v10 = v7;
      *(_DWORD *)uint64_t v6 = 136446210;
      swift_beginAccess();
      uint64_t v8 = *(void *)(a2 + 16);
      unint64_t v9 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1D758DBE8(v8, v9, &v10);
      sub_1D7661020();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v4, v5, "%{public}s: Cancelling TCP control channel transport as it is no longer viable", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v7, -1, -1);
      MEMORY[0x1D9474C60](v6, -1, -1);
    }
    return sub_1D7604AE8();
  }
  return result;
}

uint64_t sub_1D76043C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)result;
    swift_beginAccess();
    if (v10[4] == a2)
    {
      uint64_t v27 = a3;
      uint64_t v28 = a5;
      uint64_t v29 = a4;
      uint64_t v11 = sub_1D76605A0();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void *)(v12 + 64);
      MEMORY[0x1F4188790](v11);
      swift_retain();
      sub_1D76605C0();
      uint64_t v14 = swift_release();
      MEMORY[0x1F4188790](v14);
      uint64_t v15 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4F38A40], v11);
      LOBYTE(v13) = MEMORY[0x1D9472C50](v15, v15);
      uint64_t v16 = *(void (**)(char *, uint64_t))(v12 + 8);
      v16(v15, v11);
      v16(v15, v11);
      if (v13)
      {
        os_log_type_t v17 = sub_1D7660DB0();
        uint64_t v18 = v29;
        if (qword_1EA82AA30 != -1) {
          swift_once();
        }
        uint64_t v19 = qword_1EA82C108;
        os_log_type_t v20 = v17;
        if (os_log_type_enabled((os_log_t)qword_1EA82C108, v17))
        {
          swift_retain();
          uint64_t v21 = swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          v31[0] = v22;
          *(_DWORD *)uint64_t v21 = 136446466;
          uint64_t v26 = v21 + 4;
          swift_beginAccess();
          uint64_t v24 = v10[2];
          unint64_t v23 = v10[3];
          swift_bridgeObjectRetain();
          v30[0] = sub_1D758DBE8(v24, v23, v31);
          sub_1D7661020();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 12) = 2048;
          v30[0] = v27;
          sub_1D7661020();
          _os_log_impl(&dword_1D757C000, v19, v20, "%{public}s: Cancelling TCP control channel transport as connection is stuck preparing after %ld seconds", (uint8_t *)v21, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9474C60](v22, -1, -1);
          MEMORY[0x1D9474C60](v21, -1, -1);
        }
        sub_1D75AF4C0();
        sub_1D7661630();
        v30[0] = v31[0];
        v30[1] = v31[1];
        sub_1D75B0D60();
        uint64_t v25 = (void *)swift_allocError();
        sub_1D76616A0();
        v31[0] = (uint64_t)v25;
        sub_1D75FDB84((uint64_t)v31);
        sub_1D75D4E0C((uint64_t)v31, (uint64_t)v30);
        v18(v30);

        sub_1D7604AE8();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D76047C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C118);
  uint64_t v5 = OUTLINED_FUNCTION_23_0(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_8();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C120);
  uint64_t v7 = OUTLINED_FUNCTION_23_0(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_9();
  swift_beginAccess();
  swift_retain();
  sub_1D76604F0();
  swift_release();
  uint64_t v8 = sub_1D76607F0();
  if (__swift_getEnumTagSinglePayload(v2, 1, v8) == 1)
  {
    sub_1D76070D0(v2, &qword_1EA82C120);
    uint64_t v9 = sub_1D76603E0();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v9);
LABEL_4:
    sub_1D76070D0(v1, &qword_1EA82C118);
    goto LABEL_10;
  }
  sub_1D76607D0();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_6();
  v10();
  uint64_t v11 = sub_1D76603E0();
  if (__swift_getEnumTagSinglePayload(v1, 1, v11) == 1) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_1_1();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v14 + 88))(v1, v11);
  if (MEMORY[0x1E4F38978])
  {
    OUTLINED_FUNCTION_18_7();
    if (v15)
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 96))(v1, v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C130);
      sub_1D76603B0();
      OUTLINED_FUNCTION_16();
      (*(void (**)(uint64_t, uint64_t))(v16 + 32))(a1, v1);
      sub_1D76603C0();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_6();
      return v17();
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v11);
LABEL_10:
  void v23[3] = MEMORY[0x1E4FBB1A0];
  v23[0] = 0xD00000000000002ELL;
  v23[1] = 0x80000001D7675EF0;
  char v24 = 1;
  sub_1D7592D84();
  swift_allocError();
  uint64_t v20 = v19;
  char v22 = 1;
  Swift::String v21 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v22);
  sub_1D7592DD0((uint64_t)v23);
  *(unsigned char *)uint64_t v20 = 1;
  *(Swift::String *)(v20 + 8) = v21;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(void *)(v20 + 56) = 0;
  return swift_willThrow();
}

uint64_t sub_1D7604AE8()
{
  return swift_release();
}

void sub_1D7604B30()
{
  OUTLINED_FUNCTION_97();
  uint64_t v4 = (void *)v0[11];
  if (v4)
  {
    uint64_t v5 = v1;
    uint64_t v88 = v2;
    uint64_t v89 = v3;
    id v96 = v4;
    os_log_type_t v6 = sub_1D7660DD0();
    if (qword_1EA82AA30 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_1EA82C108;
    uint64_t v8 = sub_1D76607F0();
    os_log_t v97 = (os_log_t)&v84;
    OUTLINED_FUNCTION_1_1();
    uint64_t v10 = v9;
    uint64_t v12 = *(uint64_t ***)(v11 + 64);
    MEMORY[0x1F4188790](v13);
    OUTLINED_FUNCTION_28_4();
    uint64_t v90 = v14;
    uint64_t v16 = v15 - v14;
    os_log_type_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v17(v15 - v14, v5, v8);
    LODWORD(v91) = v6;
    BOOL v18 = os_log_type_enabled(v7, v6);
    uint64_t v92 = v0;
    uint64_t v93 = (void (*)(char *, uint64_t, char *))v17;
    uint64_t v98 = (char *)v8;
    uint64_t v99 = (uint64_t **)v10;
    uint64_t v94 = v10 + 16;
    uint64_t v95 = v12;
    if (v18)
    {
      swift_retain();
      uint64_t v19 = OUTLINED_FUNCTION_40_0();
      uint64_t v87 = v5;
      uint64_t v20 = v19;
      uint64_t v86 = OUTLINED_FUNCTION_38_0();
      v100[0] = v86;
      *(_DWORD *)uint64_t v20 = 136446466;
      OUTLINED_FUNCTION_4_3();
      os_log_t v85 = v7;
      uint64_t v21 = v8;
      uint64_t v23 = v0[2];
      unint64_t v22 = v0[3];
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_1D758DBE8(v23, v22, v100);
      unint64_t v84 = &v103;
      sub_1D7661020();
      swift_release();
      uint64_t v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      MEMORY[0x1F4188790](v24);
      v17((uint64_t)&v84 - v90, v16, v21);
      uint64_t v25 = sub_1D7660B60();
      uint64_t v102 = sub_1D758DBE8(v25, v26, v100);
      sub_1D7661020();
      swift_bridgeObjectRelease();
      uint64_t v27 = v99[1];
      ((void (*)(uint64_t, uint64_t))v27)(v16, v21);
      _os_log_impl(&dword_1D757C000, v85, (os_log_type_t)v91, "%{public}s: Trying to monitor reachability of path: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_1();
      uint64_t v5 = v87;
      OUTLINED_FUNCTION_1();
    }
    else
    {
      uint64_t v27 = *(uint64_t **)(v10 + 8);
      uint64_t v28 = OUTLINED_FUNCTION_5_0();
      ((void (*)(uint64_t))v27)(v28);
    }
    sub_1D76603B0();
    OUTLINED_FUNCTION_1_1();
    uint64_t v90 = v30;
    uint64_t v91 = v29;
    uint64_t v32 = *(void *)(v31 + 64);
    MEMORY[0x1F4188790](v29);
    os_log_t v97 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C118);
    OUTLINED_FUNCTION_16();
    MEMORY[0x1F4188790](v33);
    OUTLINED_FUNCTION_28_4();
    uint64_t v36 = v34 - v35;
    uint64_t v37 = v5;
    sub_1D76607D0();
    uint64_t v38 = sub_1D76603E0();
    if (__swift_getEnumTagSinglePayload(v36, 1, v38) == 1)
    {
      sub_1D76070D0(v36, &qword_1EA82C118);
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_1_1();
    uint64_t v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v41 + 88))(v36, v38);
    if (!MEMORY[0x1E4F38978] || (OUTLINED_FUNCTION_18_7(), !v42))
    {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v38);
LABEL_15:
      uint64_t v58 = sub_1D7660DB0();
      unint64_t v59 = qword_1EA82C108;
      MEMORY[0x1F4188790](v58);
      uint64_t v61 = (char *)&v84 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v62 = v98;
      v93(v61, v37, v98);
      if (os_log_type_enabled(v59, (os_log_type_t)v58))
      {
        uint64_t v95 = (uint64_t **)v27;
        uint64_t v63 = v92;
        swift_retain();
        uint64_t v64 = OUTLINED_FUNCTION_40_0();
        uint64_t v94 = OUTLINED_FUNCTION_38_0();
        uint64_t v102 = v94;
        *(_DWORD *)uint64_t v64 = 136446466;
        OUTLINED_FUNCTION_4_3();
        uint64_t v65 = v63[2];
        unint64_t v66 = v63[3];
        swift_bridgeObjectRetain();
        uint64_t v101 = sub_1D758DBE8(v65, v66, &v102);
        sub_1D7661020();
        swift_release();
        uint64_t v67 = swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2080;
        MEMORY[0x1F4188790](v67);
        OUTLINED_FUNCTION_28_4();
        sub_1D76607D0();
        uint64_t v68 = sub_1D7660B60();
        uint64_t v101 = sub_1D758DBE8(v68, v69, &v102);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *))v95)(v61, v98);
        _os_log_impl(&dword_1D757C000, v59, (os_log_type_t)v58, "%{public}s: Unable to monitor path which does not have resolved host/port as remote endpoint: %s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      else
      {

        ((void (*)(char *, char *))v27)(v61, v62);
      }
      goto LABEL_21;
    }
    uint64_t v99 = &v84;
    (*(void (**)(uint64_t, uint64_t))(v40 + 96))(v36, v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C130);
    uint64_t v43 = v90;
    uint64_t v44 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v44, v36, v91);
    sub_1D76603C0();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_6();
    v46();
    uint64_t v47 = sub_1D75AEF50(0, &qword_1EA82C138);
    MEMORY[0x1F4188790](v47);
    os_log_type_t v48 = *(void (**)(void))(v43 + 16);
    OUTLINED_FUNCTION_32_3();
    v48();
    sub_1D7605630();
    if (v49)
    {
      uint64_t v50 = (uint64_t)v49;
      id v51 = v49;
      uint64_t v52 = v92;
      sub_1D7602B1C(v50);
      uint64_t v53 = OUTLINED_FUNCTION_55();
      swift_unknownObjectWeakInit();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v53;
      v54[3] = v52;
      uint64_t v55 = v89;
      v54[4] = v88;
      v54[5] = v55;
      v100[4] = (uint64_t)sub_1D76081E0;
      v100[5] = (uint64_t)v54;
      v100[0] = MEMORY[0x1E4F143A8];
      v100[1] = 1107296256;
      v100[2] = (uint64_t)sub_1D75D6460;
      v100[3] = (uint64_t)&block_descriptor_70;
      unint64_t v56 = _Block_copy(v100);
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v51, sel_setStateChangedHandler_, v56);
      _Block_release(v56);
      id v57 = v96;
      objc_msgSend(v96, sel_addEndpoint_, v51);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    }
    else
    {
      uint64_t v70 = sub_1D7660DB0();
      int v71 = qword_1EA82C108;
      MEMORY[0x1F4188790](v70);
      uint64_t v98 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      OUTLINED_FUNCTION_32_3();
      v48();
      os_log_t v97 = v71;
      if (os_log_type_enabled(v71, (os_log_type_t)v70))
      {
        LODWORD(v94) = v70;
        uint64_t v72 = v92;
        swift_retain();
        uint64_t v73 = OUTLINED_FUNCTION_40_0();
        uint64_t v95 = &v84;
        uint64_t v74 = v73;
        uint64_t v89 = OUTLINED_FUNCTION_38_0();
        uint64_t v102 = v89;
        *(_DWORD *)uint64_t v74 = 136446466;
        OUTLINED_FUNCTION_4_3();
        uint64_t v75 = v43;
        uint64_t v93 = (void (*)(char *, uint64_t, char *))((char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
        uint64_t v76 = v72[2];
        unint64_t v77 = v72[3];
        swift_bridgeObjectRetain();
        uint64_t v101 = sub_1D758DBE8(v76, v77, &v102);
        sub_1D7661020();
        swift_release();
        uint64_t v78 = swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2080;
        MEMORY[0x1F4188790](v78);
        os_log_t v79 = v98;
        OUTLINED_FUNCTION_32_3();
        v48();
        uint64_t v80 = sub_1D7660B60();
        uint64_t v101 = sub_1D758DBE8(v80, v81, &v102);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        uint64_t v82 = *(void (**)(char *, uint64_t))(v75 + 8);
        v82(v79, v45);
        _os_log_impl(&dword_1D757C000, v97, (os_log_type_t)v94, "%{public}s: Unable to create CUNetLinkEndpoint from connection host: %s", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();

        v82((char *)v93, v45);
      }
      else
      {

        uint64_t v83 = *(void (**)(char *, uint64_t))(v43 + 8);
        v83(v98, v45);
        v83((char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v45);
      }
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_84();
}

void sub_1D7605630()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v3 = sub_1D76603B0();
  OUTLINED_FUNCTION_1_1();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_1_7();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8 - v7, v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 88))(v9, v3);
  if (MEMORY[0x1E4F38948] && (OUTLINED_FUNCTION_18_7(), v10))
  {
    uint64_t v11 = OUTLINED_FUNCTION_9_8();
    v12(v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C140) + 48);
    sub_1D7660DB0();
    if (qword_1EA82AA30 != -1) {
      swift_once();
    }
    sub_1D7660010();

    uint64_t v14 = OUTLINED_FUNCTION_17_8();
    v15(v14);
    sub_1D76070D0(v13, (uint64_t *)&unk_1EA82BC80);
  }
  else
  {
    if (MEMORY[0x1E4F38938] && (OUTLINED_FUNCTION_18_7(), v10))
    {
      uint64_t v16 = OUTLINED_FUNCTION_9_8();
      v17(v16);
      sub_1D7660400();
      OUTLINED_FUNCTION_1_1();
      MEMORY[0x1F4188790](v18);
      uint64_t v20 = OUTLINED_FUNCTION_8_11(v19, v51);
      v21(v20);
      id v22 = v2;
      IPv4Address.copy_sockaddr_in()(v23);
      uint64x2_t v25 = (uint64x2_t)vdupq_n_s64(v24);
      v26.i64[0] = 255;
      v26.i64[1] = 255;
      int8x16_t v27 = vandq_s8((int8x16_t)vshlq_u64(v25, (uint64x2_t)xmmword_1D76687C0), v26);
      int8x16_t v28 = vandq_s8((int8x16_t)vshlq_u64(v25, (uint64x2_t)xmmword_1D76687B0), v26);
      int8x16_t v29 = vandq_s8((int8x16_t)vshlq_u64(v25, (uint64x2_t)xmmword_1D76687D0), v26);
      int v54 = 0;
      uint64_t v51 = v30;
      unint64_t v52 = (v27.i64[0] << 48) | (v27.i64[1] << 40) | (v28.i64[0] << 32) | (v28.i64[1] << 24) | v24 & 0xFF00000000000000 | (v29.i64[0] << 16) | (v29.i64[1] << 8) | v24;
      uint64_t v53 = 0;
    }
    else
    {
      if (!MEMORY[0x1E4F38940] || (OUTLINED_FUNCTION_18_7(), !v10))
      {
        unint64_t v49 = *(void (**)(uint64_t))(v5 + 8);
        uint64_t v50 = OUTLINED_FUNCTION_17_8();
        v49(v50);

        ((void (*)(uint64_t, uint64_t))v49)(v9, v3);
        goto LABEL_17;
      }
      uint64_t v31 = OUTLINED_FUNCTION_9_8();
      v32(v31);
      sub_1D7660430();
      OUTLINED_FUNCTION_1_1();
      MEMORY[0x1F4188790](v33);
      uint64_t v35 = OUTLINED_FUNCTION_8_11(v34, v51);
      v36(v35);
      id v22 = v2;
      IPv6Address.copy_sockaddr_in6()(v37);
      int v54 = v38;
      unint64_t v52 = v39;
      uint64_t v53 = v40;
      uint64_t v51 = v41;
    }
    objc_msgSend(v22, sel_setIpAddr_, &v51);

    uint64_t v42 = OUTLINED_FUNCTION_17_8();
    v43(v42);
    OUTLINED_FUNCTION_28_0();
    v48(v44, v45, v46, v47);
  }
LABEL_17:
  OUTLINED_FUNCTION_84();
}

void sub_1D76059CC(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9474D50](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    os_log_type_t v8 = sub_1D7660DA0();
    if (qword_1EA82AA30 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_1EA82C108;
    id v10 = v7;
    if (os_log_type_enabled(v9, v8))
    {
      id v11 = v10;
      swift_retain();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v24[0] = v22;
      *(_DWORD *)uint64_t v12 = 136446722;
      swift_beginAccess();
      uint64_t v14 = *(void *)(a2 + 16);
      unint64_t v13 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1D758DBE8(v14, v13, v24);
      sub_1D7661020();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      id v15 = v11;
      id v16 = objc_msgSend(v15, sel_description);
      uint64_t v17 = sub_1D7660B10();
      unint64_t v19 = v18;

      sub_1D758DBE8(v17, v19, v24);
      sub_1D7661020();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2080;
      objc_msgSend(v15, sel_state);
      uint64_t v20 = sub_1D7661500();
      v23[0] = sub_1D758DBE8(v20, v21, v24);
      sub_1D7661020();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D757C000, v9, v8, "%{public}s: Control channel endpoint %s reachability state changed: %s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D9474C60](v22, -1, -1);
      MEMORY[0x1D9474C60](v12, -1, -1);
    }
    else
    {
    }
    if (objc_msgSend(v10, sel_state, v22) == 3)
    {
      sub_1D76081EC((uint64_t)v24);
      sub_1D75D4E0C((uint64_t)v24, (uint64_t)v23);
      a3(v23);
    }
  }
}

void sub_1D7605CEC()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v42 = v2;
  uint64_t v43 = v3;
  uint64_t v41 = v4;
  uint64_t v6 = v5;
  os_log_type_t v7 = sub_1D7660DD0();
  if (qword_1EA82AA30 != -1) {
    swift_once();
  }
  os_log_type_t v8 = qword_1EA82C108;
  uint64_t v9 = sub_1D76604A0();
  unint64_t v39 = &v34;
  OUTLINED_FUNCTION_1_1();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v14);
  id v15 = *(void (**)(void, void, void))(v11 + 16);
  uint64_t v40 = v6;
  uint64_t v44 = v15;
  v15((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v9);
  int v16 = v7;
  os_log_t v38 = v8;
  if (os_log_type_enabled(v8, v7))
  {
    swift_retain();
    uint64_t v17 = OUTLINED_FUNCTION_40_0();
    uint64_t v37 = OUTLINED_FUNCTION_38_0();
    v46[0] = v37;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v35 = v17 + 4;
    OUTLINED_FUNCTION_4_3();
    int v36 = v16;
    uint64_t v18 = *(void *)(v1 + 16);
    unint64_t v19 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1D758DBE8(v18, v19, v46);
    sub_1D7661020();
    swift_release();
    uint64_t v20 = swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v35 = v17 + 14;
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_36_4();
    v21();
    uint64_t v22 = sub_1D7660B60();
    uint64_t v45 = sub_1D758DBE8(v22, v23, v46);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    uint64_t v24 = OUTLINED_FUNCTION_30_5();
    v25(v24);
    _os_log_impl(&dword_1D757C000, v38, (os_log_type_t)v36, "%{public}s: Network control channel started but used prohibited interface %s. Starting new connection", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
  }
  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_30_5();
    v27(v26);
  }
  OUTLINED_FUNCTION_4_3();
  swift_retain();
  sub_1D76604E0();
  uint64_t v28 = sub_1D7660630();
  if (v28) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B7F0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D7664B10;
  OUTLINED_FUNCTION_36_4();
  v30();
  uint64_t v45 = v29;
  sub_1D76194CC();
  sub_1D7660640();
  uint64_t v31 = sub_1D76603E0();
  uint64_t v32 = OUTLINED_FUNCTION_23_0(v31);
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_1_7();
  sub_1D76605F0();
  sub_1D7660610();
  swift_allocObject();
  swift_retain();
  uint64_t v33 = sub_1D7660570();
  sub_1D76027E4(v33);
  sub_1D7602E90(v41, v42, v43);
  sub_1D76605D0();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_84();
}

void sub_1D76060D0()
{
  OUTLINED_FUNCTION_97();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_4_3();
  uint64_t v5 = sub_1D7660530();
  OUTLINED_FUNCTION_1_1();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_9();
  uint64_t v9 = OUTLINED_FUNCTION_33();
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v2;
  void *v0 = sub_1D7607284;
  v0[1] = (void (*)(uint64_t))v9;
  (*(void (**)(void (**)(uint64_t), void, uint64_t))(v7 + 104))(v0, *MEMORY[0x1E4F389E0], v5);
  sub_1D7660520();
  swift_retain();
  swift_retain();
  sub_1D7660500();
  OUTLINED_FUNCTION_5_0();
  sub_1D7660580();
  swift_release();
  swift_release();
  (*(void (**)(void (**)(uint64_t), uint64_t))(v7 + 8))(v0, v5);
  OUTLINED_FUNCTION_84();
}

void sub_1D7606218(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C148);
  uint64_t v4 = OUTLINED_FUNCTION_23_0(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_27_4();
  uint64_t v5 = OUTLINED_FUNCTION_5_0();
  sub_1D7608290(v5, v6, &qword_1EA82C148);
  uint64_t v7 = sub_1D7660800();
  uint64_t v8 = 0;
  if (OUTLINED_FUNCTION_38_3(v7) != 1)
  {
    sub_1D76082EC((unint64_t *)&unk_1EA82C730, MEMORY[0x1F418DAF8]);
    uint64_t v8 = (void *)swift_allocError();
    OUTLINED_FUNCTION_16();
    (*(void (**)(void))(v9 + 32))();
  }
  a2(v8);
}

uint64_t sub_1D7606328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_4_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_192();
  id v7[2] = a1;
  v7[3] = a3;
  _OWORD v7[4] = a4;
  swift_retain();
  swift_retain();
  sub_1D76605E0();
  swift_release();
  return swift_release();
}

uint64_t NWConnectionControlChannelTransport.deinit()
{
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1 && *(void *)(v0 + 96)) {
    objc_msgSend(v1, sel_removeEndpoint_);
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D76070D0(v0 + 48, &qword_1EBDEC180);

  sub_1D75940A4(*(void *)(v0 + 104));
  return v0;
}

uint64_t NWConnectionControlChannelTransport.__deallocating_deinit()
{
  NWConnectionControlChannelTransport.deinit();
  return MEMORY[0x1F4186488](v0, 120, 7);
}

BOOL sub_1D7606480()
{
  return sub_1D760290C();
}

void sub_1D76064A4()
{
}

uint64_t sub_1D76064C8()
{
  return sub_1D7604AE8();
}

uint64_t sub_1D76064EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D76047C0(a1);
}

uint64_t sub_1D7606510@<X0>(uint64_t a1@<X8>)
{
  return sub_1D76029B8(a1);
}

uint64_t sub_1D7606534()
{
  return sub_1D7602868() & 1;
}

uint64_t sub_1D760655C()
{
  return sub_1D7602490() & 1;
}

uint64_t sub_1D7606584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, void *))
{
  if (qword_1EBDEBD10 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBDF39C0;
  uint64_t v11 = (void *)OUTLINED_FUNCTION_192();
  void v11[2] = a1;
  v11[3] = a2;
  void v11[4] = v5;
  swift_retain();
  swift_retain();
  a5(v10, v10, a4, v11);
  return swift_release();
}

void sub_1D7606654(uint64_t a1, unint64_t a2, char a3, void (*a4)(unsigned char *), uint64_t a5, int a6, int a7, uint64_t a8, void (*a9)(void, void, uint64_t, uint64_t))
{
  if (a3)
  {
    id v22 = (id)a1;
    swift_willThrow();
    id v23 = (id)a1;
LABEL_35:
    v44[0] = v23;
    sub_1D7608488((uint64_t)v44);
    sub_1D7608494((uint64_t)v44, (uint64_t)v43);
    id v38 = v23;
    a4(v43);

    return;
  }
  sub_1D75934F4(a1, a2);
  if (qword_1EBDEBD18 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EBDF39C8;
  unint64_t v15 = unk_1EBDF39D0;
  sub_1D75934F4(qword_1EBDF39C8, unk_1EBDF39D0);
  sub_1D7593208();
  char v17 = v16;
  sub_1D75933F0(v14, v15);
  if ((v17 & 1) == 0)
  {
    uint64_t v45 = MEMORY[0x1E4FBB1A0];
    unint64_t v24 = 0xD00000000000001ALL;
    uint64x2_t v25 = "Message signature mismatch";
LABEL_34:
    v44[0] = v24;
    v44[1] = (unint64_t)(v25 - 32) | 0x8000000000000000;
    char v46 = 1;
    sub_1D7592D84();
    id v23 = (id)swift_allocError();
    uint64_t v36 = v35;
    v43[0] = 2;
    Swift::String v37 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v43);
    sub_1D7592DD0((uint64_t)v44);
    *(unsigned char *)uint64_t v36 = 2;
    *(Swift::String *)(v36 + 8) = v37;
    *(_OWORD *)(v36 + 24) = 0u;
    *(_OWORD *)(v36 + 40) = 0u;
    *(void *)(v36 + 56) = 0;
    swift_willThrow();
    OUTLINED_FUNCTION_15_7();
    goto LABEL_35;
  }
  unint64_t v18 = a2 >> 62;
  uint64_t v19 = sub_1D765FF00();
  uint64_t v20 = v19;
  uint64_t v21 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v21 = (int)a1;
      break;
    case 2uLL:
      uint64_t v21 = *(void *)(a1 + 16);
      break;
    default:
      break;
  }
  BOOL v26 = __OFADD__(v21, v19);
  uint64_t v27 = v21 + v19;
  if (v26)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v28 = v27 + 2;
  if (__OFADD__(v27, 2))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v29 = BYTE6(a2);
  switch(a2 >> 62)
  {
    case 1uLL:
      if (v27 < (int)a1) {
        goto LABEL_33;
      }
      goto LABEL_27;
    case 2uLL:
      if (v27 < *(void *)(a1 + 16)) {
        goto LABEL_33;
      }
      if (v18 == 2) {
        uint64_t v30 = *(void *)(a1 + 24);
      }
      else {
LABEL_27:
      }
        uint64_t v30 = a1 >> 32;
      goto LABEL_28;
    case 3uLL:
      if (v27 < 0) {
        goto LABEL_33;
      }
      if (v28 > 0 || __OFSUB__(v27, v28)) {
        goto LABEL_33;
      }
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v29 = 0;
      goto LABEL_41;
    default:
      if (v27 < 0) {
        goto LABEL_33;
      }
      uint64_t v30 = BYTE6(a2);
LABEL_28:
      if (v27 >= v28 || v30 < v28)
      {
LABEL_33:
        uint64_t v45 = MEMORY[0x1E4FBB1A0];
        unint64_t v24 = 0xD00000000000001CLL;
        uint64x2_t v25 = "Unable to get message length";
        goto LABEL_34;
      }
      if (!v18)
      {
        uint64_t v33 = a2 & 0xFFFFFFFFFFFFLL;
        uint64_t v32 = a1;
LABEL_41:
        unsigned __int16 v39 = sub_1D75F04E4(v32, v33, v29, v20);
        OUTLINED_FUNCTION_15_7();
        goto LABEL_44;
      }
      if (v18 != 1)
      {
        uint64_t v41 = *(void *)(a1 + 16);
        uint64_t v40 = *(void *)(a1 + 24);
        swift_retain();
        swift_retain();
        unsigned __int16 v39 = sub_1D75F05BC(v41, v40, a2 & 0x3FFFFFFFFFFFFFFFLL, v20);
        swift_release();
        swift_release();
        goto LABEL_43;
      }
      if (a1 >> 32 < (int)a1)
      {
LABEL_49:
        __break(1u);
        JUMPOUT(0x1D7606A6CLL);
      }
      swift_retain();
      unsigned __int16 v39 = sub_1D75F05BC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v20);
      OUTLINED_FUNCTION_15_7();
LABEL_43:
      OUTLINED_FUNCTION_15_7();
LABEL_44:
      uint64_t v42 = OUTLINED_FUNCTION_33();
      *(void *)(v42 + 16) = a4;
      *(void *)(v42 + 24) = a5;
      swift_retain();
      a9(v39, v39, a8, v42);
      swift_release();
      return;
  }
}

void sub_1D7606A8C()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_1D7608494(v6, (uint64_t)v31);
  sub_1D7608494((uint64_t)v31, (uint64_t)v33);
  OUTLINED_FUNCTION_4_3();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    sub_1D7608494(v7, (uint64_t)v32);
    if (sub_1D7608508((uint64_t)v32) == 1)
    {
      uint64_t v10 = *(void *)nullsub_1(v32);
      sub_1D7608494((uint64_t)v33, (uint64_t)v30);
      uint64_t v11 = *(void **)nullsub_1(v30);
      id v12 = v11;
      os_log_type_t v13 = sub_1D7660DB0();
      if (qword_1EBDEBCC8 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_1EBDEBCC0;
      if (os_log_type_enabled((os_log_t)qword_1EBDEBCC0, v13))
      {
        os_log_t log = v14;
        sub_1D7608510(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593BD4);
        sub_1D7608510(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593BD4);
        swift_retain();
        uint64_t v15 = OUTLINED_FUNCTION_40_0();
        __dst[0] = OUTLINED_FUNCTION_38_0();
        *(_DWORD *)uint64_t v15 = 136446466;
        OUTLINED_FUNCTION_4_3();
        uint64_t v27 = v10;
        uint64_t v17 = *(void *)(v9 + 16);
        unint64_t v16 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        sub_1D758DBE8(v17, v16, __dst);
        sub_1D7661020();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        id v18 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
        uint64_t v19 = sub_1D7660B60();
        v28[0] = sub_1D758DBE8(v19, v20, __dst);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        sub_1D7608510(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
        uint64_t v10 = v27;
        sub_1D7608510(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
        _os_log_impl(&dword_1D757C000, log, v13, "%{public}s: received error reading message: %s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      __dst[0] = v10;
      sub_1D75FDB84((uint64_t)__dst);
      sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v28);
      id v21 = v11;
      v5(v28);
      sub_1D7608510(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))sub_1D7593AE8);
      swift_release();
      uint64_t v22 = OUTLINED_FUNCTION_36();
    }
    else
    {
      unint64_t v24 = (const void *)nullsub_1(v32);
      memmove(__dst, v24, 0x92uLL);
      sub_1D7608584((uint64_t)__dst);
      sub_1D75D4E0C((uint64_t)__dst, (uint64_t)v28);
      sub_1D7608494((uint64_t)v33, (uint64_t)v30);
      uint64_t v25 = nullsub_1(v30);
      sub_1D76085A4(v25);
      v5(v28);
      v1((void (*)(void))v5, v3);
      swift_release();
      id v23 = sub_1D7593AE8;
      uint64_t v22 = v7;
    }
    sub_1D7608510(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))v23);
  }
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D7606E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for RemoteXPCControlChannelTransport();
  uint64_t v9 = swift_allocObject();
  return sub_1D7606E88(a1, a2, v9, a4, a5);
}

uint64_t sub_1D7606E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(a3 + 56) = 33619968;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a5;
  *(void *)(a3 + 48) = a2;
  uint64_t v6 = qword_1EBDEAED8;
  swift_retain();
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  sub_1D758A804();
  sub_1D7661500();
  sub_1D7660BC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(a3 + 16) = 0x707865746F6D6572;
  *(void *)(a3 + 24) = 0xEA00000000002D63;
  return a3;
}

uint64_t sub_1D7606F8C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D7606FC4(uint64_t a1)
{
  return sub_1D7601C28(a1, *(void (**)(unsigned char *))(v1 + 16));
}

unint64_t sub_1D7606FCC()
{
  unint64_t result = qword_1EBDEBC38;
  if (!qword_1EBDEBC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBC38);
  }
  return result;
}

unint64_t sub_1D7607018()
{
  unint64_t result = qword_1EBDEBC30;
  if (!qword_1EBDEBC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDEBC30);
  }
  return result;
}

uint64_t sub_1D7607064()
{
  return sub_1D7601D30(*(uint64_t (**)(unsigned char *))(v0 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_1D7607084()
{
  sub_1D7601B20(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_1D760708C()
{
  return objectdestroy_11Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1D76070A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1D76070D0(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_6();
  v3();
  return a1;
}

uint64_t sub_1D7607124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D760718C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D76071C4()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D7607214(uint64_t a1)
{
  return sub_1D76034C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1D7607224(uint64_t a1)
{
  return sub_1D7604224(a1, v1);
}

uint64_t sub_1D760722C()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D7607274()
{
  return sub_1D76043C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void *))(v0 + 40), *(void *)(v0 + 48));
}

void sub_1D7607284(uint64_t a1)
{
  sub_1D7606218(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1D760728C()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_21();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1D76072BC()
{
}

uint64_t sub_1D76072C8()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D7601630();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1D76072F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D7602744(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1D7601634);
}

uint64_t sub_1D760731C()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D76016AC();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1D7607348(char *a1)
{
  return sub_1D76016D8(*a1);
}

uint64_t sub_1D7607370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D7602744(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1D7601634);
}

uint64_t sub_1D760739C()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D76027B4();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_1D76073C8()
{
  OUTLINED_FUNCTION_132();
  uint64_t result = sub_1D7602868();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_1D76073F4(char *a1)
{
  return sub_1D7602894(*a1);
}

uint64_t sub_1D760741C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D76029B8(a1);
}

id sub_1D760744C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int16 a19)
{
  int v19 = (a19 >> 11) & 3;
  if (v19 == 1)
  {
    return result;
  }
  else if (!v19)
  {
    return (id)sub_1D7607558(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704,
                 (uint64_t (*)(void))sub_1D75D480C,
                 (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  }
  return result;
}

uint64_t sub_1D7607558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(void),uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a17 & 0x2000) != 0) {
    return sub_1D76075E8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 0xDFFF, a19, a20,
  }
             a21);
  return a18();
}

uint64_t sub_1D76075E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v20 = a17 >> 14;
  switch(v20)
  {
    case 2:
      return a20(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    case 1:
      return a19();
    case 0:
      return a18();
  }
  return result;
}

uint64_t initializeWithCopy for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  unsigned __int16 v22 = *(_WORD *)(a2 + 144);
  sub_1D760744C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(_WORD *)(a1 + 144) = v22;
  return a1;
}

uint64_t assignWithCopy for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v29 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v31 = *(void *)(a2 + 96);
  uint64_t v32 = *(void *)(a2 + 104);
  uint64_t v33 = *(void *)(a2 + 112);
  uint64_t v34 = *(void *)(a2 + 120);
  uint64_t v35 = *(void *)(a2 + 128);
  uint64_t v36 = *(void *)(a2 + 136);
  unsigned __int16 v37 = *(_WORD *)(a2 + 144);
  sub_1D760744C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
  id v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  uint64_t v25 = *(void *)(a1 + 136);
  unsigned __int16 v26 = *(_WORD *)(a1 + 144);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v30;
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v32;
  *(void *)(a1 + 112) = v33;
  *(void *)(a1 + 120) = v34;
  *(void *)(a1 + 128) = v35;
  *(void *)(a1 + 136) = v36;
  *(_WORD *)(a1 + 144) = v37;
  sub_1D758A1C8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v25, v26);
  return a1;
}

void *__swift_memcpy146_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x92uLL);
}

uint64_t assignWithTake for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 144);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  unsigned __int16 v18 = *(_WORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  long long v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = v3;
  sub_1D758A1C8(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelTransportEvent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 146))
    {
      unsigned int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int16 *)(a1 + 144) >> 11) & 3 | (4
                                                         * ((*(void *)a1 >> 58) & 0x3C | (*(void *)a1 >> 1) & 3))) ^ 0xFF;
      if (v2 >= 0xFD) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

void storeEnumTagSinglePayload for ControlChannelTransportEvent(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 144) = 0;
    *(void *)a1 = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(a1 + 146) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(a1 + 146) = 0;
    }
    if (a2)
    {
      uint64_t v4 = (-(char)a2 >> 2) & 0x3F | (-(char)a2 << 6);
      int v5 = (-a2 & 3) << 11;
      *(void *)a1 = ((v4 << 58) | (2 * v4)) & 0xF000000000000007;
      bzero((void *)(a1 + 8), 0x88uLL);
      *(_WORD *)(a1 + 144) = v5;
    }
  }
}

uint64_t dispatch thunk of ControlChannelTransport.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlChannelTransport.physicallyConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlChannelTransport.networkAdvertActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ControlChannelTransport.start(withTargetQueue:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ControlChannelTransport.send(message:invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of ControlChannelTransport.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlChannelTransport.getHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ControlChannelTransport.endpoint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ControlChannelTransport.isPeerToPeer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t type metadata accessor for RemoteXPCControlChannelTransport()
{
  return self;
}

uint64_t method lookup function for RemoteXPCControlChannelTransport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteXPCControlChannelTransport);
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.endpoint.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.__allocating_init(xpcConnection:to:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.start(withTargetQueue:eventHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.send(message:invokingCompletionHandlerOn:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.getHost()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.isPeerToPeer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t type metadata accessor for NWConnectionControlChannelTransport()
{
  return self;
}

uint64_t method lookup function for NWConnectionControlChannelTransport(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NWConnectionControlChannelTransport);
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.isPeerToPeer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.networkAdvertActive.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.__allocating_init(connection:endpoint:netLinkManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.start(withTargetQueue:eventHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.getHost()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.send(content:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.receive(minLength:maxLength:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t sub_1D7608160()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D7608198()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D76081E0()
{
  sub_1D76059CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *))(v0 + 32));
}

void sub_1D76081EC(uint64_t a1)
{
  *(void *)a1 = 1;
  bzero((void *)(a1 + 8), 0x88uLL);
  *(_WORD *)(a1 + 144) = 4096;
}

uint64_t sub_1D7608224()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1D760825C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D7608290(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_16();
  uint64_t v4 = OUTLINED_FUNCTION_36();
  v5(v4);
  return a2;
}

uint64_t sub_1D76082EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D7608334(uint64_t a1)
{
  sub_1D7608494(a1, (uint64_t)v1);
  sub_1D7606A8C();
}

void sub_1D760839C(uint64_t a1)
{
  sub_1D7608494(a1, (uint64_t)v1);
  sub_1D7606A8C();
}

void sub_1D7608408(uint64_t a1)
{
}

uint64_t sub_1D7608414()
{
  return objectdestroy_11Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1D760842C(uint64_t a1, unint64_t a2, char a3)
{
  sub_1D7606654(a1, a2, a3 & 1, *(void (**)(unsigned char *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), (int)&unk_1F2EE32F8, (uint64_t)sub_1D76084FC, (void (*)(void, void, uint64_t, uint64_t))sub_1D7606328);
}

uint64_t sub_1D7608488(uint64_t result)
{
  *(unsigned char *)(result + 146) = 1;
  return result;
}

uint64_t sub_1D7608494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D76084FC(void *a1, unint64_t a2, char a3)
{
  sub_1D7657930(a1, a2, a3 & 1, *(void (**)(char *))(v3 + 16));
}

uint64_t sub_1D7608508(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 146);
}

uint64_t sub_1D7608510(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, int))
{
  BYTE2(v4) = *(unsigned char *)(a1 + 146);
  LOWORD(v4) = *(_WORD *)(a1 + 144);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), v4);
  return a1;
}

uint64_t sub_1D7608584(uint64_t result)
{
  __int16 v1 = *(_WORD *)(result + 144) & 0xE7FF;
  *(void *)result &= 0xFFFFFFFFFFFFFF9uLL;
  *(_WORD *)(result + 144) = v1;
  return result;
}

uint64_t sub_1D76085A4(uint64_t a1)
{
  sub_1D7607558(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(_WORD *)(a1 + 144), (uint64_t (*)(void))sub_1D75934F4, (uint64_t (*)(void))sub_1D75D4704,
    (uint64_t (*)(void))sub_1D75D480C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D75D40B4);
  return a1;
}

uint64_t objectdestroy_81Tm()
{
  swift_release();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_21();
  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1D7608694(uint64_t a1)
{
}

uint64_t sub_1D76086A0()
{
  return objectdestroy_11Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_11Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  uint64_t v3 = OUTLINED_FUNCTION_21();
  return MEMORY[0x1F4186498](v3, v4, v5);
}

void sub_1D7608700(uint64_t a1, unint64_t a2, char a3)
{
  sub_1D7606654(a1, a2, a3 & 1, *(void (**)(unsigned char *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), (int)&unk_1F2EE3398, (uint64_t)sub_1D76087B0, (void (*)(void, void, uint64_t, uint64_t))sub_1D75FA64C);
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return sub_1D7661560();
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_3(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void sub_1D7608864(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  OS_dispatch_queue.parentQueue.setter(v1);
}

void OS_dispatch_queue.parentQueue.setter(void *a1)
{
  swift_beginAccess();
  objc_setAssociatedObject(v1, &unk_1EA82C150, a1, (void *)1);
  swift_endAccess();
}

void (*OS_dispatch_queue.parentQueue.modify(uint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = OS_dispatch_queue.parentQueue.getter();
  return sub_1D7608948;
}

void sub_1D7608948(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    OS_dispatch_queue.parentQueue.setter(v2);
  }
  else
  {
    OS_dispatch_queue.parentQueue.setter(*a1);
  }
}

uint64_t OS_dispatch_queue.childQueue(label:qos:attributes:autoreleaseFrequency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  sub_1D758DF20();
  sub_1D7660950();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12 - v11, a3);
  sub_1D7660E60();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16 - v15, a4);
  sub_1D7660E90();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_1_7();
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20 - v19, a5);
  swift_bridgeObjectRetain();
  id v22 = v5;
  uint64_t v23 = sub_1D7660EB0();
  id v24 = v22;
  OS_dispatch_queue.parentQueue.setter(v6);
  return v23;
}

uint64_t sub_1D7608B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OS_dispatch_queue.parentQueue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1D7608BA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1D76611A0();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1D7609A04(v4);
      sub_1D7661170();
      sub_1D76611B0();
      sub_1D76611C0();
      sub_1D7661180();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_1D7608C54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_1D7661520();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  uint64_t v9 = (void *)sub_1D765FD50();

  id v10 = sub_1D7608DA8();
  return v10;
}

id sub_1D7608DA8()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = sub_1D7660A30();

  uint64_t v3 = sub_1D7608EA4(v2);
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_1D76092D0(v3);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v0, sel_domain);
  uint64_t v6 = sub_1D7660B10();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v0, sel_code);
  id v10 = objc_allocWithZone(MEMORY[0x1E4F28C50]);
  return sub_1D75D8060(v6, v8, (uint64_t)v9, v4);
}

uint64_t sub_1D7608EA4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
  uint64_t v20 = sub_1D7660A50();
  sub_1D75B9418(v21, a1);
  uint64_t v2 = v21[0];
  uint64_t v3 = v21[1];
  int64_t v4 = v21[3];
  unint64_t v5 = v21[4];
  int64_t v6 = (unint64_t)(v21[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v8);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    sub_1D758DD0C(*(void *)(v2 + 56) + 32 * v8, (uint64_t)v19);
    *(void *)&long long v18 = v14;
    *((void *)&v18 + 1) = v13;
    v17[0] = v18;
    v17[1] = v19[0];
    void v17[2] = v19[1];
    swift_bridgeObjectRetain();
    sub_1D7609604((uint64_t)&v20, v17);
    sub_1D758C650((uint64_t)v17, &qword_1EA82C160);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_24;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v9);
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 3;
      if (v4 + 3 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 4;
      if (v4 + 4 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 5;
      if (v4 + 5 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        int64_t v9 = v11;
      }
      else
      {
        int64_t v9 = v4 + 6;
        if (v4 + 6 >= v6) {
          goto LABEL_24;
        }
        unint64_t v10 = *(void *)(v3 + 8 * v9);
        if (!v10)
        {
          int64_t v15 = v4 + 7;
          while (v15 < v6)
          {
            unint64_t v10 = *(void *)(v3 + 8 * v15++);
            if (v10)
            {
              int64_t v9 = v15 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v20;
        }
      }
    }
LABEL_15:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    int64_t v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_1D758C650((uint64_t)v17, &qword_1EA82C160);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D76090BC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
  uint64_t v16 = sub_1D7660A50();
  sub_1D75B9418(v17, a1);
  uint64_t v2 = v17[0];
  uint64_t v3 = v17[1];
  int64_t v4 = v17[3];
  unint64_t v5 = v17[4];
  int64_t v6 = (unint64_t)(v17[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    sub_1D758CA38(*(void *)(v2 + 48) + 40 * v8, (uint64_t)__src);
    sub_1D758DD0C(*(void *)(v2 + 56) + 32 * v8, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1D76097F8((uint64_t)&v16, (uint64_t)__dst);
    sub_1D758C650((uint64_t)__dst, &qword_1EA82C178);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_24;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v9);
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 3;
      if (v4 + 3 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 4;
      if (v4 + 4 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 5;
      if (v4 + 5 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        int64_t v9 = v11;
      }
      else
      {
        int64_t v9 = v4 + 6;
        if (v4 + 6 >= v6) {
          goto LABEL_24;
        }
        unint64_t v10 = *(void *)(v3 + 8 * v9);
        if (!v10)
        {
          int64_t v12 = v4 + 7;
          while (v12 < v6)
          {
            unint64_t v10 = *(void *)(v3 + 8 * v12++);
            if (v10)
            {
              int64_t v9 = v12 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v16;
        }
      }
    }
LABEL_15:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    int64_t v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_1D758C650((uint64_t)__dst, &qword_1EA82C178);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1D76092D0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEBE40);
    uint64_t v2 = (void *)sub_1D7661290();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  sub_1D75B9418(v31, a1);
  uint64_t v3 = v31[0];
  int64_t v4 = v31[3];
  unint64_t v5 = v31[4];
  uint64_t v21 = v31[1];
  int64_t v22 = (unint64_t)(v31[2] + 64) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        unint64_t v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v8 = v7 | (v4 << 6);
      }
      else
      {
        int64_t v9 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_31;
        }
        if (v9 >= v22) {
          goto LABEL_28;
        }
        unint64_t v10 = *(void *)(v21 + 8 * v9);
        int64_t v11 = v4 + 1;
        if (!v10)
        {
          int64_t v11 = v4 + 2;
          if (v4 + 2 >= v22) {
            goto LABEL_28;
          }
          unint64_t v10 = *(void *)(v21 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 3;
            if (v4 + 3 >= v22) {
              goto LABEL_28;
            }
            unint64_t v10 = *(void *)(v21 + 8 * v11);
            if (!v10)
            {
              int64_t v11 = v4 + 4;
              if (v4 + 4 >= v22) {
                goto LABEL_28;
              }
              unint64_t v10 = *(void *)(v21 + 8 * v11);
              if (!v10)
              {
                int64_t v11 = v4 + 5;
                if (v4 + 5 >= v22) {
                  goto LABEL_28;
                }
                unint64_t v10 = *(void *)(v21 + 8 * v11);
                if (!v10)
                {
                  int64_t v12 = v4 + 6;
                  while (v12 < v22)
                  {
                    unint64_t v10 = *(void *)(v21 + 8 * v12++);
                    if (v10)
                    {
                      int64_t v11 = v12 - 1;
                      goto LABEL_22;
                    }
                  }
LABEL_28:
                  sub_1D7609BD8();
                  return (unint64_t)v2;
                }
              }
            }
          }
        }
LABEL_22:
        unint64_t v5 = (v10 - 1) & v10;
        unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
        int64_t v4 = v11;
      }
      sub_1D758CA38(*(void *)(v3 + 48) + 40 * v8, (uint64_t)&v29);
      uint64_t v30 = *(void *)(*(void *)(v3 + 56) + 8 * v8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
      swift_dynamicCast();
      sub_1D758CB98(&v25, v27);
      sub_1D758CB98(v27, v28);
      sub_1D758CB98(v28, &v26);
      unint64_t result = sub_1D75B6C1C();
      unint64_t v13 = result;
      if ((v14 & 1) == 0) {
        break;
      }
      int64_t v15 = (void *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v15 = v23;
      v15[1] = v24;
      uint64_t v16 = (_OWORD *)(v2[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      unint64_t result = (unint64_t)sub_1D758CB98(&v26, v16);
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v17 = (void *)(v2[6] + 16 * result);
    *uint64_t v17 = v23;
    v17[1] = v24;
    unint64_t result = (unint64_t)sub_1D758CB98(&v26, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_30;
    }
    uint64_t v2[2] = v20;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D7609604(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = (uint64_t)(a2 + 2);
  *(void *)&long long v13 = *a2;
  *((void *)&v13 + 1) = v3;
  sub_1D758DD0C((uint64_t)(a2 + 2), (uint64_t)&v14);
  *((void *)&v11 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v10 = v13;
  *((void *)&v10 + 1) = v3;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1D7609A04((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *(void *)&long long v13 = v6;
  *((void *)&v13 + 1) = v7;
  sub_1D758DD0C(v4, (uint64_t)&v14);
  *((void *)&v11 + 1) = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v10 = swift_allocObject();
  sub_1D758CB98(&v14, (_OWORD *)(v10 + 16));
  swift_bridgeObjectRetain();
  sub_1D7609A04((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = v5;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
  if (swift_dynamicCast())
  {
    long long v13 = v10;
    long long v14 = v11;
    uint64_t v15 = v12;
    sub_1D75B7074();
    swift_unknownObjectRelease();
    return sub_1D758CBA8((uint64_t)&v13);
  }
  else
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_1D758C650((uint64_t)&v10, &qword_1EA82C168);
    *(void *)&long long v13 = v5;
    swift_unknownObjectRetain();
    *(void *)&long long v10 = sub_1D7660B60();
    *((void *)&v10 + 1) = v9;
    sub_1D76610E0();
    swift_unknownObjectRetain();
    sub_1D75B7074();
    sub_1D758CBA8((uint64_t)&v13);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1D76097F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 40;
  sub_1D758CA38(a2, (uint64_t)&v12);
  sub_1D758DD0C(v3, (uint64_t)v15);
  *((void *)&v10 + 1) = MEMORY[0x1E4FBB960];
  uint64_t v4 = swift_allocObject();
  *(void *)&long long v9 = v4;
  long long v5 = v13;
  *(_OWORD *)(v4 + 16) = v12;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 48) = v14;
  uint64_t v6 = sub_1D7609A04(&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1D758CA38(a2, (uint64_t)&v12);
  sub_1D758DD0C(v3, (uint64_t)v15);
  *((void *)&v10 + 1) = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v9 = swift_allocObject();
  sub_1D758CB98(v15, (_OWORD *)(v9 + 16));
  sub_1D7609A04(&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
  sub_1D758CBA8((uint64_t)&v12);
  uint64_t v16 = v6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
  if (swift_dynamicCast())
  {
    long long v12 = v9;
    long long v13 = v10;
    uint64_t v14 = v11;
    sub_1D75B7074();
    swift_unknownObjectRelease();
    return sub_1D758CBA8((uint64_t)&v12);
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_1D758C650((uint64_t)&v9, &qword_1EA82C168);
    *(void *)&long long v12 = v6;
    swift_unknownObjectRetain();
    *(void *)&long long v9 = sub_1D7660B60();
    *((void *)&v9 + 1) = v8;
    sub_1D76610E0();
    swift_unknownObjectRetain();
    sub_1D75B7074();
    sub_1D758CBA8((uint64_t)&v12);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

void *sub_1D7609A04(uint64_t a1)
{
  sub_1D758DD0C(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C170);
  if (swift_dynamicCast())
  {
    sub_1D76090BC((uint64_t)v5);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
    uint64_t v2 = sub_1D7660A10();
LABEL_10:
    uint64_t v3 = v2;
    swift_bridgeObjectRelease();
    return (void *)v3;
  }
  sub_1D758DD0C(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B338);
  if (swift_dynamicCast())
  {
    sub_1D7608BA0((uint64_t)v5);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
    uint64_t v2 = sub_1D7660CE0();
    goto LABEL_10;
  }
  sub_1D758DD0C(a1, (uint64_t)v6);
  sub_1D75B0DAC();
  if (swift_dynamicCast())
  {
    uint64_t v3 = sub_1D7608DA8();
  }
  else
  {
    sub_1D758DD0C(a1, (uint64_t)v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C158);
    if (!swift_dynamicCast())
    {
      sub_1D758DD0C(a1, (uint64_t)v6);
      sub_1D7660B60();
      uint64_t v2 = sub_1D7660AE0();
      goto LABEL_10;
    }
    return v5;
  }
  return (void *)v3;
}

uint64_t sub_1D7609BD8()
{
  return swift_release();
}

uint64_t sub_1D7609BE0()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D7609C18()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D7609C50()
{
  sub_1D75D5108();
  uint64_t result = sub_1D7660FE0();
  qword_1EA82C180 = result;
  return result;
}

uint64_t CertificateUtilities.RawTLSPublicKeyInfo.identity.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t CertificateUtilities.RawTLSPublicKeyInfo.publicKeyDERData.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1D75934F4(v1, *(void *)(v0 + 16));
  return v1;
}

void static CertificateUtilities.createTLSRawPublicKey(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, sec_identity_t *a3@<X8>)
{
  uint64_t v7 = (__SecKey *)static P256.Signing.PrivateKey.createKeyPair()();
  if (!v3)
  {
    uint64_t v8 = v7;
    long long v9 = (__SecCertificate *)sub_1D760A15C(v7, a1, a2);
    long long v10 = (__SecIdentity *)SecIdentityCreate();
    if (v10 && (v11 = v10, sec_identity_t v12 = sec_identity_create(v10), v11, v12))
    {
      SecKeyRef v13 = SecCertificateCopyKey(v9);
      if (v13)
      {
        SecKeyRef v14 = v13;
        uint64_t v15 = SecKeyCopySubjectPublicKeyInfo();
        if (v15)
        {
          uint64_t v16 = (void *)v15;
          uint64_t v17 = sub_1D765FED0();
          BOOL v19 = v18;

          *a3 = v12;
          a3[1] = (sec_identity_t)v17;
          a3[2] = v19;
        }
        else
        {
          sub_1D75AF4C0();
          OUTLINED_FUNCTION_0();
          OUTLINED_FUNCTION_3_16();
          sub_1D7661690();
          OUTLINED_FUNCTION_4_12();
          uint64_t v36 = OUTLINED_FUNCTION_3_7();
          OUTLINED_FUNCTION_0_18(v36, v37, v38, v39, v40, v41, v42, v43, v44);
          sub_1D76616A0();
          swift_willThrow();

          swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_3_16();
        sub_1D7661690();
        OUTLINED_FUNCTION_4_12();
        uint64_t v28 = OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_0_18(v28, v29, v30, v31, v32, v33, v34, v35, v44);
        sub_1D76616A0();
        swift_willThrow();

        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1D75AF4C0();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_2_16();
      OUTLINED_FUNCTION_4_12();
      uint64_t v20 = OUTLINED_FUNCTION_3_7();
      OUTLINED_FUNCTION_0_18(v20, v21, v22, v23, v24, v25, v26, v27, v44);
      sub_1D76616A0();
      swift_willThrow();
    }
  }
}

uint64_t static P256.Signing.PrivateKey.createKeyPair()()
{
  error[11] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D76655E0;
  uint64_t v1 = (void *)*MEMORY[0x1E4F3B720];
  uint64_t v2 = (void *)*MEMORY[0x1E4F3B768];
  *(void *)(inited + 32) = *MEMORY[0x1E4F3B720];
  *(void *)(inited + 40) = v2;
  uint64_t v3 = (void *)*MEMORY[0x1E4F3B6D0];
  uint64_t v4 = (void *)*MEMORY[0x1E4F3B6E0];
  *(void *)(inited + 48) = *MEMORY[0x1E4F3B6D0];
  *(void *)(inited + 56) = v4;
  long long v5 = (void *)*MEMORY[0x1E4F3B710];
  *(void *)(inited + 64) = *MEMORY[0x1E4F3B710];
  id v6 = v1;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  *(void *)(inited + 72) = sub_1D7660D40();
  type metadata accessor for CFString(0);
  sub_1D760A7C4();
  sub_1D7660A50();
  error[0] = 0;
  CFDictionaryRef v11 = (const __CFDictionary *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  SecKeyRef RandomKey = SecKeyCreateRandomKey(v11, error);

  CFErrorRef v13 = error[0];
  if (error[0])
  {
    type metadata accessor for CFError(0);
    sub_1D760A814();
    swift_allocError();
    *SecKeyRef v14 = v13;
    swift_willThrow();

    return (uint64_t)RandomKey;
  }
  if (RandomKey) {
    return (uint64_t)RandomKey;
  }
  uint64_t result = sub_1D7661260();
  __break(1u);
  return result;
}

uint64_t sub_1D760A15C(__SecKey *a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C200);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D7663320;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C208);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D7664B10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C210);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D7668990;
  id v6 = (void *)*MEMORY[0x1E4F3BBA0];
  type metadata accessor for CFString(0);
  uint64_t v8 = v7;
  *(void *)(v5 + 32) = v6;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 88) = MEMORY[0x1E4FBB1A0];
  uint64_t v10 = v9;
  *(void *)(v5 + 56) = v7;
  *(void *)(v5 + 64) = 21333;
  *(void *)(v5 + 72) = 0xE200000000000000;
  *(void *)(v4 + 32) = v5;
  *(void *)(v3 + 32) = v4;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D7664B10;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D7668990;
  CFErrorRef v13 = (void *)*MEMORY[0x1E4F3BBA8];
  *(void *)(v12 + 32) = *MEMORY[0x1E4F3BBA8];
  *(void *)(v12 + 88) = v10;
  *(void *)(v12 + 56) = v8;
  *(void *)(v12 + 64) = 0x6E4920656C707041;
  *(void *)(v12 + 72) = 0xEA00000000002E63;
  *(void *)(v11 + 32) = v12;
  *(void *)(v3 + 40) = v11;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D7664B10;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1D7668990;
  uint64_t v16 = (void *)*MEMORY[0x1E4F3BBB0];
  *(void *)(v15 + 32) = *MEMORY[0x1E4F3BBB0];
  *(void *)(v15 + 88) = v10;
  *(void *)(v15 + 56) = v8;
  *(void *)(v15 + 64) = 0xD000000000000017;
  *(void *)(v15 + 72) = 0x80000001D76762C0;
  *(void *)(v14 + 32) = v15;
  *(void *)(v3 + 48) = v14;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1D7664B10;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D7668990;
  BOOL v19 = (void *)*MEMORY[0x1E4F3BB98];
  *(void *)(v18 + 32) = *MEMORY[0x1E4F3BB98];
  *(void *)(v18 + 88) = v10;
  *(void *)(v18 + 56) = v8;
  *(void *)(v18 + 64) = a2;
  *(void *)(v18 + 72) = a3;
  *(void *)(v17 + 32) = v18;
  *(void *)(v3 + 56) = v17;
  id v20 = v6;
  id v21 = v13;
  id v22 = v16;
  id v23 = v19;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C218);
  unint64_t v49 = (void *)sub_1D7660CE0();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_1D7660D40();
  uint64_t v51 = MEMORY[0x1D94725A0](&unk_1F2EDE438, 12);
  unint64_t v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C220);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D76655E0;
  uint64_t v28 = (void *)*MEMORY[0x1E4F3B970];
  *(void *)(inited + 32) = *MEMORY[0x1E4F3B970];
  type metadata accessor for CFNumber(0);
  *(void *)(inited + 40) = v24;
  uint64_t v29 = (void *)*MEMORY[0x1E4F3BC90];
  *(void *)(inited + 64) = v30;
  *(void *)(inited + 72) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C228);
  uint64_t v31 = swift_initStackObject();
  *(_OWORD *)(v31 + 16) = xmmword_1D7664B10;
  uint64_t v32 = (void *)*MEMORY[0x1E4F3BC98];
  *(void *)(v31 + 32) = *MEMORY[0x1E4F3BC98];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC200);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1D7664B10;
  *(void *)(v33 + 32) = a2;
  *(void *)(v33 + 40) = a3;
  *(void *)(v31 + 40) = v33;
  swift_bridgeObjectRetain();
  id v34 = v28;
  id v53 = v24;
  id v35 = v29;
  id v36 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC190);
  sub_1D760A7C4();
  sub_1D7660A50();
  uint64_t v37 = sub_1D7660A10();
  swift_bridgeObjectRelease();
  type metadata accessor for CFDictionary(0);
  uint64_t v39 = v38;
  *(void *)(inited + 80) = v37;
  uint64_t v40 = (void *)*MEMORY[0x1E4F3B968];
  *(void *)(inited + 104) = v38;
  *(void *)(inited + 112) = v40;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C230);
  uint64_t v41 = swift_initStackObject();
  *(_OWORD *)(v41 + 16) = xmmword_1D7664B10;
  *(void *)(v41 + 32) = 0x332E39322E352E32;
  *(void *)(v41 + 40) = 0xE900000000000037;
  *(void *)(v41 + 48) = v51;
  *(void *)(v41 + 56) = v26;
  id v42 = v40;
  sub_1D75934F4(v51, v26);
  sub_1D7660A50();
  uint64_t v43 = sub_1D7660A10();
  swift_bridgeObjectRelease();
  *(void *)(inited + 144) = v39;
  *(void *)(inited + 120) = v43;
  sub_1D7660A50();
  uint64_t v44 = (void *)sub_1D7660A10();
  swift_bridgeObjectRelease();
  SecKeyRef v45 = SecKeyCopyPublicKey(a1);
  uint64_t SelfSignedCertificate = SecGenerateSelfSignedCertificate();
  if (SelfSignedCertificate)
  {

    sub_1D75933F0(v51, v26);
  }
  else
  {
    sub_1D7660DB0();
    if (qword_1EA82AA48 != -1) {
      swift_once();
    }
    sub_1D7660010();
    sub_1D75AF4C0();
    sub_1D7661690();
    sub_1D75B0D60();
    swift_allocError();
    sub_1D76616A0();
    swift_willThrow();

    sub_1D75933F0(v51, v26);
  }
  return SelfSignedCertificate;
}

unint64_t sub_1D760A7C4()
{
  unint64_t result = qword_1EA82C190;
  if (!qword_1EA82C190)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C190);
  }
  return result;
}

unint64_t sub_1D760A814()
{
  unint64_t result = qword_1EA82C198;
  if (!qword_1EA82C198)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C198);
  }
  return result;
}

ValueMetadata *type metadata accessor for CertificateUtilities()
{
  return &type metadata for CertificateUtilities;
}

uint64_t destroy for CertificateUtilities.RawTLSPublicKeyInfo(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  return sub_1D75933F0(v2, v3);
}

void *_s19RemotePairingDevice20CertificateUtilitiesO19RawTLSPublicKeyInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_unknownObjectRetain();
  sub_1D75934F4(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for CertificateUtilities.RawTLSPublicKeyInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_1D75934F4(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_1D75933F0(v6, v7);
  return a1;
}

void *assignWithTake for CertificateUtilities.RawTLSPublicKeyInfo(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1D75933F0(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for CertificateUtilities.RawTLSPublicKeyInfo()
{
  return &type metadata for CertificateUtilities.RawTLSPublicKeyInfo;
}

uint64_t sub_1D760A9B0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1D75A6570(0, v1, 0);
  uint64_t result = sub_1D761E35C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v6 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      int v7 = v5;
      uint64_t v8 = a1 + 64;
      while ((*(void *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v7 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_20;
        }
        sub_1D75B93BC(*(void *)(a1 + 56) + 48 * v6, (uint64_t)v12);
        v11[0] = v12[0];
        v11[1] = v12[1];
        void v11[2] = v12[2];
        sub_1D758B1EC((uint64_t)v11, (uint64_t)v13);
        sub_1D75B8E3C((uint64_t)v11);
        uint64_t v2 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D75A6570(0, *(void *)(v2 + 16) + 1, 1);
          uint64_t v2 = v14;
        }
        unint64_t v10 = *(void *)(v2 + 16);
        unint64_t v9 = *(void *)(v2 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1D75A6570(v9 > 1, v10 + 1, 1);
          uint64_t v2 = v14;
        }
        *(void *)(v2 + 16) = v10 + 1;
        uint64_t result = sub_1D758AB78(v13, v2 + 40 * v10 + 32);
        if ((uint64_t)v6 >= -(-1 << *(unsigned char *)(a1 + 32))) {
          goto LABEL_21;
        }
        uint64_t v8 = a1 + 64;
        if ((*(void *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0) {
          goto LABEL_22;
        }
        if (v7 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_23;
        }
        uint64_t result = sub_1D76610A0();
        if (!--v1) {
          return v2;
        }
        unint64_t v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          int v7 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

BOOL sub_1D760ABB8(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_1D760ABC4(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1D760ABD0(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

uint64_t sub_1D760ABDC()
{
  return sub_1D7660930();
}

void sub_1D760ABF4()
{
}

uint64_t sub_1D760ACB0()
{
  sub_1D75AEF50(0, (unint64_t *)&qword_1EBDEC4C0);
  uint64_t result = sub_1D7660FE0();
  qword_1EA82C240 = result;
  return result;
}

uint64_t sub_1D760AD2C()
{
  type metadata accessor for AtomicCounter();
  swift_allocObject();
  uint64_t result = AtomicCounter.init()();
  qword_1EA82C248 = result;
  return result;
}

uint64_t sub_1D760AD6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x626174617267696DLL && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_1D7661560() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6150656C676E6973 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1D7661560();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D760AE6C(char a1)
{
  if (a1) {
    return 0x6150656C676E6973;
  }
  else {
    return 0x626174617267696DLL;
  }
}

uint64_t sub_1D760AEA8()
{
  return sub_1D760AE6C(*v0);
}

uint64_t sub_1D760AEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D760AD6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D760AED8(uint64_t a1)
{
  unint64_t v2 = sub_1D760B288();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D760AF14(uint64_t a1)
{
  unint64_t v2 = sub_1D760B288();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D760AF50(uint64_t a1)
{
  unint64_t v2 = sub_1D760B320();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D760AF8C(uint64_t a1)
{
  unint64_t v2 = sub_1D760B320();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D760AFC8(uint64_t a1)
{
  unint64_t v2 = sub_1D760B2D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D760B004(uint64_t a1)
{
  unint64_t v2 = sub_1D760B2D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void TunnelConnectionType.encode(to:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C250);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C258);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_52();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C260);
  OUTLINED_FUNCTION_0_5();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_25();
  int v10 = *(unsigned __int8 *)(v0 + 8);
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1D760B288();
  sub_1D76617C0();
  if (v10 == 1)
  {
    sub_1D760B320();
    sub_1D76613F0();
    OUTLINED_FUNCTION_6();
    v11();
    OUTLINED_FUNCTION_45();
    v12();
  }
  else
  {
    sub_1D760B2D4();
    sub_1D76613F0();
    sub_1D75E9148();
    sub_1D7661490();
    OUTLINED_FUNCTION_6();
    v13();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  }
  OUTLINED_FUNCTION_4_0();
}

unint64_t sub_1D760B288()
{
  unint64_t result = qword_1EA82C268;
  if (!qword_1EA82C268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C268);
  }
  return result;
}

unint64_t sub_1D760B2D4()
{
  unint64_t result = qword_1EA82C270;
  if (!qword_1EA82C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C270);
  }
  return result;
}

unint64_t sub_1D760B320()
{
  unint64_t result = qword_1EA82C280;
  if (!qword_1EA82C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA82C280);
  }
  return result;
}

void TunnelConnectionType.init(from:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  uint64_t v30 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C288);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C290);
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_9();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C298);
  OUTLINED_FUNCTION_0_5();
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_25();
  int v10 = (void *)OUTLINED_FUNCTION_176();
  __swift_project_boxed_opaque_existential_0Tm(v10, v11);
  sub_1D760B288();
  sub_1D76617A0();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v32 = v3;
  uint64_t v12 = sub_1D76613D0();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13
    || (char v14 = *(unsigned char *)(v12 + 32),
        sub_1D75AB7D8(1, v13, v12, v12 + 32, 0, (2 * v13) | 1),
        uint64_t v16 = v15,
        unint64_t v18 = v17,
        swift_bridgeObjectRelease(),
        v16 != v18 >> 1))
  {
    uint64_t v19 = v1;
    uint64_t v20 = sub_1D7661150();
    OUTLINED_FUNCTION_3_0();
    id v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82B490);
    *id v22 = &type metadata for TunnelConnectionType;
    sub_1D76612E0();
    OUTLINED_FUNCTION_0();
    sub_1D7661140();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v19, v7);
    uint64_t v3 = v32;
LABEL_7:
    uint64_t v23 = v3;
    goto LABEL_8;
  }
  if (v14)
  {
    sub_1D760B2D4();
    OUTLINED_FUNCTION_183_0();
    sub_1D75E8B04();
    sub_1D7661380();
    OUTLINED_FUNCTION_6();
    v26();
    swift_unknownObjectRelease();
    uint64_t v27 = OUTLINED_FUNCTION_169_0();
    v28(v27);
    uint64_t v29 = v33;
  }
  else
  {
    sub_1D760B320();
    OUTLINED_FUNCTION_183_0();
    OUTLINED_FUNCTION_6();
    v24();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6();
    v25();
    uint64_t v29 = 0;
  }
  *(void *)uint64_t v30 = v29;
  *(unsigned char *)(v30 + 8) = v14 ^ 1;
  uint64_t v23 = v32;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_0Tm(v23);
  OUTLINED_FUNCTION_4_0();
}

void sub_1D760B7A8()
{
}

void sub_1D760B7C0()
{
}

RemotePairingDevice::TunnelConnectionPriority __swiftcall TunnelConnectionPriority.init(rawValue:)(RemotePairingDevice::TunnelConnectionPriority rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static TunnelConnectionPriority.default.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static TunnelConnectionPriority.ncm.getter(void *a1@<X8>)
{
  *a1 = 100;
}

uint64_t TunnelConnectionPriority.rawValue.getter()
{
  return *(void *)v0;
}

BOOL static TunnelConnectionPriority.< infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

RemotePairingDevice::TunnelConnectionPriority sub_1D760B810@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = TunnelConnectionPriority.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1D760B83C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TunnelConnectionPriority.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1D760B864()
{
  return sub_1D7660CD0();
}

uint64_t sub_1D760B8C4()
{
  return sub_1D7660CB0();
}

uint64_t sub_1D760B918(uint64_t a1)
{
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  uint64_t v2 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1D758B1EC(a1, (uint64_t)&v9 - v6);
  swift_storeEnumTagMultiPayload();
  sub_1D760F4F4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_1D760B9F4(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_72_0();
  uint64_t v6 = *a2;
  sub_1D758B1EC(a1, v2);
  *(void *)(v2 + 40) = v6;
  OUTLINED_FUNCTION_155();
  swift_storeEnumTagMultiPayload();
  sub_1D760F4F4();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_152_0();
  return v7();
}

uint64_t sub_1D760BAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  sub_1D7661000();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_72_0();
  sub_1D760BCE0(v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    OUTLINED_FUNCTION_116_0();
    uint64_t result = v7();
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(v4 + 88);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(boxed_opaque_existential_0, v2, v5);
  }
  return result;
}

uint64_t sub_1D760BC10(uint64_t a1)
{
  uint64_t v2 = sub_1D7661000();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - v3;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - v3, a1);
  return sub_1D760BD78((uint64_t)v4);
}

uint64_t sub_1D760BCE0@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_150_0();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_150_0();
  sub_1D7661000();
  OUTLINED_FUNCTION_2_2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_1D760BD78(uint64_t a1)
{
  OUTLINED_FUNCTION_150_0();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  OUTLINED_FUNCTION_150_0();
  sub_1D7661000();
  OUTLINED_FUNCTION_2_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_1D760BE20())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D760BE70(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D75EE174(a1, (uint64_t)v4, (uint64_t *)&unk_1EA82C2A0);
  return sub_1D760BF64((uint64_t)v4);
}

uint64_t sub_1D760BF08@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v4 = v1 + *(void *)(v3 + 112);
  OUTLINED_FUNCTION_4_3();
  return sub_1D75EE174(v4, a1, (uint64_t *)&unk_1EA82C2A0);
}

uint64_t sub_1D760BF64(uint64_t a1)
{
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_47_2();
  sub_1D7592558(a1, v1, (uint64_t *)&unk_1EA82C2A0);
  return swift_endAccess();
}

uint64_t (*sub_1D760BFBC())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D760C00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1D760C078();
  *(_WORD *)a1 = result;
  *(unsigned char *)(a1 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_1D760C040(unsigned __int16 *a1)
{
  return sub_1D760C0BC(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

uint64_t sub_1D760C078()
{
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_26_3();
  return *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
}

uint64_t sub_1D760C0BC(int a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t result = swift_beginAccess();
  *(_WORD *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 2) = BYTE2(a1) & 1;
  return result;
}

uint64_t (*sub_1D760C11C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D760C16C()
{
  return sub_1D760C21C();
}

uint64_t sub_1D760C1AC()
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v2 = (uint64_t *)(v0 + *(void *)(v1 + 128));
  if (v2[1])
  {
    uint64_t v3 = *v2;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t *v2 = v3;
    v2[1] = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D760C21C()
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v2 = (void *)(v0 + *(void *)(v1 + 128));
  void *v2 = v3;
  v2[1] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D760C248(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1D760C1AC();
  a1[1] = v3;
  return sub_1D760C290;
}

uint64_t sub_1D760C290(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_1D760C21C();
  }
  swift_bridgeObjectRetain();
  sub_1D760C21C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D760C304@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v4 = v1 + *(void *)(v3 + 136);
  OUTLINED_FUNCTION_4_3();
  return sub_1D758B1EC(v4, a1);
}

uint64_t sub_1D760C358(long long *a1)
{
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_47_2();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  sub_1D758AB78(a1, v1);
  return swift_endAccess();
}

void sub_1D760C3B0()
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v2 = (uint64_t *)(v0 + *(void *)(v1 + 144));
  uint64_t v3 = *v2;
  LOBYTE(v2) = *((unsigned char *)v2 + 8);
  *(void *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 8) = (_BYTE)v2;
}

uint64_t sub_1D760C3E0(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 144);
  *(void *)uint64_t v3 = *(void *)result;
  *(unsigned char *)(v3 + 8) = v2;
  return result;
}

uint64_t sub_1D760C40C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D760C44C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D760C48C()
{
  return swift_bridgeObjectRetain();
}

id sub_1D760C4CC()
{
  OUTLINED_FUNCTION_1_9();
  return *(id *)(v0 + *(void *)(v1 + 176));
}

uint64_t sub_1D760C4EC()
{
  OUTLINED_FUNCTION_1_9();
  return *(unsigned __int8 *)(v0 + *(void *)(v1 + 184));
}

void sub_1D760C50C()
{
  OUTLINED_FUNCTION_1_9();
  *(unsigned char *)(v0 + *(void *)(v1 + 184)) = v2;
}

uint64_t sub_1D760C52C@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_9();
  uint64_t v4 = v1 + *(void *)(v3 + 192);
  OUTLINED_FUNCTION_4_3();
  return sub_1D75EE174(v4, a1, &qword_1EA82C2D0);
}

uint64_t sub_1D760C588(uint64_t a1)
{
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_47_2();
  sub_1D7592558(a1, v1, &qword_1EA82C2D0);
  return swift_endAccess();
}

uint64_t sub_1D760C5E0()
{
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_143_0(*(void *)(v0 + 200));
}

uint64_t sub_1D760C610()
{
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_37_1(v1, v2, *(void *)(v0 + 200));
}

uint64_t sub_1D760C62C()
{
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_143_0(*(void *)(v0 + 208));
}

uint64_t sub_1D760C65C()
{
  OUTLINED_FUNCTION_1_9();
  return OUTLINED_FUNCTION_37_1(v1, v2, *(void *)(v0 + 208));
}

uint64_t sub_1D760C678()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D760C698()
{
  OUTLINED_FUNCTION_1_9();
  *(void *)(v0 + *(void *)(v1 + 216)) = v2;
  return swift_unknownObjectRelease();
}

uint64_t sub_1D760C6C0()
{
  OUTLINED_FUNCTION_1_9();
  *(void *)(v0 + *(void *)(v1 + 224)) = v2;
  return swift_release();
}

uint64_t TunnelEndpoint.__allocating_init(connection:workQueue:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_100_0();
  uint64_t v1 = OUTLINED_FUNCTION_11_3();
  TunnelEndpoint.init(connection:workQueue:)(v1, v2);
  return v0;
}

void *TunnelEndpoint.init(connection:workQueue:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  __swift_storeEnumTagSinglePayload((uint64_t)v3 + *(void *)(*v3 + 104), 1, 1, *(void *)(*v3 + 80));
  OUTLINED_FUNCTION_8_12();
  uint64_t v7 = (uint64_t)v3 + *(void *)(v6 + 112);
  uint64_t v8 = sub_1D7660430();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  OUTLINED_FUNCTION_8_12();
  int v10 = (char *)v3 + *(void *)(v9 + 120);
  *(_WORD *)int v10 = 0;
  _OWORD v10[2] = 1;
  OUTLINED_FUNCTION_8_12();
  uint64_t v12 = (void *)((char *)v3 + *(void *)(v11 + 128));
  *uint64_t v12 = 0;
  v12[1] = 0;
  OUTLINED_FUNCTION_8_12();
  char v14 = (char *)v3 + *(void *)(v13 + 144);
  *(void *)char v14 = 0;
  v14[8] = 1;
  OUTLINED_FUNCTION_8_12();
  uint64_t v16 = *(void *)(v15 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA40);
  sub_1D75B2374((unint64_t *)&unk_1EA82C2B0, (uint64_t *)&unk_1EA82BA40);
  *(void *)((char *)v3 + v16) = OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_8_12();
  uint64_t v18 = *(void *)(v17 + 160);
  *(void *)((char *)v3 + v18) = OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_8_12();
  uint64_t v20 = *(void *)(v19 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
  OUTLINED_FUNCTION_30_3();
  *(void *)((char *)v3 + v20) = sub_1D7660A50();
  OUTLINED_FUNCTION_8_12();
  uint64_t v22 = (uint64_t)v3 + *(void *)(v21 + 192);
  uint64_t v23 = type metadata accessor for TunnelInterfaceParameters();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  OUTLINED_FUNCTION_8_12();
  unint64_t v25 = (void *)((char *)v3 + *(void *)(v24 + 200));
  *unint64_t v25 = 0;
  v25[1] = 0;
  OUTLINED_FUNCTION_8_12();
  uint64_t v27 = (void *)((char *)v3 + *(void *)(v26 + 208));
  *uint64_t v27 = 0;
  v27[1] = 0;
  OUTLINED_FUNCTION_8_12();
  *(void *)((char *)v3 + *(void *)(v28 + 216)) = 0;
  OUTLINED_FUNCTION_8_12();
  *(void *)((char *)v3 + *(void *)(v29 + 224)) = 0;
  OUTLINED_FUNCTION_8_12();
  sub_1D758B1EC(a1, (uint64_t)v3 + *(void *)(v30 + 136));
  *(void *)char v14 = 0;
  v14[8] = 0;
  OUTLINED_FUNCTION_8_12();
  *(void *)((char *)v3 + *(void *)(v31 + 176)) = a2;
  OUTLINED_FUNCTION_8_12();
  *((unsigned char *)v3 + *(void *)(v32 + 184)) = 64;
  id v33 = a2;
  sub_1D7661100();
  swift_bridgeObjectRelease();
  if (qword_1EA82AA58 != -1) {
    swift_once();
  }
  sub_1D758A804();
  sub_1D7661500();
  sub_1D7660BC0();

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  uint64_t v3[2] = 0x6E656C656E6E7574;
  v3[3] = 0xEF2D746E696F7064;
  return v3;
}

uint64_t TunnelEndpoint.__allocating_init(id:connection:workQueue:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v6 = OUTLINED_FUNCTION_100_0();
  uint64_t v7 = OUTLINED_FUNCTION_155();
  TunnelEndpoint.init(id:connection:workQueue:)(v7, v8, a3, a4);
  return v6;
}

uint64_t TunnelEndpoint.init(id:connection:workQueue:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  OUTLINED_FUNCTION_17_9();
  __swift_storeEnumTagSinglePayload(v4 + *(void *)(v8 + 104), 1, 1, *(void *)(v9 + 80));
  OUTLINED_FUNCTION_1_9();
  uint64_t v11 = v4 + *(void *)(v10 + 112);
  uint64_t v12 = sub_1D7660430();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  OUTLINED_FUNCTION_1_9();
  uint64_t v14 = v4 + *(void *)(v13 + 120);
  *(_WORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 2) = 1;
  OUTLINED_FUNCTION_1_9();
  uint64_t v16 = (void *)(v4 + *(void *)(v15 + 128));
  void *v16 = 0;
  v16[1] = 0;
  OUTLINED_FUNCTION_1_9();
  uint64_t v18 = v4 + *(void *)(v17 + 144);
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  OUTLINED_FUNCTION_1_9();
  uint64_t v20 = *(void *)(v19 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA40);
  sub_1D75B2374((unint64_t *)&unk_1EA82C2B0, (uint64_t *)&unk_1EA82BA40);
  *(void *)(v4 + v20) = OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_1_9();
  uint64_t v22 = *(void *)(v21 + 160);
  *(void *)(v4 + v22) = OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_1_9();
  uint64_t v24 = *(void *)(v23 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
  OUTLINED_FUNCTION_119_0();
  *(void *)(v4 + v24) = sub_1D7660A50();
  OUTLINED_FUNCTION_1_9();
  uint64_t v26 = v4 + *(void *)(v25 + 192);
  uint64_t v27 = type metadata accessor for TunnelInterfaceParameters();
  __swift_storeEnumTagSinglePayload(v26, 1, 1, v27);
  OUTLINED_FUNCTION_1_9();
  uint64_t v29 = (void *)(v4 + *(void *)(v28 + 200));
  *uint64_t v29 = 0;
  v29[1] = 0;
  OUTLINED_FUNCTION_1_9();
  uint64_t v31 = (void *)(v4 + *(void *)(v30 + 208));
  *uint64_t v31 = 0;
  v31[1] = 0;
  OUTLINED_FUNCTION_1_9();
  *(void *)(v4 + *(void *)(v32 + 216)) = 0;
  OUTLINED_FUNCTION_1_9();
  *(void *)(v4 + *(void *)(v33 + 224)) = 0;
  OUTLINED_FUNCTION_1_9();
  sub_1D758AB78(a3, v4 + *(void *)(v34 + 136));
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 0;
  OUTLINED_FUNCTION_1_9();
  *(void *)(v4 + *(void *)(v35 + 176)) = a4;
  OUTLINED_FUNCTION_1_9();
  *(unsigned char *)(v4 + *(void *)(v36 + 184)) = 64;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return v4;
}

uint64_t TunnelEndpoint.__allocating_init(id:connectionObject:workQueue:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = OUTLINED_FUNCTION_100_0();
  TunnelEndpoint.init(id:connectionObject:workQueue:priority:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t TunnelEndpoint.init(id:connectionObject:workQueue:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *a5;
  int v44 = *((unsigned __int8 *)a5 + 8);
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, *(void *)(v9 + 80));
  OUTLINED_FUNCTION_1_9();
  uint64_t v12 = v5 + *(void *)(v11 + 112);
  uint64_t v13 = sub_1D7660430();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  OUTLINED_FUNCTION_8_12();
  uint64_t v15 = v6 + *(void *)(v14 + 120);
  *(_WORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 2) = 1;
  OUTLINED_FUNCTION_8_12();
  uint64_t v17 = (void *)(v6 + *(void *)(v16 + 128));
  *uint64_t v17 = 0;
  v17[1] = 0;
  OUTLINED_FUNCTION_8_12();
  uint64_t v19 = v6 + *(void *)(v18 + 144);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  OUTLINED_FUNCTION_8_12();
  uint64_t v21 = (uint64_t *)(v6 + *(void *)(v20 + 152));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82BA40);
  sub_1D75B2374((unint64_t *)&unk_1EA82C2B0, (uint64_t *)&unk_1EA82BA40);
  uint64_t *v21 = OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_8_12();
  uint64_t v23 = *(void *)(v22 + 160);
  *(void *)(v6 + v23) = OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_8_12();
  uint64_t v25 = *(void *)(v24 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
  *(void *)(v6 + v25) = sub_1D7660A50();
  OUTLINED_FUNCTION_8_12();
  uint64_t v27 = v6 + *(void *)(v26 + 192);
  uint64_t v28 = type metadata accessor for TunnelInterfaceParameters();
  __swift_storeEnumTagSinglePayload(v27, 1, 1, v28);
  OUTLINED_FUNCTION_8_12();
  uint64_t v30 = (void *)(v6 + *(void *)(v29 + 200));
  *uint64_t v30 = 0;
  v30[1] = 0;
  OUTLINED_FUNCTION_8_12();
  uint64_t v32 = (void *)(v6 + *(void *)(v31 + 208));
  *uint64_t v32 = 0;
  v32[1] = 0;
  OUTLINED_FUNCTION_8_12();
  *(void *)(v6 + *(void *)(v33 + 216)) = 0;
  OUTLINED_FUNCTION_8_12();
  *(void *)(v6 + *(void *)(v34 + 224)) = 0;
  OUTLINED_FUNCTION_8_12();
  sub_1D758B1EC(a3, v6 + *(void *)(v35 + 136));
  *(void *)uint64_t v19 = v8;
  *(unsigned char *)(v19 + 8) = v44;
  if (v44 != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7664B10;
    uint64_t v37 = (void *)OUTLINED_FUNCTION_30_3();
    __swift_project_boxed_opaque_existential_0Tm(v37, v38);
    OUTLINED_FUNCTION_9_9();
    v39();
    sub_1D758B1EC(a3, inited + 48);
    *(void *)(inited + 88) = v8;
  }
  uint64_t v40 = sub_1D7660A50();
  swift_beginAccess();
  uint64_t *v21 = v40;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_12();
  *(void *)(v6 + *(void *)(v41 + 176)) = a4;
  OUTLINED_FUNCTION_8_12();
  *(unsigned char *)(v6 + *(void *)(v42 + 184)) = 64;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  __swift_destroy_boxed_opaque_existential_0Tm(a3);
  return v6;
}

void sub_1D760D174()
{
  OUTLINED_FUNCTION_97();
  uint64_t v65 = v1;
  uint64_t v66 = v2;
  int v67 = v3;
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v6 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v63 = v7;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_148_0();
  uint64_t v62 = v9;
  uint64_t v10 = (void *)sub_1D7660DD0();
  if (qword_1EA82AA50 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EA82C240;
  os_log_type_t v12 = v10;
  uint64_t v64 = v5;
  if (os_log_type_enabled((os_log_t)qword_1EA82C240, (os_log_type_t)v10))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)OUTLINED_FUNCTION_11_4();
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v68 = (uint64_t)v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2C8);
    uint64_t v14 = sub_1D7660B60();
    uint64_t v16 = sub_1D758DBE8(v14, v15, &v68);
    OUTLINED_FUNCTION_137(v16);
    sub_1D7661020();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D757C000, v11, v12, "TunnelEndpoint: Establishing a client tunnel with MTU = %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_1();
    uint64_t v5 = v64;
    OUTLINED_FUNCTION_1();
  }
  uint64_t v17 = sub_1D760D7B0(*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 184)), 0x40u);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_22:
    uint64_t v59 = v17;
    uint64_t v60 = v18;
    uint64_t v61 = OUTLINED_FUNCTION_33();
    *(void *)(v61 + 16) = v59;
    *(void *)(v61 + 24) = v60;
    uint64_t v22 = sub_1D75940A4((uint64_t)sub_1D75E0530);
    __break(1u);
    goto LABEL_23;
  }
  unsigned __int16 v19 = v67;
  if ((v67 & 0x10000) != 0)
  {
    uint64_t v20 = OUTLINED_FUNCTION_176();
    unsigned __int16 v19 = v21(v20);
  }
  uint64_t v17 = sub_1D760C5E0();
  if (v17) {
    goto LABEL_22;
  }
  sub_1D75940A4(0);
  uint64_t v22 = sub_1D760C62C();
  if (!v22)
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t))(v5 + 16);
    uint64_t v24 = OUTLINED_FUNCTION_132_0();
    if (v19 >= (unsigned __int16)v23(v24))
    {
      uint64_t v40 = *(unsigned __int16 (**)(uint64_t))(v5 + 24);
      uint64_t v41 = OUTLINED_FUNCTION_132_0();
      if (v40(v41) >= v19)
      {
        swift_retain();
        sub_1D760C6C0();
        uint64_t v57 = OUTLINED_FUNCTION_33();
        *(void *)(v57 + 16) = v65;
        *(void *)(v57 + 24) = v66;
        swift_retain();
        sub_1D760C610();
        uint64_t v58 = OUTLINED_FUNCTION_33();
        *(void *)(v58 + 16) = v65;
        *(void *)(v58 + 24) = v66;
        swift_retain();
        sub_1D760C65C();
        *uint64_t v62 = v19;
        swift_storeEnumTagMultiPayload();
        sub_1D760F4F4();
        (*(void (**)(unsigned __int16 *, uint64_t))(v63 + 8))(v62, v6);
        goto LABEL_20;
      }
      os_log_type_t v42 = sub_1D7660DB0();
      if (os_log_type_enabled((os_log_t)qword_1EA82C240, v42))
      {
        swift_retain_n();
        uint64_t v43 = (_DWORD *)OUTLINED_FUNCTION_11_4();
        uint64_t v68 = OUTLINED_FUNCTION_98_0();
        *uint64_t v43 = 136446722;
        uint64_t v10 = v43 + 1;
        uint64_t v44 = sub_1D760C1AC();
        uint64_t v46 = OUTLINED_FUNCTION_31_3(v44, v45);
        OUTLINED_FUNCTION_18_8(v46);
        swift_release_n();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_186_0();
        uint64_t v47 = sub_1D7661500();
        uint64_t v49 = OUTLINED_FUNCTION_31_3(v47, v48);
        OUTLINED_FUNCTION_18_8(v49);
        swift_bridgeObjectRelease();
        uint64_t v50 = OUTLINED_FUNCTION_94_0();
        __int16 v51 = v40(v50);
        OUTLINED_FUNCTION_182_0(v51);
        uint64_t v52 = sub_1D7661500();
        uint64_t v54 = OUTLINED_FUNCTION_31_3(v52, v53);
        OUTLINED_FUNCTION_38_4(v54);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_190_0(&dword_1D757C000, v55, v56, "%{public}s: the client tunnel MTU = %{public}s is more than the maximum supported MTU = %{public}s");
        OUTLINED_FUNCTION_136_0();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      sub_1D75B0D60();
      OUTLINED_FUNCTION_84_0();
      OUTLINED_FUNCTION_133_0();
      OUTLINED_FUNCTION_176_0();
    }
    else
    {
      os_log_type_t v25 = sub_1D7660DB0();
      if (os_log_type_enabled((os_log_t)qword_1EA82C240, v25))
      {
        swift_retain_n();
        uint64_t v26 = (_DWORD *)OUTLINED_FUNCTION_11_4();
        uint64_t v68 = OUTLINED_FUNCTION_98_0();
        _DWORD *v26 = 136446722;
        uint64_t v10 = v26 + 1;
        uint64_t v27 = sub_1D760C1AC();
        uint64_t v29 = OUTLINED_FUNCTION_31_3(v27, v28);
        OUTLINED_FUNCTION_18_8(v29);
        swift_release_n();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_186_0();
        uint64_t v30 = sub_1D7661500();
        uint64_t v32 = OUTLINED_FUNCTION_31_3(v30, v31);
        OUTLINED_FUNCTION_18_8(v32);
        swift_bridgeObjectRelease();
        uint64_t v33 = OUTLINED_FUNCTION_94_0();
        __int16 v34 = v23(v33);
        OUTLINED_FUNCTION_182_0(v34);
        uint64_t v35 = sub_1D7661500();
        uint64_t v37 = OUTLINED_FUNCTION_31_3(v35, v36);
        OUTLINED_FUNCTION_38_4(v37);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_190_0(&dword_1D757C000, v38, v39, "%{public}s: the client tunnel MTU = %{public}s is less than the minimum supported MTU = %{public}s");
        OUTLINED_FUNCTION_136_0();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_1();
      }
      sub_1D75B0D60();
      OUTLINED_FUNCTION_84_0();
      OUTLINED_FUNCTION_133_0();
      OUTLINED_FUNCTION_175_0();
    }
    sub_1D7661690();
    v65(v10);

LABEL_20:
    OUTLINED_FUNCTION_84();
    return;
  }
LABEL_23:
  sub_1D75940A4(v22);
  __break(1u);
}

uint64_t sub_1D760D7B0(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        goto LABEL_25;
      }
      goto LABEL_5;
    case 2:
      if (a1 == 64)
      {
        if (a2 != 64) {
          goto LABEL_25;
        }
        goto LABEL_8;
      }
      if (a2 == 65) {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          goto LABEL_8;
        }
      }
      else if (a2 == 97)
      {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 4:
      if (a1 == 128)
      {
        if (a2 == 128) {
          goto LABEL_8;
        }
      }
      else if (a2 == 129)
      {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 5:
      if (a1 == 160)
      {
        if (a2 != 160) {
          goto LABEL_25;
        }
LABEL_8:
        char v2 = 1;
        return v2 & 1;
      }
      if (a2 == 161) {
        goto LABEL_8;
      }
LABEL_25:
      char v2 = 0;
      return v2 & 1;
    default:
      if (a2 >= 0x20u) {
        goto LABEL_25;
      }
LABEL_5:
      char v2 = ((a1 & 1) == 0) ^ a2;
      return v2 & 1;
  }
}

void sub_1D760D8A8()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v92 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = (void *)*v0;
  uint64_t v10 = (void *)v9[10];
  uint64_t v11 = v9[11];
  uint64_t v12 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_148_0();
  uint64_t v88 = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2D0);
  uint64_t v18 = OUTLINED_FUNCTION_23_0(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_14();
  uint64_t v86 = v19;
  uint64_t v95 = type metadata accessor for TunnelInterfaceParameters();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_14_6();
  os_log_t v87 = v21;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_21_8();
  uint64_t v89 = v23;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v82 - v25;
  unsigned __int8 v27 = *((unsigned char *)v1 + v9[23]);
  uint64_t v93 = v10;
  uint64_t v94 = v11;
  if ((sub_1D760D7B0(v27, 0x40u) & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v84 = v14;
  uint64_t v85 = v12;
  uint64_t v91 = v4;
  uint64_t v10 = type metadata accessor for TunnelInterfaceParameters;
  sub_1D761E470();
  uint64_t v28 = sub_1D7660430();
  uint64_t v90 = &v82;
  OUTLINED_FUNCTION_0_5();
  uint64_t v30 = v29;
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_27();
  uint64_t v82 = *(void (**)(uint64_t, void *, uint64_t))(v30 + 16);
  uint64_t v83 = v6;
  v82(v8, v6, v28);
  sub_1D761EC1C(&qword_1EA82C2D8, MEMORY[0x1F418D9A8]);
  LOBYTE(v9) = sub_1D7660AD0();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_152_0();
  v32();
  sub_1D761E4CC((uint64_t)v26, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
  if (v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v33 = sub_1D760C5E0();
  if (v33)
  {
    uint64_t v79 = v33;
    uint64_t v80 = v34;
    uint64_t v81 = OUTLINED_FUNCTION_33();
    *(void *)(v81 + 16) = v79;
    *(void *)(v81 + 24) = v80;
    uint64_t v35 = sub_1D75940A4((uint64_t)sub_1D761F060);
    __break(1u);
  }
  else
  {
    sub_1D75940A4(0);
    uint64_t v35 = sub_1D760C62C();
    uint64_t v6 = v93;
    uint64_t v36 = v94;
    if (!v35)
    {
      unsigned int v37 = *(unsigned __int16 *)(v8 + *(int *)(v95 + 24));
      uint64_t v10 = *(void **)(v94 + 16);
      uint64_t v38 = OUTLINED_FUNCTION_159_0();
      if (v37 >= ((unsigned __int16 (*)(uint64_t, uint64_t))v10)(v38, v36))
      {
        uint64_t v50 = *(unsigned __int16 (**)(uint64_t))(v36 + 24);
        uint64_t v51 = OUTLINED_FUNCTION_159_0();
        if (v37 <= v50(v51))
        {
          swift_retain();
          sub_1D760C6C0();
          uint64_t v65 = OUTLINED_FUNCTION_33();
          int v67 = v91;
          uint64_t v66 = v92;
          *(void *)(v65 + 16) = v91;
          *(void *)(v65 + 24) = v66;
          swift_retain();
          sub_1D760C610();
          uint64_t v68 = OUTLINED_FUNCTION_33();
          *(void *)(v68 + 16) = v67;
          *(void *)(v68 + 24) = v66;
          swift_retain();
          sub_1D760C65C();
          uint64_t v69 = v86;
          sub_1D761E470();
          uint64_t v70 = OUTLINED_FUNCTION_87_0();
          __swift_storeEnumTagSinglePayload(v70, v71, v72, v95);
          sub_1D760C588(v69);
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
          uint64_t v74 = OUTLINED_FUNCTION_23_0(v73);
          MEMORY[0x1F4188790](v74);
          OUTLINED_FUNCTION_51();
          v82(v69, v83, v28);
          uint64_t v75 = OUTLINED_FUNCTION_87_0();
          __swift_storeEnumTagSinglePayload(v75, v76, v77, v28);
          sub_1D760BF64(v69);
          swift_storeEnumTagMultiPayload();
          sub_1D760F4F4();
          OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_6();
          v78();
LABEL_20:
          OUTLINED_FUNCTION_84();
          return;
        }
        uint64_t v10 = (void *)sub_1D7660DB0();
        if (qword_1EA82AA50 != -1) {
          swift_once();
        }
        uint64_t v52 = qword_1EA82C240;
        os_log_t v53 = v87;
        sub_1D761E470();
        if (os_log_type_enabled(v52, (os_log_type_t)v10))
        {
          OUTLINED_FUNCTION_125_0();
          uint64_t v54 = OUTLINED_FUNCTION_11_4();
          uint64_t v89 = OUTLINED_FUNCTION_98_0();
          uint64_t v97 = v89;
          *(_DWORD *)uint64_t v54 = 136446722;
          uint64_t v55 = sub_1D760C1AC();
          uint64_t v57 = OUTLINED_FUNCTION_31_3(v55, v56);
          OUTLINED_FUNCTION_18_8(v57);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v54 + 12) = 2082;
          LOWORD(v96) = *(_WORD *)((char *)&v53->isa + *(int *)(v95 + 24));
          uint64_t v58 = sub_1D7661500();
          uint64_t v60 = OUTLINED_FUNCTION_31_3(v58, v59);
          OUTLINED_FUNCTION_38_4(v60);
          swift_bridgeObjectRelease();
          sub_1D761E4CC((uint64_t)v53, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
          *(_WORD *)(v54 + 22) = 2082;
          LOWORD(v96) = ((uint64_t (*)(void *, uint64_t))v50)(v6, v94);
          uint64_t v61 = sub_1D7661500();
          uint64_t v63 = OUTLINED_FUNCTION_31_3(v61, v62);
          OUTLINED_FUNCTION_38_4(v63);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D757C000, v52, (os_log_type_t)v10, "%{public}s: the server tunnel MTU = %{public}s is more than the maximum supported MTU = %{public}s", (uint8_t *)v54, 0x20u);
          uint64_t v10 = (void *)v89;
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        else
        {
          sub_1D761E4CC((uint64_t)v53, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
        }
        uint64_t v64 = (void (*)(void *))v91;
        sub_1D75B0D60();
        OUTLINED_FUNCTION_84_0();
        OUTLINED_FUNCTION_133_0();
        OUTLINED_FUNCTION_176_0();
LABEL_19:
        sub_1D7661690();
        v64(v10);

        goto LABEL_20;
      }
      LOBYTE(v9) = sub_1D7660DB0();
      if (qword_1EA82AA50 == -1)
      {
LABEL_7:
        uint64_t v39 = qword_1EA82C240;
        uint64_t v40 = v89;
        sub_1D761E470();
        if (os_log_type_enabled(v39, (os_log_type_t)v9))
        {
          OUTLINED_FUNCTION_125_0();
          uint64_t v41 = OUTLINED_FUNCTION_11_4();
          os_log_t v87 = v39;
          uint64_t v42 = v41;
          uint64_t v88 = OUTLINED_FUNCTION_98_0();
          uint64_t v97 = v88;
          *(_DWORD *)uint64_t v42 = 136446722;
          uint64_t v43 = sub_1D760C1AC();
          uint64_t v45 = OUTLINED_FUNCTION_31_3(v43, v44);
          OUTLINED_FUNCTION_137(v45);
          sub_1D7661020();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 12) = 2082;
          LOWORD(v96) = *(_WORD *)(v40 + *(int *)(v95 + 24));
          uint64_t v46 = sub_1D7661500();
          uint64_t v96 = OUTLINED_FUNCTION_31_3(v46, v47);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          sub_1D761E4CC(v40, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
          *(_WORD *)(v42 + 22) = 2082;
          LOWORD(v96) = ((uint64_t (*)(void *, uint64_t))v10)(v6, v94);
          uint64_t v48 = sub_1D7661500();
          uint64_t v96 = OUTLINED_FUNCTION_31_3(v48, v49);
          sub_1D7661020();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D757C000, v87, (os_log_type_t)v9, "%{public}s: the server tunnel MTU = %{public}s is less than the minimum supported MTU = %{public}s", (uint8_t *)v42, 0x20u);
          uint64_t v10 = (void *)v88;
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        else
        {
          sub_1D761E4CC(v40, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
        }
        uint64_t v64 = (void (*)(void *))v91;
        sub_1D75B0D60();
        OUTLINED_FUNCTION_84_0();
        OUTLINED_FUNCTION_133_0();
        OUTLINED_FUNCTION_175_0();
        goto LABEL_19;
      }
LABEL_23:
      swift_once();
      goto LABEL_7;
    }
  }
  sub_1D75940A4(v35);
  __break(1u);
}

void sub_1D760E200()
{
  OUTLINED_FUNCTION_97();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  __int16 v7 = v6;
  uint64_t v8 = *v0;
  uint64_t v9 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = sub_1D760D7B0(*((unsigned char *)v0 + *(void *)(v8 + 184)), 0x80u);
  if ((v13 & 1) == 0) {
    goto LABEL_6;
  }
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v13 = sub_1D760C5E0();
  if (v13)
  {
LABEL_8:
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    uint64_t v20 = OUTLINED_FUNCTION_33();
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = v19;
    uint64_t v15 = sub_1D75940A4((uint64_t)sub_1D761F060);
    __break(1u);
    goto LABEL_9;
  }
  sub_1D75940A4(0);
  uint64_t v15 = sub_1D760C62C();
  if (!v15)
  {
    uint64_t v16 = OUTLINED_FUNCTION_33();
    *(void *)(v16 + 16) = v5;
    *(void *)(v16 + 24) = v3;
    swift_retain();
    sub_1D760C610();
    uint64_t v17 = OUTLINED_FUNCTION_33();
    *(void *)(v17 + 16) = v5;
    *(void *)(v17 + 24) = v3;
    swift_retain();
    sub_1D760C65C();
    *uint64_t v1 = v7;
    swift_storeEnumTagMultiPayload();
    sub_1D760F4F4();
    (*(void (**)(_WORD *, uint64_t))(v11 + 8))(v1, v9);
LABEL_6:
    OUTLINED_FUNCTION_84();
    return;
  }
LABEL_9:
  sub_1D75940A4(v15);
  __break(1u);
}

void sub_1D760E3E8()
{
  OUTLINED_FUNCTION_97();
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = v2[10];
  uint64_t v4 = (unint64_t *)v2[11];
  type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_114_0();
  if (*((unsigned __int8 *)v1 + v2[23]) > 0x1Fu) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1D760C5E0();
  if (v8)
  {
    uint64_t v44 = v8;
    uint64_t v45 = v9;
    uint64_t v46 = OUTLINED_FUNCTION_33();
    *(void *)(v46 + 16) = v44;
    *(void *)(v46 + 24) = v45;
    uint64_t v10 = sub_1D75940A4((uint64_t)sub_1D761F060);
    __break(1u);
    goto LABEL_16;
  }
  sub_1D75940A4(0);
  uint64_t v10 = sub_1D760C62C();
  if (v10)
  {
LABEL_16:
    sub_1D75940A4(v10);
    __break(1u);
LABEL_17:
    sub_1D7661260();
    __break(1u);
    return;
  }
  swift_retain();
  sub_1D760C65C();
  swift_storeEnumTagMultiPayload();
  sub_1D760F4F4();
  uint64_t v11 = v6 + 8;
  OUTLINED_FUNCTION_42_1();
  v12();
  if (qword_1EA82A980 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_4_3();
  uint64_t v13 = qword_1EA82B278;
  uint64_t v14 = unk_1EA82B280;
  char v15 = byte_1EA82B288;
  uint64_t v16 = qword_1EA82B290;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1D7596288(v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  if (v17 >= 1)
  {
    uint64_t v50 = v4;
    uint64_t v51 = v3;
    sub_1D7660900();
    uint64_t v54 = &v47;
    OUTLINED_FUNCTION_0_5();
    uint64_t v19 = v18;
    MEMORY[0x1F4188790](v20);
    uint64_t v49 = v21;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v47 = v22;
    uint64_t v23 = (char *)&v47 - v22;
    *(unint64_t *)((char *)&v47 - v22) = v17;
    uint64_t v24 = *MEMORY[0x1E4FBCAE0];
    uint64_t v55 = v19;
    uint64_t v56 = v25;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v19 + 104);
    v48((char *)&v47 - v22, v24);
    uint64_t ObjectType = (void *)sub_1D75AEF50(0, &qword_1EA82C2E0);
    id v26 = sub_1D760C4CC();
    sub_1D7660ED0();
    os_log_t v53 = &v47;
    OUTLINED_FUNCTION_0_5();
    MEMORY[0x1F4188790](v27);
    OUTLINED_FUNCTION_8();
    v57[0] = MEMORY[0x1E4FBC860];
    sub_1D761EC1C(&qword_1EA82C2E8, MEMORY[0x1F41AB178]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2F0);
    sub_1D75B2374(&qword_1EA82C2F8, &qword_1EA82C2F0);
    sub_1D7661090();
    sub_1D7660EF0();

    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_116_0();
    v28();
    sub_1D760C698();
    if (sub_1D760C678())
    {
      uint64_t ObjectType = (void *)swift_getObjectType();
      sub_1D76609A0();
      os_log_t v53 = &v47;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v29);
      OUTLINED_FUNCTION_90_0();
      uint64_t v30 = sub_1D7660990();
      MEMORY[0x1F4188790](v30);
      uint64_t v31 = (unint64_t *)((char *)&v47 - v47);
      *uint64_t v31 = 500;
      uint64_t v32 = v56;
      ((void (*)(void *, void, uint64_t))v48)(v31, *MEMORY[0x1E4FBCAC0], v56);
      MEMORY[0x1D9473640](v11, v23, v31, ObjectType);
      swift_unknownObjectRelease();
      (*(void (**)(void *, uint64_t))(v55 + 8))(v31, v32);
      uint64_t v33 = OUTLINED_FUNCTION_176();
      v34(v33);
    }
    os_log_t v53 = (unint64_t *)v23;
    if (sub_1D760C678())
    {
      swift_getObjectType();
      uint64_t v35 = swift_allocObject();
      swift_weakInit();
      uint64_t v36 = (void *)swift_allocObject();
      unsigned int v37 = v50;
      v36[2] = v51;
      v36[3] = v37;
      v36[4] = v35;
      v57[4] = sub_1D761B530;
      void v57[5] = v36;
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 1107296256;
      v57[2] = sub_1D75D6460;
      v57[3] = &block_descriptor_9;
      uint64_t v38 = _Block_copy(v57);
      uint64_t v51 = sub_1D7660950();
      uint64_t ObjectType = &v47;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v39);
      OUTLINED_FUNCTION_52();
      swift_retain();
      sub_1D7660930();
      sub_1D7660910();
      uint64_t v50 = &v47;
      OUTLINED_FUNCTION_0_5();
      MEMORY[0x1F4188790](v40);
      OUTLINED_FUNCTION_3_13();
      sub_1D760ABF4();
      sub_1D7660F10();
      _Block_release(v38);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_45();
      v41();
      OUTLINED_FUNCTION_152_0();
      v42();
      swift_release();
      swift_release();
    }
    if (sub_1D760C678())
    {
      swift_getObjectType();
      sub_1D7660F50();
      swift_unknownObjectRelease();
    }
    OUTLINED_FUNCTION_6();
    v43();
  }
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D760EB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1D7661000();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v45[-v8];
  uint64_t v10 = *(void *)(a2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = &v45[-v15];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v45[-v17];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v62 = v13;
    uint64_t v20 = result;
    sub_1D760BCE0((uint64_t)v9);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a2) == 1)
    {
      swift_release();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      uint64_t v61 = v20;
      uint64_t v21 = v10;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v18, v9, a2);
      uint64_t v22 = a3;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 80))(&v64, a2, a3);
      uint64_t v54 = v64;
      int v53 = v65;
      uint64_t v56 = v66;
      int v55 = v67;
      uint64_t v50 = v68;
      int v49 = v69;
      uint64_t v52 = v70;
      int v51 = v71;
      uint64_t v58 = v72;
      int v57 = v73;
      uint64_t v23 = v74;
      int v60 = v75;
      os_log_type_t v24 = sub_1D7660DD0();
      if (qword_1EA82AA50 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_1EA82C240;
      id v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16);
      v26(v16, v18, a2);
      v26(v62, v18, a2);
      os_log_t v59 = v25;
      if (os_log_type_enabled(v25, v24))
      {
        uint64_t v47 = v23;
        swift_retain_n();
        uint64_t v27 = v21;
        uint64_t v28 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        v63[0] = v48;
        *(_DWORD *)uint64_t v28 = 136448258;
        int v46 = v24;
        uint64_t v29 = sub_1D760C1AC();
        uint64_t v64 = sub_1D758DBE8(v29, v30, v63);
        sub_1D7661020();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 40))(a2, v22);
        uint64_t v64 = sub_1D758DBE8(v31, v32, v63);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
        v33(v16, a2);
        *(_WORD *)(v28 + 22) = 2080;
        uint64_t v34 = v62;
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 48))(&v64, a2, v22);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BC58);
        uint64_t v35 = sub_1D7660B60();
        uint64_t v64 = sub_1D758DBE8(v35, v36, v63);
        sub_1D7661020();
        swift_bridgeObjectRelease();
        v33(v34, a2);
        *(_WORD *)(v28 + 32) = 2048;
        uint64_t v37 = v50;
        if (v49) {
          uint64_t v37 = -1;
        }
        uint64_t v64 = v37;
        sub_1D7661020();
        *(_WORD *)(v28 + 42) = 2048;
        uint64_t v38 = v52;
        if (v51) {
          uint64_t v38 = -1;
        }
        uint64_t v64 = v38;
        sub_1D7661020();
        *(_WORD *)(v28 + 52) = 2048;
        uint64_t v39 = v54;
        if (v53) {
          uint64_t v39 = -1;
        }
        uint64_t v64 = v39;
        sub_1D7661020();
        *(_WORD *)(v28 + 62) = 2048;
        uint64_t v40 = v56;
        if (v55) {
          uint64_t v40 = -1;
        }
        uint64_t v64 = v40;
        sub_1D7661020();
        *(_WORD *)(v28 + 72) = 2048;
        uint64_t v41 = v58;
        if (v57) {
          uint64_t v41 = -1;
        }
        uint64_t v64 = v41;
        sub_1D7661020();
        *(_WORD *)(v28 + 82) = 2048;
        uint64_t v42 = v47;
        if (v60) {
          uint64_t v42 = -1;
        }
        uint64_t v64 = v42;
        sub_1D7661020();
        _os_log_impl(&dword_1D757C000, v59, (os_log_type_t)v46, "%{public}s: Stats for %s/%s: packets in/out=%lld/%lld, bytes in/out=%lld/%lld, errors in/out=%lld/%lld, ", (uint8_t *)v28, 0x5Cu);
        uint64_t v43 = v48;
        swift_arrayDestroy();
        MEMORY[0x1D9474C60](v43, -1, -1);
        MEMORY[0x1D9474C60](v28, -1, -1);
        swift_release();
        return ((uint64_t (*)(unsigned char *, uint64_t))v33)(v18, a2);
      }
      else
      {
        swift_release();
        uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v21 + 8);
        v44(v16, a2);
        v44(v62, a2);
        return ((uint64_t (*)(unsigned char *, uint64_t))v44)(v18, a2);
      }
    }
  }
  return result;
}

uint64_t sub_1D760F430()
{
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_17_9();
  type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_11_3();
  swift_storeEnumTagMultiPayload();
  sub_1D760F4F4();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_42_1();
  return v1();
}

uint64_t sub_1D760F4E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D760D7B0(*a1, *a2);
}

void sub_1D760F4F4()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_17_9();
  uint64_t v1 = *(void *)(v0 + 80);
  OUTLINED_FUNCTION_17_9();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - v10;
  id v25 = sub_1D760C4CC();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  OUTLINED_FUNCTION_28();
  v13();
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v1;
  *((void *)v15 + 3) = v3;
  *((void *)v15 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[v14], v11, v4);
  v27[4] = sub_1D761EE5C;
  void v27[5] = v15;
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 1107296256;
  _OWORD v27[2] = sub_1D75D6460;
  v27[3] = &block_descriptor_603;
  uint64_t v16 = _Block_copy(v27);
  uint64_t v24 = sub_1D7660950();
  OUTLINED_FUNCTION_0_5();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_9();
  swift_retain();
  sub_1D7660930();
  sub_1D7660910();
  OUTLINED_FUNCTION_0_5();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_27();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1D761EC1C((unint64_t *)&qword_1EBDEBD90, MEMORY[0x1F41AAFB0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDEBDE0);
  sub_1D75B2374((unint64_t *)&qword_1EBDEBDF0, (uint64_t *)&unk_1EBDEBDE0);
  sub_1D7661090();
  uint64_t v21 = v25;
  MEMORY[0x1D9473560](0, v4, v8, v16);
  _Block_release(v16);

  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_42_1();
  v22();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4, v24);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1D760F810(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TunnelEndpoint.Event();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - v5;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D760F9B0();
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      (*((void (**)(void))v6 + 1))();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
}

void sub_1D760F9B0()
{
  OUTLINED_FUNCTION_3();
  uint64_t v674 = v1;
  uint64_t v2 = v0;
  *(void *)&long long v679 = v3;
  OUTLINED_FUNCTION_17_9();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 88);
  uint64_t v8 = (void (*)(void))type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v696 = v9;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v12);
  v672 = ((char *)&v632 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_50_1();
  uint64_t v668 = v14;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_50_1();
  os_log_t v669 = v16;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_50_1();
  uint64_t v662 = v18;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_50_1();
  uint64_t v642 = v20;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_50_1();
  v643 = v22;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_50_1();
  uint64_t v640 = v24;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_50_1();
  v639 = v26;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_50_1();
  uint64_t v671 = v28;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_50_1();
  uint64_t v661 = v30;
  OUTLINED_FUNCTION_41_2();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_148_0();
  uint64_t v660 = v32;
  uint64_t v33 = sub_1D7661000();
  uint64_t v34 = OUTLINED_FUNCTION_23_0(v33);
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_14_6();
  uint64_t v641 = v35;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_21_8();
  uint64_t v654 = v37;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_82_0();
  uint64_t v638 = v39;
  OUTLINED_FUNCTION_1_1();
  uint64_t v656 = v40;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_148_0();
  uint64_t v646 = v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2D0);
  uint64_t v44 = OUTLINED_FUNCTION_23_0(v43);
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_14_6();
  uint64_t v655 = v45;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_21_8();
  uint64_t v637 = v47;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_21_8();
  v653 = v49;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v50);
  OUTLINED_FUNCTION_21_8();
  uint64_t v652 = v51;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v52);
  OUTLINED_FUNCTION_21_8();
  uint64_t v649 = v53;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v54);
  OUTLINED_FUNCTION_21_8();
  uint64_t v650 = v55;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v56);
  OUTLINED_FUNCTION_82_0();
  uint64_t v659 = v57;
  os_log_t v667 = (os_log_t)type metadata accessor for TunnelInterfaceParameters();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v58);
  OUTLINED_FUNCTION_14();
  *(void *)&long long v666 = v59;
  os_log_t v665 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(qword_1EA82C420);
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v60);
  OUTLINED_FUNCTION_14_6();
  uint64_t v635 = v61;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v62);
  OUTLINED_FUNCTION_21_8();
  uint64_t v636 = v63;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v64);
  OUTLINED_FUNCTION_21_8();
  uint64_t v634 = v65;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v66);
  OUTLINED_FUNCTION_21_8();
  uint64_t v644 = v67;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v68);
  OUTLINED_FUNCTION_21_8();
  v648 = (void **)v69;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v70);
  OUTLINED_FUNCTION_21_8();
  v651 = (long long *)v71;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v72);
  OUTLINED_FUNCTION_21_8();
  v647 = (void **)v73;
  OUTLINED_FUNCTION_15_8();
  MEMORY[0x1F4188790](v74);
  OUTLINED_FUNCTION_82_0();
  v658 = (long long *)v75;
  uint64_t v663 = type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_2_2();
  MEMORY[0x1F4188790](v76);
  OUTLINED_FUNCTION_14_6();
  uint64_t v633 = v77;
  OUTLINED_FUNCTION_15_8();
  uint64_t v79 = MEMORY[0x1F4188790](v78);
  uint64_t v81 = (char *)&v632 - v80;
  MEMORY[0x1F4188790](v79);
  OUTLINED_FUNCTION_21_8();
  uint64_t v645 = v82;
  OUTLINED_FUNCTION_15_8();
  uint64_t v84 = MEMORY[0x1F4188790](v83);
  uint64_t v86 = (char *)&v632 - v85;
  MEMORY[0x1F4188790](v84);
  OUTLINED_FUNCTION_82_0();
  v664 = v87;
  uint64_t v675 = v5;
  uint64_t v673 = v7;
  os_log_t v670 = (os_log_t)type metadata accessor for TunnelEndpoint.State();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_5();
  uint64_t v657 = v89;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v90);
  uint64_t v92 = (long long *)((char *)&v632 - v91);
  id v93 = sub_1D760C4CC();
  OS_dispatch_queue.assertOnQueueHierarchy()();

  uint64_t v94 = *(void *)(*(void *)v2 + 184);
  uint64_t v680 = v2;
  uint64_t v95 = *(unsigned __int8 *)(v2 + v94);
  uint64_t v96 = (unsigned __int16 *)((char *)v92 + *(int *)(TupleTypeMetadata2 + 48));
  *(unsigned char *)uint64_t v92 = v95;
  uint64_t v97 = *(uint64_t **)(v696 + 16);
  v676 = (uint64_t *)(v696 + 16);
  v677 = v97;
  OUTLINED_FUNCTION_28();
  v98();
  LODWORD(v678) = v95;
  switch(v95 >> 5)
  {
    case 1u:
      goto LABEL_32;
    case 2u:
      int v183 = OUTLINED_FUNCTION_35_2();
      if (v678 != 64) {
        goto LABEL_51;
      }
      if (v183 == 12)
      {
        sub_1D7660DD0();
        if (qword_1EA82AA50 != -1) {
          swift_once();
        }
        sub_1D7660010();
        *(unsigned char *)(v680 + *(void *)(*(void *)v680 + 184)) = 97;
        sub_1D760C304((uint64_t)&v691);
        OUTLINED_FUNCTION_77_0();
        OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_124_0();
        id v321 = (void *)OUTLINED_FUNCTION_192();
        OUTLINED_FUNCTION_63_0(v321);
        OUTLINED_FUNCTION_29_5();
        v8();
        swift_release();
        goto LABEL_155;
      }
      if (v183) {
        goto LABEL_65;
      }
      LOWORD(v697) = *v96;
      os_log_type_t v184 = sub_1D7660DD0();
      if (qword_1EA82AA50 == -1) {
        goto LABEL_22;
      }
      goto LABEL_228;
    case 3u:
      int v195 = OUTLINED_FUNCTION_35_2();
      if (v678 != 96) {
        goto LABEL_58;
      }
      if (v195 != 3) {
        goto LABEL_65;
      }
      uint64_t v196 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C418) + 48);
      uint64_t v197 = (long long *)v96;
      uint64_t v198 = (uint64_t)v96 + v196;
      sub_1D758AB78(v197, (uint64_t)&v691);
      sub_1D761E924(v198, (uint64_t)v658);
      uint64_t v92 = &v685;
      OUTLINED_FUNCTION_144_0(&v691, *((uint64_t *)&v692 + 1));
      OUTLINED_FUNCTION_9_9();
      v199();
      uint64_t v95 = *((void *)&v685 + 1);
      uint64_t v200 = v685;
      sub_1D760C304((uint64_t)&v688);
      TupleTypeMetadata2 = *((void *)&v689 + 1);
      uint64_t v81 = (char *)v690;
      __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
      OUTLINED_FUNCTION_9_9();
      v201();
      uint64_t v96 = (unsigned __int16 *)*((void *)&v694 + 1);
      BOOL v202 = v200 == (void)v694 && v95 == *((void *)&v694 + 1);
      if (v202)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v203 = OUTLINED_FUNCTION_156_0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v203 & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
          __break(1u);
LABEL_32:
          switch(OUTLINED_FUNCTION_35_2())
          {
            case 2u:
              uint64_t v204 = v640;
              *(void *)&long long v679 = v96;
              OUTLINED_FUNCTION_13_8();
              v205();
              uint64_t v206 = *(void **)(v204 + 40);
              if (v678)
              {
                sub_1D758AB78((long long *)v204, (uint64_t)&v685);
                __swift_project_boxed_opaque_existential_0Tm(&v685, v686);
                OUTLINED_FUNCTION_9_9();
                v480();
                uint64_t v481 = sub_1D760C44C();
                sub_1D75B53F8(v481, &v688);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((void *)&v689 + 1))
                {
                  long long v691 = v688;
                  long long v692 = v689;
                  long long v693 = v690;
                  if (v206)
                  {
                    uint64_t v482 = v671;
                    sub_1D758B1EC((uint64_t)&v685, v671);
                    OUTLINED_FUNCTION_39_3();
                    id v483 = v206;
                    sub_1D760F4F4(v482);

                    uint64_t v213 = *(void (**)(void))(v696 + 8);
                    OUTLINED_FUNCTION_42_1();
                    v213();
                    sub_1D75B8E3C((uint64_t)&v691);
                    uint64_t v214 = &v685;
                    goto LABEL_159;
                  }
                  sub_1D7618578();
                  sub_1D75B8E3C((uint64_t)&v691);
                }
                else
                {

                  sub_1D75940B4((uint64_t)&v688, (uint64_t *)&unk_1EA82BA30);
                }
                v619 = &v685;
                goto LABEL_212;
              }
              sub_1D758AB78((long long *)v204, (uint64_t)&v691);
              uint64_t v207 = sub_1D760C44C();
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              OUTLINED_FUNCTION_9_9();
              v208();
              if (*(void *)(v207 + 16))
              {
                sub_1D75B6D54();
                char v210 = v209;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v211 = v671;
                if (v210)
                {
                  if (v206)
                  {
                    sub_1D758B1EC((uint64_t)&v691, v671);
                    OUTLINED_FUNCTION_39_3();
                    id v212 = v206;
                    sub_1D760F4F4(v211);

                    uint64_t v213 = *(void (**)(void))(v696 + 8);
                    OUTLINED_FUNCTION_42_1();
                    v213();
                    uint64_t v214 = &v691;
LABEL_159:
                    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v214);
                    OUTLINED_FUNCTION_140_0();
                    OUTLINED_FUNCTION_42_1();
                    v213();
                    goto LABEL_214;
                  }
                  uint64_t v624 = v693;
                  OUTLINED_FUNCTION_77_0();
                  uint64_t v625 = OUTLINED_FUNCTION_55();
                  swift_weakInit();
                  OUTLINED_FUNCTION_52_1();
                  v626 = (void *)OUTLINED_FUNCTION_40_2();
                  uint64_t v627 = v673;
                  v626[2] = v675;
                  v626[3] = v627;
                  v626[4] = v625;
                  sub_1D758AB78(&v688, (uint64_t)(v626 + 5));
                  v628 = *(void (**)(void))(v624 + 40);
                  swift_retain();
                  OUTLINED_FUNCTION_29_5();
                  v628();
                  swift_release();
                  swift_release();
                  goto LABEL_206;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }

LABEL_206:
              v619 = &v691;
LABEL_212:
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v619);
              os_log_t v319 = (os_log_t)OUTLINED_FUNCTION_140_0();
LABEL_213:
              v318(v319, v361);
              goto LABEL_214;
            case 3u:
              uint64_t v374 = v643;
              *(void *)&long long v679 = v96;
              OUTLINED_FUNCTION_13_8();
              v375();
              uint64_t v376 = (uint64_t)v374 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C418) + 48);
              if ((v678 & 1) == 0)
              {
                sub_1D758AB78(v374, (uint64_t)&v691);
                sub_1D761E924(v376, v644);
                uint64_t v377 = (void *)sub_1D760C44C();
                __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
                OUTLINED_FUNCTION_9_9();
                v378();
                uint64_t v379 = *((void *)&v688 + 1);
                if (v377[2])
                {
                  sub_1D75B6D54();
                  char v381 = v380;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v381)
                  {
                    sub_1D75EE174(v644, v634, qword_1EA82C420);
                    if (OUTLINED_FUNCTION_173_0() == 1)
                    {
                      OUTLINED_FUNCTION_151_0();
                      OUTLINED_FUNCTION_39_3();
                      uint64_t v382 = v377;
                      sub_1D760F4F4(v379);

                      uint64_t v383 = OUTLINED_FUNCTION_101_0();
                      v384(v383);
LABEL_221:
                      sub_1D75940B4(v644, qword_1EA82C420);
                      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
                      uint64_t v629 = OUTLINED_FUNCTION_140_0();
                      v630(v629);
                      goto LABEL_214;
                    }
                    sub_1D761E98C();
                    uint64_t v621 = v674;
                    sub_1D7616D8C();
                    if (!v621)
                    {
                      sub_1D761E4CC((uint64_t)v81, (void (*)(void))type metadata accessor for TunnelMessage);
                      goto LABEL_221;
                    }
                    sub_1D761E4CC((uint64_t)v81, (void (*)(void))type metadata accessor for TunnelMessage);
                    sub_1D75940B4(v644, qword_1EA82C420);
                    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
                    OUTLINED_FUNCTION_140_0();
LABEL_209:
                    OUTLINED_FUNCTION_6();
                    v620();
                    goto LABEL_214;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                uint64_t v618 = v644;
LABEL_205:
                sub_1D75940B4(v618, qword_1EA82C420);
                goto LABEL_206;
              }
              sub_1D758AB78(v374, (uint64_t)&v691);
              uint64_t v484 = v636;
              sub_1D761E924(v376, v636);
              v485 = (void *)sub_1D760C48C();
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              OUTLINED_FUNCTION_9_9();
              v486();
              uint64_t v487 = *((void *)&v688 + 1);
              if (v485[2])
              {
                sub_1D75B6D54();
                char v489 = v488;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v489)
                {
                  sub_1D75EE174(v484, v635, qword_1EA82C420);
                  if (OUTLINED_FUNCTION_173_0() == 1)
                  {
                    OUTLINED_FUNCTION_151_0();
                    OUTLINED_FUNCTION_39_3();
                    v490 = v485;
                    sub_1D760F4F4(v487);

                    uint64_t v491 = OUTLINED_FUNCTION_101_0();
                    v492(v491);
                  }
                  else
                  {
                    uint64_t v622 = v633;
                    sub_1D761E98C();
                    uint64_t v623 = v674;
                    sub_1D7616D8C();
                    if (v623)
                    {
                      sub_1D761E4CC(v622, (void (*)(void))type metadata accessor for TunnelMessage);
                      sub_1D75940B4(v636, qword_1EA82C420);
                      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
LABEL_224:
                      OUTLINED_FUNCTION_45();
                      v631();
                      goto LABEL_214;
                    }
                    sub_1D761E4CC(v622, (void (*)(void))type metadata accessor for TunnelMessage);
                  }
                  sub_1D75940B4(v636, qword_1EA82C420);
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
                  goto LABEL_224;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v618 = v484;
              goto LABEL_205;
            case 5u:
              uint64_t v358 = v671;
              OUTLINED_FUNCTION_13_8();
              v359();
              uint64_t v360 = *(void *)(v358 + 16);
              long long v679 = *(_OWORD *)v358;
              long long v691 = v679;
              *(void *)&long long v692 = v360;
              sub_1D7617E44();
              swift_release();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_97_0();
              os_log_t v319 = (os_log_t)OUTLINED_FUNCTION_30_3();
              goto LABEL_213;
            case 6u:
              os_log_t v425 = (long long *)v671;
              OUTLINED_FUNCTION_13_8();
              v426();
              sub_1D758AB78(v425, (uint64_t)&v691);
              uint64_t v668 = v95;
              uint64_t v427 = *((void *)&v692 + 1);
              uint64_t v428 = v693;
              uint64_t v387 = v96;
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              OUTLINED_FUNCTION_55();
              swift_weakInit();
              OUTLINED_FUNCTION_52_1();
              uint64_t v429 = (void *)OUTLINED_FUNCTION_40_2();
              OUTLINED_FUNCTION_81_0(v429);
              unsigned __int8 v430 = *(void (**)(void (*)(void *, char), char *, uint64_t, uint64_t))(v1 + 32);
              swift_retain();
              v430(sub_1D761EA60, v81, v427, v428);
              goto LABEL_135;
            case 7u:
              os_log_t v431 = v639;
              OUTLINED_FUNCTION_13_8();
              v432();
              sub_1D758AB78(v431, (uint64_t)&v691);
              sub_1D761823C();
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_97_0();
              goto LABEL_209;
            case 8u:
              uint64_t v362 = (long long *)v671;
              OUTLINED_FUNCTION_13_8();
              v363();
              long long v364 = v362[2];
              long long v365 = *v362;
              long long v692 = v362[1];
              long long v693 = v364;
              long long v691 = v365;
              uint64_t v668 = v95;
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              *(void *)&long long v679 = v96;
              OUTLINED_FUNCTION_9_9();
              v366();
              sub_1D75B93BC((uint64_t)&v691, (uint64_t)&v688);
              OUTLINED_FUNCTION_5();
              OUTLINED_FUNCTION_134_0();
              sub_1D75B4628();
              swift_endAccess();
              uint64_t v367 = v664;
              void *v664 = *((void *)&v693 + 1);
              swift_storeEnumTagMultiPayload();
              sub_1D758B1EC((uint64_t)&v691, (uint64_t)&v685);
              uint64_t v368 = v687;
              __swift_project_boxed_opaque_existential_0Tm(&v685, v686);
              uint64_t v369 = OUTLINED_FUNCTION_55();
              swift_weakInit();
              sub_1D75B93BC((uint64_t)&v691, (uint64_t)&v688);
              uint64_t v370 = swift_allocObject();
              uint64_t v371 = OUTLINED_FUNCTION_106_0(v370);
              *(void *)(v371 + 32) = v369;
              long long v372 = v689;
              *(_OWORD *)(v371 + 40) = v688;
              *(_OWORD *)(v371 + 56) = v372;
              *(_OWORD *)(v371 + 72) = v690;
              uint64_t v373 = *(void (**)(void))(v368 + 24);
              swift_retain();
              OUTLINED_FUNCTION_162_0();
              v373();
              swift_release();
              sub_1D761E4CC((uint64_t)v367, (void (*)(void))type metadata accessor for TunnelMessage);
              sub_1D75B8E3C((uint64_t)&v691);
              swift_release();
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v685);
              (*(void (**)(void, uint64_t))(v696 + 8))(v679, v668);
              goto LABEL_214;
            case 9u:
              uint64_t v385 = (long long *)v671;
              OUTLINED_FUNCTION_13_8();
              v386();
              sub_1D758AB78(v385, (uint64_t)&v691);
              uint64_t v668 = v95;
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              uint64_t v387 = v96;
              OUTLINED_FUNCTION_9_9();
              v388();
              OUTLINED_FUNCTION_52_1();
              OUTLINED_FUNCTION_5();
              OUTLINED_FUNCTION_134_0();
              sub_1D75B46B8();
              swift_endAccess();
              OUTLINED_FUNCTION_77_0();
              OUTLINED_FUNCTION_55();
              OUTLINED_FUNCTION_124_0();
              OUTLINED_FUNCTION_52_1();
              uint64_t v389 = (void *)OUTLINED_FUNCTION_40_2();
              OUTLINED_FUNCTION_81_0(v389);
              uint64_t v390 = *(void (**)(void))(v1 + 40);
              swift_retain();
              OUTLINED_FUNCTION_29_5();
              v390();
LABEL_135:
              swift_release();
              swift_release();
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
              (*((void (**)(unsigned __int16 *, uint64_t))v92 + 1))(v387, v668);
              goto LABEL_214;
            case 0xAu:
              uint64_t v391 = v642;
              *(void *)&long long v679 = v96;
              uint64_t v668 = v95;
              OUTLINED_FUNCTION_13_8();
              v392();
              uint64_t v393 = *(void **)(v391 + 40);
              sub_1D758AB78((long long *)v391, (uint64_t)&v694);
              LODWORD(v662) = sub_1D7660DD0();
              if (qword_1EA82AA50 != -1) {
                swift_once();
              }
              os_log_t v667 = (os_log_t)qword_1EA82C240;
              OUTLINED_FUNCTION_171_0();
              OUTLINED_FUNCTION_52_1();
              uint64_t v394 = OUTLINED_FUNCTION_46_1();
              os_log_t v670 = v394;
              sub_1D758AB78(&v691, (uint64_t)&v394[2]);
              uint64_t v395 = OUTLINED_FUNCTION_55();
              *(void *)(v395 + 16) = v393;
              uint64_t v671 = v395;
              v672 = OUTLINED_FUNCTION_4_13();
              OUTLINED_FUNCTION_27_5((uint64_t)v672);
              uint64_t v396 = OUTLINED_FUNCTION_4_13();
              *(unsigned char *)(v396 + 16) = 8;
              uint64_t v397 = OUTLINED_FUNCTION_33();
              uint64_t v398 = (objc_class *)v680;
              v397[2].unint64_t isa = (Class)sub_1D761E520;
              v397[3].unint64_t isa = v398;
              uint64_t v399 = v397;
              os_log_t v669 = v397;
              uint64_t v400 = OUTLINED_FUNCTION_33();
              v677 = (uint64_t *)v400;
              *(void *)(v400 + 16) = sub_1D761EF00;
              *(void *)(v400 + 24) = v399;
              v676 = (uint64_t *)OUTLINED_FUNCTION_4_13();
              *((unsigned char *)v676 + 16) = 32;
              uint64_t v675 = OUTLINED_FUNCTION_4_13();
              *(unsigned char *)(v675 + 16) = 8;
              uint64_t v401 = OUTLINED_FUNCTION_33();
              *(void *)(v401 + 16) = sub_1D761E7E0;
              *(void *)(v401 + 24) = v394;
              uint64_t v402 = OUTLINED_FUNCTION_33();
              *(void *)(v402 + 16) = sub_1D761EF00;
              *(void *)(v402 + 24) = v401;
              os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_4_13();
              LOBYTE(v678[2].isa) = 32;
              uint64_t v403 = OUTLINED_FUNCTION_4_13();
              *(unsigned char *)(v403 + 16) = 8;
              uint64_t v660 = v403;
              uint64_t v404 = OUTLINED_FUNCTION_33();
              v404[2].unint64_t isa = (Class)sub_1D761E834;
              v404[3].unint64_t isa = (Class)v395;
              uint64_t v405 = (void *)OUTLINED_FUNCTION_33();
              v405[2] = sub_1D761EF00;
              v405[3] = v404;
              uint64_t v673 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
              uint64_t v406 = OUTLINED_FUNCTION_135_0();
              long long v666 = xmmword_1D7668A20;
              *(_OWORD *)(v406 + 16) = xmmword_1D7668A20;
              long long v407 = v672;
              *(void *)(v406 + 32) = sub_1D761EF14;
              *(void *)(v406 + 40) = v407;
              *(void *)(v406 + 48) = sub_1D761EF14;
              *(void *)(v406 + 56) = v396;
              uint64_t v408 = v677;
              *(void *)(v406 + 64) = sub_1D761EF08;
              *(void *)(v406 + 72) = v408;
              uint64_t v409 = v676;
              *(void *)(v406 + 80) = sub_1D761EF14;
              *(void *)(v406 + 88) = v409;
              uint64_t v410 = v675;
              *(void *)(v406 + 96) = sub_1D761EF14;
              *(void *)(v406 + 104) = v410;
              *(void *)(v406 + 112) = sub_1D761EF08;
              *(void *)(v406 + 120) = v402;
              os_log_t v411 = v678;
              *(void *)(v406 + 128) = sub_1D761EF14;
              *(void *)(v406 + 136) = v411;
              *(void *)(v406 + 144) = sub_1D761EF14;
              *(void *)(v406 + 152) = v403;
              *(void *)(v406 + 160) = sub_1D761EF08;
              *(void *)(v406 + 168) = v405;
              swift_setDeallocating();
              swift_retain();
              id v412 = v393;
              swift_retain();
              id v413 = v393;
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v663 = v401;
              swift_retain();
              swift_retain();
              os_log_t v665 = v404;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v661 = v402;
              swift_retain();
              swift_retain();
              swift_retain();
              v664 = v405;
              swift_retain();
              sub_1D761A064();
              int v414 = v662;
              if (os_log_type_enabled(v667, (os_log_type_t)v662))
              {
                uint64_t v415 = (uint8_t *)OUTLINED_FUNCTION_11_4();
                uint64_t v662 = swift_slowAlloc();
                *(void *)&v684[0] = v662;
                OUTLINED_FUNCTION_181_0(770);
                v415[3] = 8;
                swift_release();
                LODWORD(v672) = v414;
                uint64_t v416 = sub_1D760C1AC();
                uint64_t v418 = sub_1D758DBE8(v416, v417, (uint64_t *)v684);
                OUTLINED_FUNCTION_99_0(v418);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                v415[12] = 32;
                swift_release();
                v415[13] = 8;
                swift_release();
                sub_1D758B1EC((uint64_t)&v688, (uint64_t)&v685);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
                uint64_t v419 = sub_1D7660B60();
                *(void *)&long long v685 = sub_1D758DBE8(v419, v420, (uint64_t *)v684);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                v415[22] = 32;
                swift_release();
                v415[23] = 8;
                swift_release();
                *(void *)&long long v685 = v393;
                id v421 = v393;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
                uint64_t v422 = sub_1D7660B60();
                *(void *)&long long v685 = sub_1D758DBE8(v422, v423, (uint64_t *)v684);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();

                _os_log_impl(&dword_1D757C000, v667, (os_log_type_t)v672, "%{public}s: Received error from connection %s: %s", v415, 0x20u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_1();
                uint64_t v424 = (objc_class *)v680;
                OUTLINED_FUNCTION_1();
              }
              else
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v424 = (objc_class *)v680;
                OUTLINED_FUNCTION_46_2();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
              }
              __swift_project_boxed_opaque_existential_0Tm(&v694, v695);
              uint64_t v493 = OUTLINED_FUNCTION_85();
              v494(v493);
              OUTLINED_FUNCTION_144_0(&v694, v695);
              OUTLINED_FUNCTION_9_9();
              v495();
              long long v496 = v691;
              OUTLINED_FUNCTION_127_0();
              OUTLINED_FUNCTION_51_1();
              os_log_t v678 = (os_log_t)*((void *)&v496 + 1);
              sub_1D761A544();
              swift_endAccess();
              uint64_t v497 = *((void *)&v692 + 1);
              sub_1D75940B4((uint64_t)&v691, (uint64_t *)&unk_1EA82BA30);
              v676 = (uint64_t *)v496;
              if (v497)
              {
                LODWORD(v664) = sub_1D7660DD0();
                os_log_t v670 = (os_log_t)qword_1EA82C240;
                OUTLINED_FUNCTION_171_0();
                OUTLINED_FUNCTION_52_1();
                uint64_t v498 = OUTLINED_FUNCTION_46_1();
                uint64_t v675 = v498;
                sub_1D758AB78(&v691, v498 + 16);
                uint64_t v499 = OUTLINED_FUNCTION_33();
                *(void *)(v499 + 16) = sub_1D761E8F4;
                *(void *)(v499 + 24) = v498;
                v500 = (objc_class *)v499;
                v672 = v499;
                uint64_t v501 = OUTLINED_FUNCTION_4_13();
                uint64_t v502 = OUTLINED_FUNCTION_27_5(v501);
                uint64_t v662 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v662 + 16) = 8;
                v503 = OUTLINED_FUNCTION_33();
                v503[2].unint64_t isa = (Class)sub_1D761E520;
                v503[3].unint64_t isa = v424;
                uint64_t v504 = OUTLINED_FUNCTION_33();
                *(void *)(v504 + 16) = sub_1D761EF00;
                *(void *)(v504 + 24) = v503;
                v677 = (uint64_t *)OUTLINED_FUNCTION_4_13();
                *((unsigned char *)v677 + 16) = 32;
                uint64_t v671 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v671 + 16) = 8;
                v505 = OUTLINED_FUNCTION_33();
                v505[2].unint64_t isa = (Class)sub_1D761EF04;
                v505[3].unint64_t isa = v500;
                v506 = OUTLINED_FUNCTION_33();
                v506[2].unint64_t isa = (Class)sub_1D761EF00;
                v506[3].unint64_t isa = (Class)v505;
                uint64_t v507 = swift_allocObject();
                *(_OWORD *)(v507 + 16) = xmmword_1D7668A10;
                *(void *)(v507 + 32) = sub_1D761EF14;
                *(void *)(v507 + 40) = v502;
                uint64_t v508 = v662;
                *(void *)(v507 + 48) = sub_1D761EF14;
                *(void *)(v507 + 56) = v508;
                *(void *)(v507 + 64) = sub_1D761EF08;
                *(void *)(v507 + 72) = v504;
                v509 = v677;
                *(void *)(v507 + 80) = sub_1D761EF14;
                *(void *)(v507 + 88) = v509;
                uint64_t v510 = v671;
                *(void *)(v507 + 96) = sub_1D761EF14;
                *(void *)(v507 + 104) = v510;
                *(void *)(v507 + 112) = sub_1D761EF08;
                *(void *)(v507 + 120) = v506;
                swift_setDeallocating();
                OUTLINED_FUNCTION_166_0();
                swift_retain();
                os_log_t v667 = v503;
                swift_retain();
                swift_retain();
                os_log_t v669 = v505;
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v663 = v504;
                swift_retain();
                swift_retain();
                swift_retain();
                os_log_t v665 = v506;
                swift_retain();
                sub_1D761A064();
                int v511 = v664;
                if (os_log_type_enabled(v670, (os_log_type_t)v664))
                {
                  v512 = (uint8_t *)swift_slowAlloc();
                  v664 = (void *)OUTLINED_FUNCTION_38_0();
                  OUTLINED_FUNCTION_115_0((uint64_t)v664);
                  swift_release();
                  v512[3] = 8;
                  swift_release();
                  LODWORD(v662) = v511;
                  uint64_t v513 = sub_1D760C1AC();
                  *(void *)&long long v685 = sub_1D758DBE8(v513, v514, v683);
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  v512[12] = 32;
                  swift_release();
                  v512[13] = 8;
                  swift_release();
                  __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
                  OUTLINED_FUNCTION_9_9();
                  v515();
                  OUTLINED_FUNCTION_70_0();
                  sub_1D7660BC0();
                  swift_bridgeObjectRelease_n();
                  uint64_t v516 = OUTLINED_FUNCTION_104_0();
                  OUTLINED_FUNCTION_103_0(v516);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                  _os_log_impl(&dword_1D757C000, v670, (os_log_type_t)v662, "%{public}s: Removing connection %s from pending ranked connection list", v512, 0x16u);
                  OUTLINED_FUNCTION_122_0();
                  OUTLINED_FUNCTION_1();
                  OUTLINED_FUNCTION_1();
                  uint64_t v424 = (objc_class *)v680;
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v424 = (objc_class *)v680;
                  OUTLINED_FUNCTION_46_2();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                }
              }
              OUTLINED_FUNCTION_127_0();
              OUTLINED_FUNCTION_51_1();
              sub_1D761A650();
              swift_endAccess();
              uint64_t v521 = *((void *)&v692 + 1);
              sub_1D75940B4((uint64_t)&v691, (uint64_t *)&unk_1EA82C500);
              if (v521)
              {
                LODWORD(v663) = sub_1D7660DD0();
                os_log_t v669 = (os_log_t)qword_1EA82C240;
                OUTLINED_FUNCTION_171_0();
                OUTLINED_FUNCTION_52_1();
                uint64_t v522 = OUTLINED_FUNCTION_46_1();
                uint64_t v675 = v522;
                sub_1D758AB78(&v691, v522 + 16);
                uint64_t v523 = OUTLINED_FUNCTION_33();
                *(void *)(v523 + 16) = sub_1D761F040;
                *(void *)(v523 + 24) = v522;
                v524 = (objc_class *)v523;
                v677 = (uint64_t *)v523;
                uint64_t v525 = OUTLINED_FUNCTION_4_13();
                v526 = v424;
                v527 = OUTLINED_FUNCTION_27_5(v525);
                v672 = v527;
                uint64_t v671 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v671 + 16) = 8;
                v528 = OUTLINED_FUNCTION_33();
                v528[2].unint64_t isa = (Class)sub_1D761E520;
                v528[3].unint64_t isa = v526;
                v529 = v528;
                os_log_t v670 = v528;
                uint64_t v530 = OUTLINED_FUNCTION_33();
                *(void *)(v530 + 16) = sub_1D761EF00;
                *(void *)(v530 + 24) = v529;
                v531 = (void *)OUTLINED_FUNCTION_4_13();
                *((unsigned char *)v531 + 16) = 32;
                uint64_t v532 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v532 + 16) = 8;
                v533 = OUTLINED_FUNCTION_33();
                v533[2].unint64_t isa = (Class)sub_1D761EF04;
                v533[3].unint64_t isa = v524;
                v534 = OUTLINED_FUNCTION_33();
                v534[2].unint64_t isa = (Class)sub_1D761EF00;
                v534[3].unint64_t isa = (Class)v533;
                uint64_t v535 = swift_allocObject();
                *(_OWORD *)(v535 + 16) = xmmword_1D7668A10;
                *(void *)(v535 + 32) = sub_1D761EF14;
                *(void *)(v535 + 40) = v527;
                uint64_t v536 = v671;
                *(void *)(v535 + 48) = sub_1D761EF14;
                *(void *)(v535 + 56) = v536;
                *(void *)(v535 + 64) = sub_1D761EF08;
                *(void *)(v535 + 72) = v530;
                *(void *)(v535 + 80) = sub_1D761EF14;
                *(void *)(v535 + 88) = v531;
                *(void *)(v535 + 96) = sub_1D761EF14;
                *(void *)(v535 + 104) = v532;
                *(void *)(v535 + 112) = sub_1D761EF08;
                *(void *)(v535 + 120) = v534;
                swift_setDeallocating();
                OUTLINED_FUNCTION_166_0();
                swift_retain();
                swift_retain();
                swift_retain();
                os_log_t v667 = v533;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                v664 = v531;
                swift_retain();
                uint64_t v662 = v532;
                swift_retain();
                os_log_t v665 = v534;
                swift_retain();
                sub_1D761A064();
                int v537 = v663;
                if (os_log_type_enabled(v669, (os_log_type_t)v663))
                {
                  v538 = (uint8_t *)swift_slowAlloc();
                  uint64_t v663 = OUTLINED_FUNCTION_38_0();
                  OUTLINED_FUNCTION_115_0(v663);
                  swift_release();
                  v538[3] = 8;
                  swift_release();
                  v539 = (objc_class *)v680;
                  LODWORD(v672) = v537;
                  uint64_t v540 = sub_1D760C1AC();
                  uint64_t v542 = sub_1D758DBE8(v540, v541, v683);
                  OUTLINED_FUNCTION_130(v542);
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  v538[12] = 32;
                  swift_release();
                  v538[13] = 8;
                  swift_release();
                  __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
                  OUTLINED_FUNCTION_9_9();
                  v543();
                  OUTLINED_FUNCTION_70_0();
                  sub_1D7660BC0();
                  swift_bridgeObjectRelease_n();
                  uint64_t v544 = OUTLINED_FUNCTION_104_0();
                  OUTLINED_FUNCTION_103_0(v544);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                  _os_log_impl(&dword_1D757C000, v669, (os_log_type_t)v672, "%{public}s: Removing connection %s from pending unranked connection list", v538, 0x16u);
                  OUTLINED_FUNCTION_122_0();
                  OUTLINED_FUNCTION_1();
                  OUTLINED_FUNCTION_1();
                  uint64_t v424 = v539;
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v424 = (objc_class *)v680;
                  OUTLINED_FUNCTION_46_2();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                }
              }
              OUTLINED_FUNCTION_127_0();
              OUTLINED_FUNCTION_51_1();
              sub_1D761A544();
              swift_endAccess();
              swift_bridgeObjectRelease();
              uint64_t v545 = *((void *)&v692 + 1);
              sub_1D75940B4((uint64_t)&v691, (uint64_t *)&unk_1EA82BA30);
              if (v545)
              {
                LODWORD(v659) = sub_1D7660DD0();
                os_log_t v665 = (os_log_t)qword_1EA82C240;
                OUTLINED_FUNCTION_171_0();
                OUTLINED_FUNCTION_52_1();
                v546 = OUTLINED_FUNCTION_46_1();
                os_log_t v670 = v546;
                sub_1D758AB78(&v691, (uint64_t)&v546[2]);
                uint64_t v547 = OUTLINED_FUNCTION_33();
                *(void *)(v547 + 16) = sub_1D761F040;
                *(void *)(v547 + 24) = v546;
                uint64_t v548 = v547;
                v672 = v547;
                os_log_t v667 = (os_log_t)OUTLINED_FUNCTION_4_13();
                OUTLINED_FUNCTION_27_5((uint64_t)v667);
                os_log_t v669 = (os_log_t)OUTLINED_FUNCTION_4_13();
                LOBYTE(v669[2].isa) = 8;
                uint64_t v549 = OUTLINED_FUNCTION_33();
                *(void *)(v549 + 16) = sub_1D761E520;
                *(void *)(v549 + 24) = v424;
                uint64_t v550 = v549;
                uint64_t v671 = v549;
                uint64_t v551 = OUTLINED_FUNCTION_33();
                v676 = (uint64_t *)v551;
                *(void *)(v551 + 16) = sub_1D761EF00;
                *(void *)(v551 + 24) = v550;
                v677 = (uint64_t *)OUTLINED_FUNCTION_4_13();
                *((unsigned char *)v677 + 16) = 32;
                uint64_t v675 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v675 + 16) = 8;
                uint64_t v552 = OUTLINED_FUNCTION_33();
                *(void *)(v552 + 16) = sub_1D761E8AC;
                *(void *)(v552 + 24) = v548;
                uint64_t v553 = OUTLINED_FUNCTION_33();
                *(void *)(v553 + 16) = sub_1D761EF00;
                *(void *)(v553 + 24) = v552;
                uint64_t v554 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v554 + 16) = 0;
                os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_4_13();
                LOBYTE(v678[2].isa) = 8;
                v555 = (void *)OUTLINED_FUNCTION_33();
                v555[2] = sub_1D761E8B4;
                v555[3] = v424;
                uint64_t v556 = OUTLINED_FUNCTION_33();
                *(void *)(v556 + 16) = sub_1D761E8D4;
                *(void *)(v556 + 24) = v555;
                uint64_t v557 = OUTLINED_FUNCTION_135_0();
                *(_OWORD *)(v557 + 16) = v666;
                os_log_t v558 = v667;
                *(void *)(v557 + 32) = sub_1D761EF14;
                *(void *)(v557 + 40) = v558;
                os_log_t v559 = v669;
                *(void *)(v557 + 48) = sub_1D761EF14;
                *(void *)(v557 + 56) = v559;
                v560 = v676;
                *(void *)(v557 + 64) = sub_1D761EF08;
                *(void *)(v557 + 72) = v560;
                v561 = v677;
                *(void *)(v557 + 80) = sub_1D761EF14;
                *(void *)(v557 + 88) = v561;
                uint64_t v562 = v675;
                *(void *)(v557 + 96) = sub_1D761EF14;
                *(void *)(v557 + 104) = v562;
                *(void *)(v557 + 112) = sub_1D761EF08;
                *(void *)(v557 + 120) = v553;
                *(void *)(v557 + 128) = sub_1D761EF14;
                *(void *)(v557 + 136) = v554;
                os_log_t v563 = v678;
                *(void *)(v557 + 144) = sub_1D761EF14;
                *(void *)(v557 + 152) = v563;
                *(void *)(v557 + 160) = sub_1D761E8DC;
                *(void *)(v557 + 168) = v556;
                swift_retain_n();
                swift_setDeallocating();
                swift_retain_n();
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v662 = v552;
                swift_retain();
                v664 = v555;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v661 = v553;
                swift_retain();
                uint64_t v660 = v554;
                swift_retain();
                swift_retain();
                uint64_t v663 = v556;
                swift_retain();
                sub_1D761A064();
                int v564 = v659;
                if (os_log_type_enabled(v665, (os_log_type_t)v659))
                {
                  v565 = (uint8_t *)OUTLINED_FUNCTION_11_4();
                  uint64_t v659 = OUTLINED_FUNCTION_38_0();
                  v683[0] = v659;
                  OUTLINED_FUNCTION_80_0(770);
                  v565[3] = 8;
                  swift_release();
                  uint64_t v424 = (objc_class *)v680;
                  uint64_t v566 = sub_1D760C1AC();
                  uint64_t v568 = sub_1D758DBE8(v566, v567, v683);
                  OUTLINED_FUNCTION_99_0(v568);
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  v565[12] = 32;
                  swift_release();
                  v565[13] = 8;
                  swift_release();
                  LODWORD(v677) = v564;
                  __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
                  OUTLINED_FUNCTION_9_9();
                  v569();
                  *(void *)&v684[0] = 0x5F6E6F6374;
                  *((void *)&v684[0] + 1) = 0xE500000000000000;
                  swift_bridgeObjectRetain();
                  sub_1D7660BC0();
                  swift_bridgeObjectRelease_n();
                  *(void *)&long long v685 = OUTLINED_FUNCTION_104_0();
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                  v565[22] = 0;
                  swift_release();
                  v565[23] = 8;
                  swift_release();
                  uint64_t v570 = *(void *)(sub_1D760C40C() + 16);
                  OUTLINED_FUNCTION_46_2();
                  swift_bridgeObjectRelease();
                  *(void *)&long long v685 = v570;
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  _os_log_impl(&dword_1D757C000, v665, (os_log_type_t)v677, "%{public}s: Removing connection %s from candidate connection list. Remaining connection pool count = %ld", v565, 0x20u);
                  OUTLINED_FUNCTION_122_0();
                  OUTLINED_FUNCTION_1();
                  OUTLINED_FUNCTION_1();
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v424 = (objc_class *)v680;
                  swift_release_n();
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                }
              }
              sub_1D760C304((uint64_t)&v691);
              OUTLINED_FUNCTION_144_0(&v691, *((uint64_t *)&v692 + 1));
              OUTLINED_FUNCTION_9_9();
              v571();
              long long v572 = v688;
              __swift_project_boxed_opaque_existential_0Tm(&v694, v695);
              OUTLINED_FUNCTION_9_9();
              v573();
              if ((void)v572 == (void)v685 && *((void *)&v572 + 1) == *((void *)&v685 + 1))
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v575 = OUTLINED_FUNCTION_156_0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v575 & 1) == 0)
                {
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);

                  goto LABEL_197;
                }
              }
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
              sub_1D7616CF4(&v688);
              if (!*((void *)&v689 + 1))
              {
                sub_1D75940B4((uint64_t)&v688, (uint64_t *)&unk_1EA82BA30);
                v604 = v424;
                LODWORD(v678) = sub_1D7660DD0();
                v605 = qword_1EA82C240;
                uint64_t v606 = OUTLINED_FUNCTION_4_13();
                OUTLINED_FUNCTION_27_5(v606);
                uint64_t v607 = OUTLINED_FUNCTION_4_13();
                *(unsigned char *)(v607 + 16) = 8;
                uint64_t v608 = OUTLINED_FUNCTION_33();
                *(void *)(v608 + 16) = sub_1D761E520;
                *(void *)(v608 + 24) = v604;
                uint64_t v609 = OUTLINED_FUNCTION_33();
                *(void *)(v609 + 16) = sub_1D761EF00;
                *(void *)(v609 + 24) = v608;
                uint64_t v610 = OUTLINED_FUNCTION_40_2();
                *(_OWORD *)(v610 + 16) = xmmword_1D76655E0;
                *(void *)(v610 + 32) = sub_1D761EF14;
                *(void *)(v610 + 40) = v606;
                *(void *)(v610 + 48) = sub_1D761EF14;
                *(void *)(v610 + 56) = v607;
                *(void *)(v610 + 64) = sub_1D761EF08;
                *(void *)(v610 + 72) = v609;
                swift_setDeallocating();
                swift_retain_n();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1D761A064();
                os_log_type_t v611 = v678;
                os_log_t v678 = v605;
                if (os_log_type_enabled(v605, v611))
                {
                  v612 = (uint8_t *)OUTLINED_FUNCTION_14_0();
                  v677 = (uint64_t *)OUTLINED_FUNCTION_11_4();
                  *(void *)&long long v691 = v677;
                  OUTLINED_FUNCTION_181_0(258);
                  v612[3] = 8;
                  swift_release();
                  uint64_t v613 = sub_1D760C1AC();
                  *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v613, v614);
                  sub_1D7661020();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  _os_log_impl(&dword_1D757C000, v678, v611, "%{public}s: No more connections in connection pool. Cannot migrate. Cancelling tunnel", v612, 0xCu);
                  OUTLINED_FUNCTION_93_0();
                  OUTLINED_FUNCTION_1();
                  OUTLINED_FUNCTION_1();
                }
                else
                {
                  OUTLINED_FUNCTION_177();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_willThrow();
                __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v694);
                OUTLINED_FUNCTION_97_0();
                goto LABEL_209;
              }
              long long v691 = v688;
              long long v692 = v689;
              long long v693 = v690;
              LODWORD(v664) = sub_1D7660DD0();
              os_log_t v667 = (os_log_t)qword_1EA82C240;
              sub_1D75B93BC((uint64_t)&v691, (uint64_t)&v688);
              sub_1D75B93BC((uint64_t)&v688, (uint64_t)&v685);
              uint64_t v576 = swift_allocObject();
              long long v577 = v689;
              *(_OWORD *)(v576 + 16) = v688;
              *(_OWORD *)(v576 + 32) = v577;
              *(_OWORD *)(v576 + 48) = v690;
              v578 = (objc_class *)v576;
              os_log_t v670 = (os_log_t)v576;
              sub_1D758B1EC((uint64_t)&v694, (uint64_t)v684);
              sub_1D758B1EC((uint64_t)v684, (uint64_t)v683);
              v579 = OUTLINED_FUNCTION_46_1();
              v672 = v579;
              sub_1D758AB78(v684, (uint64_t)&v579[2]);
              uint64_t v661 = OUTLINED_FUNCTION_4_13();
              OUTLINED_FUNCTION_27_5(v661);
              v677 = (uint64_t *)OUTLINED_FUNCTION_4_13();
              *((unsigned char *)v677 + 16) = 8;
              uint64_t v580 = OUTLINED_FUNCTION_33();
              *(void *)(v580 + 16) = sub_1D761E520;
              *(void *)(v580 + 24) = v424;
              uint64_t v581 = v580;
              uint64_t v671 = v580;
              uint64_t v582 = OUTLINED_FUNCTION_33();
              uint64_t v662 = v582;
              *(void *)(v582 + 16) = sub_1D761EF00;
              *(void *)(v582 + 24) = v581;
              v676 = (uint64_t *)OUTLINED_FUNCTION_4_13();
              *((unsigned char *)v676 + 16) = 32;
              uint64_t v675 = OUTLINED_FUNCTION_4_13();
              *(unsigned char *)(v675 + 16) = 8;
              v583 = OUTLINED_FUNCTION_33();
              v583[2].unint64_t isa = (Class)sub_1D761E88C;
              v583[3].unint64_t isa = v578;
              uint64_t v584 = OUTLINED_FUNCTION_33();
              *(void *)(v584 + 16) = sub_1D761EF00;
              *(void *)(v584 + 24) = v583;
              os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_4_13();
              LOBYTE(v678[2].isa) = 32;
              os_log_t v669 = (os_log_t)OUTLINED_FUNCTION_4_13();
              LOBYTE(v669[2].isa) = 8;
              uint64_t v585 = OUTLINED_FUNCTION_33();
              *(void *)(v585 + 16) = sub_1D761F058;
              *(void *)(v585 + 24) = v579;
              uint64_t v586 = OUTLINED_FUNCTION_33();
              *(void *)(v586 + 16) = sub_1D761EF00;
              *(void *)(v586 + 24) = v585;
              uint64_t v587 = OUTLINED_FUNCTION_135_0();
              *(_OWORD *)(v587 + 16) = v666;
              uint64_t v588 = v661;
              uint64_t v589 = v662;
              *(void *)(v587 + 32) = sub_1D761EF14;
              *(void *)(v587 + 40) = v588;
              v590 = v677;
              *(void *)(v587 + 48) = sub_1D761EF14;
              *(void *)(v587 + 56) = v590;
              *(void *)(v587 + 64) = sub_1D761EF08;
              *(void *)(v587 + 72) = v589;
              v591 = v676;
              *(void *)(v587 + 80) = sub_1D761EF14;
              *(void *)(v587 + 88) = v591;
              uint64_t v592 = v675;
              *(void *)(v587 + 96) = sub_1D761EF14;
              *(void *)(v587 + 104) = v592;
              *(void *)(v587 + 112) = sub_1D761EF08;
              *(void *)(v587 + 120) = v584;
              os_log_t v593 = v678;
              *(void *)(v587 + 128) = sub_1D761EF14;
              *(void *)(v587 + 136) = v593;
              os_log_t v594 = v669;
              *(void *)(v587 + 144) = sub_1D761EF14;
              *(void *)(v587 + 152) = v594;
              *(void *)(v587 + 160) = sub_1D761EF08;
              *(void *)(v587 + 168) = v586;
              swift_setDeallocating();
              OUTLINED_FUNCTION_166_0();
              swift_retain();
              swift_retain();
              os_log_t v665 = v583;
              swift_retain();
              swift_retain();
              uint64_t v673 = v585;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v663 = v584;
              swift_retain();
              swift_retain();
              swift_retain();
              *(void *)&long long v666 = v586;
              swift_retain();
              sub_1D761A064();
              os_log_type_t v595 = v664;
              if (os_log_type_enabled(v667, (os_log_type_t)v664))
              {
                v596 = (uint8_t *)OUTLINED_FUNCTION_11_4();
                v664 = (void *)swift_slowAlloc();
                v682 = v664;
                OUTLINED_FUNCTION_80_0(770);
                v596[3] = 8;
                swift_release();
                uint64_t v597 = sub_1D760C1AC();
                v681[0] = sub_1D758DBE8(v597, v598, (uint64_t *)&v682);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                v596[12] = 32;
                swift_release();
                v596[13] = 8;
                swift_release();
                sub_1D758B1EC((uint64_t)&v685, (uint64_t)v681);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BBA0);
                uint64_t v599 = sub_1D7660B60();
                v681[0] = sub_1D758DBE8(v599, v600, (uint64_t *)&v682);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                sub_1D75B8E3C((uint64_t)&v685);
                v596[22] = 32;
                swift_release();
                v596[23] = 8;
                swift_release();
                sub_1D758B1EC((uint64_t)v683, (uint64_t)v681);
                uint64_t v601 = sub_1D7660B60();
                v681[0] = sub_1D758DBE8(v601, v602, (uint64_t *)&v682);
                sub_1D7661020();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v683);
                _os_log_impl(&dword_1D757C000, v667, v595, "%{public}s: Migrating primary connection to %s to due to failure of previous primary %s", v596, 0x20u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_1();
                OUTLINED_FUNCTION_1();
                uint64_t v603 = v680;
              }
              else
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v603 = v680;
                swift_release_n();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                sub_1D75B8E3C((uint64_t)&v685);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v683);
              }
              OUTLINED_FUNCTION_52_1();
              sub_1D760C358(&v688);

              uint64_t v615 = *((void *)&v693 + 1);
              sub_1D75B8E3C((uint64_t)&v691);
              uint64_t v616 = v603 + *(void *)(*(void *)v603 + 144);
              *(void *)uint64_t v616 = v615;
              *(unsigned char *)(v616 + 8) = 0;
LABEL_197:
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v694);
              OUTLINED_FUNCTION_42_1();
              v617();
              goto LABEL_214;
            case 0xEu:
              uint64_t v668 = v95;
              uint64_t v433 = v641;
              sub_1D760BCE0(v641);
              uint64_t v434 = v675;
              OUTLINED_FUNCTION_57_1(v433, 1, v675);
              if (v202) {
                goto LABEL_236;
              }
              uint64_t v435 = OUTLINED_FUNCTION_55();
              swift_weakInit();
              v436 = (void *)OUTLINED_FUNCTION_192();
              uint64_t v437 = v673;
              v436[2] = v434;
              v436[3] = v437;
              v436[4] = v435;
              v438 = *(void (**)(uint64_t (*)(uint64_t *), void *, uint64_t, uint64_t))(v437 + 72);
              swift_retain();
              v438(sub_1D761EA74, v436, v434, v437);
              swift_release();
              swift_release();
              OUTLINED_FUNCTION_6();
              v439();
              OUTLINED_FUNCTION_97_0();
              os_log_t v319 = (os_log_t)v96;
              goto LABEL_140;
            default:
              goto LABEL_65;
          }
        }
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
      uint64_t v92 = v658;
      id v322 = v647;
      sub_1D75EE174((uint64_t)v658, (uint64_t)v647, qword_1EA82C420);
      if (OUTLINED_FUNCTION_173_0() == 1) {
        goto LABEL_107;
      }
      sub_1D761E98C();
      sub_1D7616D8C();
      uint64_t v356 = (uint64_t)v86;
      goto LABEL_118;
    case 4u:
      int v149 = OUTLINED_FUNCTION_35_2();
      if (v678 == 128)
      {
        if (v149 == 1)
        {
          int v150 = *v96;
          sub_1D760C0BC(v150);
          uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
          uint64_t v152 = OUTLINED_FUNCTION_23_0(v151);
          MEMORY[0x1F4188790](v152);
          OUTLINED_FUNCTION_90_0();
          sub_1D760BF08(v153);
          uint64_t v154 = sub_1D7660430();
          OUTLINED_FUNCTION_57_1(v95, 1, v154);
          if (!v202)
          {
            os_log_t v678 = (os_log_t)v95;
            uint64_t v155 = v659;
            sub_1D760C52C(v659);
            os_log_t v156 = v667;
            OUTLINED_FUNCTION_57_1(v155, 1, (uint64_t)v667);
            uint64_t v157 = v650;
            if (!v202)
            {
              LODWORD(v670) = v150;
              v676 = &v632;
              v677 = &v632;
              OUTLINED_FUNCTION_19_7();
              uint64_t v159 = v158;
              MEMORY[0x1F4188790](v160);
              uint64_t v671 = ((unint64_t)&v161[1].isa + 7) & 0xFFFFFFFFFFFFFFF0;
              v672 = v161;
              uint64_t v162 = (char *)&v632 - v671;
              *&long long v679 = v159[2];
              OUTLINED_FUNCTION_28();
              v163();
              sub_1D760C52C(v157);
              OUTLINED_FUNCTION_57_1(v157, 1, (uint64_t)v156);
              if (!v202)
              {
                __int16 v164 = *(_WORD *)(v157 + SLODWORD(v156[3].isa));
                os_log_t v669 = v159;
                unint64_t isa = (void (*)(void, void, void))v159[4].isa;
                uint64_t v166 = v666;
                isa(v666, v678, v154);
                isa(v166 + SHIDWORD(v156[2].isa), v162, v154);
                *(_WORD *)(v166 + SLODWORD(v156[3].isa)) = v164;
                sub_1D761E4CC(v157, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
                uint64_t v167 = sub_1D761E4CC(v659, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
                MEMORY[0x1F4188790](v167);
                uint64_t v168 = ((char *)&v632 - v671);
                uint64_t v169 = v649;
                uint64_t EnumTagSinglePayload = v680;
                sub_1D760C52C(v649);
                uint64_t v171 = OUTLINED_FUNCTION_165_0();
                OUTLINED_FUNCTION_57_1(v171, v172, (uint64_t)v156);
                if (!v202)
                {
                  v676 = &v632;
                  v677 = (uint64_t *)v154;
                  os_log_t v678 = v168;
                  OUTLINED_FUNCTION_28();
                  v173();
                  sub_1D761E4CC(v169, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
                  LOBYTE(v168) = sub_1D7660DD0();
                  if (qword_1EA82AA50 == -1)
                  {
LABEL_16:
                    uint64_t v174 = qword_1EA82C240;
                    uint64_t v175 = OUTLINED_FUNCTION_4_13();
                    OUTLINED_FUNCTION_27_5(v175);
                    uint64_t v176 = OUTLINED_FUNCTION_4_13();
                    *(unsigned char *)(v176 + 16) = 8;
                    uint64_t v177 = OUTLINED_FUNCTION_33();
                    *(void *)(v177 + 16) = sub_1D761E520;
                    *(void *)(v177 + 24) = EnumTagSinglePayload;
                    uint64_t v178 = OUTLINED_FUNCTION_33();
                    *(void *)(v178 + 16) = sub_1D761EF00;
                    *(void *)(v178 + 24) = v177;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
                    uint64_t v179 = OUTLINED_FUNCTION_40_2();
                    *(_OWORD *)(v179 + 16) = xmmword_1D76655E0;
                    *(void *)(v179 + 32) = sub_1D761EF14;
                    *(void *)(v179 + 40) = v175;
                    *(void *)(v179 + 48) = sub_1D761EF14;
                    *(void *)(v179 + 56) = v176;
                    *(void *)(v179 + 64) = sub_1D761EF08;
                    *(void *)(v179 + 72) = v178;
                    swift_setDeallocating();
                    swift_retain_n();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1D761A064();
                    v672 = v174;
                    if (os_log_type_enabled(v174, (os_log_type_t)v168))
                    {
                      id v180 = (uint8_t *)OUTLINED_FUNCTION_14_0();
                      uint64_t v671 = OUTLINED_FUNCTION_11_4();
                      *(void *)&long long v691 = v671;
                      *(_WORD *)id v180 = 258;
                      v180[2] = 34;
                      swift_release();
                      v180[3] = 8;
                      swift_release();
                      uint64_t v181 = sub_1D760C1AC();
                      *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v181, v182);
                      OUTLINED_FUNCTION_66_0();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_release();
                      _os_log_impl(&dword_1D757C000, v672, (os_log_type_t)v168, "%{public}s: Server sending handshake response", v180, 0xCu);
                      OUTLINED_FUNCTION_93_0();
                      OUTLINED_FUNCTION_1();
                      OUTLINED_FUNCTION_1();
                    }
                    else
                    {
                      swift_release_n();
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                    }
                    *(unsigned char *)(EnumTagSinglePayload + *(void *)(*(void *)EnumTagSinglePayload + 184)) = -127;
                    uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82BE88);
                    uint64_t v348 = v664;
                    uint64_t v349 = *(int *)(v347 + 64);
                    v672 = type metadata accessor for TunnelInterfaceParameters;
                    sub_1D761E470();
                    OUTLINED_FUNCTION_28();
                    v350();
                    *(_WORD *)((char *)v348 + v349) = (_WORD)v670;
                    swift_storeEnumTagMultiPayload();
                    sub_1D760C304((uint64_t)&v691);
                    uint64_t v351 = v693;
                    __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
                    uint64_t v352 = OUTLINED_FUNCTION_55();
                    swift_weakInit();
                    uint64_t v353 = OUTLINED_FUNCTION_192();
                    *(void *)(OUTLINED_FUNCTION_106_0(v353) + 32) = v352;
                    uint64_t v354 = *(void (**)(void))(v351 + 24);
                    swift_retain();
                    OUTLINED_FUNCTION_162_0();
                    v354();
                    swift_release();
                    sub_1D761E4CC((uint64_t)v348, (void (*)(void))type metadata accessor for TunnelMessage);
                    OUTLINED_FUNCTION_6();
                    v355();
                    sub_1D761E4CC(v666, v672);
                    swift_release();
                    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
                    goto LABEL_214;
                  }
LABEL_226:
                  swift_once();
                  goto LABEL_16;
                }
                goto LABEL_234;
              }
LABEL_233:
              __break(1u);
LABEL_234:
              __break(1u);
LABEL_235:
              __break(1u);
LABEL_236:
              __break(1u);
LABEL_237:
              __break(1u);
              goto LABEL_238;
            }
LABEL_232:
            __break(1u);
            goto LABEL_233;
          }
LABEL_231:
          __break(1u);
          goto LABEL_232;
        }
LABEL_65:
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            OUTLINED_FUNCTION_139_0();
            v247();
            swift_release();
            uint64_t v95 = TupleTypeMetadata2;
            swift_bridgeObjectRelease();
            break;
          case 15:
            sub_1D7618DB4(0);
            goto LABEL_214;
          case 11:
LABEL_82:
            swift_willThrow();
            goto LABEL_214;
          case 10:
            swift_willThrow();
            uint64_t v245 = (long long *)v96;
LABEL_121:
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v245);
            goto LABEL_214;
          default:
            (*(void (**)(long long *, uint64_t))(v657 + 8))(v92, TupleTypeMetadata2);
            break;
        }
        LODWORD(v661) = sub_1D7660DC0();
        uint64_t v248 = v675;
        uint64_t v249 = (void (*)(void))v677;
        if (qword_1EA82AA50 != -1) {
          swift_once();
        }
        os_log_t v665 = (os_log_t)qword_1EA82C240;
        uint64_t v250 = v668;
        OUTLINED_FUNCTION_68_0();
        v249();
        OUTLINED_FUNCTION_68_0();
        v249();
        OUTLINED_FUNCTION_138_0();
        uint64_t v251 = swift_allocObject();
        uint64_t v252 = (objc_class *)v673;
        v251[2].unint64_t isa = (Class)v248;
        v251[3].unint64_t isa = v252;
        uint64_t v253 = v251;
        os_log_t v667 = v251;
        (*(void (**)(char *, uint64_t, uint64_t))(v696 + 32))((char *)v249 + (void)v251, v250, v95);
        uint64_t v660 = OUTLINED_FUNCTION_4_13();
        OUTLINED_FUNCTION_27_5(v660);
        uint64_t v659 = OUTLINED_FUNCTION_4_13();
        *(unsigned char *)(v659 + 16) = 8;
        uint64_t v254 = OUTLINED_FUNCTION_33();
        uint64_t v255 = v680;
        *(void *)(v254 + 16) = sub_1D761E520;
        *(void *)(v254 + 24) = v255;
        uint64_t v256 = v255;
        uint64_t v257 = (objc_class *)v254;
        *(void *)&long long v666 = v254;
        uint64_t v258 = OUTLINED_FUNCTION_33();
        v658 = (long long *)v258;
        v258[2].unint64_t isa = (Class)sub_1D761EF00;
        v258[3].unint64_t isa = v257;
        uint64_t v674 = OUTLINED_FUNCTION_4_13();
        *(unsigned char *)(v674 + 16) = 34;
        uint64_t v673 = OUTLINED_FUNCTION_4_13();
        *(unsigned char *)(v673 + 16) = 8;
        uint64_t v259 = OUTLINED_FUNCTION_33();
        *(void *)(v259 + 16) = sub_1D761E528;
        *(void *)(v259 + 24) = v253;
        uint64_t v260 = OUTLINED_FUNCTION_33();
        uint64_t v675 = v260;
        *(void *)(v260 + 16) = sub_1D761EF00;
        *(void *)(v260 + 24) = v259;
        os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_4_13();
        LOBYTE(v678[2].isa) = 34;
        os_log_t v669 = (os_log_t)OUTLINED_FUNCTION_4_13();
        LOBYTE(v669[2].isa) = 8;
        uint64_t v261 = (void *)OUTLINED_FUNCTION_33();
        v261[2] = sub_1D761E788;
        v261[3] = v256;
        uint64_t v262 = OUTLINED_FUNCTION_33();
        *(void *)(v262 + 16) = sub_1D761EF00;
        *(void *)(v262 + 24) = v261;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
        uint64_t v263 = OUTLINED_FUNCTION_135_0();
        *(_OWORD *)(v263 + 16) = xmmword_1D7668A20;
        uint64_t v265 = v659;
        uint64_t v264 = v660;
        *(void *)(v263 + 32) = sub_1D761EF14;
        *(void *)(v263 + 40) = v264;
        *(void *)(v263 + 48) = sub_1D761EF14;
        *(void *)(v263 + 56) = v265;
        os_log_t v266 = (os_log_t)v658;
        *(void *)(v263 + 64) = sub_1D761EF08;
        *(void *)(v263 + 72) = v266;
        uint64_t v267 = v674;
        *(void *)(v263 + 80) = sub_1D761EF14;
        *(void *)(v263 + 88) = v267;
        uint64_t v268 = v673;
        *(void *)(v263 + 96) = sub_1D761EF14;
        *(void *)(v263 + 104) = v268;
        uint64_t v269 = v675;
        *(void *)(v263 + 112) = sub_1D761EF08;
        *(void *)(v263 + 120) = v269;
        os_log_t v270 = v678;
        *(void *)(v263 + 128) = sub_1D761EF14;
        *(void *)(v263 + 136) = v270;
        os_log_t v271 = v669;
        *(void *)(v263 + 144) = sub_1D761EF14;
        *(void *)(v263 + 152) = v271;
        *(void *)(v263 + 160) = sub_1D761EF08;
        *(void *)(v263 + 168) = v262;
        uint64_t v668 = v95;
        OUTLINED_FUNCTION_125_0();
        swift_setDeallocating();
        swift_retain_n();
        swift_retain();
        swift_retain();
        uint64_t v662 = v259;
        swift_retain();
        v664 = v261;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v663 = v262;
        swift_retain();
        sub_1D761A064();
        int v272 = v661;
        if (os_log_type_enabled(v665, (os_log_type_t)v661))
        {
          uint64_t v273 = (uint8_t *)OUTLINED_FUNCTION_11_4();
          uint64_t v661 = swift_slowAlloc();
          *(void *)&long long v691 = v661;
          *(_WORD *)uint64_t v273 = 770;
          v273[2] = 34;
          swift_release();
          v273[3] = 8;
          swift_release();
          uint64_t v274 = v680;
          LODWORD(v660) = v272;
          uint64_t v275 = sub_1D760C1AC();
          *(void *)&long long v688 = sub_1D758DBE8(v275, v276, (uint64_t *)&v691);
          sub_1D7661020();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v273[12] = 34;
          swift_release();
          v273[13] = 8;
          swift_release();
          OUTLINED_FUNCTION_28();
          v277();
          uint64_t v278 = sub_1D7660B60();
          uint64_t v280 = sub_1D758DBE8(v278, v279, (uint64_t *)&v691);
          OUTLINED_FUNCTION_129(v280);
          OUTLINED_FUNCTION_147_0();
          sub_1D7661020();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_6();
          v281();
          v273[22] = 34;
          swift_release();
          v273[23] = 8;
          swift_release();
          LOBYTE(v688) = *(unsigned char *)(v274 + *(void *)(*(void *)v274 + 184));
          uint64_t v282 = sub_1D7660B60();
          *(void *)&long long v688 = sub_1D758DBE8(v282, v283, (uint64_t *)&v691);
          sub_1D7661020();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          _os_log_impl(&dword_1D757C000, v665, (os_log_type_t)v660, "%{public}s: internal inconsistency: Unexpected event (%{public}s) received in state: %{public}s", v273, 0x20u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v274 = v680;
          OUTLINED_FUNCTION_46_2();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_6();
          v284();
          OUTLINED_FUNCTION_46_2();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        sub_1D75AF4C0();
        OUTLINED_FUNCTION_187_0();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_179_0();
        long long v688 = v691;
        *(void *)&long long v685 = sub_1D7661540();
        *((void *)&v685 + 1) = v285;
        sub_1D7660BC0();
        OUTLINED_FUNCTION_28();
        v286();
        sub_1D7660B60();
        sub_1D7660BC0();
        swift_bridgeObjectRelease();
        sub_1D7660BC0();
        LOBYTE(v694) = *(unsigned char *)(v274 + *(void *)(*(void *)v274 + 184));
        sub_1D7660B60();
        sub_1D7660BC0();
        swift_bridgeObjectRelease();
        sub_1D7660BC0();
        sub_1D75B0D60();
        OUTLINED_FUNCTION_3_0();
        sub_1D76616A0();
        goto LABEL_82;
      }
      if (v149 != 2) {
        goto LABEL_65;
      }
      uint64_t v95 = *((void *)v96 + 5);
      sub_1D758AB78((long long *)v96, (uint64_t)&v691);
      uint64_t v225 = *((void *)&v692 + 1);
      uint64_t v226 = v693;
      __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
      OUTLINED_FUNCTION_9_9();
      v227();
      OUTLINED_FUNCTION_141_0();
      uint64_t v228 = v690;
      __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
      OUTLINED_FUNCTION_9_9();
      v229();
      uint64_t v96 = (unsigned __int16 *)*((void *)&v694 + 1);
      if (v226 == (void)v694 && v225 == *((void *)&v694 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        TupleTypeMetadata2 = OUTLINED_FUNCTION_83();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((TupleTypeMetadata2 & 1) == 0)
        {
          int v183 = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
          __break(1u);
LABEL_51:
          if (v183 != 2) {
            goto LABEL_65;
          }
          uint64_t v95 = *((void *)v96 + 5);
          sub_1D758AB78((long long *)v96, (uint64_t)&v691);
          uint64_t v231 = *((void *)&v692 + 1);
          uint64_t v232 = v693;
          __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
          OUTLINED_FUNCTION_9_9();
          v233();
          OUTLINED_FUNCTION_141_0();
          uint64_t v234 = (void (*)(void))v690;
          __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
          OUTLINED_FUNCTION_9_9();
          v235();
          uint64_t v96 = (unsigned __int16 *)*((void *)&v694 + 1);
          if (v232 == (void)v694 && v231 == *((void *)&v694 + 1))
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            TupleTypeMetadata2 = OUTLINED_FUNCTION_83();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((TupleTypeMetadata2 & 1) == 0)
            {
              int v195 = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
              __break(1u);
LABEL_58:
              if (v195 != 3) {
                goto LABEL_65;
              }
              uint64_t v237 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C418) + 48);
              uint64_t v238 = (long long *)v96;
              uint64_t v239 = (uint64_t)v96 + v237;
              sub_1D758AB78(v238, (uint64_t)&v691);
              uint64_t v92 = v651;
              sub_1D761E924(v239, (uint64_t)v651);
              __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
              OUTLINED_FUNCTION_9_9();
              v240();
              long long v241 = v685;
              uint64_t v95 = v680;
              sub_1D760C304((uint64_t)&v688);
              __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
              OUTLINED_FUNCTION_9_9();
              v242();
              uint64_t v96 = (unsigned __int16 *)*((void *)&v694 + 1);
              if ((void)v241 == (void)v694 && *((void *)&v241 + 1) == *((void *)&v694 + 1))
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                TupleTypeMetadata2 = OUTLINED_FUNCTION_83();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((TupleTypeMetadata2 & 1) == 0)
                {
                  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
                  __break(1u);
                  goto LABEL_65;
                }
              }
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
              id v322 = v648;
              sub_1D75EE174((uint64_t)v92, (uint64_t)v648, qword_1EA82C420);
              if (OUTLINED_FUNCTION_173_0() == 1)
              {
LABEL_107:
                id v323 = *v322;
                sub_1D75AF4C0();
                OUTLINED_FUNCTION_44_2();
                long long v694 = v685;
                OUTLINED_FUNCTION_174_0();
                sub_1D76616A0();
                long long v685 = v688;
                sub_1D75B0D60();
                OUTLINED_FUNCTION_3_0();
                id v324 = v323;
                sub_1D7660350();

                swift_bridgeObjectRelease();
                swift_willThrow();
              }
              else
              {
                uint64_t v357 = v645;
                sub_1D761E98C();
                sub_1D7616D8C();
                uint64_t v356 = v357;
LABEL_118:
                sub_1D761E4CC(v356, (void (*)(void))type metadata accessor for TunnelMessage);
              }
              sub_1D75940B4((uint64_t)v92, qword_1EA82C420);
LABEL_120:
              uint64_t v245 = &v691;
              goto LABEL_121;
            }
          }
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
          if (!v95)
          {
            os_log_type_t v450 = sub_1D7660DD0();
            if (qword_1EA82AA50 != -1) {
              swift_once();
            }
            v451 = qword_1EA82C240;
            uint64_t v452 = OUTLINED_FUNCTION_4_13();
            OUTLINED_FUNCTION_27_5(v452);
            uint64_t v453 = OUTLINED_FUNCTION_4_13();
            OUTLINED_FUNCTION_75(v453);
            uint64_t v454 = OUTLINED_FUNCTION_33();
            *(void *)(v454 + 16) = sub_1D761E520;
            *(void *)(v454 + 24) = v92;
            uint64_t v455 = OUTLINED_FUNCTION_33();
            *(void *)(v455 + 16) = sub_1D761EF00;
            *(void *)(v455 + 24) = v454;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
            uint64_t v456 = OUTLINED_FUNCTION_40_2();
            *(_OWORD *)(v456 + 16) = xmmword_1D76655E0;
            *(void *)(v456 + 32) = sub_1D761EF14;
            *(void *)(v456 + 40) = v452;
            *(void *)(v456 + 48) = sub_1D761EF14;
            *(void *)(v456 + 56) = v234;
            *(void *)(v456 + 64) = sub_1D761EF08;
            *(void *)(v456 + 72) = v455;
            swift_setDeallocating();
            swift_retain_n();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1D761A064();
            uint64_t v457 = (void (*)(void))v450;
            if (os_log_type_enabled(v451, v450))
            {
              uint64_t v458 = OUTLINED_FUNCTION_14_0();
              uint64_t v699 = OUTLINED_FUNCTION_11_4();
              *(void *)&long long v679 = v451;
              *(void *)&long long v688 = v699;
              *(_WORD *)uint64_t v458 = 258;
              *(unsigned char *)(v458 + 2) = 34;
              swift_release();
              OUTLINED_FUNCTION_79_0();
              uint64_t v234 = v457;
              uint64_t v459 = sub_1D760C1AC();
              *(void *)&long long v685 = sub_1D758DBE8(v459, v460, (uint64_t *)&v688);
              sub_1D7661020();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              OUTLINED_FUNCTION_188_0(&dword_1D757C000, v679, (os_log_type_t)v457, "%{public}s: Client sent handshake request, waiting for server response");
              OUTLINED_FUNCTION_93_0();
              OUTLINED_FUNCTION_1();
              OUTLINED_FUNCTION_1();
            }
            else
            {
              OUTLINED_FUNCTION_46_2();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            *((unsigned char *)v92 + *(void *)(*(void *)v92 + 184)) = 96;
            sub_1D760C304((uint64_t)&v688);
            __swift_project_boxed_opaque_existential_0Tm(&v688, *((uint64_t *)&v689 + 1));
            OUTLINED_FUNCTION_55();
            swift_weakInit();
            v520 = (void *)OUTLINED_FUNCTION_192();
            OUTLINED_FUNCTION_63_0(v520);
            OUTLINED_FUNCTION_29_5();
            v234();
            swift_release();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
            swift_release();
            uint64_t v245 = &v688;
            goto LABEL_121;
          }
LABEL_101:
          sub_1D75AF4C0();
          OUTLINED_FUNCTION_44_2();
          OUTLINED_FUNCTION_153_0();
          OUTLINED_FUNCTION_174_0();
          sub_1D76616A0();
          long long v685 = v688;
          sub_1D75B0D60();
          OUTLINED_FUNCTION_3_0();
          sub_1D7660350();
          swift_bridgeObjectRelease();
          swift_willThrow();

          goto LABEL_120;
        }
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v688);
      if (!v95)
      {
        uint64_t v440 = sub_1D7660DD0();
        if (qword_1EA82AA50 != -1) {
          swift_once();
        }
        v441 = qword_1EA82C240;
        uint64_t v442 = OUTLINED_FUNCTION_4_13();
        OUTLINED_FUNCTION_27_5(v442);
        uint64_t v443 = OUTLINED_FUNCTION_4_13();
        OUTLINED_FUNCTION_75(v443);
        uint64_t v444 = OUTLINED_FUNCTION_33();
        *(void *)(v444 + 16) = sub_1D761E520;
        *(void *)(v444 + 24) = v92;
        uint64_t v445 = OUTLINED_FUNCTION_33();
        *(void *)(v445 + 16) = sub_1D761EF00;
        *(void *)(v445 + 24) = v444;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
        uint64_t v446 = OUTLINED_FUNCTION_40_2();
        *(_OWORD *)(v446 + 16) = xmmword_1D76655E0;
        *(void *)(v446 + 32) = sub_1D761EF14;
        *(void *)(v446 + 40) = v442;
        *(void *)(v446 + 48) = sub_1D761EF14;
        *(void *)(v446 + 56) = v228;
        *(void *)(v446 + 64) = sub_1D761EF08;
        *(void *)(v446 + 72) = v445;
        swift_setDeallocating();
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1D761A064();
        if (os_log_type_enabled(v441, (os_log_type_t)v440))
        {
          OUTLINED_FUNCTION_14_0();
          *(void *)&long long v679 = OUTLINED_FUNCTION_11_4();
          *(void *)&long long v688 = v679;
          OUTLINED_FUNCTION_53_1();
          OUTLINED_FUNCTION_79_0();
          uint64_t v447 = sub_1D760C1AC();
          uint64_t v449 = sub_1D758DBE8(v447, v448, (uint64_t *)&v688);
          OUTLINED_FUNCTION_130(v449);
          sub_1D7661020();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          OUTLINED_FUNCTION_188_0(&dword_1D757C000, v441, (os_log_type_t)v440, "%{public}s: Server sent handshake response");
          OUTLINED_FUNCTION_93_0();
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_1();
        }
        else
        {
          OUTLINED_FUNCTION_46_2();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        uint64_t v517 = sub_1D760C5E0();
        if (v517)
        {
          v518 = (void (*)(uint64_t))v517;
          *((unsigned char *)v92 + *(void *)(*(void *)v92 + 184)) = 1;
          OUTLINED_FUNCTION_40_1();
          sub_1D760C610();
          uint64_t v519 = sub_1D760C65C();
          v518(v519);
          sub_1D75940A4((uint64_t)v518);
          goto LABEL_171;
        }
        goto LABEL_237;
      }
      goto LABEL_101;
    case 5u:
      int v215 = OUTLINED_FUNCTION_35_2();
      if (v678 == 160)
      {
        if (v215 == 4)
        {
          LODWORD(v679) = *(unsigned __int8 *)v96;
          os_log_type_t v184 = sub_1D7660DD0();
          if (qword_1EA82AA50 != -1) {
            swift_once();
          }
          uint64_t v216 = qword_1EA82C240;
          uint64_t v217 = OUTLINED_FUNCTION_4_13();
          OUTLINED_FUNCTION_27_5(v217);
          uint64_t v218 = OUTLINED_FUNCTION_4_13();
          OUTLINED_FUNCTION_75(v218);
          uint64_t v219 = OUTLINED_FUNCTION_33();
          uint64_t v220 = v680;
          *(void *)(v219 + 16) = sub_1D761E520;
          *(void *)(v219 + 24) = v220;
          uint64_t v168 = OUTLINED_FUNCTION_33();
          v168[2].unint64_t isa = (Class)sub_1D761EF00;
          v168[3].unint64_t isa = (Class)v219;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
          uint64_t v221 = OUTLINED_FUNCTION_40_2();
          *(_OWORD *)(v221 + 16) = xmmword_1D76655E0;
          *(void *)(v221 + 32) = sub_1D761EF14;
          *(void *)(v221 + 40) = v217;
          *(void *)(v221 + 48) = sub_1D761EF14;
          *(void *)(v221 + 56) = v8;
          *(void *)(v221 + 64) = sub_1D761EF08;
          *(void *)(v221 + 72) = v168;
          swift_setDeallocating();
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1D761A064();
          v697 = v216;
          if (os_log_type_enabled(v216, v184))
          {
            uint64_t v222 = OUTLINED_FUNCTION_14_0();
            os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_11_4();
            *(void *)&long long v691 = v678;
            OUTLINED_FUNCTION_53_1();
            OUTLINED_FUNCTION_79_0();
            uint64_t v217 = v222 + 4;
            uint64_t v223 = sub_1D760C1AC();
            *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v223, v224);
            OUTLINED_FUNCTION_66_0();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            OUTLINED_FUNCTION_188_0(&dword_1D757C000, v697, v184, "%{public}s: Creating virtual interface");
            OUTLINED_FUNCTION_93_0();
            OUTLINED_FUNCTION_1();
            OUTLINED_FUNCTION_1();
          }
          else
          {
            OUTLINED_FUNCTION_177();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
          uint64_t v325 = v220;
          uint64_t v326 = v652;
          sub_1D760C52C(v652);
          os_log_t v327 = v667;
          uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v326, 1, (uint64_t)v667);
          sub_1D75940B4(v326, &qword_1EA82C2D0);
          uint64_t v8 = v653;
          if (EnumTagSinglePayload == 1)
          {
            __break(1u);
            goto LABEL_226;
          }
          uint64_t v328 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA82C2A0);
          uint64_t v329 = OUTLINED_FUNCTION_23_0(v328);
          MEMORY[0x1F4188790](v329);
          OUTLINED_FUNCTION_9();
          sub_1D760BF08(v217);
          sub_1D7660430();
          uint64_t v330 = OUTLINED_FUNCTION_165_0();
          os_log_t v678 = v331;
          int v333 = __swift_getEnumTagSinglePayload(v330, v332, (uint64_t)v331);
          uint64_t v334 = OUTLINED_FUNCTION_30_3();
          sub_1D75940B4(v334, v335);
          if (v333 == 1)
          {
            __break(1u);
LABEL_228:
            swift_once();
LABEL_22:
            uint64_t v185 = qword_1EA82C240;
            uint64_t v186 = OUTLINED_FUNCTION_4_13();
            OUTLINED_FUNCTION_27_5(v186);
            uint64_t v187 = OUTLINED_FUNCTION_4_13();
            OUTLINED_FUNCTION_75(v187);
            uint64_t v188 = OUTLINED_FUNCTION_33();
            uint64_t v189 = v680;
            *(void *)(v188 + 16) = sub_1D761E520;
            *(void *)(v188 + 24) = v189;
            uint64_t v190 = OUTLINED_FUNCTION_33();
            *(void *)(v190 + 16) = sub_1D761EF00;
            *(void *)(v190 + 24) = v188;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
            uint64_t v191 = OUTLINED_FUNCTION_40_2();
            *(_OWORD *)(v191 + 16) = xmmword_1D76655E0;
            *(void *)(v191 + 32) = sub_1D761EF14;
            *(void *)(v191 + 40) = v186;
            *(void *)(v191 + 48) = sub_1D761EF14;
            *(void *)(v191 + 56) = v8;
            *(void *)(v191 + 64) = sub_1D761EF08;
            *(void *)(v191 + 72) = v190;
            swift_setDeallocating();
            swift_retain_n();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1D761A064();
            *(void *)&long long v679 = v185;
            if (os_log_type_enabled(v185, v184))
            {
              uint64_t v192 = OUTLINED_FUNCTION_14_0();
              os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_11_4();
              *(void *)&long long v691 = v678;
              OUTLINED_FUNCTION_53_1();
              OUTLINED_FUNCTION_79_0();
              uint64_t v186 = v192 + 4;
              uint64_t v193 = sub_1D760C1AC();
              *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v193, v194);
              OUTLINED_FUNCTION_66_0();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              OUTLINED_FUNCTION_188_0(&dword_1D757C000, v679, v184, "%{public}s: Client sending handshake request");
              OUTLINED_FUNCTION_93_0();
              OUTLINED_FUNCTION_1();
              OUTLINED_FUNCTION_1();
            }
            else
            {
              OUTLINED_FUNCTION_177();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            *(unsigned char *)(v189 + *(void *)(*(void *)v189 + 184)) = 65;
            uint64_t v473 = (uint64_t *)(v189 + *(void *)(*(void *)v189 + 144));
            if ((v473[1] & 1) == 0)
            {
              uint64_t v474 = *v473;
              uint64_t v475 = v664;
              *(_WORD *)v664 = (_WORD)v697;
              v475[1] = v474;
              swift_storeEnumTagMultiPayload();
              sub_1D760C304((uint64_t)&v691);
              uint64_t v476 = v693;
              OUTLINED_FUNCTION_77_0();
              OUTLINED_FUNCTION_55();
              OUTLINED_FUNCTION_124_0();
              v477 = (void *)OUTLINED_FUNCTION_192();
              uint64_t v478 = v673;
              v477[2] = v675;
              v477[3] = v478;
              v477[4] = v186;
              char v479 = *(void (**)(void))(v476 + 24);
              swift_retain();
              OUTLINED_FUNCTION_162_0();
              v479();
              swift_release();
              sub_1D761E4CC((uint64_t)v475, (void (*)(void))type metadata accessor for TunnelMessage);
LABEL_155:
              swift_release();
LABEL_171:
              uint64_t v245 = &v691;
              goto LABEL_121;
            }
LABEL_240:
            sub_1D7661260();
            __break(1u);
            JUMPOUT(0x1D76160D0);
          }
          v698[0] = sub_1D760C4CC();
          sub_1D760C52C((uint64_t)v8);
          OUTLINED_FUNCTION_57_1((uint64_t)v8, 1, (uint64_t)v327);
          uint64_t v336 = v675;
          if (!v202)
          {
            uint64_t v337 = (uint64_t)v8;
            uint64_t v338 = v673;
            unsigned int v339 = (*(uint64_t (**)(uint64_t, uint64_t))(v673 + 32))(v675, v673);
            sub_1D760C304((uint64_t)&v691);
            uint64_t v340 = *((void *)&v692 + 1);
            uint64_t v341 = v693;
            __swift_project_boxed_opaque_existential_0Tm(&v691, *((uint64_t *)&v692 + 1));
            uint64_t v342 = (*(uint64_t (**)(uint64_t, uint64_t))(v341 + 72))(v340, v341);
            LOBYTE(v688) = 0;
            uint64_t v343 = v646;
            uint64_t v344 = (void *)v674;
            sub_1D7622704((uint64_t)v698[0], v337, v339, v342, v345, v336, v338);
            if (v344)
            {
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
              sub_1D75AF4C0();
              OUTLINED_FUNCTION_187_0();
              OUTLINED_FUNCTION_0();
              OUTLINED_FUNCTION_179_0();
              long long v685 = v688;
              OUTLINED_FUNCTION_0();
              sub_1D76616A0();
              long long v688 = v691;
              sub_1D75B0D60();
              OUTLINED_FUNCTION_3_0();
              id v346 = v344;
              sub_1D7660350();

              swift_bridgeObjectRelease();
              swift_willThrow();

              goto LABEL_214;
            }
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v691);
            *(void *)&long long v691 = sub_1D7661540();
            *((void *)&v691 + 1) = v461;
            sub_1D7660BC0();
            swift_bridgeObjectRetain();
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            (*(void (**)(uint64_t, uint64_t))(v338 + 40))(v675, v338);
            sub_1D7660BC0();
            swift_bridgeObjectRelease();
            sub_1D7660BC0();
            uint64_t v462 = v637;
            sub_1D760C52C(v637);
            uint64_t v463 = OUTLINED_FUNCTION_159_0();
            OUTLINED_FUNCTION_57_1(v463, 1, (uint64_t)v667);
            if (!v202)
            {
              OUTLINED_FUNCTION_1_1();
              MEMORY[0x1F4188790](v464);
              OUTLINED_FUNCTION_30();
              sub_1D7622838(v462);
              sub_1D761E4CC(v325, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
              sub_1D7661200();
              OUTLINED_FUNCTION_45();
              v465();
              sub_1D7660BC0();
              sub_1D760C21C();
              uint64_t v466 = v656;
              uint64_t v467 = v638;
              uint64_t v468 = v675;
              OUTLINED_FUNCTION_28();
              v469();
              __swift_storeEnumTagSinglePayload(v467, 0, 1, v468);
              sub_1D760BD78(v467);
              (*(void (**)(uint64_t, uint64_t))(v466 + 8))(v343, v468);
              uint64_t v470 = sub_1D760C5E0();
              if (v470)
              {
                uint64_t v471 = (void (*)(uint64_t))v470;
                *(unsigned char *)(v325 + *(void *)(*(void *)v325 + 184)) = v679;
                OUTLINED_FUNCTION_40_1();
                sub_1D760C610();
                uint64_t v472 = sub_1D760C65C();
                v471(v472);
                sub_1D75940A4((uint64_t)v471);
                goto LABEL_214;
              }
              goto LABEL_239;
            }
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
            goto LABEL_240;
          }
          goto LABEL_235;
        }
        goto LABEL_65;
      }
      if (v215 == 5)
      {
        OUTLINED_FUNCTION_139_0();
        v246();
        swift_release();
        uint64_t v95 = TupleTypeMetadata2;
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(unsigned __int16 *, uint64_t))(v696 + 8))(v96, v95);
      }
      LODWORD(v670) = sub_1D7660DD0();
      uint64_t v291 = (void (*)(void))v677;
      if (qword_1EA82AA50 != -1) {
        swift_once();
      }
      v672 = qword_1EA82C240;
      uint64_t v292 = v662;
      OUTLINED_FUNCTION_68_0();
      v291();
      OUTLINED_FUNCTION_68_0();
      v291();
      OUTLINED_FUNCTION_138_0();
      uint64_t v293 = swift_allocObject();
      uint64_t v294 = v673;
      *(void *)(v293 + 16) = v675;
      *(void *)(v293 + 24) = v294;
      uint64_t v295 = (objc_class *)v293;
      *(void *)&long long v679 = v293;
      (*(void (**)(char *, uint64_t, uint64_t))(v696 + 32))((char *)v291 + v293, v292, v95);
      *(void *)&long long v666 = OUTLINED_FUNCTION_4_13();
      *(unsigned char *)(v666 + 16) = 34;
      os_log_t v678 = (os_log_t)OUTLINED_FUNCTION_4_13();
      LOBYTE(v678[2].isa) = 8;
      uint64_t v296 = OUTLINED_FUNCTION_33();
      uint64_t v297 = v680;
      *(void *)(v296 + 16) = sub_1D761E520;
      *(void *)(v296 + 24) = v297;
      uint64_t v298 = v296;
      uint64_t v675 = v296;
      uint64_t v299 = OUTLINED_FUNCTION_33();
      *(void *)(v299 + 16) = sub_1D761E53C;
      *(void *)(v299 + 24) = v298;
      uint64_t v300 = v299;
      os_log_t v665 = (os_log_t)OUTLINED_FUNCTION_4_13();
      LOBYTE(v665[2].isa) = 34;
      uint64_t v301 = OUTLINED_FUNCTION_4_13();
      uint64_t v668 = v95;
      uint64_t v302 = v301;
      *(unsigned char *)(v301 + 16) = 8;
      uint64_t v303 = OUTLINED_FUNCTION_33();
      v303[2].unint64_t isa = (Class)sub_1D761E528;
      v303[3].unint64_t isa = v295;
      uint64_t v304 = OUTLINED_FUNCTION_33();
      *(void *)(v304 + 16) = sub_1D761EF00;
      *(void *)(v304 + 24) = v303;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
      uint64_t v305 = swift_allocObject();
      *(_OWORD *)(v305 + 16) = xmmword_1D7668A10;
      uint64_t v306 = v666;
      *(void *)(v305 + 32) = sub_1D761E530;
      *(void *)(v305 + 40) = v306;
      os_log_t v307 = v678;
      *(void *)(v305 + 48) = sub_1D761EF14;
      *(void *)(v305 + 56) = v307;
      *(void *)(v305 + 64) = sub_1D761E544;
      *(void *)(v305 + 72) = v300;
      os_log_t v308 = v665;
      *(void *)(v305 + 80) = sub_1D761EF14;
      *(void *)(v305 + 88) = v308;
      *(void *)(v305 + 96) = sub_1D761EF14;
      *(void *)(v305 + 104) = v302;
      *(void *)(v305 + 112) = sub_1D761EF08;
      *(void *)(v305 + 120) = v304;
      swift_setDeallocating();
      OUTLINED_FUNCTION_166_0();
      swift_retain();
      swift_retain();
      os_log_t v667 = v303;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v673 = v302;
      swift_retain();
      swift_retain();
      sub_1D761A064();
      os_log_type_t v309 = v670;
      if (!os_log_type_enabled(v672, (os_log_type_t)v670))
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_97_0();
        os_log_t v319 = v669;
LABEL_140:
        uint64_t v361 = v668;
        goto LABEL_213;
      }
      uint64_t v310 = (uint8_t *)swift_slowAlloc();
      os_log_t v670 = (os_log_t)OUTLINED_FUNCTION_38_0();
      *(void *)&long long v691 = v670;
      OUTLINED_FUNCTION_80_0(514);
      v310[3] = 8;
      swift_release();
      uint64_t v311 = sub_1D760C1AC();
      *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v311, v312);
      os_log_t v678 = (os_log_t)&v688 + 1;
      sub_1D7661020();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v310[12] = 34;
      swift_release();
      v310[13] = 8;
      swift_release();
      OUTLINED_FUNCTION_28();
      v313();
      uint64_t v314 = sub_1D7660B60();
      uint64_t v316 = sub_1D758DBE8(v314, v315, (uint64_t *)&v691);
      OUTLINED_FUNCTION_129(v316);
      sub_1D7661020();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_97_0();
      OUTLINED_FUNCTION_6();
      v317();
      _os_log_impl(&dword_1D757C000, v672, v309, "%{public}s: ignoring event %{public}s as the endpoint is already in state failed", v310, 0x16u);
      OUTLINED_FUNCTION_122_0();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
LABEL_214:
      OUTLINED_FUNCTION_4_0();
      return;
    default:
      if (OUTLINED_FUNCTION_35_2() != 13) {
        goto LABEL_65;
      }
      uint64_t v668 = v95;
      LODWORD(v659) = sub_1D7660DD0();
      if (qword_1EA82AA50 != -1) {
        swift_once();
      }
      v658 = (long long *)qword_1EA82C240;
      uint64_t v99 = OUTLINED_FUNCTION_33();
      uint64_t v100 = (void *)OUTLINED_FUNCTION_106_0(v99);
      v664 = v100;
      *(void *)&long long v679 = OUTLINED_FUNCTION_4_13();
      OUTLINED_FUNCTION_27_5(v679);
      v672 = OUTLINED_FUNCTION_4_13();
      LOBYTE(v672[2].isa) = 8;
      uint64_t v101 = OUTLINED_FUNCTION_33();
      uint64_t v102 = (objc_class *)v680;
      *(void *)(v101 + 16) = sub_1D761E520;
      *(void *)(v101 + 24) = v102;
      uint64_t v103 = v101;
      *(void *)&long long v666 = v101;
      uint64_t v104 = OUTLINED_FUNCTION_33();
      v677 = (uint64_t *)v104;
      *(void *)(v104 + 16) = sub_1D761EF00;
      *(void *)(v104 + 24) = v103;
      v676 = (uint64_t *)OUTLINED_FUNCTION_4_13();
      *((unsigned char *)v676 + 16) = 32;
      uint64_t v671 = OUTLINED_FUNCTION_4_13();
      *(unsigned char *)(v671 + 16) = 8;
      uint64_t v105 = OUTLINED_FUNCTION_33();
      v105[2].unint64_t isa = (Class)sub_1D761EA80;
      v105[3].unint64_t isa = v102;
      uint64_t v106 = v105;
      os_log_t v665 = v105;
      uint64_t v107 = OUTLINED_FUNCTION_33();
      *(void *)(v107 + 16) = sub_1D761EF00;
      *(void *)(v107 + 24) = v106;
      uint64_t v108 = v107;
      uint64_t v109 = OUTLINED_FUNCTION_4_13();
      *(unsigned char *)(v109 + 16) = 0;
      uint64_t v110 = v109;
      uint64_t v662 = OUTLINED_FUNCTION_4_13();
      *(unsigned char *)(v662 + 16) = 2;
      uint64_t v111 = OUTLINED_FUNCTION_33();
      *(void *)(v111 + 16) = sub_1D761EA88;
      *(void *)(v111 + 24) = v102;
      uint64_t v112 = (objc_class *)v111;
      uint64_t v663 = v111;
      uint64_t v113 = OUTLINED_FUNCTION_33();
      os_log_t v670 = v113;
      v113[2].unint64_t isa = (Class)sub_1D761EAF0;
      v113[3].unint64_t isa = v112;
      uint64_t v657 = OUTLINED_FUNCTION_4_13();
      *(unsigned char *)(v657 + 16) = 0;
      os_log_t v669 = (os_log_t)OUTLINED_FUNCTION_4_13();
      LOBYTE(v669[2].isa) = 4;
      uint64_t v114 = OUTLINED_FUNCTION_33();
      *(void *)(v114 + 16) = sub_1D761EAA0;
      *(void *)(v114 + 24) = v100;
      uint64_t v115 = OUTLINED_FUNCTION_33();
      *(void *)(v115 + 16) = sub_1D761EB30;
      *(void *)(v115 + 24) = v114;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEADD0);
      uint64_t v116 = swift_allocObject();
      *(_OWORD *)(v116 + 16) = xmmword_1D7668A30;
      uint64_t v117 = v679;
      *(void *)(v116 + 32) = sub_1D761EF14;
      *(void *)(v116 + 40) = v117;
      os_log_t v118 = v672;
      *(void *)(v116 + 48) = sub_1D761EF14;
      *(void *)(v116 + 56) = v118;
      unint64_t v119 = v677;
      *(void *)(v116 + 64) = sub_1D761EF08;
      *(void *)(v116 + 72) = v119;
      id v120 = v676;
      *(void *)(v116 + 80) = sub_1D761EF14;
      *(void *)(v116 + 88) = v120;
      uint64_t v121 = v671;
      *(void *)(v116 + 96) = sub_1D761EF14;
      *(void *)(v116 + 104) = v121;
      *(void *)(v116 + 112) = sub_1D761EF08;
      *(void *)(v116 + 120) = v108;
      uint64_t v122 = (void (*)(void))v108;
      *(void *)(v116 + 128) = sub_1D761EF14;
      *(void *)(v116 + 136) = v110;
      uint64_t v123 = v110;
      uint64_t v124 = v662;
      *(void *)(v116 + 144) = sub_1D761EF14;
      *(void *)(v116 + 152) = v124;
      os_log_t v125 = v670;
      *(void *)(v116 + 160) = sub_1D761EB20;
      *(void *)(v116 + 168) = v125;
      uint64_t v126 = v657;
      *(void *)(v116 + 176) = sub_1D761EF14;
      *(void *)(v116 + 184) = v126;
      os_log_t v127 = v669;
      *(void *)(v116 + 192) = sub_1D761EF14;
      *(void *)(v116 + 200) = v127;
      *(void *)(v116 + 208) = sub_1D761EB60;
      *(void *)(v116 + 216) = v115;
      swift_retain_n();
      swift_setDeallocating();
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v653 = v122;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1D761A064();
      if (os_log_type_enabled((os_log_t)v658, (os_log_type_t)v659))
      {
        uint64_t v650 = v115;
        v651 = (long long *)v114;
        uint64_t v652 = v123;
        unint64_t v128 = (uint8_t *)OUTLINED_FUNCTION_11_4();
        uint64_t v649 = OUTLINED_FUNCTION_38_0();
        *(void *)&long long v691 = v649;
        *(_WORD *)unint64_t v128 = 1026;
        v128[2] = 34;
        swift_release();
        v128[3] = 8;
        swift_release();
        uint64_t v129 = sub_1D760C1AC();
        *(void *)&long long v688 = OUTLINED_FUNCTION_92_0(v129, v130);
        uint64_t v131 = v680;
        sub_1D7661020();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v128[12] = 32;
        swift_release();
        v128[13] = 8;
        swift_release();
        sub_1D760BCE0(v654);
        uint64_t v132 = OUTLINED_FUNCTION_165_0();
        uint64_t v133 = v675;
        OUTLINED_FUNCTION_57_1(v132, v134, v675);
        if (v202)
        {
          __break(1u);
        }
        else
        {
          uint64_t v135 = v673;
          uint64_t v136 = (*(uint64_t (**)(uint64_t, uint64_t))(v673 + 40))(v133, v673);
          unint64_t v138 = v137;
          OUTLINED_FUNCTION_6();
          v139();
          uint64_t v140 = sub_1D758DBE8(v136, v138, (uint64_t *)&v691);
          OUTLINED_FUNCTION_129(v140);
          sub_1D7661020();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v128[22] = 0;
          swift_release();
          v128[23] = 2;
          swift_release();
          uint64_t v141 = v655;
          sub_1D760C52C(v655);
          uint64_t v142 = OUTLINED_FUNCTION_165_0();
          os_log_t v143 = v667;
          OUTLINED_FUNCTION_57_1(v142, v144, (uint64_t)v667);
          if (!v202)
          {
            __int16 v145 = *(_WORD *)(v141 + SLODWORD(v143[3].isa));
            sub_1D761E4CC(v141, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
            OUTLINED_FUNCTION_46_2();
            LOWORD(v688) = v145;
            sub_1D7661020();
            swift_release();
            swift_release();
            v128[26] = 0;
            swift_release();
            v128[27] = 4;
            swift_release();
            uint64_t v146 = OUTLINED_FUNCTION_159_0();
            int v148 = v147(v146, v135);
            swift_release();
            LODWORD(v688) = v148;
            sub_1D7661020();
            swift_release();
            swift_release();
            _os_log_impl(&dword_1D757C000, (os_log_t)v658, (os_log_type_t)v659, "%{public}s: Starting packet transfer on %s, MTU=%hu, maxPendingPackets=%u", v128, 0x20u);
            OUTLINED_FUNCTION_122_0();
            OUTLINED_FUNCTION_1();
            OUTLINED_FUNCTION_1();
            goto LABEL_84;
          }
        }
        __break(1u);
        goto LABEL_231;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v131 = v680;
      swift_release_n();
      swift_release();
LABEL_84:
      uint64_t v288 = v660;
      uint64_t v287 = v661;
      *(unsigned char *)(v131 + *(void *)(*(void *)v131 + 184)) = v678 & 1 | 0x20;
      swift_storeEnumTagMultiPayload();
      uint64_t v289 = v674;
      sub_1D760F9B0(v288);
      if (v289)
      {
        OUTLINED_FUNCTION_116_0();
        v290();
      }
      else
      {
        uint64_t v320 = *(void (**)(void))(v696 + 8);
        OUTLINED_FUNCTION_116_0();
        v320();
        sub_1D760C304(v287);
        swift_storeEnumTagMultiPayload();
        sub_1D760F9B0(v287);
        OUTLINED_FUNCTION_116_0();
        v320();
      }
      goto LABEL_214;
  }
}

uint64_t sub_1D761611C(uint64_t a1)
{
  type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_4_3();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C418) + 48);
    sub_1D760C304(v1);
    sub_1D75EE174(a1, v5, qword_1EA82C420);
    swift_storeEnumTagMultiPayload();
    sub_1D760F4F4(v1);
    swift_release();
    uint64_t v6 = OUTLINED_FUNCTION_11_3();
    return v7(v6);
  }
  return result;
}

uint64_t sub_1D7616224(void *a1)
{
  uint64_t v2 = type metadata accessor for TunnelEndpoint.Event();
  OUTLINED_FUNCTION_0_5();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_38();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  OUTLINED_FUNCTION_4_3();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D760C304((uint64_t)v7);
    *((void *)v7 + 5) = a1;
    swift_storeEnumTagMultiPayload();
    id v9 = a1;
    sub_1D760F4F4(v7);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
  return result;
}

uint64_t sub_1D761631C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *(void *)(*a1 + 80);
  uint64_t v3 = sub_1D7661000();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1D760BCE0((uint64_t)&v8 - v4);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 88) + 40))(v2);
    (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v5, v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D7616450()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA82C2D0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D760C52C((uint64_t)v2);
  uint64_t v3 = type metadata accessor for TunnelInterfaceParameters();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(unsigned __int16 *)&v2[*(int *)(v3 + 24)];
    sub_1D761E4CC((uint64_t)v2, (void (*)(void))type metadata accessor for TunnelInterfaceParameters);
    return v5;
  }
  return result;
}

uint64_t sub_1D7616514(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for TunnelEndpoint.Event();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - v4);
  uint64_t v6 = *a1;
  uint64_t v7 = (uint64_t (*)(void))a1[1];
  uint64_t v8 = a1[2];
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return v7();
  }
  void *v5 = v6;
  v5[1] = v7;
  long long v5[2] = v8;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D760F4F4(v5);
  swift_release();
  return (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D7616664(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for TunnelEndpoint.Event();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v16 - v12;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D758B1EC(a4, (uint64_t)v13);
    if (a2)
    {
      v16[0] = a1;
      id v14 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDEC030);
      swift_willThrowTypedImpl();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_1D758B1EC(a4, (uint64_t)v11);
        *((void *)v11 + 5) = a1;
        swift_storeEnumTagMultiPayload();
        id v15 = a1;
        sub_1D760F4F4(v11);
        swift_release();
        sub_1D75ABD24(a1, 1);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      }
      else
      {
        sub_1D75ABD24(a1, 1);
      }
    }
    else
    {
      *((void *)v13 + 5) = a1;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1D760F4F4(v13);
      swift_release();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
}

uint64_t sub_1D761689C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TunnelEndpoint.Event();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D758B1EC(a3, (uint64_t)v8);
    *((void *)v8 + 5) = a1;
    swift_storeEnumTagMultiPayload();
    id v10 = a1;
    sub_1D760F4F4(v8);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}