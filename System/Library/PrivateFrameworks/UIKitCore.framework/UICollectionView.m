@interface UICollectionView
+ (BOOL)_supportsInvalidatingFocusCache;
+ (id)_reuseKeyForSupplementaryViewOfKind:(id)a3 withReuseIdentifier:(id)a4;
- (BOOL)__hasTransitionLayoutAttributes;
- (BOOL)__isKindOfUICollectionView;
- (BOOL)_addUpdateToShadowControllerIfNeeded:(id)a3;
- (BOOL)_allowsBandSelectionForMultipleSelection;
- (BOOL)_allowsEffectiveFocus;
- (BOOL)_allowsEffectiveMultipleSelection;
- (BOOL)_allowsEffectiveSelection;
- (BOOL)_allowsEffectiveSelectionOrCustomActionAtIndexPath:(id)a3;
- (BOOL)_allowsMultipleSelectionDuringEditing;
- (BOOL)_allowsSelectionDuringEditing;
- (BOOL)_allowsVisibleCellUpdatesDuringUpdateAnimations;
- (BOOL)_allowsVisibleViewUpdatesDuringLayoutTransitions;
- (BOOL)_beginReorderingItemAtIndexPath:(id)a3 isLegacyMovement:(BOOL)a4;
- (BOOL)_canBeginReorderingItem;
- (BOOL)_canDeriveVisibleBoundsFromContainingScrollView;
- (BOOL)_canEditItemAtIndexPath:(id)a3;
- (BOOL)_canPerformAction:(SEL)a3 forCell:(id)a4 sender:(id)a5;
- (BOOL)_canPerformPrimaryActionForItemAtIndexPath:(id)a3;
- (BOOL)_canReorderItemAtIndexPath:(id)a3;
- (BOOL)_canReusePreviouslyFocusedManagedSubview:(id)a3;
- (BOOL)_cellAtIndexPath:(id)a3 containsInteractiveControlAtPoint:(CGPoint)a4;
- (BOOL)_cellCanBecomeFocused:(id)a3;
- (BOOL)_checkForPreferredAttributesInView:(id)a3 originalAttributes:(id)a4;
- (BOOL)_containsFocusedItem;
- (BOOL)_dataSourceImplementsNumberOfSections;
- (BOOL)_dataSourceImplementsReorderingHandlers;
- (BOOL)_dataSourceMatchesCurrentCounts;
- (BOOL)_dataSourceSupportsReordering;
- (BOOL)_defaultAllowsFocus;
- (BOOL)_defaultAllowsFocusDuringEditing;
- (BOOL)_delaysUserInitiatedItemSelection;
- (BOOL)_delegateAllowsHighlightingItemAtIndexPath:(id)a3;
- (BOOL)_delegateAllowsSelectingItemAtIndexPath:(id)a3;
- (BOOL)_delegateSupportsMenuInteraction;
- (BOOL)_delegateSupportsPrimaryAction;
- (BOOL)_displaysHorizontalIndexTitleBar;
- (BOOL)_dragAndDropNeededForReordering;
- (BOOL)_effectiveDefaultAllowsFocus;
- (BOOL)_focusTriggersSelectionDelegate;
- (BOOL)_forcePreserveSemanticContentOffsetDuringUpdates;
- (BOOL)_hasContentForBarInteractions;
- (BOOL)_hasCustomBackground;
- (BOOL)_hasFocusedCellForIndexPath:(id)a3 shouldUsePreUpdateData:(BOOL)a4;
- (BOOL)_hasPrefetchItems;
- (BOOL)_hasRegisteredClassOrNibForSupplementaryViewOfKind:(id)a3;
- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5;
- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6;
- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6 playFeedback:(BOOL)a7;
- (BOOL)_indexPathIsSectionAppendingIndexPath:(id)a3;
- (BOOL)_indexPathIsValid:(id)a3;
- (BOOL)_indexPathIsValid:(id)a3 allowSectionItemSentinel:(BOOL)a4;
- (BOOL)_inferFocusabilityForCell:(id)a3 atIndexPath:(id)a4;
- (BOOL)_isCellInvolvedInDragOrDropAnimationAtIndexPath:(id)a3;
- (BOOL)_isConnectedToDiffableDataSource;
- (BOOL)_isEditing;
- (BOOL)_isFirstResponderInDeletedSectionOrItem;
- (BOOL)_isFocusedViewInDeletedSectionOrItem;
- (BOOL)_isIndexPathSelectedItem:(id)a3;
- (BOOL)_isMovingFocusFromHorizontalIndexBarToCellContent:(id)a3;
- (BOOL)_isOperatingWithPresentationValues;
- (BOOL)_isPerformingReloadData;
- (BOOL)_isPerformingShadowUpdates;
- (BOOL)_isReordering;
- (BOOL)_isReorderingItemAtIndexPath:(id)a3;
- (BOOL)_isReorderingItemAtIndexPath:(id)a3 includingDragAndDrop:(BOOL)a4;
- (BOOL)_isRequestingCellOrSupplementary;
- (BOOL)_isSectionValidInIndexPath:(id)a3;
- (BOOL)_keepsFirstResponderVisibleOnBoundsChange;
- (BOOL)_needsReload;
- (BOOL)_prefetchingAllowed;
- (BOOL)_prefetchingEnabledDefault;
- (BOOL)_recomputePreferredAttributesForInvalidatedView:(id)a3 originalAttributes:(id)a4;
- (BOOL)_reuseCell:(id)a3;
- (BOOL)_reuseCell:(id)a3 notifyDidEndDisplaying:(BOOL)a4;
- (BOOL)_reuseSupplementaryView:(id)a3;
- (BOOL)_reviseNewContentOffsetForUpdate:(id)a3;
- (BOOL)_searchFullPageOnFocusUpdate;
- (BOOL)_selectionInteractionShouldBegin:(id)a3;
- (BOOL)_shouldBecomeFocusedOnSelection;
- (BOOL)_shouldDeriveVisibleBoundsFromContainingScrollView;
- (BOOL)_shouldDeselectItemsOnTouchesBegan;
- (BOOL)_shouldFadeCellsForBoundChangeWhileRotating;
- (BOOL)_shouldPersistSelectionOnReloadDataWhenPossible;
- (BOOL)_shouldPrefetchCellsWhenPerformingReloadData;
- (BOOL)_shouldResetInitialLayoutOnDataSourceChange;
- (BOOL)_shouldScrollToContentBeginningInRightToLeft;
- (BOOL)_shouldSelectionFollowFocusForIndexPath:(id)a3 initiatedBySelection:(BOOL)a4;
- (BOOL)_shouldSelectionFollowFocusForIndexPath:(id)a3 initiatedBySelection:(BOOL)a4 focusItemStateCandidate:(id)a5;
- (BOOL)_shouldShowMenuForCell:(id)a3;
- (BOOL)_shouldSkipForcedLayoutBeforeBatchUpdates;
- (BOOL)_shouldSpringLoadItemAtIndexPath:(id)a3 withContext:(id)a4;
- (BOOL)_shouldUpdateFocusInContext:(id)a3;
- (BOOL)_supportsAutomaticCatalystDragAndDropReordering;
- (BOOL)_updatePreferredAttributesForItemsInCurrentUpdate:(id)a3 rect:(CGRect)a4;
- (BOOL)_updatePreferredAttributesForItemsInCurrentUpdateWithRect:(CGRect)a3 newlyVisible:(id)a4 includeInserts:(BOOL)a5;
- (BOOL)_updatePreferredAttributesForReusableViewInCurrentUpdate:(id)a3 withOriginalAttributes:(id)a4 isExistingView:(BOOL)a5;
- (BOOL)_updatePreferredAttributesForSupplementariesInCurrentUpdate:(id)a3;
- (BOOL)_updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect:(CGRect)a3 newlyVisible:(id)a4 includeInserts:(BOOL)a5;
- (BOOL)_updatePrefetchItemIfNeeded:(id)a3 forIndexPath:(id)a4 withLayoutAttributes:(id)a5 willDisplay:(BOOL)a6;
- (BOOL)_updatePrefetchedCells:(BOOL)a3;
- (BOOL)_updateWithItems:(id)a3 tentativelyForReordering:(BOOL)a4 propertyAnimator:(id)a5 collectionViewAnimator:(id)a6;
- (BOOL)_useIdleObserverForCellPrefetching;
- (BOOL)_validateScrollingTargetIndexPath:(id)a3 raisingExceptionIfNecessary:(BOOL)a4;
- (BOOL)_validateSelectionOrHighlightIndexPath:(id)a3 isSelection:(BOOL)a4 allowMassIndexPath:(BOOL)a5 assertIfInvalid:(BOOL)a6;
- (BOOL)_viewIsReorderedCell:(id)a3;
- (BOOL)_wantsIndexOverlays;
- (BOOL)allowsFocus;
- (BOOL)allowsFocusDuringEditing;
- (BOOL)allowsMultipleSelection;
- (BOOL)allowsSelection;
- (BOOL)allowsUserInitiatedMultipleSelection;
- (BOOL)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath *)indexPath;
- (BOOL)canBeEdited;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canBecomeFocused;
- (BOOL)dragInteractionEnabled;
- (BOOL)hasActiveDrag;
- (BOOL)hasActiveDrop;
- (BOOL)hasUncommittedUpdates;
- (BOOL)indexBarView:(id)a3 didSelectEntry:(id)a4 atIndex:(int64_t)a5;
- (BOOL)isDragSessionActive;
- (BOOL)isMovingFocusFromHorizontalIndexTitleBarToContent;
- (BOOL)isPrefetchingEnabled;
- (BOOL)remembersLastFocusedIndexPath;
- (BOOL)selectionFollowsFocus;
- (CGPoint)_adjustFocusContentOffset:(CGPoint)a3 toShowFocusItemWithInfo:(id)a4;
- (CGPoint)_contentOffsetForLowFidelityScrollInDirection:(CGPoint)a3 duration:(double *)a4;
- (CGPoint)_contentOffsetForNewFrame:(CGRect)a3 oldFrame:(CGRect)a4 newContentSize:(CGSize)a5 andOldContentSize:(CGSize)a6;
- (CGPoint)_contentOffsetForScrollingToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5;
- (CGPoint)_contentOffsetForScrollingToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 itemFrame:(CGRect)a6 containingScrollView:(id)a7 clampToScrollableArea:(BOOL)a8;
- (CGPoint)_delegateTargetOffsetForProposedContentOffset:(CGPoint)a3;
- (CGPoint)_horizontalIndexTitleBarOffset;
- (CGPoint)_reorderingTargetPosition;
- (CGPoint)indexBarAccessoryView:(id)a3 contentOffsetForEntry:(id)a4 atIndex:(int64_t)a5;
- (CGRect)_computeFutureVisibleBoundsForPrefetchVelocity:(CGVector)a3 visibleBounds:(CGRect)a4;
- (CGRect)_computePrefetchCacheValidationBoundsForPrefetchVelocity:(CGVector)a3 visibleBounds:(CGRect)a4;
- (CGRect)_effectiveVisibleBoundsForBounds:(CGRect)a3;
- (CGRect)_visibleBounds;
- (CGSize)intrinsicContentSize;
- (CGVector)_unitVectorForVector:(CGVector)a3;
- (NSArray)_reorderedItems;
- (NSArray)indexPathsForSelectedItems;
- (NSArray)indexPathsForVisibleItems;
- (NSArray)visibleCells;
- (NSIndexPath)indexPathForCell:(UICollectionViewCell *)cell;
- (NSIndexPath)indexPathForItemAtPoint:(CGPoint)point;
- (NSIndexPath)indexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar;
- (NSInteger)numberOfItemsInSection:(NSInteger)section;
- (NSInteger)numberOfSections;
- (NSString)description;
- (UICollectionReusableView)dequeueConfiguredReusableSupplementaryViewWithRegistration:(UICollectionViewSupplementaryRegistration *)registration forIndexPath:(NSIndexPath *)indexPath;
- (UICollectionReusableView)dequeueReusableSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;
- (UICollectionView)initWithCoder:(NSCoder *)coder;
- (UICollectionView)initWithFrame:(CGRect)a3;
- (UICollectionView)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout;
- (UICollectionViewCell)_currentPromiseFulfillmentCell;
- (UICollectionViewCell)cellForItemAtIndexPath:(NSIndexPath *)indexPath;
- (UICollectionViewCell)dequeueConfiguredReusableCellWithRegistration:(UICollectionViewCellRegistration *)registration forIndexPath:(NSIndexPath *)indexPath item:(id)item;
- (UICollectionViewCell)dequeueReusableCellWithReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;
- (UICollectionViewData)_collectionViewData;
- (UICollectionViewLayout)collectionViewLayout;
- (UICollectionViewLayoutAttributes)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
- (UICollectionViewLayoutAttributes)layoutAttributesForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;
- (UICollectionViewReorderingCadence)reorderingCadence;
- (UICollectionViewSelfSizingInvalidation)selfSizingInvalidation;
- (UICollectionViewTransitionLayout)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout *)layout completion:(UICollectionViewLayoutInteractiveTransitionCompletion)completion;
- (UICollectionViewUpdate)_currentUpdate;
- (UICollectionViewUpdateItem)_expectedDiffableUpdateItem;
- (UIContextMenuInteraction)contextMenuInteraction;
- (UIEdgeInsets)_defaultLayoutMargins;
- (UIEdgeInsets)_visibleRectEdgeInsets;
- (UIFocusContainerGuide)_endOfContentFocusContainerGuide;
- (UITouch)_currentTouch;
- (UIView)backgroundView;
- _isContentOffset:(CGFloat)a3 atStartOfAxis:(CGFloat)a4;
- (_UICollectionTableIndexOverlayManager)_indexOverlayManager;
- (_UICollectionViewFocusedItemState)_focusedItemState;
- (_UICollectionViewFocusedItemState)_rememberedFocusedItemState;
- (_UICollectionViewSelectionController)_selectionController;
- (_UICollectionViewVisibleCellsUpdateResult)_createVisibleViewsForSingleCategoryAttributes:(SEL)a3 limitCreation:(id)a4 fadeForBoundsChange:(BOOL)a5;
- (_UIDragDestinationIndicatorView)_reorderDestinationView;
- (_UIFocusFastScrollingIndexBarEntry)selectedIndexTitleEntry;
- (_UIHorizontalIndexTitleBar)_horizontalIndexTitleBar;
- (double)_alignedContentMarginGivenMargin:(double)a3;
- (double)_clampedContentOffset:(double)a3 forScrollableAreaGivenContentSize:(double)a4 inScrollView:(double)a5;
- (double)_contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets:(double)a3 shouldApply:(double)a4;
- (double)_frameOfElementAtScrollingTargetIndexPath:(uint64_t)a1;
- (double)_layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:(uint64_t)a1;
- (double)_trackedLayoutValueForKey:(id)a3;
- (id)_arrayForUpdateAction:(int)a3;
- (id)_attributesForItemsVisibleDuringCurrentUpdateWithOldVisibleViews:(id)a3 attributesForNewModel:(id)a4;
- (id)_autoScrollAssistantForIndexPath:(id)a3;
- (id)_cellForItemAtIndexPath:(id)a3;
- (id)_childFocusRegionsInRect:(CGRect)a3 inCoordinateSpace:(id)a4;
- (id)_computeMainPrefetchCandidatesForVisibleBounds:(CGRect)a3 futureVisibleBounds:(CGRect)a4 prefetchVector:(CGVector)a5;
- (id)_contentFocusContainerGuide;
- (id)_contextMenuInteraction:(id)a3 accessoriesForMenuWithConfiguration:(id)a4;
- (id)_contextMenuInteraction:(id)a3 styleForMenuWithConfiguration:(id)a4;
- (id)_createPreparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5;
- (id)_createPreparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5 isFocused:(BOOL)a6 notify:(BOOL)a7;
- (id)_createPreparedSupplementaryViewForElementOfKind:(id)a3 atIndexPath:(id)a4 layout:(id)a5 withLayoutAttributes:(id)a6 applyAttributes:(BOOL)a7;
- (id)_createStaticScrollBar;
- (id)_customScrollAnimation;
- (id)_dataSourceActual;
- (id)_dataSourceProxy;
- (id)_dataSourceSectionIndexTitles;
- (id)_defaultTargetedPreviewForIdentifier:(id)a3;
- (id)_delegateActual;
- (id)_delegatePreferredIndexPath;
- (id)_delegateProxy;
- (id)_dequeueReusableCellWithRegistration:(id)a3 forIndexPath:(id)a4;
- (id)_dequeueReusableViewOfKind:(id)a3 withIdentifier:(id)a4 forIndexPath:(id)a5 viewCategory:(unint64_t)a6;
- (id)_diffableDataSourceImpl;
- (id)_diffableIdentifierForIndexPath:(id)a3;
- (id)_dragDelegateActual;
- (id)_dragDelegateProxy;
- (id)_dragDestinationDelegateActual;
- (id)_dragDestinationDelegateProxy;
- (id)_dragSourceDelegateActual;
- (id)_dragSourceDelegateProxy;
- (id)_dropDelegateActual;
- (id)_dropDelegateProxy;
- (id)_dynamicAnimationsForTrackValues;
- (id)_existingIndexPathForIdentityTrackerIdentifier:(id)a3;
- (id)_existingVisibleCells;
- (id)_extantFocusItemsInRect:(CGRect)a3;
- (id)_focusFastScrollingIndexBarEntries;
- (id)_focusPromiseRegionsInRect:(CGRect)a3 inCoordinateSpace:(id)a4 inSection:(int64_t)a5;
- (id)_focusScrollBoundaryMetricsForItem:(id)a3;
- (id)_fulfillPromisedFocusRegionForCell:(id)a3;
- (id)_identityTracker:(BOOL)a3;
- (id)_indexBarEntries;
- (id)_indexPathAfterShadowUpdatesForIndexPath:(id)a3;
- (id)_indexPathBeforeShadowUpdatesForIndexPath:(id)a3;
- (id)_indexPathForCell:(id)a3;
- (id)_indexPathForEntryWithTitle:(id)a3 atIndex:(int64_t)a4 validateTitles:(BOOL)a5;
- (id)_indexPathForGlobalIndex:(int64_t)a3;
- (id)_indexPathForInsertionAtPoint:(CGPoint)a3 dropIntent:(int64_t)a4 sourceIndexPath:(id)a5 indicatorLayoutAttributes:(id *)a6;
- (id)_indexPathForItemAtPoint:(CGPoint)a3;
- (id)_indexPathForSupplementaryView:(id)a3;
- (id)_indexPathForView:(id)a3 ofType:(unint64_t)a4;
- (id)_indexPathOfItemNearestToPoint:(CGPoint)a3 intersectingRect:(CGRect)a4;
- (id)_indexPathsAfterShadowUpdatesForIndexPaths:(id)a3;
- (id)_indexPathsAfterShadowUpdatesForIndexPaths:(id)a3 allowingAppendingInserts:(BOOL)a4;
- (id)_indexPathsBeforeShadowUpdatesForIndexPaths:(id)a3;
- (id)_indexPathsForPreparedItems;
- (id)_indexPathsForSelectedItems;
- (id)_indexPathsForVisibleDecorationViewsOfKind:(id)a3;
- (id)_indexPathsForVisibleItems;
- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)a3;
- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)a3 isDecorationView:(BOOL)a4;
- (id)_keysForObject:(id)a3 inDictionary:(id)a4;
- (id)_layoutAttributes:(id)a3 filteredForCategory:(unint64_t)a4;
- (id)_layoutAttributesClosestToReferencePoint:(uint64_t)a3 amongCandidates:(void *)a4 onAxis:(double)a5 shouldConsiderBlock:(double)a6;
- (id)_layoutAttributesForFailedMovementWithHeading:(unint64_t)a3;
- (id)_managedSubviewForView:(id)a3;
- (id)_multiSelectController;
- (id)_navigationCompletion;
- (id)_objectInDictionary:(id)a3 forKind:(id)a4 indexPath:(id)a5;
- (id)_orthogonalScrollerController;
- (id)_performShadowUpdates:(id)a3;
- (id)_pivotForTransitionFromLayout:(id)a3 toLayout:(id)a4;
- (id)_prefetchDataSourceActual;
- (id)_prefetchDataSourceProxy;
- (id)_prefetchingContextForOrthogonalScrollingSection:(int64_t)a3;
- (id)_prefetchingContextForVisibleBounds:(CGRect)a3 prefetchVector:(CGVector)a4 prefetchRect:(CGRect)a5 attributes:(id)a6;
- (id)_preparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5 isFocused:(BOOL)a6 notify:(BOOL)a7;
- (id)_primaryFocusItemForFocusGroup:(id)a3;
- (id)_reorderFeedbackGenerator;
- (id)_reorderedItemForView:(id)a3;
- (id)_reusableViewWithoutAttributesForElementCategory:(unint64_t)a3 kind:(id)a4 indexPath:(id)a5;
- (id)_sceneActivationConfigurationForLocation:(CGPoint)a3;
- (id)_sectionContainerViewForSectionIndex:(int64_t)a3 createIfNecessary:(BOOL)a4;
- (id)_sectionIndexesAfterShadowUpdatesForSectionIndexes:(id)a3;
- (id)_sectionIndexesAfterShadowUpdatesForSectionIndexes:(id)a3 allowingAppendingInserts:(BOOL)a4;
- (id)_sectionsWithSectionOperationsInUpdateItems:(void *)a1;
- (id)_selectableIndexPathForItemContainingHitView:(id)a3;
- (id)_setupAnimationsForResizedViewsWithOldModel:(id)a3;
- (id)_sortedDeduplicatedReloadItems;
- (id)_storeScrollingTargetInfoForIndexPath:(void *)a3 frame:(double)a4 scrollPosition:(double)a5 additionalInsets:(double)a6;
- (id)_subviewManager;
- (id)_subviewRouterForOrthogonalScrollViewAtSection:(int64_t)a3;
- (id)_subviewRouterForView:(id)a3 attributes:(id)a4 createIfNecessary:(BOOL)a5;
- (id)_systemDefaultFocusGroupIdentifier;
- (id)_targetIndexPathForMoveOfItemFromOriginalIndexPath:(id)a3 atCurrentIndexPath:(id)a4 toProposedIndexPath:(id)a5;
- (id)_targetedPreviewForBackgroundMenuAtPoint:(CGPoint)a3;
- (id)_translateDataSourceIndexPathToPresentationIndexPathAsNeeded:(id)a3;
- (id)_translateDataSourceIndexPathsToPresentationIndexPathsAsNeeded:(id)a3;
- (id)_translatePresentationIndexPathToDataSourceIndexPathAsNeeded:(id)a3;
- (id)_translatePresentationIndexPathsToDataSourceIndexPathsAsNeeded:(id)a3;
- (id)_updateIndexOverlayToShowTitleAtIndex:(int64_t)a3;
- (id)_updateTranslator;
- (id)_updatedNewlyAppearingLayoutAttributesForCurrentVisibleBounds:(BOOL)a3;
- (id)_viewAnimationsForCurrentUpdate;
- (id)_viewAnimationsForCurrentUpdateWithCollectionViewAnimator:(id)a3 updatingContentOffsetForRestorationAnchor:(BOOL)a4;
- (id)_viewAnimationsForView:(id)a3 startingLayoutAttributes:(id)a4 endingLayoutAttributes:(id)a5 startingLayout:(id)a6 endingLayout:(id)a7 animationSetup:(id)a8 animationCompletion:(id)a9 enableCustomAnimations:(BOOL)a10 customAnimationsType:(unint64_t)a11;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (id)_visibleCellForIndexPath:(id)a3;
- (id)_visibleDecorationViewOfKind:(id)a3 atIndexPath:(id)a4;
- (id)_visibleDecorationViewsOfKind:(id)a3;
- (id)_visibleSupplementaryViewOfKind:(id)a3 atIndexPath:(id)a4;
- (id)_visibleSupplementaryViewOfKind:(id)a3 atIndexPath:(id)a4 isDecorationView:(BOOL)a5;
- (id)_visibleSupplementaryViewsOfKind:(id)a3;
- (id)_visibleSupplementaryViewsOfKind:(id)a3 isDecorationView:(BOOL)a4;
- (id)_visibleViewForLayoutAttributes:(id)a3;
- (id)contextMenuInteraction:(id)a3 configuration:(id)a4 dismissalPreviewForItemWithIdentifier:(id)a5;
- (id)contextMenuInteraction:(id)a3 configuration:(id)a4 highlightPreviewForItemWithIdentifier:(id)a5;
- (id)contextMenuInteraction:(id)a3 configurationForMenuAtLocation:(CGPoint)a4;
- (id)dataSource;
- (id)dataSourceIndexPathForPresentationIndexPath:(id)a3;
- (id)dragDelegate;
- (id)dragDestinationDelegate;
- (id)dragSourceDelegate;
- (id)dropDelegate;
- (id)focusItemsInRect:(CGRect)a3;
- (id)indexPathForSupplementaryView:(id)a3;
- (id)keyCommands;
- (id)preferredFocusedView;
- (id)prefetchDataSource;
- (id)preparedCells;
- (id)presentationIndexPathForDataSourceIndexPath:(id)a3;
- (id)subviewRouter;
- (id)targetForAction:(SEL)a3 withSender:(id)a4;
- (id)valueForUndefinedKey:(id)a3;
- (int64_t)_cellFocusItemDeferral:(id)a3;
- (int64_t)_cellPrefetchMode;
- (int64_t)_currentSectionIndexTitleIndex;
- (int64_t)_dataSourceNumberOfItemsInSection:(int64_t)a3;
- (int64_t)_dataSourceNumberOfSections;
- (int64_t)_globalIndexPathForItemAtIndexPath:(id)a3;
- (int64_t)_preferredDragDestinationVisualStyle;
- (int64_t)_sectionIndexChangedToIndex:(int64_t)a3 title:(id)a4;
- (int64_t)_totalItemCount;
- (int64_t)dataSourceSectionIndexForPresentationSectionIndex:(int64_t)a3;
- (int64_t)highlightedGlobalItem;
- (int64_t)maximumGlobalItemIndex;
- (int64_t)presentationSectionIndexForDataSourceSectionIndex:(int64_t)a3;
- (uint64_t)_applyLayoutAttributes:(void *)a3 toView:(int)a4 addingControlledSubview:(uint64_t)a5 forced:;
- (uint64_t)_restoreOrAdjustContentOffsetIfNecessaryWithInsets:(char)a3 hasUpdatedVisibleCells:(double)a4 isRecursive:(double)a5;
- (unint64_t)_createVisibleViewsForAttributes:(id)a3 fadeForBoundsChange:(BOOL)a4 notifyLayoutForVisibleCellsPass:(BOOL)a5;
- (unint64_t)_edgesPropagatingSafeAreaInsetsToSubviews;
- (unint64_t)_focusPrimaryScrollableAxis;
- (unint64_t)_prefetchItemsForPrefetchingContext:(id)a3;
- (unint64_t)_updateVisibleCellsNow:(BOOL)a3;
- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Batch_Updates:(id)a3;
- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Items_In_Section:(id)a3;
- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Sections:(id)a3;
- (void)_accessibilitySetInterfaceStyleIntent:(unint64_t)a3;
- (void)_addControlledSubview:(id)a3;
- (void)_addControlledSubview:(id)a3 atZIndex:(int64_t)a4 forced:(BOOL)a5;
- (void)_addControlledSubview:(id)a3 atZIndex:(int64_t)a4 forced:(BOOL)a5 initialAttributes:(id)a6;
- (void)_addEntriesFromDictionary:(id)a3 inDictionary:(id)a4;
- (void)_addEntriesFromDictionary:(id)a3 inDictionary:(id)a4 andSet:(id)a5;
- (void)_addIndexPathsRequiringPreferredAttributes:(uint64_t)a1;
- (void)_addReloadDataCompletionBlock:(id)a3;
- (void)_addSubview:(id)a3 positioned:(int64_t)a4 relativeTo:(id)a5;
- (void)_adjustForAutomaticKeyboardInfo:(id)a3 animated:(BOOL)a4 lastAdjustment:(double *)a5;
- (void)_animateVisibleView:(id)a3 withLayoutAttributes:(id)a4 completionHandler:(id)a5;
- (void)_applyAutomaticAdjustedContentOffset:(CGPoint)a3;
- (void)_applyBlockToAllReusableViews:(id)a3;
- (void)_applyLayoutAttributes:(id)a3 toView:(id)a4;
- (void)_autoScrollAssistantUpdateContentOffset:(CGPoint)a3;
- (void)_beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate;
- (void)_beginUpdates;
- (void)_cacheOrReuseCell:(id)a3 forIndexPath:(id)a4 invalidatePreferredAttributes:(BOOL)a5 notifyDidEndDisplaying:(BOOL)a6;
- (void)_cancelInteractiveTransitionWithFinalAnimation:(BOOL)a3;
- (void)_cancelTouches;
- (void)_cellBackgroundChangedForSelectionOrHighlight:(id)a3;
- (void)_cellBecameFocused:(id)a3;
- (void)_cellDidBecomeFocused:(id)a3;
- (void)_cellDidBecomeUnfocused:(id)a3;
- (void)_cellPreferredSeparatorInsetsChanged:(id)a3;
- (void)_cleanUpAfterInteractiveTransitionDidFinish:(BOOL)a3;
- (void)_clearContentOffsetRestorationAnchor;
- (void)_clearNeedsRecomputePreferredAttributesForInvalidatedElements;
- (void)_clearSpecificInvalidationLists;
- (void)_clearTargetIndexPathForScrolling;
- (void)_completeInteractiveMovementWithDisposition:(int64_t)a3;
- (void)_computeMainPrefetchCandidatesForVelocity:(CGVector)a3;
- (void)_computeVisibleContentOffsetForUpdate:(id)a3 usingData:(id)a4;
- (void)_configureCachedCellForDisplay:(id)a3 withIndexPath:(id)a4 layoutAttributesToUpdate:(id)a5;
- (void)_configureCellForDisplay:(id)a3 indexPath:(id)a4 cached:(BOOL)a5;
- (void)_configureContextMenuInteractionIfNeeded;
- (void)_configureSceneActivationInteractionIfNeeded;
- (void)_configureSupplementaryViewForDisplay:(id)a3 withElementKind:(id)a4 indexPath:(id)a5 elementCategory:(unint64_t)a6;
- (void)_contentOffsetFromProposedOffset:(double)a3 forScrollingToItemWithFrame:(CGFloat)a4 atScrollPosition:(CGFloat)a5 additionalInsets:(CGFloat)a6 containingScrollViewBounds:(CGFloat)a7;
- (void)_createAndAppendViewAnimationsForDeletesInCurrentUpdate:(id)a3 disappearingAnimations:(id)a4;
- (void)_createAndAppendViewAnimationsForExistingAndDeletedAuxiliariesInCurrentUpdate:(id)a3 disappearingAnimations:(id)a4 animationsForOnScreenViews:(id)a5 newSubviewCollection:(id)a6 oldVisibleViews:(id)a7;
- (void)_createAndAppendViewAnimationsForExistingAndNewlyVisibleItemsInCurrentUpdate:(id)a3 animationsForOnScreenViews:(id)a4 newSubviewCollection:(id)a5 oldVisibleViews:(id)a6 attributesForNewModel:(id)a7;
- (void)_createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 newSubviewCollection:(id)a5;
- (void)_createAndAppendViewAnimationsForInsertsInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 newSubviewCollection:(id)a5;
- (void)_createAndAppendViewAnimationsForNewlyVisibleAuxiliariesInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 animationsForOnScreenViews:(id)a5 newSubviewCollection:(id)a6 attributesForNewModel:(id)a7;
- (void)_decrementRotationAnimationCount;
- (void)_decrementUpdateAnimationCountWithContext:(id)a3;
- (void)_deselectAllAnimated:(BOOL)a3 notifyDelegate:(BOOL)a4;
- (void)_deselectItemAtIndexPath:(id)a3 animated:(BOOL)a4 notifyDelegate:(BOOL)a5;
- (void)_deselectItemsAtIndexPaths:(id)a3 animated:(BOOL)a4 transitionCoordinator:(id)a5;
- (void)_didMoveFromSuperview:(id)a3;
- (void)_didMoveFromWindow:(id)a3 toWindow:(id)a4;
- (void)_didUpdateFocusInContext:(id)a3;
- (void)_endItemAnimationsWithInvalidationContext:(id)a3;
- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4;
- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5;
- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5 collectionViewAnimator:(id)a6;
- (void)_endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate;
- (void)_endUpdatesWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5;
- (void)_endUpdatesWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5 collectionViewAnimator:(id)a6;
- (void)_enqueueViewForReuse:(id)a3;
- (void)_ensureFocusedViewIsNotHidden;
- (void)_ensureViewsAreLoadedInRect:(CGRect)a3;
- (void)_enumerateVisibleViews:(id)a3;
- (void)_finishInteractiveTransitionShouldFinish:(BOOL)a3 finalAnimation:(BOOL)a4;
- (void)_finishInteractiveTransitionWithFinalAnimation:(BOOL)a3;
- (void)_focusMovementDidFailNotification:(id)a3;
- (void)_geometryChanged:(id *)a3 forAncestor:(id)a4;
- (void)_getOriginalReorderingIndexPaths:(id *)a3 targetIndexPaths:(id *)a4;
- (void)_handlePresses:(id)a3 keyHandler:(id)a4 defaultHandler:(id)a5;
- (void)_hideIndexOverlay;
- (void)_highlightFirstVisibleItemIfAppropriate;
- (void)_highlightSpringLoadedItemAtIndexPath:(id)a3;
- (void)_immediatelyBeginDruidBasedReorderIfPossibleWithTouch:(id)a3;
- (void)_incrementRotationAnimationCount;
- (void)_incrementUpdateAnimationCountWithContext:(id)a3;
- (void)_invalidateLayoutForPreferredContentSizeCategoryTraitDidChange;
- (void)_invalidateLayoutForReload;
- (void)_invalidateLayoutForUpdatedLayoutMarginsIfNeeded;
- (void)_invalidateLayoutForVisibleBounds:(CGRect)a3 oldVisibleBounds:(CGRect)a4;
- (void)_invalidateLayoutWithContext:(id)a3;
- (void)_invalidateWithBlock:(id)a3;
- (void)_layoutAdjustmentsDidChange;
- (void)_layoutDirectionTraitDidChange;
- (void)_layoutMarginsDidChangeFromOldMargins:(UIEdgeInsets)a3;
- (void)_layoutMarginsWillChange;
- (void)_layoutSectionContainerViews;
- (void)_managedSubviewAdded:(id)a3;
- (void)_moveItemAtIndexPath:(id)a3 toIndexPath:(id)a4;
- (void)_moveSection:(int64_t)a3 toSection:(int64_t)a4;
- (void)_moveSectionIndexTitleIndexToIndex:(int64_t)a3 highlight:(BOOL)a4;
- (void)_moveWithEvent:(id)a3;
- (void)_multiSelectInteractionSelectItemAtIndexPath:(id)a3;
- (void)_notifyDataSourceForMoveOfItemFromIndexPath:(id)a3 toIndexPath:(id)a4;
- (void)_notifyDidEndDisplayingCellIfNeeded:(id)a3 forIndexPath:(id)a4;
- (void)_notifyDidEndDisplayingSupplementaryView:(id)a3;
- (void)_notifyDidScroll;
- (void)_notifyWillDisplayCellIfNeeded:(id)a3 forIndexPath:(id)a4;
- (void)_notifyWillDisplaySupplementaryView:(id)a3 forElementKind:(id)a4 atIndexPath:(id)a5;
- (void)_orthogonalScrollView:(id)a3 didScrollToOffset:(CGPoint)a4 inSection:(int64_t)a5;
- (void)_performAction:(SEL)a3 forCell:(id)a4 sender:(id)a5;
- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5;
- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6;
- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6 animator:(id)a7;
- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6 animator:(id)a7 animationHandler:(id)a8;
- (void)_performBatchUpdates:(id)a3 customAnimationsProvider:(id)a4;
- (void)_performBatchUpdates:(id)a3 viewPropertyAnimator:(id)a4 customAnimationsProvider:(id)a5;
- (void)_performDiffableUpdate:(id)a3;
- (void)_performInternalBatchUpdates:(id)a3;
- (void)_performReloadPrefetchIfNeeded;
- (void)_performUpdate:(id)a3;
- (void)_performWhileSuppressingPromiseRegionGeneration:(id)a3;
- (void)_populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate:(id)a3 addingDeletedViewsToSet:(id)a4 updateLayoutAttributesIndexPaths:(BOOL)a5;
- (void)_prepareClonedViewsForTransitionLayout;
- (void)_prepareLayoutForUpdates:(BOOL)a3;
- (void)_prepareViewForReuse:(uint64_t)a1;
- (void)_prepareViewForUse:(id)a3 withElementCategory:(unint64_t)a4 elementKind:(id)a5 reuseIdentifier:(id)a6 indexPath:(id)a7;
- (void)_prepareViewForUse:(id)a3 withElementCategory:(unint64_t)a4 elementKind:(id)a5 reuseIdentifier:(id)a6 indexPath:(id)a7 applyDefaultAttributes:(BOOL)a8;
- (void)_processQueuedSectionContainerRemovals;
- (void)_processViewSpecificInvalidationsForVisibleViews;
- (void)_pruneCachedPrefetchViewsForVelocity:(CGVector)a3;
- (void)_prunePrefetchedViewsAtIndexPaths:(id)a3;
- (void)_purgeReuseQueues;
- (void)_rebaseContentOffsetAnchorOrScrollTargetForUpdate:(id)a3;
- (void)_rebasePrefetchedCellIndexPathsWithMapping:(id)a3;
- (void)_recomputePreferredAttributesForInvalidatedElementsIfNeeded;
- (void)_recomputeSectionIndexTitleIndex;
- (void)_reconfigureCell:(id)a3 forItemAtIndexPath:(id)a4;
- (void)_reconfigureItemAtIndexPath:(id)a3;
- (void)_reconfigureSectionContainersForUpdate:(id)a3;
- (void)_registeredSupplementaryViewKind:(id)a3;
- (void)_reloadDataIfNeeded;
- (void)_reloadSectionIndexTitles;
- (void)_removeReorderDestinationView;
- (void)_removeStandaloneIndexBarIfNecessary;
- (void)_removeUntrackedAuxillaryViewsForBeforeVisibleViews:(id)a3 afterVisibleViews:(id)a4 withTrackingViewAnimations:(id)a5;
- (void)_removeVisibleViews:(id)a3 fadeForBoundsChange:(BOOL)a4;
- (void)_reorderPrefetchCandidates:(id)a3 forPrefetchVelocity:(CGVector)a4 visibleBounds:(CGRect)a5;
- (void)_reparentViewIntoCorrectContainer:(id)a3;
- (void)_reparentViewIntoSelf:(id)a3;
- (void)_requestFocusOnItemAtIndexPath:(id)a3;
- (void)_resetAllPrefetchContexts;
- (void)_resetDropTargetAppearance;
- (void)_resetOrRebaseFocusedItemForCurrentUpdateWithIndexPathMapping:(id)a3;
- (void)_resetPrefetchState;
- (void)_resetPrefetchedCachedCells;
- (void)_resetPrefetchingContext:(id)a3;
- (void)_resetUpdateItemArrays;
- (void)_resignOrRebaseFirstResponderViewWithIndexPathMapping:(id)a3;
- (void)_resumeDidScrollNotifications;
- (void)_resumeReloads;
- (void)_reusableViewDidInvalidateIntrinsicContentSize:(id)a3;
- (void)_reusePrefetchedCell:(id)a3;
- (void)_reusePreviouslyFocusedManagedSubviewIfNeeded:(id)a3;
- (void)_safeAreaInsetsDidChangeFromOldInsets:(UIEdgeInsets)a3;
- (void)_safeAreaInsetsWillChange;
- (void)_saveContentOffsetRestorationAnchorIfNecessaryUsingModel:(uint64_t)a1;
- (void)_scrollFirstResponderCellToVisible:(BOOL)a3;
- (void)_scrollToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 animated:(BOOL)a6;
- (void)_scrollToItemAtPresentationIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 animated:(BOOL)a6;
- (void)_scrollViewAnimationEnded:(id)a3 finished:(BOOL)a4;
- (void)_scrollViewDidEndDraggingWithDeceleration:(BOOL)a3;
- (void)_scrollViewWillEndDraggingWithVelocity:(CGPoint)a3 targetContentOffset:(CGPoint *)a4;
- (void)_selectAllSelectedItems;
- (void)_selectItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6 deselectPrevious:(BOOL)a7 performPrimaryAction:(BOOL)a8 performCustomSelectionAction:(BOOL)a9;
- (void)_selectionInteractionDidBeginHinting:(id)a3;
- (void)_selectionInteractionDidCancelHinting:(id)a3;
- (void)_selectionInteractionDidSelect:(id)a3;
- (void)_setAllowsBandSelectionForMultipleSelection:(BOOL)a3;
- (void)_setAllowsMultipleSelectionDuringEditing:(BOOL)a3;
- (void)_setAllowsSelectionDuringEditing:(BOOL)a3;
- (void)_setAllowsVisibleCellUpdatesDuringUpdateAnimations:(BOOL)a3;
- (void)_setAllowsVisibleViewUpdatesDuringLayoutTransitions:(BOOL)a3;
- (void)_setCellPrefetchMode:(int64_t)a3;
- (void)_setCollectionViewLayout:(id)a3 animated:(BOOL)a4 isInteractive:(BOOL)a5 completion:(id)a6;
- (void)_setCollectionViewLayout:(id)a3 animated:(BOOL)a4 isInteractive:(BOOL)a5 completion:(id)a6 animator:(id)a7;
- (void)_setContentSize:(CGSize)a3 skipContentOffsetAdjustment:(BOOL)a4;
- (void)_setContentSizeFromLayout:(CGSize)a3 isRecursivelyUpdatingVisibleCells:(BOOL)a4;
- (void)_setCurrentPromiseFulfillmentCell:(id)a3;
- (void)_setCurrentTouch:(id)a3;
- (void)_setDefaultAlwaysBounceVertical:(BOOL)a3 horizontal:(BOOL)a4;
- (void)_setDefaultLayoutMargins:(UIEdgeInsets)a3;
- (void)_setDefaultLayoutMargins:(UIEdgeInsets)a3 fromViewController:(BOOL)a4;
- (void)_setDelaysUserInitiatedItemSelection:(BOOL)a3;
- (void)_setDisplaysHorizontalIndexTitleBar:(BOOL)a3;
- (void)_setExternalObjectTable:(id)a3 forNibLoadingOfCellWithReuseIdentifier:(id)a4;
- (void)_setExternalObjectTable:(id)a3 forNibLoadingOfSupplementaryViewOfKind:(id)a4 withReuseIdentifier:(id)a5;
- (void)_setFocusedItemState:(id)a3;
- (void)_setForcePreserveSemanticContentOffsetDuringUpdates:(BOOL)a3;
- (void)_setHorizontalIndexTitleBar:(id)a3;
- (void)_setHorizontalIndexTitleBarOffset:(CGPoint)a3;
- (void)_setIndexOverlayManager:(id)a3;
- (void)_setIsAncestorOfFirstResponder:(BOOL)a3;
- (void)_setKeepsFirstResponderVisibleOnBoundsChange:(BOOL)a3;
- (void)_setNavigationCompletion:(id)a3;
- (void)_setNeedsRecomputePreferredAttributesForInvalidatedElements;
- (void)_setNeedsVisibleCellsUpdate:(BOOL)a3 withLayoutAttributes:(BOOL)a4;
- (void)_setObject:(id)a3 inDictionary:(id)a4 forKind:(id)a5 indexPath:(id)a6;
- (void)_setPreferredDragDestinationVisualStyle:(int64_t)a3;
- (void)_setPrefetchingContext:(id)a3 forOrthogonalScrollingSection:(int64_t)a4;
- (void)_setRememberedFocusedItemState:(id)a3;
- (void)_setReorderDestinationView:(id)a3;
- (void)_setReorderFeedbackGenerator:(id)a3;
- (void)_setSearchFullPageOnFocusUpdate:(BOOL)a3;
- (void)_setShouldBecomeFocusedOnSelection:(BOOL)a3;
- (void)_setShouldDeriveVisibleBoundsFromContainingScrollView:(BOOL)a3;
- (void)_setShouldPersistSelectionOnReloadDataWhenPossible:(BOOL)a3;
- (void)_setShouldPrefetchCellsWhenPerformingReloadData:(BOOL)a3;
- (void)_setShouldPreventFocusScrollPastContentSize:(BOOL)a3;
- (void)_setShouldResetInitialLayoutOnDataSourceChange:(BOOL)a3;
- (void)_setShouldSkipForcedLayoutBeforeBatchUpdates:(BOOL)a3;
- (void)_setUpCompletionHandlerForAnimationInterruptionIfNecessary;
- (void)_setUsesStaticScrollBar:(BOOL)a3;
- (void)_setVisibleRectEdgeInsets:(UIEdgeInsets)a3;
- (void)_setVisibleView:(id)a3 forLayoutAttributes:(id)a4;
- (void)_setupCellAnimations;
- (void)_setupExpandCollapseAnimationsIfNeededWithContext:(id)a3;
- (void)_setupIndexOverlayManagerIfNecessary;
- (void)_shiftSectionIndexTitleIndexByAmount:(int64_t)a3;
- (void)_sortAttributesByDistanceToVisibleBoundsOrigin:(id)a3;
- (void)_springLoadedInteractionSelectItemAtIndexPath:(id)a3;
- (void)_startViewAnimationsWithContext:(id)a3 oldVisibleViews:(id)a4 viewAnimator:(id)a5 viewAnimationsCompletedDispatchGroup:(id)a6;
- (void)_stopScrollingNotify:(BOOL)a3 pin:(BOOL)a4;
- (void)_subviewManagerDidUpdateVisibleCells;
- (void)_suspendReloads;
- (void)_trackLayoutValue:(double)a3 forKey:(id)a4;
- (void)_traitsConsumedByLayoutInvalidated;
- (void)_transitionIndexOverlaySelectionViewToVisible:(BOOL)a3;
- (void)_unhighlightAllItems;
- (void)_unhighlightAllItemsAndHighlightGlobalItem:(int64_t)a3;
- (void)_unhighlightItemAtIndexPath:(id)a3 animated:(BOOL)a4;
- (void)_unhighlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 notifyDelegate:(BOOL)a5;
- (void)_unhighlightSpringLoadedItem;
- (void)_updateAnimationDidStop:(id)a3 finished:(BOOL)a4;
- (void)_updateBackgroundColorIfNeeded;
- (void)_updateBackgroundView;
- (void)_updateContentFocusContainerGuides;
- (void)_updateContextMenuStateForVisibleCells:(id)a3;
- (void)_updateCycleIdleUntil:(unint64_t)a3;
- (void)_updateDefaultLayoutMargins;
- (void)_updateDerivesVisibleBoundsFromContainingScrollView;
- (void)_updateDropTargetAppearanceWithTargetIndexPath:(id)a3 intent:(int64_t)a4 indicatorLayoutAttributes:(id)a5;
- (void)_updateEditing:(BOOL)a3 forView:(id)a4 atIndexPath:(id)a5 elementCategory:(unint64_t)a6;
- (void)_updateFocusAfterLoadingVisibleCellsIfNeeded:(id)a3;
- (void)_updateFocusScrollBoundaryMetrics:(id)a3 forItem:(id)a4 inSection:(int64_t)a5;
- (void)_updateFocusedCellIndexPathIfNecessaryWithLastFocusedRect:(CGRect)a3;
- (void)_updateHorizontalIndexTitleBarSelectionForFocusedIndexPath:(id)a3;
- (void)_updateIndex;
- (void)_updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange:(BOOL)a3;
- (void)_updateMultiSelectControllerIfNeeded;
- (void)_updateOrderingOfViewsInDisappearingViewAnimations:(id)a3 onScreenViewAnimations:(id)a4;
- (void)_updatePreferredAttributesForCurrentUpdate;
- (void)_updatePreferredAttributesForCurrentUpdate:(unint64_t)a3;
- (void)_updatePrefetchVelocityIntegratorForVisibleBounds:(CGRect)a3;
- (void)_updatePrefetchedCellsForOrthogonalScrollingSection:(int64_t)a3 withOriginalPrefetchingVector:(CGVector)a4 canCompute:(BOOL)a5 canPrefetch:(BOOL)a6;
- (void)_updateReorderDestinationViewWithLayoutAttributes:(id)a3;
- (void)_updateReorderingTargetPosition:(CGPoint)a3;
- (void)_updateRowsAtIndexPaths:(id)a3 updateAction:(int)a4;
- (void)_updateRowsAtIndexPaths:(id)a3 updateAction:(int)a4 updates:(id)a5;
- (void)_updateSectionIndex;
- (void)_updateSections:(id)a3 updateAction:(int)a4;
- (void)_updateSelectionIsKey;
- (void)_updateTrackedLayoutValuesWith:(id)a3;
- (void)_updateTransitionWithProgress:(double)a3;
- (void)_updateVerticalScrollIndicatorVisibility;
- (void)_updateWithUpdates:(id)a3 updateAction:(int64_t)a4;
- (void)_userSelectItemAtIndexPath:(id)a3;
- (void)_userSelectItemAtIndexPath:(id)a3 animatedSelection:(BOOL)a4;
- (void)_wheelChangedWithEvent:(id)a3;
- (void)_willRemoveSubview:(id)a3;
- (void)_willUpdateFocusInContext:(id)a3;
- (void)accessoryInsetsDidChange:(UIEdgeInsets)a3;
- (void)bringSubviewToFront:(id)a3;
- (void)cancelInteractiveMovement;
- (void)cancelInteractiveTransition;
- (void)contextMenuInteraction:(id)a3 willDisplayMenuForConfiguration:(id)a4 animator:(id)a5;
- (void)contextMenuInteraction:(id)a3 willEndForConfiguration:(id)a4 animator:(id)a5;
- (void)contextMenuInteraction:(id)a3 willPerformPreviewActionForMenuWithConfiguration:(id)a4 animator:(id)a5;
- (void)dealloc;
- (void)decodeRestorableStateWithCoder:(id)a3;
- (void)deleteItemsAtIndexPaths:(NSArray *)indexPaths;
- (void)deleteSections:(NSIndexSet *)sections;
- (void)deselectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;
- (void)didMoveToWindow;
- (void)encodeRestorableStateWithCoder:(id)a3;
- (void)encodeWithCoder:(id)a3;
- (void)endInteractiveMovement;
- (void)exchangeSubviewAtIndex:(int64_t)a3 withSubviewAtIndex:(int64_t)a4;
- (void)finishInteractiveTransition;
- (void)horizontalIndexBar:(id)a3 selectedEntry:(id)a4;
- (void)insertItemsAtIndexPaths:(NSArray *)indexPaths;
- (void)insertSections:(NSIndexSet *)sections;
- (void)layoutHorizontalIndexTitleBar;
- (void)layoutSubviews;
- (void)moveItemAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath;
- (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection;
- (void)performBatchUpdates:(id)a3 withAnimator:(id)a4;
- (void)performBatchUpdates:(void *)updates completion:(void *)completion;
- (void)performUsingPresentationValues:(id)a3;
- (void)pressesBegan:(id)a3 withEvent:(id)a4;
- (void)pressesCancelled:(id)a3 withEvent:(id)a4;
- (void)pressesChanged:(id)a3 withEvent:(id)a4;
- (void)pressesEnded:(id)a3 withEvent:(id)a4;
- (void)reconfigureItemsAtIndexPaths:(NSArray *)indexPaths;
- (void)registerClass:(Class)cellClass forCellWithReuseIdentifier:(NSString *)identifier;
- (void)registerClass:(Class)viewClass forSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier;
- (void)registerNib:(UINib *)nib forCellWithReuseIdentifier:(NSString *)identifier;
- (void)registerNib:(UINib *)nib forSupplementaryViewOfKind:(NSString *)kind withReuseIdentifier:(NSString *)identifier;
- (void)reloadData;
- (void)reloadItemsAtIndexPaths:(NSArray *)indexPaths;
- (void)reloadSections:(NSIndexSet *)sections;
- (void)scrollToItemAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(BOOL)animated;
- (void)selectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition;
- (void)sendSubviewToBack:(id)a3;
- (void)setAllowsFocus:(BOOL)allowsFocus;
- (void)setAllowsFocusDuringEditing:(BOOL)allowsFocusDuringEditing;
- (void)setAllowsMultipleSelection:(BOOL)allowsMultipleSelection;
- (void)setAllowsSelection:(BOOL)allowsSelection;
- (void)setAllowsUserInitiatedMultipleSelection:(BOOL)a3;
- (void)setAlwaysBounceHorizontal:(BOOL)a3;
- (void)setAlwaysBounceVertical:(BOOL)a3;
- (void)setBackgroundColor:(id)a3;
- (void)setBackgroundView:(UIView *)backgroundView;
- (void)setBounds:(CGRect)a3;
- (void)setCollectionViewLayout:(UICollectionViewLayout *)collectionViewLayout;
- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated;
- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated completion:(void *)completion;
- (void)setCollectionViewLayout:(id)a3 withAnimator:(id)a4;
- (void)setContentInset:(UIEdgeInsets)a3;
- (void)setContentOffset:(CGPoint)a3;
- (void)setContentOffset:(CGPoint)a3 animated:(BOOL)a4;
- (void)setContentSize:(CGSize)a3;
- (void)setDataSource:(id)dataSource;
- (void)setDelegate:(id)delegate;
- (void)setDirectionalLayoutMargins:(NSDirectionalEdgeInsets)a3;
- (void)setDragDelegate:(id)dragDelegate;
- (void)setDragDestinationDelegate:(id)a3;
- (void)setDragInteractionEnabled:(BOOL)dragInteractionEnabled;
- (void)setDragSourceDelegate:(id)a3;
- (void)setDropDelegate:(id)dropDelegate;
- (void)setEditing:(BOOL)editing;
- (void)setExpectedDiffableUpdateItem:(id)a3;
- (void)setFrame:(CGRect)a3;
- (void)setIndexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar:(id)a3;
- (void)setIsMovingFocusFromHorizontalIndexTitleBarToContent:(BOOL)a3;
- (void)setLayoutMargins:(UIEdgeInsets)a3;
- (void)setPrefetchDataSource:(id)prefetchDataSource;
- (void)setPrefetchingEnabled:(BOOL)prefetchingEnabled;
- (void)setRemembersLastFocusedIndexPath:(BOOL)remembersLastFocusedIndexPath;
- (void)setReorderingCadence:(UICollectionViewReorderingCadence)reorderingCadence;
- (void)setScrollEnabled:(BOOL)a3;
- (void)setSelectedIndexTitleEntry:(id)a3;
- (void)setSelectionFollowsFocus:(BOOL)selectionFollowsFocus;
- (void)setSelfSizingInvalidation:(UICollectionViewSelfSizingInvalidation)selfSizingInvalidation;
- (void)setSemanticContentAttribute:(int64_t)a3;
- (void)setSpringLoaded:(BOOL)a3;
- (void)touchesBegan:(id)a3 withEvent:(id)a4;
- (void)touchesCancelled:(id)a3 withEvent:(id)a4;
- (void)touchesEnded:(id)a3 withEvent:(id)a4;
- (void)touchesMoved:(id)a3 withEvent:(id)a4;
- (void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition;
- (void)userInteractionStoppedWithIndexBarView:(id)a3;
@end

@implementation UICollectionView

+ (BOOL)_supportsInvalidatingFocusCache
{
  return 1;
}

uint64_t __88__UICollectionView__dequeueReusableViewOfKind_withIdentifier_forIndexPath_viewCategory___block_invoke_2(uint64_t a1)
{
  if (dyld_program_sdk_at_least())
  {
    BOOL v2 = 1;
  }
  else
  {
    v3 = [*(id *)(a1 + 56) _layoutAttributes];
    uint64_t v4 = [v3 zIndex];
    BOOL v2 = v4 != [*(id *)(a1 + 32) zIndex];
  }
  uint64_t result = -[UICollectionView _applyLayoutAttributes:toView:addingControlledSubview:forced:](*(void *)(a1 + 40), *(void **)(a1 + 32), *(void **)(a1 + 56), v2, v2);
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 2888);
    if (v6)
    {
      uint64_t result = [*(id *)(v6 + 8) containsObject:*(void *)(a1 + 48)];
      if (result) {
        uint64_t result = [*(id *)(a1 + 56) _setSelected:1 animated:0];
      }
    }
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 2888);
    if (v7)
    {
      uint64_t result = [*(id *)(v7 + 16) containsObject:*(void *)(a1 + 48)];
      if (result)
      {
        v8 = *(void **)(a1 + 56);
        return [v8 _setHighlighted:1 animated:0];
      }
    }
  }
  return result;
}

void __88__UICollectionView__dequeueReusableViewOfKind_withIdentifier_forIndexPath_viewCategory___block_invoke(uint64_t a1)
{
  uint64_t v2 = objc_msgSend(objc_alloc(*(Class *)(a1 + 40)), "initWithFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 48) toView:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

uint64_t __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_412(uint64_t a1)
{
  return [*(id *)(a1 + 32) _checkForPreferredAttributesInView:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) originalAttributes:*(void *)(a1 + 48)];
}

uint64_t __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
}

uint64_t __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke_436(uint64_t a1)
{
  return [*(id *)(a1 + 32) _checkForPreferredAttributesInView:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) originalAttributes:*(void *)(a1 + 40)];
}

uint64_t __41__UICollectionView__prepareViewForReuse___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) prepareForReuse];
}

void __117__UICollectionView__createAndAppendViewAnimationsForInsertsInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_2(uint64_t a1)
{
  id v2 = (id)[*(id *)(a1 + 32) copy];
  [v2 setIndexPath:*(void *)(a1 + 40)];
  [*(id *)(a1 + 48) center];
  objc_msgSend(v2, "setCenter:");
  [*(id *)(a1 + 48) size];
  objc_msgSend(v2, "setSize:");
  [*(id *)(a1 + 56) _setLayoutAttributes:v2];
}

- (id)_viewControllerToNotifyOnLayoutSubviews
{
  uint64_t v3 = [(UIView *)self _viewControllerForAncestor];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && ([v3 collectionView],
        uint64_t v4 = (UICollectionView *)objc_claimAutoreleasedReturnValue(),
        v4,
        v4 == self))
  {
    id v5 = v3;
  }
  else
  {
    v8.receiver = self;
    v8.super_class = (Class)UICollectionView;
    id v5 = [(UIView *)&v8 _viewControllerToNotifyOnLayoutSubviews];
  }
  uint64_t v6 = v5;

  return v6;
}

- (id)_subviewRouterForView:(id)a3 attributes:(id)a4 createIfNecessary:(BOOL)a5
{
  BOOL v5 = a5;
  id v8 = a4;
  if ([(NSMutableSet *)self->_viewsOptedOutOfBeingParentedIntoContainers containsObject:a3])
  {
    int v9 = 0;
    BOOL v10 = 0;
  }
  else
  {
    int v9 = -[_UICollectionViewOrthogonalScrollerSectionController isElementInOrthogonalScrollingSectionWithLayoutAttributes:]((uint64_t)self->_orthogonalScrollerController, v8);
    BOOL v10 = [(UICollectionViewLayout *)self->_layout _shouldAddElementToSectionContainer:v8];
  }
  v11 = [v8 indexPath];
  uint64_t v12 = [v11 section];

  if (v9)
  {
    uint64_t v13 = -[_UICollectionViewOrthogonalScrollerSectionController subviewRouterForSection:]((id *)&self->_orthogonalScrollerController->super.isa, v12);
  }
  else
  {
    if (v10)
    {
      uint64_t v14 = [(UICollectionView *)self _sectionContainerViewForSectionIndex:v12 createIfNecessary:v5];
      v15 = (void *)v14;
      if (v14) {
        v16 = *(void **)(v14 + 408);
      }
      else {
        v16 = 0;
      }
      id v17 = v16;

      goto LABEL_12;
    }
    uint64_t v13 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  }
  id v17 = (id)v13;
LABEL_12:

  return v17;
}

- (id)subviewRouter
{
  if (a1)
  {
    id v2 = a1[363];
    if (!v2)
    {
      id v2 = -[_UICollectionViewSubviewRouter initWithContainer:]([_UICollectionViewSubviewRouter alloc], a1);
      objc_storeStrong(a1 + 363, v2);
    }
  }
  else
  {
    id v2 = 0;
  }
  return v2;
}

- (UICollectionViewLayout)collectionViewLayout
{
  return self->_layout;
}

- (NSInteger)numberOfSections
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  collectionViewData = self->_collectionViewData;
  return -[UICollectionViewData numberOfSections]((uint64_t)collectionViewData);
}

- (NSInteger)numberOfItemsInSection:(NSInteger)section
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  collectionViewData = self->_collectionViewData;
  return -[UICollectionViewData numberOfItemsInSection:]((uint64_t)collectionViewData, section);
}

- (void)_reloadDataIfNeeded
{
  uint64_t v2 = *((void *)&self->_collectionViewFlags + 1);
  if ((v2 & 0x10000000) != 0 && (v2 & 0x20000000) == 0 && !self->_reloadingSuspendedCount) {
    [(UICollectionView *)self reloadData];
  }
}

- (UICollectionViewUpdate)_currentUpdate
{
  return self->_currentUpdate;
}

- (int64_t)_globalIndexPathForItemAtIndexPath:(id)a3
{
  return -[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, a3);
}

- (id)_indexPathForGlobalIndex:(int64_t)a3
{
  if (a3 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = -[UICollectionViewData validatedIndexPathForItemAtGlobalIndex:](self->_collectionViewData, a3);
  }
  return v4;
}

- (BOOL)_isReorderingItemAtIndexPath:(id)a3 includingDragAndDrop:(BOOL)a4
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (v6
    && (a4
     || ![(UICollectionView *)self _hasActiveDrag]
     && ![(UICollectionView *)self _hasActiveDrop]))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    uint64_t v7 = [(UICollectionView *)self _reorderedItems];
    uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v15;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v15 != v9) {
            objc_enumerationMutation(v7);
          }
          v11 = [*(id *)(*((void *)&v14 + 1) + 8 * i) expectedCellIndexPath];
          char v12 = [v11 isEqual:v6];

          if (v12)
          {
            LOBYTE(v8) = 1;
            goto LABEL_16;
          }
        }
        uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
LABEL_16:
  }
  else
  {
    LOBYTE(v8) = 0;
  }

  return v8;
}

- (NSArray)_reorderedItems
{
  return (NSArray *)-[_UICollectionViewDragAndDropController reorderedItems]((id *)&self->_dragAndDropController->super.super.isa);
}

- (BOOL)hasActiveDrop
{
  dragAndDropController = self->_dragAndDropController;
  if (dragAndDropController) {
    return -[_UICollectionViewDragDestinationController isActive](&dragAndDropController->_destinationController->super.isa);
  }
  else {
    return 0;
  }
}

- (BOOL)hasActiveDrag
{
  dragAndDropController = self->_dragAndDropController;
  return dragAndDropController
      && -[_UICollectionViewDragSourceController isActive](&dragAndDropController->_sourceController->super.isa);
}

void __117__UICollectionView__createAndAppendViewAnimationsForInsertsInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](*(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 2192) + 24), a2);
  uint64_t v4 = [*(id *)(*(void *)(a1 + 32) + 2064) initialLayoutAttributesForAppearingItemAtIndexPath:v3];
  BOOL v5 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(*(void *)(*(void *)(a1 + 32) + 2192) + 24), v3);
  if (v5)
  {
    id v6 = v5;
    if (!v4)
    {
      uint64_t v4 = (void *)[v5 copy];
      [v4 setAlpha:0.0];
    }
    [v4 frame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    [v6 frame];
    v46.origin.x = v15;
    v46.origin.y = v16;
    v46.size.width = v17;
    v46.size.height = v18;
    v44.origin.x = v8;
    v44.origin.y = v10;
    v44.size.width = v12;
    v44.size.height = v14;
    CGRect v45 = CGRectUnion(v44, v46);
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2064), "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v4, v45.origin.x, v45.origin.y, v45.size.width, v45.size.height);
    v47.origin.x = v19;
    v47.origin.y = v20;
    v47.size.width = v21;
    v47.size.height = v22;
    if (!CGRectIntersectsRect(*(CGRect *)(a1 + 64), v47)
      || ([v4 isHidden] & 1) != 0
      || ([v6 isHidden] & 1) != 0)
    {
      v23 = v6;
    }
    else
    {
      v24 = [*(id *)(a1 + 32) _preparedCellForItemAtIndexPath:v3 withLayoutAttributes:v4 applyAttributes:1 isFocused:0 notify:1];
      if (dyld_program_sdk_at_least() && *(unsigned char *)(a1 + 96))
      {
        v25 = *(void **)(a1 + 32);
        uint64_t v26 = *(void *)(v25[274] + 24);
        [v25 _visibleBounds];
        -[UICollectionViewData validateLayoutInRect:](v26, v27, v28, v29, v30);
      }
      v23 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(*(void *)(*(void *)(a1 + 32) + 2192) + 24), v3);

      int v31 = [*(id *)(*(void *)(a1 + 32) + 2064) _initialAppearingLayoutAttributesCanBeOverriddenForEstimatedSizing];
      if (dyld_program_sdk_at_least())
      {
        if (*(unsigned char *)(a1 + 96)) {
          int v32 = v31;
        }
        else {
          int v32 = 0;
        }
        if (v32 == 1)
        {
          uint64_t v36 = MEMORY[0x1E4F143A8];
          uint64_t v37 = 3221225472;
          v38 = __117__UICollectionView__createAndAppendViewAnimationsForInsertsInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_2;
          v39 = &unk_1E52DD450;
          id v40 = v4;
          id v41 = v3;
          id v42 = v23;
          id v43 = v24;
          +[UIView performWithoutAnimation:&v36];
        }
      }
      v33 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2064), "_animationForReusableView:toLayoutAttributes:type:", v24, v23, 2, v36, v37, v38, v39);
      v34 = [[UICollectionViewAnimation alloc] initWithView:v24 viewType:1 finalLayoutAttributes:v23 startFraction:0 endFraction:0 animateFromCurrentPostion:v33 deleteAfterAnimation:0.0 customAnimations:1.0];
      [*(id *)(a1 + 40) addObject:v34];
      v35 = +[_UICollectionViewItemKey collectionItemKeyForCellWithIndexPath:]((uint64_t)_UICollectionViewItemKey, v3);
      [*(id *)(a1 + 48) setObject:v34 forKey:v35];
      -[_UICollectionViewSubviewCollection setCell:atIndexPath:](*(void *)(a1 + 56), (uint64_t)v24, (uint64_t)v3);
    }
  }
  else
  {
    v23 = 0;
  }
}

- (void)_setContentSize:(CGSize)a3 skipContentOffsetAdjustment:(BOOL)a4
{
  BOOL v4 = a4;
  double height = a3.height;
  double width = a3.width;
  [(UIScrollView *)self contentSize];
  BOOL v10 = v9 == height && v8 == width;
  BOOL v11 = [(UIScrollView *)self _isAutomaticContentOffsetAdjustmentEnabled];
  [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:!v4];
  [(UIScrollView *)self contentOffset];
  double v13 = v12;
  double v15 = v14;
  if (v4 || !+[UIView areAnimationsEnabled])
  {
    -[UICollectionView setContentSize:](self, "setContentSize:", width, height);
    [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:v11];
    if (!v10 && v4)
    {
      [(UIScrollView *)self contentOffset];
      if (vabdd_f64(v13, v17) < 0.0001 && vabdd_f64(v15, v16) < 0.0001)
      {
        unsigned int v18 = ((*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16) | 0x80000u) >> 16;
        *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
        *((unsigned char *)&self->_collectionViewFlags + 18) = v18;
      }
    }
  }
  else
  {
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = __64__UICollectionView__setContentSize_skipContentOffsetAdjustment___block_invoke;
    v19[3] = &unk_1E52DD178;
    v19[4] = self;
    *(double *)&v19[5] = width;
    *(double *)&v19[6] = height;
    [(UIScrollView *)self performWhileAnimatingAutomaticContentOffsetAdjustments:v19];
    [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:v11];
  }
}

- (CGRect)_visibleBounds
{
  [(UIScrollView *)self visibleBounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  if ([(UICollectionView *)self _canDeriveVisibleBoundsFromContainingScrollView])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_containerScrollView);
    [(UIView *)self frame];
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    CGFloat v20 = [(UIView *)self superview];
    objc_msgSend(WeakRetained, "convertRect:fromView:", v20, v13, v15, v17, v19);
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;

    [WeakRetained visibleBounds];
    v55.origin.double x = v22;
    v55.origin.double y = v24;
    v55.size.double width = v26;
    v55.size.double height = v28;
    CGRect v50 = CGRectIntersection(v49, v55);
    double x = v50.origin.x;
    double y = v50.origin.y;
    double width = v50.size.width;
    double height = v50.size.height;
    if (CGRectIsEmpty(v50))
    {
      double v8 = 44.0;
      double v10 = 44.0;
    }
    else
    {
      objc_msgSend(WeakRetained, "convertRect:toView:", self, x, y, width, height);
      double v4 = v33;
      double v6 = v34;
      double v8 = v35;
      double v10 = v36;
    }
  }
  id v37 = [(UIView *)self window];
  v38 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:v37];
  v39 = [v38 scrollManager];
  int v40 = [v39 isScrollingScrollableContainer:self];

  if ((*((void *)&self->_collectionViewFlags + 1) & 0x200000000) != 0
    || +[UIView _isInAnimationBlock]
    || ([v37 isRotating] | v40) == 1)
  {
    v51.origin.double x = v4;
    v51.origin.double y = v6;
    v51.size.double width = v8;
    v51.size.double height = v10;
    if (CGRectIntersectsRect(v51, self->_visibleBounds))
    {
      v52.origin.double x = v4;
      v52.origin.double y = v6;
      v52.size.double width = v8;
      v52.size.double height = v10;
      CGRect v53 = CGRectUnion(v52, self->_visibleBounds);
      double v4 = v53.origin.x;
      double v6 = v53.origin.y;
      double v8 = v53.size.width;
      double v10 = v53.size.height;
    }
  }
  if (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_f64(*(float64x2_t *)&self->_visibleRectInsets.top), (int32x4_t)vceqzq_f64(*(float64x2_t *)&self->_visibleRectInsets.bottom))))))
  {
    -[UICollectionView _effectiveVisibleBoundsForBounds:](self, "_effectiveVisibleBoundsForBounds:", v4, v6, v8, v10);
    double v4 = v41;
    double v6 = v42;
    double v8 = v43;
    double v10 = v44;
  }

  double v45 = v4;
  double v46 = v6;
  double v47 = v8;
  double v48 = v10;
  result.size.double height = v48;
  result.size.double width = v47;
  result.origin.double y = v46;
  result.origin.double x = v45;
  return result;
}

- (BOOL)_canDeriveVisibleBoundsFromContainingScrollView
{
  return HIWORD(*((void *)&self->_collectionViewFlags + 1)) & 1;
}

uint64_t __64__UICollectionView__setContentSize_skipContentOffsetAdjustment___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

- (void)_geometryChanged:(id *)a3 forAncestor:(id)a4
{
  id v6 = a4;
  if (v6
    && [(UICollectionView *)self _canDeriveVisibleBoundsFromContainingScrollView])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_containerScrollView);
    double v8 = _UITreeFirstCommonAncestor(v6, WeakRetained, sel_superview);

    if (v8)
    {
      unint64_t var0 = a3->var0;
      if (WeakRetained == v6)
      {
        if ((var0 & 0xC) != 0) {
          [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:0];
        }
      }
      else
      {
        if ((var0 & 6) != 0)
        {
          [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:0];
          unint64_t var0 = a3->var0;
        }
        if ((var0 & 0x10) != 0) {
          [(UICollectionView *)self _updateDerivesVisibleBoundsFromContainingScrollView];
        }
      }
    }
  }
  v10.receiver = self;
  v10.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v10 _geometryChanged:a3 forAncestor:v6];
}

- (void)_safeAreaInsetsWillChange
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_safeAreaInsetsWillChange___s_category);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    double v4 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      double v7 = self;
      _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "_safeAreaInsetsWillChange: cv == %p; Attempting to save anchor for change to safe area",
        buf,
        0xCu);
    }
  }
  -[UICollectionView _saveContentOffsetRestorationAnchorIfNecessaryUsingModel:]((uint64_t)self, self->_collectionViewData);
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  [(UIView *)&v5 _safeAreaInsetsWillChange];
}

- (CGSize)intrinsicContentSize
{
  if ([(UICollectionView *)self _canDeriveVisibleBoundsFromContainingScrollView])
  {
    layout = self->_layout;
    [(UICollectionViewLayout *)layout collectionViewContentSize];
  }
  else
  {
    v6.receiver = self;
    v6.super_class = (Class)UICollectionView;
    [(UIView *)&v6 intrinsicContentSize];
  }
  result.double height = v5;
  result.double width = v4;
  return result;
}

- (void)_layoutMarginsWillChange
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_layoutMarginsWillChange___s_category);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    double v4 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      double v7 = self;
      _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "_layoutMarginsWillChange: cv == %p; Attempting to save anchor for change to layout margins",
        buf,
        0xCu);
    }
  }
  -[UICollectionView _saveContentOffsetRestorationAnchorIfNecessaryUsingModel:]((uint64_t)self, self->_collectionViewData);
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  [(UIView *)&v5 _layoutMarginsWillChange];
}

uint64_t __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_925(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateAnimationDidStop:*(void *)(a1 + 40) finished:a2];
}

uint64_t __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(result + 40) + 8) + 40);
  if (v2) {
    return [*(id *)(result + 32) _updateAnimationDidStop:v2 finished:a2];
  }
  return result;
}

uint64_t __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_5(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32) + 2648;
  int v2 = *(_WORD *)v1 & 0xFE7F | (*(unsigned __int8 *)(*(void *)(result + 32) + 2650) << 16);
  *(_WORD *)v1 &= 0xFE7Fu;
  *(unsigned char *)(v1 + 2) = BYTE2(v2);
  return result;
}

void __45__UICollectionView__indexPathForView_ofType___block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if (*(void *)(a1 + 32) == a3)
  {
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    id v8 = v9;
    *a4 = 1;
  }
}

- (void)_updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange:(BOOL)a3
{
  BOOL v3 = a3;
  double v4 = self;
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  BOOL v48 = [(UICollectionViewLayout *)self->_layout _hasOrthogonalScrollingSections];
  double v45 = v4->_subviewManager;
  -[_UICollectionViewSubviewManager allVisibleViews]((id **)v45);
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v47 = [obj countByEnumeratingWithState:&v60 objects:v65 count:16];
  if (v47)
  {
    uint64_t v46 = *(void *)v61;
    double v43 = v4;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v61 != v46) {
          objc_enumerationMutation(obj);
        }
        objc_super v6 = *(void **)(*((void *)&v60 + 1) + 8 * v5);
        uint64_t v7 = [v6 _layoutAttributes];
        id v8 = -[UICollectionViewLayoutAttributes __indexPath]((void *)v7);
        uint64_t v50 = -[UIBarButtonItemGroup _items]((id *)v7);
        if (v7)
        {
          __int16 v9 = *(_WORD *)(v7 + 288);
          uint64_t v10 = 1;
          if ((v9 & 2) != 0) {
            uint64_t v10 = 2;
          }
          if (v9) {
            uint64_t v11 = 0;
          }
          else {
            uint64_t v11 = v10;
          }
        }
        else
        {
          uint64_t v11 = 0;
        }
        uint64_t v12 = [v8 section];
        BOOL v13 = v12 < -[UICollectionViewData numberOfSections]((uint64_t)v4->_collectionViewData)
           || [v8 item] == 0x7FFFFFFFFFFFFFFFLL;
        if (v11 == 2)
        {
          if (!v13)
          {
            if (([v6 _isInUpdateAnimation] & 1) == 0)
            {
              double v15 = [MEMORY[0x1E4F28B00] currentHandler];
              objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, v4, @"UICollectionView.m", 6146, @"UICollectionView internal inconsistency: attempting to update attributes for a decoration view with an invalid section index. View: %@; view attributes: %@; collection view: %@; number of sections: %ld",
                v6,
                v7,
                v4,
                -[UICollectionViewData numberOfSections]((uint64_t)v4->_collectionViewData));
              goto LABEL_27;
            }
LABEL_33:
            id v19 = (id)v7;
            char v49 = 1;
            goto LABEL_34;
          }
          uint64_t v14 = -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:]((uint64_t)v4->_collectionViewData, v50, v8);
          if (!v14)
          {
            if ([v6 _isInUpdateAnimation]) {
              goto LABEL_33;
            }
            double v15 = [MEMORY[0x1E4F28B00] currentHandler];
            double v16 = [(UICollectionViewLayout *)v4->_layout layoutAttributesForDecorationViewOfKind:v50 atIndexPath:v8];
            -[UICollectionViewData dataSourceCountsDescription](v4->_collectionViewData);
            v18 = BOOL v17 = v3;
            objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, v43, @"UICollectionView.m", 6142, @"UICollectionView internal inconsistency: missing final attributes for decoration %@; initial attributes: %@; layout query: %@; collection view: %@; data source counts: %@",
              v6,
              v7,
              v16);
LABEL_66:

            BOOL v3 = v17;
            double v4 = v43;

LABEL_27:
            goto LABEL_33;
          }
        }
        else if (v11 == 1)
        {
          if (!v13)
          {
            if (([v6 _isInUpdateAnimation] & 1) == 0)
            {
              double v15 = [MEMORY[0x1E4F28B00] currentHandler];
              objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, v4, @"UICollectionView.m", 6135, @"UICollectionView internal inconsistency: attempting to update attributes for a supplementary view with an invalid section index. View: %@; view attributes: %@; collection view: %@; number of sections: %ld",
                v6,
                v7,
                v4,
                -[UICollectionViewData numberOfSections]((uint64_t)v4->_collectionViewData));
              goto LABEL_27;
            }
            goto LABEL_33;
          }
          uint64_t v14 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:]((uint64_t)v4->_collectionViewData, v50, v8);
          if (!v14)
          {
            if (([v6 _isInUpdateAnimation] & 1) == 0)
            {
              double v15 = [MEMORY[0x1E4F28B00] currentHandler];
              double v16 = [(UICollectionViewLayout *)v4->_layout layoutAttributesForSupplementaryViewOfKind:v50 atIndexPath:v8];
              -[UICollectionViewData dataSourceCountsDescription](v4->_collectionViewData);
              v18 = BOOL v17 = v3;
              objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, v43, @"UICollectionView.m", 6131, @"UICollectionView internal inconsistency: missing final attributes for supplementary %@; initial attributes: %@; layout query: %@; collection view: %@;  data source counts: %@",
                v6,
                v7,
                v16);
              goto LABEL_66;
            }
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v14 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)v4->_collectionViewData, v8);
          if (!v14)
          {
            if (([v6 _isInUpdateAnimation] & 1) == 0)
            {
              double v15 = [MEMORY[0x1E4F28B00] currentHandler];
              double v16 = [(UICollectionViewLayout *)v4->_layout layoutAttributesForItemAtIndexPath:v8];
              -[UICollectionViewData dataSourceCountsDescription](v4->_collectionViewData);
              v18 = BOOL v17 = v3;
              objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, v43, @"UICollectionView.m", 6125, @"UICollectionView internal inconsistency: missing final attributes for cell %@; initial attributes: %@; layout query: %@; collection view: %@; data source counts: %@",
                v6,
                v7,
                v16);
              goto LABEL_66;
            }
            goto LABEL_33;
          }
        }
        id v19 = (id)v14;
        char v49 = 0;
LABEL_34:
        if ((unint64_t)[v8 length] >= 2)
        {
          CGFloat v20 = v4;
          BOOL v21 = v3;
          id v22 = [v6 superview];
          uint64_t v23 = [(UICollectionView *)v20 _subviewRouterForView:v6 attributes:v19 createIfNecessary:0];
          CGFloat v24 = (void *)v23;
          double v25 = v23 ? *(void **)(v23 + 40) : 0;
          id v26 = v25;

          BOOL v27 = v22 == v26;
          BOOL v3 = v21;
          double v4 = v43;
          if (!v27)
          {
            int v28 = 1;
LABEL_44:
            -[UICollectionView _addControlledSubview:atZIndex:forced:initialAttributes:](v4, "_addControlledSubview:atZIndex:forced:initialAttributes:", v6, [v19 zIndex], v48 | v28, 0);
            goto LABEL_45;
          }
        }
        uint64_t v29 = [v19 zIndex];
        CGFloat v30 = [v6 _layoutAttributes];
        int v31 = v29 != [v30 zIndex] || v48;

        if (v31 == 1)
        {
          int v28 = 0;
          goto LABEL_44;
        }
LABEL_45:
        if (v3 && ![(UICollectionView *)v4 _viewIsReorderedCell:v6])
        {
          layout = v4->_layout;
          v58[4] = v4;
          v59[0] = MEMORY[0x1E4F143A8];
          v59[1] = 3221225472;
          v59[2] = __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke;
          v59[3] = &unk_1E52D9F70;
          v59[4] = v4;
          v58[0] = MEMORY[0x1E4F143A8];
          v58[1] = 3221225472;
          v58[2] = __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke_2;
          v58[3] = &unk_1E52DC3A0;
          LOBYTE(v41) = 0;
          double v35 = [(UICollectionView *)v4 _viewAnimationsForView:v6 startingLayoutAttributes:v7 endingLayoutAttributes:v19 startingLayout:layout endingLayout:layout animationSetup:v59 animationCompletion:v58 enableCustomAnimations:v41 customAnimationsType:0];
          long long v54 = 0u;
          long long v55 = 0u;
          long long v56 = 0u;
          long long v57 = 0u;
          uint64_t v36 = [v35 countByEnumeratingWithState:&v54 objects:v64 count:16];
          if (v36)
          {
            uint64_t v37 = v36;
            uint64_t v38 = *(void *)v55;
            do
            {
              for (uint64_t i = 0; i != v37; ++i)
              {
                if (*(void *)v55 != v38) {
                  objc_enumerationMutation(v35);
                }
                [*(id *)(*((void *)&v54 + 1) + 8 * i) start];
              }
              uint64_t v37 = [v35 countByEnumeratingWithState:&v54 objects:v64 count:16];
            }
            while (v37);
          }

          int v32 = (void *)v50;
          if ((v49 & 1) == 0) {
            goto LABEL_76;
          }
        }
        else if ([v19 isHidden])
        {
          int v32 = (void *)v50;
          if (v45)
          {
            -[_UICollectionViewSubviewCollection removeViewOfKind:inCategory:atIndexPath:](&v45->_visibleViews->super.isa, v50, v11, (uint64_t)v8);
            if ([v6 _isInUpdateAnimation])
            {
              -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:]((uint64_t)v45->_visibleViews, (uint64_t)v6, v50, v11, (uint64_t)v8);
              if ((v49 & 1) == 0) {
                goto LABEL_76;
              }
              goto LABEL_77;
            }
          }
          else if ([v6 _isInUpdateAnimation])
          {
            goto LABEL_75;
          }
          if (v11)
          {
            [(UICollectionView *)v4 _reuseSupplementaryView:v6];
            if ((v49 & 1) == 0) {
              goto LABEL_76;
            }
          }
          else
          {
            if (dyld_program_sdk_at_least())
            {
              [(UICollectionView *)v4 _cacheOrReuseCell:v6 forIndexPath:v8 invalidatePreferredAttributes:1 notifyDidEndDisplaying:1];
LABEL_75:
              if (v49) {
                goto LABEL_77;
              }
LABEL_76:
              [(UICollectionView *)v4 _checkForPreferredAttributesInView:v6 originalAttributes:v19];
              goto LABEL_77;
            }
            [(UICollectionView *)v4 _reuseCell:v6 notifyDidEndDisplaying:1];
            if ((v49 & 1) == 0) {
              goto LABEL_76;
            }
          }
        }
        else
        {
          if (v45) {
            uint64_t v33 = [(NSHashTable *)v45->_viewsPreparingForDisplay containsObject:v6];
          }
          else {
            uint64_t v33 = 0;
          }
          v51[0] = MEMORY[0x1E4F143A8];
          v51[1] = 3221225472;
          v51[2] = __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke_3;
          v51[3] = &unk_1E52DCB30;
          v51[4] = v4;
          id v52 = v19;
          CGRect v53 = v6;
          +[UIView _conditionallyPerformWithoutAnimation:v33 layout:v51];

          int v32 = (void *)v50;
          if ((v49 & 1) == 0) {
            goto LABEL_76;
          }
        }
LABEL_77:

        ++v5;
      }
      while (v5 != v47);
      uint64_t v40 = [obj countByEnumeratingWithState:&v60 objects:v65 count:16];
      uint64_t v47 = v40;
    }
    while (v40);
  }
  -[_UICollectionViewOrthogonalScrollerSectionController processQueuedScrollViewRemovals]((uint64_t)v4->_orthogonalScrollerController);
  [(UICollectionView *)v4 _processQueuedSectionContainerRemovals];
}

- (void)_addControlledSubview:(id)a3 atZIndex:(int64_t)a4 forced:(BOOL)a5 initialAttributes:(id)a6
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v11 = a6;
  uint64_t v12 = v11;
  if (v11)
  {
    id v13 = v11;
  }
  else
  {
    id v13 = [a3 _layoutAttributes];
  }
  uint64_t v14 = v13;
  if (os_variant_has_internal_diagnostics())
  {
    if (!v14)
    {
      uint64_t v36 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412546;
        uint64_t v40 = self;
        __int16 v41 = 2112;
        id v42 = a3;
        _os_log_fault_impl(&dword_1853B0000, v36, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: attempted to add controlled subview with nil layout attributes. Collection view %@; view: %@",
          buf,
          0x16u);
      }
    }
  }
  else if (!v14)
  {
    uint64_t v38 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_addControlledSubview_atZIndex_forced_initialAttributes____s_category)+ 8);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      uint64_t v40 = self;
      __int16 v41 = 2112;
      id v42 = a3;
      _os_log_impl(&dword_1853B0000, v38, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: attempted to add controlled subview with nil layout attributes. Collection view %@; view: %@",
        buf,
        0x16u);
    }
  }
  uint64_t v15 = [(UICollectionView *)self _subviewRouterForView:a3 attributes:v14 createIfNecessary:1];
  if (!v15)
  {
    uint64_t v37 = [MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v37, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 2841, @"UICollectionView internal inconsistency: attempted to add controlled subview without a subview router. Collection view %@; view: %@",
      self,
      a3);
  }
  p_newContentView = &self->_newContentView;
  objc_storeStrong((id *)&self->_newContentView, a3);
  if (!a5)
  {
    id v17 = (id)[a3 superview];
    if (v15) {
      double v18 = *(void **)(v15 + 40);
    }
    else {
      double v18 = 0;
    }
    id v19 = v18;
    if (v17 == v19)
    {
      CGFloat v20 = [a3 _layoutAttributes];
      uint64_t v21 = [v20 zIndex];

      if (v21 == a4) {
        goto LABEL_18;
      }
    }
    else
    {
    }
  }
  if ([(UICollectionViewLayout *)self->_layout _orthogonalScrollingElementShouldAppearBelowForAttributes:v14])
  {
    int64_t v22 = -1;
  }
  else
  {
    int64_t v22 = 1;
  }
  -[_UICollectionViewSubviewRouter addControlledSubview:zIndex:orderMode:](v15, a3, a4, v22);
LABEL_18:
  uint64_t v23 = self->_layout;
  id v24 = a3;
  double v25 = v24;
  if (v24 && v23)
  {
    uint64_t v26 = [v24 effectiveUserInterfaceLayoutDirection];
    if (v26 != [(UICollectionViewLayout *)v23 developmentLayoutDirection])
    {
      uint64_t v27 = [(UICollectionViewLayout *)v23 _wantsRightToLeftHorizontalMirroringIfNeeded];
      goto LABEL_24;
    }
    if ([v25 _flipsHorizontalAxis])
    {
      uint64_t v27 = 0;
LABEL_24:
      [v25 _setFlipsHorizontalAxis:v27];
    }
  }

  if (dyld_program_sdk_at_least())
  {
    int v28 = [v25 _layoutAttributes];
    uint64_t v29 = [v28 _zPosition];

    if (v29 >= 1)
    {
      if ([(UICollectionView *)self hasActiveDrag]
        || [(UICollectionView *)self hasActiveDrop])
      {
        double v30 = (double)v29;
        int v31 = [v25 layer];
        int v32 = v31;
        double v33 = v30;
      }
      else
      {
        int v31 = [v25 layer];
        int v32 = v31;
        double v33 = 0.0;
      }
      [v31 setZPosition:v33];
    }
  }
  if (v15)
  {
    orthogonalScrollerController = self->_orthogonalScrollerController;
    if (orthogonalScrollerController)
    {
      if (*(unsigned char *)(v15 + 32)) {
        -[_UICollectionViewOrthogonalScrollerSectionController adjustElementHierarchyOrderingForOrthogonalElementIfNeeded:layoutAttributes:]((id *)&orthogonalScrollerController->super.isa, v25, v14);
      }
    }
  }
  double v35 = *p_newContentView;
  *p_newContentView = 0;
}

- (uint64_t)_applyLayoutAttributes:(void *)a3 toView:(int)a4 addingControlledSubview:(uint64_t)a5 forced:
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (!result) {
    return result;
  }
  __int16 v9 = (void *)result;
  if (os_variant_has_internal_diagnostics())
  {
    if (!a3)
    {
      uint64_t v10 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
      {
        int v15 = 138412546;
        double v16 = v9;
        __int16 v17 = 2112;
        double v18 = a2;
        _os_log_fault_impl(&dword_1853B0000, v10, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: attempted to apply layout attributes to a nil view. Collection View: %@, Attributes: %@", (uint8_t *)&v15, 0x16u);
      }
    }
  }
  else if (!a3)
  {
    id v13 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258970) + 8);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      int v15 = 138412546;
      double v16 = v9;
      __int16 v17 = 2112;
      double v18 = a2;
      _os_log_impl(&dword_1853B0000, v13, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: attempted to apply layout attributes to a nil view. Collection View: %@, Attributes: %@", (uint8_t *)&v15, 0x16u);
    }
  }
  if (os_variant_has_internal_diagnostics())
  {
    if (!a2)
    {
      id v11 = __UIFaultDebugAssertLog();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
      {
LABEL_22:

        goto LABEL_6;
      }
      uint64_t v12 = [a3 _layoutAttributes];
      int v15 = 138412802;
      double v16 = a3;
      __int16 v17 = 2112;
      double v18 = v12;
      __int16 v19 = 2112;
      CGFloat v20 = v9;
      _os_log_fault_impl(&dword_1853B0000, v11, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: attempting to apply nil layout attributes to view. View: %@; current at"
        "tributes from view: %@; collection view: %@",
        (uint8_t *)&v15,
        0x20u);
LABEL_21:

      goto LABEL_22;
    }
  }
  else if (!a2)
  {
    uint64_t v14 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258978) + 8);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      id v11 = v14;
      uint64_t v12 = [a3 _layoutAttributes];
      int v15 = 138412802;
      double v16 = a3;
      __int16 v17 = 2112;
      double v18 = v12;
      __int16 v19 = 2112;
      CGFloat v20 = v9;
      _os_log_impl(&dword_1853B0000, v11, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: attempting to apply nil layout attributes to view. View: %@; current at"
        "tributes from view: %@; collection view: %@",
        (uint8_t *)&v15,
        0x20u);
      goto LABEL_21;
    }
  }
LABEL_6:
  if (a4) {
    objc_msgSend(v9, "_addControlledSubview:atZIndex:forced:initialAttributes:", a3, objc_msgSend(a2, "zIndex"), a5, a2);
  }
  return [a3 _setLayoutAttributes:a2];
}

- (void)_applyLayoutAttributes:(id)a3 toView:(id)a4
{
}

- (BOOL)_checkForPreferredAttributesInView:(id)a3 originalAttributes:(id)a4
{
  if (![(UICollectionView *)self __hasTransitionLayoutAttributes]
    && ([a3 _arePreferredAttributesValid] & 1) == 0)
  {
    id v8 = (void *)_UISetCurrentFallbackEnvironment(self);
    __int16 v9 = (_WORD *)[a4 copy];
    if (v9)
    {
      p_layout = &self->_layout;
      BOOL v11 = [(UICollectionViewLayout *)self->_layout _estimatesSizes];
      int v12 = v9[144] & 1;
      if (v11)
      {
LABEL_5:
        [(UICollectionViewLayout *)*p_layout _prepareForPreferredAttributesQueryForView:a3 withLayoutAttributes:v9];
        int v13 = 1;
        goto LABEL_7;
      }
      int v13 = 0;
    }
    else
    {
      uint64_t v29 = [MEMORY[0x1E4F28B00] currentHandler];
      double v30 = [a3 _layoutAttributes];
      objc_msgSend(v29, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3502, @"UICollectionView internal inconsistency: missing original layout attributes necessary to update preferred attributes for view: %@. Attributes from view: %@; collection view: %@",
        a3,
        v30,
        self);

      p_layout = &self->_layout;
      int v12 = 0;
      int v13 = 0;
      if ([(UICollectionViewLayout *)self->_layout _estimatesSizes]) {
        goto LABEL_5;
      }
    }
LABEL_7:
    currentUpdate = self->_currentUpdate;
    if (currentUpdate && (*(unsigned char *)&currentUpdate->_flags & 2) != 0
      || +[UIView _isInAnimationBlockWithAnimationsEnabled])
    {
      -[_UICollectionViewSubviewManager visibleViewWithLayoutAttributes:]((id **)self->_subviewManager, a4);
      id v15 = (id)objc_claimAutoreleasedReturnValue();
      BOOL v16 = v15 == a3;
    }
    else
    {
      BOOL v16 = 0;
    }
    uint64_t v17 = [a3 _preferredLayoutAttributesFittingAttributes:v9 isAnimatingExistingView:v16];
    if (v13) {
      [(UICollectionViewLayout *)*p_layout _postProcessPreferredAttributes:v17 forView:a3];
    }
    intrinsicContentSizeInvalidationContext = self->_intrinsicContentSizeInvalidationContext;
    if (intrinsicContentSizeInvalidationContext)
    {
      if (!v12)
      {
        if (!v17 || (*(_WORD *)(v17 + 288) & 3) != 0) {
          goto LABEL_24;
        }
        uint64_t v21 = -[UIBarButtonItemGroup _items]((id *)v17);
        id v20 = [(id)v17 indexPath];
        [(UICollectionViewLayoutInvalidationContext *)intrinsicContentSizeInvalidationContext _removeInvalidatedSupplementaryOfKind:v21 indexPath:v20];
        goto LABEL_21;
      }
      __int16 v19 = [(id)v17 indexPath];
      [(UICollectionViewLayoutInvalidationContext *)intrinsicContentSizeInvalidationContext _removeInvalidatedItemIndexPath:v19];
    }
    else if (!v12)
    {
      goto LABEL_24;
    }
    id v20 = [(id)v17 indexPath];
    if ([(NSMutableOrderedSet *)self->_indexPathsRequiringPreferredAttributes count]) {
      [(NSMutableOrderedSet *)self->_indexPathsRequiringPreferredAttributes removeObject:v20];
    }
    uint64_t v21 = v20;
LABEL_21:

LABEL_24:
    if (!-[UICollectionViewLayout _wantsInvalidateLayoutForPreferredLayoutAttributes](*p_layout, "_wantsInvalidateLayoutForPreferredLayoutAttributes")&& ([(id)v17 isSizeEqualForPreferredFittingAttributes:a4] & 1) != 0|| !-[UICollectionViewLayout shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:](*p_layout, "shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:", v17, a4))
    {
      goto LABEL_36;
    }
    int64_t v22 = [(UICollectionViewLayout *)*p_layout invalidationContextForPreferredLayoutAttributes:v17 withOriginalAttributes:a4];
    uint64_t v23 = v22;
    if (!v13) {
      goto LABEL_32;
    }
    id v24 = [v22 invalidatedItemIndexPaths];
    if (![v24 count])
    {
      double v25 = [v23 invalidatedSupplementaryIndexPaths];
      if (![v25 count])
      {
        uint64_t v27 = [v23 invalidatedDecorationIndexPaths];
        uint64_t v28 = [v27 count];

        if (!v28 && (*((void *)&self->_collectionViewFlags + 1) & 0x100) == 0)
        {
LABEL_35:

LABEL_36:
          _UIRestorePreviousFallbackEnvironment(v8);

          return 0;
        }
LABEL_32:
        if (![v23 _intent]) {
          [v23 _setIntent:5];
        }
        [(UICollectionViewLayout *)*p_layout invalidateLayoutWithContext:v23];
        goto LABEL_35;
      }
    }
    goto LABEL_32;
  }
  return 0;
}

- (BOOL)__hasTransitionLayoutAttributes
{
  return self->_transitionLayoutAttributes != 0;
}

uint64_t __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke_3(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

- (_UICollectionViewSelectionController)_selectionController
{
  return self->_selectionController;
}

- (BOOL)_isReorderingItemAtIndexPath:(id)a3
{
  return [(UICollectionView *)self _isReorderingItemAtIndexPath:a3 includingDragAndDrop:1];
}

- (BOOL)_hasContentForBarInteractions
{
  collectionViewData = self->_collectionViewData;
  if (collectionViewData && collectionViewData->_totalItemCount > 0) {
    return 1;
  }
  v4.receiver = self;
  v4.super_class = (Class)UICollectionView;
  return [(UIScrollView *)&v4 _hasContentForBarInteractions];
}

- (UICollectionViewData)_collectionViewData
{
  return self->_collectionViewData;
}

- (BOOL)_needsReload
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 28) & 1;
}

- (id)_existingVisibleCells
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    [(UICollectionView *)self _visibleBounds];
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    BOOL v11 = -[_UICollectionViewSubviewManager visibleCells]((uint64_t *)self->_subviewManager);
    int v12 = (void *)[v11 mutableCopy];

    id v26 = objc_alloc_init(MEMORY[0x1E4F28E60]);
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    id obj = v12;
    uint64_t v13 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = 0;
      uint64_t v16 = *(void *)v28;
      do
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v28 != v16) {
            objc_enumerationMutation(obj);
          }
          double v18 = *(void **)(*((void *)&v27 + 1) + 8 * i);
          __int16 v19 = [v18 _layoutAttributes];
          id v20 = [v19 indexPath];
          uint64_t v21 = [(UICollectionView *)self _indexPathBeforeShadowUpdatesForIndexPath:v20];

          if (!v21) {
            [v26 addIndex:v15 + i];
          }
          int64_t v22 = [v18 _layoutAttributes];
          layout = self->_layout;
          [v22 frame];
          -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v22);
          v35.origin.double x = v4;
          v35.origin.double y = v6;
          v35.size.double width = v8;
          v35.size.double height = v10;
          if (!CGRectIntersectsRect(v34, v35)) {
            [v26 addIndex:v15 + i];
          }
        }
        uint64_t v14 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
        v15 += i;
      }
      while (v14);
    }

    [obj removeObjectsAtIndexes:v26];
  }
  else
  {
    -[_UICollectionViewSubviewManager visibleCells]((uint64_t *)self->_subviewManager);
    id obj = (id)objc_claimAutoreleasedReturnValue();
  }
  return obj;
}

- (void)_prepareViewForUse:(id)a3 withElementCategory:(unint64_t)a4 elementKind:(id)a5 reuseIdentifier:(id)a6 indexPath:(id)a7 applyDefaultAttributes:(BOOL)a8
{
  BOOL v8 = a8;
  id v14 = a3;
  id v15 = a5;
  [v14 _setReuseIdentifier:a6];
  [v14 _setElementKind:v15];
  [v14 setAutoresizingMask:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:1];
  [v14 _setCollectionView:self];
  [v14 _setAutomaticIntrinsicContentSizeInvalidationEnabled:(*((_WORD *)&self->_collectionViewFlags + 8) & 0x18) == 16];
  if (v8)
  {
    if (self->_layout) {
      uint64_t v16 = (void *)[(id)objc_opt_class() layoutAttributesClass];
    }
    else {
      uint64_t v16 = objc_opt_class();
    }
    if (a4 == 1)
    {
      uint64_t v17 = [v16 layoutAttributesForSupplementaryViewOfKind:v15 withIndexPath:a7];
    }
    else
    {
      if (a4) {
        [v16 layoutAttributesForDecorationViewOfKind:v15 withIndexPath:a7];
      }
      else {
      uint64_t v17 = [v16 layoutAttributesForCellWithIndexPath:a7];
      }
    }
    double v18 = (void *)v17;
    [v14 center];
    objc_msgSend(v18, "setCenter:");
    [v14 bounds];
    objc_msgSend(v18, "setSize:", v19, v20);
    uint64_t v21 = [v14 layer];
    int64_t v22 = v21;
    if (v21)
    {
      [v21 transform];
    }
    else
    {
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
    }
    v23[4] = v28;
    v23[5] = v29;
    v23[6] = v30;
    v23[7] = v31;
    v23[0] = v24;
    v23[1] = v25;
    v23[2] = v26;
    v23[3] = v27;
    [v18 setTransform3D:v23];

    [v14 alpha];
    objc_msgSend(v18, "setAlpha:");
    [(UICollectionView *)self _applyLayoutAttributes:v18 toView:v14];
  }
  [v14 _setHostsLayoutEngine:1];
  [v14 _markAsDequeued];
}

void __100__UICollectionView__configureSupplementaryViewForDisplay_withElementKind_indexPath_elementCategory___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updateEditing:forView:atIndexPath:elementCategory:", objc_msgSend(*(id *)(a1 + 32), "_isEditing"), *(void *)(a1 + 40), 0, *(void *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "setSemanticContentAttribute:", objc_msgSend(*(id *)(a1 + 32), "semanticContentAttribute"));
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(a1 + 40);
  id v8 = *(id *)(v2 + 2064);
  id v4 = v3;
  if (v8) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    uint64_t v6 = [v4 effectiveUserInterfaceLayoutDirection];
    if (v6 == [v8 developmentLayoutDirection])
    {
      if (![v4 _flipsHorizontalAxis]) {
        goto LABEL_10;
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = [v8 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [v4 _setFlipsHorizontalAxis:v7];
  }
LABEL_10:
}

void __62__UICollectionView__configureCellForDisplay_indexPath_cached___block_invoke(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 56) && !dyld_program_sdk_at_least()) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 2888);
  if (v2)
  {
    uint64_t v3 = [*(id *)(v2 + 8) containsObject:*(void *)(a1 + 40)];
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 2888);
    if (v4) {
      uint64_t v5 = [*(id *)(v4 + 16) containsObject:*(void *)(a1 + 40)];
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = (id *)(a1 + 48);
    if (v3 == [*(id *)(a1 + 48) isSelected])
    {
LABEL_8:
      if (v5 == [*v6 isHighlighted]) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
LABEL_7:
    [*v6 _setSelected:v3 animated:0];
    goto LABEL_8;
  }
  uint64_t v6 = (id *)(a1 + 48);
  if ([*(id *)(a1 + 48) isSelected])
  {
    uint64_t v5 = 0;
    uint64_t v3 = 0;
    goto LABEL_7;
  }
  if ([*v6 isHighlighted])
  {
    uint64_t v5 = 0;
LABEL_9:
    [*v6 _setHighlighted:v5 animated:0];
  }
LABEL_10:
  objc_msgSend(*(id *)(a1 + 32), "_updateEditing:forView:atIndexPath:elementCategory:", objc_msgSend(*(id *)(a1 + 32), "_isEditing"), *(void *)(a1 + 48), *(void *)(a1 + 40), 0);
  objc_msgSend(*(id *)(a1 + 48), "setSemanticContentAttribute:", objc_msgSend(*(id *)(a1 + 32), "semanticContentAttribute"));
  uint64_t v7 = *(void **)(a1 + 48);
  id v8 = *(id *)(*(void *)(a1 + 32) + 2064);
  id v9 = v7;
  CGFloat v10 = v9;
  if (v8) {
    BOOL v11 = v9 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (v11) {
    goto LABEL_19;
  }
  uint64_t v12 = [v9 effectiveUserInterfaceLayoutDirection];
  if (v12 == [v8 developmentLayoutDirection])
  {
    if (![v10 _flipsHorizontalAxis]) {
      goto LABEL_19;
    }
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = [v8 _wantsRightToLeftHorizontalMirroringIfNeeded];
  }
  [v10 _setFlipsHorizontalAxis:v13];
LABEL_19:

  id v14 = [*(id *)(a1 + 32) _indexPathBeforeShadowUpdatesForIndexPath:*(void *)(a1 + 40)];
  -[_UICollectionViewDragAndDropController updateAppearanceForCell:atIndexPath:](*(void *)(*(void *)(a1 + 32) + 2768), *(void **)(a1 + 48), v14);
}

- (BOOL)_isEditing
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 46) & 1;
}

- (void)_updateEditing:(BOOL)a3 forView:(id)a4 atIndexPath:(id)a5 elementCategory:(unint64_t)a6
{
  BOOL v7 = a3;
  id v11 = a4;
  id v9 = a5;
  if ([v11 canBeEdited])
  {
    BOOL v10 = v7 && (!v9 || [(UICollectionView *)self _canEditItemAtIndexPath:v9]);
    [v11 setEditing:v10];
  }
}

- (id)_indexPathBeforeShadowUpdatesForIndexPath:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    id v5 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathBeforeShadowUpdates:v4];
  }
  else
  {
    id v5 = v4;
  }
  uint64_t v6 = v5;

  return v6;
}

- (void)deleteItemsAtIndexPaths:(NSArray *)indexPaths
{
  id v4 = [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:indexPaths];
  [(UICollectionView *)self _updateRowsAtIndexPaths:v4 updateAction:1];
}

- (void)reloadItemsAtIndexPaths:(NSArray *)indexPaths
{
  id v4 = [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:indexPaths];
  [(UICollectionView *)self _updateRowsAtIndexPaths:v4 updateAction:2];
}

- (void)insertItemsAtIndexPaths:(NSArray *)indexPaths
{
  id v4 = [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:indexPaths allowingAppendingInserts:1];
  [(UICollectionView *)self _updateRowsAtIndexPaths:v4 updateAction:0];
}

- (void)_updateRowsAtIndexPaths:(id)a3 updateAction:(int)a4
{
}

- (BOOL)_isRequestingCellOrSupplementary
{
  return *((_WORD *)&self->_collectionViewFlags + 8) & 1;
}

void __49__UICollectionView__updateSections_updateAction___block_invoke(uint64_t a1, uint64_t a2)
{
  id v4 = [UICollectionViewUpdateItem alloc];
  uint64_t v5 = *(unsigned int *)(a1 + 40);
  uint64_t v6 = [MEMORY[0x1E4F28D58] indexPathForRow:0x7FFFFFFFFFFFFFFFLL inSection:a2];
  BOOL v7 = [(UICollectionViewUpdateItem *)v4 initWithAction:v5 forIndexPath:v6];

  [*(id *)(a1 + 32) addObject:v7];
}

- (void)_updateRowsAtIndexPaths:(id)a3 updateAction:(int)a4 updates:(id)a5
{
  uint64_t v6 = *(void *)&a4;
  id v9 = a3;
  id v19 = a5;
  uint64_t v10 = *((void *)&self->_collectionViewFlags + 1);
  if ((v10 & 0x800000000) == 0)
  {
    if (!(*((_WORD *)&self->_collectionViewFlags + 8) & 4 | ~v10 & 4))
    {
      double v18 = [MEMORY[0x1E4F28B00] currentHandler];
      [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 10162, @"UICollectionView must be updated via the UICollectionViewDiffableDataSource APIs when acting as the UICollectionView's dataSource: please do not call mutation APIs directly on UICollectionView. %@", self object file lineNumber description];
    }
    id v11 = [(UICollectionView *)self _arrayForUpdateAction:v6];
    uint64_t v21 = 0;
    int64_t v22 = &v21;
    uint64_t v23 = 0x2020000000;
    char v24 = 0;
    if ([v19 count])
    {
      [v11 addObjectsFromArray:v19];
      v20[0] = MEMORY[0x1E4F143A8];
      v20[1] = 3221225472;
      v20[2] = __65__UICollectionView__updateRowsAtIndexPaths_updateAction_updates___block_invoke;
      v20[3] = &unk_1E52E3478;
      v20[4] = self;
      v20[5] = &v21;
      [v19 enumerateObjectsUsingBlock:v20];
    }
    else
    {
      uint64_t v13 = [v9 count];
      if (v13)
      {
        uint64_t v14 = 0;
        while (1)
        {
          id v15 = [v9 objectAtIndex:v14];
          uint64_t v16 = [[UICollectionViewUpdateItem alloc] initWithAction:v6 forIndexPath:v15];
          if (![(UICollectionView *)self _addUpdateToShadowControllerIfNeeded:v16])break; {
          [v11 addObject:v16];
          }

          if (v13 == ++v14) {
            goto LABEL_6;
          }
        }
        *((unsigned char *)v22 + 24) = 1;
      }
    }
LABEL_6:
    if (*((unsigned char *)v22 + 24))
    {
      uint64_t v12 = *((void *)&self->_collectionViewFlags + 1);
      if ((v12 & 0x400000000) != 0)
      {
        int v17 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                        + 18) << 16);
        *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
        *((void *)&self->_collectionViewFlags + 1) = v12 | 0x800000000;
        *((_WORD *)&self->_collectionViewFlags + 8) = v17;
        *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v17);
      }
      else
      {
        [(UICollectionView *)self reloadData];
      }
    }
    else
    {
      [(UICollectionView *)self _reloadDataIfNeeded];
      if ((*((void *)&self->_collectionViewFlags + 1) & 0x400000000) == 0)
      {
        [(UICollectionView *)self _setupCellAnimations];
        [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:0];
      }
    }
    _Block_object_dispose(&v21, 8);
  }
}

- (BOOL)_addUpdateToShadowControllerIfNeeded:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  BOOL v5 = [(UICollectionView *)self _isPerformingShadowUpdates];
  dragAndDropController = self->_dragAndDropController;
  if (v5)
  {
    [(_UICollectionViewShadowUpdatesController *)dragAndDropController appendShadowUpdate:v4];
LABEL_6:
    BOOL v8 = 1;
    goto LABEL_7;
  }
  if (!-[_UICollectionViewDragAndDropController updateWillCauseInternalInconsistency:]((uint64_t)dragAndDropController, v4))goto LABEL_6; {
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_addUpdateToShadowControllerIfNeeded____s_category);
  }
  if (*(unsigned char *)CategoryCachedImpl)
  {
    uint64_t v10 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      id v11 = self->_dragAndDropController;
      *(_DWORD *)buf = 134218498;
      uint64_t v13 = self;
      __int16 v14 = 2112;
      id v15 = v4;
      __int16 v16 = 2112;
      int v17 = v11;
      _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_ERROR, "_addUpdateToShadowControllerIfNeeded: cv == %p; unable to add update to shadow updates controller. Update item: "
        "%@; drag and drop controller: %@",
        buf,
        0x20u);
    }
  }
  BOOL v8 = 0;
LABEL_7:

  return v8;
}

- (BOOL)_isPerformingShadowUpdates
{
  return HIBYTE(*((void *)&self->_collectionViewFlags + 1)) & 1;
}

id __36__UICollectionView_setSpringLoaded___block_invoke()
{
  return +[_UICollectionViewSpringLoadedInteraction collectionViewSpringLoadedInteraction];
}

- (void)setContentSize:(CGSize)a3
{
  double height = a3.height;
  double width = a3.width;
  BOOL v6 = [(UIScrollView *)self _adjustsTargetsOnContentOffsetChanges];
  [(UIScrollView *)self _setAdjustsTargetsOnContentOffsetChanges:0];
  v7.receiver = self;
  v7.super_class = (Class)UICollectionView;
  -[UIScrollView setContentSize:](&v7, sel_setContentSize_, width, height);
  [(UIScrollView *)self _setAdjustsTargetsOnContentOffsetChanges:v6];
}

- (unint64_t)_edgesPropagatingSafeAreaInsetsToSubviews
{
  if ([(UICollectionViewLayout *)self->_layout _overridesSafeAreaPropagationToDescendants])
  {
    layout = self->_layout;
    return [(UICollectionViewLayout *)layout _edgesForSafeAreaPropagationToDescendants];
  }
  else
  {
    v5.receiver = self;
    v5.super_class = (Class)UICollectionView;
    return [(UIScrollView *)&v5 _edgesPropagatingSafeAreaInsetsToSubviews];
  }
}

- (double)_alignedContentMarginGivenMargin:(double)a3
{
  id v4 = [(UICollectionView *)self collectionViewLayout];
  [v4 _alignedContentMarginGivenMargin:a3];
  double v6 = v5;

  return v6;
}

- (BOOL)_dataSourceSupportsReordering
{
  return (*(void *)&self->_collectionViewFlags & 0x4200000000000000) != 0
      || [(UICollectionView *)self _dataSourceImplementsReorderingHandlers];
}

- (BOOL)_dataSourceImplementsReorderingHandlers
{
  if ((*((void *)&self->_collectionViewFlags + 1) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = [(UICollectionView *)self _diffableDataSourceImpl];
  id v4 = [v3 reorderingHandlers];
  double v5 = [v4 canReorderItemHandler];

  double v6 = [v3 canReorderItemHandler];
  if (v6)
  {
    objc_super v7 = [v3 didApplySnapshotHandler];
    BOOL v8 = v7 != 0;
  }
  else
  {
    BOOL v8 = 0;
  }

  if (v5) {
    BOOL v2 = 1;
  }
  else {
    BOOL v2 = v8;
  }

  return v2;
}

- (unint64_t)_updateVisibleCellsNow:(BOOL)a3
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  if (self->_reloadingSuspendedCount > 0) {
    return 0;
  }
  BOOL v4 = a3;
  if (self->_updateAnimationCount >= 1 && (*((void *)&self->_collectionViewFlags + 1) & 0x200000000000000) == 0) {
    return 0;
  }
  int64_t updateVisibleCellsRecursionCount = self->_updateVisibleCellsRecursionCount;
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A30);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    v116 = *(id *)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR))
    {
      int64_t v117 = self->_updateVisibleCellsRecursionCount;
      [(UICollectionView *)self _visibleBounds];
      NSStringFromCGRect(v159);
      id v118 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v152 = 134218498;
      v153 = self;
      __int16 v154 = 2048;
      int64_t v155 = v117;
      __int16 v156 = 2112;
      id v157 = v118;
      _os_log_impl(&dword_1853B0000, v116, OS_LOG_TYPE_ERROR, "_updateVisibleCellsNow: %p; recursionCount=%ld, _visibleBounds=%@",
        v152,
        0x20u);
    }
  }
  BOOL v128 = [(UICollectionViewLayout *)self->_layout _wantsUpdateVisibleCellsPassNotifications];
  if (v128) {
    [(UICollectionViewLayout *)self->_layout _willPerformUpdateVisibleCellsPass];
  }
  v124 = [(UIView *)self _focusSystem];
  [v124 _lockEnvironment:self];
  [(UIScrollView *)self _contentInsetIncludingDecorations];
  double v9 = v8;
  double v11 = v10;
  BOOL v12 = +[UIView _isInAnimationBlockWithAnimationsEnabled];
  if (v12) {
    BOOL v12 = (*((_DWORD *)&self->_collectionViewFlags + 2) & 0x80000000) != 0
  }
       && [(UICollectionView *)self _shouldFadeCellsForBoundChangeWhileRotating];
  unint64_t v13 = *((void *)&self->_collectionViewFlags + 1);
  uint64_t v14 = 0x4000000;
  if (!(v12 | (v13 >> 26) & 1)) {
    uint64_t v14 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = v14 | v13 & 0xFFFFFFFFFBFFFFFFLL;
  [(UICollectionView *)self _suspendReloads];
  unint64_t v15 = *((void *)&self->_collectionViewFlags + 1);
  if (updateVisibleCellsRecursionCount <= 0)
  {
    int64_t didScrollNotificationSuspensionCount = self->_didScrollNotificationSuspensionCount;
    if (!didScrollNotificationSuspensionCount)
    {
      [(UIScrollView *)self contentOffset];
      self->_contentOffsetWhenScrollNotificationsSuspended.double x = v18;
      self->_contentOffsetWhenScrollNotificationsSuspended.double y = v19;
    }
    self->_int64_t didScrollNotificationSuspensionCount = didScrollNotificationSuspensionCount + 1;
    if ((v15 & 0x4000000) != 0) {
      goto LABEL_16;
    }
LABEL_20:
    [(UICollectionView *)(uint64_t)self _restoreOrAdjustContentOffsetIfNecessaryWithInsets:updateVisibleCellsRecursionCount > 0 hasUpdatedVisibleCells:v9 isRecursive:v11];
    goto LABEL_21;
  }
  if ((v15 & 0x4000000) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  [(UICollectionView *)self _resetPrefetchState];
  [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController performLayout];
  -[UICollectionViewLayout prepareForAnimatedBoundsChange:](self->_layout, "prepareForAnimatedBoundsChange:", self->_preRotationBounds.origin.x, self->_preRotationBounds.origin.y, self->_preRotationBounds.size.width, self->_preRotationBounds.size.height);
  layout = self->_layout;
  [(UIScrollView *)self contentOffset];
  -[UICollectionViewLayout targetContentOffsetForProposedContentOffset:](layout, "targetContentOffsetForProposedContentOffset:");
  -[UICollectionView _delegateTargetOffsetForProposedContentOffset:](self, "_delegateTargetOffsetForProposedContentOffset:");
  -[UICollectionView setContentOffset:](self, "setContentOffset:");
LABEL_21:
  unint64_t v123 = *((void *)&self->_collectionViewFlags + 1);
  *((void *)&self->_collectionViewFlags + 1) = v123 & 0xFFFFFFAFFFFFFFFFLL | 0x1000000000;
  double v20 = self->_subviewManager;
  collectionViewData = self->_collectionViewData;
  [(UICollectionView *)self _visibleBounds];
  v127 = -[UICollectionViewData layoutAttributesForElementsInRect:](collectionViewData, v22, v23, v24, v25);
  if (v4) {
    *((void *)&self->_collectionViewFlags + 1) &= 0xFFFFFFFFFBFFFEFFLL;
  }
  -[UICollectionViewData collectionViewContentRect]((uint64_t)self->_collectionViewData);
  -[UICollectionView _setContentSizeFromLayout:isRecursivelyUpdatingVisibleCells:](self, "_setContentSizeFromLayout:isRecursivelyUpdatingVisibleCells:", updateVisibleCellsRecursionCount > 0, v26, v27);
  if ((v15 & 0x4000000) != 0)
  {
    id v28 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    v139[0] = MEMORY[0x1E4F143A8];
    v139[1] = 3221225472;
    v139[2] = __43__UICollectionView__updateVisibleCellsNow___block_invoke;
    v139[3] = &unk_1E52E5F30;
    id v29 = v28;
    id v140 = v29;
    if (v20) {
      -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)v20->_visibleViews, (uint64_t)v139);
    }
    [v29 sortUsingComparator:&__block_literal_global_111];
    long long v30 = (void *)[objc_alloc(MEMORY[0x1E4F1C978]) initWithArray:v127 copyItems:1];
    long long v31 = self->_layout;
    [(UIScrollView *)self contentOffset];
    -[UICollectionViewLayout _prepareToAnimateFromCollectionViewItems:atContentOffset:toItems:atContentOffset:](v31, "_prepareToAnimateFromCollectionViewItems:atContentOffset:toItems:atContentOffset:", v29, v30, self->_lastLayoutOffset.x, self->_lastLayoutOffset.y, v32, v33);
  }
  -[_UICollectionViewOrthogonalScrollerSectionController layoutScrollViews]((uint64_t)self->_orthogonalScrollerController);
  [(UICollectionView *)self _layoutSectionContainerViews];
  unint64_t v132 = v15;
  uint64_t v130 = updateVisibleCellsRecursionCount;
  BOOL v129 = v4;
  p_isa = (id *)&v20->super.isa;
  if (v4)
  {
    CGRect v34 = (void *)[(NSMutableOrderedSet *)self->_indexPathsRequiringPreferredAttributes copy];
    indexPathsRequiringPreferredAttributes = self->_indexPathsRequiringPreferredAttributes;
    self->_indexPathsRequiringPreferredAttributes = 0;

    v122 = v34;
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x10000000) != 0)
    {
      unint64_t v67 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A40);
      if (*(unsigned char *)v67)
      {
        v120 = *(NSObject **)(v67 + 8);
        if (os_log_type_enabled(v120, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)v152 = 134217984;
          v153 = self;
          _os_log_impl(&dword_1853B0000, v120, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; skipping because we need a reload",
            v152,
            0xCu);
        }
      }
    }
    else
    {
      long long v143 = 0u;
      long long v144 = 0u;
      long long v141 = 0u;
      long long v142 = 0u;
      id v36 = v34;
      uint64_t v37 = [v36 countByEnumeratingWithState:&v141 objects:v152 count:16];
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = *(void *)v142;
        id v131 = v36;
        do
        {
          uint64_t v40 = 0;
          do
          {
            if (*(void *)v142 != v39) {
              objc_enumerationMutation(v36);
            }
            __int16 v41 = *(void **)(*((void *)&v141 + 1) + 8 * v40);
            if ([(UICollectionView *)self _indexPathIsValid:v41])
            {
              id v42 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v41);
              if (v42)
              {
                -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v41);
                uint64_t v43 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
                if (v43)
                {
                  unint64_t v44 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A48);
                  if (*(unsigned char *)v44)
                  {
                    CGRect v53 = *(NSObject **)(v44 + 8);
                    if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
                    {
                      long long v54 = v53;
                      long long v55 = objc_msgSend(v41, "_ui_shortDescription");
                      *(_DWORD *)buf = 134218498;
                      v147 = self;
                      __int16 v148 = 2112;
                      v149 = v43;
                      __int16 v150 = 2112;
                      v151 = v55;
                      _os_log_impl(&dword_1853B0000, v54, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; recomputing preferred attributes for e"
                        "xisting cell: %@; index path: %@",
                        buf,
                        0x20u);
                    }
                  }
                  [(UICollectionView *)self _recomputePreferredAttributesForInvalidatedView:v43 originalAttributes:v42];
                }
                else
                {
                  double v45 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v41];
                  if (v45)
                  {
                    unint64_t v46 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A50);
                    if (*(unsigned char *)v46)
                    {
                      long long v56 = *(NSObject **)(v46 + 8);
                      if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)buf = 134218242;
                        v147 = self;
                        __int16 v148 = 2112;
                        v149 = v45;
                        _os_log_impl(&dword_1853B0000, v56, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; recomputing preferred attributes for"
                          " cell in prefetch cache: %@",
                          buf,
                          0x16u);
                      }
                    }
                    *(unsigned char *)&v45->super.super._responderFlags |= 3u;
                  }
                  else if ([(UICollectionView *)self _hasFocusedCellForIndexPath:v41 shouldUsePreUpdateData:0])
                  {
                    unint64_t v47 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A58);
                    if (*(unsigned char *)v47)
                    {
                      long long v57 = *(NSObject **)(v47 + 8);
                      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
                      {
                        v58 = v57;
                        v59 = [(UICollectionView *)self _focusedItemState];
                        *(_DWORD *)buf = 134218242;
                        v147 = self;
                        __int16 v148 = 2112;
                        v149 = v59;
                        _os_log_impl(&dword_1853B0000, v58, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; recomputing preferred attributes for"
                          " focused cell: %@",
                          buf,
                          0x16u);
                      }
                    }
                    BOOL v48 = [(UICollectionView *)self _focusedItemState];
                    char v49 = -[_UICollectionViewFocusedItemState cell](v48);

                    [v49 _invalidatePreferredAttributes];
                  }
                  else if (self->_firstResponderViewType == 1 {
                         && [(NSIndexPath *)self->_firstResponderIndexPath isEqual:v41])
                  }
                  {
                    unint64_t v50 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A60);
                    if (*(unsigned char *)v50)
                    {
                      long long v63 = *(NSObject **)(v50 + 8);
                      if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
                      {
                        firstResponderView = self->_firstResponderView;
                        v64 = v63;
                        v65 = objc_msgSend(v41, "_ui_shortDescription");
                        *(_DWORD *)buf = 134218498;
                        v147 = self;
                        __int16 v148 = 2112;
                        v149 = firstResponderView;
                        __int16 v150 = 2112;
                        v151 = v65;
                        _os_log_impl(&dword_1853B0000, v64, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; recomputing preferred attributes for"
                          " first responder cell: %@; index path: %@",
                          buf,
                          0x20u);
                      }
                    }
                    [(UICollectionReusableView *)self->_firstResponderView _invalidatePreferredAttributes];
                  }
                  else
                  {
                    unint64_t v51 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A68);
                    if (*(unsigned char *)v51)
                    {
                      long long v60 = *(NSObject **)(v51 + 8);
                      if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
                      {
                        long long v61 = v60;
                        objc_msgSend(v41, "_ui_shortDescription");
                        long long v62 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 134218242;
                        v147 = self;
                        __int16 v148 = 2112;
                        v149 = v62;
                        _os_log_impl(&dword_1853B0000, v61, OS_LOG_TYPE_ERROR, "_processIndexPathsRequiringPreferredAttributes: cv == %p; creating cell for item at index path: %@",
                          buf,
                          0x16u);
                      }
                    }
                  }
                  id v52 = [(UICollectionView *)self _preparedCellForItemAtIndexPath:v41 withLayoutAttributes:v42 applyAttributes:1 isFocused:0 notify:1];
                  -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:]((uint64_t)self->_subviewManager, (uint64_t)v52, (uint64_t)v41);

                  id v36 = v131;
                }
              }
            }
            ++v40;
          }
          while (v38 != v40);
          uint64_t v66 = [v36 countByEnumeratingWithState:&v141 objects:v152 count:16];
          uint64_t v38 = v66;
        }
        while (v66);
      }

      double v20 = (_UICollectionViewSubviewManager *)p_isa;
      unint64_t v15 = v132;
    }
  }
  -[_UICollectionViewSubviewManager allVisibleViewsSubviewCollection]((uint64_t)v20);
  v68 = (id *)objc_claimAutoreleasedReturnValue();
  v69 = [(UICollectionView *)self _currentPromiseFulfillmentCell];

  if (v69)
  {
    v70 = [(UICollectionView *)self _currentPromiseFulfillmentCell];
    v71 = [(UICollectionView *)self _indexPathForCell:v70];

    if (v71 && v68) {
      [v68[1] removeObjectForKey:v71];
    }
  }
  uint64_t v72 = [v127 count];
  v73 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:v72];
  long long v135 = 0u;
  long long v136 = 0u;
  long long v137 = 0u;
  long long v138 = 0u;
  id v74 = v127;
  uint64_t v75 = [v74 countByEnumeratingWithState:&v135 objects:v145 count:16];
  if (v75)
  {
    uint64_t v76 = v75;
    uint64_t v77 = *(void *)v136;
    do
    {
      uint64_t v78 = 0;
      do
      {
        if (*(void *)v136 != v77) {
          objc_enumerationMutation(v74);
        }
        uint64_t v79 = *(void *)(*((void *)&v135 + 1) + 8 * v78);
        id v80 = [(UICollectionView *)self _visibleViewForLayoutAttributes:v79];
        if (v80)
        {
          if (!v79)
          {
            BOOL v82 = 0;
            goto LABEL_83;
          }
          __int16 v81 = *(_WORD *)(v79 + 288);
          if ((v81 & 1) == 0)
          {
            BOOL v82 = (v81 & 3) == 0;
LABEL_83:
            v83 = -[UIBarButtonItemGroup _items]((id *)v79);
            v84 = -[UICollectionViewLayoutAttributes __indexPath]((void *)v79);
            if (v82) {
              -[_UICollectionViewSubviewCollection removeViewForSupplementaryOfKind:atIndexPath:]((uint64_t)v68, (uint64_t)v83, (uint64_t)v84);
            }
            else {
              -[_UICollectionViewSubviewCollection removeViewForDecorationOfKind:atIndexPath:]((uint64_t)v68, (uint64_t)v83, (uint64_t)v84);
            }

            unint64_t v15 = v132;
            goto LABEL_93;
          }
          id v85 = v80;
          v86 = -[UICollectionViewLayoutAttributes __indexPath]((void *)v79);
          if (v68) {
            [v68[1] removeObjectForKey:v86];
          }
          -[UICollectionView _notifyWillDisplayCellIfNeeded:forIndexPath:](self, "_notifyWillDisplayCellIfNeeded:forIndexPath:", v85, -[UICollectionViewLayoutAttributes __indexPath]((void *)v79));
        }
        else if ((v15 & 0x4000000) != 0 || ([(id)v79 isHidden] & 1) == 0)
        {
          [v73 addObject:v79];
        }
LABEL_93:
        ++v78;
      }
      while (v76 != v78);
      uint64_t v87 = [v74 countByEnumeratingWithState:&v135 objects:v145 count:16];
      uint64_t v76 = v87;
    }
    while (v87);
  }

  [(UICollectionView *)self _removeVisibleViews:v68 fadeForBoundsChange:(v15 >> 26) & 1];
  uint64_t v88 = *((void *)&self->_collectionViewFlags + 1);
  if ((v88 & 0x80) == 0)
  {
    int v89 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v88 & 0xFFFFFFFFFFFFFDFFLL;
    *((_WORD *)&self->_collectionViewFlags + 8) = v89;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v89);
  }
  if ((v88 & 0x200) != 0
    && [(UICollectionView *)self _useIdleObserverForCellPrefetching])
  {
    [(NSMutableDictionary *)self->_prefetchCacheItems enumerateKeysAndObjectsUsingBlock:&__block_literal_global_494];
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x20000000000) != 0)
  {
    v133 = [(UICollectionView *)self _focusedItemState];
    [(UICollectionView *)self _setFocusedItemState:0];
    unint64_t v90 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258A38);
    if (*(unsigned char *)v90)
    {
      v119 = *(id *)(v90 + 8);
      if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v152 = 134218242;
        v153 = self;
        __int16 v154 = 2112;
        int64_t v155 = (int64_t)v133;
        _os_log_impl(&dword_1853B0000, v119, OS_LOG_TYPE_ERROR, "[UICV %p] Handling updateFocusAfterLoadingCells. Item focused before reload: %@", v152, 0x16u);
      }
    }
  }
  else
  {
    v133 = 0;
  }
  if (v129) {
    unint64_t v3 = [(UICollectionView *)self _createVisibleViewsForAttributes:v73 fadeForBoundsChange:(v15 >> 26) & 1 notifyLayoutForVisibleCellsPass:v128];
  }
  else {
    unint64_t v3 = 0;
  }
  uint64_t v91 = *((void *)&self->_collectionViewFlags + 1);
  if ((v91 & 0x80) != 0)
  {
    [(UICollectionView *)self performSelector:sel__resumeReloads withObject:0 afterDelay:0.0];
  }
  else
  {
    [(UICollectionView *)self _visibleBounds];
    self->_visibleBounds.origin.double x = v92;
    self->_visibleBounds.origin.double y = v93;
    self->_visibleBounds.size.double width = v94;
    self->_visibleBounds.size.double height = v95;
    if ((v88 & 0x200) == 0
      || ([(UICollectionView *)self _updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange:(v15 >> 26) & 1], dyld_program_sdk_at_least()))
    {
      [(UICollectionView *)self _processViewSpecificInvalidationsForVisibleViews];
    }
    if ((v15 & 0x4000000) != 0)
    {
      [(UICollectionViewLayout *)self->_layout _finalizeCollectionViewItemAnimations];
      [(UICollectionViewLayout *)self->_layout finalizeAnimatedBoundsChange];
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [(UICollectionView *)self _prepareClonedViewsForTransitionLayout];
  }
  *((void *)&self->_collectionViewFlags + 1) &= ~0x80000000uLL;
  [(UIScrollView *)self contentOffset];
  double v97 = v96;
  double v99 = v98;
  double x = self->_lastLayoutOffset.x;
  double y = self->_lastLayoutOffset.y;
  v102 = [(UIView *)self window];
  char v103 = [v102 isRotating];

  if ((v103 & 1) == 0)
  {
    [(UIScrollView *)self contentOffset];
    self->_lastLayoutOffset.double x = v104;
    self->_lastLayoutOffset.double y = v105;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFEFFFFFFFFFLL | (((v123 >> 36) & 1) << 36);
  if ((v91 & 0x80) == 0) {
    [(UICollectionView *)self _resumeReloads];
  }
  invalidationBlock = (void (**)(void))self->_invalidationBlock;
  if (invalidationBlock)
  {
    invalidationBlock[2]();
    id v107 = self->_invalidationBlock;
    self->_invalidationBlock = 0;
  }
  [v124 _unlockEnvironment:self];
  [(UICollectionView *)self _updateFocusAfterLoadingVisibleCellsIfNeeded:v133];
  if (v128) {
    -[UICollectionViewLayout _didPerformUpdateVisibleCellsPassWithLayoutOffset:](self->_layout, "_didPerformUpdateVisibleCellsPassWithLayoutOffset:", v97 - x, v99 - y);
  }
  [(UICollectionView *)(uint64_t)self _restoreOrAdjustContentOffsetIfNecessaryWithInsets:v130 > 0 hasUpdatedVisibleCells:v9 isRecursive:v11];
  if (v129 && (*((void *)&self->_collectionViewFlags + 1) & 0x100) != 0)
  {
    -[UICollectionViewData invalidate:]((uint64_t)self->_collectionViewData, 1);
    int64_t v108 = self->_updateVisibleCellsRecursionCount;
    self->_int64_t updateVisibleCellsRecursionCount = v108 + 1;
    if (v108 >= 15 && !self->_debugger)
    {
      v109 = objc_alloc_init(_UICollectionViewFeedbackLoopDebugger);
      debugger = self->_debugger;
      self->_debugger = v109;
    }
    v3 += [(UICollectionView *)self _updateVisibleCellsNow:1];
    --self->_updateVisibleCellsRecursionCount;
    v111 = self->_debugger;
    if (v111)
    {
      self->_debugger = 0;
    }
  }
  [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
  int v112 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
  int v113 = v112 | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if ((v112 & 0x4000) != 0)
  {
    [(UICollectionView *)self _clearTargetIndexPathForScrolling];
    int v113 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
  }
  uint64_t v114 = *((void *)&self->_collectionViewFlags + 1);
  *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
  *((void *)&self->_collectionViewFlags + 1) = v114;
  *((_WORD *)&self->_collectionViewFlags + 8) = v113;
  *((unsigned char *)&self->_collectionViewFlags + 18) = (v113 & 0xFFF7FFFF) >> 16;
  [(UICollectionView *)self _ensureFocusedViewIsNotHidden];
  if (v130 <= 0)
  {
    [(UICollectionView *)self _setUpCompletionHandlerForAnimationInterruptionIfNecessary];
    -[UICollectionView _resumeDidScrollNotifications]((CGFloat *)self);
    if (p_isa) {
      [p_isa[4] removeAllObjects];
    }
  }
  v134[0] = MEMORY[0x1E4F143A8];
  v134[1] = 3221225472;
  v134[2] = __43__UICollectionView__updateVisibleCellsNow___block_invoke_499;
  v134[3] = &unk_1E52E53A8;
  v134[4] = self;
  v134[5] = a2;
  -[_UICollectionViewSubviewManager removeAllDequeuedViewsWithEnumerator:]((uint64_t)p_isa, (uint64_t)v134);

  return v3;
}

- (id)_visibleViewForLayoutAttributes:(id)a3
{
  if (a3)
  {
    __int16 v4 = *((_WORD *)a3 + 144);
    uint64_t v5 = 1;
    if ((v4 & 2) != 0) {
      uint64_t v5 = 2;
    }
    if (v4) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = v5;
    }
    objc_super v7 = (id **)-[UICollectionView _subviewManager]((id *)&self->super.super.super.super.isa);
    uint64_t v8 = *((void *)a3 + 1);
  }
  else
  {
    objc_super v7 = (id **)-[UICollectionView _subviewManager]((id *)&self->super.super.super.super.isa);
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  double v9 = -[UICollectionViewLayoutAttributes __indexPath](a3);
  return -[_UICollectionViewSubviewManager visibleViewOfKind:inCategory:atIndexPath:](v7, v8, v6, (uint64_t)v9);
}

- (id)_subviewManager
{
  if (a1)
  {
    a1 = (id *)a1[362];
    uint64_t v1 = vars8;
  }
  return a1;
}

- (void)_notifyWillDisplayCellIfNeeded:(id)a3 forIndexPath:(id)a4
{
  id v8 = a3;
  id v6 = a4;
  if (([v8 _hasNotifiedIsDisplaying] & 1) == 0)
  {
    if ((*(void *)&self->_collectionViewFlags & 0x100) != 0)
    {
      objc_super v7 = [(UICollectionView *)self _delegateProxy];
      [v7 collectionView:self willDisplayCell:v8 forItemAtIndexPath:v6];
    }
    [v8 _notifyIsDisplaying:1];
  }
}

- (uint64_t)_restoreOrAdjustContentOffsetIfNecessaryWithInsets:(char)a3 hasUpdatedVisibleCells:(double)a4 isRecursive:(double)a5
{
  uint64_t v112 = *MEMORY[0x1E4F143B8];
  if (!result) {
    return result;
  }
  uint64_t v9 = result;
  CGSize result = [*(id *)(result + 2064) _estimatesSizes];
  if ((result & 1) == 0)
  {
    [(id)v9 _clearContentOffsetRestorationAnchor];
    CGSize result = [(id)v9 _clearTargetIndexPathForScrolling];
  }
  int v10 = *(unsigned __int16 *)(v9 + 2648) | (*(unsigned __int8 *)(v9 + 2650) << 16);
  *(_WORD *)(v9 + 2648) = *(_WORD *)(v9 + 2648);
  *(unsigned char *)(v9 + 2650) = (v10 & 0xFFEFFFFF) >> 16;
  uint64_t v11 = *(void *)(v9 + 2936);
  if (v11)
  {
    if ([(id)v9 _validateScrollingTargetIndexPath:v11 raisingExceptionIfNecessary:0])
    {
      id v12 = *(id *)(v9 + 2936);
      if (!v12)
      {
        uint64_t v78 = [MEMORY[0x1E4F28B00] currentHandler];
        [v78 handleFailureInMethod:sel__contentOffsetForCurrentScrollingTargetWithContentInsets_, v9, @"UICollectionView.m", 5311, @"Invalid parameter not satisfying: %@", @"targetIndexPathForScrolling != nil" object file lineNumber description];
      }
      v120.origin.double x = -[UICollectionView _frameOfElementAtScrollingTargetIndexPath:](v9, v12);
      double width = v120.size.width;
      double height = v120.size.height;
      double x = v120.origin.x;
      double y = v120.origin.y;
      if (CGRectIsNull(v120))
      {
        uint64_t v79 = [MEMORY[0x1E4F28B00] currentHandler];
        uint64_t v80 = objc_opt_class();
        __int16 v81 = objc_msgSend(v12, "_ui_shortDescription");
        [v79 handleFailureInMethod:sel__contentOffsetForCurrentScrollingTargetWithContentInsets_, v9, @"UICollectionView.m", 5314, @"<%@ %p> received null frame for scrolling target at index path %@.\nCollection View: %@.\nLayout: %@", v80, v9, v81, v9, *(void *)(v9 + 2064) object file lineNumber description];
      }
      uint64_t v15 = [*(id *)(v9 + 2064) _layoutAxis];
      __int16 v16 = *(void **)(v9 + 2960);
      CGFloat v17 = *(double *)(v9 + 2968);
      CGFloat v18 = *(double *)(v9 + 2976);
      double v19 = *(double *)(v9 + 2984);
      double v20 = *(double *)(v9 + 2992);
      if (_UISizeEqualToSizeWithPrecision(v19, v20, width, height, 0.0001))
      {
        [(id)v9 contentOffset];
        double v22 = v21;
        double v24 = v23;
        double v25 = _UIPointValueForAxis(v15, x, y);
        double v26 = v25 + _UIPointValueForAxis(v15, *(double *)(v9 + 2944), *(double *)(v9 + 2952));
        if (v15 == 2) {
          double v27 = a4;
        }
        else {
          double v27 = a5;
        }
        double v28 = _UISetPointValueForAxis(v15, v22, v24, v26 - v27);
        uint64_t v30 = *(void *)(v9 + 2184);
        if (v30)
        {
          double v31 = *(double *)(v30 + 80);
          double v32 = *(double *)(v30 + 88);
        }
        else
        {
          double v32 = 0.0;
          double v31 = 0.0;
        }
        double v33 = -[UICollectionView _clampedContentOffset:forScrollableAreaGivenContentSize:inScrollView:](v9, (void *)v9, v28, v29, v31, v32);
        double v35 = v34;
      }
      else
      {
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A18);
        if (*(unsigned char *)CategoryCachedImpl)
        {
          v84 = *(NSObject **)(CategoryCachedImpl + 8);
          if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
          {
            id v85 = v84;
            v127.origin.double x = v17;
            v127.origin.double y = v18;
            v127.size.double width = v19;
            v127.size.double height = v20;
            v86 = NSStringFromCGRect(v127);
            v128.origin.double x = x;
            v128.origin.double y = y;
            v128.size.double width = width;
            v128.size.double height = height;
            uint64_t v87 = NSStringFromCGRect(v128);
            uint64_t v88 = objc_msgSend(v12, "_ui_shortDescription");
            *(_DWORD *)buf = 134218754;
            uint64_t v105 = v9;
            __int16 v106 = 2112;
            id v107 = v86;
            __int16 v108 = 2112;
            v109 = v87;
            __int16 v110 = 2112;
            v111 = v88;
            _os_log_impl(&dword_1853B0000, v85, OS_LOG_TYPE_ERROR, "_contentOffsetForCurrentScrollingTarget: cv == %p; updating scrolling target info for change in size of ta"
              "rget %@ from %@ to %@",
              buf,
              0x2Au);
          }
        }
        objc_msgSend((id)v9, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v12, v16, *(double *)(v9 + 3000), *(double *)(v9 + 3008), *(double *)(v9 + 3016), *(double *)(v9 + 3024));
        double v33 = v55;
        double v35 = v56;
        -[UICollectionView _storeScrollingTargetInfoForIndexPath:frame:scrollPosition:additionalInsets:]((id *)v9, v12, v16, x, y, width, height, *(double *)(v9 + 3000), *(double *)(v9 + 3008), *(double *)(v9 + 3016), *(double *)(v9 + 3024));
      }

      if ([(id)v9 isScrollAnimating])
      {
        unint64_t v57 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589F8);
        if (*(unsigned char *)v57)
        {
          int v89 = *(NSObject **)(v57 + 8);
          if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
          {
            unint64_t v90 = v89;
            v118.double x = v33;
            v118.double y = v35;
            uint64_t v91 = NSStringFromCGPoint(v118);
            CGFloat v92 = objc_msgSend(*(id *)(v9 + 2936), "_ui_shortDescription");
            *(_DWORD *)buf = 134218498;
            uint64_t v105 = v9;
            __int16 v106 = 2112;
            id v107 = v91;
            __int16 v108 = 2112;
            v109 = v92;
            _os_log_impl(&dword_1853B0000, v90, OS_LOG_TYPE_ERROR, "_adjustContentOffset: cv == %p; Updating scroll animation to target offset %@ for %@",
              buf,
              0x20u);
          }
        }
        return objc_msgSend((id)v9, "_updateScrollAnimationForChangedTargetOffset:", v33, v35);
      }
      unint64_t v58 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A00);
      if (*(unsigned char *)v58)
      {
        CGFloat v93 = *(NSObject **)(v58 + 8);
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR))
        {
          CGFloat v94 = v93;
          v119.double x = v33;
          v119.double y = v35;
          CGFloat v95 = NSStringFromCGPoint(v119);
          double v96 = objc_msgSend(*(id *)(v9 + 2936), "_ui_shortDescription");
          *(_DWORD *)buf = 134218498;
          uint64_t v105 = v9;
          __int16 v106 = 2112;
          id v107 = v95;
          __int16 v108 = 2112;
          v109 = v96;
          _os_log_impl(&dword_1853B0000, v94, OS_LOG_TYPE_ERROR, "_adjustContentOffset: cv == %p; Setting content offset to %@ for scrolling to %@",
            buf,
            0x20u);
        }
      }
      v59 = *(void **)(v9 + 3232);
      if (v59)
      {
        long long v60 = NSString;
        [(id)v9 contentOffset];
        long long v61 = NSStringFromCGPoint(v114);
        v115.double x = v33;
        v115.double y = v35;
        long long v62 = NSStringFromCGPoint(v115);
        long long v63 = objc_msgSend(*(id *)(v9 + 2936), "_ui_shortDescription");
        v64 = NSStringFromCGPoint(*(CGPoint *)(v9 + 2944));
        [(id)v9 _effectiveContentInset];
        v65 = NSStringFromUIEdgeInsets(v123);
        [(id)v9 safeAreaInsets];
        uint64_t v66 = NSStringFromUIEdgeInsets(v124);
        objc_msgSend(v60, "stringWithFormat:", @"content offset changing from %@ to %@ for scrolling to %@ with offset %@; effectiveInsets: %@; safeAreaInsets: %@",
          v61,
          v62,
          v63,
          v64,
          v65,
        unint64_t v67 = v66);
        [v59 recordGenericChangeWithMessage:v67];
      }
      int v49 = *(unsigned __int16 *)(v9 + 2648) | (*(unsigned __int8 *)(v9 + 2650) << 16);
      *(_WORD *)(v9 + 2648) = *(_WORD *)(v9 + 2648);
      *(unsigned char *)(v9 + 2650) = (v49 | 0x20000u) >> 16;
      unint64_t v50 = (void *)v9;
      double v51 = v33;
      double v52 = v35;
LABEL_36:
      CGSize result = objc_msgSend(v50, "setContentOffset:", v51, v52);
      int v68 = *(unsigned __int16 *)(v9 + 2648);
      unsigned int v69 = (v68 | (*(unsigned __int8 *)(v9 + 2650) << 16)) & 0xFFFDFFFF;
      *(_WORD *)(v9 + 2648) = v68;
      *(unsigned char *)(v9 + 2650) = (v69 | v49 & 0x20000) >> 16;
      return result;
    }
    unint64_t v53 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A08);
    if (*(unsigned char *)v53)
    {
      BOOL v82 = *(NSObject **)(v53 + 8);
      if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
      {
        v83 = *(void **)(v9 + 2936);
        *(_DWORD *)buf = 134218242;
        uint64_t v105 = v9;
        __int16 v106 = 2112;
        id v107 = v83;
        _os_log_impl(&dword_1853B0000, v82, OS_LOG_TYPE_ERROR, "_adjustContentOffset: cv == %p; Clearing invalid scrolling target %@",
          buf,
          0x16u);
      }
    }
    return [(id)v9 _clearTargetIndexPathForScrolling];
  }
  else if (*(void *)(v9 + 2912))
  {
    char v103 = 0;
    double v36 = [(UICollectionView *)v9 _contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets:a4 shouldApply:a5];
    if (v103)
    {
      double v38 = v36;
      double v39 = v37;
      uint64_t v40 = *(void **)(v9 + 3232);
      if (v40)
      {
        __int16 v41 = NSString;
        id v42 = objc_msgSend(*(id *)(v9 + 2912), "_ui_shortDescription");
        uint64_t v43 = NSStringFromCGPoint(*(CGPoint *)(v9 + 2920));
        unint64_t v44 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(v9 + 2184), *(void **)(v9 + 2912));
        [(id)v9 _effectiveContentInset];
        double v45 = NSStringFromUIEdgeInsets(v121);
        [(id)v9 safeAreaInsets];
        unint64_t v46 = NSStringFromUIEdgeInsets(v122);
        objc_msgSend(v41, "stringWithFormat:", @"Setting content offset for restoring relative scroll position to %@ with offset %@; attributes: %@; effectiveInsets: %@; safeAreaInsets: %@",
          v42,
          v43,
          v44,
          v45,
        unint64_t v47 = v46);
        [v40 recordGenericChangeWithMessage:v47];
      }
      if ((a2 & 1) == 0 && (a3 & 1) == 0)
      {
        BOOL v48 = [MEMORY[0x1E4F1CAA0] orderedSetWithObject:*(void *)(v9 + 2912)];
        -[UICollectionView _addIndexPathsRequiringPreferredAttributes:](v9, v48);
      }
      int v49 = *(unsigned __int16 *)(v9 + 2648) | (*(unsigned __int8 *)(v9 + 2650) << 16);
      *(_WORD *)(v9 + 2648) = *(_WORD *)(v9 + 2648);
      *(unsigned char *)(v9 + 2650) = (v49 | 0x20000u) >> 16;
      unint64_t v50 = (void *)v9;
      double v51 = v38;
      double v52 = v39;
      goto LABEL_36;
    }
    unint64_t v70 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A10);
    if (*(unsigned char *)v70)
    {
      double v97 = *(NSObject **)(v70 + 8);
      if (os_log_type_enabled(v97, OS_LOG_TYPE_ERROR))
      {
        double v98 = *(void **)(v9 + 2912);
        double v99 = v97;
        v100 = objc_msgSend(v98, "_ui_shortDescription");
        *(_DWORD *)buf = 134218242;
        uint64_t v105 = v9;
        __int16 v106 = 2112;
        id v107 = v100;
        _os_log_impl(&dword_1853B0000, v99, OS_LOG_TYPE_ERROR, "_adjustContentOffset: cv == %p; Clearing invalid restoration anchor %@",
          buf,
          0x16u);
      }
    }
    return [(id)v9 _clearContentOffsetRestorationAnchor];
  }
  else if ((v10 & 0x80000) != 0)
  {
    CGSize result = [(id)v9 isDragging];
    if ((result & 1) == 0)
    {
      if ([(id)v9 isDecelerating])
      {
        [(id)v9 contentOffset];
        [(id)v9 contentOffset];
        return objc_msgSend((id)v9, "_updateDecelerationLastOffset:");
      }
      else
      {
        v71 = *(void **)(v9 + 3232);
        if (v71)
        {
          uint64_t v72 = NSString;
          [(id)v9 contentOffset];
          v73 = NSStringFromCGPoint(v116);
          [(id)v9 contentSize];
          id v74 = NSStringFromCGSize(v117);
          [(id)v9 _effectiveContentInset];
          uint64_t v75 = NSStringFromUIEdgeInsets(v125);
          [(id)v9 safeAreaInsets];
          uint64_t v76 = NSStringFromUIEdgeInsets(v126);
          objc_msgSend(v72, "stringWithFormat:", @"Adjusting content offset after layout. Current contentOffset: %@; contentSize: %@; effectiveInsets: %@; safeAreaInsets: %@.",
            v73,
            v74,
            v75,
          uint64_t v77 = v76);
          [v71 recordGenericChangeWithMessage:v77];
        }
        return [(id)v9 _adjustContentOffsetIfNecessary];
      }
    }
  }
  return result;
}

- (void)_clearContentOffsetRestorationAnchor
{
  contentOffsetRestorationAnchor = self->_contentOffsetRestorationAnchor;
  self->_contentOffsetRestorationAnchor = 0;

  self->_offsetToContentOffsetRestorationAnchor = (CGPoint)*MEMORY[0x1E4F1DAD8];
}

- (void)_suspendReloads
{
}

- (void)_resumeReloads
{
  int64_t v2 = self->_reloadingSuspendedCount - 1;
  self->_reloadingSuspendedCount = v2;
  if (!v2)
  {
    uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
    if ((v3 & 0x80) != 0)
    {
      int v4 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
      *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v3 & 0xFFFFFFFFFFFFFF7FLL;
      *((_WORD *)&self->_collectionViewFlags + 8) = v4;
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v4);
      [(UICollectionView *)self reloadData];
    }
    else if ((v3 & 0x100) != 0)
    {
      [(UIScrollView *)self setNeedsLayout];
    }
  }
}

- (void)_resumeDidScrollNotifications
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v2 = *((void *)a1 + 352);
    if (v2 <= 0)
    {
      if (os_variant_has_internal_diagnostics())
      {
        uint64_t v11 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
        {
          int v18 = 138412290;
          double v19 = a1;
          _os_log_fault_impl(&dword_1853B0000, v11, OS_LOG_TYPE_FAULT, "Unbalanced calls to suspend/resumeDidScrollNotifications for collection view %@.", (uint8_t *)&v18, 0xCu);
        }
      }
      else
      {
        int v10 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258A90) + 8);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          int v18 = 138412290;
          double v19 = a1;
          _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_ERROR, "Unbalanced calls to suspend/resumeDidScrollNotifications for collection view %@.", (uint8_t *)&v18, 0xCu);
        }
      }
    }
    else
    {
      uint64_t v3 = v2 - 1;
      *((void *)a1 + 352) = v3;
      if (!v3)
      {
        [(CGFloat *)a1 contentOffset];
        CGFloat v6 = v5;
        CGFloat v7 = v4;
        if (a1[350] != v5 || a1[351] != v4)
        {
          unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A98);
          if (*(unsigned char *)CategoryCachedImpl)
          {
            id v12 = *(NSObject **)(CategoryCachedImpl + 8);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
            {
              CGFloat v13 = a1[350];
              CGFloat v14 = a1[351];
              uint64_t v15 = v12;
              v25.double x = v13;
              v25.double y = v14;
              __int16 v16 = NSStringFromCGPoint(v25);
              v26.double x = v6;
              v26.double y = v7;
              CGFloat v17 = NSStringFromCGPoint(v26);
              int v18 = 134218498;
              double v19 = a1;
              __int16 v20 = 2112;
              double v21 = v16;
              __int16 v22 = 2112;
              double v23 = v17;
              _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_ERROR, "cv == %p notifying didScroll for change in content offset from %@ to %@", (uint8_t *)&v18, 0x20u);
            }
          }
          [(CGFloat *)a1 _notifyDidScroll];
        }
      }
    }
  }
}

- (void)_removeVisibleViews:(id)a3 fadeForBoundsChange:(BOOL)a4
{
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke;
  v4[3] = &unk_1E52E4EE0;
  v4[4] = self;
  BOOL v5 = a4;
  -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)a3, (uint64_t)v4);
}

- (UICollectionViewCell)_currentPromiseFulfillmentCell
{
  return self->_currentPromiseFulfillmentCell;
}

- (void)_updateFocusAfterLoadingVisibleCellsIfNeeded:(id)a3
{
  id v4 = a3;
  BOOL v5 = v4;
  uint64_t v6 = *((void *)&self->_collectionViewFlags + 1);
  if ((v6 & 0x20000000000) != 0)
  {
    int v7 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v6 & 0xFFFFFDFFFFFFFFFFLL;
    *((_WORD *)&self->_collectionViewFlags + 8) = v7;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v7);
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __65__UICollectionView__updateFocusAfterLoadingVisibleCellsIfNeeded___block_invoke;
    v8[3] = &unk_1E52D9F98;
    v8[4] = self;
    id v9 = v4;
    +[UIView performWithoutAnimation:v8];
  }
}

- (void)_processViewSpecificInvalidationsForVisibleViews
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = self->_invalidatedItemIndexPaths;
  invalidatedItemIndexPaths = self->_invalidatedItemIndexPaths;
  self->_invalidatedItemIndexPaths = 0;

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = v3;
  uint64_t v5 = [(NSMutableSet *)obj countByEnumeratingWithState:&v38 objects:v43 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v31 = *(void *)v39;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v39 != v31) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v38 + 1) + 8 * v7);
        long long v34 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        long long v37 = 0u;
        id v9 = [(UICollectionView *)self _reorderedItems];
        uint64_t v10 = [v9 countByEnumeratingWithState:&v34 objects:v42 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v35;
          while (2)
          {
            for (uint64_t i = 0; i != v11; ++i)
            {
              if (*(void *)v35 != v12) {
                objc_enumerationMutation(v9);
              }
              CGFloat v14 = [*(id *)(*((void *)&v34 + 1) + 8 * i) targetIndexPath];
              char v15 = [v14 isEqual:v8];

              if (v15)
              {
                char v16 = 1;
                goto LABEL_16;
              }
            }
            uint64_t v11 = [v9 countByEnumeratingWithState:&v34 objects:v42 count:16];
            if (v11) {
              continue;
            }
            break;
          }
        }
        char v16 = 0;
LABEL_16:

        id v17 = [(UICollectionView *)self _visibleCellForIndexPath:v8];
        if (v17)
        {
          int v18 = v17;
          [v17 _invalidatePreferredAttributes];
          uint64_t v19 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v8);
          if (v19)
          {
            __int16 v20 = (void *)v19;
            [(UICollectionView *)self _checkForPreferredAttributesInView:v18 originalAttributes:v19];
            if ((v16 & 1) == 0) {
              [(UICollectionView *)self _applyLayoutAttributes:v20 toView:v18];
            }
          }
          else
          {
            if (([v18 _isInUpdateAnimation] & 1) == 0)
            {
              __int16 v22 = [MEMORY[0x1E4F28B00] currentHandler];
              double v23 = objc_msgSend(v8, "_ui_shortDescription");
              uint64_t v24 = [(UICollectionViewLayout *)self->_layout layoutAttributesForItemAtIndexPath:v8];
              CGPoint v25 = [v18 _layoutAttributes];
              CGPoint v26 = -[UICollectionViewData dataSourceCountsDescription](self->_collectionViewData);
              objc_msgSend(v22, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 6313, @"UICollectionView internal inconsistency: No attributes returned for invalidated item. Index path: %@; cell: %@; attributes from layout: %@; attributes from cell: %@; collection view: %@; data source counts: %@.",
                v23,
                v18,
                v24,
                v25,
                self,
                v26);
            }
            __int16 v20 = 0;
          }
        }
        else
        {
          uint64_t v21 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v8];
          __int16 v20 = (void *)v21;
          if (v21) {
            *(unsigned char *)(v21 + 8) |= 3u;
          }
        }

        ++v7;
      }
      while (v7 != v6);
      uint64_t v6 = [(NSMutableSet *)obj countByEnumeratingWithState:&v38 objects:v43 count:16];
    }
    while (v6);
  }

  invalidatedSupplementaryIndexPaths = self->_invalidatedSupplementaryIndexPaths;
  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  v33[2] = __68__UICollectionView__processViewSpecificInvalidationsForVisibleViews__block_invoke;
  v33[3] = &unk_1E52E5498;
  v33[4] = self;
  v33[5] = a2;
  [(NSMutableDictionary *)invalidatedSupplementaryIndexPaths enumerateKeysAndObjectsUsingBlock:v33];
  invalidatedDecorationIndexPaths = self->_invalidatedDecorationIndexPaths;
  v32[0] = MEMORY[0x1E4F143A8];
  v32[1] = 3221225472;
  v32[2] = __68__UICollectionView__processViewSpecificInvalidationsForVisibleViews__block_invoke_2;
  v32[3] = &unk_1E52E5498;
  v32[4] = self;
  v32[5] = a2;
  [(NSMutableDictionary *)invalidatedDecorationIndexPaths enumerateKeysAndObjectsUsingBlock:v32];
}

- (void)_setUpCompletionHandlerForAnimationInterruptionIfNecessary
{
  if (+[UIView _isInAnimationBlockWithAnimationsEnabled])
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __78__UICollectionView__setUpCompletionHandlerForAnimationInterruptionIfNecessary__block_invoke;
    v3[3] = &unk_1E52DC3A0;
    v3[4] = self;
    +[UIView _addCompletion:v3];
  }
}

- (id)_visibleCellForIndexPath:(id)a3
{
  id v4 = (id **)-[UICollectionView _subviewManager]((id *)&self->super.super.super.super.isa);
  return -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](v4, (uint64_t)a3);
}

- (unint64_t)_createVisibleViewsForAttributes:(id)a3 fadeForBoundsChange:(BOOL)a4 notifyLayoutForVisibleCellsPass:(BOOL)a5
{
  BOOL v27 = a5;
  BOOL v5 = a4;
  id v7 = a3;
  if ([v7 count])
  {
    if (([(UICollectionViewLayout *)self->_layout _estimatesSizes]
       || [(UICollectionViewLayout *)self->_layout _estimatesSupplementaryItems])
      && dyld_program_sdk_at_least()
      && ((_UIInternalPreferenceUsesDefault(&_UIInternalPreference_CollectionViewLimitsCellsCreatedPerPass, @"CollectionViewLimitsCellsCreatedPerPass", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool) & 1) != 0|| byte_1EB256F0C))
    {
      [(UICollectionView *)self _sortAttributesByDistanceToVisibleBoundsOrigin:v7];
      unsigned int v25 = 1;
    }
    else
    {
      unsigned int v25 = 0;
    }
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
    do
    {
      if (v9 == 2) {
        uint64_t v11 = 0;
      }
      else {
        uint64_t v11 = v25;
      }
      uint64_t v26 = _createVisibleViewsForAttributes_fadeForBoundsChange_notifyLayoutForVisibleCellsPass__categories[v9];
      uint64_t v12 = -[UICollectionView _layoutAttributes:filteredForCategory:](self, "_layoutAttributes:filteredForCategory:", v7);
      if ([v12 count])
      {
        do
        {
          [(UICollectionView *)self _createVisibleViewsForSingleCategoryAttributes:v12 limitCreation:v11 fadeForBoundsChange:v5];
          v8 += v28;
          if ((v29 & 1) == 0) {
            break;
          }
          uint64_t v13 = v10[442];
          CGFloat v14 = (char *)self + v13;
          unint64_t v15 = *(void *)((char *)&self->super.super.super._responderFlags + v13);
          if ((v15 & 0x80) == 0)
          {
            int v16 = *((unsigned __int16 *)v14 + 8) | (v14[18] << 16);
            uint64_t v17 = *(void *)v14;
            unint64_t v18 = v15 & 0xFFFFFFFFFFFFFEFFLL;
            *(void *)CGFloat v14 = *(void *)v14;
            *((void *)v14 + 1) = v15 & 0xFFFFFFFFFFFFFEFFLL;
            *((_WORD *)v14 + 8) = v16;
            v14[18] = BYTE2(v16);
            if (v27)
            {
              [(UIScrollView *)self contentOffset];
              -[UICollectionViewLayout _didPerformUpdateVisibleCellsPassWithLayoutOffset:](self->_layout, "_didPerformUpdateVisibleCellsPassWithLayoutOffset:", v19 - self->_lastLayoutOffset.x, v20 - self->_lastLayoutOffset.y);
              [(UICollectionViewLayout *)self->_layout _willPerformUpdateVisibleCellsPass];
              int v16 = *(unsigned __int16 *)((char *)&self->super.super.super.__layeringSceneIdentity + v13) | (*((unsigned __int8 *)&self->super.super.super.__layeringSceneIdentity + v13 + 2) << 16);
              uint64_t v17 = *(uint64_t *)((char *)&self->super.super.super.super.isa + v13);
              unint64_t v18 = *(void *)((char *)&self->super.super.super._responderFlags + v13);
            }
            unint64_t v15 = v18 | v15 & 0x100;
            uint64_t v21 = (char *)self + v13;
            *((_WORD *)v21 + 8) = v16;
            *(void *)uint64_t v21 = v17;
            *((void *)v21 + 1) = v15;
            v21[18] = BYTE2(v16);
            if ((v18 & 0x100) != 0)
            {
              uint64_t v22 = [(UICollectionView *)self _updatedNewlyAppearingLayoutAttributesForCurrentVisibleBounds:v5];

              uint64_t v23 = [(UICollectionView *)self _layoutAttributes:v22 filteredForCategory:v26];

              unint64_t v15 = *((void *)v21 + 1);
              uint64_t v12 = (void *)v23;
              id v7 = (id)v22;
            }
            uint64_t v10 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
          }
        }
        while ((v15 & 0x80) == 0);
      }

      ++v9;
    }
    while (v9 != 3);
  }
  else
  {
    unint64_t v8 = 0;
  }

  return v8;
}

- (id)_layoutAttributes:(id)a3 filteredForCategory:(unint64_t)a4
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  uint64_t v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v5, "count"));
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v7 = v5;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v18 + 1) + 8 * v11);
        if (v12)
        {
          __int16 v13 = *(_WORD *)(v12 + 288);
          if ((v13 & 2) != 0) {
            uint64_t v14 = 2;
          }
          else {
            uint64_t v14 = 1;
          }
          if (v13) {
            uint64_t v15 = 0;
          }
          else {
            uint64_t v15 = v14;
          }
        }
        else
        {
          uint64_t v15 = 0;
        }
        if (v15 == a4) {
          [v6 addObject:(void)v18];
        }
        ++v11;
      }
      while (v9 != v11);
      uint64_t v16 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
      uint64_t v9 = v16;
    }
    while (v16);
  }

  return v6;
}

- (void)_startViewAnimationsWithContext:(id)a3 oldVisibleViews:(id)a4 viewAnimator:(id)a5 viewAnimationsCompletedDispatchGroup:(id)a6
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = a3;
  id v35 = a4;
  id v37 = a5;
  uint64_t v11 = a6;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  if (v10) {
    uint64_t v12 = (void *)v10[1];
  }
  else {
    uint64_t v12 = 0;
  }
  id obj = v12;
  uint64_t v13 = [obj countByEnumeratingWithState:&v45 objects:v50 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v46;
    do
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v46 != v15) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v45 + 1) + 8 * i);
        long long v18 = [v17 view];
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          [v18 _addUpdateAnimation];
          [v35 removeObject:v18];
          if (([v17 deleteAfterAnimation] & 1) == 0)
          {
            long long v19 = [v17 finalLayoutAttributes];

            if (v19)
            {
              long long v20 = [v17 finalLayoutAttributes];
              [(UICollectionView *)self _setVisibleView:v18 forLayoutAttributes:v20];
            }
          }
        }
        [(UICollectionView *)self _incrementUpdateAnimationCountWithContext:v10];
        if (v11) {
          dispatch_group_enter(v11);
        }
        v42[0] = MEMORY[0x1E4F143A8];
        v42[1] = 3221225472;
        v42[2] = __118__UICollectionView__startViewAnimationsWithContext_oldVisibleViews_viewAnimator_viewAnimationsCompletedDispatchGroup___block_invoke;
        v42[3] = &unk_1E52DAF68;
        v42[4] = self;
        uint64_t v43 = v10;
        uint64_t v44 = v11;
        [v17 addCompletionHandler:v42];
        long long v21 = (void *)[v37 copy];
        [v17 startWithAnimator:v21];
      }
      uint64_t v14 = [obj countByEnumeratingWithState:&v45 objects:v50 count:16];
    }
    while (v14);
  }

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v22 = v35;
  uint64_t v23 = [v22 countByEnumeratingWithState:&v38 objects:v49 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v39;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v39 != v25) {
          objc_enumerationMutation(v22);
        }
        BOOL v27 = *(void **)(*((void *)&v38 + 1) + 8 * v26);
        char v28 = [v27 _isInUpdateAnimation];
        char v29 = [v27 _layoutAttributes];
        uint64_t v30 = v29;
        if (v28)
        {

          if (!v30) {
            goto LABEL_31;
          }
          uint64_t v31 = [v27 _layoutAttributes];
          [(UICollectionView *)self _setVisibleView:v27 forLayoutAttributes:v31];
          goto LABEL_29;
        }
        if (!v29 || (__int16 v32 = v29[144], v29, (v32 & 1) == 0))
        {
          [(UICollectionView *)self _reuseSupplementaryView:v27];
          goto LABEL_31;
        }
        if (dyld_program_sdk_at_least())
        {
          uint64_t v31 = [v27 _layoutAttributes];
          double v33 = [v31 indexPath];
          [(UICollectionView *)self _cacheOrReuseCell:v27 forIndexPath:v33 invalidatePreferredAttributes:1 notifyDidEndDisplaying:1];

LABEL_29:
          goto LABEL_31;
        }
        [(UICollectionView *)self _reuseCell:v27];
LABEL_31:
        ++v26;
      }
      while (v24 != v26);
      uint64_t v34 = [v22 countByEnumeratingWithState:&v38 objects:v49 count:16];
      uint64_t v24 = v34;
    }
    while (v34);
  }
}

- (void)_incrementUpdateAnimationCountWithContext:(id)a3
{
  id v4 = a3;
  if (v4) {
    ++v4[2];
  }

  ++self->_updateAnimationCount;
}

- (void)_setVisibleView:(id)a3 forLayoutAttributes:(id)a4
{
  uint64_t v6 = a4;
  id v14 = a3;
  if (v6)
  {
    __int16 v7 = *((_WORD *)v6 + 144);
    uint64_t v8 = 1;
    if ((v7 & 2) != 0) {
      uint64_t v8 = 2;
    }
    if (v7) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = v8;
    }
    uint64_t v10 = v6[1];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  subviewManager = self->_subviewManager;
  uint64_t v12 = -[UICollectionViewLayoutAttributes __indexPath](v6);

  uint64_t v13 = v14;
  if (subviewManager)
  {
    -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v14, v10, v9, (uint64_t)v12);
    uint64_t v13 = v14;
  }
}

- (void)_reusableViewDidInvalidateIntrinsicContentSize:(id)a3
{
  v17[1] = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (self)
  {
    if (_UISupportsIntrinsicContentSizeInvalidation())
    {
      if ((*((_WORD *)&self->_collectionViewFlags + 8) & 0x18) != 0)
      {
        unint64_t v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | ((unint64_t)*((unsigned __int8 *)&self->_collectionViewFlags
                                                                                         + 18) << 16);
        if (((v5 >> 7) & 3) < _UIMaximumIntrinsicContentSizeInvalidationUpdatesPerCommit()
          && !(*((void *)&self->_collectionViewFlags + 1) & 0x10000000 | *((_WORD *)&self->_collectionViewFlags + 8) & 1)
          && !self->_cellBeingReconfigured)
        {
          uint64_t v6 = [v4 _layoutAttributes];
          __int16 v7 = v6;
          if (!v6)
          {
            [v4 _isHiddenForReuse];
            goto LABEL_22;
          }
          if (v6[144])
          {
            uint64_t v8 = [v6 indexPath];
            if (!v8)
            {
LABEL_21:

LABEL_22:
              goto LABEL_23;
            }
            uint64_t v13 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v8];
            if (v13)
            {
              uint64_t v10 = (void *)v13;
              *(unsigned char *)(v13 + 8) |= 3u;
            }
            else
            {
              if (([v4 _isHiddenForReuse] & 1) == 0)
              {
                [(UICollectionView *)self _setNeedsRecomputePreferredAttributesForInvalidatedElements];
                intrinsicContentSizeInvalidationContext = self->_intrinsicContentSizeInvalidationContext;
                v17[0] = v8;
                uint64_t v15 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:1];
                [(UICollectionViewLayoutInvalidationContext *)intrinsicContentSizeInvalidationContext invalidateItemsAtIndexPaths:v15];
              }
              uint64_t v10 = 0;
            }
          }
          else
          {
            if (([v4 _isHiddenForReuse] & 1) != 0 || (v7[144] & 3) != 0) {
              goto LABEL_22;
            }
            uint64_t v8 = [v7 indexPath];
            uint64_t v9 = -[UIBarButtonItemGroup _items]((id *)v7);
            uint64_t v10 = (void *)v9;
            if (v8 && v9)
            {
              [(UICollectionView *)self _setNeedsRecomputePreferredAttributesForInvalidatedElements];
              uint64_t v11 = self->_intrinsicContentSizeInvalidationContext;
              uint64_t v16 = v8;
              uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v16 count:1];
              [(UICollectionViewLayoutInvalidationContext *)v11 invalidateSupplementaryElementsOfKind:v10 atIndexPaths:v12];
            }
          }

          goto LABEL_21;
        }
      }
    }
  }
LABEL_23:
}

- (void)_setNeedsRecomputePreferredAttributesForInvalidatedElements
{
  if (!self->_intrinsicContentSizeInvalidationContext)
  {
    uint64_t v3 = (UICollectionViewLayoutInvalidationContext *)objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
    intrinsicContentSizeInvalidationContext = self->_intrinsicContentSizeInvalidationContext;
    self->_intrinsicContentSizeInvalidationContext = v3;

    [(UIScrollView *)self setNeedsLayout];
  }
  BOOL v5 = +[UIView areAnimationsEnabled];
  int v6 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFFDF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (v5 | ((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | ((unint64_t)*((unsigned __int8 *)&self->_collectionViewFlags
                                                                                          + 18) << 16)) >> 5) & 1)
    __int16 v7 = 32;
  else {
    __int16 v7 = 0;
  }
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v6);
  *((_WORD *)&self->_collectionViewFlags + 8) = v7 | v6;
}

void __43__UICollectionView__updateVisibleCellsNow___block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    *(unsigned char *)(a3 + 8) |= 1u;
  }
}

- (BOOL)_updatePreferredAttributesForItemsInCurrentUpdate:(id)a3 rect:(CGRect)a4
{
  CGFloat height = a4.size.height;
  CGFloat width = a4.size.width;
  CGFloat y = a4.origin.y;
  CGFloat x = a4.origin.x;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v9 = a3;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v37 objects:v41 count:16];
  if (!v10)
  {
    LOBYTE(v12) = 0;
    goto LABEL_34;
  }
  uint64_t v11 = v10;
  int v12 = 0;
  uint64_t v13 = *(void *)v38;
  id v14 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
  id v36 = v9;
  do
  {
    uint64_t v15 = 0;
    do
    {
      if (*(void *)v38 != v13) {
        objc_enumerationMutation(v9);
      }
      uint64_t v16 = *(void *)(*((void *)&v37 + 1) + 8 * v15);
      uint64_t v17 = v14[441];
      long long v18 = objc_msgSend(*(id *)((char *)&self->super.super.super.super.isa + v17), "layoutAttributesForItemAtIndexPath:", v16, v36);
      long long v19 = v18;
      if (v18)
      {
        long long v20 = *(Class *)((char *)&self->super.super.super.super.isa + v17);
        [v18 frame];
        objc_msgSend(v20, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v19);
        v44.origin.CGFloat x = v21;
        v44.origin.CGFloat y = v22;
        v44.size.CGFloat width = v23;
        v44.size.CGFloat height = v24;
        v43.origin.CGFloat x = x;
        v43.origin.CGFloat y = y;
        v43.size.CGFloat width = width;
        v43.size.CGFloat height = height;
        if (CGRectIntersectsRect(v43, v44))
        {
          if (dyld_program_sdk_at_least())
          {
            id v25 = [(UICollectionViewUpdate *)self->_currentUpdate initialIndexPathForFinalIndexPath:v16];
            if (v25)
            {
              uint64_t v26 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v25);
              if (v26)
              {
                BOOL v27 = (void *)v26;
                v12 |= [(UICollectionView *)self _updatePreferredAttributesForReusableViewInCurrentUpdate:v26 withOriginalAttributes:v19 isExistingView:1];

                goto LABEL_17;
              }
            }
            uint64_t v28 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v16];
            char v29 = (void *)v28;
            if (v28) {
              uint64_t v30 = *(void **)(v28 + 24);
            }
            else {
              uint64_t v30 = 0;
            }
            id v31 = v30;

            if (v31)
            {
              if ([(UICollectionView *)self _updatePrefetchItemIfNeeded:v29 forIndexPath:v16 withLayoutAttributes:0 willDisplay:0])
              {

                id v9 = v36;
LABEL_17:
                id v14 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
LABEL_26:

                goto LABEL_27;
              }
              [(NSMutableDictionary *)self->_prefetchCacheItems removeObjectForKey:v16];
              if (v29) {
                __int16 v32 = (void *)v29[3];
              }
              else {
                __int16 v32 = 0;
              }
              id v33 = v32;
              [(UICollectionView *)self _reusePrefetchedCell:v33];
            }
            id v9 = v36;
            id v14 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
          }
          id v25 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v16 withLayoutAttributes:v19 applyAttributes:1 isFocused:0 notify:0];
          v12 |= [(UICollectionView *)self _updatePreferredAttributesForReusableViewInCurrentUpdate:v25 withOriginalAttributes:v19 isExistingView:0];
          if (([v25 _isInUpdateAnimation] & 1) == 0)
          {
            if (dyld_program_sdk_at_least()) {
              [(UICollectionView *)self _cacheOrReuseCell:v25 forIndexPath:v16 invalidatePreferredAttributes:0 notifyDidEndDisplaying:0];
            }
            else {
              [(UICollectionView *)self _reuseCell:v25 notifyDidEndDisplaying:0];
            }
          }
          goto LABEL_26;
        }
      }
LABEL_27:

      ++v15;
    }
    while (v11 != v15);
    uint64_t v34 = [v9 countByEnumeratingWithState:&v37 objects:v41 count:16];
    uint64_t v11 = v34;
  }
  while (v34);
LABEL_34:

  return v12 & 1;
}

uint64_t __67__UICollectionView__sortAttributesByDistanceToVisibleBoundsOrigin___block_invoke(uint64_t a1, void *a2, void *a3)
{
  if (*(unsigned char *)(a1 + 56)) {
    double v5 = -[UICollectionView _layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:](*(void *)(a1 + 32), a2);
  }
  else {
    [a2 frame];
  }
  CGFloat v9 = v5;
  CGFloat v10 = v6;
  CGFloat v11 = v7;
  CGFloat v12 = v8;
  if (*(unsigned char *)(a1 + 56)) {
    double v13 = -[UICollectionView _layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:](*(void *)(a1 + 32), a3);
  }
  else {
    [a3 frame];
  }
  CGFloat v17 = v13;
  CGFloat v18 = v14;
  CGFloat v19 = v15;
  CGFloat v20 = v16;
  UIDistanceBetweenPointAndRect(*(CGFloat *)(a1 + 40), *(CGFloat *)(a1 + 48), v9, v10, v11, v12);
  double v22 = v21;
  UIDistanceBetweenPointAndRect(*(CGFloat *)(a1 + 40), *(CGFloat *)(a1 + 48), v17, v18, v19, v20);
  if (v22 >= v23) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = -1;
  }
  if (v22 > v23) {
    return 1;
  }
  else {
    return v24;
  }
}

- (double)_layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:(uint64_t)a1
{
  if (!a1) {
    return 0.0;
  }
  [a2 frame];
  double v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  if ([*(id *)(a1 + 2064) _hasOrthogonalScrollingSections])
  {
    CGFloat v12 = [a2 indexPath];
    uint64_t v13 = [v12 section];

    double v14 = [*(id *)(a1 + 2064) _orthogonalScrollingSections];
    int v15 = [v14 containsIndex:v13];

    if (v15)
    {
      [*(id *)(a1 + 2064) _offsetForOrthogonalScrollingSection:v13];
      double v17 = v16;
      v20.origin.CGFloat x = v5;
      v20.origin.CGFloat y = v7;
      v20.size.CGFloat width = v9;
      v20.size.CGFloat height = v11;
      CGFloat v18 = CGRectGetMinX(v20) - v17;
      v21.origin.CGFloat x = v5;
      v21.origin.CGFloat y = v7;
      v21.size.CGFloat width = v9;
      v21.size.CGFloat height = v11;
      CGRectGetMinY(v21);
      v22.origin.CGFloat x = v5;
      v22.origin.CGFloat y = v7;
      v22.size.CGFloat width = v9;
      v22.size.CGFloat height = v11;
      CGRectGetWidth(v22);
      v23.origin.CGFloat x = v5;
      v23.origin.CGFloat y = v7;
      v23.size.CGFloat width = v9;
      v23.size.CGFloat height = v11;
      CGRectGetHeight(v23);
      return v18;
    }
  }
  return v5;
}

- (id)_subviewRouterForOrthogonalScrollViewAtSection:(int64_t)a3
{
  double v5 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  uint64_t v6 = [(UICollectionView *)self _sectionContainerViewForSectionIndex:a3 createIfNecessary:1];
  CGFloat v7 = (void *)v6;
  if (v6)
  {
    id v8 = *(id *)(v6 + 408);

    double v5 = v8;
  }

  return v5;
}

- (id)_sectionContainerViewForSectionIndex:(int64_t)a3 createIfNecessary:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v7 = -[UICollectionViewLayout _sectionDescriptorForSectionIndex:](self->_layout, "_sectionDescriptorForSectionIndex:");
  id v8 = (void *)v7;
  if (v7 && *(unsigned char *)(v7 + 8))
  {
    uint64_t v20 = 0;
    CGRect v21 = &v20;
    uint64_t v22 = 0x3032000000;
    CGRect v23 = __Block_byref_object_copy__41;
    uint64_t v24 = __Block_byref_object_dispose__41;
    sectionToContainerViewMap = self->_sectionToContainerViewMap;
    double v10 = [NSNumber numberWithInteger:a3];
    id v25 = [(NSMutableDictionary *)sectionToContainerViewMap objectForKeyedSubscript:v10];

    CGFloat v11 = (void *)v21[5];
    if (v11) {
      BOOL v12 = 1;
    }
    else {
      BOOL v12 = !v4;
    }
    if (!v12)
    {
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 3221225472;
      v15[2] = __75__UICollectionView__sectionContainerViewForSectionIndex_createIfNecessary___block_invoke;
      v15[3] = &unk_1E52E5070;
      CGFloat v18 = &v20;
      id v16 = v8;
      double v17 = self;
      int64_t v19 = a3;
      +[UIView performWithoutAnimation:v15];

      CGFloat v11 = (void *)v21[5];
    }
    id v13 = v11;
    _Block_object_dispose(&v20, 8);
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

- (void)_updateVerticalScrollIndicatorVisibility
{
  uint64_t v3 = [(UIView *)self traitCollection];
  uint64_t v4 = [v3 userInterfaceIdiom];

  if (v4 == 6)
  {
    double v5 = [(UIView *)self traitCollection];
    uint64_t v6 = [v5 _hasSplitViewControllerContextPrimaryColumn] ^ 1;

    [(UIScrollView *)self _setDefaultShowsVerticalScrollIndicator:v6];
  }
}

- (BOOL)_prefetchingEnabledDefault
{
  return 1;
}

void __49__UICollectionView__invalidateLayoutWithContext___block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    *(unsigned char *)(a3 + 8) |= 3u;
  }
}

- (BOOL)_updatePreferredAttributesForReusableViewInCurrentUpdate:(id)a3 withOriginalAttributes:(id)a4 isExistingView:(BOOL)a5
{
  BOOL v5 = a5;
  id v9 = a3;
  id v10 = a4;
  if dyld_program_sdk_at_least() && ([v9 _arePreferredAttributesValid])
  {
    BOOL v11 = 0;
  }
  else
  {
    if (!v9)
    {
      id v16 = [MEMORY[0x1E4F28B00] currentHandler];
      objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 12294, @"UICollectionView internal inconsistency. Attempting to update preferred attributes for nil view. Collection view: %@; Original attributes: %@",
        self,
        v10);
    }
    BOOL v12 = (void *)[v10 copy];
    if (!v12)
    {
      double v17 = [MEMORY[0x1E4F28B00] currentHandler];
      [v17 handleFailureInMethod:a2, self, @"UICollectionView.m", 12297, @"UICollectionView internal inconsistency: missing original layout attributes necessary to update preferred attributes for view: %@", v9 object file lineNumber description];
    }
    [(UICollectionViewLayout *)self->_layout _prepareForPreferredAttributesQueryForView:v9 withLayoutAttributes:v12];
    currentUpdate = self->_currentUpdate;
    if ((!currentUpdate || (*(unsigned char *)&currentUpdate->_flags & 2) == 0)
      && !+[UIView _isInAnimationBlockWithAnimationsEnabled])
    {
      BOOL v5 = 0;
    }
    double v14 = [v9 _preferredLayoutAttributesFittingAttributes:v12 isAnimatingExistingView:v5];
    if (!v14)
    {
      CGFloat v18 = [MEMORY[0x1E4F28B00] currentHandler];
      [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 12306, @"UICollectionView internal inconsistency: reusable view %@ returning nil preferred layout attributes for fitting attributes: %@", v9, 0 object file lineNumber description];
    }
    [(UICollectionViewLayout *)self->_layout _postProcessPreferredAttributes:v14 forView:v9];
    [(UICollectionViewLayout *)self->_layout shouldInvalidateLayoutForPreferredLayoutAttributes:v14 withOriginalAttributes:v10];

    BOOL v11 = 1;
  }

  return v11;
}

- (BOOL)_updatePreferredAttributesForItemsInCurrentUpdateWithRect:(CGRect)a3 newlyVisible:(id)a4 includeInserts:(BOOL)a5
{
  BOOL v5 = a5;
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v40 = a4;
  id v11 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  if (v5)
  {
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    BOOL v12 = self->_insertItems;
    uint64_t v13 = [(NSMutableArray *)v12 countByEnumeratingWithState:&v45 objects:v55 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)v46;
      long long v41 = v12;
      uint64_t v42 = self;
      do
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v46 != v15) {
            objc_enumerationMutation(v12);
          }
          double v17 = *(void **)(*((void *)&v45 + 1) + 8 * i);
          if (v17 && v17[6] == 0x7FFFFFFFFFFFFFFFLL)
          {
            uint64_t v18 = v17[3];
            int64_t v19 = self->_currentUpdate->_newModel;
            if (v18 < -[UICollectionViewData numberOfSections]((uint64_t)v19))
            {
              uint64_t v20 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v19, v18);
              if (v20 >= 1)
              {
                uint64_t v21 = v20;
                for (uint64_t j = 0; j != v21; ++j)
                {
                  CGRect v23 = [MEMORY[0x1E4F28D58] indexPathForItem:j inSection:v18];
                  [v11 addObject:v23];
                }
                BOOL v12 = v41;
                self = v42;
              }
            }
          }
          else
          {
            int64_t v19 = [v17 indexPathAfterUpdate];
            [v11 addObject:v19];
          }
        }
        uint64_t v14 = [(NSMutableArray *)v12 countByEnumeratingWithState:&v45 objects:v55 count:16];
      }
      while (v14);
    }
  }
  subviewManager = self->_subviewManager;
  v43[0] = MEMORY[0x1E4F143A8];
  v43[1] = 3221225472;
  v43[2] = __106__UICollectionView__updatePreferredAttributesForItemsInCurrentUpdateWithRect_newlyVisible_includeInserts___block_invoke;
  v43[3] = &unk_1E52E5AB8;
  v43[4] = self;
  id v25 = v11;
  id v44 = v25;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v43);
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B68);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    __int16 v32 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      id v33 = v32;
      uint64_t v34 = [v40 valueForKey:@"_ui_shortDescription"];
      id v35 = [v25 valueForKey:@"_ui_shortDescription"];
      *(_DWORD *)buf = 134218498;
      unint64_t v50 = self;
      __int16 v51 = 2112;
      double v52 = v34;
      __int16 v53 = 2112;
      long long v54 = v35;
      _os_log_impl(&dword_1853B0000, v33, OS_LOG_TYPE_ERROR, "_updatePreferredAttributesForCurrentUpdate: cv == %p; indexPathsBecomingVisible == %@; indexPathsToRecompute == %@",
        buf,
        0x20u);
    }
  }
  unint64_t v27 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258B70);
  if (*(unsigned char *)v27)
  {
    id v36 = *(NSObject **)(v27 + 8);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
    {
      long long v37 = v36;
      long long v38 = [v40 valueForKey:@"_ui_shortDescription"];
      long long v39 = [v25 valueForKey:@"_ui_shortDescription"];
      *(_DWORD *)buf = 134218498;
      unint64_t v50 = self;
      __int16 v51 = 2112;
      double v52 = v38;
      __int16 v53 = 2112;
      long long v54 = v39;
      _os_log_impl(&dword_1853B0000, v37, OS_LOG_TYPE_ERROR, "[UICV %p] _updatePreferredAttributesForCurrentUpdate indexPathsBecomingVisible = %@; indexPathsToRecompute = %@",
        buf,
        0x20u);
    }
  }
  if ([v40 count]) {
    [v25 unionSet:v40];
  }
  if ([(NSMutableOrderedSet *)self->_indexPathsRequiringPreferredAttributes count])
  {
    uint64_t v28 = [(NSMutableOrderedSet *)self->_indexPathsRequiringPreferredAttributes set];
    [v25 unionSet:v28];

    indexPathsRequiringPreferredAttributes = self->_indexPathsRequiringPreferredAttributes;
    self->_indexPathsRequiringPreferredAttributes = 0;
  }
  BOOL v30 = -[UICollectionView _updatePreferredAttributesForItemsInCurrentUpdate:rect:](self, "_updatePreferredAttributesForItemsInCurrentUpdate:rect:", v25, x, y, width, height);

  return v30;
}

- (void)_performDiffableUpdate:(id)a3
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ((*((void *)&self->_collectionViewFlags + 1) & 4) == 0)
  {
    _UIIsPrivateMainBundle();
    if (dyld_program_sdk_at_least())
    {
      uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
      [v6 handleFailureInMethod:a2, self, @"UICollectionView.m", 17152, @"Attempted to apply updates to a collection view from a UICollectionViewDiffableDataSource, but the collection view's dataSource is not the UICollectionViewDiffableDataSource. Collection view: %@", self object file lineNumber description];
    }
    else if (os_variant_has_internal_diagnostics())
    {
      id v8 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v10 = self;
        _os_log_fault_impl(&dword_1853B0000, v8, OS_LOG_TYPE_FAULT, "Attempted to apply updates to a collection view from a UICollectionViewDiffableDataSource, but the collection view's dataSource is not the UICollectionViewDiffableDataSource. Collection view: %@  This will become an assert in a future version.", buf, 0xCu);
      }
    }
    else
    {
      uint64_t v7 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_performDiffableUpdate____s_category) + 8);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v10 = self;
        _os_log_impl(&dword_1853B0000, v7, OS_LOG_TYPE_ERROR, "Attempted to apply updates to a collection view from a UICollectionViewDiffableDataSource, but the collection view's dataSource is not the UICollectionViewDiffableDataSource. Collection view: %@  This will become an assert in a future version.", buf, 0xCu);
      }
    }
  }
  [(UICollectionView *)self _performInternalBatchUpdates:v5];
}

- (void)_performInternalBatchUpdates:(id)a3
{
  uint64_t v3 = (char *)&self->_collectionViewFlags + 16;
  __int16 v4 = *((_WORD *)&self->_collectionViewFlags + 8);
  *((unsigned char *)&self->_collectionViewFlags + 18) = *((unsigned char *)&self->_collectionViewFlags + 18);
  *((_WORD *)&self->_collectionViewFlags + 8) = v4 | 4;
  (*((void (**)(id, SEL))a3 + 2))(a3, a2);
  int v5 = *(_WORD *)v3 & 0xFFFB | (v3[2] << 16);
  *(_WORD *)uint64_t v3 = *(_WORD *)v3 & 0xFFFB | v4 & 4;
  v3[2] = BYTE2(v5);
}

- (void)performBatchUpdates:(void *)updates completion:(void *)completion
{
}

- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6 animator:(id)a7 animationHandler:(id)a8
{
  BOOL v26 = a6;
  uint64_t v13 = (void (**)(void))a3;
  id v14 = a4;
  id v27 = a7;
  id updateCompletionHandler = self->_updateCompletionHandler;
  id v16 = a8;
  id v17 = a5;
  uint64_t v18 = _Block_copy(updateCompletionHandler);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __123__UICollectionView__performBatchUpdates_completion_invalidationContext_tentativelyForReordering_animator_animationHandler___block_invoke;
  aBlock[3] = &unk_1E52E45A0;
  id v19 = v18;
  id v29 = v19;
  id v20 = v14;
  id v30 = v20;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = self->_updateCompletionHandler;
  self->_id updateCompletionHandler = v21;

  if (((*((void *)&self->_collectionViewFlags + 1) & 4) == 0 || (dyld_program_sdk_at_least() & 1) == 0)
    && ![(UICollectionView *)self _shouldSkipForcedLayoutBeforeBatchUpdates])
  {
    [(UIView *)self layoutBelowIfNeeded];
  }
  [(UICollectionView *)self _beginUpdates];
  if (v13)
  {
    CGRect v23 = self->_reconfigureAnimator;
    objc_storeStrong((id *)&self->_reconfigureAnimator, a7);
    v13[2](v13);
    reconfigureAnimator = self->_reconfigureAnimator;
    self->_reconfigureAnimator = v23;
  }
  id v25 = -[_UICollectionViewAnimator initWithHandler:]([_UICollectionViewAnimator alloc], v16);

  [(UICollectionView *)self _endUpdatesWithInvalidationContext:v17 tentativelyForReordering:v26 animator:v27 collectionViewAnimator:v25];
}

- (void)_endUpdatesWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5 collectionViewAnimator:(id)a6
{
  int64_t v6 = self->_updateCount - 1;
  self->_updateCount = v6;
  if (!v6) {
    [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:a3 tentativelyForReordering:a4 animator:a5 collectionViewAnimator:a6];
  }
}

- (void)_beginUpdates
{
  int64_t updateCount = self->_updateCount;
  if (!updateCount)
  {
    [(UICollectionView *)self _setupCellAnimations];
    int64_t updateCount = self->_updateCount;
  }
  self->_int64_t updateCount = updateCount + 1;
}

- (void)_setupCellAnimations
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  p_collectionViewFlags = &self->_collectionViewFlags;
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x1000000000) != 0)
  {
    if (os_variant_has_internal_diagnostics())
    {
      int v5 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
      {
        int v6 = 138412290;
        uint64_t v7 = self;
        _os_log_fault_impl(&dword_1853B0000, v5, OS_LOG_TYPE_FAULT, "UICollectionView client error: attempting to perform update while UICollectionView is updating its visible views. This will result in undefined behavior. Collection view: %@", (uint8_t *)&v6, 0xCu);
      }
    }
    else
    {
      __int16 v4 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_setupCellAnimations___s_category) + 8);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        int v6 = 138412290;
        uint64_t v7 = self;
        _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "UICollectionView client error: attempting to perform update while UICollectionView is updating its visible views. This will result in undefined behavior. Collection view: %@", (uint8_t *)&v6, 0xCu);
      }
    }
  }
  [(UICollectionViewLayout *)self->_layout _collectionViewWillPerformPendingLayoutBeforeUpdate];
  [(UICollectionView *)self _updateVisibleCellsNow:0];
  -[UICollectionViewData _prepareToLoadData]((uint64_t)self->_collectionViewData);
  *((void *)p_collectionViewFlags + 1) |= 0x400000000uLL;
  [(UICollectionView *)self _suspendReloads];
}

- (UICollectionViewUpdateItem)_expectedDiffableUpdateItem
{
  if (dyld_program_sdk_at_least()) {
    expectedDiffableUpdateItem = self->_expectedDiffableUpdateItem;
  }
  else {
    expectedDiffableUpdateItem = 0;
  }
  return expectedDiffableUpdateItem;
}

- (void)reconfigureItemsAtIndexPaths:(NSArray *)indexPaths
{
  int v5 = indexPaths;
  if (!(*((_WORD *)&self->_collectionViewFlags + 8) & 4 | ~*((_DWORD *)&self->_collectionViewFlags + 2) & 4))
  {
    BOOL v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, self, @"UICollectionView.m", 10262, @"UICollectionView must be updated via the UICollectionViewDiffableDataSource APIs when acting as the UICollectionView's dataSource: please do not call mutation APIs directly on UICollectionView. %@", self object file lineNumber description];
  }
  int v6 = [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:v5];
  [(UICollectionView *)self _reloadDataIfNeeded];
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v7 & 0x400000000) == 0) {
    [(UICollectionView *)self _setupCellAnimations];
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __49__UICollectionView_reconfigureItemsAtIndexPaths___block_invoke;
  aBlock[3] = &unk_1E52D9F98;
  id v8 = v6;
  id v14 = v8;
  uint64_t v15 = self;
  id v9 = (void (**)(void))_Block_copy(aBlock);
  if (!+[UIView areAnimationsEnabled])
  {
    v9[2](v9);
    if ((v7 & 0x400000000) != 0) {
      goto LABEL_11;
    }
LABEL_10:
    [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:0];
    goto LABEL_11;
  }
  reconfigureAnimator = self->_reconfigureAnimator;
  if (reconfigureAnimator)
  {
    [(UIViewPropertyAnimator *)reconfigureAnimator addAnimations:v9];
    if ((v7 & 0x400000000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (dyld_program_sdk_at_least()) {
    uint64_t v11 = 6;
  }
  else {
    uint64_t v11 = 4;
  }
  +[UIView animateWithDuration:v11 delay:v9 options:0 animations:0.3 completion:0.0];
  if ((v7 & 0x400000000) == 0) {
    goto LABEL_10;
  }
LABEL_11:
}

- (id)_indexPathsAfterShadowUpdatesForIndexPaths:(id)a3 allowingAppendingInserts:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    id v7 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v6, "count"));
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v8 = v6;
    uint64_t v9 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v16 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = -[_UICollectionViewShadowUpdatesController indexPathAfterShadowUpdates:allowingAppendingInserts:](self->_dragAndDropController, "indexPathAfterShadowUpdates:allowingAppendingInserts:", *(void *)(*((void *)&v15 + 1) + 8 * i), v4, (void)v15);
          if (v13) {
            [v7 addObject:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v10);
    }
  }
  else
  {
    id v7 = v6;
  }

  return v7;
}

- (id)_indexPathsAfterShadowUpdatesForIndexPaths:(id)a3
{
  return [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:a3 allowingAppendingInserts:0];
}

- (void)insertSections:(NSIndexSet *)sections
{
  id v4 = [(UICollectionView *)self _sectionIndexesAfterShadowUpdatesForSectionIndexes:sections allowingAppendingInserts:1];
  [(UICollectionView *)self _updateSections:v4 updateAction:0];
}

- (void)_updateSections:(id)a3 updateAction:(int)a4
{
  uint64_t v4 = *(void *)&a4;
  id v7 = a3;
  if (!(*((_WORD *)&self->_collectionViewFlags + 8) & 4 | ~*((_DWORD *)&self->_collectionViewFlags + 2) & 4))
  {
    uint64_t v11 = [MEMORY[0x1E4F28B00] currentHandler];
    [v11 handleFailureInMethod:a2, self, @"UICollectionView.m", 10085, @"UICollectionView must be updated via the UICollectionViewDiffableDataSource APIs when acting as the UICollectionView's dataSource: please do not call mutation APIs directly on UICollectionView. %@", self object file lineNumber description];
  }
  [(UICollectionView *)self _reloadDataIfNeeded];
  uint64_t v8 = *((void *)&self->_collectionViewFlags + 1);
  if ((v8 & 0x400000000) == 0) {
    [(UICollectionView *)self _setupCellAnimations];
  }
  uint64_t v9 = [(UICollectionView *)self _arrayForUpdateAction:v4];
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __49__UICollectionView__updateSections_updateAction___block_invoke;
  v12[3] = &unk_1E52E58E0;
  int v14 = v4;
  id v10 = v9;
  id v13 = v10;
  [v7 enumerateIndexesUsingBlock:v12];
  if ((v8 & 0x400000000) == 0) {
    [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:0];
  }
}

- (id)_sectionIndexesAfterShadowUpdatesForSectionIndexes:(id)a3 allowingAppendingInserts:(BOOL)a4
{
  id v6 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    uint64_t v11 = 0;
    BOOL v12 = &v11;
    uint64_t v13 = 0x3032000000;
    int v14 = __Block_byref_object_copy__41;
    long long v15 = __Block_byref_object_dispose__41;
    id v16 = objc_alloc_init(MEMORY[0x1E4F28E60]);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __96__UICollectionView__sectionIndexesAfterShadowUpdatesForSectionIndexes_allowingAppendingInserts___block_invoke;
    v9[3] = &unk_1E52E5C80;
    BOOL v10 = a4;
    v9[4] = self;
    v9[5] = &v11;
    [v6 enumerateIndexesUsingBlock:v9];
    id v7 = (id)v12[5];
    _Block_object_dispose(&v11, 8);
  }
  else
  {
    id v7 = v6;
  }

  return v7;
}

- (BOOL)_shouldSkipForcedLayoutBeforeBatchUpdates
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 13) & 1;
}

- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)a3
{
  return [(UICollectionView *)self _indexPathsForVisibleSupplementaryViewsOfKind:a3 isDecorationView:0];
}

- (void)_cacheOrReuseCell:(id)a3 forIndexPath:(id)a4 invalidatePreferredAttributes:(BOOL)a5 notifyDidEndDisplaying:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = (UICollectionReusableView *)a3;
  id v12 = a4;
  if (!v11)
  {
    BOOL v26 = [MEMORY[0x1E4F28B00] currentHandler];
    [v26 handleFailureInMethod:a2, self, @"UICollectionView.m", 9795, @"Invalid parameter not satisfying: %@", @"cell != nil" object file lineNumber description];
  }
  if (os_variant_has_internal_diagnostics())
  {
    if (!v12)
    {
      id v27 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v35 = (UICollectionView *)v11;
        _os_log_fault_impl(&dword_1853B0000, v27, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: index path cannot be nil. Cell: %@", buf, 0xCu);
      }
    }
  }
  else if (!v12)
  {
    uint64_t v28 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258AB8) + 8);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v35 = (UICollectionView *)v11;
      _os_log_impl(&dword_1853B0000, v28, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: index path cannot be nil. Cell: %@", buf, 0xCu);
    }
  }
  if ((-[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)self->_subviewManager, v11) & 1) == 0)
  {
    subviewManager = self->_subviewManager;
    if (!subviewManager
      || !-[_UICollectionViewSubviewCollection containsView:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v11))
    {
      if (v12
        && [(UICollectionView *)self _prefetchingAllowed]
        && [(UICollectionView *)self _indexPathIsValid:v12])
      {
        uint64_t v14 = [(UICollectionView *)self _focusedItemState];
        long long v15 = (void *)v14;
        if (v14) {
          id v16 = *(void **)(v14 + 8);
        }
        else {
          id v16 = 0;
        }
        long long v17 = v16;
        long long v18 = v17;
        if (v17 == v11
          || self->_firstResponderView == v11
          || (*((void *)&self->_collectionViewFlags + 1) & 0x10000000) != 0)
        {
        }
        else
        {
          BOOL v19 = -[_UICollectionViewDragAndDropController isCellInvolvedInDragOrDropAnimation:atIndexPath:]((BOOL)self->_dragAndDropController, v11, (uint64_t)v12);

          if (!v19)
          {
            uint64_t v20 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v12];

            if (!v20)
            {
              uint64_t v21 = [_UICollectionViewPrefetchItem alloc];
              id v22 = [(UICollectionReusableView *)v11 _layoutAttributes];
              CGRect v23 = -[_UICollectionViewPrefetchItem initWithAttributes:]((id *)&v21->super.isa, v22);

              -[_UIHomeAffordanceObservationRecord setLegacyViewServiceSessionIdentifier:]((uint64_t)v23, v11);
              if (v7 && v23) {
                *((unsigned char *)v23 + 8) |= 3u;
              }
              [(UICollectionReusableView *)v11 _setHiddenForReuse:1];
              [(NSMutableDictionary *)self->_prefetchCacheItems setObject:v23 forKeyedSubscript:v12];
              unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258AC0);
              if (*(unsigned char *)CategoryCachedImpl)
              {
                id v29 = *(NSObject **)(CategoryCachedImpl + 8);
                if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                {
                  id v30 = v29;
                  id v31 = objc_msgSend(v12, "_ui_shortDescription");
                  __int16 v32 = [NSNumber numberWithBool:v7];
                  id v33 = [(UICollectionReusableView *)v11 _layoutAttributes];
                  *(_DWORD *)buf = 134219010;
                  id v35 = self;
                  __int16 v36 = 2112;
                  long long v37 = v11;
                  __int16 v38 = 2112;
                  long long v39 = v31;
                  __int16 v40 = 2112;
                  long long v41 = v32;
                  __int16 v42 = 2112;
                  CGRect v43 = v33;
                  _os_log_impl(&dword_1853B0000, v30, OS_LOG_TYPE_ERROR, "[UICV %p] _cacheOrReuseCell:%@ indexPath:%@ invalidatePreferredAttrs:%@ cellAttrs: %@", buf, 0x34u);
                }
              }
              if (v6) {
                [(UICollectionView *)self _notifyDidEndDisplayingCellIfNeeded:v11 forIndexPath:v12];
              }

              goto LABEL_30;
            }
          }
        }
      }
      if (![(UICollectionView *)self _reuseCell:v11 notifyDidEndDisplaying:v6])
      {
        if (dyld_program_sdk_at_least())
        {
          id v25 = [(UIView *)v11 superview];

          if (v25) {
            -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:]((uint64_t)self->_subviewManager, (uint64_t)v11, (uint64_t)v12);
          }
        }
      }
    }
  }
LABEL_30:
}

void __118__UICollectionView__startViewAnimationsWithContext_oldVisibleViews_viewAnimator_viewAnimationsCompletedDispatchGroup___block_invoke(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) _updateAnimationDidStop:*(void *)(a1 + 40) finished:a2];
  uint64_t v3 = *(NSObject **)(a1 + 48);
  if (v3)
  {
    dispatch_group_leave(v3);
  }
}

- (void)_updateAnimationDidStop:(id)a3 finished:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  BOOL v6 = a3;
  [(UICollectionView *)self _decrementUpdateAnimationCountWithContext:v6];
  if (v6)
  {
    if (v6[2]) {
      goto LABEL_63;
    }
    BOOL v70 = v4;
    long long v78 = 0u;
    long long v79 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    v71 = v6;
    BOOL v7 = (void *)v6[1];
  }
  else
  {
    BOOL v70 = v4;
    v71 = 0;
    BOOL v7 = 0;
    long long v78 = 0u;
    long long v79 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
  }
  id v8 = v7;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v76 objects:v80 count:16];
  if (!v9) {
    goto LABEL_52;
  }
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)v77;
  id v73 = v8;
  uint64_t v74 = *(void *)v77;
  do
  {
    uint64_t v12 = 0;
    uint64_t v75 = v10;
    do
    {
      if (*(void *)v77 != v11) {
        objc_enumerationMutation(v8);
      }
      uint64_t v13 = *(void **)(*((void *)&v76 + 1) + 8 * v12);
      uint64_t v14 = [v13 view];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        [v14 _clearUpdateAnimation];
        if ([v13 resetRasterizationAfterAnimation])
        {
          uint64_t v15 = [v13 rasterizeAfterAnimation];
          id v16 = [v14 layer];
          [v16 setShouldRasterize:v15];
        }
        [(UICollectionView *)self _visibleBounds];
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        CGFloat v24 = v23;
        layout = self->_layout;
        BOOL v26 = [v14 _layoutAttributes];
        [v14 frame];
        -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v26);
        CGFloat v28 = v27;
        CGFloat v30 = v29;
        CGFloat v32 = v31;
        CGFloat v34 = v33;

        id v35 = [v14 _layoutAttributes];
        __int16 v36 = v35;
        if (v35)
        {
          __int16 v37 = *((_WORD *)v35 + 144);
          uint64_t v38 = 1;
          if ((v37 & 2) != 0) {
            uint64_t v38 = 2;
          }
          int v39 = v37 & 1;
          if (v39) {
            uint64_t v40 = 0;
          }
          else {
            uint64_t v40 = v38;
          }
          unint64_t v41 = *((void *)&self->_collectionViewFlags + 1);
          uint64_t v42 = (v41 >> 28) & 1;
          if (((v41 >> 28) & 1) == 0 && v39)
          {
LABEL_20:
            CGRect v43 = [v35 indexPath];
            LOBYTE(v42) = ![(UICollectionView *)self _indexPathIsValid:v43];

            uint64_t v40 = 0;
          }
        }
        else
        {
          if ((*((void *)&self->_collectionViewFlags + 1) & 0x10000000) == 0) {
            goto LABEL_20;
          }
          uint64_t v40 = 0;
          LOBYTE(v42) = 1;
        }
        if (([v14 _isInUpdateAnimation] & 1) == 0
          && ([v13 deleteAfterAnimation] & 1) == 0)
        {
          if (v42) {
            goto LABEL_25;
          }
          v82.origin.double x = v28;
          v82.origin.double y = v30;
          v82.size.double width = v32;
          v82.size.double height = v34;
          v83.origin.double x = v18;
          v83.origin.double y = v20;
          v83.size.double width = v22;
          v83.size.double height = v24;
          if (!CGRectIntersectsRect(v82, v83))
          {
LABEL_25:
            uint64_t v44 = -[UIBarButtonItemGroup _items](v36);
            subviewManager = (id **)self->_subviewManager;
            long long v46 = [v36 indexPath];
            long long v47 = -[_UICollectionViewSubviewManager visibleViewOfKind:inCategory:atIndexPath:](subviewManager, (uint64_t)v44, v40, (uint64_t)v46);

            BOOL v48 = 0;
            if (dyld_program_sdk_at_least() && !v40)
            {
              int v49 = [v36 indexPath];
              BOOL v48 = [(UICollectionView *)self _isReorderingItemAtIndexPath:v49];

              id v8 = v73;
            }
            if (v47 == v14 && !v48)
            {
              unint64_t v50 = self->_subviewManager;
              __int16 v51 = [v36 indexPath];
              if (v50) {
                -[_UICollectionViewSubviewCollection removeViewOfKind:inCategory:atIndexPath:](&v50->_visibleViews->super.isa, (uint64_t)v44, v40, (uint64_t)v51);
              }

              id v8 = v73;
            }
          }
        }
        double v52 = self->_subviewManager;
        if (v52 && -[_UICollectionViewSubviewCollection containsView:]((uint64_t)v52->_visibleViews, (uint64_t)v14))
        {
          uint64_t v10 = v75;
          if (dyld_program_sdk_at_least()
            && [v13 updateZIndexAfterAnimation])
          {
            __int16 v53 = [v14 _layoutAttributes];
            -[UICollectionView _addControlledSubview:atZIndex:forced:initialAttributes:](self, "_addControlledSubview:atZIndex:forced:initialAttributes:", v14, [v53 zIndex], 1, 0);
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v10 = v75;
          if (([v14 _isInUpdateAnimation] & 1) == 0)
          {
            if ([v13 viewType] == 1)
            {
              [(UICollectionView *)self _reuseCell:v14];
            }
            else if ([v13 viewType] == 2)
            {
              [(UICollectionView *)self _reuseSupplementaryView:v14];
            }
            else
            {
              __int16 v53 = [MEMORY[0x1E4F28B00] currentHandler];
              [v53 handleFailureInMethod:a2, self, @"UICollectionView.m", 12983, @"UICollectionView finished animating a view of unknown type: %@", v14 object file lineNumber description];
LABEL_45:
            }
          }
        }

        uint64_t v11 = v74;
      }

      ++v12;
    }
    while (v10 != v12);
    uint64_t v54 = [v8 countByEnumeratingWithState:&v76 objects:v80 count:16];
    uint64_t v10 = v54;
  }
  while (v54);
LABEL_52:

  [(UICollectionViewLayout *)self->_layout collectionViewContentSize];
  -[UICollectionView setContentSize:](self, "setContentSize:");
  BOOL v6 = v71;
  if (v71)
  {
    id v55 = (id)v71[3];
    uint64_t v56 = v55;
    if (v55) {
      (*((void (**)(id, BOOL))v55 + 2))(v55, v70);
    }
  }
  else
  {
    uint64_t v56 = 0;
  }
  [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  uint64_t v57 = [(UICollectionView *)self _focusedItemState];
  unint64_t v58 = (void *)v57;
  if (v57 && (id v59 = *(id *)(v57 + 8)) != 0)
  {
    long long v60 = v59;
    long long v61 = [(UIView *)self traitCollection];
    uint64_t v62 = [v61 userInterfaceIdiom];

    if (v62 == 3)
    {
      unint64_t v58 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:self];
      long long v63 = [v58 scrollManager];
      v64 = [(UIScrollView *)self _focusTuple];
      uint64_t v65 = [(UICollectionView *)self _focusedItemState];
      uint64_t v66 = (void *)v65;
      if (v65) {
        unint64_t v67 = *(void **)(v65 + 8);
      }
      else {
        unint64_t v67 = 0;
      }
      id v68 = v67;
      [v63 animateOffsetOfScrollableContainersInParentEnvironmentContainer:v64 toShowFocusItem:v68];

      goto LABEL_61;
    }
  }
  else
  {
LABEL_61:
  }
LABEL_63:
  unsigned int v69 = [(UIView *)self _focusSystem];

  if (v69) {
    [(UICollectionView *)self _highlightFirstVisibleItemIfAppropriate];
  }
}

- (void)_decrementUpdateAnimationCountWithContext:(id)a3
{
  BOOL v4 = a3;
  if (v4) {
    --v4[2];
  }

  int64_t updateAnimationCount = self->_updateAnimationCount;
  BOOL v6 = updateAnimationCount < 1;
  int64_t v7 = updateAnimationCount - 1;
  if (!v6) {
    self->_int64_t updateAnimationCount = v7;
  }
}

- (BOOL)_indexPathIsValid:(id)a3 allowSectionItemSentinel:(BOOL)a4
{
  if (!a3) {
    return 0;
  }
  unint64_t v7 = [a3 section];
  unint64_t v8 = [a3 item];
  if ([(UICollectionView *)self numberOfSections] <= v7) {
    return 0;
  }
  unint64_t v9 = [(UICollectionView *)self numberOfItemsInSection:v7];
  BOOL v10 = v8 == 0x7FFFFFFFFFFFFFFFLL && a4;
  return v9 > v8 || v10;
}

- (BOOL)_indexPathIsValid:(id)a3
{
  return [(UICollectionView *)self _indexPathIsValid:a3 allowSectionItemSentinel:0];
}

uint64_t __123__UICollectionView__performBatchUpdates_completion_invalidationContext_tentativelyForReordering_animator_animationHandler___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, a2);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    int v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

- (id)_viewAnimationsForCurrentUpdateWithCollectionViewAnimator:(id)a3 updatingContentOffsetForRestorationAnchor:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  unint64_t v41 = (id *)a3;
  currentUpdate = self->_currentUpdate;
  if (!currentUpdate || (*(unsigned char *)&currentUpdate->_flags & 2) == 0)
  {
    id v35 = [MEMORY[0x1E4F28B00] currentHandler];
    [v35 handleFailureInMethod:a2, self, @"UICollectionView.m", 11081, @"UICollectionView internal inconsistency: attempted to generate view animations for an update which is not animated. Collection view: %@", self, v41 object file lineNumber description];
  }
  uint64_t v42 = -[_UICollectionViewSubviewManager allVisibleViewsHashTable]((id **)self->_subviewManager);
  if ([(UICollectionViewLayout *)self->_layout _estimatesSizes]
    && dyld_program_sdk_at_least())
  {
    [(UICollectionView *)self _updatePreferredAttributesForCurrentUpdate];
  }
  if (v4)
  {
    if (self->_contentOffsetRestorationAnchor)
    {
      char v43 = 0;
      [(UIScrollView *)self _contentInsetIncludingDecorations];
      double v10 = [(UICollectionView *)(uint64_t)self _contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets:v8 shouldApply:v9];
      if (v43)
      {
        double v12 = v10;
        double v13 = v11;
        uint64_t v14 = self->_currentUpdate;
        v14->_newContentOffset.double x = v10;
        v14->_newContentOffset.double y = v11;
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_viewAnimationsForCurrentUpdateWithCollectionViewAnimator_updatingContentOffsetForRestorationAnchor____s_category);
        if (*(unsigned char *)CategoryCachedImpl)
        {
          __int16 v36 = *(NSObject **)(CategoryCachedImpl + 8);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
          {
            contentOffsetRestorationAnchor = self->_contentOffsetRestorationAnchor;
            uint64_t v38 = v36;
            int v39 = [(NSIndexPath *)contentOffsetRestorationAnchor _ui_shortDescription];
            v52.double x = v12;
            v52.double y = v13;
            uint64_t v40 = NSStringFromCGPoint(v52);
            *(_DWORD *)buf = 134218498;
            long long v45 = self;
            __int16 v46 = 2112;
            long long v47 = v39;
            __int16 v48 = 2112;
            int v49 = v40;
            _os_log_impl(&dword_1853B0000, v38, OS_LOG_TYPE_ERROR, "_viewAnimationsForCurrentUpdate: cv == %p; readjusting content offset for anchor %@. New content offset: %@",
              buf,
              0x20u);
          }
        }
        int v16 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                        + 18) << 16);
        *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
        *((unsigned char *)&self->_collectionViewFlags + 18) = (v16 | 0x20000u) >> 16;
        -[UICollectionView setContentOffset:](self, "setContentOffset:", v12, v13);
        int v17 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
        unsigned int v18 = (v17 | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16)) & 0xFFFDFFFF;
        *((_WORD *)&self->_collectionViewFlags + 8) = v17;
        *((unsigned char *)&self->_collectionViewFlags + 18) = (v18 | v16 & 0x20000) >> 16;
      }
    }
  }
  double v19 = objc_alloc_init(_UICollectionViewSubviewCollection);
  [(UICollectionView *)self _populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate:v19 addingDeletedViewsToSet:0 updateLayoutAttributesIndexPaths:0];
  id v20 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  double v21 = objc_opt_new();
  CGFloat v22 = objc_opt_new();
  double v23 = objc_opt_new();
  [(UICollectionView *)self _createAndAppendViewAnimationsForDeletesInCurrentUpdate:v20 disappearingAnimations:v22];
  [(UICollectionView *)self _createAndAppendViewAnimationsForInsertsInCurrentUpdate:v20 appearingAnimations:v21 newSubviewCollection:v19];
  newModel = self->_currentUpdate->_newModel;
  [(UICollectionView *)self _visibleBounds];
  double v29 = -[UICollectionViewData layoutAttributesForElementsInRect:](newModel, v25, v26, v27, v28);
  [(UICollectionView *)self _createAndAppendViewAnimationsForExistingAndNewlyVisibleItemsInCurrentUpdate:v20 animationsForOnScreenViews:v23 newSubviewCollection:v19 oldVisibleViews:v42 attributesForNewModel:v29];
  [(UICollectionView *)self _createAndAppendViewAnimationsForExistingAndDeletedAuxiliariesInCurrentUpdate:v20 disappearingAnimations:v22 animationsForOnScreenViews:v23 newSubviewCollection:v19 oldVisibleViews:v42];
  [(UICollectionView *)self _createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate:v20 appearingAnimations:v21 newSubviewCollection:v19];
  [(UICollectionView *)self _createAndAppendViewAnimationsForNewlyVisibleAuxiliariesInCurrentUpdate:v20 appearingAnimations:v21 animationsForOnScreenViews:v23 newSubviewCollection:v19 attributesForNewModel:v29];
  if (dyld_program_sdk_at_least()
    && [(UICollectionViewLayout *)self->_layout _wantsUntrackedAnimationCleanupForAuxillaryItems])
  {
    [(UICollectionView *)self _removeUntrackedAuxillaryViewsForBeforeVisibleViews:self->_subviewManager afterVisibleViews:v19 withTrackingViewAnimations:v20];
  }
  CGFloat v30 = [(UICollectionView *)self indexPathsForVisibleItems];
  -[_UICollectionViewSubviewManager replaceVisibleViewsWithoutCopyingWithContentsOfSubviewCollection:]((uint64_t)self->_subviewManager, (id *)&v19->super.isa);
  double v31 = [(UICollectionView *)self indexPathsForVisibleItems];
  subviewManager = self->_subviewManager;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)&__block_literal_global_889);
  }
  [(UICollectionView *)self _updateOrderingOfViewsInDisappearingViewAnimations:v22 onScreenViewAnimations:v23];
  if (dyld_program_sdk_at_least())
  {
    double v33 = -[UIBarButtonItemGroup _items](v41);
    -[_UICollectionLayoutItemSolver setSolveResult:]((uint64_t)v33, v21);
    -[_UICollectionLayoutListAttributes setSeparatorVisualEffect:]((uint64_t)v33, v22);
    -[UIBackgroundConfiguration _setImage:]((uint64_t)v33, v30);
    -[_UIDocumentUnavailableConfiguration setDocumentTargetView:]((uint64_t)v33, v31);
    -[_UICollectionViewAnimationContext setAnimationsForOnScreenViews:]((uint64_t)v33, v23);
    [(UICollectionView *)self _setupExpandCollapseAnimationsIfNeededWithContext:v33];
  }
  return v20;
}

- (NSArray)indexPathsForVisibleItems
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    [(UICollectionView *)self _reloadDataIfNeeded];
    uint64_t v3 = [(UICollectionView *)self visibleCells];
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v15 != v8) {
            objc_enumerationMutation(v5);
          }
          double v10 = objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "_layoutAttributes", (void)v14);
          double v11 = [v10 indexPath];

          double v12 = [(UICollectionView *)self _translatePresentationIndexPathToDataSourceIndexPathAsNeeded:v11];
          if (v12) {
            [v4 addObject:v12];
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v7);
    }
  }
  else
  {
    id v4 = [(UICollectionView *)self _indexPathsForVisibleItems];
  }
  return (NSArray *)v4;
}

- (id)_indexPathsForVisibleItems
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  subviewManager = (uint64_t *)self->_subviewManager;
  return -[_UICollectionViewSubviewManager indexPathsForVisibleCells](subviewManager);
}

- (void)_cellBackgroundChangedForSelectionOrHighlight:(id)a3
{
  id v5 = [(UICollectionView *)self _indexPathForCell:a3];
  if (v5)
  {
    id v4 = [(UICollectionView *)self collectionViewLayout];
    [v4 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:v5 separatorOnly:0];
  }
}

- (NSIndexPath)indexPathForCell:(UICollectionViewCell *)cell
{
  id v4 = [(UICollectionView *)self _indexPathForView:cell ofType:0];
  id v5 = [(UICollectionView *)self _translatePresentationIndexPathToDataSourceIndexPathAsNeeded:v4];

  return (NSIndexPath *)v5;
}

- (id)_translatePresentationIndexPathToDataSourceIndexPathAsNeeded:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    id v5 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathBeforeShadowUpdates:v4];
  }
  else
  {
    id v5 = v4;
  }
  uint64_t v6 = v5;

  return v6;
}

- (id)_indexPathForCell:(id)a3
{
  return [(UICollectionView *)self _indexPathForView:a3 ofType:0];
}

- (void)_ensureFocusedViewIsNotHidden
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = [(UICollectionView *)self _focusedItemState];
  id v4 = (void *)v3;
  if (v3) {
    id v5 = *(void **)(v3 + 8);
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    layout = self->_layout;
    uint64_t v8 = [v6 _layoutAttributes];
    [v6 frame];
    -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v8);
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;

    if ([v6 _isHiddenForReuse])
    {
      [(UICollectionView *)self _visibleBounds];
      CGFloat x = v44.origin.x;
      CGFloat y = v44.origin.y;
      CGFloat width = v44.size.width;
      CGFloat height = v44.size.height;
      if (!CGRectIsNull(v44))
      {
        v45.origin.CGFloat x = v10;
        v45.origin.CGFloat y = v12;
        v45.size.CGFloat width = v14;
        v45.size.CGFloat height = v16;
        if (!CGRectIsNull(v45))
        {
          v46.origin.CGFloat x = x;
          v46.origin.CGFloat y = y;
          v46.size.CGFloat width = width;
          v46.size.CGFloat height = height;
          CGRect v47 = CGRectStandardize(v46);
          CGFloat v21 = v47.origin.x;
          CGFloat v22 = v47.origin.y;
          CGFloat v23 = v47.size.width;
          CGFloat v24 = v47.size.height;
          v47.origin.CGFloat x = v10;
          v47.origin.CGFloat y = v12;
          v47.size.CGFloat width = v14;
          v47.size.CGFloat height = v16;
          CGRect v48 = CGRectStandardize(v47);
          CGFloat v25 = v48.origin.x;
          CGFloat v26 = v48.origin.y;
          CGFloat v27 = v48.size.width;
          CGFloat v28 = v48.size.height;
          CGFloat v39 = v22;
          CGFloat v40 = v21;
          v48.origin.CGFloat x = v21;
          v48.origin.CGFloat y = v22;
          v48.size.CGFloat width = v23;
          v48.size.CGFloat height = v24;
          CGFloat v29 = CGRectGetMinX(v48) + 0.0001;
          v49.origin.CGFloat x = v25;
          v49.origin.CGFloat y = v26;
          v49.size.CGFloat width = v27;
          v49.size.CGFloat height = v28;
          if (v29 <= CGRectGetMaxX(v49))
          {
            v50.origin.CGFloat y = v39;
            v50.origin.CGFloat x = v21;
            v50.size.CGFloat width = v23;
            v50.size.CGFloat height = v24;
            CGFloat v31 = CGRectGetMaxX(v50) + -0.0001;
            v51.origin.CGFloat x = v25;
            v51.origin.CGFloat y = v26;
            v51.size.CGFloat width = v27;
            v51.size.CGFloat height = v28;
            BOOL v30 = v31 >= CGRectGetMinX(v51);
          }
          else
          {
            BOOL v30 = 0;
          }
          v52.origin.CGFloat x = v21;
          v52.origin.CGFloat y = v39;
          v52.size.CGFloat width = v23;
          v52.size.CGFloat height = v24;
          CGFloat v32 = CGRectGetMinY(v52) + 0.0001;
          v53.origin.CGFloat x = v25;
          v53.origin.CGFloat y = v26;
          v53.size.CGFloat width = v27;
          v53.size.CGFloat height = v28;
          if (v32 <= CGRectGetMaxY(v53))
          {
            v54.origin.CGFloat x = v40;
            v54.origin.CGFloat y = v39;
            v54.size.CGFloat width = v23;
            v54.size.CGFloat height = v24;
            CGFloat v33 = CGRectGetMaxY(v54) + -0.0001;
            v55.origin.CGFloat x = v25;
            v55.origin.CGFloat y = v26;
            v55.size.CGFloat width = v27;
            v55.size.CGFloat height = v28;
            if (v33 >= CGRectGetMinY(v55) && v30)
            {
              int has_internal_diagnostics = os_variant_has_internal_diagnostics();
              int v36 = -[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)self->_subviewManager, v6);
              if (has_internal_diagnostics)
              {
                if (v36)
                {
                  __int16 v37 = __UIFaultDebugAssertLog();
                  if (os_log_type_enabled(v37, OS_LOG_TYPE_FAULT))
                  {
                    *(_DWORD *)buf = 138412290;
                    id v42 = v6;
                    _os_log_fault_impl(&dword_1853B0000, v37, OS_LOG_TYPE_FAULT, "Making focused cell visible that is still in the reuse queue: %@", buf, 0xCu);
                  }
                }
              }
              else if (v36)
              {
                uint64_t v38 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_ensureFocusedViewIsNotHidden___s_category)
                                   + 8);
                if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  id v42 = v6;
                  _os_log_impl(&dword_1853B0000, v38, OS_LOG_TYPE_ERROR, "Making focused cell visible that is still in the reuse queue: %@", buf, 0xCu);
                }
              }
              [v6 _setHiddenForReuse:0];
            }
          }
        }
      }
    }
  }
}

- (id)_dataSourceProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_dataSource);
  }
  return WeakRetained;
}

- (UICollectionViewCell)cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
  id v4 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:indexPath];
  id v5 = [(UICollectionView *)self _cellForItemAtIndexPath:v4];

  return (UICollectionViewCell *)v5;
}

- (id)_cellForItemAtIndexPath:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
    uint64_t v8 = 0;
    goto LABEL_19;
  }
  [(UICollectionView *)self _reloadDataIfNeeded];
  id v5 = &OBJC_IVAR___UICollectionView__collectionViewData;
  currentUpdate = (char *)self->_currentUpdate;
  if (currentUpdate) {
    id v5 = &OBJC_IVAR___UICollectionViewUpdate__oldModel;
  }
  else {
    currentUpdate = (char *)self;
  }
  id v7 = *(id *)&currentUpdate[*v5];
  if (-[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:]((uint64_t)v7, v4) != 0x7FFFFFFFFFFFFFFFLL)
  {
    if ([(UICollectionView *)self _hasFocusedCellForIndexPath:v4 shouldUsePreUpdateData:1])
    {
      uint64_t v9 = [(UICollectionView *)self _focusedItemState];
      -[_UICollectionViewFocusedItemState cell]((void *)v9);
      CGFloat v10 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      firstResponderIndexPath = self->_firstResponderIndexPath;
      if (firstResponderIndexPath
        && self->_firstResponderViewType == 1
        && [(NSIndexPath *)firstResponderIndexPath isEqual:v4]
        && dyld_program_sdk_at_least())
      {
        uint64_t v8 = self->_firstResponderView;
        goto LABEL_18;
      }
      -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v4);
      uint64_t v8 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
      if (v8) {
        goto LABEL_18;
      }
      if (!dyld_program_sdk_at_least()) {
        goto LABEL_6;
      }
      uint64_t v13 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v4];
      uint64_t v9 = v13;
      if (!v13 || (CGFloat v14 = *(id *)(v13 + 16)) == 0 || (v15 = v14[144], v14, (v15 & 1) == 0))
      {
        uint64_t v8 = 0;
        goto LABEL_11;
      }
      CGFloat v10 = (UICollectionReusableView *)*(id *)(v9 + 24);
    }
    uint64_t v8 = v10;
LABEL_11:

    goto LABEL_18;
  }
LABEL_6:
  uint64_t v8 = 0;
LABEL_18:

LABEL_19:
  return v8;
}

- (id)_translateDataSourceIndexPathToPresentationIndexPathAsNeeded:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    id v5 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathAfterShadowUpdates:v4];
  }
  else
  {
    id v5 = v4;
  }
  id v6 = v5;

  return v6;
}

- (id)_indexPathForView:(id)a3 ofType:(unint64_t)a4
{
  id v6 = a3;
  [(UICollectionView *)self _reloadDataIfNeeded];
  uint64_t v32 = 0;
  CGFloat v33 = (id *)&v32;
  uint64_t v34 = 0x3032000000;
  id v35 = __Block_byref_object_copy__41;
  int v36 = __Block_byref_object_dispose__41;
  id v37 = 0;
  if (a4 == 1)
  {
    subviewManager = self->_subviewManager;
    uint64_t v13 = [v6 _layoutAttributes];
    __int16 v15 = -[UIBarButtonItemGroup _items](v13);
    CGFloat v16 = v26;
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    v26[2] = __45__UICollectionView__indexPathForView_ofType___block_invoke_3;
    v26[3] = &unk_1E52E5740;
    v26[4] = v6;
    v26[5] = &v32;
    if (subviewManager) {
      -[_UICollectionViewSubviewCollection enumerateSupplementariesOfElementKind:enumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v15, (uint64_t)v26);
    }
    goto LABEL_15;
  }
  if (a4)
  {
    long long v17 = self->_subviewManager;
    uint64_t v13 = [v6 _layoutAttributes];
    __int16 v15 = -[UIBarButtonItemGroup _items](v13);
    CGFloat v16 = v25;
    v25[0] = MEMORY[0x1E4F143A8];
    v25[1] = 3221225472;
    v25[2] = __45__UICollectionView__indexPathForView_ofType___block_invoke_4;
    v25[3] = &unk_1E52E5740;
    v25[4] = v6;
    v25[5] = &v32;
    if (v17) {
      -[_UICollectionViewSubviewCollection enumerateDecorationsOfElementKind:enumerator:]((uint64_t)v17->_visibleViews, (uint64_t)v15, (uint64_t)v25);
    }
LABEL_15:
    CGFloat v10 = (id *)(v16 + 4);

    goto LABEL_16;
  }
  id v7 = self->_subviewManager;
  v30[0] = MEMORY[0x1E4F143A8];
  v30[1] = 3221225472;
  v30[2] = __45__UICollectionView__indexPathForView_ofType___block_invoke;
  v30[3] = &unk_1E52E5EB8;
  uint64_t v8 = (UICollectionReusableView *)v6;
  v31[0] = v8;
  v31[1] = &v32;
  if (!v7
    || (-[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)v7->_visibleViews, (uint64_t)v30),
        !v33[5]))
  {
    if (dyld_program_sdk_at_least())
    {
      prefetchCacheItems = self->_prefetchCacheItems;
      v27[0] = MEMORY[0x1E4F143A8];
      v27[1] = 3221225472;
      v27[2] = __45__UICollectionView__indexPathForView_ofType___block_invoke_2;
      v27[3] = &unk_1E52E5718;
      CGFloat v28 = v8;
      CGFloat v29 = &v32;
      [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v27];
    }
  }
  CGFloat v10 = (id *)v31;
  double v11 = v33;
  if (!v33[5] && self->_firstResponderViewType == 1 && self->_firstResponderView == v8)
  {
    CGFloat v12 = self->_firstResponderIndexPath;
    uint64_t v13 = (id *)v11[5];
    v11[5] = v12;
LABEL_16:
  }
  uint64_t v18 = [(UICollectionView *)self _focusedItemState];
  uint64_t v19 = (void *)v18;
  if (!v33[5])
  {
    id v20 = v18 ? *(void **)(v18 + 8) : 0;
    id v21 = v20;

    if (v21 == v6)
    {
      if (v19) {
        CGFloat v22 = (void *)v19[2];
      }
      else {
        CGFloat v22 = 0;
      }
      objc_storeStrong(v33 + 5, v22);
    }
  }
  id v23 = v33[5];

  _Block_object_dispose(&v32, 8);
  return v23;
}

- (BOOL)_hasFocusedCellForIndexPath:(id)a3 shouldUsePreUpdateData:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  uint64_t v7 = [(UICollectionView *)self _focusedItemState];
  if (v4)
  {
    currentUpdate = self->_currentUpdate;
    if (currentUpdate)
    {
      uint64_t v9 = currentUpdate->_oldFocusedItemState;

      uint64_t v7 = (uint64_t)v9;
    }
  }
  if (v7)
  {
    id v10 = *(id *)(v7 + 8);
    if (v10 && !*(void *)(v7 + 32))
    {
      id v12 = *(id *)(v7 + 16);
      char v11 = [v6 isEqual:v12];
    }
    else
    {
      char v11 = 0;
    }
  }
  else
  {
    char v11 = 0;
  }

  return v11;
}

- (_UICollectionViewFocusedItemState)_focusedItemState
{
  return self->_focusedItemState;
}

- (void)_populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate:(id)a3 addingDeletedViewsToSet:(id)a4 updateLayoutAttributesIndexPaths:(BOOL)a5
{
  id v9 = a3;
  id v10 = a4;
  char v11 = self->_currentUpdate;
  if (!v11)
  {
    CGFloat v16 = [MEMORY[0x1E4F28B00] currentHandler];
    [v16 handleFailureInMethod:a2, self, @"UICollectionView.m", 11200, @"Invalid parameter not satisfying: %@", @"currentUpdate != nil" object file lineNumber description];
  }
  subviewManager = self->_subviewManager;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  void v17[2] = __144__UICollectionView__populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate_addingDeletedViewsToSet_updateLayoutAttributesIndexPaths___block_invoke;
  v17[3] = &unk_1E52E5908;
  uint64_t v18 = v11;
  id v19 = v9;
  BOOL v22 = a5;
  id v20 = v10;
  id v21 = self;
  id v13 = v10;
  id v14 = v9;
  __int16 v15 = v11;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v17);
  }
}

- (void)_createAndAppendViewAnimationsForInsertsInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 newSubviewCollection:(id)a5
{
  uint64_t v105 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  BOOL v11 = [(UICollectionViewLayout *)self->_layout _estimatesSizes];
  [(UICollectionView *)self _visibleBounds];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  v91[0] = MEMORY[0x1E4F143A8];
  v91[1] = 3221225472;
  CGFloat v92 = __117__UICollectionView__createAndAppendViewAnimationsForInsertsInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke;
  CGFloat v93 = &unk_1E52E5958;
  CGFloat v94 = self;
  double v98 = v12;
  double v99 = v14;
  double v100 = v16;
  double v101 = v18;
  BOOL v102 = v11;
  id v78 = v8;
  id v95 = v78;
  id v77 = v9;
  id v96 = v77;
  id v76 = v10;
  id v97 = v76;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  id obj = self->_insertItems;
  uint64_t v20 = [(NSMutableArray *)obj countByEnumeratingWithState:&v87 objects:v104 count:16];
  if (v20)
  {
    uint64_t v21 = v20;
    BOOL v22 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
    uint64_t v23 = *(void *)v88;
    uint64_t v73 = *(void *)v88;
    CGRect v82 = self;
    do
    {
      uint64_t v24 = 0;
      uint64_t v72 = v21;
      do
      {
        if (*(void *)v88 != v23) {
          objc_enumerationMutation(obj);
        }
        CGFloat v25 = *(void **)(*((void *)&v87 + 1) + 8 * v24);
        if (v25 && v25[6] == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v75 = v24;
          CGFloat v26 = -[UICollectionViewUpdateItem _indexPath](v25);
          uint64_t v27 = [v26 section];

          uint64_t v28 = v22[488];
          uint64_t v29 = -[UICollectionViewData numberOfItemsInSection:]((*(void **)((char *)&self->super.super.super.super.isa + v28))[3], v27);
          uint64_t v30 = (*(void **)((char *)&self->super.super.super.super.isa + v28))[3];
          CGFloat v31 = [MEMORY[0x1E4F28D58] indexPathForItem:0 inSection:v27];
          uint64_t v32 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v30, v31);

          if (v29 >= 1)
          {
            do
            {
              v92((uint64_t)v91, v32++);
              --v29;
            }
            while (v29);
          }
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          CGFloat v33 = -[UICollectionViewData existingSupplementaryLayoutAttributesInSection:]((*(void **)((char *)&self->super.super.super.super.isa + v28))[3], v27);
          uint64_t v34 = [v33 countByEnumeratingWithState:&v83 objects:v103 count:16];
          if (v34)
          {
            uint64_t v35 = v34;
            uint64_t v36 = *(void *)v84;
            long long v79 = v33;
            uint64_t v80 = *(void *)v84;
            while (1)
            {
              uint64_t v37 = 0;
              uint64_t v81 = v35;
              do
              {
                if (*(void *)v84 != v36) {
                  objc_enumerationMutation(v33);
                }
                uint64_t v38 = *(_WORD **)(*((void *)&v83 + 1) + 8 * v37);
                CGFloat v39 = [v38 indexPath];
                CGFloat v40 = -[UIBarButtonItemGroup _items]((id *)v38);
                if (!v38)
                {
                  layout = self->_layout;
LABEL_17:
                  uint64_t v42 = [(UICollectionViewLayout *)layout initialLayoutAttributesForAppearingSupplementaryElementOfKind:v40 atIndexPath:v39];
                  goto LABEL_19;
                }
                layout = self->_layout;
                if ((v38[144] & 2) == 0) {
                  goto LABEL_17;
                }
                uint64_t v42 = [(UICollectionViewLayout *)layout initialLayoutAttributesForAppearingDecorationElementOfKind:v40 atIndexPath:v39];
LABEL_19:
                uint64_t v43 = (void *)v42;
                if (!v42)
                {
                  uint64_t v43 = (void *)[v38 copy];
                  [v43 setAlpha:0.0];
                }
                [v38 frame];
                CGFloat v45 = v44;
                CGFloat v47 = v46;
                CGFloat v49 = v48;
                CGFloat v51 = v50;
                [v43 frame];
                v109.origin.CGFloat x = v52;
                v109.origin.CGFloat y = v53;
                v109.size.CGFloat width = v54;
                v109.size.CGFloat height = v55;
                v106.origin.CGFloat x = v45;
                v106.origin.CGFloat y = v47;
                v106.size.CGFloat width = v49;
                v106.size.CGFloat height = v51;
                CGRect v107 = CGRectUnion(v106, v109);
                -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](self->_layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v38, v107.origin.x, v107.origin.y, v107.size.width, v107.size.height);
                v110.origin.CGFloat x = v56;
                v110.origin.CGFloat y = v57;
                v110.size.CGFloat width = v58;
                v110.size.CGFloat height = v59;
                v108.origin.CGFloat x = v13;
                v108.origin.CGFloat y = v15;
                v108.size.CGFloat width = v17;
                v108.size.CGFloat height = v19;
                if (CGRectIntersectsRect(v108, v110)
                  && (![v43 isHidden] || (objc_msgSend(v38, "isHidden") & 1) == 0))
                {
                  long long v60 = -[UIBarButtonItemGroup _items]((id *)v38);
                  id v61 = [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v60 atIndexPath:v39 layout:self->_layout withLayoutAttributes:v43 applyAttributes:1];

                  if (v61)
                  {
                    uint64_t v62 = [(UICollectionViewLayout *)v82->_layout _animationForReusableView:v61 toLayoutAttributes:v38 type:2];
                    long long v63 = [[UICollectionViewAnimation alloc] initWithView:v61 viewType:2 finalLayoutAttributes:v38 startFraction:0 endFraction:0 animateFromCurrentPostion:v62 deleteAfterAnimation:0.0 customAnimations:1.0];
                    [v78 addObject:v63];
                    v64 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, (uint64_t)v38);
                    [v77 setObject:v63 forKey:v64];
                    if (v38)
                    {
                      __int16 v65 = v38[144];
                      uint64_t v66 = 1;
                      if ((v65 & 2) != 0) {
                        uint64_t v66 = 2;
                      }
                      if (v65) {
                        uint64_t v67 = 0;
                      }
                      else {
                        uint64_t v67 = v66;
                      }
                    }
                    else
                    {
                      uint64_t v67 = 0;
                    }
                    -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:]((uint64_t)v76, (uint64_t)v61, (uint64_t)v40, v67, (uint64_t)v39);

                    CGFloat v33 = v79;
                  }

                  uint64_t v36 = v80;
                  uint64_t v35 = v81;
                  self = v82;
                }

                ++v37;
              }
              while (v35 != v37);
              uint64_t v68 = [v33 countByEnumeratingWithState:&v83 objects:v103 count:16];
              uint64_t v35 = v68;
              if (!v68)
              {
                uint64_t v21 = v72;
                BOOL v22 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
                break;
              }
            }
          }
          unsigned int v69 = v33;
          uint64_t v23 = v73;
          uint64_t v24 = v75;
        }
        else
        {
          uint64_t v70 = (*(void **)((char *)&self->super.super.super.super.isa + v22[488]))[3];
          unsigned int v69 = -[UICollectionViewUpdateItem _indexPath](v25);
          uint64_t v71 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v70, v69);
          v92((uint64_t)v91, v71);
        }

        ++v24;
      }
      while (v24 != v21);
      uint64_t v21 = [(NSMutableArray *)obj countByEnumeratingWithState:&v87 objects:v104 count:16];
    }
    while (v21);
  }
}

- (void)_createAndAppendViewAnimationsForDeletesInCurrentUpdate:(id)a3 disappearingAnimations:(id)a4
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  v58[0] = MEMORY[0x1E4F143A8];
  v58[1] = 3221225472;
  CGFloat v59 = __99__UICollectionView__createAndAppendViewAnimationsForDeletesInCurrentUpdate_disappearingAnimations___block_invoke;
  long long v60 = &unk_1E52E5930;
  id v61 = self;
  id v48 = v6;
  id v62 = v48;
  id v47 = v7;
  id v63 = v47;
  long long v54 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  id obj = self->_deleteItems;
  uint64_t v8 = [(NSMutableArray *)obj countByEnumeratingWithState:&v54 objects:v65 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
    uint64_t v11 = *(void *)v55;
    uint64_t v43 = *(void *)v55;
    do
    {
      uint64_t v12 = 0;
      uint64_t v42 = v9;
      do
      {
        if (*(void *)v55 != v11) {
          objc_enumerationMutation(obj);
        }
        CGFloat v13 = *(void **)(*((void *)&v54 + 1) + 8 * v12);
        if (v13 && v13[6] == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v45 = v12;
          double v14 = -[UICollectionViewUpdateItem _indexPath](v13);
          uint64_t v15 = [v14 section];

          uint64_t v16 = v10[488];
          uint64_t v17 = -[UICollectionViewData numberOfItemsInSection:]((*(void **)((char *)&self->super.super.super.super.isa + v16))[2], v15);
          uint64_t v18 = (*(void **)((char *)&self->super.super.super.super.isa + v16))[2];
          CGFloat v19 = [MEMORY[0x1E4F28D58] indexPathForRow:0 inSection:v15];
          uint64_t v20 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v18, v19);

          if (v17 >= 1)
          {
            do
            {
              v59((id *)v58, v20++);
              --v17;
            }
            while (v17);
          }
          long long v52 = 0u;
          long long v53 = 0u;
          long long v50 = 0u;
          long long v51 = 0u;
          -[UICollectionViewData existingSupplementaryLayoutAttributesInSection:]((*(void **)((char *)&self->super.super.super.super.isa + v16))[2], v15);
          id v46 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v21 = [v46 countByEnumeratingWithState:&v50 objects:v64 count:16];
          if (v21)
          {
            uint64_t v22 = v21;
            uint64_t v49 = *(void *)v51;
            do
            {
              uint64_t v23 = 0;
              do
              {
                if (*(void *)v51 != v49) {
                  objc_enumerationMutation(v46);
                }
                uint64_t v24 = *(void *)(*((void *)&v50 + 1) + 8 * v23);
                id v25 = [(UICollectionView *)self _visibleViewForLayoutAttributes:v24];
                if (v25)
                {
                  CGFloat v26 = v25;
                  if (v24) {
                    int v27 = (*(unsigned __int16 *)(v24 + 288) >> 1) & 1;
                  }
                  else {
                    LOBYTE(v27) = 0;
                  }
                  layout = self->_layout;
                  uint64_t v29 = -[UIBarButtonItemGroup _items]((id *)v24);
                  uint64_t v30 = [(id)v24 indexPath];
                  if (v27) {
                    [(UICollectionViewLayout *)layout finalLayoutAttributesForDisappearingDecorationElementOfKind:v29 atIndexPath:v30];
                  }
                  else {
                  CGFloat v31 = [(UICollectionViewLayout *)layout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:v29 atIndexPath:v30];
                  }

                  if (v31)
                  {
                    if (dyld_program_sdk_at_least())
                    {
                      uint64_t v32 = [v31 zIndex];
                      CGFloat v33 = [v26 _layoutAttributes];
                      uint64_t v34 = [v33 zIndex];

                      if (v32 != v34) {
                        -[UICollectionView _addControlledSubview:atZIndex:forced:](self, "_addControlledSubview:atZIndex:forced:", v26, [v31 zIndex], 1);
                      }
                    }
                  }
                  else
                  {
                    CGFloat v31 = (void *)[(id)v24 copy];
                    [v31 setAlpha:0.0];
                  }
                  uint64_t v35 = [(UICollectionViewLayout *)self->_layout _animationForReusableView:v26 toLayoutAttributes:v31 type:2];
                  uint64_t v36 = [[UICollectionViewAnimation alloc] initWithView:v26 viewType:2 finalLayoutAttributes:v31 startFraction:1 endFraction:1 animateFromCurrentPostion:v35 deleteAfterAnimation:0.0 customAnimations:1.0];
                  [v48 addObject:v36];
                  uint64_t v37 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, v24);
                  [v47 setObject:v36 forKey:v37];
                }
                ++v23;
              }
              while (v22 != v23);
              uint64_t v38 = [v46 countByEnumeratingWithState:&v50 objects:v64 count:16];
              uint64_t v22 = v38;
            }
            while (v38);
            uint64_t v9 = v42;
            id v10 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
          }
          uint64_t v11 = v43;
          uint64_t v12 = v45;
          CGFloat v39 = v46;
        }
        else
        {
          uint64_t v40 = (*(void **)((char *)&self->super.super.super.super.isa + v10[488]))[2];
          CGFloat v39 = -[UICollectionViewUpdateItem _indexPath](v13);
          uint64_t v41 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v40, v39);
          v59((id *)v58, v41);
        }

        ++v12;
      }
      while (v12 != v9);
      uint64_t v9 = [(NSMutableArray *)obj countByEnumeratingWithState:&v54 objects:v65 count:16];
    }
    while (v9);
  }
}

- (void)_updateOrderingOfViewsInDisappearingViewAnimations:(id)a3 onScreenViewAnimations:(id)a4
{
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke;
  v9[3] = &unk_1E52E5A48;
  v9[4] = self;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke_2;
  v8[3] = &unk_1E52E5A70;
  v8[4] = self;
  void v8[5] = v9;
  id v6 = a4;
  [a3 enumerateKeysAndObjectsUsingBlock:v8];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke_902;
  v7[3] = &unk_1E52E5A70;
  v7[4] = self;
  v7[5] = v9;
  [v6 enumerateKeysAndObjectsUsingBlock:v7];
}

- (void)_setupExpandCollapseAnimationsIfNeededWithContext:(id)a3
{
  id v9 = a3;
  BOOL v4 = [(UICollectionView *)self dataSource];
  char v5 = objc_opt_respondsToSelector();

  id v6 = v9;
  if (v5)
  {
    id v7 = [(UICollectionView *)self _dataSourceProxy];
    uint64_t v8 = [v7 _expandCollapseAnimationContextForCollectionView:self];
    if (v8) {
      _UICollectionViewSetupExpandCollapseAnimations(self, v9, v8);
    }

    id v6 = v9;
  }
}

- (void)_createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 newSubviewCollection:(id)a5
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v35 = a3;
  id v34 = a4;
  id v8 = a5;
  [(UICollectionView *)self _visibleBounds];
  v46[0] = MEMORY[0x1E4F143A8];
  v46[1] = 3221225472;
  id v47 = __129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke;
  id v48 = &unk_1E52E59D0;
  uint64_t v49 = self;
  uint64_t v51 = v9;
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  id v32 = v8;
  id v50 = v32;
  uint64_t v37 = self;
  uint64_t v13 = -[UICollectionViewData numberOfSections]((uint64_t)self->_currentUpdate->_newModel);
  if (v13 >= 1)
  {
    uint64_t v14 = v13;
    uint64_t v15 = 0;
    uint64_t v33 = v13;
    do
    {
      if (!-[NSIndexSet containsIndex:](v37->_currentUpdate->_insertedSections, "containsIndex:", v15, v32))
      {
        uint64_t v16 = -[UICollectionViewData existingSupplementaryLayoutAttributesInSection:]((uint64_t)v37->_currentUpdate->_newModel, v15);
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        long long v45 = 0u;
        id obj = v16;
        uint64_t v17 = [v16 countByEnumeratingWithState:&v42 objects:v55 count:16];
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v19 = *(void *)v43;
          do
          {
            for (uint64_t i = 0; i != v18; ++i)
            {
              if (*(void *)v43 != v19) {
                objc_enumerationMutation(obj);
              }
              uint64_t v21 = *(void **)(*((void *)&v42 + 1) + 8 * i);
              uint64_t v22 = [v21 indexPath];
              uint64_t v23 = -[UIBarButtonItemGroup _items]((id *)v21);
              uint64_t v24 = [(NSMutableArray *)v37->_currentUpdate->_insertedSupplementaryIndexesSectionArray objectAtIndexedSubscript:v15];
              id v25 = [v24 objectForKey:v23];
              int v26 = objc_msgSend(v25, "containsIndex:", objc_msgSend(v22, "item"));

              if (v26)
              {
                int v27 = v47((uint64_t)v46, v21);
                if (v27)
                {
                  [v35 addObject:v27];
                  uint64_t v28 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, (uint64_t)v21);
                  [v34 setObject:v27 forKey:v28];
                }
              }
            }
            uint64_t v18 = [obj countByEnumeratingWithState:&v42 objects:v55 count:16];
          }
          while (v18);
        }

        uint64_t v14 = v33;
      }
      ++v15;
    }
    while (v15 != v14);
  }
  insertedSupplementaryTopLevelIndexesDict = v37->_currentUpdate->_insertedSupplementaryTopLevelIndexesDict;
  v38[0] = MEMORY[0x1E4F143A8];
  v38[1] = 3221225472;
  v38[2] = __129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_2;
  v38[3] = &unk_1E52E5A20;
  v38[4] = v37;
  id v39 = v35;
  uint64_t v41 = v46;
  id v40 = v34;
  id v30 = v34;
  id v31 = v35;
  [(NSMutableDictionary *)insertedSupplementaryTopLevelIndexesDict enumerateKeysAndObjectsUsingBlock:v38];
}

- (BOOL)_reuseCell:(id)a3
{
  return [(UICollectionView *)self _reuseCell:a3 notifyDidEndDisplaying:1];
}

- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5 collectionViewAnimator:(id)a6
{
  BOOL v293 = a4;
  uint64_t v377 = *MEMORY[0x1E4F143B8];
  id v299 = a3;
  id v9 = a5;
  id v10 = a6;
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258AF8);
  uint64_t v12 = *(id *)(CategoryCachedImpl + 8);
  os_signpost_id_t v13 = os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self);
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v14 = v13;
    if (os_signpost_enabled(v12))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1853B0000, v12, OS_SIGNPOST_INTERVAL_BEGIN, v14, "BatchUpdates", "", buf, 2u);
    }
  }

  v298 = (void *)_UISetCurrentFallbackEnvironment(self);
  if (dyld_program_sdk_at_least())
  {
    id v15 = v299;
    if (!v299) {
      id v15 = objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
    }
    id v299 = v15;
    [v15 _setIntent:8];
  }
  if (dyld_program_sdk_at_least()) {
    [(UICollectionView *)self _resetAllPrefetchContexts];
  }
  else {
    [(UICollectionView *)self _resetPrefetchState];
  }
  ++self->_updateCount;
  double v16 = *MEMORY[0x1E4F1DB20];
  double v17 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  double v18 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  double v19 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  uint64_t v20 = *((void *)&self->_collectionViewFlags + 1);
  if ((~*((_DWORD *)&self->_collectionViewFlags + 2) & 0x10000004) == 0)
  {
    if (dyld_program_sdk_at_least()) {
      goto LABEL_118;
    }
    uint64_t v20 = *((void *)&self->_collectionViewFlags + 1);
  }
  if ((v20 & 0x800000000) != 0)
  {
LABEL_118:
    unint64_t v106 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B00);
    if (*(unsigned char *)v106)
    {
      v277 = *(NSObject **)(v106 + 8);
      if (os_log_type_enabled(v277, OS_LOG_TYPE_ERROR))
      {
        unint64_t v278 = *((void *)&self->_collectionViewFlags + 1);
        *(_DWORD *)buf = 134218496;
        v370 = self;
        __int16 v371 = 1024;
        *(_DWORD *)v372 = (v278 >> 28) & 1;
        *(_WORD *)&v372[4] = 1024;
        *(_DWORD *)&v372[6] = (v278 >> 35) & 1;
        _os_log_impl(&dword_1853B0000, v277, OS_LOG_TYPE_ERROR, "_endItemAnimations: cv == %p; ignoring batch updates. needsReload: %d; ignoreBatchUpdatesAndFallBackToReloadData: %d",
          buf,
          0x18u);
      }
    }
    *((void *)&self->_collectionViewFlags + 1) &= ~0x800000000uLL;
    [(UICollectionView *)self _resetUpdateItemArrays];
    BOOL v107 = 0;
    goto LABEL_363;
  }
  unint64_t v21 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B08);
  if (*(unsigned char *)v21)
  {
    v279 = *(id *)(v21 + 8);
    if (os_log_type_enabled(v279, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      v370 = self;
      _os_log_impl(&dword_1853B0000, v279, OS_LOG_TYPE_ERROR, "_endItemAnimations: cv == %p; processing batch update",
        buf,
        0xCu);
    }
  }
  if (self->_deleteItems)
  {
    unint64_t v22 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B10);
    if (*(unsigned char *)v22)
    {
      v280 = *(id *)(v22 + 8);
      if (os_log_type_enabled(v280, OS_LOG_TYPE_ERROR))
      {
        deleteItems = self->_deleteItems;
        *(_DWORD *)buf = 138412290;
        v370 = (UICollectionView *)deleteItems;
        _os_log_impl(&dword_1853B0000, v280, OS_LOG_TYPE_ERROR, "Deleting: %@", buf, 0xCu);
      }
    }
  }
  if (self->_insertItems)
  {
    unint64_t v23 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B18);
    if (*(unsigned char *)v23)
    {
      v282 = *(id *)(v23 + 8);
      if (os_log_type_enabled(v282, OS_LOG_TYPE_ERROR))
      {
        insertItems = self->_insertItems;
        *(_DWORD *)buf = 138412290;
        v370 = (UICollectionView *)insertItems;
        _os_log_impl(&dword_1853B0000, v282, OS_LOG_TYPE_ERROR, "Inserting: %@", buf, 0xCu);
      }
    }
  }
  if (self->_reloadItems)
  {
    unint64_t v24 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B20);
    if (*(unsigned char *)v24)
    {
      v284 = *(id *)(v24 + 8);
      if (os_log_type_enabled(v284, OS_LOG_TYPE_ERROR))
      {
        reloadItems = self->_reloadItems;
        *(_DWORD *)buf = 138412290;
        v370 = (UICollectionView *)reloadItems;
        _os_log_impl(&dword_1853B0000, v284, OS_LOG_TYPE_ERROR, "Reloading: %@", buf, 0xCu);
      }
    }
  }
  if (self->_moveItems)
  {
    unint64_t v25 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B28);
    if (*(unsigned char *)v25)
    {
      v286 = *(id *)(v25 + 8);
      if (os_log_type_enabled(v286, OS_LOG_TYPE_ERROR))
      {
        moveItems = self->_moveItems;
        *(_DWORD *)buf = 138412290;
        v370 = (UICollectionView *)moveItems;
        _os_log_impl(&dword_1853B0000, v286, OS_LOG_TYPE_ERROR, "Moving: %@", buf, 0xCu);
      }
    }
  }
  int v26 = [(UIView *)self _focusSystem];
  int v27 = [v26 focusedItem];

  v292 = v27;
  uint64_t v28 = _UIFocusEnvironmentContainingView(v27);
  if ([v28 isDescendantOfView:self])
  {
    [v28 bounds];
    objc_msgSend(v28, "convertRect:toView:", self);
    double v16 = v29;
    double v17 = v30;
    double v18 = v31;
    double v19 = v32;
  }
  v291 = v28;
  id v294 = v10;
  id v295 = v9;
  uint64_t v33 = self->_collectionViewData;
  [(UICollectionView *)self _visibleBounds];
  -[UICollectionViewData validateLayoutInRectImmediatelyValidatingContentSizeIgnoringSpecificInvalidations:]((uint64_t)v33, v34, v35, v36, v37);
  if (v33) {
    *(unsigned char *)&v33->_collectionViewDataFlags |= 0x10u;
  }
  v297 = v33;
  -[UICollectionView _clearSpecificInvalidationLists](self);
  uint64_t v38 = (UICollectionViewData *)-[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], self, self->_layout);
  collectionViewData = self->_collectionViewData;
  self->_collectionViewData = v38;

  id v40 = [(UICollectionView *)self _arrayForUpdateAction:1];
  uint64_t v41 = objc_msgSend(v40, "sortedArrayUsingSelector:");

  long long v42 = [(UICollectionView *)self _arrayForUpdateAction:0];
  long long v43 = objc_msgSend(v42, "sortedArrayUsingSelector:");

  long long v44 = [(UICollectionView *)self _sortedDeduplicatedReloadItems];
  long long v45 = [(NSMutableArray *)self->_moveItems sortedArrayUsingSelector:sel_compareIndexPathsForMoves_];
  v296 = (void *)[v45 mutableCopy];

  v304 = v41;
  id v46 = (NSArray *)[v41 copy];
  originalDeleteItems = self->_originalDeleteItems;
  self->_originalDeleteItems = v46;

  v303 = v43;
  id v48 = (NSArray *)[v43 copy];
  originalInsertItems = self->_originalInsertItems;
  self->_originalInsertItems = v48;

  v328 = -[UICollectionView _sectionsWithSectionOperationsInUpdateItems:](self, self->_deleteItems);
  v329 = -[UICollectionView _sectionsWithSectionOperationsInUpdateItems:](self, self->_insertItems);
  int v50 = dyld_program_sdk_at_least();
  long long v361 = 0u;
  long long v362 = 0u;
  long long v363 = 0u;
  long long v364 = 0u;
  id obj = v44;
  uint64_t v315 = [obj countByEnumeratingWithState:&v361 objects:v376 count:16];
  v318 = self;
  if (v315)
  {
    uint64_t v312 = *(void *)v362;
    int v309 = v50 ^ 1;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v362 != v312) {
          objc_enumerationMutation(obj);
        }
        uint64_t v52 = *(void **)(*((void *)&v361 + 1) + 8 * (void)v51);
        id v53 = -[UICollectionViewUpdateItem _indexPath](v52);
        if (v52)
        {
          uint64_t v54 = v52[1];
          v324 = (char *)v52[2];
          BOOL v55 = v52[6] == 0x7FFFFFFFFFFFFFFFLL;
        }
        else
        {
          v324 = 0;
          uint64_t v54 = 0;
          BOOL v55 = 0;
        }
        if (((v55 | v309) & 1) != 0
          || ([(UICollectionView *)self _cellForItemAtIndexPath:v53],
              uint64_t v56 = objc_claimAutoreleasedReturnValue(),
              v56,
              v56))
        {
          v319 = v51;
          long long v359 = 0u;
          long long v360 = 0u;
          long long v357 = 0u;
          long long v358 = 0u;
          id v333 = v304;
          uint64_t v57 = [v333 countByEnumeratingWithState:&v357 objects:v375 count:16];
          v330 = v324;
          uint64_t v322 = v54;
          if (!v57) {
            goto LABEL_71;
          }
          uint64_t v58 = v57;
          uint64_t v59 = *(void *)v358;
          v330 = v324;
          while (1)
          {
            uint64_t v60 = 0;
            do
            {
              if (*(void *)v358 != v59) {
                objc_enumerationMutation(v333);
              }
              id v61 = *(void **)(*((void *)&v357 + 1) + 8 * v60);
              id v62 = -[UICollectionViewUpdateItem _indexPath](v61);
              int v63 = [v62 isEqual:v53];

              if (v63)
              {
                uint64_t v67 = [MEMORY[0x1E4F28B00] currentHandler];
                uint64_t v68 = -[UICollectionViewUpdateItem _indexPath](v61);
                [v67 handleFailureInMethod:a2, v318, @"UICollectionView.m", 10483, @"attempt to delete and reload the same index path (%@)", v68 object file lineNumber description];

                if (!v61)
                {
LABEL_50:
                  uint64_t v64 = 0;
LABEL_51:
                  LODWORD(v66) = 0;
                  goto LABEL_52;
                }
              }
              else if (!v61)
              {
                goto LABEL_50;
              }
              uint64_t v64 = v61[1];
              if (v61[6] != 0x7FFFFFFFFFFFFFFFLL) {
                goto LABEL_51;
              }
              if (v52) {
                uint64_t v65 = v52[1];
              }
              else {
                uint64_t v65 = 0;
              }
              if (v64 == v65) {
                goto LABEL_65;
              }
              LODWORD(v66) = 1;
LABEL_52:
              if (v64 <= v54) {
                uint64_t v66 = v66;
              }
              else {
                uint64_t v66 = 0;
              }
              v54 -= v66;
              if ((!v52 || v52[6] != 0x7FFFFFFFFFFFFFFFLL) && (!v61 || v61[6] != 0x7FFFFFFFFFFFFFFFLL) && v64 == v54)
              {
                if (([v328 containsIndex:v64] & 1) == 0)
                {
                  if (v61) {
                    uint64_t v69 = v61[2];
                  }
                  else {
                    uint64_t v69 = 0;
                  }
                  v330 -= v69 <= (uint64_t)v330;
                }
                uint64_t v54 = v64;
              }
LABEL_65:
              ++v60;
            }
            while (v58 != v60);
            uint64_t v70 = [v333 countByEnumeratingWithState:&v357 objects:v375 count:16];
            uint64_t v58 = v70;
            if (!v70)
            {
LABEL_71:

              long long v355 = 0u;
              long long v356 = 0u;
              long long v353 = 0u;
              long long v354 = 0u;
              id v71 = v303;
              uint64_t v72 = [v71 countByEnumeratingWithState:&v353 objects:v374 count:16];
              if (v72)
              {
                uint64_t v73 = v72;
                uint64_t v74 = *(void *)v354;
                self = v318;
                do
                {
                  uint64_t v75 = 0;
                  do
                  {
                    if (*(void *)v354 != v74) {
                      objc_enumerationMutation(v71);
                    }
                    id v76 = *(void **)(*((void *)&v353 + 1) + 8 * v75);
                    if (v76)
                    {
                      uint64_t v77 = v76[3];
                      LODWORD(v78) = v76[6] == 0x7FFFFFFFFFFFFFFFLL;
                    }
                    else
                    {
                      uint64_t v77 = 0;
                      LODWORD(v78) = 0;
                    }
                    if (v77 <= v54) {
                      uint64_t v78 = v78;
                    }
                    else {
                      uint64_t v78 = 0;
                    }
                    v54 += v78;
                    if ((!v52 || v52[6] != 0x7FFFFFFFFFFFFFFFLL)
                      && (!v76 || v76[6] != 0x7FFFFFFFFFFFFFFFLL)
                      && v77 == v54
                      && (objc_msgSend(v329, "containsIndex:") & 1) == 0)
                    {
                      if (v76) {
                        uint64_t v79 = v76[4];
                      }
                      else {
                        uint64_t v79 = 0;
                      }
                      uint64_t v80 = v330;
                      if (v79 <= (uint64_t)v330) {
                        uint64_t v80 = v330 + 1;
                      }
                      v330 = v80;
                    }
                    ++v75;
                  }
                  while (v73 != v75);
                  uint64_t v81 = [v71 countByEnumeratingWithState:&v353 objects:v374 count:16];
                  uint64_t v73 = v81;
                }
                while (v81);
              }
              else
              {
                self = v318;
              }

              CGRect v82 = [UICollectionViewUpdateItem alloc];
              long long v83 = [MEMORY[0x1E4F28D58] indexPathForRow:v324 inSection:v322];
              long long v84 = [(UICollectionViewUpdateItem *)v82 initWithAction:1 forIndexPath:v83];

              [(NSMutableArray *)self->_deleteItems addObject:v84];
              long long v85 = [UICollectionViewUpdateItem alloc];
              long long v86 = [MEMORY[0x1E4F28D58] indexPathForRow:v330 inSection:v54];
              long long v87 = [(UICollectionViewUpdateItem *)v85 initWithAction:0 forIndexPath:v86];

              long long v88 = -[UICollectionViewUpdateItem _indexPath](v87);
              -[UICollectionViewUpdateItem _setNewIndexPath:]((uint64_t)v52, v88);

              [(NSMutableArray *)self->_insertItems addObject:v87];
              uint64_t v51 = v319;
              break;
            }
          }
        }
        uint64_t v51 = (char *)v51 + 1;
      }
      while (v51 != (void *)v315);
      uint64_t v89 = [obj countByEnumeratingWithState:&v361 objects:v376 count:16];
      uint64_t v315 = v89;
    }
    while (v89);
  }

  long long v90 = [(NSMutableArray *)self->_deleteItems sortedArrayUsingSelector:sel_inverseCompareIndexPaths_];
  v301 = (void *)[v90 mutableCopy];

  uint64_t v91 = [(NSMutableArray *)self->_insertItems sortedArrayUsingSelector:sel_compareIndexPaths_];
  CGFloat v92 = (void *)[v91 mutableCopy];

  id v9 = v295;
  CGFloat v94 = v296;
  CGFloat v93 = v297;
  v306 = v92;
  if ([(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController shouldRebaseForUpdates]&& ![(UICollectionView *)self _isPerformingShadowUpdates])
  {
    id v95 = (UICollectionView *)objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v296, "count") + objc_msgSend(v301, "count") + objc_msgSend(v92, "count"));
    [(UICollectionView *)v95 addObjectsFromArray:v301];
    [(UICollectionView *)v95 addObjectsFromArray:v296];
    [(UICollectionView *)v95 addObjectsFromArray:v92];
    if (![(_UICollectionViewDragAndDropController *)self->_dragAndDropController rebaseForUpdates:v95])
    {
      CGRect v159 = v95;
      v203 = *(id *)(__UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B30) + 8);
      if (os_log_type_enabled(v203, OS_LOG_TYPE_ERROR))
      {
        -[UICollectionViewData dataSourceCountsDescription](v297);
        v204 = (UICollectionView *)(id)objc_claimAutoreleasedReturnValue();
        dragAndDropController = self->_dragAndDropController;
        *(_DWORD *)buf = 138412802;
        v370 = v204;
        __int16 v371 = 2112;
        *(void *)v372 = v159;
        *(_WORD *)&v372[8] = 2112;
        v373 = dragAndDropController;
        _os_log_impl(&dword_1853B0000, v203, OS_LOG_TYPE_ERROR, "UICollectionView failed to rebase drag and drop or reordering items for incoming update, falling back to reload data. Pre-update data source counts: %@; update items: %@; drag and drop controller: %@",
          buf,
          0x20u);
      }
      id v323 = 0;
      v314 = 0;
      goto LABEL_289;
    }
  }
  if ([v296 count])
  {
    id v96 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28BD0]), "initWithCapacity:", objc_msgSend(v296, "count"));
    id v97 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28BD0]), "initWithCapacity:", objc_msgSend(v296, "count"));
    long long v349 = 0u;
    long long v350 = 0u;
    long long v351 = 0u;
    long long v352 = 0u;
    id v98 = v296;
    uint64_t v99 = [v98 countByEnumeratingWithState:&v349 objects:v368 count:16];
    if (v99)
    {
      uint64_t v100 = v99;
      uint64_t v101 = *(void *)v350;
      do
      {
        for (uint64_t i = 0; i != v100; ++i)
        {
          if (*(void *)v350 != v101) {
            objc_enumerationMutation(v98);
          }
          char v103 = *(id **)(*((void *)&v349 + 1) + 8 * i);
          CGFloat v104 = -[UICollectionViewUpdateItem _indexPath](v103);
          [v96 addObject:v104];

          uint64_t v105 = -[UICollectionViewUpdateItem _newIndexPath](v103);
          [v97 addObject:v105];
        }
        uint64_t v100 = [v98 countByEnumeratingWithState:&v349 objects:v368 count:16];
      }
      while (v100);
    }

    CGFloat v94 = v296;
  }
  else
  {
    id v96 = 0;
    id v97 = 0;
  }
  id v313 = v301;
  id v108 = v94;
  id v323 = v96;
  v310 = v97;
  id v307 = v92;
  v316 = v297;
  if (self)
  {
    CGRect v109 = v313;
    if ([v313 count])
    {
      uint64_t v110 = 0;
      int v111 = 0;
      do
      {
        uint64_t v112 = (id)[v109 objectAtIndexedSubscript:v110];
        int v113 = v112;
        if (v112)
        {
          uint64_t v114 = v112[1];
          BOOL v115 = v112[6] == 0x7FFFFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v114 = 0;
          BOOL v115 = 0;
        }
        if (!v323 || v115)
        {
          if (!v323)
          {
LABEL_129:
            int v118 = [v108 count];
            goto LABEL_132;
          }
        }
        else
        {
          CGPoint v116 = -[UICollectionViewUpdateItem _indexPath](v112);
          char v117 = [v323 containsObject:v116];

          if ((v117 & 1) == 0) {
            goto LABEL_129;
          }
        }
        int v118 = 0;
LABEL_132:
        if ([v108 count] > (unint64_t)v118)
        {
          for (unint64_t j = v118; [v108 count] > j; ++j)
          {
            CGRect v120 = (id)[v108 objectAtIndexedSubscript:j];
            if (-[UICollectionViewUpdateItem _initialIndexPathEqualToUpdateItem:]((uint64_t)v120, v113))
            {
              if (v120) {
                BOOL v121 = v120[6] == 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                BOOL v121 = 0;
              }
              UIEdgeInsets v122 = [MEMORY[0x1E4F28B00] currentHandler];
              UIEdgeInsets v123 = v122;
              if (v121)
              {
                objc_msgSend(v122, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10827, @"attempt to perform a delete and a move from the same section (%ld)", v114);
              }
              else
              {
                UIEdgeInsets v125 = -[UICollectionViewUpdateItem _indexPath](v113);
                [v123 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10830, @"attempt to perform a delete and a move from the same index path (%@)", v125 object file lineNumber description];
              }
            }
            else if (v115)
            {
              uint64_t v124 = v120 ? v120[5] : 0;
              if (v114 == v124) {
                goto LABEL_226;
              }
            }
          }
        }
        if (v115)
        {
          if (v114 >= -[UICollectionViewData numberOfSections]((uint64_t)v316))
          {
            id v131 = [MEMORY[0x1E4F28B00] currentHandler];
            [v131 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10842, @"attempt to delete section %ld, but there are only %ld sections before the update", v114, -[UICollectionViewData numberOfSections]((uint64_t)v316) object file lineNumber description];
          }
          CGRect v109 = v313;
          if ([v313 count])
          {
            uint64_t v126 = 0;
            int v127 = 0;
            do
            {
              CGRect v128 = (id)[v313 objectAtIndexedSubscript:v126];
              if (v128)
              {
                if (v128[6] == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_160;
                }
                uint64_t v129 = v128[1];
              }
              else
              {
                uint64_t v129 = 0;
              }
              if (v129 != v114)
              {
LABEL_160:
                ++v127;
                goto LABEL_161;
              }
              [v313 removeObjectAtIndex:v126];
              v111 -= v127 < v111;
LABEL_161:
              uint64_t v126 = v127;
            }
            while ([v313 count] > (unint64_t)v127);
          }
        }
        else
        {
          if (v113) {
            uint64_t v130 = v113[2];
          }
          else {
            uint64_t v130 = 0;
          }
          CGRect v109 = v313;
          if (v114 >= -[UICollectionViewData numberOfSections]((uint64_t)v316))
          {
            unint64_t v132 = [MEMORY[0x1E4F28B00] currentHandler];
            [v132 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10860, @"attempt to delete item %ld from section %ld, but there are only %ld sections before the update", v130, v114, -[UICollectionViewData numberOfSections]((uint64_t)v316) object file lineNumber description];
          }
          if (v130 >= -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v316, v114))
          {
            v133 = [MEMORY[0x1E4F28B00] currentHandler];
            objc_msgSend(v133, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10861, @"attempt to delete item %ld from section %ld which only contains %ld items before the update", v130, v114, -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v316, v114));
          }
        }
        uint64_t v110 = ++v111;
      }
      while ([v109 count] > (unint64_t)v111);
    }
    v134 = v307;
    if ([v307 count])
    {
      uint64_t v135 = 0;
      int v136 = 0;
      do
      {
        long long v137 = (id)[v134 objectAtIndexedSubscript:v135];
        long long v138 = v137;
        if (v137)
        {
          uint64_t v139 = v137[3];
          BOOL v140 = v137[6] == 0x7FFFFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v139 = 0;
          BOOL v140 = 0;
        }
        if (!v310 || v140)
        {
          if (!v310)
          {
LABEL_181:
            int v143 = [v108 count];
            goto LABEL_184;
          }
        }
        else
        {
          long long v141 = -[UICollectionViewUpdateItem _indexPath](v137);
          char v142 = [(UICollectionView *)v310 containsObject:v141];

          if ((v142 & 1) == 0) {
            goto LABEL_181;
          }
        }
        int v143 = 0;
LABEL_184:
        if ([v108 count] > (unint64_t)v143)
        {
          for (unint64_t k = v143; [v108 count] > k; ++k)
          {
            v145 = (id)[v108 objectAtIndexedSubscript:k];
            if (-[UICollectionViewUpdateItem _finalIndexPathEqualToUpdateItem:]((uint64_t)v145, v138))
            {
              if (v145) {
                BOOL v146 = v145[6] == 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                BOOL v146 = 0;
              }
              v147 = [MEMORY[0x1E4F28B00] currentHandler];
              __int16 v148 = v147;
              if (v146)
              {
                objc_msgSend(v147, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10880, @"attempt to perform an insert and a move to the same section (%ld)", v139);
              }
              else
              {
                __int16 v150 = -[UICollectionViewUpdateItem _indexPath](v138);
                [v148 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10883, @"attempt to perform an insert and a move to the same index path (%@)", v150 object file lineNumber description];
              }
            }
            else if (v140)
            {
              uint64_t v149 = v145 ? v145[3] : 0;
              if (v139 == v149) {
                goto LABEL_226;
              }
            }
          }
        }
        if (v140)
        {
          if (v139 >= -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData))
          {
            __int16 v156 = [MEMORY[0x1E4F28B00] currentHandler];
            objc_msgSend(v156, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10895, @"attempt to insert section %ld but there are only %ld sections after the update", v139, -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData));
          }
          v134 = v307;
          if ([v307 count])
          {
            uint64_t v151 = 0;
            int v152 = 0;
            do
            {
              v153 = (id)[v307 objectAtIndexedSubscript:v151];
              if (v153)
              {
                if (v153[6] == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_212;
                }
                uint64_t v154 = v153[3];
              }
              else
              {
                uint64_t v154 = 0;
              }
              if (v154 != v139)
              {
LABEL_212:
                ++v152;
                goto LABEL_213;
              }
              [v307 removeObjectAtIndex:v151];
              v136 -= v152 < v136;
LABEL_213:
              uint64_t v151 = v152;
            }
            while ([v307 count] > (unint64_t)v152);
          }
        }
        else
        {
          if (v138) {
            uint64_t v155 = v138[4];
          }
          else {
            uint64_t v155 = 0;
          }
          v134 = v307;
          if (v139 >= -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData))
          {
            id v157 = [MEMORY[0x1E4F28B00] currentHandler];
            [v157 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10913, @"attempt to insert item %ld into section %ld, but there are only %ld sections after the update", v155, v139, -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData) object file lineNumber description];
          }
          if (v155 >= -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v318->_collectionViewData, v139))
          {
            uint64_t v158 = [MEMORY[0x1E4F28B00] currentHandler];
            [v158 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10914, @"attempt to insert item %ld into section %ld, but there are only %ld items in section %ld after the update", v155, v139, -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v318->_collectionViewData, v139), v139 object file lineNumber description];
          }
        }
        uint64_t v135 = ++v136;
      }
      while ([v134 count] > (unint64_t)v136);
    }
    if ([v108 count])
    {
      v160 = 0;
      while (1)
      {
        v161 = (id *)(id)[v108 objectAtIndexedSubscript:v160];
        id v162 = -[UICollectionViewUpdateItem _indexPath](v161);
        id v163 = -[UICollectionViewUpdateItem _newIndexPath](v161);
        if (!v161) {
          break;
        }
        id v165 = v161[1];
        uint64_t v164 = (uint64_t)v161[2];
        uint64_t v167 = (uint64_t)v161[3];
        uint64_t v166 = (uint64_t)v161[4];
        id v168 = v161[6];
        uint64_t v169 = -[UICollectionViewData numberOfSections]((uint64_t)v316);
        if (v168 != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          v325 = v160;
          uint64_t v171 = v166;
          uint64_t v172 = v164;
          uint64_t v173 = (uint64_t)v165;
          if ((uint64_t)v165 < v169) {
            goto LABEL_237;
          }
LABEL_276:
          uint64_t v193 = v173;
          v194 = [MEMORY[0x1E4F28B00] currentHandler];
          [v194 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10935, @"attempt to move index path (%@) from a section that does not exist - there are only %ld sections before the update", v162, -[UICollectionViewData numberOfSections]((uint64_t)v316) object file lineNumber description];

          uint64_t v173 = v193;
          uint64_t v171 = v166;
          uint64_t v172 = v164;
LABEL_237:
          v331 = (void *)v173;
          if (v172 >= -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v316, v173))
          {
            v190 = [MEMORY[0x1E4F28B00] currentHandler];
            [v190 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10936, @"attempt to move index path (%@) that does not exist - there are only %ld items in section %ld before the update", v162, -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v316, (uint64_t)v331), v331 object file lineNumber description];
          }
          if (v167 >= -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData))
          {
            v191 = [MEMORY[0x1E4F28B00] currentHandler];
            [v191 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10937, @"attempt to move index path (%@) to index path (%@) in section that does not exist - there are only %ld sections after the update", v162, v163, -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData) object file lineNumber description];
          }
          if (v171 >= -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v318->_collectionViewData, v167))
          {
            v170 = [MEMORY[0x1E4F28B00] currentHandler];
            [v170 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10938, @"attempt to move index path (%@) to index path (%@) that does not exist - there are only %ld items in section %ld after the update", v162, v163, -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v318->_collectionViewData, v167), v167 object file lineNumber description];
LABEL_274:
          }
          v160 = v325;
          goto LABEL_243;
        }
        v331 = v165;
        if ((uint64_t)v165 >= v169)
        {
          v189 = [MEMORY[0x1E4F28B00] currentHandler];
          [v189 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10931, @"attempt to move section %ld, but there are only %ld sections before the update", v165, -[UICollectionViewData numberOfSections]((uint64_t)v316) object file lineNumber description];
        }
        if (v167 >= -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData))
        {
          v325 = v160;
          v170 = [MEMORY[0x1E4F28B00] currentHandler];
          [v170 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10932, @"attempt to to move section %ld to section %ld, but there are only %ld sections after the update", v165, v167, -[UICollectionViewData numberOfSections]((uint64_t)v318->_collectionViewData), v290 object file lineNumber description];
          goto LABEL_274;
        }
LABEL_243:
        v320 = (void *)v167;
        v174 = v160 + 1;
        int v175 = (int)v174;
        if ([v323 countForObject:v162] == 1)
        {
          int v175 = (int)v174;
          if ([(UICollectionView *)v310 countForObject:v163] == 1) {
            int v175 = [v108 count];
          }
        }
        v326 = v174;
        if ([v108 count] > (unint64_t)v175)
        {
          uint64_t v176 = v175;
          int v177 = v175;
          while (1)
          {
            v178 = (id *)(id)[v108 objectAtIndexedSubscript:v176];
            id v179 = -[UICollectionViewUpdateItem _indexPath](v178);
            id v180 = -[UICollectionViewUpdateItem _newIndexPath](v178);
            int v181 = -[UICollectionViewUpdateItem _initialIndexPathEqualToUpdateItem:]((uint64_t)v161, v178);
            int v182 = -[UICollectionViewUpdateItem _finalIndexPathEqualToUpdateItem:]((uint64_t)v161, v178);
            if (!v181) {
              break;
            }
            if (!v182)
            {
              if (v161) {
                BOOL v186 = v161[6] == (id)0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                BOOL v186 = 0;
              }
              v187 = [MEMORY[0x1E4F28B00] currentHandler];
              v185 = v187;
              if (v186)
              {
                if (v178) {
                  id v188 = v178[3];
                }
                else {
                  id v188 = 0;
                }
                objc_msgSend(v187, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10957, @"attempt to move section %ld to both section %ld and section %ld", v331, v320, v188);
              }
              else
              {
                [v187 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10960, @"attempt to move item at index path %@ to both %@ and %@", v162, v163, v180 object file lineNumber description];
              }
              goto LABEL_264;
            }
            [v108 removeObjectAtIndex:v176];
LABEL_266:
            uint64_t v176 = v177;
            if ([v108 count] <= (unint64_t)v177) {
              goto LABEL_271;
            }
          }
          if (v182)
          {
            if (v161) {
              BOOL v183 = v161[6] == (id)0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              BOOL v183 = 0;
            }
            v184 = [MEMORY[0x1E4F28B00] currentHandler];
            v185 = v184;
            if (v183) {
              objc_msgSend(v184, "handleFailureInMethod:object:file:lineNumber:description:", sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10966, @"attempt to move both section %ld and section %ld to section %ld", objc_msgSend(v162, "section"), objc_msgSend(v179, "section"), objc_msgSend(v163, "section"));
            }
            else {
              [v184 handleFailureInMethod:sel__validateSortedDeleteItems_moveItems_movedSourceIndexPaths_movedDestinationIndexPaths_insertItems_oldCollectionViewData_, v318, @"UICollectionView.m", 10969, @"attempt to move both item at index path %@ and %@ to %@", v162, v179, v163 object file lineNumber description];
            }
LABEL_264:
          }
          ++v177;
          goto LABEL_266;
        }
LABEL_271:
        v160 = v326;
        if ([v108 count] <= (unint64_t)v326) {
          goto LABEL_277;
        }
      }
      v325 = v160;
      uint64_t v192 = -[UICollectionViewData numberOfSections]((uint64_t)v316);
      uint64_t v166 = 0;
      uint64_t v164 = 0;
      uint64_t v173 = 0;
      uint64_t v167 = 0;
      uint64_t v171 = 0;
      uint64_t v172 = 0;
      if (v192 <= 0) {
        goto LABEL_276;
      }
      goto LABEL_237;
    }
LABEL_277:

    v195 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v108, "count") + objc_msgSend(v313, "count") + objc_msgSend(v307, "count"));
    [v195 addObjectsFromArray:v313];
    [v195 addObjectsFromArray:v108];
    [v195 addObjectsFromArray:v307];
    v196 = [UICollectionViewUpdate alloc];
    self = v318;
    v314 = v195;
    v197 = -[UICollectionViewUpdate initWithCollectionView:updateItems:moveItemSourceIndexPaths:oldModel:newModel:oldContentOffset:newContentOffset:]((id *)&v196->super.isa, v318, v195, v323, v316, v318->_collectionViewData, *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8), *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8));
    currentUpdate = v318->_currentUpdate;
    v318->_currentUpdate = (UICollectionViewUpdate *)v197;

    v199 = v318->_currentUpdate;
    if (!v199 || !v199->_updateMaps.updatesAreInvalid)
    {
      -[_UICollectionViewDragAndDropController commitReorderedItems]((uint64_t)v318->_dragAndDropController);
      id v10 = v294;
      id v9 = v295;
      if (dyld_program_sdk_at_least())
      {
        unint64_t v265 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B40);
        if (*(unsigned char *)v265)
        {
          v289 = *(id *)(v265 + 8);
          if (os_log_type_enabled(v289, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134218242;
            v370 = v318;
            __int16 v371 = 2112;
            *(void *)v372 = v316;
            _os_log_impl(&dword_1853B0000, v289, OS_LOG_TYPE_ERROR, "_endItemAnims: cv == %p; Attempting to save anchor for data %@",
              buf,
              0x16u);
          }

          id v10 = v294;
          id v9 = v295;
          self = v318;
        }
        -[UICollectionView _saveContentOffsetRestorationAnchorIfNecessaryUsingModel:]((uint64_t)self, v316);
      }
      [(UICollectionViewLayout *)self->_layout _prepareForCollectionViewUpdates:v314 withDataSourceTranslator:self->_currentUpdate];
      v266 = self->_collectionViewData;
      if (v266) {
        v266->_preUpdateCachedItemCount = v266->_globalItemMap.__table_.__p2_.__value_;
      }
      id v267 = v299;
      if (!v299) {
        id v267 = objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
      }
      id v299 = v267;
      if (!v293 && [v314 count]) {
        [v267 _setInvalidateDataSourceCounts:1];
      }
      [v267 _setUpdateItems:v314];
      if ([(UICollectionViewLayout *)self->_layout _estimatesSizes])
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v268 = v267;
          [v268 _setRetainExistingSizingInfoForEstimates:1];
        }
      }
      [(UICollectionViewLayout *)self->_layout _invalidateLayoutUsingContext:v267];
      v269 = [(UICollectionView *)self _dataSourceActual];
      char v270 = objc_opt_respondsToSelector();

      if (v270)
      {
        v271 = [(UICollectionView *)self _dataSourceActual];
        [v271 _collectionView:self willPerformUpdates:v314];
      }
      v272 = [(UICollectionView *)self _focusedItemState];
      v273 = self->_currentUpdate;
      newFocusedItemState = v273->_newFocusedItemState;
      v273->_newFocusedItemState = v272;

      objc_storeStrong((id *)&self->_currentUpdate->_oldFocusedItemState, v272);
      int v308 = 0;
      char v206 = 1;
      CGFloat v93 = v297;
      goto LABEL_291;
    }
    v200 = NSString;
    v201 = v199->_invalidUpdatesErrorMessage;
    CGRect v159 = [v200 stringWithFormat:@"%@\nCollection view: %@", v201, v318];

    id v10 = v294;
    id v9 = v295;
    if (dyld_program_sdk_at_least()
      && ![(UICollectionView *)v318 _isConnectedToDiffableDataSource]
      && !_UICollectionViewShouldRescueClientWithReloadDataFallbackForInvalidBatchUpdates(v159))
    {
      [(UICollectionView *)v318 _Bug_Detected_In_Client_Of_UICollectionView_Invalid_Batch_Updates:v159];
      int v308 = 0;
      CGFloat v93 = v297;
      goto LABEL_290;
    }
    CGFloat v93 = v297;
    if (!os_variant_has_internal_diagnostics())
    {
      v202 = *(id *)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258B38) + 8);
      if (os_log_type_enabled(v202, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v370 = v159;
        _os_log_impl(&dword_1853B0000, v202, OS_LOG_TYPE_ERROR, "Performing reloadData as a fallback — %@", buf, 0xCu);
      }

LABEL_289:
      int v308 = 1;
      goto LABEL_290;
    }
    v288 = __UIFaultDebugAssertLog();
    if (os_log_type_enabled(v288, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412290;
      v370 = v159;
      _os_log_fault_impl(&dword_1853B0000, v288, OS_LOG_TYPE_FAULT, "Performing reloadData as a fallback — %@", buf, 0xCu);
    }
  }
  else
  {
LABEL_226:

    CGRect v159 = v310;
    v314 = 0;
  }
  int v308 = 1;
  id v10 = v294;
  id v9 = v295;
  self = v318;
  CGFloat v93 = v297;
LABEL_290:

  -[_UICollectionViewDragAndDropController commitReorderedItems]((uint64_t)self->_dragAndDropController);
  char v206 = 0;
LABEL_291:
  int64_t v207 = -[UICollectionViewData numberOfSections]((uint64_t)v93);
  v208 = malloc_type_malloc(8 * v207, 0x100004000313F17uLL);
  if (v207 >= 1)
  {
    for (uint64_t m = 0; m != v207; ++m)
      v208[m] = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v93, m);
  }
  size_t v210 = -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData);
  v321 = malloc_type_calloc(8uLL, v210, 0x827762F2uLL);
  v334 = malloc_type_calloc(8uLL, v207, 0x27FD84F6uLL);
  v332 = malloc_type_calloc(8uLL, v210, 0x2E5EF6D7uLL);
  v327 = malloc_type_calloc(8uLL, v207, 0xD9FDB1BuLL);
  v211 = v306;
  if ((v206 & 1) == 0)
  {
    char v221 = 0;
    v222 = v296;
    goto LABEL_358;
  }
  int64_t v305 = v207;
  uint64_t v317 = v210;
  long long v347 = 0u;
  long long v348 = 0u;
  long long v345 = 0u;
  long long v346 = 0u;
  id v212 = v301;
  uint64_t v213 = [v212 countByEnumeratingWithState:&v345 objects:v367 count:16];
  if (!v213)
  {
    uint64_t v215 = 0;
    int64_t v217 = v305;
    v218 = v321;
    goto LABEL_310;
  }
  uint64_t v214 = v213;
  uint64_t v215 = 0;
  uint64_t v216 = *(void *)v346;
  int64_t v217 = v305;
  v218 = v321;
  do
  {
    for (uint64_t n = 0; n != v214; ++n)
    {
      if (*(void *)v346 != v216) {
        objc_enumerationMutation(v212);
      }
      uint64_t v220 = *(void *)(*((void *)&v345 + 1) + 8 * n);
      if (v220)
      {
        if (*(void *)(v220 + 48) == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v215 = (v215 + 1);
          --v217;
          continue;
        }
        uint64_t v220 = *(void *)(v220 + 40);
      }
      ++v334[v220];
    }
    uint64_t v214 = [v212 countByEnumeratingWithState:&v345 objects:v367 count:16];
  }
  while (v214);
LABEL_310:

  long long v343 = 0u;
  long long v344 = 0u;
  long long v341 = 0u;
  long long v342 = 0u;
  id v223 = v306;
  uint64_t v224 = [v223 countByEnumeratingWithState:&v341 objects:v366 count:16];
  v311 = v208;
  if (!v224)
  {
    uint64_t v226 = 0;
    goto LABEL_324;
  }
  uint64_t v225 = v224;
  uint64_t v226 = 0;
  uint64_t v227 = *(void *)v342;
  while (2)
  {
    uint64_t v228 = 0;
    while (2)
    {
      if (*(void *)v342 != v227) {
        objc_enumerationMutation(v223);
      }
      uint64_t v229 = *(void *)(*((void *)&v341 + 1) + 8 * v228);
      if (v229)
      {
        if (*(void *)(v229 + 48) == 0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v226 = (v226 + 1);
          ++v217;
          goto LABEL_320;
        }
        uint64_t v229 = *(void *)(v229 + 40);
      }
      ++v218[v229];
LABEL_320:
      if (v225 != ++v228) {
        continue;
      }
      break;
    }
    uint64_t v225 = [v223 countByEnumeratingWithState:&v341 objects:v366 count:16];
    if (v225) {
      continue;
    }
    break;
  }
LABEL_324:

  long long v339 = 0u;
  long long v340 = 0u;
  long long v337 = 0u;
  long long v338 = 0u;
  id v230 = v296;
  uint64_t v231 = [v230 countByEnumeratingWithState:&v337 objects:v365 count:16];
  if (!v231) {
    goto LABEL_338;
  }
  uint64_t v232 = v231;
  uint64_t v233 = *(void *)v338;
  while (2)
  {
    uint64_t v234 = 0;
    while (2)
    {
      if (*(void *)v338 != v233) {
        objc_enumerationMutation(v230);
      }
      v235 = *(void **)(*((void *)&v337 + 1) + 8 * v234);
      if (!v235)
      {
        uint64_t v236 = 0;
        uint64_t v237 = 0;
        goto LABEL_332;
      }
      if (v235[6] != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v236 = v235[1];
        uint64_t v237 = v235[3];
LABEL_332:
        if ([(UICollectionViewUpdate *)v318->_currentUpdate finalSectionIndexForInitialSectionIndex:v236] != v237)
        {
          ++v327[v236];
          ++v332[v237];
        }
      }
      if (v232 != ++v234) {
        continue;
      }
      break;
    }
    uint64_t v238 = [v230 countByEnumeratingWithState:&v337 objects:v365 count:16];
    uint64_t v232 = v238;
    if (v238) {
      continue;
    }
    break;
  }
LABEL_338:

  if (v217 != v317)
  {
    self = v318;
    v247 = [NSString stringWithFormat:@"Invalid update: invalid number of sections. The number of sections contained in the collection view after the update (%d) must be equal to the number of sections contained in the collection view before the update (%d), plus or minus the number of sections inserted or deleted (%d inserted, %d deleted). Collection view: %@", v317, v305, v226, v215, v318];
    CGFloat v93 = v297;
    v211 = v306;
    v208 = v311;
    if ([(UICollectionView *)v318 _isConnectedToDiffableDataSource])
    {
      v248 = [(UICollectionView *)v318 _diffableDataSourceImpl];
      uint64_t v249 = [v248 currentTransaction];
      v250 = (void *)v249;
      id v10 = v294;
      id v9 = v295;
      if (v248 && v249)
      {
        -[UICollectionView stringByAppendingFormat:](v247, "stringByAppendingFormat:", @"; Diffable transaction: %@",
        uint64_t v251 = v249);

        v247 = (UICollectionView *)v251;
      }
      v252 = *(id *)(__UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B48) + 8);
      if (os_log_type_enabled(v252, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v370 = v247;
        _os_log_impl(&dword_1853B0000, v252, OS_LOG_TYPE_ERROR, "Performing reloadData as a fallback — %@", buf, 0xCu);
      }

      int v308 = 1;
      self = v318;
    }
    else
    {
      [(UICollectionView *)v318 _Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Sections:v247];
      id v10 = v294;
      id v9 = v295;
    }
    v222 = v296;
    goto LABEL_355;
  }
  self = v318;
  v222 = v296;
  v211 = v306;
  if (v317 < 1)
  {
    char v221 = 1;
    id v10 = v294;
    id v9 = v295;
LABEL_357:
    CGFloat v93 = v297;
    v208 = v311;
    goto LABEL_358;
  }
  uint64_t v239 = 0;
  id v10 = v294;
  id v9 = v295;
  while (2)
  {
    uint64_t v240 = [(UICollectionViewUpdate *)v318->_currentUpdate initialSectionIndexForFinalSectionIndex:v239];
    if (v240 == 0x7FFFFFFFFFFFFFFFLL)
    {
LABEL_344:
      if (v317 == ++v239)
      {
        char v221 = 1;
        goto LABEL_357;
      }
      continue;
    }
    break;
  }
  uint64_t v241 = v240;
  uint64_t v242 = v311[v240];
  uint64_t v243 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v318->_collectionViewData, v239);
  if ((v243 & 0x8000000000000000) == 0)
  {
    uint64_t v244 = v332[v239];
    uint64_t v245 = v334[v241];
    uint64_t v246 = v321[v239];
    if (v243 != v242 + v244 - (v327[v241] + v245) + v246)
    {
      v247 = [NSString stringWithFormat:@"Invalid update: invalid number of items in section %d. The number of items contained in an existing section after the update (%d) must be equal to the number of items contained in that section before the update (%d), plus or minus the number of items inserted or deleted from that section (%d inserted, %d deleted) and plus or minus the number of items moved into or out of that section (%d moved in, %d moved out). Collection view: %@", v239, v243, v242, v246, v245, v244, v327[v241], v318];
      if (!dyld_program_sdk_at_least()
        || [(UICollectionView *)v318 _isConnectedToDiffableDataSource]
        || _UICollectionViewShouldRescueClientWithReloadDataFallbackForInvalidBatchUpdates(v247))
      {
        v276 = *(id *)(__UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B58) + 8);
        CGFloat v93 = v297;
        if (os_log_type_enabled(v276, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v370 = v247;
          _os_log_impl(&dword_1853B0000, v276, OS_LOG_TYPE_ERROR, "Performing reloadData as a fallback — %@", buf, 0xCu);
        }

        int v308 = 1;
        goto LABEL_409;
      }
LABEL_408:
      [(UICollectionView *)v318 _Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Items_In_Section:v247];
      CGFloat v93 = v297;
LABEL_409:
      v208 = v311;
      goto LABEL_355;
    }
    goto LABEL_344;
  }
  v247 = [NSString stringWithFormat:@"Invalid update: invalid number of items in section %d. Attempt to delete more items than exist in section. Collection view: %@", v241, v318];
  if (dyld_program_sdk_at_least()
    && ![(UICollectionView *)v318 _isConnectedToDiffableDataSource]
    && !_UICollectionViewShouldRescueClientWithReloadDataFallbackForInvalidBatchUpdates(v247))
  {
    goto LABEL_408;
  }
  v275 = *(id *)(__UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B50) + 8);
  CGFloat v93 = v297;
  v208 = v311;
  if (os_log_type_enabled(v275, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v370 = v247;
    _os_log_impl(&dword_1853B0000, v275, OS_LOG_TYPE_ERROR, "Performing reloadData as a fallback — %@", buf, 0xCu);
  }

  int v308 = 1;
LABEL_355:

  char v221 = 0;
LABEL_358:
  free(v208);
  free(v321);
  free(v334);
  free(v332);
  free(v327);
  if (v221)
  {
    BOOL v107 = [(UICollectionView *)self _updateWithItems:v314 tentativelyForReordering:v293 propertyAnimator:v9 collectionViewAnimator:v10];
    if (![(UICollectionViewLayout *)self->_layout _estimatesSizes]) {
      [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
    }
  }
  else
  {
    BOOL v107 = 0;
  }

  if (v308)
  {
LABEL_363:
    v253 = self->_currentUpdate;
    self->_currentUpdate = 0;

    v254 = _Block_copy(self->_updateCompletionHandler);
    id updateCompletionHandler = self->_updateCompletionHandler;
    self->_id updateCompletionHandler = 0;

    if (![(UICollectionViewLayout *)self->_layout _estimatesSizes]) {
      [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
    }
    [(UICollectionView *)self reloadData];
    if (v254)
    {
      v256 = MEMORY[0x1E4F14428];
      id v257 = MEMORY[0x1E4F14428];
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __119__UICollectionView__endItemAnimationsWithInvalidationContext_tentativelyForReordering_animator_collectionViewAnimator___block_invoke;
      block[3] = &unk_1E52DA040;
      id v336 = v254;
      dispatch_async(v256, block);
    }
  }
  --self->_updateCount;
  [(UICollectionView *)self _resetUpdateItemArrays];
  *((void *)&self->_collectionViewFlags + 1) &= ~0x400000000uLL;
  [(UICollectionView *)self _resumeReloads];
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x8000000000) != 0)
  {
    -[UICollectionView _updateFocusedCellIndexPathIfNecessaryWithLastFocusedRect:](self, "_updateFocusedCellIndexPathIfNecessaryWithLastFocusedRect:", v16, v17, v18, v19);
    [(UIView *)self setNeedsFocusUpdate];
    *((void *)&self->_collectionViewFlags + 1) &= ~0x8000000000uLL;
  }
  postUpdateBlocunint64_t k = self->_postUpdateBlock;
  if (postUpdateBlock)
  {
    v259 = (void (**)(void))_Block_copy(postUpdateBlock);
    id v260 = self->_postUpdateBlock;
    self->_postUpdateBlocunint64_t k = 0;

    v259[2](v259);
  }
  if (v107 && (*((void *)&self->_collectionViewFlags + 1) & 0x100) != 0) {
    [(UICollectionView *)self _updateVisibleCellsNow:1];
  }
  _UIRestorePreviousFallbackEnvironment(v298);
  unint64_t v261 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258B60);
  v262 = *(id *)(v261 + 8);
  os_signpost_id_t v263 = os_signpost_id_make_with_pointer(*(os_log_t *)(v261 + 8), self);
  if (v263 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v264 = v263;
    if (os_signpost_enabled(v262))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1853B0000, v262, OS_SIGNPOST_INTERVAL_END, v264, "BatchUpdates", "", buf, 2u);
    }
  }
}

- (void)_clearSpecificInvalidationLists
{
  if (a1)
  {
    uint64_t v2 = (void *)a1[321];
    a1[321] = 0;

    uint64_t v3 = (void *)a1[322];
    a1[322] = 0;

    BOOL v4 = (void *)a1[323];
    a1[323] = 0;
  }
}

- (id)_arrayForUpdateAction:(int)a3
{
  switch(a3)
  {
    case 0:
      uint64_t v4 = 2336;
      goto LABEL_9;
    case 1:
      uint64_t v4 = 2344;
      goto LABEL_9;
    case 2:
      uint64_t v4 = 2352;
      goto LABEL_9;
    case 3:
      uint64_t v4 = 2360;
LABEL_9:
      id v7 = (void **)((char *)&self->super.super.super.super.isa + v4);
      id v8 = *(Class *)((char *)&self->super.super.super.super.isa + v4);
      if (!v8)
      {
        id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        id v10 = *v7;
        *id v7 = v9;

        id v8 = *v7;
      }
      id v5 = v8;
      break;
    default:
      id v5 = 0;
      break;
  }
  return v5;
}

- (id)_sectionsWithSectionOperationsInUpdateItems:(void *)a1
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      a1 = 0;
      uint64_t v7 = *(void *)v14;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          if (v9 && v9[6] == 0x7FFFFFFFFFFFFFFFLL)
          {
            id v10 = -[UICollectionViewUpdateItem _indexPath](v9);
            uint64_t v11 = [v10 section];

            if (a1)
            {
              [a1 addIndex:v11];
            }
            else
            {
              a1 = [MEMORY[0x1E4F28E60] indexSetWithIndex:v11];
            }
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v6);
    }
    else
    {
      a1 = 0;
    }
  }

  return a1;
}

- (void)_saveContentOffsetRestorationAnchorIfNecessaryUsingModel:(uint64_t)a1
{
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  if (!a1) {
    goto LABEL_21;
  }
  if (*(void *)(a1 + 2936))
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589A0);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      uint64_t v5 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134217984;
        uint64_t v74 = a1;
        uint64_t v6 = "_saveContentOffset: cv == %p; not saving -- a scrolling target index path exists";
LABEL_56:
        _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_ERROR, v6, buf, 0xCu);
        goto LABEL_21;
      }
    }
    goto LABEL_21;
  }
  if (!*(void *)(a1 + 2912))
  {
    if (((*(unsigned __int16 *)(a1 + 2648) | (*(unsigned __int8 *)(a1 + 2650) << 16)) & 0x100000) != 0)
    {
      unint64_t v14 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589B0);
      if (*(unsigned char *)v14)
      {
        uint64_t v5 = *(NSObject **)(v14 + 8);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134217984;
          uint64_t v74 = a1;
          uint64_t v6 = "_saveContentOffset: cv == %p; not saving -- saving disabled";
          goto LABEL_56;
        }
      }
      goto LABEL_21;
    }
    uint64_t v8 = [*(id *)(a1 + 2064) _layoutAxis];
    if ((unint64_t)(v8 - 1) > 1) {
      goto LABEL_21;
    }
    unint64_t v9 = v8;
    int v10 = *(unsigned __int16 *)(a1 + 2648);
    unsigned int v11 = (v10 | (*(unsigned __int8 *)(a1 + 2650) << 16) | 0x100000u) >> 16;
    *(_WORD *)(a1 + 2648) = v10;
    *(unsigned char *)(a1 + 2650) = v11;
    int v12 = dyld_program_sdk_at_least();
    if (!v3
      || !v12
      || !v3[21]
      || !-[_UICollectionViewSubviewManager hasVisibleCells](*(void *)(a1 + 2896))
      || [(id)a1 _isReordering])
    {
      unint64_t v13 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589B8);
      if (*(unsigned char *)v13)
      {
        uint64_t v5 = *(NSObject **)(v13 + 8);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134217984;
          uint64_t v74 = a1;
          uint64_t v6 = "_saveContentOffset: cv == %p; not saving -- restoration preconditions not met";
          goto LABEL_56;
        }
      }
      goto LABEL_21;
    }
    [(id)a1 contentOffset];
    if ([(UICollectionView *)(_DWORD *)a1 _isContentOffset:v15 atStartOfAxis:v16])
    {
      unint64_t v17 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589C0);
      if ((*(unsigned char *)v17 & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v18 = *(NSObject **)(v17 + 8);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_21;
      }
      double v19 = v18;
      uint64_t v20 = _UIAxisDescription(v9);
      *(_DWORD *)buf = 134218242;
      uint64_t v74 = a1;
      __int16 v75 = 2112;
      uint64_t v76 = (uint64_t)v20;
      unint64_t v21 = "_saveContentOffset: cv == %p; not saving -- scrolled to the start of layout axis (%@)";
      unint64_t v22 = v19;
LABEL_59:
      _os_log_impl(&dword_1853B0000, v22, OS_LOG_TYPE_ERROR, v21, buf, 0x16u);
      goto LABEL_52;
    }
    if ([(id)a1 _isInSetContentOffset])
    {
      double v23 = *(double *)(a1 + 2656);
      double v24 = *(double *)(a1 + 2664);
    }
    else
    {
      [(id)a1 contentOffset];
      double v23 = v25;
      double v24 = v26;
    }
    [(id)a1 _visibleBounds];
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    double v34 = v33;
    double MaxX = v27;
    if ((*(_DWORD *)(a1 + 112) & 0x80000) != 0)
    {
      double MaxX = v27;
      if (([(id)a1 _flipsHorizontalAxis] & 1) == 0)
      {
        v87.origin.CGFloat x = v28;
        v87.origin.CGFloat y = v30;
        v87.size.CGFloat width = v32;
        v87.size.CGFloat height = v34;
        double MaxX = CGRectGetMaxX(v87);
      }
    }
    double v19 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](v3, 0, v28, v30, v32, v34);
    if ([v19 count])
    {
      v72[0] = MEMORY[0x1E4F143A8];
      v72[1] = 3221225472;
      v72[2] = __77__UICollectionView__saveContentOffsetRestorationAnchorIfNecessaryUsingModel___block_invoke;
      v72[3] = &unk_1E52E5338;
      v72[4] = a1;
      CGFloat v36 = [(UICollectionView *)a1 _layoutAttributesClosestToReferencePoint:v9 amongCandidates:v72 onAxis:MaxX shouldConsiderBlock:v30];
      uint64_t v20 = v36;
      if (v36)
      {
        CGFloat v37 = *(id ***)(a1 + 2896);
        uint64_t v38 = [v36 indexPath];
        id v39 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](v37, (uint64_t)v38);

        if (!v39)
        {

          uint64_t v20 = 0;
        }
      }
      if ((*(void *)(a1 + 2632) & 0x20000000000000) != 0)
      {
        id v40 = [v20 indexPath];
        uint64_t v41 = [(id)a1 _delegateProxy];
        long long v42 = [v41 _collectionView:a1 indexPathOfReferenceItemToPreserveContentOffsetWithProposedReference:v40];

        if ((UIEqual(v42, v40) & 1) == 0)
        {
          if (v42)
          {
            uint64_t v43 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)v3, v42);
          }
          else
          {
            uint64_t v43 = 0;
          }

          uint64_t v20 = v43;
        }
      }
      if (!v20)
      {
        unint64_t v69 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589D0);
        if ((*(unsigned char *)v69 & 1) == 0) {
          goto LABEL_52;
        }
        uint64_t v70 = *(NSObject **)(v69 + 8);
        if (!os_log_type_enabled(v70, OS_LOG_TYPE_ERROR)) {
          goto LABEL_52;
        }
        uint64_t v71 = *(void *)(a1 + 2192);
        *(_DWORD *)buf = 134218242;
        uint64_t v74 = a1;
        __int16 v75 = 2112;
        uint64_t v76 = v71;
        unint64_t v21 = "_saveContentOffset: cv == %p; not saving -- no attributes available to reference. Current update: %@";
        unint64_t v22 = v70;
        goto LABEL_59;
      }
      unsigned int v47 = (*(unsigned __int16 *)(a1 + 2648) | (*(unsigned __int8 *)(a1 + 2650) << 16)) & 0xFFEFFFFF;
      *(_WORD *)(a1 + 2648) = *(_WORD *)(a1 + 2648);
      *(unsigned char *)(a1 + 2650) = BYTE2(v47);
      uint64_t v48 = [v20 indexPath];
      uint64_t v49 = *(void **)(a1 + 2912);
      *(void *)(a1 + 2912) = v48;

      [v20 frame];
      CGFloat v51 = v50;
      CGFloat v53 = v52;
      CGFloat v55 = v54;
      CGFloat v57 = v56;
      *(double *)(a1 + 2920) = v23 - v50;
      *(double *)(a1 + 2928) = v24 - v52;
      [(id)a1 _contentInsetIncludingDecorations];
      double v60 = v59 + *(double *)(a1 + 2928);
      *(double *)(a1 + 2920) = v58 + *(double *)(a1 + 2920);
      *(double *)(a1 + 2928) = v60;
      unint64_t v61 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589D8);
      if ((*(unsigned char *)v61 & 1) == 0) {
        goto LABEL_52;
      }
      id v62 = *(NSObject **)(v61 + 8);
      if (!os_log_type_enabled(v62, OS_LOG_TYPE_ERROR)) {
        goto LABEL_52;
      }
      int v63 = *(void **)(a1 + 2912);
      id v46 = v62;
      uint64_t v64 = [v63 section];
      uint64_t v65 = [*(id *)(a1 + 2912) item];
      v89.origin.CGFloat x = v51;
      v89.origin.CGFloat y = v53;
      v89.size.CGFloat width = v55;
      v89.size.CGFloat height = v57;
      uint64_t v66 = NSStringFromCGRect(v89);
      uint64_t v67 = NSStringFromCGPoint(*(CGPoint *)(a1 + 2920));
      v86.CGFloat x = v23;
      v86.CGFloat y = v24;
      uint64_t v68 = NSStringFromCGPoint(v86);
      *(_DWORD *)buf = 134219266;
      uint64_t v74 = a1;
      __int16 v75 = 2048;
      uint64_t v76 = v64;
      __int16 v77 = 2048;
      uint64_t v78 = v65;
      __int16 v79 = 2112;
      uint64_t v80 = v66;
      __int16 v81 = 2112;
      CGRect v82 = v67;
      __int16 v83 = 2112;
      long long v84 = v68;
      _os_log_impl(&dword_1853B0000, v46, OS_LOG_TYPE_ERROR, "_saveContentOffset: cv == %p; saved (%zd - %zd). Item Frame: %@, offsetIntoAnchor: %@, contentOffset: %@",
        buf,
        0x3Eu);
    }
    else
    {
      unint64_t v44 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589C8);
      if ((*(unsigned char *)v44 & 1) == 0) {
        goto LABEL_53;
      }
      long long v45 = *(NSObject **)(v44 + 8);
      if (!os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
        goto LABEL_53;
      }
      uint64_t v20 = v45;
      v88.origin.CGFloat x = v28;
      v88.origin.CGFloat y = v30;
      v88.size.CGFloat width = v32;
      v88.size.CGFloat height = v34;
      id v46 = NSStringFromCGRect(v88);
      *(_DWORD *)buf = 134218242;
      uint64_t v74 = a1;
      __int16 v75 = 2112;
      uint64_t v76 = (uint64_t)v46;
      _os_log_impl(&dword_1853B0000, v20, OS_LOG_TYPE_ERROR, "_saveContentOffset: cv == %p; not saving -- no layout attributes in visible bounds (%@)",
        buf,
        0x16u);
    }

LABEL_52:
LABEL_53:

    goto LABEL_21;
  }
  unint64_t v7 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589A8);
  if (*(unsigned char *)v7)
  {
    uint64_t v5 = *(NSObject **)(v7 + 8);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v74 = a1;
      uint64_t v6 = "_saveContentOffset: cv == %p; not saving -- already have an anchor";
      goto LABEL_56;
    }
  }
LABEL_21:
}

- (void)_resetUpdateItemArrays
{
  insertItems = self->_insertItems;
  self->_insertItems = 0;

  deleteItems = self->_deleteItems;
  self->_deleteItems = 0;

  reloadItems = self->_reloadItems;
  self->_reloadItems = 0;

  moveItems = self->_moveItems;
  self->_moveItems = 0;

  originalDeleteItems = self->_originalDeleteItems;
  self->_originalDeleteItems = 0;

  originalInsertItems = self->_originalInsertItems;
  self->_originalInsertItems = 0;
}

- (id)_sortedDeduplicatedReloadItems
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = self->_reloadItems;
  id v3 = v2;
  if (v2)
  {
    if ((unint64_t)[(NSMutableArray *)v2 count] > 1)
    {
      uint64_t v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", -[NSMutableArray count](v3, "count"));
      uint64_t v5 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithCapacity:", -[NSMutableArray count](v3, "count"));
      long long v14 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      uint64_t v6 = v3;
      uint64_t v7 = [(NSMutableArray *)v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = *(void *)v15;
        do
        {
          for (uint64_t i = 0; i != v8; ++i)
          {
            if (*(void *)v15 != v9) {
              objc_enumerationMutation(v6);
            }
            unsigned int v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
            int v12 = -[UICollectionViewUpdateItem _indexPath](v11);
            if ((objc_msgSend(v5, "containsObject:", v12, (void)v14) & 1) == 0)
            {
              [v5 addObject:v12];
              objc_msgSend(v4, "insertObject:atIndex:", v11, objc_msgSend(v4, "indexOfObject:inSortedRange:options:usingComparator:", v11, 0, objc_msgSend(v4, "count"), 1024, &__block_literal_global_757));
            }
          }
          uint64_t v8 = [(NSMutableArray *)v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v4 = (void *)[(NSMutableArray *)v3 mutableCopy];
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

- _isContentOffset:(CGFloat)a3 atStartOfAxis:(CGFloat)a4
{
  if (result)
  {
    uint64_t v7 = result;
    [result _contentInsetIncludingDecorations];
    if (a2 == 1)
    {
      double v12 = v9;
      if (v7[28] & 0x80000) == 0 || (double v13 = v10, ([v7 _flipsHorizontalAxis]))
      {
        double v11 = a3 + v12;
        return (_DWORD *)(v11 <= 0.001);
      }
      [v7 contentSize];
      double v15 = v14;
      [v7 bounds];
      v16.origin.CGFloat x = a3;
      v16.origin.CGFloat y = a4;
      return (_DWORD *)(CGRectGetMaxX(v16) - (v13 + v15) + 0.001 >= 0.0);
    }
    else
    {
      if (a2 == 2)
      {
        double v11 = a4 + v8;
        return (_DWORD *)(v11 <= 0.001);
      }
      return 0;
    }
  }
  return result;
}

- (BOOL)_shouldDeriveVisibleBoundsFromContainingScrollView
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 47) & 1;
}

void __36__UICollectionView__indexBarEntries__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  id v8 = [v5 _indexPathForEntryWithTitle:v6 atIndex:a3 validateTitles:0];
  uint64_t v7 = +[UIIndexBarEntry entryWithTitle:v6];

  if (v8) {
    [v7 setIndexPath:v8];
  }
  [*(id *)(a1 + 40) addObject:v7];
}

- (id)_indexPathForEntryWithTitle:(id)a3 atIndex:(int64_t)a4 validateTitles:(BOOL)a5
{
  BOOL v5 = a5;
  id v9 = a3;
  if (v5)
  {
    double v10 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
    uint64_t v11 = [v10 count];

    if (!v11)
    {
LABEL_15:
      double v14 = 0;
      goto LABEL_16;
    }
  }
  p_collectionViewFlags = &self->_collectionViewFlags;
  if ((*(void *)&self->_collectionViewFlags & 0x1000000000000000) != 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
    double v14 = [WeakRetained _collectionView:self indexPathForSectionIndexTitle:v9 atIndex:a4];

    if (v14) {
      goto LABEL_8;
    }
    p_collectionViewFlags = &self->_collectionViewFlags;
  }
  if ((*((void *)p_collectionViewFlags + 1) & 1) == 0
    || (id v15 = objc_loadWeakRetained((id *)&self->_dataSource),
        [v15 collectionView:self indexPathForIndexTitle:v9 atIndex:a4],
        double v14 = objc_claimAutoreleasedReturnValue(),
        v15,
        !v14))
  {
    if (-[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData) > a4
      && -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, a4) >= 1)
    {
      double v14 = [MEMORY[0x1E4F28D58] indexPathForItem:0 inSection:a4];
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_8:
  unint64_t v16 = [v14 section];
  if ([(UICollectionView *)self numberOfSections] <= v16
    || [v14 item] != 0x7FFFFFFFFFFFFFFFLL
    && (unint64_t v17 = [(UICollectionView *)self numberOfItemsInSection:v16],
        v17 <= [v14 item]))
  {
    uint64_t v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 8890, @"no cell for index path (%@) - the collection view's data source must return an index path for a valid UICollectionViewCell from -collectionView:indexPathForIndexTitle:atIndex:", v14 object file lineNumber description];
  }
LABEL_16:

  return v14;
}

- (void)bringSubviewToFront:(id)a3
{
  id v4 = a3;
  BOOL v5 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  int v6 = [v5 shouldBringSubviewToFront:v4];

  if (v6)
  {
    v7.receiver = self;
    v7.super_class = (Class)UICollectionView;
    [(UIView *)&v7 bringSubviewToFront:v4];
  }
}

- (void)_addSubview:(id)a3 positioned:(int64_t)a4 relativeTo:(id)a5
{
  id v8 = a3;
  int64_t v13 = a4;
  id v9 = a5;
  double v10 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  int v11 = [v10 shouldAddSubview:v8 atPosition:&v13 relativeTo:v9];

  if (v11)
  {
    v12.receiver = self;
    v12.super_class = (Class)UICollectionView;
    [(UIView *)&v12 _addSubview:v8 positioned:v13 relativeTo:v9];
  }
}

uint64_t __68__UICollectionView__processViewSpecificInvalidationsForVisibleViews__block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  BOOL v5 = (void *)[a3 copy];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v5);
        }
        double v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        int v11 = [*(id *)(a1 + 32) _visibleSupplementaryViewOfKind:a2 atIndexPath:v10];
        objc_super v12 = v11;
        if (v11)
        {
          [v11 _invalidatePreferredAttributes];
          int64_t v13 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), a2, v10);
          if (v13)
          {
            [*(id *)(a1 + 32) _checkForPreferredAttributesInView:v12 originalAttributes:v13];
            [*(id *)(a1 + 32) _applyLayoutAttributes:v13 toView:v12];
          }
          else if (([v12 _isInUpdateAnimation] & 1) == 0)
          {
            uint64_t v20 = [MEMORY[0x1E4F28B00] currentHandler];
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(void *)(a1 + 40);
            uint64_t v19 = objc_msgSend(v10, "_ui_shortDescription");
            double v14 = [*(id *)(*(void *)(a1 + 32) + 2064) layoutAttributesForSupplementaryViewOfKind:a2 atIndexPath:v10];
            unint64_t v16 = [v12 _layoutAttributes];
            objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", v18, v17, @"UICollectionView.m", 6340, @"UICollectionView internal inconsistency: No attributes returned for invalidated supplementary view. Element kind: %@; index path: %@; supplementary view: %@; attributes from layout: %@; attributes from view: %@; collection view: %@",
              a2,
              v19,
              v12,
              v14,
              v16,
              *(void *)(a1 + 32));
          }
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v7);
  }

  return [a3 removeAllObjects];
}

- (id)_visibleSupplementaryViewOfKind:(id)a3 atIndexPath:(id)a4
{
  return -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:]((uint64_t *)self->_subviewManager, (uint64_t)a3, (uint64_t)a4);
}

uint64_t __68__UICollectionView__processViewSpecificInvalidationsForVisibleViews__block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  BOOL v5 = (void *)[a3 copy];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v5);
        }
        double v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        int v11 = [*(id *)(a1 + 32) _visibleDecorationViewOfKind:a2 atIndexPath:v10];
        objc_super v12 = v11;
        if (v11)
        {
          [v11 _invalidatePreferredAttributes];
          int64_t v13 = -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), a2, v10);
          if (v13)
          {
            [*(id *)(a1 + 32) _checkForPreferredAttributesInView:v12 originalAttributes:v13];
            [*(id *)(a1 + 32) _applyLayoutAttributes:v13 toView:v12];
          }
          else if (([v12 _isInUpdateAnimation] & 1) == 0)
          {
            uint64_t v20 = [MEMORY[0x1E4F28B00] currentHandler];
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(void *)(a1 + 40);
            uint64_t v19 = objc_msgSend(v10, "_ui_shortDescription");
            double v14 = [*(id *)(*(void *)(a1 + 32) + 2064) layoutAttributesForDecorationViewOfKind:a2 atIndexPath:v10];
            unint64_t v16 = [v12 _layoutAttributes];
            objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", v18, v17, @"UICollectionView.m", 6359, @"UICollectionView internal inconsistency: No attributes returned for invalidated decoration view. Element kind: %@; index path: %@; decoration view: %@; attributes from layout: %@; attributes from view: %@; collection view: %@",
              a2,
              v19,
              v12,
              v14,
              v16,
              *(void *)(a1 + 32));
          }
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v7);
  }

  return [a3 removeAllObjects];
}

void __106__UICollectionView__updatePreferredAttributesForItemsInCurrentUpdateWithRect_newlyVisible_includeInserts___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  char v5 = [a3 _arePreferredAttributesValid];
  uint64_t v6 = v8;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 2192) finalIndexPathForInitialIndexPath:v8];
    if (v7) {
      [*(id *)(a1 + 40) addObject:v7];
    }

    uint64_t v6 = v8;
  }
}

uint64_t __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) addObject:a4];
}

void __116__UICollectionView__updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect_newlyVisible_includeInserts___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v7 = a3;
  if (([a4 _arePreferredAttributesValid] & 1) == 0)
  {
    id v8 = -[UICollectionViewUpdate validatedNewIndexPathForSupplementaryElementOfKind:oldIndexPath:](*(void *)(*(void *)(a1 + 32) + 2192), v7, v10);
    if (v8)
    {
      id v9 = [*(id *)(*(void *)(a1 + 32) + 2064) layoutAttributesForSupplementaryViewOfKind:v7 atIndexPath:v8];
      if (v9) {
        [*(id *)(a1 + 40) addObject:v9];
      }
    }
  }
}

uint64_t __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __30__UICollectionView_reloadData__block_invoke_298(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __185__UICollectionView__createAndAppendViewAnimationsForExistingAndDeletedAuxiliariesInCurrentUpdate_disappearingAnimations_animationsForOnScreenViews_newSubviewCollection_oldVisibleViews___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  if (([v7 _isInUpdateAnimation] & 1) == 0
    && [*(id *)(a1 + 32) containsObject:v7])
  {
    uint64_t v6 = [v7 _layoutAttributes];
    [*(id *)(a1 + 40) addObject:v6];
  }
}

void __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:") & 1) == 0
    && ([*(id *)(a1 + 40) containsObject:v3] & 1) == 0)
  {
    [v3 removeFromSuperview];
  }
}

uint64_t __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_5(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return [*(id *)(a1 + 32) addObject:a4];
}

uint64_t __30__UICollectionView_reloadData__block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if ([a3 _isInUpdateAnimation])
  {
    if (!*(unsigned char *)(a1 + 40) || !dyld_program_sdk_at_least()) {
      return 1;
    }
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_UIInternalPreference_CollectionViewAutomaticallyInvalidatesForTraitChanges_block_invoke_4___s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      int v11 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int64_t v13 = v11;
        double v14 = objc_msgSend(a2, "_ui_shortDescription");
        int v15 = 134218498;
        uint64_t v16 = v12;
        __int16 v17 = 2112;
        uint64_t v18 = v14;
        __int16 v19 = 2112;
        uint64_t v20 = a3;
        _os_log_impl(&dword_1853B0000, v13, OS_LOG_TYPE_ERROR, "[UICV %p] reloadData hiding cell in update animation index path: %@; cell: %@.",
          (uint8_t *)&v15,
          0x20u);
      }
    }
    [a3 _setHiddenForReuse:1];
  }
  else
  {
    id v7 = [a3 _layoutAttributes];
    if (v7)
    {
      __int16 v8 = v7[144];

      id v9 = *(void **)(a1 + 32);
      if (v8)
      {
        [v9 _reuseCell:a3 notifyDidEndDisplaying:1];
        return 0;
      }
    }
    else
    {
      id v9 = *(void **)(a1 + 32);
    }
    [v9 _reuseSupplementaryView:a3];
  }
  return 0;
}

uint64_t __30__UICollectionView_reloadData__block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (BOOL)_reuseCell:(id)a3 notifyDidEndDisplaying:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  id v7 = (UICollectionReusableView *)a3;
  if (![(UICollectionReusableView *)v7 _isBeingReused])
  {
    if ([(UICollectionReusableView *)v7 _isInUpdateAnimation])
    {
      id v10 = *(NSObject **)(__UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258AC8) + 8);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        double v52 = (UICollectionView *)v7;
        _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_ERROR, "Cell (%@) is currently in an update animation and cannot be reused, ignoring.", buf, 0xCu);
      }
      goto LABEL_2;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      NSLog(&cfstr_ReusecellShoul.isa, v7);
      BOOL v8 = 0;
      goto LABEL_3;
    }
    if ([(UICollectionReusableView *)v7 _isInUpdateAnimation])
    {
      CGFloat v35 = [MEMORY[0x1E4F28B00] currentHandler];
      [v35 handleFailureInMethod:a2, self, @"UICollectionView.m", 9880, @"attempting to reuse a cell that's still in an update animation: %@", v7 object file lineNumber description];
    }
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    int v11 = [(UICollectionView *)self _reorderedItems];
    uint64_t v12 = [v11 countByEnumeratingWithState:&v47 objects:v59 count:16];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)v48;
      while (2)
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v48 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = [*(id *)(*((void *)&v47 + 1) + 8 * i) cell];

          if (v16 == v7)
          {
            int v17 = 1;
            goto LABEL_21;
          }
        }
        uint64_t v13 = [v11 countByEnumeratingWithState:&v47 objects:v59 count:16];
        if (v13) {
          continue;
        }
        break;
      }
    }
    int v17 = 0;
LABEL_21:

    uint64_t v18 = [(UICollectionReusableView *)v7 _layoutAttributes];
    __int16 v19 = [v18 indexPath];

    if (-[_UICollectionViewDragAndDropController isCellInvolvedInDragOrDropAnimation:atIndexPath:]((BOOL)self->_dragAndDropController, v7, (uint64_t)v19))
    {
      if (v7)
      {
        dragAndDropController = self->_dragAndDropController;
        if (dragAndDropController) {
          [(NSMutableSet *)dragAndDropController->_cellsDeferredForReuse addObject:v7];
        }
      }
      unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258AD0);
      if ((*(unsigned char *)CategoryCachedImpl & 1) == 0) {
        goto LABEL_26;
      }
      CGFloat v36 = *(NSObject **)(CategoryCachedImpl + 8);
      if (!os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      double v31 = v36;
      objc_msgSend(v19, "_ui_shortDescription");
      CGFloat v37 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134218498;
      double v52 = self;
      __int16 v53 = 2112;
      double v54 = v37;
      __int16 v55 = 2112;
      *(void *)double v56 = v7;
      _os_log_impl(&dword_1853B0000, v31, OS_LOG_TYPE_ERROR, "[UICV %p] _reuseCell transfering ownership of cell at %@ to drag and drop controller: %@ ", buf, 0x20u);

LABEL_46:
LABEL_26:
      BOOL v8 = 1;
LABEL_43:

      goto LABEL_3;
    }
    if ((v17 & 1) != 0
      || self->_firstResponderView == v7
      || (([(UICollectionView *)self _focusedItemState],
           uint64_t v22 = objc_claimAutoreleasedReturnValue(),
           (long long v23 = (void *)v22) == 0)
        ? (long long v24 = 0)
        : (long long v24 = *(void **)(v22 + 8)),
          long long v25 = v24,
          v25,
          v23,
          v25 == v7))
    {
      unint64_t v34 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258AD8);
      if (*(unsigned char *)v34)
      {
        int v38 = v17;
        id v39 = *(NSObject **)(v34 + 8);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
        {
          id v40 = v39;
          objc_msgSend(v19, "_ui_shortDescription");
          uint64_t v41 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();
          BOOL v42 = self->_firstResponderView == v7;
          uint64_t v43 = [(UICollectionView *)self _focusedItemState];
          unint64_t v44 = (void *)v43;
          if (v43) {
            long long v45 = *(void **)(v43 + 8);
          }
          else {
            long long v45 = 0;
          }
          id v46 = v45;
          *(_DWORD *)buf = 134219266;
          double v52 = self;
          __int16 v53 = 2112;
          double v54 = v41;
          __int16 v55 = 1024;
          *(_DWORD *)double v56 = v38;
          *(_WORD *)&v56[4] = 1024;
          *(_DWORD *)&v56[6] = v42;
          LOWORD(v57) = 1024;
          *(_DWORD *)((char *)&v57 + 2) = v46 == v7;
          HIWORD(v57) = 2112;
          double v58 = v7;
          _os_log_impl(&dword_1853B0000, v40, OS_LOG_TYPE_ERROR, "[UICV %p] Denying reuse on cell at %@ for reason reordered(%d) isFirstReponder(%d) isFocused(%d): %@", buf, 0x32u);
        }
      }
    }
    else if ((dyld_program_sdk_at_least() & 1) != 0 {
           || ![(UIView *)v7 _isFocusedOrAncestorOfFocusedView])
    }
    {
      [(NSMutableSet *)self->_viewsOptedOutOfBeingParentedIntoContainers removeObject:v7];
      [(UICollectionReusableView *)v7 _setIsBeingReused:1];
      if (dyld_program_sdk_at_least())
      {
        double v26 = [(UIView *)v7 _focusSystem];
        [v26 _focusEnvironmentWillDisappear:v7];
      }
      [(UICollectionView *)self _enqueueViewForReuse:v7];
      if (v4)
      {
        uint64_t v27 = [(UICollectionReusableView *)v7 _layoutAttributes];
        double v28 = [v27 indexPath];
        [(UICollectionView *)self _notifyDidEndDisplayingCellIfNeeded:v7 forIndexPath:v28];
      }
      [(UICollectionReusableView *)v7 _setIsBeingReused:0];
      unint64_t v29 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258AE0);
      if ((*(unsigned char *)v29 & 1) == 0) {
        goto LABEL_26;
      }
      double v30 = *(NSObject **)(v29 + 8);
      if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        goto LABEL_26;
      }
      double v31 = v30;
      double v32 = [(UICollectionReusableView *)v7 reuseIdentifier];
      double v33 = objc_msgSend(v19, "_ui_shortDescription");
      *(_DWORD *)buf = 134218754;
      double v52 = self;
      __int16 v53 = 2112;
      double v54 = v7;
      __int16 v55 = 2112;
      *(void *)double v56 = v32;
      *(_WORD *)&v56[8] = 2112;
      CGFloat v57 = v33;
      _os_log_impl(&dword_1853B0000, v31, OS_LOG_TYPE_ERROR, "[UICV %p] _reuseCell: %@ reuseIdentifier: %@ indexPath:%@", buf, 0x2Au);

      goto LABEL_46;
    }
    BOOL v8 = 0;
    goto LABEL_43;
  }
LABEL_2:
  BOOL v8 = 1;
LABEL_3:

  return v8;
}

- (BOOL)_reuseSupplementaryView:(id)a3
{
  char v5 = (UICollectionReusableView *)a3;
  if ([(UICollectionReusableView *)v5 _isInUpdateAnimation])
  {
    uint64_t v13 = [MEMORY[0x1E4F28B00] currentHandler];
    [v13 handleFailureInMethod:a2, self, @"UICollectionView.m", 9938, @"attempting to reuse a view that's still in an update animation: %@", v5 object file lineNumber description];
  }
  if (self->_firstResponderView != v5)
  {
    uint64_t v6 = [(UICollectionView *)self _focusedItemState];
    id v7 = (void *)v6;
    BOOL v8 = v6 ? *(void **)(v6 + 8) : 0;
    id v9 = v8;

    if (v9 != v5)
    {
      if (dyld_program_sdk_at_least())
      {
        id v10 = [(UIView *)v5 _focusSystem];
        [v10 _focusEnvironmentWillDisappear:v5];

LABEL_11:
        [(UICollectionView *)self _enqueueViewForReuse:v5];
        [(UICollectionView *)self _notifyDidEndDisplayingSupplementaryView:v5];
        BOOL v11 = 1;
        goto LABEL_12;
      }
      if (![(UIView *)v5 _isFocusedOrAncestorOfFocusedView]) {
        goto LABEL_11;
      }
    }
  }
  BOOL v11 = 0;
LABEL_12:

  return v11;
}

- (void)_enqueueViewForReuse:(id)a3
{
  subviewManager = self->_subviewManager;
  id v4 = a3;
  if (-[_UICollectionViewSubviewManager enqueueViewForReuse:]((uint64_t)subviewManager, v4)) {
    [v4 _setHiddenForReuse:1];
  }
  else {
    [v4 removeFromSuperview];
  }
}

- (void)_notifyDidEndDisplayingSupplementaryView:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([v4 _hasNotifiedIsDisplaying])
  {
    [v4 _notifyIsDisplaying:0];
    if ((*(void *)&self->_collectionViewFlags & 0x800) != 0)
    {
      char v5 = [v4 _layoutAttributes];
      uint64_t v6 = -[UIBarButtonItemGroup _items](v5);
      id v7 = [v5 indexPath];
      int has_internal_diagnostics = os_variant_has_internal_diagnostics();
      if (v5) {
        BOOL v9 = v6 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      int v11 = v9 || v7 == 0;
      if (has_internal_diagnostics)
      {
        if (v11)
        {
          uint64_t v13 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
          {
            int v15 = 138412546;
            id v16 = v4;
            __int16 v17 = 2112;
            uint64_t v18 = v5;
            _os_log_fault_impl(&dword_1853B0000, v13, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: layout attributes are invalid for view %@: %@", (uint8_t *)&v15, 0x16u);
          }
        }
      }
      else if (v11)
      {
        uint64_t v14 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_notifyDidEndDisplayingSupplementaryView____s_category)+ 8);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          int v15 = 138412546;
          id v16 = v4;
          __int16 v17 = 2112;
          uint64_t v18 = v5;
          _os_log_impl(&dword_1853B0000, v14, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: layout attributes are invalid for view %@: %@", (uint8_t *)&v15, 0x16u);
        }
      }
      uint64_t v12 = [(UICollectionView *)self _delegateProxy];
      [v12 collectionView:self didEndDisplayingSupplementaryView:v4 forElementOfKind:v6 atIndexPath:v7];
    }
  }
}

- (void)_notifyDidEndDisplayingCellIfNeeded:(id)a3 forIndexPath:(id)a4
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  if ([v6 _hasNotifiedIsDisplaying])
  {
    if (os_variant_has_internal_diagnostics())
    {
      if (!v7)
      {
        BOOL v9 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
        {
          int v11 = 138412290;
          id v12 = v6;
          _os_log_fault_impl(&dword_1853B0000, v9, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: index path cannot be nil. Cell: %@", (uint8_t *)&v11, 0xCu);
        }
      }
    }
    else if (!v7)
    {
      id v10 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_notifyDidEndDisplayingCellIfNeeded_forIndexPath____s_category)+ 8);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        id v12 = v6;
        _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: index path cannot be nil. Cell: %@", (uint8_t *)&v11, 0xCu);
      }
    }
    [v6 _notifyIsDisplaying:0];
    if ((*(void *)&self->_collectionViewFlags & 0x400) != 0)
    {
      BOOL v8 = [(UICollectionView *)self _delegateProxy];
      [v8 collectionView:self didEndDisplayingCell:v6 forItemAtIndexPath:v7];
    }
  }
}

uint64_t __49__UICollectionView__invalidateLayoutWithContext___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return [a5 _invalidatePreferredAttributes];
}

void __144__UICollectionView__populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate_addingDeletedViewsToSet_updateLayoutAttributesIndexPaths___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v15 = a3;
  id v9 = a4;
  id v10 = a5;
  if (a2)
  {
    if ([v15 length] == 1)
    {
      -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:](*(void *)(a1 + 40), (uint64_t)v10, (uint64_t)v9, a2, (uint64_t)v15);
    }
    else
    {
      uint64_t v13 = -[UICollectionViewUpdate validatedNewIndexPathForSupplementaryElementOfKind:oldIndexPath:](*(void *)(*(void *)(a1 + 56) + 2192), v9, v15);
      if (v13)
      {
        -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:](*(void *)(a1 + 40), (uint64_t)v10, (uint64_t)v9, a2, (uint64_t)v13);
        if (*(unsigned char *)(a1 + 64))
        {
          uint64_t v14 = [v10 _layoutAttributes];
          [v14 setIndexPath:v13];
        }
      }
      else
      {
        [*(id *)(a1 + 48) addObject:v10];
      }
    }
  }
  else
  {
    int v11 = [*(id *)(a1 + 32) finalIndexPathForInitialIndexPath:v15];
    if (v11)
    {
      -[_UICollectionViewSubviewCollection setCell:atIndexPath:](*(void *)(a1 + 40), (uint64_t)v10, (uint64_t)v11);
      if (*(unsigned char *)(a1 + 64))
      {
        id v12 = [v10 _layoutAttributes];
        [v12 setIndexPath:v11];
      }
    }
    else
    {
      [*(id *)(a1 + 48) addObject:v10];
    }
  }
}

void __120__UICollectionView__viewAnimationsForCurrentUpdateWithCollectionViewAnimator_updatingContentOffsetForRestorationAnchor___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = [a3 _layoutAttributes];
  [v5 setIndexPath:v4];
}

void __107__UICollectionView__attributesForItemsVisibleDuringCurrentUpdateWithOldVisibleViews_attributesForNewModel___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v18 = a3;
  int v4 = [*(id *)(a1 + 32) containsObject:v18];
  id v5 = v18;
  if (v4)
  {
    id v6 = [v18 _layoutAttributes];
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 2192) + 16);
    BOOL v8 = [v6 indexPath];
    uint64_t v9 = -[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:](v7, v8);

    if (v9 != 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v10 = [*(id *)(*(void *)(a1 + 40) + 2192) finalGlobalIndexForInitialGlobalIndex:v9];
      if (v10 != 0x7FFFFFFFFFFFFFFFLL)
      {
        int v11 = -[UICollectionViewData layoutAttributesForGlobalItemIndex:](*(unsigned char **)(*(void *)(*(void *)(a1 + 40) + 2192) + 24), v10);
        id v12 = v11;
        if (v11)
        {
          uint64_t v13 = *(void **)(a1 + 48);
          uint64_t v14 = [v11 indexPath];
          id v15 = [v13 objectForKeyedSubscript:v14];

          if (!v15)
          {
            id v16 = *(void **)(a1 + 48);
            __int16 v17 = [v12 indexPath];
            [v16 setObject:v12 forKeyedSubscript:v17];
          }
        }
      }
    }

    id v5 = v18;
  }
}

uint64_t __43__UICollectionView__enumerateVisibleViews___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  switch(a2)
  {
    case 2:
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = 2584;
LABEL_7:
      uint64_t v14 = [*(id *)(v12 + v13) objectForKeyedSubscript:v10];
      [v14 removeObject:v9];

      break;
    case 1:
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = 2576;
      goto LABEL_7;
    case 0:
      [*(id *)(*(void *)(a1 + 32) + 2568) removeObject:v9];
      break;
  }
  if (([v11 _isInUpdateAnimation] & 1) == 0)
  {
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v16 = *(void *)(v15 + 2896);
    if (v16)
    {
      -[_UICollectionViewSubviewCollection removeViewOfKind:inCategory:atIndexPath:](*(void **)(v16 + 8), (uint64_t)v10, a2, (uint64_t)v9);
      uint64_t v15 = *(void *)(a1 + 32);
    }
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke_2;
    aBlock[3] = &unk_1E52E5420;
    void aBlock[4] = v15;
    id v17 = v9;
    id v33 = v17;
    id v18 = _Block_copy(aBlock);
    uint64_t v19 = v18;
    if (!*(unsigned char *)(a1 + 40))
    {
      (*((void (**)(void *, uint64_t, id))v18 + 2))(v18, a2, v11);
LABEL_23:

      goto LABEL_24;
    }
    if (a2 == 2)
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 32) + 2064);
      uint64_t v22 = [v11 _layoutAttributes];
      long long v23 = -[UIBarButtonItemGroup _items](v22);
      uint64_t v24 = [v21 finalLayoutAttributesForDisappearingDecorationElementOfKind:v23 atIndexPath:v17];
    }
    else
    {
      if (a2 != 1)
      {
        if (!a2)
        {
          uint64_t v20 = [*(id *)(*(void *)(a1 + 32) + 2064) finalLayoutAttributesForDisappearingItemAtIndexPath:v17];
          if (v20) {
            goto LABEL_22;
          }
        }
        goto LABEL_21;
      }
      long long v25 = *(void **)(*(void *)(a1 + 32) + 2064);
      uint64_t v22 = [v11 _layoutAttributes];
      long long v23 = -[UIBarButtonItemGroup _items](v22);
      uint64_t v24 = [v25 finalLayoutAttributesForDisappearingSupplementaryElementOfKind:v23 atIndexPath:v17];
    }
    uint64_t v20 = (void *)v24;

    if (v20)
    {
LABEL_22:
      uint64_t v27 = *(void **)(a1 + 32);
      v28[0] = MEMORY[0x1E4F143A8];
      v28[1] = 3221225472;
      v28[2] = __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke_507;
      v28[3] = &unk_1E52E5448;
      id v30 = v19;
      uint64_t v31 = a2;
      id v29 = v11;
      [v27 _animateVisibleView:v29 withLayoutAttributes:v20 completionHandler:v28];

      goto LABEL_23;
    }
LABEL_21:
    double v26 = [v11 _layoutAttributes];
    uint64_t v20 = (void *)[v26 copy];

    [v20 setAlpha:0.0];
    goto LABEL_22;
  }
LABEL_24:
}

void __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ([v5 _isInUpdateAnimation])
  {
    if (os_variant_has_internal_diagnostics())
    {
      id v9 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        int v11 = 138412546;
        uint64_t v12 = v10;
        __int16 v13 = 2112;
        id v14 = v5;
        _os_log_fault_impl(&dword_1853B0000, v9, OS_LOG_TYPE_FAULT, "Warning: view should never be in update animation (ignoring - rotation + disappearing item?) for cv == %@; view == %@",
          (uint8_t *)&v11,
          0x16u);
      }
    }
    else
    {
      id v6 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIInternalPreference_CollectionViewCellPrefetchingMode_block_invoke_7___s_category)+ 8);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        int v11 = 138412546;
        uint64_t v12 = v7;
        __int16 v13 = 2112;
        id v14 = v5;
        _os_log_impl(&dword_1853B0000, v6, OS_LOG_TYPE_ERROR, "Warning: view should never be in update animation (ignoring - rotation + disappearing item?) for cv == %@; view == %@",
          (uint8_t *)&v11,
          0x16u);
      }
    }
  }
  else
  {
    BOOL v8 = *(void **)(a1 + 32);
    if (a2) {
      [v8 _reuseSupplementaryView:v5];
    }
    else {
      [v8 _cacheOrReuseCell:v5 forIndexPath:*(void *)(a1 + 40) invalidatePreferredAttributes:1 notifyDidEndDisplaying:1];
    }
  }
}

- (void)reloadData
{
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  if (self->_reloadingSuspendedCount >= 1)
  {
    p_collectionViewFlags = &self->_collectionViewFlags;
    unint64_t v4 = *((void *)&self->_collectionViewFlags + 1) | 0x80;
LABEL_3:
    *((void *)p_collectionViewFlags + 1) = v4;
    return;
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB2588F0);
  id v6 = *(id *)(CategoryCachedImpl + 8);
  os_signpost_id_t v7 = os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v8 = v7;
    if (os_signpost_enabled(v6))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1853B0000, v6, OS_SIGNPOST_EVENT, v8, "ReloadData", "", buf, 2u);
    }
  }

  id v9 = [(UICollectionView *)self _focusedItemState];

  if (v9)
  {
    *((void *)&self->_collectionViewFlags + 1) |= 0x20000000000uLL;
    uint64_t v10 = [(UICollectionView *)self _focusedItemState];
    int v11 = (void *)v10;
    if (v10) {
      uint64_t v12 = *(void **)(v10 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    id v13 = v12;

    if (v13)
    {
      [v13 frame];
      CGFloat v15 = v14;
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      CGFloat v21 = v20;
      [(UIScrollView *)self visibleBounds];
      v112.origin.CGFloat x = v22;
      v112.origin.CGFloat y = v23;
      v112.size.CGFloat width = v24;
      v112.size.CGFloat height = v25;
      v111.origin.CGFloat x = v15;
      v111.origin.CGFloat y = v17;
      v111.size.CGFloat width = v19;
      v111.size.CGFloat height = v21;
      BOOL v26 = CGRectIntersectsRect(v111, v112);
      uint64_t v27 = 0x40000000000;
      if (!v26) {
        uint64_t v27 = 0;
      }
    }
    else
    {
      uint64_t v27 = 0;
    }
    unint64_t v28 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFBFFFFFFFFFFLL | v27;
    *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v28;
    int v29 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v29);
  }
  [(UIView *)self setNeedsFocusUpdate];
  [(UICollectionView *)self _suspendReloads];
  *((void *)&self->_collectionViewFlags + 1) |= 0x20000000uLL;
  [(UICollectionView *)self _completeInteractiveMovementWithDisposition:2];
  if (self->_firstResponderView)
  {
    char v30 = *((unsigned char *)&self->_collectionViewFlags + 18);
    *((_WORD *)&self->_collectionViewFlags + 8) |= 0x8000u;
    *((unsigned char *)&self->_collectionViewFlags + 18) = v30;
    uint64_t v31 = [(UIView *)self window];
    double v32 = [v31 firstResponder];
    [v32 resignFirstResponder];

    int v33 = *((_WORD *)&self->_collectionViewFlags + 8) & 0x7FFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *((_WORD *)&self->_collectionViewFlags + 8) &= ~0x8000u;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v33);
    if (self->_firstResponderView)
    {
      [(UICollectionView *)self _resumeReloads];
      p_collectionViewFlags = &self->_collectionViewFlags;
      unint64_t v4 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFDFFFFFFFLL;
      goto LABEL_3;
    }
  }
  unint64_t v34 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB2588F8);
  if (*(unsigned char *)v34)
  {
    uint64_t v91 = *(NSObject **)(v34 + 8);
    if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      CGRect v109 = self;
      _os_log_impl(&dword_1853B0000, v91, OS_LOG_TYPE_ERROR, "[UICV %p] reloadData", buf, 0xCu);
    }
  }
  if ([(UICollectionViewLayout *)self->_layout _estimatesSizes]) {
    -[UICollectionView _saveContentOffsetRestorationAnchorIfNecessaryUsingModel:]((uint64_t)self, self->_collectionViewData);
  }
  BOOL v35 = [(UICollectionView *)self _isConnectedToDiffableDataSource];
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __30__UICollectionView_reloadData__block_invoke;
  aBlock[3] = &unk_1E52E5020;
  BOOL v106 = v35;
  void aBlock[4] = self;
  CGFloat v36 = _Block_copy(aBlock);
  if (v35 && dyld_program_sdk_at_least()) {
    self->_int64_t updateAnimationCount = 0;
  }
  subviewManager = self->_subviewManager;
  int v38 = _Block_copy(v36);
  -[_UICollectionViewSubviewManager updateVisibleCellsUsingFilter:]((uint64_t)subviewManager, (uint64_t)v38);

  id v39 = self->_subviewManager;
  v103[0] = MEMORY[0x1E4F143A8];
  v103[1] = 3221225472;
  v103[2] = __30__UICollectionView_reloadData__block_invoke_298;
  v103[3] = &unk_1E52E5048;
  id v40 = v36;
  id v104 = v40;
  if (v39) {
    -[_UICollectionViewSubviewCollection updateSupplementariesUsingFilter:]((uint64_t)v39->_visibleViews, (uint64_t)v103);
  }
  uint64_t v41 = self->_subviewManager;
  v101[0] = MEMORY[0x1E4F143A8];
  v101[1] = 3221225472;
  v101[2] = __30__UICollectionView_reloadData__block_invoke_2;
  v101[3] = &unk_1E52E5048;
  id v94 = v40;
  id v102 = v94;
  if (v41) {
    -[_UICollectionViewSubviewCollection updateDecorationsUsingFilter:]((uint64_t)v41->_visibleViews, (uint64_t)v101);
  }
  BOOL v42 = self->_selectionController;
  p_isa = (id *)&v42->super.isa;
  if (v42) {
    unint64_t v44 = (void *)[(NSMutableSet *)v42->_selectedIndexPaths copy];
  }
  else {
    unint64_t v44 = 0;
  }
  if (!dyld_program_sdk_at_least()
    || (v35 & (*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 11)) != 1)
  {
    goto LABEL_52;
  }
  pendingDeselectionIndexPaths = [(UICollectionView *)self _diffableDataSourceImpl];
  id v46 = [pendingDeselectionIndexPaths currentTransaction];
  long long v47 = v46;
  if (!pendingDeselectionIndexPaths || !v46)
  {

LABEL_52:
    -[_UICollectionViewSelectionController reset]((uint64_t)p_isa);
    pendingSelectionIndexPath = self->_pendingSelectionIndexPath;
    self->_pendingSelectionIndexPath = 0;

    pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = 0;
    goto LABEL_53;
  }
  -[_UICollectionViewSelectionController rebaseItemsWithDiffableTransaction:]((uint64_t)p_isa, v46);
  long long v48 = self->_pendingSelectionIndexPath;
  if (v48)
  {
    -[_UICollectionViewSelectionController rebaseIndexPath:withDiffableTransaction:]((uint64_t)p_isa, (uint64_t)v48, v47);
    long long v49 = (NSIndexPath *)objc_claimAutoreleasedReturnValue();
    long long v50 = self->_pendingSelectionIndexPath;
    self->_pendingSelectionIndexPath = v49;
  }
  if (self->_pendingDeselectionIndexPaths)
  {
    CGFloat v93 = v44;
    id v51 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    double v52 = self->_pendingDeselectionIndexPaths;
    uint64_t v53 = [(NSMutableSet *)v52 countByEnumeratingWithState:&v97 objects:v107 count:16];
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = *(void *)v98;
      do
      {
        for (uint64_t i = 0; i != v54; ++i)
        {
          if (*(void *)v98 != v55) {
            objc_enumerationMutation(v52);
          }
          CGFloat v57 = -[_UICollectionViewSelectionController rebaseIndexPath:withDiffableTransaction:]((uint64_t)p_isa, *(void *)(*((void *)&v97 + 1) + 8 * i), v47);
          if (v57) {
            [v51 addObject:v57];
          }
        }
        uint64_t v54 = [(NSMutableSet *)v52 countByEnumeratingWithState:&v97 objects:v107 count:16];
      }
      while (v54);
    }

    double v58 = (NSMutableSet *)[v51 count];
    if (v58)
    {
      double v58 = [MEMORY[0x1E4F1CA80] setWithArray:v51];
    }
    unint64_t v44 = v93;
    double v59 = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = v58;
  }
LABEL_53:

  if (!p_isa || ([p_isa[1] isEqualToSet:v44] & 1) == 0) {
    [(_UICollectionViewMultiSelectController *)self->_multiSelectController clearSelectionState];
  }
  [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  v96[0] = MEMORY[0x1E4F143A8];
  v96[1] = 3221225472;
  v96[2] = __30__UICollectionView_reloadData__block_invoke_3;
  v96[3] = &unk_1E52D9F70;
  v96[4] = self;
  [(UICollectionView *)self _invalidateWithBlock:v96];
  [(UICollectionView *)self _invalidateLayoutForReload];
  [(UICollectionView *)self _resetUpdateItemArrays];
  -[UICollectionView _clearSpecificInvalidationLists](self);
  indexPathsRequiringPreferredAttributes = self->_indexPathsRequiringPreferredAttributes;
  self->_indexPathsRequiringPreferredAttributes = 0;

  unsigned int v62 = (*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16)) & 0xFFEFFFFF;
  *((void *)&self->_collectionViewFlags + 1) &= 0xFFFFFFFFCFFFFFFFLL;
  *((_WORD *)&self->_collectionViewFlags + 8) = v62;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v62);
  [(UICollectionView *)self _clearNeedsRecomputePreferredAttributesForInvalidatedElements];
  uint64_t v63 = [(UICollectionView *)self _focusedItemState];
  if (v63)
  {
    uint64_t v64 = (void *)v63;
    uint64_t v65 = [(UICollectionView *)self _focusedItemState];
    uint64_t v66 = (void *)v65;
    uint64_t v67 = v65 ? *(void **)(v65 + 16) : 0;
    id v68 = v67;
    BOOL v69 = [(UICollectionView *)self _indexPathIsValid:v68 allowSectionItemSentinel:1];

    if (!v69) {
      [(UICollectionView *)self _setFocusedItemState:0];
    }
  }
  [(UICollectionView *)self _resetPrefetchState];
  [(UICollectionView *)self _resumeReloads];
  uint64_t v70 = *((void *)&self->_collectionViewFlags + 1);
  if ((v70 & 0x20000000000000) != 0)
  {
    [(UIScrollView *)self setNeedsLayout];
    *((void *)&self->_collectionViewFlags + 1) |= 0x40000000000000uLL;
  }
  else if ((v70 & 0x2000000000000010) == 0x10)
  {
    uint64_t v71 = [(UIView *)self window];
    if (v71)
    {
      uint64_t v72 = (void *)v71;
      BOOL v73 = [(UICollectionView *)self _prefetchingAllowed];

      if (v73)
      {
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __30__UICollectionView_reloadData__block_invoke_4;
        block[3] = &unk_1E52D9F70;
        void block[4] = self;
        dispatch_async(MEMORY[0x1E4F14428], block);
      }
    }
  }
  [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController cleanupSectionFocusGuides];
  sectionFocusGuideController = self->_sectionFocusGuideController;
  uint64_t v75 = [(UICollectionView *)self _focusedItemState];
  uint64_t v76 = (void *)v75;
  if (v75) {
    __int16 v77 = *(void **)(v75 + 16);
  }
  else {
    __int16 v77 = 0;
  }
  id v78 = v77;
  [(_UICollectionViewSectionFocusGuideController *)sectionFocusGuideController updateFocusedIndexPath:v78 immediatelyReevaluatePivotIndex:0];

  -[_UICollectionViewOrthogonalScrollerSectionController reconfigureScrollViewsForUpdate:]((uint64_t)self->_orthogonalScrollerController, 0);
  -[_UICollectionViewOrthogonalScrollerSectionController processQueuedScrollViewRemovals]((uint64_t)self->_orthogonalScrollerController);
  [(UICollectionView *)self _reconfigureSectionContainersForUpdate:0];
  [(UICollectionView *)self _processQueuedSectionContainerRemovals];
  [(UICollectionView *)self _updateSectionIndex];
  __int16 v79 = [(UICollectionView *)self _horizontalIndexTitleBar];

  if (v79)
  {
    uint64_t v80 = [(UICollectionView *)self _horizontalIndexTitleBar];
    __int16 v81 = [(UICollectionView *)self _focusFastScrollingIndexBarEntries];
    [v80 _updateWithEntries:v81];
  }
  unint64_t v82 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258900);
  if (*(unsigned char *)v82)
  {
    CGFloat v92 = *(NSObject **)(v82 + 8);
    if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      CGRect v109 = self;
      _os_log_impl(&dword_1853B0000, v92, OS_LOG_TYPE_ERROR, "[UICV %p] End reloadData", buf, 0xCu);
    }
  }
  __int16 v83 = self->_layout;
  long long v84 = self;
  uint64_t v85 = (const void **)&v84->super.super.super.super.isa;
  if (!v83) {
    goto LABEL_78;
  }
  uint64_t v86 = [(UIView *)v84 effectiveUserInterfaceLayoutDirection];
  if (v86 != [(UICollectionViewLayout *)v83 developmentLayoutDirection])
  {
    uint64_t v87 = [(UICollectionViewLayout *)v83 _wantsRightToLeftHorizontalMirroringIfNeeded];
    goto LABEL_77;
  }
  if ([v85 _flipsHorizontalAxis])
  {
    uint64_t v87 = 0;
LABEL_77:
    [v85 _setFlipsHorizontalAxis:v87];
  }
LABEL_78:

  CGRect v88 = (void (**)(void))_Block_copy(v85[390]);
  if (v88)
  {
    CGRect v89 = (void *)v85[390];
    v85[390] = 0;

    v88[2](v88);
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 4) != 0)
  {
    if (!dyld_program_sdk_at_least()
      || ([v85 window], long long v90 = objc_claimAutoreleasedReturnValue(), v90, v90))
    {
      [v85 layoutIfNeeded];
    }
  }
}

- (void)_invalidateLayoutWithContext:(id)a3
{
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  unint64_t v5 = [v4 _intent];
  if (v5 > 0xF || ((1 << v5) & 0x9762) == 0) {
    [(UICollectionView *)self _resetPrefetchState];
  }
  os_signpost_id_t v7 = (unsigned __int8 *)v4;
  if (self
    && [(UICollectionViewLayout *)self->_layout _estimatesSizes]
    && (unint64_t v8 = [v7 _intent], v8 <= 0xD)
    && ((1 << v8) & 0x2005) != 0)
  {

    -[UICollectionView _saveContentOffsetRestorationAnchorIfNecessaryUsingModel:]((uint64_t)self, self->_collectionViewData);
  }
  else
  {
  }
  id v9 = self->_collectionViewData;
  currentUpdate = self->_currentUpdate;
  if (currentUpdate && (*(unsigned char *)&currentUpdate->_flags & 1) == 0)
  {
    int v11 = currentUpdate->_oldModel;

    id v9 = v11;
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_invalidateLayoutWithContext____s_category);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    uint64_t v54 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
    {
      uint64_t v55 = v54;
      double v56 = _UICollectionViewLayoutInvalidationContextIntentDescription([v7 _intent]);
      *(_DWORD *)buf = 134218242;
      __int16 v79 = self;
      __int16 v80 = 2112;
      __int16 v81 = v56;
      _os_log_impl(&dword_1853B0000, v55, OS_LOG_TYPE_ERROR, "_invalidateLayoutWithContext: cv == %p; intent: %@",
        buf,
        0x16u);
    }
  }
  if (v7) {
    int v62 = (v7[112] >> 3) & 1;
  }
  else {
    LOBYTE(v62) = 0;
  }
  uint64_t v13 = [v7 _intent];
  double v14 = self->_debugger;
  if (v14 && v13 != 15) {
    [(_UICollectionViewFeedbackLoopDebugger *)self->_debugger recordInvalidationWithContext:v7];
  }
  if (self->_isInInteractiveTransition)
  {
    layout = self->_layout;
    self->_previousInteractiveTransitionProgress = self->_currentInteractiveTransitionProgress;
    double v16 = layout;
    [(UICollectionViewLayout *)v16 transitionProgress];
    self->_currentInteractiveTransitionProgress = v17;
    self->_previousInteractiveTransitionTimeStamp = self->_currentInteractiveTransitionTimeStamp;
    double v18 = [MEMORY[0x1E4F1C9C8] date];
    [v18 timeIntervalSince1970];
    self->_currentInteractiveTransitionTimeStamp = v19;

    v76[0] = MEMORY[0x1E4F143A8];
    v76[1] = 3221225472;
    v76[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke;
    v76[3] = &unk_1E52D9F70;
    __int16 v77 = v9;
    [(UICollectionView *)self _invalidateWithBlock:v76];
    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
    double v20 = v77;
  }
  else
  {
    unint64_t v61 = v14;
    if (+[UIView _isInAnimationBlockWithAnimationsEnabled]&& [(UICollectionView *)self _shouldFadeCellsForBoundChangeWhileRotating])
    {
      *((void *)&self->_collectionViewFlags + 1) |= 0x4000000uLL;
    }
    int shouldInvalidatePreferred = -[UICollectionViewLayoutInvalidationContext _shouldInvalidatePreferredAttributes]((uint64_t)v7);
    BOOL v22 = -[UICollectionViewLayoutInvalidationContext _requiresFullCacheInvalidation](v7);
    double v16 = [v7 invalidatedItemIndexPaths];
    double v20 = [v7 invalidatedSupplementaryIndexPaths];
    CGFloat v23 = [v7 invalidatedDecorationIndexPaths];
    uint64_t v60 = [(UICollectionViewLayout *)v16 count];
    uint64_t v59 = [v20 count];
    uint64_t v58 = [v23 count];
    unsigned int v57 = !v22;
    if (v22 && shouldInvalidatePreferred)
    {
      subviewManager = self->_subviewManager;
      if (subviewManager) {
        -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)&__block_literal_global_963);
      }
      [(NSMutableDictionary *)self->_prefetchCacheItems enumerateKeysAndObjectsUsingBlock:&__block_literal_global_965];
    }
    if (v22)
    {
      v73[0] = MEMORY[0x1E4F143A8];
      v73[1] = 3221225472;
      v73[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke_4;
      v73[3] = &unk_1E52D9F98;
      CGFloat v25 = (id *)&v74;
      uint64_t v74 = v9;
      BOOL v26 = (id *)&v75;
      uint64_t v75 = v7;
      [(UICollectionView *)self _invalidateWithBlock:v73];
    }
    else
    {
      v68[0] = MEMORY[0x1E4F143A8];
      v68[1] = 3221225472;
      v68[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke_5;
      v68[3] = &unk_1E52DD450;
      CGFloat v25 = (id *)&v69;
      BOOL v69 = v9;
      BOOL v26 = (id *)&v70;
      uint64_t v70 = v16;
      id v71 = v20;
      id v72 = v23;
      [(UICollectionView *)self _invalidateWithBlock:v68];
    }
    double v14 = v61;
    if (v60 || v59 || v58)
    {
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke_6;
      aBlock[3] = &unk_1E52DD450;
      uint64_t v64 = v16;
      uint64_t v65 = self;
      id v66 = v20;
      id v67 = v23;
      uint64_t v27 = (void (**)(void))_Block_copy(aBlock);
      if (dyld_program_sdk_at_least()) {
        [(UICollectionView *)self _invalidateWithBlock:v27];
      }
      else {
        v27[2](v27);
      }
    }
    if (v13 != 15)
    {
      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v57];
      *((void *)&self->_collectionViewFlags + 1) |= 0x80000000uLL;
    }
  }
  if (v7) {
    unint64_t v28 = (void *)*((void *)v7 + 16);
  }
  else {
    unint64_t v28 = 0;
  }
  id v29 = v28;
  if ([v29 count]) {
    -[UICollectionView _addIndexPathsRequiringPreferredAttributes:]((uint64_t)self, v29);
  }
  [v7 contentOffsetAdjustment];
  double v32 = v31;
  double v33 = v30;
  if (v31 != *MEMORY[0x1E4F1DAD8] || v30 != *(double *)(MEMORY[0x1E4F1DAD8] + 8))
  {
    [(UIScrollView *)self contentOffset];
    int v36 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *((unsigned char *)&self->_collectionViewFlags + 18) = (v36 | 0x20000u) >> 16;
    -[UICollectionView setContentOffset:](self, "setContentOffset:", v32 + v34, v33 + v35);
    int v37 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
    unsigned int v38 = (v37 | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16)) & 0xFFFDFFFF;
    *((_WORD *)&self->_collectionViewFlags + 8) = v37;
    *((unsigned char *)&self->_collectionViewFlags + 18) = (v38 | v36 & 0x20000) >> 16;
  }
  [v7 contentSizeAdjustment];
  if (v39 != *MEMORY[0x1E4F1DB30] || v40 != *(double *)(MEMORY[0x1E4F1DB30] + 8))
  {
    if (v9)
    {
      double width = v9->_contentSize.width;
      double height = v9->_contentSize.height;
    }
    else
    {
      double height = 0.0;
      double width = 0.0;
    }
    double v43 = v39 + width;
    double v44 = v40 + height;
    -[UICollectionView setContentSize:](self, "setContentSize:", v39 + width, v40 + height);
    collectionViewData = self->_collectionViewData;
    if (collectionViewData)
    {
      collectionViewData->_contentSize.double width = v43;
      collectionViewData->_contentSize.double height = v44;
    }
  }
  if ([v7 _shouldInvalidateCollectionViewContentSize])
  {
    [(UICollectionViewLayout *)self->_layout collectionViewContentSize];
    CGFloat v47 = v46;
    CGFloat v49 = v48;
    -[UICollectionView _setContentSizeFromLayout:isRecursivelyUpdatingVisibleCells:](self, "_setContentSizeFromLayout:isRecursivelyUpdatingVisibleCells:", self->_updateVisibleCellsRecursionCount > 0);
    long long v50 = self->_collectionViewData;
    if (v50)
    {
      v50->_contentSize.double width = v47;
      v50->_contentSize.double height = v49;
    }
  }
  if (([v7 invalidateEverything] & 1) != 0 || objc_msgSend(v7, "_intent") == 3)
  {
    id v51 = [(UICollectionView *)self _identityTracker:0];
    -[_UIIndexPathIdentityTracker reset]((uint64_t)v51);

    double v52 = [(UICollectionView *)self contextMenuInteraction];
    [v52 _retargetDismissingMenuWithInternalIdentifier:0 toPreview:0 force:1];
  }
  uint64_t v53 = [(UICollectionView *)self _dataSourceActual];

  if (v53)
  {
    if (v13 != 6 && v13 != 15) {
      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
    }
    if ((v62 & 1) == 0)
    {
      [(UICollectionView *)self _reconfigureSectionContainersForUpdate:self->_currentUpdate];
      [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController performLayout];
      if ([v7 _intent] != 6) {
        -[_UICollectionViewOrthogonalScrollerSectionController reconfigureScrollViewsForUpdate:]((uint64_t)self->_orthogonalScrollerController, self->_currentUpdate);
      }
      [(UIScrollView *)self _notifyAlignedContentMarginChanged];
    }
  }
}

- (void)_setNeedsVisibleCellsUpdate:(BOOL)a3 withLayoutAttributes:(BOOL)a4
{
  BOOL v4 = a4;
  BOOL v5 = a3;
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (a3 && (*((void *)&self->_collectionViewFlags + 1) & 0x100) == 0)
  {
    if (self->_debugger)
    {
      os_signpost_id_t v7 = [MEMORY[0x1E4F29060] callStackSymbols];
      [(_UICollectionViewFeedbackLoopDebugger *)self->_debugger recordUpdateVisibleCellsScheduledWithCallStack:v7];
    }
    int64_t updateVisibleCellsRecursionCount = self->_updateVisibleCellsRecursionCount;
    if (updateVisibleCellsRecursionCount == 95)
    {
      if (self->_contentOffsetRestorationAnchor || self->_scrollingTargetIndexPath)
      {
        if (os_variant_has_internal_diagnostics())
        {
          double v19 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
          {
            contentOffsetRestorationAnchor = self->_contentOffsetRestorationAnchor;
            scrollingTargetIndexPath = self->_scrollingTargetIndexPath;
            int v22 = 138412802;
            CGFloat v23 = self;
            __int16 v24 = 2112;
            CGFloat v25 = contentOffsetRestorationAnchor;
            __int16 v26 = 2112;
            uint64_t v27 = scrollingTargetIndexPath;
            _os_log_fault_impl(&dword_1853B0000, v19, OS_LOG_TYPE_FAULT, "Attempting to recover UICollectionView stuck in an update/layout feedback loop. UICollectionView: %@. Scroll position restoration item: %@. Scrolling target: %@", (uint8_t *)&v22, 0x20u);
          }
        }
        else
        {
          id v9 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_setNeedsVisibleCellsUpdate_withLayoutAttributes____s_category)+ 8);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          {
            uint64_t v10 = self->_contentOffsetRestorationAnchor;
            int v11 = self->_scrollingTargetIndexPath;
            int v22 = 138412802;
            CGFloat v23 = self;
            __int16 v24 = 2112;
            CGFloat v25 = v10;
            __int16 v26 = 2112;
            uint64_t v27 = v11;
            _os_log_impl(&dword_1853B0000, v9, OS_LOG_TYPE_ERROR, "Attempting to recover UICollectionView stuck in an update/layout feedback loop. UICollectionView: %@. Scroll position restoration item: %@. Scrolling target: %@", (uint8_t *)&v22, 0x20u);
          }
        }
        [(_UICollectionViewFeedbackLoopDebugger *)self->_debugger printCollectedRecordsForCollectionView:self raiseException:0];
        [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
        [(UICollectionView *)self _clearTargetIndexPathForScrolling];
      }
    }
    else if (updateVisibleCellsRecursionCount >= 100)
    {
      debugger = self->_debugger;
      if (debugger) {
        [(_UICollectionViewFeedbackLoopDebugger *)debugger printCollectedRecordsForCollectionView:self raiseException:1];
      }
    }
  }
  unint64_t v13 = *((void *)&self->_collectionViewFlags + 1);
  int v14 = (v13 >> 8) & 1 | v5;
  uint64_t v15 = 256;
  if (!v14) {
    uint64_t v15 = 0;
  }
  unint64_t v16 = v13 & 0xFFFFFFFFFFFFFCFFLL;
  int v17 = (v13 >> 9) & 1 | v4;
  uint64_t v18 = 512;
  if (!v17) {
    uint64_t v18 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = v15 | v16 | v18;
  if ((v14 & 1) != 0 || v17) {
    [(UIScrollView *)self setNeedsLayout];
  }
}

- (id)_dataSourceActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  return WeakRetained;
}

- (void)_invalidateWithBlock:(id)a3
{
  id v4 = a3;
  BOOL v5 = v4;
  if (v4)
  {
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x1000000000) != 0)
    {
      id v6 = _Block_copy(self->_invalidationBlock);
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 3221225472;
      v10[2] = __41__UICollectionView__invalidateWithBlock___block_invoke;
      v10[3] = &unk_1E52DE9A0;
      id v11 = v6;
      id v12 = v5;
      id v7 = v6;
      unint64_t v8 = _Block_copy(v10);
      invalidationBlocunint64_t k = self->_invalidationBlock;
      self->_invalidationBlocunint64_t k = v8;
    }
    else
    {
      (*((void (**)(id))v4 + 2))(v4);
    }
  }
}

- (void)_reconfigureSectionContainersForUpdate:(id)a3
{
  id v4 = a3;
  BOOL v5 = self->_sectionToContainerViewMap;
  id v6 = [(UICollectionViewLayout *)self->_layout _customContainerSectionIndexes];
  if ([v6 count] || -[NSMutableDictionary count](v5, "count"))
  {
    id v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", objc_msgSend(v6, "count"));
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    v11[2] = __59__UICollectionView__reconfigureSectionContainersForUpdate___block_invoke;
    v11[3] = &unk_1E52E5098;
    id v12 = v4;
    id v13 = v6;
    unint64_t v8 = v7;
    int v14 = v8;
    uint64_t v15 = self;
    [(NSMutableDictionary *)v5 enumerateKeysAndObjectsUsingBlock:v11];
    sectionToContainerViewMap = self->_sectionToContainerViewMap;
    self->_sectionToContainerViewMap = v8;
    uint64_t v10 = v8;
  }
}

void __49__UICollectionView__invalidateLayoutWithContext___block_invoke_4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  char v2 = [*(id *)(a1 + 40) invalidateEverything] ^ 1;
  -[UICollectionViewData invalidate:](v1, v2);
}

- (void)_resetAllPrefetchContexts
{
  [(UICollectionView *)self _resetPrefetchingContext:self->_mainPrefetchingContext];
  orthogonalSectionPrefetchingContexts = self->_orthogonalSectionPrefetchingContexts;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __45__UICollectionView__resetAllPrefetchContexts__block_invoke;
  v6[3] = &unk_1E52E52C0;
  v6[4] = self;
  [(NSMutableDictionary *)orthogonalSectionPrefetchingContexts enumerateKeysAndObjectsUsingBlock:v6];
  mainPrefetchingContext = self->_mainPrefetchingContext;
  self->_mainPrefetchingContext = 0;

  [(NSMutableDictionary *)self->_orthogonalSectionPrefetchingContexts removeAllObjects];
  activeOrthogonalPrefetchingContext = self->_activeOrthogonalPrefetchingContext;
  self->_activeOrthogonalPrefetchingContext = 0;
}

- (void)_resetPrefetchingContext:(id)a3
{
  id v4 = (id *)a3;
  BOOL v5 = v4;
  if (v4)
  {
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x20) != 0)
    {
      id v9 = v4;
      uint64_t v6 = [v4[2] count];
      BOOL v5 = v9;
      if (v6)
      {
        id v7 = [(UICollectionView *)self _prefetchDataSourceProxy];
        unint64_t v8 = -[_UICollectionViewPrefetchingContext remainingIndexPaths](v9);
        [v7 collectionView:self cancelPrefetchingForItemsAtIndexPaths:v8];

        BOOL v5 = v9;
      }
    }
  }
}

- (void)_processQueuedSectionContainerRemovals
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = self->_sectionContainersQueuedForRemoval;
  uint64_t v3 = [(NSMutableArray *)obj countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v15 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v21 != v15) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        id v7 = [v6 subviews];
        uint64_t v8 = [v7 countByEnumeratingWithState:&v16 objects:v24 count:16];
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = *(void *)v17;
          do
          {
            for (uint64_t j = 0; j != v9; ++j)
            {
              if (*(void *)v17 != v10) {
                objc_enumerationMutation(v7);
              }
              uint64_t v12 = *(void *)(*((void *)&v16 + 1) + 8 * j);
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                [(UICollectionView *)self _addControlledSubview:v12];
              }
            }
            uint64_t v9 = [v7 countByEnumeratingWithState:&v16 objects:v24 count:16];
          }
          while (v9);
        }

        [v6 removeFromSuperview];
      }
      uint64_t v4 = [(NSMutableArray *)obj countByEnumeratingWithState:&v20 objects:v25 count:16];
    }
    while (v4);
  }

  sectionContainersQueuedForRemoval = self->_sectionContainersQueuedForRemoval;
  self->_sectionContainersQueuedForRemoval = 0;
}

- (void)_applyAutomaticAdjustedContentOffset:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  p_collectionViewFlags = &self->_collectionViewFlags;
  id v7 = (unsigned __int16 *)((char *)&self->_collectionViewFlags + 16);
  int v8 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
  *((unsigned char *)&self->_collectionViewFlags + 18) = (v8 | 0x20000u) >> 16;
  v16.receiver = self;
  v16.super_class = (Class)UICollectionView;
  -[UIScrollView _applyAutomaticAdjustedContentOffset:](&v16, sel__applyAutomaticAdjustedContentOffset_);
  int v9 = *v7;
  unsigned int v10 = (v9 | (*((unsigned __int8 *)v7 + 2) << 16)) & 0xFFFDFFFF;
  *id v7 = v9;
  *((unsigned char *)v7 + 2) = (v10 | v8 & 0x20000) >> 16;
  [(UIScrollView *)self contentOffset];
  if (vabdd_f64(v12, x) >= 0.0001 || vabdd_f64(v11, y) >= 0.0001)
  {
    int v14 = *((unsigned __int16 *)p_collectionViewFlags + 8);
    id v13 = (char *)p_collectionViewFlags + 16;
    unsigned int v15 = (v14 | (v13[2] << 16)) & 0xFFF7FFFF;
    *(_WORD *)id v13 = v14;
    v13[2] = BYTE2(v15);
  }
}

- (void)setContentOffset:(CGPoint)a3
{
  v4.receiver = self;
  v4.super_class = (Class)UICollectionView;
  -[UIScrollView setContentOffset:](&v4, sel_setContentOffset_, a3.x, a3.y);
  [(UICollectionView *)self layoutHorizontalIndexTitleBar];
}

- (void)layoutHorizontalIndexTitleBar
{
  uint64_t v3 = [(UICollectionView *)self _horizontalIndexTitleBar];

  if (v3)
  {
    [(UIScrollView *)self contentOffset];
    double y = self->_horizontalIndexTitleBarOffset.y;
    double v6 = v5 + self->_horizontalIndexTitleBarOffset.x;
    [(UIView *)self bounds];
    double v8 = v7;
    id v9 = [(UICollectionView *)self _horizontalIndexTitleBar];
    objc_msgSend(v9, "setFrame:", v6, y, v8, 54.0);
  }
}

- (_UIHorizontalIndexTitleBar)_horizontalIndexTitleBar
{
  return self->_horizontalIndexTitleBar;
}

- (void)_resetPrefetchState
{
  [(UICollectionView *)self _resetPrefetchedCachedCells];
  [(UICollectionView *)self _resetAllPrefetchContexts];
}

- (void)_resetPrefetchedCachedCells
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if ([(NSMutableDictionary *)self->_prefetchCacheItems count])
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_resetPrefetchedCachedCells___s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      double v12 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134217984;
        long long v21 = self;
        _os_log_impl(&dword_1853B0000, v12, OS_LOG_TYPE_ERROR, "[UICV %p] Resetting prefetched cells", buf, 0xCu);
      }
    }
    objc_super v4 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", -[NSMutableDictionary count](self->_prefetchCacheItems, "count"));
    prefetchCacheItems = self->_prefetchCacheItems;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    void v17[2] = __47__UICollectionView__resetPrefetchedCachedCells__block_invoke;
    v17[3] = &unk_1E52E5298;
    id v6 = v4;
    id v18 = v6;
    [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v17];
    [(NSMutableDictionary *)self->_prefetchCacheItems removeAllObjects];
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v7 = v6;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v19 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v14;
      do
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v14 != v10) {
            objc_enumerationMutation(v7);
          }
          -[UICollectionView _reusePrefetchedCell:](self, "_reusePrefetchedCell:", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13);
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v19 count:16];
      }
      while (v9);
    }
  }
}

- (BOOL)_hasCustomBackground
{
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x2000000000) != 0) {
    return 1;
  }
  char v2 = [(UICollectionView *)self backgroundView];
  BOOL v3 = v2 != 0;

  return v3;
}

- (UIContextMenuInteraction)contextMenuInteraction
{
  return self->_contextMenuInteraction;
}

void __30__UICollectionView_reloadData__block_invoke_3(uint64_t a1)
{
}

- (void)_updateSectionIndex
{
  if ((*(void *)&self->_collectionViewFlags & 0x8000000000000000) != 0) {
    [(UICollectionView *)self _reloadSectionIndexTitles];
  }
}

- (void)_completeInteractiveMovementWithDisposition:(int64_t)a3
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  if (self)
  {
    dragAndDropController = self->_dragAndDropController;
    if (dragAndDropController)
    {
      if ([(NSMutableArray *)dragAndDropController->__reorderedItems count])
      {
        uint64_t v6 = *((void *)&self->_collectionViewFlags + 1);
        if ((v6 & 0x800000000000000) == 0)
        {
          int v7 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                         + 18) << 16);
          *(void *)&self->_collectionViewFlags = self->_collectionViewFlags;
          *((void *)&self->_collectionViewFlags + 1) = v6 | 0x800000000000000;
          *((_WORD *)&self->_collectionViewFlags + 8) = v7;
          *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v7);
          [(UICollectionView *)self _removeReorderDestinationView];
          unint64_t v8 = a3 - 1;
          double x = self->_reorderingTargetPosition.x;
          double y = self->_reorderingTargetPosition.y;
          if ((unint64_t)(a3 - 1) > 1)
          {
            id v75 = 0;
            [(UICollectionView *)self _getOriginalReorderingIndexPaths:0 targetIndexPaths:&v75];
            id v11 = v75;
            id v12 = v11;
          }
          else if (a3 == 2)
          {
            id v11 = 0;
            id v12 = 0;
          }
          else
          {
            id v77 = 0;
            id v76 = 0;
            [(UICollectionView *)self _getOriginalReorderingIndexPaths:&v77 targetIndexPaths:&v76];
            id v12 = v77;
            id v11 = v76;
          }
          long long v13 = [(UIScrollView *)self _autoScrollAssistant];
          [v13 stop];

          reorderFeedbackGenerator = self->_reorderFeedbackGenerator;
          if (v8 >= 2)
          {
            -[_UIDragFeedbackGenerator userInteractionEndedAtLocation:](reorderFeedbackGenerator, "userInteractionEndedAtLocation:", x, y);
          }
          else
          {
            -[_UIDragFeedbackGenerator userInteractionCancelledAtLocation:](reorderFeedbackGenerator, "userInteractionCancelledAtLocation:", x, y);
            if (a3 == 2)
            {
LABEL_15:
              long long v15 = [(UICollectionView *)self _reorderedItems];
              long long v16 = self->_dragAndDropController;
              if (v16) {
                unint64_t sessionKind = v16->_sessionKind;
              }
              else {
                unint64_t sessionKind = 0;
              }
              BOOL v52 = [(UICollectionView *)self _dataSourceImplementsReorderingHandlers];
              id v18 = self->_dragAndDropController;
              if (v8 >= 2)
              {
                BOOL v48 = (unint64_t)(a3 - 1) < 2;
                CGFloat v49 = v11;
                long long v50 = v12;
                uint64_t v47 = -[_UICollectionViewDragAndDropController endReordering](v18);
              }
              else
              {
                uint64_t v19 = -[_UICollectionViewDragAndDropController cancelReorderingForced:]((uint64_t *)v18, a3 == 2);
                long long v20 = (void *)v19;
                if (a3 == 2)
                {
                  if (!v19)
                  {
LABEL_73:
                    *((void *)&self->_collectionViewFlags + 1) &= ~0x800000000000000uLL;

                    return;
                  }
                  [(UICollectionView *)self _addReloadDataCompletionBlock:v19];
LABEL_72:

                  goto LABEL_73;
                }
                uint64_t v47 = v19;
                BOOL v48 = (unint64_t)(a3 - 1) < 2;
                CGFloat v49 = v11;
                long long v50 = v12;
              }
              long long v73 = 0u;
              long long v74 = 0u;
              long long v71 = 0u;
              long long v72 = 0u;
              id v51 = v15;
              id v21 = v15;
              uint64_t v22 = [v21 countByEnumeratingWithState:&v71 objects:v79 count:16];
              if (v22)
              {
                uint64_t v23 = v22;
                uint64_t v24 = *(void *)v72;
                do
                {
                  uint64_t v25 = 0;
                  do
                  {
                    if (*(void *)v72 != v24) {
                      objc_enumerationMutation(v21);
                    }
                    uint64_t v26 = *(void **)(*((void *)&v71 + 1) + 8 * v25);
                    id v27 = (id)[v26 originalIndexPath];
                    id v28 = (id)[v26 targetIndexPath];
                    if (([v27 isEqual:v28] & 1) == 0)
                    {
                      if (sessionKind == 1)
                      {
                        if ((*(void *)&self->_collectionViewFlags & 0x4000000000000000) != 0
                          || [(UICollectionView *)self _dataSourceImplementsReorderingHandlers])
                        {
                          if (v8 > 1)
                          {
                            [(UICollectionView *)self _notifyDataSourceForMoveOfItemFromIndexPath:v27 toIndexPath:v28];
                          }
                          else if (!dyld_program_sdk_at_least() {
                                 || (id v29 = self->_dragAndDropController) != 0 && v29->_sessionKind != 3)
                          }
                          {
                            objc_storeStrong((id *)&self->_cancellingToIndexPath, v27);
                            v70[0] = MEMORY[0x1E4F143A8];
                            v70[1] = 3221225472;
                            v70[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke;
                            v70[3] = &unk_1E52E51D0;
                            v70[4] = self;
                            v70[5] = v28;
                            v70[6] = v27;
                            [(UICollectionView *)self _performInternalBatchUpdates:v70];
                            cancellingToIndexPath = self->_cancellingToIndexPath;
                            self->_cancellingToIndexPath = 0;
                          }
                        }
                        else if (v8 >= 2 && (*(void *)&self->_collectionViewFlags & 0x200000000000000) != 0)
                        {
                          double v33 = [(UICollectionView *)self _dataSourceProxy];
                          [v33 _collectionView:self moveItemAtIndexPath:v27 toIndexPath:v28];
                        }
                      }
                      else if (v8 > 1)
                      {
                        if ((sessionKind & 0xFFFFFFFFFFFFFFFELL) != 2
                          || !v52
                          && [(UICollectionView *)self _supportsAutomaticCatalystDragAndDropReordering])
                        {
                          v68[0] = MEMORY[0x1E4F143A8];
                          v68[1] = 3221225472;
                          v68[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_3;
                          v68[3] = &unk_1E52E51D0;
                          void v68[4] = self;
                          v68[5] = v27;
                          v68[6] = v28;
                          [(UICollectionView *)self _performInternalBatchUpdates:v68];
                        }
                      }
                      else
                      {
                        double v31 = self->_dragAndDropController;
                        if (v31 && v31->_sessionKind != 3)
                        {
                          v69[0] = MEMORY[0x1E4F143A8];
                          v69[1] = 3221225472;
                          v69[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_2;
                          v69[3] = &unk_1E52E51D0;
                          v69[4] = self;
                          v69[5] = v28;
                          v69[6] = v27;
                          id v32 = [(UICollectionView *)self _performShadowUpdates:v69];
                        }
                      }
                    }
                    ++v25;
                  }
                  while (v23 != v25);
                  uint64_t v34 = [v21 countByEnumeratingWithState:&v71 objects:v79 count:16];
                  uint64_t v23 = v34;
                }
                while (v34);
              }

              long long v66 = 0u;
              long long v67 = 0u;
              long long v64 = 0u;
              long long v65 = 0u;
              id v35 = v21;
              uint64_t v36 = [v35 countByEnumeratingWithState:&v64 objects:v78 count:16];
              if (v36)
              {
                uint64_t v37 = v36;
                uint64_t v38 = *(void *)v65;
                char v39 = 1;
                do
                {
                  for (uint64_t i = 0; i != v37; ++i)
                  {
                    if (*(void *)v65 != v38) {
                      objc_enumerationMutation(v35);
                    }
                    uint64_t v41 = [*(id *)(*((void *)&v64 + 1) + 8 * i) cell];
                    subviewManager = self->_subviewManager;
                    if (subviewManager
                      && -[_UICollectionViewSubviewCollection containsView:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v41))
                    {
                      if ((dyld_program_sdk_at_least() & 1) == 0) {
                        [v41 _invalidatePreferredAttributes];
                      }
                    }
                    else
                    {
                      char v39 = 0;
                    }
                  }
                  uint64_t v37 = [v35 countByEnumeratingWithState:&v64 objects:v78 count:16];
                }
                while (v37);
              }
              else
              {
                char v39 = 1;
              }

              aBlock[0] = MEMORY[0x1E4F143A8];
              aBlock[1] = 3221225472;
              aBlock[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_5;
              aBlock[3] = &unk_1E52E5C30;
              BOOL v62 = sessionKind == 1;
              void aBlock[4] = self;
              id v12 = v50;
              id v59 = v50;
              id v11 = v49;
              id v60 = v49;
              BOOL v63 = v48;
              id v43 = v35;
              id v61 = v43;
              double v44 = _Block_copy(aBlock);
              v54[0] = MEMORY[0x1E4F143A8];
              v54[1] = 3221225472;
              v54[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_6;
              v54[3] = &unk_1E52DF248;
              char v56 = v39 & 1;
              BOOL v57 = sessionKind == 1;
              v54[4] = self;
              id v55 = v43;
              long long v45 = _Block_copy(v54);
              +[UIView animateWithDuration:4 delay:v44 options:v45 animations:0.3 completion:0.0];
              long long v20 = (void *)v47;
              if (v47) {
                (*(void (**)(uint64_t))(v47 + 16))(v47);
              }
              long long v15 = v51;
              if (v8 >= 2 && sessionKind == 1)
              {
                double v46 = self->_reorderFeedbackGenerator;
                v53[0] = MEMORY[0x1E4F143A8];
                v53[1] = 3221225472;
                v53[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_8;
                v53[3] = &unk_1E52DD178;
                v53[4] = self;
                *(double *)&v53[5] = x;
                *(double *)&v53[6] = y;
                [(UIFeedbackGenerator *)v46 performFeedbackWithDelay:v53 insideBlock:0.3];
              }

              goto LABEL_72;
            }
          }
          [(UIView *)self layoutBelowIfNeeded];
          goto LABEL_15;
        }
      }
    }
  }
}

- (void)_addIndexPathsRequiringPreferredAttributes:(uint64_t)a1
{
  id v3 = a2;
  if (a1)
  {
    objc_super v4 = *(void **)(a1 + 2592);
    id v7 = v3;
    if (v4)
    {
      [v4 unionOrderedSet:v3];
    }
    else
    {
      uint64_t v5 = [v3 mutableCopy];
      uint64_t v6 = *(void **)(a1 + 2592);
      *(void *)(a1 + 2592) = v5;
    }
    id v3 = v7;
  }
}

- (BOOL)_dataSourceImplementsNumberOfSections
{
  return (*(void *)&self->_collectionViewFlags >> 54) & 1;
}

uint64_t __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_929(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

- (id)_visibleSupplementaryViewsOfKind:(id)a3
{
  return [(UICollectionView *)self _visibleSupplementaryViewsOfKind:a3 isDecorationView:0];
}

- (void)_createAndAppendViewAnimationsForExistingAndNewlyVisibleItemsInCurrentUpdate:(id)a3 animationsForOnScreenViews:(id)a4 newSubviewCollection:(id)a5 oldVisibleViews:(id)a6 attributesForNewModel:(id)a7
{
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v13 = a4;
  long long v14 = self;
  id v91 = v13;
  id v88 = a5;
  long long v15 = [(UICollectionView *)self _attributesForItemsVisibleDuringCurrentUpdateWithOldVisibleViews:a6 attributesForNewModel:a7];
  [(UICollectionView *)self _visibleBounds];
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  BOOL v87 = [(UICollectionViewLayout *)self->_layout _estimatesSizes];
  id v24 = objc_alloc_init(MEMORY[0x1E4F28E60]);
  long long v107 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v110 = 0u;
  uint64_t v86 = v15;
  id obj = [v15 objectEnumerator];
  uint64_t v25 = [obj countByEnumeratingWithState:&v107 objects:v114 count:16];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v97 = *(void *)v108;
    id v89 = v12;
    id v90 = v24;
    do
    {
      uint64_t v27 = 0;
      uint64_t v93 = v26;
      do
      {
        if (*(void *)v108 != v97) {
          objc_enumerationMutation(obj);
        }
        uint64_t v99 = v27;
        id v28 = *(void **)(*((void *)&v107 + 1) + 8 * v27);
        long long v100 = [v28 indexPath];
        uint64_t v98 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)v14->_currentUpdate->_newModel, v100);
        uint64_t v29 = -[UICollectionViewUpdate initialGlobalIndexForFinalGlobalIndex:](v14->_currentUpdate, "initialGlobalIndexForFinalGlobalIndex:");
        uint64_t v30 = -[UICollectionViewData layoutAttributesForGlobalItemIndex:](v14->_currentUpdate->_oldModel, v29);
        uint64_t v31 = v29;
        id v32 = (void *)v30;
        double v33 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](v14->_currentUpdate->_oldModel, v31);
        id v102 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)v14->_subviewManager, (uint64_t)v33);
        if (!v32)
        {
          id v32 = [v102 _layoutAttributes];
          if (!v32)
          {
            id v32 = [(UICollectionViewLayout *)v14->_layout initialLayoutAttributesForAppearingItemAtIndexPath:v100];
            if (!v32)
            {
              id v32 = (void *)[v28 copy];
              [v32 setAlpha:0.0];
            }
          }
        }
        [v32 frame];
        CGFloat v35 = v34;
        CGFloat v37 = v36;
        CGFloat v39 = v38;
        CGFloat v41 = v40;
        [v28 frame];
        v119.origin.double x = v42;
        v119.origin.double y = v43;
        v119.size.double width = v44;
        v119.size.double height = v45;
        v116.origin.double x = v35;
        v116.origin.double y = v37;
        v116.size.double width = v39;
        v116.size.double height = v41;
        CGRect v117 = CGRectUnion(v116, v119);
        -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](v14->_layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v28, v117.origin.x, v117.origin.y, v117.size.width, v117.size.height);
        v120.origin.double x = v46;
        v120.origin.double y = v47;
        v120.size.double width = v48;
        v120.size.double height = v49;
        v118.origin.double x = v17;
        v118.origin.double y = v19;
        v118.size.double width = v21;
        v118.size.double height = v23;
        if (!CGRectIntersectsRect(v118, v120))
        {
          long long v50 = v100;
          goto LABEL_47;
        }
        id v101 = v28;
        if (v102)
        {
          long long v50 = v100;
LABEL_13:
          LOBYTE(v85) = 1;
          id v95 = v32;
          id v51 = [(UICollectionView *)v14 _viewAnimationsForView:v102 startingLayoutAttributes:v32 endingLayoutAttributes:v101 startingLayout:v14->_layout endingLayout:v14->_layout animationSetup:0 animationCompletion:0 enableCustomAnimations:v85 customAnimationsType:2];
          uint64_t orthogonalScrollerController = (uint64_t)v14->_orthogonalScrollerController;
          uint64_t v53 = [v102 _layoutAttributes];
          LOBYTE(orthogonalScrollerController) = -[_UICollectionViewOrthogonalScrollerSectionController isElementInOrthogonalScrollingSectionWithLayoutAttributes:](orthogonalScrollerController, v53);

          uint64_t v54 = v51;
          if ((orthogonalScrollerController & 1) == 0)
          {
            CGFloat v92 = v33;
            long long v105 = 0u;
            long long v106 = 0u;
            long long v103 = 0u;
            long long v104 = 0u;
            id v55 = v51;
            uint64_t v56 = [v55 countByEnumeratingWithState:&v103 objects:v113 count:16];
            if (v56)
            {
              uint64_t v57 = v56;
              uint64_t v58 = *(void *)v104;
              do
              {
                uint64_t v59 = 0;
                do
                {
                  if (*(void *)v104 != v58) {
                    objc_enumerationMutation(v55);
                  }
                  id v60 = *(void **)(*((void *)&v103 + 1) + 8 * v59);
                  id v61 = [v102 superview];
                  BOOL v62 = v14;
                  uint64_t v63 = [(UICollectionView *)v14 _subviewRouterForView:v102 attributes:v101 createIfNecessary:0];
                  long long v64 = (void *)v63;
                  if (v63) {
                    long long v65 = *(void **)(v63 + 40);
                  }
                  else {
                    long long v65 = 0;
                  }
                  id v66 = v65;

                  if (v61 != v66) {
                    [v60 setParentInCollectionViewDuringAnimation:1];
                  }

                  ++v59;
                  long long v14 = v62;
                }
                while (v57 != v59);
                id v51 = v54;
                uint64_t v67 = [v55 countByEnumeratingWithState:&v103 objects:v113 count:16];
                uint64_t v57 = v67;
              }
              while (v67);
            }

            id v12 = v89;
            id v24 = v90;
            long long v50 = v100;
            double v33 = v92;
          }
          [v12 addObjectsFromArray:v51];
          if ([v51 count] == 1)
          {
            id v68 = +[_UICollectionViewItemKey collectionItemKeyForCellWithIndexPath:]((uint64_t)_UICollectionViewItemKey, v50);
            BOOL v69 = [v51 objectAtIndexedSubscript:0];
            [v91 setObject:v69 forKeyedSubscript:v68];
          }
          int has_internal_diagnostics = os_variant_has_internal_diagnostics();
          int v71 = [v24 containsIndex:v98];
          uint64_t v26 = v93;
          if (has_internal_diagnostics)
          {
            if (v71)
            {
              uint64_t v82 = __UIFaultDebugAssertLog();
              if (os_log_type_enabled(v82, OS_LOG_TYPE_FAULT))
              {
                *(_DWORD *)buf = 134217984;
                uint64_t v112 = v98;
                _os_log_fault_impl(&dword_1853B0000, v82, OS_LOG_TYPE_FAULT, "attempt to create two animations for new global item index %ld", buf, 0xCu);
              }

              id v24 = v90;
              uint64_t v26 = v93;
              long long v50 = v100;
              id v51 = v54;
            }
          }
          else if (v71)
          {
            __int16 v83 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_createAndAppendViewAnimationsForExistingAndNewlyVisibleItemsInCurrentUpdate_animationsForOnScreenViews_newSubviewCollection_oldVisibleViews_attributesForNewModel____s_category)+ 8);
            if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 134217984;
              uint64_t v112 = v98;
              _os_log_impl(&dword_1853B0000, v83, OS_LOG_TYPE_ERROR, "attempt to create two animations for new global item index %ld", buf, 0xCu);
            }
          }
          [v24 addIndex:v98];

          id v32 = v95;
          goto LABEL_46;
        }
        long long v50 = v100;
        if ((![v32 isHidden] || (objc_msgSend(v101, "isHidden") & 1) == 0)
          && (-[_UICollectionViewDragAndDropController isCellPerformingLegacyReorderingAtIndexPath:]((uint64_t)v14->_dragAndDropController, v100) & 1) == 0&& ([(NSIndexPath *)v14->_cancellingToIndexPath isEqual:v100] & 1) == 0)
        {
          long long v72 = (void *)[v32 copy];
          if (dyld_program_sdk_at_least())
          {
            [v72 indexPath];
            long long v74 = v73 = v32;
            char v75 = [v74 isEqual:v100];

            id v32 = v73;
            if ((v75 & 1) == 0) {
              [v72 setIndexPath:v100];
            }
          }
          id v102 = [(UICollectionView *)v14 _preparedCellForItemAtIndexPath:v100 withLayoutAttributes:v72 applyAttributes:1 isFocused:0 notify:1];
          if (v87 && (*((void *)&v14->_collectionViewFlags + 1) & 0x100) != 0)
          {
            id v96 = v32;
            -[UICollectionViewData invalidate:]((uint64_t)v14->_collectionViewData, 1);
            id v76 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)v14->_collectionViewData, v100);
            id v77 = (void *)[v76 copy];

            id v32 = v96;
            [v96 frame];
            double v79 = v78;
            double v81 = v80;
            [v77 frame];
            objc_msgSend(v96, "setFrame:", v79, v81);
            [(UICollectionView *)v14 _applyLayoutAttributes:v96 toView:v102];
            id v101 = v77;
          }
          uint64_t v26 = v93;
          -[_UICollectionViewSubviewCollection setCell:atIndexPath:]((uint64_t)v88, (uint64_t)v102, (uint64_t)v100);

          if (v102) {
            goto LABEL_13;
          }
        }
        id v102 = 0;
LABEL_46:

LABEL_47:
        uint64_t v27 = v99 + 1;
      }
      while (v99 + 1 != v26);
      uint64_t v84 = [obj countByEnumeratingWithState:&v107 objects:v114 count:16];
      uint64_t v26 = v84;
    }
    while (v84);
  }
}

- (id)_viewAnimationsForView:(id)a3 startingLayoutAttributes:(id)a4 endingLayoutAttributes:(id)a5 startingLayout:(id)a6 endingLayout:(id)a7 animationSetup:(id)a8 animationCompletion:(id)a9 enableCustomAnimations:(BOOL)a10 customAnimationsType:(unint64_t)a11
{
  id v58 = a3;
  id v17 = a4;
  double v18 = a5;
  id v19 = a6;
  id v59 = a7;
  id v20 = a8;
  id v21 = a9;
  BOOL v55 = [(UICollectionView *)self _isReordering];
  if (v18)
  {
    if (v18[144]) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = 2;
    }
  }
  else
  {
    uint64_t v22 = 2;
  }
  v66[0] = MEMORY[0x1E4F143A8];
  v66[1] = 3221225472;
  uint64_t v67 = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke;
  id v68 = &unk_1E52E5510;
  BOOL v69 = self;
  CGFloat v23 = (unsigned __int16 *)v17;
  BOOL v75 = a10;
  uint64_t v70 = v23;
  unint64_t v73 = a11;
  id v24 = v20;
  id v71 = v24;
  id v25 = v21;
  id v72 = v25;
  uint64_t v74 = v22;
  int v26 = [v19 _isInLayoutTransition];
  char v27 = [v19 _disablesDoubleSidedAnimations];
  if (!v26
    || (v27 & 1) != 0
    || -[UICollectionViewLayoutAttributes _isEquivalentTo:]((uint64_t)v23, (uint64_t)v18))
  {
    uint64_t v29 = v58;
    id v28 = v59;
    v67((uint64_t)v66, v58, v59, v18, 0, 1);
    uint64_t v30 = (_WORD *)objc_claimAutoreleasedReturnValue();
    uint64_t v31 = [MEMORY[0x1E4F1C978] arrayWithObject:v30];
    goto LABEL_42;
  }
  if (v23)
  {
    unsigned int v32 = v23[144];
    if (v32)
    {
      double v38 = [v23 indexPath];
      uint64_t v30 = [v19 finalLayoutAttributesForDisappearingItemAtIndexPath:v38];

      double v34 = [v18 indexPath];
      id v37 = v59;
      uint64_t v57 = [v59 initialLayoutAttributesForAppearingItemAtIndexPath:v34];
      goto LABEL_17;
    }
    int v33 = (v32 >> 1) & 1;
  }
  else
  {
    int v33 = 0;
  }
  id v54 = v24;
  double v34 = -[UIBarButtonItemGroup _items]((id *)v23);
  CGFloat v35 = [v23 indexPath];
  if (v33)
  {
    uint64_t v30 = [v19 finalLayoutAttributesForDisappearingDecorationElementOfKind:v34 atIndexPath:v35];

    double v36 = [v18 indexPath];
    id v37 = v59;
    uint64_t v57 = [v59 initialLayoutAttributesForAppearingDecorationElementOfKind:v34 atIndexPath:v36];
  }
  else
  {
    uint64_t v30 = [v19 finalLayoutAttributesForDisappearingSupplementaryElementOfKind:v34 atIndexPath:v35];

    CGFloat v39 = [v18 indexPath];
    uint64_t v57 = [v59 initialLayoutAttributesForAppearingSupplementaryElementOfKind:v34 atIndexPath:v39];

    id v37 = v59;
  }
  id v24 = v54;
LABEL_17:

  uint64_t v29 = v58;
  if (!v30)
  {
    if (v18 && -[UICollectionViewLayoutAttributes _isEquivalentTo:]((uint64_t)v57, (uint64_t)v23))
    {
      uint64_t v30 = v18;
    }
    else
    {
      uint64_t v30 = (_WORD *)[v23 copy];
      [v30 setAlpha:0.0];
    }
  }
  if (!v57)
  {
    if (v23 && -[UICollectionViewLayoutAttributes _isEquivalentTo:]((uint64_t)v30, (uint64_t)v18))
    {
      uint64_t v57 = v23;
    }
    else
    {
      uint64_t v57 = (unsigned __int16 *)[v18 copy];
      [v57 setAlpha:0.0];
    }
  }
  if (-[UICollectionViewLayoutAttributes _isEquivalentTo:]((uint64_t)v30, (uint64_t)v18)
    && -[UICollectionViewLayoutAttributes _isEquivalentTo:]((uint64_t)v57, (uint64_t)v23))
  {
    double v40 = v67;
    id v41 = v58;
    id v42 = v37;
    goto LABEL_38;
  }
  unsigned int v43 = -[UICollectionViewLayoutAttributes _isTransitionVisibleTo:](v23, v30);
  unsigned int v44 = -[UICollectionViewLayoutAttributes _isTransitionVisibleTo:](v57, v18);
  if (!v43 || !v44)
  {
    if (v43)
    {
      CGFloat v49 = [v18 indexPath];
      [v30 setIndexPath:v49];

      v67((uint64_t)v66, v58, v19, v30, 0, 1);
      BOOL v52 = LABEL_39:;
      uint64_t v31 = [MEMORY[0x1E4F1C978] arrayWithObject:v52];

      goto LABEL_40;
    }
    if (v44)
    {
      v60[0] = MEMORY[0x1E4F143A8];
      v60[1] = 3221225472;
      v60[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_8;
      v60[3] = &unk_1E52DCB30;
      v60[4] = self;
      id v61 = v57;
      id v50 = v58;
      id v62 = v50;
      +[UIView performWithoutAnimation:v60];
      id v51 = v67((uint64_t)v66, v50, v59, v18, 0, 1);
      uint64_t v31 = [MEMORY[0x1E4F1C978] arrayWithObject:v51];

LABEL_40:
      CGFloat v48 = v57;
      goto LABEL_41;
    }
    double v40 = v67;
    id v41 = v58;
    id v42 = v59;
LABEL_38:
    v40((uint64_t)v66, v41, v42, v18, 0, 1);
    goto LABEL_39;
  }
  CGFloat v45 = [v18 indexPath];
  [v30 setIndexPath:v45];

  uint64_t v56 = v67((uint64_t)v66, v58, v19, v30, !v55, 0);
  v63[0] = MEMORY[0x1E4F143A8];
  v63[1] = 3221225472;
  v63[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_7;
  v63[3] = &unk_1E52DCB30;
  v63[4] = self;
  long long v64 = v57;
  id v46 = v58;
  id v65 = v46;
  +[UIView performWithoutAnimation:v63];
  CGFloat v47 = v67((uint64_t)v66, v46, v59, v18, 0, 0);
  uint64_t v31 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", v56, v47, 0);

  CGFloat v48 = v57;
  uint64_t v29 = v58;
LABEL_41:

  id v28 = v59;
LABEL_42:

  return v31;
}

- (BOOL)_isReordering
{
  if (self)
  {
    dragAndDropController = self->_dragAndDropController;
    if (dragAndDropController) {
      LOBYTE(self) = [(NSMutableArray *)dragAndDropController->__reorderedItems count] != 0;
    }
    else {
      LOBYTE(self) = 0;
    }
  }
  return (char)self;
}

UICollectionViewAnimation *__198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke(uint64_t a1, void *a2, void *a3, void *a4, int a5, uint64_t a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  if (a5)
  {
    *(void *)(*(void *)(a1 + 32) + 2640) |= 0x40000000uLL;
    long long v14 = [_UICollectionSnapshotView alloc];
    [*(id *)(a1 + 40) frame];
    long long v15 = -[UICollectionReusableView initWithFrame:](v14, "initWithFrame:");
    v15->_snapshottedViewDisablesRasterizationInAnimations = [v11 _disableRasterizeInAnimations];
    [(UIView *)v15 setAutoresizingMask:0];
    [(UICollectionReusableView *)v15 setTranslatesAutoresizingMaskIntoConstraints:1];
    [(UIView *)v15 _setHostsLayoutEngine:1];
    [(UICollectionReusableView *)v15 _markAsDequeued];
    double v16 = [v11 snapshotViewAfterScreenUpdates:0];
    [(UIView *)v15 bounds];
    objc_msgSend(v16, "setBounds:");
    [v16 setAutoresizingMask:18];
    [(UIView *)v15 addSubview:v16];
    *(void *)(*(void *)(a1 + 32) + 2640) &= ~0x40000000uLL;
    if ([v11 isHidden]) {
      [(UIView *)v15 setHidden:1];
    }
    v44[0] = MEMORY[0x1E4F143A8];
    v44[1] = 3221225472;
    v44[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_2;
    v44[3] = &unk_1E52DCB30;
    v44[4] = *(void *)(a1 + 32);
    id v17 = v15;
    CGFloat v45 = v17;
    id v46 = v11;
    +[UIView performWithoutAnimation:v44];
    v40[0] = MEMORY[0x1E4F143A8];
    v40[1] = 3221225472;
    v40[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_3;
    v40[3] = &unk_1E52DCB30;
    double v18 = v17;
    id v41 = v18;
    id v19 = *(id *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 32);
    id v42 = v19;
    uint64_t v43 = v20;
    +[UIView performWithoutAnimation:v40];
    if (*(unsigned char *)(a1 + 80))
    {
      id v21 = [v12 _animationForReusableView:v18 toLayoutAttributes:v13 type:*(void *)(a1 + 64)];
    }
    else
    {
      id v21 = 0;
    }
    uint64_t v22 = [[UICollectionViewAnimation alloc] initWithView:v18 viewType:0 finalLayoutAttributes:v13 startFraction:0 endFraction:0 animateFromCurrentPostion:v21 deleteAfterAnimation:0.0 customAnimations:1.0];
    [(UICollectionViewAnimation *)v22 addStartupHandler:*(void *)(a1 + 48)];
    v37[0] = MEMORY[0x1E4F143A8];
    v37[1] = 3221225472;
    v37[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_4;
    v37[3] = &unk_1E52E45A0;
    double v38 = v18;
    id v39 = *(id *)(a1 + 56);
    CGFloat v23 = v18;
    [(UICollectionViewAnimation *)v22 addCompletionHandler:v37];
  }
  else
  {
    if (*(unsigned char *)(a1 + 80))
    {
      double v16 = [v12 _animationForReusableView:v11 toLayoutAttributes:v13 type:*(void *)(a1 + 64)];
    }
    else
    {
      double v16 = 0;
    }
    if ([*(id *)(a1 + 32) _viewIsReorderedCell:v11])
    {
      [v11 bounds];
      double v25 = v24;
      double v27 = v26;
      [v13 size];
      BOOL v29 = v25 != v28;
      if (v27 != v30) {
        BOOL v29 = 1;
      }
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_5;
      aBlock[3] = &unk_1E52E54E8;
      BOOL v36 = v29;
      id v34 = v11;
      id v35 = v13;
      uint64_t v31 = _Block_copy(aBlock);

      double v16 = v31;
    }
    uint64_t v22 = [[UICollectionViewAnimation alloc] initWithView:v11 viewType:*(void *)(a1 + 72) finalLayoutAttributes:v13 startFraction:a6 endFraction:0 animateFromCurrentPostion:v16 deleteAfterAnimation:0.0 customAnimations:1.0];
    [(UICollectionViewAnimation *)v22 addStartupHandler:*(void *)(a1 + 48)];
    [(UICollectionViewAnimation *)v22 addCompletionHandler:*(void *)(a1 + 56)];
  }

  return v22;
}

- (BOOL)_viewIsReorderedCell:(id)a3
{
  id v3 = [(UICollectionView *)self _reorderedItemForView:a3];
  BOOL v4 = v3 != 0;

  return v4;
}

- (id)_reorderedItemForView:(id)a3
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v5 = [(UICollectionView *)self _reorderedItems];
    id v6 = (id)[v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v13;
      while (2)
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v5);
          }
          uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          id v10 = [v9 cell];

          if (v10 == v4)
          {
            id v6 = v9;
            goto LABEL_13;
          }
        }
        id v6 = (id)[v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

- (id)_attributesForItemsVisibleDuringCurrentUpdateWithOldVisibleViews:(id)a3 attributesForNewModel:(id)a4
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  subviewManager = self->_subviewManager;
  v28[0] = MEMORY[0x1E4F143A8];
  v28[1] = 3221225472;
  v28[2] = __107__UICollectionView__attributesForItemsVisibleDuringCurrentUpdateWithOldVisibleViews_attributesForNewModel___block_invoke;
  v28[3] = &unk_1E52E5980;
  id v22 = v6;
  id v29 = v22;
  double v30 = self;
  id v23 = v8;
  id v31 = v23;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v28);
  }
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v10 = v7;
  uint64_t v11 = [v10 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        if (*(void *)v25 != v13) {
          objc_enumerationMutation(v10);
        }
        long long v15 = *(_WORD **)(*((void *)&v24 + 1) + 8 * i);
        id v16 = (id)objc_msgSend(v15, "indexPath", v22);
        if (v15)
        {
          if (v15[144])
          {
            id v17 = v16;
            uint64_t v18 = -[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:]((uint64_t)self->_currentUpdate->_newModel, v16);
            if (v18 != 0x7FFFFFFFFFFFFFFFLL
              && [(UICollectionViewUpdate *)self->_currentUpdate initialGlobalIndexForFinalGlobalIndex:v18] != 0x7FFFFFFFFFFFFFFFLL)
            {
              [v23 setObject:v15 forKeyedSubscript:v17];
            }
          }
        }
      }
      uint64_t v12 = [v10 countByEnumeratingWithState:&v24 objects:v32 count:16];
    }
    while (v12);
  }

  id v19 = v31;
  id v20 = v23;

  return v20;
}

void __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) _incrementUpdateAnimationCountWithContext:*(void *)(a1 + 40)];
  char v2 = -[_UICollectionViewSubviewManager allVisibleViewsHashTable](*(id ***)(*(void *)(a1 + 32) + 2896));
  -[_UICollectionViewSubviewManager removeAllVisibleViews](*(void *)(*(void *)(a1 + 32) + 2896));
  [*(id *)(a1 + 32) _startViewAnimationsWithContext:*(void *)(a1 + 40) oldVisibleViews:v2 viewAnimator:*(void *)(a1 + 48) viewAnimationsCompletedDispatchGroup:*(void *)(a1 + 56)];
  -[_UICollectionViewOrthogonalScrollerSectionController layoutScrollViews](*(void *)(*(void *)(a1 + 32) + 2864));
  [*(id *)(a1 + 32) _layoutSectionContainerViews];
  if (*(unsigned char *)(a1 + 64)
    || ([*(id *)(a1 + 32) isScrollAnimating] & 1) == 0
    && ([*(id *)(a1 + 32) isDragging] & 1) == 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 2192);
    double v5 = *(double *)(v4 + 48);
    double v6 = *(double *)(v4 + 56);
    int v7 = *(unsigned __int16 *)(v3 + 2648) | (*(unsigned __int8 *)(v3 + 2650) << 16);
    *(_WORD *)(v3 + 2648) = *(_WORD *)(v3 + 2648);
    *(unsigned char *)(v3 + 2650) = (v7 | 0x20000u) >> 16;
    objc_msgSend((id)v3, "setContentOffset:", v5, v6);
    int v8 = *(unsigned __int16 *)(v3 + 2648);
    unsigned int v9 = (v8 | (*(unsigned __int8 *)(v3 + 2650) << 16)) & 0xFFFDFFFF;
    *(_WORD *)(v3 + 2648) = v8;
    *(unsigned char *)(v3 + 2650) = (v9 | v7 & 0x20000) >> 16;
    if ([*(id *)(a1 + 32) isDecelerating])
    {
      unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_UIInternalPreference_CollectionViewShouldComputeVisibleBoundsForCurrentUpdateAfterPreparingLayout_block_invoke_11___s_category);
      if (*(unsigned char *)CategoryCachedImpl)
      {
        uint64_t v13 = *(NSObject **)(CategoryCachedImpl + 8);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          long long v14 = *(void **)(a1 + 32);
          long long v15 = v13;
          [v14 contentOffset];
          id v16 = NSStringFromCGPoint(v22);
          int v17 = 134218242;
          uint64_t v18 = v14;
          __int16 v19 = 2112;
          id v20 = v16;
          _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_ERROR, "_updateWithItems: cv == %p updating decel last offset to %@", (uint8_t *)&v17, 0x16u);
        }
      }
      uint64_t v11 = *(void **)(a1 + 32);
      [v11 contentOffset];
      objc_msgSend(v11, "_updateDecelerationLastOffset:");
    }
  }
  -[UICollectionView _resumeDidScrollNotifications](*(CGFloat **)(a1 + 32));
  -[UICollectionViewData finalizeCollectionViewUpdates](*(void *)(*(void *)(a1 + 32) + 2184));
  [*(id *)(*(void *)(a1 + 32) + 2064) _finalizeCollectionViewUpdate:*(void *)(*(void *)(a1 + 32) + 2192)];
  if (_UIBarsApplyChromelessEverywhere())
  {
    uint64_t v12 = *(id **)(a1 + 32);
    [v12[258] collectionViewContentSize];
    objc_msgSend(v12, "_setContentSizeFromLayout:isRecursivelyUpdatingVisibleCells:", 0);
  }
}

- (void)_setContentSizeFromLayout:(CGSize)a3 isRecursivelyUpdatingVisibleCells:(BOOL)a4
{
  BOOL v4 = a4;
  double height = a3.height;
  double width = a3.width;
  if ([(UIScrollView *)self isScrollAnimating]
    || [(UIScrollView *)self isDecelerating]
    || [(UIScrollView *)self isDragging])
  {
    int v8 = self;
    double v9 = width;
    double v10 = height;
    uint64_t v11 = 1;
  }
  else
  {
    if (v4)
    {
      [(UIView *)self safeAreaInsets];
      if (v15 != 0.0 || v12 != 0.0 || v14 != 0.0 || v13 != 0.0)
      {
        unint64_t v16 = [(UIScrollView *)self _edgesApplyingSafeAreaInsetsToContentInset];
        if (v16 != -[UIScrollView _edgesApplyingSafeAreaInsetsToContentInsetForContentSize:](self, "_edgesApplyingSafeAreaInsetsToContentInsetForContentSize:", width, height))
        {
          -[UICollectionView _setContentSize:skipContentOffsetAdjustment:](self, "_setContentSize:skipContentOffsetAdjustment:", 1, width, height);
          unsigned int v17 = (*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                           + 18) << 16)) & 0xFFF7FFFF;
          *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
          *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v17);
          return;
        }
      }
    }
    uint64_t v11 = [(UIScrollView *)self _isAutomaticContentOffsetAdjustmentEnabled] ^ 1;
    int v8 = self;
    double v9 = width;
    double v10 = height;
  }
  -[UICollectionView _setContentSize:skipContentOffsetAdjustment:](v8, "_setContentSize:skipContentOffsetAdjustment:", v11, v9, v10);
}

- (void)_layoutSectionContainerViews
{
  sectionToContainerViewMap = self->_sectionToContainerViewMap;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __48__UICollectionView__layoutSectionContainerViews__block_invoke;
  v3[3] = &unk_1E52E50C0;
  v3[4] = self;
  [(NSMutableDictionary *)sectionToContainerViewMap enumerateKeysAndObjectsUsingBlock:v3];
}

- (_UICollectionViewVisibleCellsUpdateResult)_createVisibleViewsForSingleCategoryAttributes:(SEL)a3 limitCreation:(id)a4 fadeForBoundsChange:(BOOL)a5
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  id v10 = a4;
  *(_OWORD *)&retstr->unint64_t var0 = 0u;
  *(_OWORD *)&retstr->var2 = 0u;
  unint64_t v11 = (unint64_t)[v10 count] >> 1;
  if (v11 >= 5) {
    unint64_t v11 = 5;
  }
  if (v11 <= 1) {
    unint64_t v11 = 1;
  }
  unint64_t v45 = v11;
  double v12 = self->_subviewManager;
  if ([v10 count])
  {
    uint64_t v43 = retstr;
    id v46 = v12;
    BOOL v44 = v7;
    do
    {
      if (v7 && retstr->var0 >= v45)
      {
        retstr->var3 = 1;
        break;
      }
      uint64_t v13 = [v10 objectAtIndexedSubscript:0];
      [v10 removeObjectAtIndex:0];
      double v14 = -[UICollectionViewLayoutAttributes __indexPath]((void *)v13);
      if (v13)
      {
        int v15 = *(_WORD *)(v13 + 288) & 1;
        if (!v6) {
          goto LABEL_13;
        }
      }
      else
      {
        int v15 = 0;
        if (!v6)
        {
LABEL_13:
          int v16 = [(id)v13 isHidden] ^ 1;
          goto LABEL_14;
        }
      }
      int v16 = 1;
LABEL_14:
      id v50 = v14;
      int v49 = v15;
      if ((v16 & v15) != 1 || ![(UICollectionView *)self _prefetchingAllowed])
      {
        id v19 = 0;
        int v20 = 0;
        if (v13) {
          goto LABEL_20;
        }
        goto LABEL_61;
      }
      unsigned int v17 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v14];
      if (!v17)
      {
        id v19 = 0;
        int v20 = 0;
        goto LABEL_60;
      }
      BOOL v47 = [(UICollectionView *)self _useIdleObserverForCellPrefetching];
      if (v47)
      {
        int v18 = [(UICollectionView *)self _updatePrefetchItemIfNeeded:v17 forIndexPath:v14 withLayoutAttributes:0 willDisplay:1];
      }
      else
      {
        id v28 = v17[2];
        int v18 = [v28 isEqual:v13];
      }
      id v29 = v17[3];
      [(NSMutableDictionary *)self->_prefetchCacheItems removeObjectForKey:v14];
      if (v18)
      {
        id v19 = v29;
        if (v19)
        {
          id v42 = v10;
          unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &_createVisibleViewsForSingleCategoryAttributes_limitCreation_fadeForBoundsChange____s_category);
          id v31 = *(id *)(CategoryCachedImpl + 8);
          unsigned int v32 = *(NSObject **)(CategoryCachedImpl + 8);
          uint64_t v33 = v31;
          BOOL v7 = v44;
          if (os_signpost_id_make_with_pointer(v32, self) - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v33))
          {
            BOOL v7 = v44;
            [v50 section];
            [v50 item];
            _os_signpost_emit_unreliably_with_name_impl();
          }

          if ([v19 _isHiddenForReuse]) {
            [v19 _setHiddenForReuse:0];
          }
          id v10 = v42;
          if (!v47) {
            [(UICollectionView *)self _configureCachedCellForDisplay:v19 withIndexPath:v50 layoutAttributesToUpdate:0];
          }
          [(UICollectionView *)self _notifyWillDisplayCellIfNeeded:v19 forIndexPath:v50];
          int v20 = 1;
          goto LABEL_59;
        }
      }
      else
      {
        if (v29) {
          [(UICollectionView *)self _reusePrefetchedCell:v29];
        }
        id v19 = 0;
      }
      int v20 = 0;
      BOOL v7 = v44;
LABEL_59:

      double v12 = v46;
LABEL_60:

      retstr = v43;
      if (v13)
      {
LABEL_20:
        uint64_t v21 = *(void *)(v13 + 8);
        goto LABEL_21;
      }
LABEL_61:
      uint64_t v21 = 0;
LABEL_21:
      uint64_t v48 = v21;
      if (v6)
      {
        if (v49)
        {
          CGPoint v22 = [(UICollectionViewLayout *)self->_layout initialLayoutAttributesForAppearingItemAtIndexPath:v50];
          if (!v22)
          {
LABEL_38:
            CGPoint v22 = (void *)[(id)v13 copy];
            [v22 setAlpha:0.0];
          }
LABEL_39:
          if (![v22 isHidden] || (objc_msgSend((id)v13, "isHidden") & 1) == 0)
          {
            if (!v19)
            {
              if (v49) {
                id v27 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v50 withLayoutAttributes:v22 applyAttributes:1];
              }
              else {
                id v27 = [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v48 atIndexPath:v50 layout:self->_layout withLayoutAttributes:v22 applyAttributes:1];
              }
              id v19 = v27;
            }
            [(UICollectionView *)self _animateVisibleView:v19 withLayoutAttributes:v13 completionHandler:0];
          }

          double v12 = v46;
          goto LABEL_66;
        }
        if (v13)
        {
          layout = self->_layout;
          if ((*(_WORD *)(v13 + 288) & 3) != 0) {
            goto LABEL_34;
          }
          uint64_t v26 = -[UICollectionViewLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:](layout, "initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:");
        }
        else
        {
          layout = self->_layout;
LABEL_34:
          uint64_t v26 = -[UICollectionViewLayout initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:](layout, "initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:");
        }
        CGPoint v22 = (void *)v26;
        if (!v26) {
          goto LABEL_38;
        }
        goto LABEL_39;
      }
      if (v19) {
        int v23 = 0;
      }
      else {
        int v23 = v16;
      }
      if (v23 == 1)
      {
        if ([(UICollectionView *)self _isReorderingItemAtIndexPath:v50 includingDragAndDrop:0])
        {
          goto LABEL_84;
        }
        id v24 = (v49 & 1) != 0
            ? [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v50 withLayoutAttributes:v13 applyAttributes:1]: [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v48 atIndexPath:v50 layout:self->_layout withLayoutAttributes:v13 applyAttributes:1];
        id v19 = v24;
        if (!v24) {
          goto LABEL_84;
        }
LABEL_67:
        if (v20)
        {
          ++retstr->var2;
          if ((v49 & 1) == 0) {
            goto LABEL_69;
          }
LABEL_78:
          -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:]((uint64_t)v12, (uint64_t)v19, (uint64_t)v50);
          if (!v12)
          {
LABEL_83:

            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v34 = -[_UICollectionViewPrefetchingContext peekNextItem]((id *)&self->_mainPrefetchingContext->super.isa);
          id v35 = (void *)v34;
          if (!v34) {
            goto LABEL_76;
          }
          id v36 = v10;
          id v37 = *(id *)(v34 + 16);
          double v38 = [v37 indexPath];
          int v39 = [v38 isEqual:v50];

          id v10 = v36;
          retstr = v43;
          if (v39) {
            id v40 = -[_UICollectionViewPrefetchingContext popNextItem]((uint64_t)self->_mainPrefetchingContext);
          }
          else {
LABEL_76:
          }
            ++retstr->var1;
          ++retstr->var0;

          BOOL v7 = v44;
          double v12 = v46;
          if (v49) {
            goto LABEL_78;
          }
LABEL_69:
          if (v13 && (*(_WORD *)(v13 + 288) & 3) == 0)
          {
            if (!v12) {
              goto LABEL_83;
            }
            -[_UICollectionViewSubviewCollection setView:forSupplementaryOfKind:atIndexPath:]((uint64_t)v12->_visibleViews, (uint64_t)v19, v48, (uint64_t)v50);
          }
          else
          {
            if (!v12) {
              goto LABEL_83;
            }
            -[_UICollectionViewSubviewCollection setView:forDecorationOfKind:atIndexPath:]((uint64_t)v12->_visibleViews, (uint64_t)v19, v48, (uint64_t)v50);
          }
        }
        [(NSHashTable *)v12->_viewsPreparingForDisplay addObject:v19];
        goto LABEL_83;
      }
LABEL_66:
      if (v19) {
        goto LABEL_67;
      }
LABEL_84:
    }
    while ([v10 count]);
  }

  return result;
}

- (void)_subviewManagerDidUpdateVisibleCells
{
}

- (BOOL)_prefetchingAllowed
{
  if (_UIInternalPreferenceUsesDefault((int *)&_UIInternalPreference_CollectionViewCellPrefetchingMode, @"CollectionViewCellPrefetchingMode", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateInteger))uint64_t v3 = 0; {
  else
  }
    uint64_t v3 = qword_1EB256F00;
  if (v3 == -2) {
    return 0;
  }
  if (v3 != 1 && (*((void *)&self->_collectionViewFlags + 1) & 0x4000000000000000) == 0) {
    return 0;
  }
  dragAndDropController = self->_dragAndDropController;
  if (dragAndDropController)
  {
    if ([(NSMutableArray *)dragAndDropController->__reorderedItems count]) {
      return 0;
    }
  }
  if ([(UICollectionView *)self hasActiveDrop]) {
    return 0;
  }
  if (v3 == 1) {
    return 1;
  }
  BOOL v7 = [(UICollectionViewLayout *)self->_layout _estimatesSizes];
  int v8 = dyld_program_sdk_at_least();
  if (v8 && v7) {
    LOBYTE(v8) = [(UICollectionViewLayout *)self->_layout _supportsPrefetchingWithEstimatedSizes];
  }
  if (v3 != -1 && (v8 & 1) != 0) {
    return 1;
  }
  return dyld_program_sdk_at_least() & !v7;
}

- (id)_createPreparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5
{
  return [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:a3 withLayoutAttributes:a4 applyAttributes:a5 isFocused:0 notify:1];
}

- (id)_createPreparedSupplementaryViewForElementOfKind:(id)a3 atIndexPath:(id)a4 layout:(id)a5 withLayoutAttributes:(id)a6 applyAttributes:(BOOL)a7
{
  BOOL v67 = a7;
  uint64_t v96 = *MEMORY[0x1E4F143B8];
  id v11 = a3;
  id v69 = a5;
  double v12 = (id *)a6;
  context = (void *)MEMORY[0x18C108260]();
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

  if (!WeakRetained)
  {
    uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
    [v43 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:3933 description:@"UICollectionView dataSource is not set"];
  }
  if ((*(void *)&self->_collectionViewFlags & 0x80000000000000) == 0 && (!v12 || ((_WORD)v12[36] & 2) == 0))
  {
    double v14 = 0;
    goto LABEL_51;
  }
  firstResponderIndexPath = self->_firstResponderIndexPath;
  if (firstResponderIndexPath
    && self->_firstResponderViewType == 2
    && [(NSIndexPath *)firstResponderIndexPath isEqual:a4]
    && [(NSString *)self->_firstResponderViewKind isEqual:v11])
  {
    double v14 = self->_firstResponderView;
    goto LABEL_51;
  }
  id v65 = (void *)_UISetCurrentFallbackEnvironment(self);
  int v16 = self->_subviewManager;
  char v17 = *((unsigned char *)&self->_collectionViewFlags + 18);
  __int16 v66 = *((_WORD *)&self->_collectionViewFlags + 8);
  *((_WORD *)&self->_collectionViewFlags + 8) = v66 | 1;
  *((unsigned char *)&self->_collectionViewFlags + 18) = v17;
  uint64_t v80 = 0;
  double v81 = &v80;
  uint64_t v82 = 0x3032000000;
  __int16 v83 = __Block_byref_object_copy__41;
  uint64_t v84 = __Block_byref_object_dispose__41;
  id v85 = 0;
  if (!v12 || ((_WORD)v12[36] & 2) == 0)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258948);
    id v19 = *(id *)(CategoryCachedImpl + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v19))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_unreliably_with_name_impl();
    }

    v76[0] = MEMORY[0x1E4F143A8];
    v76[1] = 3221225472;
    v76[2] = __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke;
    v76[3] = &unk_1E52E51A8;
    double v78 = &v80;
    void v76[4] = self;
    id v20 = v11;
    id v77 = v20;
    id v79 = a4;
    +[UIView performWithoutAnimation:v76];
    unint64_t v21 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258950);
    CGPoint v22 = *(id *)(v21 + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(v21 + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v22))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_unreliably_with_name_impl();
    }

    int v23 = (void *)v81[5];
    if (!v23)
    {
      BOOL v44 = [MEMORY[0x1E4F28B00] currentHandler];
      unint64_t v45 = objc_msgSend(a4, "_ui_shortDescription");
      objc_msgSend(v44, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3964, @"The collection view's data source returned nil when asked to provide a supplementary view. Collection view: %@; element kind: %@; index path: %@",
        self,
        v20,
        v45);

      int v23 = (void *)v81[5];
    }
    if (([v23 _wasDequeued] & 1) == 0)
    {
      id v46 = [MEMORY[0x1E4F28B00] currentHandler];
      BOOL v47 = objc_msgSend(a4, "_ui_shortDescription");
      objc_msgSend(v46, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3965, @"The collection view's data source returned a supplementary view that was not dequeued from the collection view using a supplementary registration or reuse identifier. Supplementary views must be retrieved by calling dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath: or -dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:. Collection view: %@; element kind: %@; index path: %@; supplementary view: %@",
        self,
        v20,
        v47,
        v81[5]);
    }
    id v24 = [(id)v81[5] superview];
    if (!v24)
    {
      if (!dyld_program_sdk_at_least()) {
        goto LABEL_30;
      }
      id v24 = [MEMORY[0x1E4F28B00] currentHandler];
      id v54 = objc_msgSend(a4, "_ui_shortDescription");
      objc_msgSend(v24, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3966, @"The collection view's data source returned a supplementary view that is not in the view hierarchy. Supplementary views must be retrieved by calling dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath: or -dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; supplementary view: %@",
        self,
        v54,
        v81[5]);
    }
LABEL_30:
    unsigned int v32 = [(id)v81[5] _elementKind];
    char v33 = [v32 isEqualToString:v20];

    if ((v33 & 1) == 0)
    {
      if (dyld_program_sdk_at_least() && (_UIIsPrivateMainBundle() & 1) == 0)
      {
        os_log_t log = [MEMORY[0x1E4F28B00] currentHandler];
        BOOL v55 = [(id)v81[5] _elementKind];
        uint64_t v56 = objc_msgSend(a4, "_ui_shortDescription");
        -[NSObject handleFailureInMethod:object:file:lineNumber:description:](log, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3967, @"The collection view's data source returned a supplementary view with an unexpected element kind. Collection view: %@; requested element kind: %@; supplementary view element kind: %@; index path: %@; supplementary view: %@",
          self,
          v20,
          v55,
          v56,
          v81[5]);
      }
      else if (dyld_program_sdk_at_least() && _UIIsPrivateMainBundle())
      {
        if (os_variant_has_internal_diagnostics())
        {
          __UIFaultDebugAssertLog();
          os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(log, OS_LOG_TYPE_FAULT))
          {
            id v60 = [(id)v81[5] _elementKind];
            id v61 = objc_msgSend(a4, "_ui_shortDescription");
            uint64_t v62 = v81[5];
            *(_DWORD *)buf = 138413314;
            BOOL v87 = self;
            __int16 v88 = 2112;
            id v89 = v20;
            __int16 v90 = 2112;
            id v91 = v60;
            __int16 v92 = 2112;
            uint64_t v93 = v61;
            __int16 v94 = 2112;
            uint64_t v95 = v62;
            _os_log_fault_impl(&dword_1853B0000, log, OS_LOG_TYPE_FAULT, "The collection view's data source returned a supplementary view with an unexpected element kind. Collection view: %@; requested element kind: %@; supplementary view element kind: %@; index path: %@; supplementary"
              " view: %@ This is a hard assert for other clients and requires immediate attention.",
              buf,
              0x34u);
          }
        }
        else
        {
          os_log_t log = (os_log_t)*(id *)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258958) + 8);
          if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
          {
            uint64_t v48 = [(id)v81[5] _elementKind];
            int v49 = objc_msgSend(a4, "_ui_shortDescription");
            uint64_t v50 = v81[5];
            *(_DWORD *)buf = 138413314;
            BOOL v87 = self;
            __int16 v88 = 2112;
            id v89 = v20;
            __int16 v90 = 2112;
            id v91 = v48;
            __int16 v92 = 2112;
            uint64_t v93 = v49;
            __int16 v94 = 2112;
            uint64_t v95 = v50;
            _os_log_impl(&dword_1853B0000, log, OS_LOG_TYPE_ERROR, "The collection view's data source returned a supplementary view with an unexpected element kind. Collection view: %@; requested element kind: %@; supplementary view element kind: %@; index path: %@; supplementary"
              " view: %@ This is a hard assert for other clients and requires immediate attention.",
              buf,
              0x34u);
          }
        }
      }
      else if (os_variant_has_internal_diagnostics())
      {
        __UIFaultDebugAssertLog();
        os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(log, OS_LOG_TYPE_FAULT))
        {
          uint64_t v57 = [(id)v81[5] _elementKind];
          id v58 = objc_msgSend(a4, "_ui_shortDescription");
          uint64_t v59 = v81[5];
          *(_DWORD *)buf = 138413314;
          BOOL v87 = self;
          __int16 v88 = 2112;
          id v89 = v20;
          __int16 v90 = 2112;
          id v91 = v57;
          __int16 v92 = 2112;
          uint64_t v93 = v58;
          __int16 v94 = 2112;
          uint64_t v95 = v59;
          _os_log_fault_impl(&dword_1853B0000, log, OS_LOG_TYPE_FAULT, "The collection view's data source returned a supplementary view with an unexpected element kind. Collection view: %@; requested element kind: %@; supplementary view element kind: %@; index path: %@; supplementary vie"
            "w: %@ This will become an assert in a future version.",
            buf,
            0x34u);
        }
      }
      else
      {
        os_log_t log = (os_log_t)*(id *)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258960) + 8);
        if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
        {
          id v51 = [(id)v81[5] _elementKind];
          BOOL v52 = objc_msgSend(a4, "_ui_shortDescription");
          uint64_t v53 = v81[5];
          *(_DWORD *)buf = 138413314;
          BOOL v87 = self;
          __int16 v88 = 2112;
          id v89 = v20;
          __int16 v90 = 2112;
          id v91 = v51;
          __int16 v92 = 2112;
          uint64_t v93 = v52;
          __int16 v94 = 2112;
          uint64_t v95 = v53;
          _os_log_impl(&dword_1853B0000, log, OS_LOG_TYPE_ERROR, "The collection view's data source returned a supplementary view with an unexpected element kind. Collection view: %@; requested element kind: %@; supplementary view element kind: %@; index path: %@; supplementary vie"
            "w: %@ This will become an assert in a future version.",
            buf,
            0x34u);
        }
      }
    }
    if (-[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)v16, (void *)v81[5]))
    {
      if (dyld_program_sdk_at_least())
      {
        uint64_t v34 = [MEMORY[0x1E4F28B00] currentHandler];
        id v35 = objc_msgSend(a4, "_ui_shortDescription");
        -[NSObject handleFailureInMethod:object:file:lineNumber:description:](v34, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3971, @"The collection view's data source returned a supplementary view that is in the reuse queue. Supplementary views must be retrieved by calling dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath: or -dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:. Collection view: %@; element kind: %@; index path: %@; supplementary view: %@",
          self,
          v20,
          v35,
          v81[5]);
      }
      else
      {
        uint64_t v34 = *(id *)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258968) + 8);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        {
          id v36 = objc_msgSend(a4, "_ui_shortDescription");
          id v37 = (void *)v81[5];
          *(_DWORD *)buf = 138413058;
          BOOL v87 = self;
          __int16 v88 = 2112;
          id v89 = v20;
          __int16 v90 = 2112;
          id v91 = v36;
          __int16 v92 = 2112;
          uint64_t v93 = v37;
          _os_log_impl(&dword_1853B0000, v34, OS_LOG_TYPE_ERROR, "The collection view's data source returned a supplementary view that is in the reuse queue. Supplementary views must be retrieved by calling dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath: or -dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:. Collection view: %@; element kin"
            "d: %@; index path: %@; supplementary view: %@",
            buf,
            0x2Au);
        }
      }

      -[_UICollectionViewSubviewManager ensureViewIsRemovedFromReuseQueue:]((uint64_t)v16, (void *)v81[5]);
      -[UICollectionView _prepareViewForReuse:]((uint64_t)self, (void *)v81[5]);
    }
    else if ([(id)v81[5] _isHiddenForReuse])
    {
      [(id)v81[5] _setHiddenForReuse:0];
    }

    uint64_t v29 = 1;
    goto LABEL_40;
  }
  long long v25 = -[UIBarButtonItemGroup _items](v12);
  uint64_t v26 = -[UIBarButtonItemGroup _items](v12);
  uint64_t v27 = [(UICollectionView *)self _dequeueReusableViewOfKind:v25 withIdentifier:v26 forIndexPath:a4 viewCategory:2];
  id v28 = (void *)v81[5];
  v81[5] = v27;

  if (!v81[5])
  {
    uint64_t v30 = [v69 _decorationViewForLayoutAttributes:v12];
    id v31 = (void *)v81[5];
    v81[5] = v30;

    [(id)v81[5] _willRevealWithLayoutAttributes:v12];
    uint64_t v29 = 2;
LABEL_41:
    -[UICollectionView _addControlledSubview:atZIndex:forced:initialAttributes:](self, "_addControlledSubview:atZIndex:forced:initialAttributes:", v81[5], [v12 zIndex], 0, v12);
    goto LABEL_42;
  }
  uint64_t v29 = 2;
LABEL_40:
  if ((dyld_program_sdk_at_least() & 1) == 0) {
    goto LABEL_41;
  }
LABEL_42:
  int v38 = dyld_program_sdk_at_least();
  char v39 = v38;
  if (v38) {
    [(UICollectionView *)self _configureSupplementaryViewForDisplay:v81[5] withElementKind:v11 indexPath:a4 elementCategory:v29];
  }
  v73[0] = MEMORY[0x1E4F143A8];
  v73[1] = 3221225472;
  v73[2] = __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke_436;
  v73[3] = &unk_1E52E5E48;
  void v73[4] = self;
  BOOL v75 = &v80;
  id v40 = v12;
  uint64_t v74 = v40;
  +[UIView performWithoutAnimation:v73];
  if (v67)
  {
    v70[0] = MEMORY[0x1E4F143A8];
    v70[1] = 3221225472;
    v70[2] = __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke_2;
    v70[3] = &unk_1E52E5180;
    v70[4] = self;
    id v71 = v40;
    id v72 = &v80;
    +[UIView performWithoutAnimation:v70];
  }
  if ((v39 & 1) == 0) {
    [(UICollectionView *)self _configureSupplementaryViewForDisplay:v81[5] withElementKind:v11 indexPath:a4 elementCategory:v29];
  }
  __int16 v41 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFFFE | v66 & 1;
  *((unsigned char *)&self->_collectionViewFlags + 18) = *((unsigned char *)&self->_collectionViewFlags + 18);
  *((_WORD *)&self->_collectionViewFlags + 8) = v41;
  if (v16) {
    [(NSHashTable *)v16->_dequeuedViews removeObject:v81[5]];
  }
  [(UICollectionView *)self _notifyWillDisplaySupplementaryView:v81[5] forElementKind:v11 atIndexPath:a4];
  _UIRestorePreviousFallbackEnvironment(v65);
  double v14 = (UICollectionReusableView *)(id)v81[5];

  _Block_object_dispose(&v80, 8);
LABEL_51:

  return v14;
}

- (UICollectionViewCell)dequeueReusableCellWithReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath
{
  BOOL v7 = identifier;
  if (![(NSString *)v7 length])
  {
    id v10 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v11 = *MEMORY[0x1E4F1C3C8];
    double v12 = NSStringFromSelector(a2);
    [v10 raise:v11, @"must pass a valid reuse identifier to -[UICollectionView %@]", v12 format];
  }
  int v8 = [(UICollectionView *)self _dequeueReusableViewOfKind:@"UICollectionElementKindCell" withIdentifier:v7 forIndexPath:indexPath viewCategory:0];

  return (UICollectionViewCell *)v8;
}

- (id)_dequeueReusableViewOfKind:(id)a3 withIdentifier:(id)a4 forIndexPath:(id)a5 viewCategory:(unint64_t)a6
{
  id v10 = a3;
  id v11 = a4;
  _UIQOSExpectComplexCommit("UICVDQ");
  uint64_t v73 = 0;
  uint64_t v74 = &v73;
  uint64_t v75 = 0x3032000000;
  id v76 = __Block_byref_object_copy__41;
  id v77 = __Block_byref_object_dispose__41;
  id v78 = 0;
  id v12 = a5;
  uint64_t v13 = 0;
  if ((*((_WORD *)&self->_collectionViewFlags + 8) & 2) != 0)
  {
LABEL_4:
    int v15 = v12;
    if (a6) {
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  transitionLayoutAttributes = self->_transitionLayoutAttributes;
  if (transitionLayoutAttributes)
  {
    uint64_t v13 = transitionLayoutAttributes;
    goto LABEL_4;
  }
  if (a6)
  {
    collectionViewData = self->_collectionViewData;
    if (a6 == 2) {
      -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:]((uint64_t)collectionViewData, (uint64_t)v11, v12);
    }
    else {
      -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:]((uint64_t)collectionViewData, (uint64_t)v10, v12);
    }
    uint64_t v13 = (UICollectionViewLayoutAttributes *)objc_claimAutoreleasedReturnValue();
    int v15 = v12;
LABEL_17:
    unint64_t v21 = self->_subviewManager;
    uint64_t v22 = -[_UICollectionViewSubviewManager dequeueReusableViewWithReuseIdentifier:elementKind:elementCategory:](v21, (uint64_t)v11, v10, a6);
    int v23 = (void *)v74[5];
    v74[5] = v22;

    id v24 = (void *)v74[5];
    if (v24)
    {
      if (v13)
      {
        [(id)v74[5] _willRevealWithLayoutAttributes:v13];
        id v24 = (void *)v74[5];
      }
      -[UICollectionView _prepareViewForReuse:]((uint64_t)self, v24);
LABEL_49:
      if ((*((_WORD *)&self->_collectionViewFlags + 8) & 2) == 0)
      {
        uint64_t v42 = v74[5];
        v66[0] = MEMORY[0x1E4F143A8];
        v66[1] = 3221225472;
        void v66[2] = __88__UICollectionView__dequeueReusableViewOfKind_withIdentifier_forIndexPath_viewCategory___block_invoke_2;
        v66[3] = &unk_1E52E5898;
        uint64_t v70 = v42;
        BOOL v67 = v13;
        id v68 = self;
        BOOL v71 = a6 == 0;
        id v69 = v15;
        +[UIView performWithoutAnimation:v66];
      }
      if (v21) {
        [(NSHashTable *)v21->_dequeuedViews addObject:v74[5]];
      }
      uint64_t v43 = (void *)v74[5];
      BOOL v44 = self->_layout;
      id v45 = v43;
      id v46 = v45;
      if (!v44 || !v45) {
        goto LABEL_60;
      }
      uint64_t v47 = [v45 effectiveUserInterfaceLayoutDirection];
      if (v47 == [(UICollectionViewLayout *)v44 developmentLayoutDirection])
      {
        if (![v46 _flipsHorizontalAxis])
        {
LABEL_60:

          id v19 = (UICollectionViewCell *)(id)v74[5];
          goto LABEL_61;
        }
        uint64_t v48 = 0;
      }
      else
      {
        uint64_t v48 = [(UICollectionViewLayout *)v44 _wantsRightToLeftHorizontalMirroringIfNeeded];
      }
      [v46 _setFlipsHorizontalAxis:v48];
      goto LABEL_60;
    }
    if (a6 == 2)
    {
      id v19 = 0;
LABEL_61:

      goto LABEL_62;
    }
    uint64_t v25 = 8;
    if (!a6) {
      uint64_t v25 = 7;
    }
    id v63 = objc_retain(*(id *)((char *)&self->super.super.super.super.isa
                            + OBJC_IVAR____UICollectionSnapshotView__snapshottedViewDisablesRasterizationInAnimations[v25]));
    if (a6)
    {
      id v26 = [(id)objc_opt_class() _reuseKeyForSupplementaryViewOfKind:v10 withReuseIdentifier:v11];
    }
    else
    {
      id v26 = v11;
    }
    uint64_t v62 = v26;
    long long v64 = [v63 objectForKey:v26];
    id v60 = (void *)_UISetCurrentFallbackEnvironment(self);
    if (v64)
    {
      uint64_t v27 = 6;
      if (!a6) {
        uint64_t v27 = 5;
      }
      id v59 = objc_retain(*(id *)((char *)&self->super.super.super.super.isa
                              + OBJC_IVAR____UICollectionSnapshotView__snapshottedViewDisablesRasterizationInAnimations[v27]));
      uint64_t v28 = [v59 objectForKey:v62];
      id v58 = (void *)v28;
      if (v28)
      {
        uint64_t v29 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v28 forKey:@"UINibExternalObjects"];
      }
      else
      {
        uint64_t v29 = 0;
      }
      uint64_t v57 = (void *)v29;
      id v61 = [v64 instantiateWithOwner:0 options:v29];
      if ([v61 count] == 1)
      {
        uint64_t v38 = [v61 objectAtIndex:0];
        char v39 = (void *)v74[5];
        v74[5] = v38;
      }
      if (!v74[5] || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        id v54 = [MEMORY[0x1E4F28B00] currentHandler];
        [v54 handleFailureInMethod:a2, self, @"UICollectionView.m", 9663, @"invalid nib registered for identifier (%@) - nib must contain exactly one top level object which must be a UICollectionReusableView instance", v11 object file lineNumber description];
      }
      id v40 = [(id)v74[5] reuseIdentifier];
      if ([v40 length] && (objc_msgSend(v40, "isEqualToString:", v11) & 1) == 0)
      {
        uint64_t v56 = [MEMORY[0x1E4F28B00] currentHandler];
        [v56 handleFailureInMethod:a2, self, @"UICollectionView.m", 9665, @"view reuse identifier in nib (%@) does not match the identifier used to register the nib (%@)", v40, v11 object file lineNumber description];
      }
    }
    else
    {
      uint64_t v30 = 91;
      if (!a6) {
        uint64_t v30 = 90;
      }
      id v59 = objc_retain(*(id *)((char *)&self->super.super.super.super.isa
                              + OBJC_IVAR____UICollectionSnapshotView__snapshottedViewDisablesRasterizationInAnimations[v30]));
      id v31 = (id)[v59 objectForKey:v62];
      [(UICollectionViewLayoutAttributes *)v13 frame];
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      [(UICollectionViewLayoutAttributes *)v13 size];
      v72[0] = MEMORY[0x1E4F143A8];
      v72[1] = 3221225472;
      v72[2] = __88__UICollectionView__dequeueReusableViewOfKind_withIdentifier_forIndexPath_viewCategory___block_invoke;
      v72[3] = &unk_1E52E5870;
      v72[4] = &v73;
      void v72[5] = v31;
      v72[6] = v33;
      v72[7] = v35;
      v72[8] = v36;
      v72[9] = v37;
      +[UIView performWithoutAnimation:v72];
    }

    _UIRestorePreviousFallbackEnvironment(v60);
    __int16 v41 = v74;
    if (v74[5])
    {
      if (!v13)
      {
LABEL_48:
        [(UICollectionView *)self _prepareViewForUse:v41[5] withElementCategory:a6 elementKind:v10 reuseIdentifier:v11 indexPath:v12 applyDefaultAttributes:0];

        goto LABEL_49;
      }
    }
    else
    {
      BOOL v55 = [MEMORY[0x1E4F28B00] currentHandler];
      [v55 handleFailureInMethod:a2, self, @"UICollectionView.m", 9678, @"could not dequeue a view of kind: %@ with identifier %@ - must register a nib or a class for the identifier or connect a prototype cell in a storyboard", v10, v11 object file lineNumber description];

      __int16 v41 = v74;
      if (!v13) {
        goto LABEL_48;
      }
    }
    [(id)v41[5] _willRevealWithLayoutAttributes:v13];
    __int16 v41 = v74;
    goto LABEL_48;
  }
  int v15 = [(UICollectionView *)self presentationIndexPathForDataSourceIndexPath:v12];

  -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v15);
  uint64_t v13 = (UICollectionViewLayoutAttributes *)objc_claimAutoreleasedReturnValue();
LABEL_5:
  cellBeingReconfigured = self->_cellBeingReconfigured;
  if (!cellBeingReconfigured) {
    goto LABEL_17;
  }
  char v17 = [(UICollectionReusableView *)cellBeingReconfigured reuseIdentifier];
  char v18 = [v17 isEqualToString:v11];

  if ((v18 & 1) == 0)
  {
    uint64_t v50 = [MEMORY[0x1E4F28B00] currentHandler];
    id v51 = [(UICollectionReusableView *)self->_cellBeingReconfigured reuseIdentifier];
    objc_msgSend(v50, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 9630, @"Attempted to dequeue a cell for a different registration or reuse identifier than the existing cell when reconfiguring an item, which is not allowed. You must dequeue a cell using the same registration or reuse identifier that was used to dequeue the cell originally to obtain the existing cell. Dequeued reuse identifier: %@; Original reuse identifier: %@; Existing cell: %@",
      v11,
      v51,
      self->_cellBeingReconfigured);
  }
  if (([(NSIndexPath *)self->_indexPathBeingReconfigured isEqual:v15] & 1) == 0)
  {
    BOOL v52 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v53 = [(UICollectionView *)self dataSourceIndexPathForPresentationIndexPath:self->_indexPathBeingReconfigured];
    objc_msgSend(v52, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 9631, @"Attempted to dequeue a cell for a different index path than the index path being reconfigured, which is not allowed. You must dequeue a cell for the same index path that is being reconfigured to obtain the existing cell. Dequeued index path: %@; Reconfigured index path: %@; Existing cell: %@",
      v12,
      v53,
      self->_cellBeingReconfigured);
  }
  id v19 = self->_cellBeingReconfigured;
LABEL_62:

  _Block_object_dispose(&v73, 8);
  return v19;
}

- (id)presentationIndexPathForDataSourceIndexPath:(id)a3
{
  return [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathAfterShadowUpdates:a3];
}

- (id)_createPreparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5 isFocused:(BOOL)a6 notify:(BOOL)a7
{
  BOOL v7 = a7;
  BOOL v76 = a6;
  BOOL v8 = a5;
  uint64_t v97 = *MEMORY[0x1E4F143B8];
  context = (void *)MEMORY[0x18C108260]();
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

  if (WeakRetained)
  {
    if (!a4)
    {
LABEL_67:
      id v58 = [MEMORY[0x1E4F28B00] currentHandler];
      [v58 handleFailureInMethod:a2, self, @"UICollectionView.m", 3814, @"UICollectionView internal bug: Attempting to create a cell with invalid attributes. Collection View: %@, Attributes: %@, Index Path: %@", self, a4, a3 object file lineNumber description];

      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v57 = [MEMORY[0x1E4F28B00] currentHandler];
    [v57 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:3813 description:@"UICollectionView dataSource is not set"];

    if (!a4) {
      goto LABEL_67;
    }
  }
  if ((*((_WORD *)a4 + 144) & 1) == 0) {
    goto LABEL_67;
  }
LABEL_4:
  firstResponderIndexPath = self->_firstResponderIndexPath;
  if (firstResponderIndexPath
    && self->_firstResponderViewType == 1
    && [(NSIndexPath *)firstResponderIndexPath isEqual:a3])
  {
    [(UICollectionView *)self _configureCachedCellForDisplay:self->_firstResponderView withIndexPath:a3 layoutAttributesToUpdate:a4];
    int v15 = self->_firstResponderView;
    goto LABEL_65;
  }
  if ([(UICollectionView *)self _hasFocusedCellForIndexPath:a3 shouldUsePreUpdateData:0])
  {
    int v16 = [(UICollectionView *)self _focusedItemState];
    -[_UICollectionViewFocusedItemState cell](v16);
    int v15 = (UICollectionReusableView *)objc_claimAutoreleasedReturnValue();

    uint64_t v17 = [(UICollectionView *)self _focusedItemState];
    char v18 = (void *)v17;
    if (v17) {
      id v19 = *(void **)(v17 + 16);
    }
    else {
      id v19 = 0;
    }
    id v20 = v19;
    char v21 = [a3 isEqual:v20];

    if ((v21 & 1) == 0)
    {
      id v60 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v61 = [(UICollectionView *)self _focusedItemState];
      uint64_t v62 = (void *)v61;
      if (v61) {
        id v63 = *(void **)(v61 + 16);
      }
      else {
        id v63 = 0;
      }
      id v64 = v63;
      [v60 handleFailureInMethod:a2, self, @"UICollectionView.m", 3830, @"Collection view focus state inconsistency. Focused index path %@ is not equal to index path of focused cell %@.", v64, a3 object file lineNumber description];
    }
    [(UICollectionView *)self _configureCachedCellForDisplay:v15 withIndexPath:a3 layoutAttributesToUpdate:a4];
    if (v7) {
      [(UICollectionView *)self _notifyWillDisplayCellIfNeeded:v15 forIndexPath:a3];
    }
    goto LABEL_65;
  }
  if (self->_cellBeingReconfigured)
  {
    id v59 = [MEMORY[0x1E4F28B00] currentHandler];
    [v59 handleFailureInMethod:a2, self, @"UICollectionView.m", 3842, @"Performing side effects on UICollectionView that cause a new cell to be requested while an existing item is being reconfigured is not allowed. Check the backtrace to see what's causing this. Collection view: %@", self object file lineNumber description];
  }
  uint64_t v22 = _UISetCurrentFallbackEnvironment(self);
  __int16 v23 = *((_WORD *)&self->_collectionViewFlags + 8);
  char v24 = *((unsigned char *)&self->_collectionViewFlags + 18);
  *((_WORD *)&self->_collectionViewFlags + 8) = v23 | 1;
  *((unsigned char *)&self->_collectionViewFlags + 18) = v24;
  uint64_t v85 = 0;
  uint64_t v86 = &v85;
  uint64_t v87 = 0x3032000000;
  __int16 v88 = __Block_byref_object_copy__41;
  id v89 = __Block_byref_object_dispose__41;
  id v90 = 0;
  uint64_t v75 = (void *)v22;
  if (_isNotifyingIdleObservers == 1)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258918);
    id v26 = *(id *)(CategoryCachedImpl + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v26))
    {
      uint64_t v27 = [a3 section];
      uint64_t v28 = [a3 item];
      *(_DWORD *)buf = 134218240;
      __int16 v92 = (UICollectionView *)v27;
      __int16 v93 = 2048;
      uint64_t v94 = v28;
      _os_signpost_emit_unreliably_with_name_impl();
    }

    v84[0] = MEMORY[0x1E4F143A8];
    v84[1] = 3221225472;
    v84[2] = __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke;
    v84[3] = &unk_1E52E5108;
    v84[4] = self;
    v84[5] = &v85;
    v84[6] = a3;
    +[UIView performWithoutAnimation:v84];
    unint64_t v29 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258920);
    uint64_t v30 = *(id *)(v29 + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(v29 + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v30))
    {
      int v31 = [(id)v86[5] _hasBeenReused];
      *(_DWORD *)buf = 67109120;
      LODWORD(v92) = v31;
LABEL_29:
      _os_signpost_emit_unreliably_with_name_impl();
    }
  }
  else
  {
    unint64_t v32 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258928);
    uint64_t v33 = *(id *)(v32 + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(v32 + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v33))
    {
      uint64_t v34 = [a3 section];
      uint64_t v35 = [a3 item];
      *(_DWORD *)buf = 134218240;
      __int16 v92 = (UICollectionView *)v34;
      __int16 v93 = 2048;
      uint64_t v94 = v35;
      _os_signpost_emit_unreliably_with_name_impl();
    }

    v83[0] = MEMORY[0x1E4F143A8];
    v83[1] = 3221225472;
    v83[2] = __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_394;
    v83[3] = &unk_1E52E5108;
    v83[4] = self;
    v83[5] = &v85;
    v83[6] = a3;
    +[UIView performWithoutAnimation:v83];
    unint64_t v36 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258930);
    uint64_t v30 = *(id *)(v36 + 8);
    if (os_signpost_id_make_with_pointer(*(os_log_t *)(v36 + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
      && os_signpost_enabled(v30))
    {
      int v37 = [(id)v86[5] _hasBeenReused];
      *(_DWORD *)buf = 67109120;
      LODWORD(v92) = v37;
      goto LABEL_29;
    }
  }

  uint64_t v38 = (void *)v86[5];
  if (!v38)
  {
    id v65 = [MEMORY[0x1E4F28B00] currentHandler];
    __int16 v66 = objc_msgSend(a3, "_ui_shortDescription");
    objc_msgSend(v65, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3862, @"The collection view's data source returned nil when asked to provide a cell for an item. Collection view: %@; index path: %@",
      self,
      v66);

    uint64_t v38 = (void *)v86[5];
  }
  char v39 = [v38 reuseIdentifier];
  BOOL v40 = v39 == 0;

  if (v40)
  {
    BOOL v67 = [MEMORY[0x1E4F28B00] currentHandler];
    id v68 = objc_msgSend(a3, "_ui_shortDescription");
    objc_msgSend(v67, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3863, @"The collection view's data source returned a cell without a reuseIdentifier. Cells must be retrieved by calling -dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: or -dequeueReusableCellWithReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; cell: %@",
      self,
      v68,
      v86[5],
      v75);
  }
  if (([(id)v86[5] _wasDequeued] & 1) == 0)
  {
    id v69 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v70 = objc_msgSend(a3, "_ui_shortDescription");
    objc_msgSend(v69, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3864, @"The collection view's data source returned a cell that was not dequeued from the collection view using a cell registration or reuse identifier. Cells must be retrieved by calling -dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: or -dequeueReusableCellWithReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; cell: %@",
      self,
      v70,
      v86[5]);
  }
  __int16 v41 = [(id)v86[5] superview];
  if (!v41)
  {
    if (!dyld_program_sdk_at_least()) {
      goto LABEL_39;
    }
    __int16 v41 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v74 = objc_msgSend(a3, "_ui_shortDescription");
    objc_msgSend(v41, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3865, @"The collection view's data source returned a cell that is not in the view hierarchy. Cells must be retrieved by calling -dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: or -dequeueReusableCellWithReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; cell: %@",
      self,
      v74,
      v86[5]);
  }
LABEL_39:
  uint64_t v42 = self->_subviewManager;
  if (-[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)v42, (void *)v86[5]))
  {
    if (dyld_program_sdk_at_least())
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      BOOL v44 = objc_msgSend(a3, "_ui_shortDescription");
      -[NSObject handleFailureInMethod:object:file:lineNumber:description:](v43, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 3870, @"The collection view's data source returned a cell that is in the reuse queue. Cells must be retrieved by calling -dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: or -dequeueReusableCellWithReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; cell: %@",
        self,
        v44,
        v86[5]);
    }
    else
    {
      uint64_t v43 = *(id *)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258938) + 8);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        id v45 = objc_msgSend(a3, "_ui_shortDescription");
        id v46 = (void *)v86[5];
        *(_DWORD *)buf = 138412802;
        __int16 v92 = self;
        __int16 v93 = 2112;
        uint64_t v94 = (uint64_t)v45;
        __int16 v95 = 2112;
        uint64_t v96 = v46;
        _os_log_impl(&dword_1853B0000, v43, OS_LOG_TYPE_ERROR, "The collection view's data source returned a cell that is in the reuse queue. Cells must be retrieved by calling -dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: or -dequeueReusableCellWithReuseIdentifier:forIndexPath:. Collection view: %@; index path: %@; cell: %@",
          buf,
          0x20u);
      }
    }

    -[_UICollectionViewSubviewManager ensureViewIsRemovedFromReuseQueue:]((uint64_t)v42, (void *)v86[5]);
    -[UICollectionView _prepareViewForReuse:]((uint64_t)self, (void *)v86[5]);
  }
  else if ([(id)v86[5] _isHiddenForReuse])
  {
    [(id)v86[5] _setHiddenForReuse:0];
  }
  if ((dyld_program_sdk_at_least() & 1) == 0) {
    -[UICollectionView _addControlledSubview:atZIndex:forced:initialAttributes:](self, "_addControlledSubview:atZIndex:forced:initialAttributes:", v86[5], [a4 zIndex], 0, a4);
  }
  int v47 = dyld_program_sdk_at_least();
  char v48 = v47;
  if (v47) {
    [(UICollectionView *)self _configureCellForDisplay:v86[5] indexPath:a3 cached:0];
  }
  v82[0] = MEMORY[0x1E4F143A8];
  v82[1] = 3221225472;
  v82[2] = __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_412;
  v82[3] = &unk_1E52E5130;
  v82[4] = self;
  v82[5] = &v85;
  v82[6] = a4;
  +[UIView performWithoutAnimation:v82];
  if (v8)
  {
    v81[0] = MEMORY[0x1E4F143A8];
    v81[1] = 3221225472;
    v81[2] = __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_2;
    v81[3] = &unk_1E52E5158;
    v81[4] = self;
    v81[5] = &v85;
    v81[6] = a4;
    +[UIView performWithoutAnimation:v81];
  }
  else
  {
    int v49 = [(id)v86[5] _layoutAttributes];
    uint64_t v50 = -[UICollectionViewLayoutAttributes __indexPath](v49);
    LOBYTE(v50) = [v50 isEqual:-[UICollectionViewLayoutAttributes __indexPath](a4)];

    if ((v50 & 1) == 0)
    {
      id v51 = (void *)[a4 copy];
      [v51 setIndexPath:-[UICollectionViewLayoutAttributes __indexPath](a4)];
      v78[0] = MEMORY[0x1E4F143A8];
      v78[1] = 3221225472;
      v78[2] = __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_3;
      v78[3] = &unk_1E52E5180;
      v78[4] = self;
      id v52 = v51;
      id v79 = v52;
      uint64_t v80 = &v85;
      +[UIView performWithoutAnimation:v78];
    }
  }
  if ((v48 & 1) == 0) {
    [(UICollectionView *)self _configureCellForDisplay:v86[5] indexPath:a3 cached:0];
  }
  __int16 v53 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFFFE | v23 & 1;
  *((unsigned char *)&self->_collectionViewFlags + 18) = *((unsigned char *)&self->_collectionViewFlags + 18);
  *((_WORD *)&self->_collectionViewFlags + 8) = v53;
  if (v76)
  {
    id v54 = +[_UICollectionViewFocusedItemState stateWithReusableView:]((uint64_t)_UICollectionViewFocusedItemState, (void *)v86[5]);
    [(UICollectionView *)self _setFocusedItemState:v54];
  }
  if (v42) {
    [(NSHashTable *)v42->_dequeuedViews removeObject:v86[5]];
  }
  if (v7) {
    [(UICollectionView *)self _notifyWillDisplayCellIfNeeded:v86[5] forIndexPath:a3];
  }
  _UIRestorePreviousFallbackEnvironment(v75);
  unint64_t v55 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258940);
  if (*(unsigned char *)v55)
  {
    BOOL v71 = *(id *)(v55 + 8);
    if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
    {
      uint64_t v72 = v86[5];
      uint64_t v73 = objc_msgSend(a3, "_ui_shortDescription");
      *(_DWORD *)buf = 134218498;
      __int16 v92 = self;
      __int16 v93 = 2112;
      uint64_t v94 = v72;
      __int16 v95 = 2112;
      uint64_t v96 = v73;
      _os_log_impl(&dword_1853B0000, v71, OS_LOG_TYPE_ERROR, "[UICV %p] _createPreparedCell: %@ indexPath:%@", buf, 0x20u);
    }
  }
  int v15 = (UICollectionReusableView *)(id)v86[5];

  _Block_object_dispose(&v85, 8);
LABEL_65:
  return v15;
}

- (void)_configureCellForDisplay:(id)a3 indexPath:(id)a4 cached:(BOOL)a5
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __62__UICollectionView__configureCellForDisplay_indexPath_cached___block_invoke;
  v5[3] = &unk_1E52E51F8;
  BOOL v6 = a5;
  v5[4] = self;
  v5[5] = a4;
  v5[6] = a3;
  +[UIView performWithoutAnimation:v5];
}

- (void)_notifyWillDisplaySupplementaryView:(id)a3 forElementKind:(id)a4 atIndexPath:(id)a5
{
  id v11 = a3;
  id v8 = a4;
  id v9 = a5;
  if (([v11 _hasNotifiedIsDisplaying] & 1) == 0)
  {
    if ((*(void *)&self->_collectionViewFlags & 0x200) != 0)
    {
      id v10 = [(UICollectionView *)self _delegateProxy];
      [v10 collectionView:self willDisplaySupplementaryView:v11 forElementKind:v8 atIndexPath:v9];
    }
    [v11 _notifyIsDisplaying:1];
  }
}

- (id)_delegateProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained(&self->super._delegate);
  }
  return WeakRetained;
}

- (void)_configureSupplementaryViewForDisplay:(id)a3 withElementKind:(id)a4 indexPath:(id)a5 elementCategory:(unint64_t)a6
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __100__UICollectionView__configureSupplementaryViewForDisplay_withElementKind_indexPath_elementCategory___block_invoke;
  v6[3] = &unk_1E52E5220;
  v6[4] = self;
  void v6[5] = a3;
  v6[6] = a6;
  +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v6, a4, a5);
}

- (void)_prepareViewForReuse:(uint64_t)a1
{
  id v3 = a2;
  BOOL v4 = v3;
  if (a1)
  {
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __41__UICollectionView__prepareViewForReuse___block_invoke;
    v6[3] = &unk_1E52D9F70;
    id v5 = v3;
    id v7 = v5;
    +[UIView performWithoutAnimation:v6];
    [v5 _setHiddenForReuse:0];
  }
}

- (void)_createAndAppendViewAnimationsForExistingAndDeletedAuxiliariesInCurrentUpdate:(id)a3 disappearingAnimations:(id)a4 animationsForOnScreenViews:(id)a5 newSubviewCollection:(id)a6 oldVisibleViews:(id)a7
{
  uint64_t v134 = *MEMORY[0x1E4F143B8];
  id v12 = a3;
  id v114 = a4;
  id v111 = a5;
  id v109 = a6;
  id v13 = a7;
  double v14 = objc_opt_new();
  subviewManager = self->_subviewManager;
  v129[0] = MEMORY[0x1E4F143A8];
  v129[1] = 3221225472;
  v129[2] = __185__UICollectionView__createAndAppendViewAnimationsForExistingAndDeletedAuxiliariesInCurrentUpdate_disappearingAnimations_animationsForOnScreenViews_newSubviewCollection_oldVisibleViews___block_invoke;
  v129[3] = &unk_1E52E59A8;
  id v108 = v13;
  id v130 = v108;
  id v16 = v14;
  id v131 = v16;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateAuxillariesWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v129);
  }
  uint64_t v17 = -[UICollectionViewData existingSupplementaryLayoutAttributes]((uint64_t)self->_currentUpdate->_oldModel);
  if (v17) {
    [v16 addObjectsFromArray:v17];
  }
  long long v107 = (void *)v17;
  [(UICollectionView *)self _visibleBounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v127 = 0u;
  long long v128 = 0u;
  id v26 = v16;
  uint64_t v27 = [v26 countByEnumeratingWithState:&v125 objects:v133 count:16];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v116 = *(void *)v126;
    id v112 = v12;
    id v110 = v26;
    do
    {
      uint64_t v29 = 0;
      uint64_t v115 = v28;
      do
      {
        if (*(void *)v126 != v116) {
          objc_enumerationMutation(v26);
        }
        uint64_t v30 = *(unsigned __int16 **)(*((void *)&v125 + 1) + 8 * v29);
        id v31 = (id)[v30 indexPath];
        if ((unint64_t)[v31 length] < 2) {
          uint64_t v32 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v32 = [v31 section];
        }
        if (![(NSIndexSet *)self->_currentUpdate->_deletedSections containsIndex:v32])
        {
          uint64_t v118 = v29;
          [v31 item];
          CGRect v119 = -[UIBarButtonItemGroup _items]((id *)v30);
          if (v30) {
            uint64_t v33 = (v30[144] >> 1) & 1;
          }
          else {
            uint64_t v33 = 0;
          }
          currentUpdate = self->_currentUpdate;
          if (v32 == 0x7FFFFFFFFFFFFFFFLL)
          {
            uint64_t v35 = v119;
            unint64_t v36 = [(NSMutableDictionary *)currentUpdate->_deletedSupplementaryTopLevelIndexesDict objectForKeyedSubscript:v119];
            char v37 = objc_msgSend(v36, "containsIndex:", objc_msgSend(v31, "indexAtPosition:", 0));

            if (v37) {
              goto LABEL_18;
            }
LABEL_21:
            char v48 = -[UICollectionViewUpdate newIndexPathForSupplementaryElementOfKind:oldIndexPath:]((uint64_t)self->_currentUpdate, v35, v31);
            [v30 frame];
            CGFloat v50 = v49;
            CGFloat v52 = v51;
            CGFloat v54 = v53;
            CGFloat v56 = v55;
            if (v30)
            {
              newModel = self->_currentUpdate->_newModel;
              uint64_t v29 = v118;
              if ((v30[144] & 2) == 0) {
                goto LABEL_23;
              }
              id v58 = -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:]((uint64_t)newModel, (uint64_t)v35, v48);
              uint64_t v59 = 1;
            }
            else
            {
              newModel = self->_currentUpdate->_newModel;
              uint64_t v29 = v118;
LABEL_23:
              id v58 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:]((uint64_t)newModel, (uint64_t)v35, v48);
              uint64_t v59 = 0;
            }
            id v60 = [(UICollectionView *)self _visibleSupplementaryViewOfKind:v35 atIndexPath:v31 isDecorationView:v59];
            uint64_t v61 = v60;
            if (!v58)
            {
              if (v60)
              {
                uint64_t v117 = (uint64_t)v48;
                id v102 = [v60 _layoutAttributes];
                id v58 = (void *)[v102 copy];

                [v58 setAlpha:0.0];
                uint64_t v74 = [(UICollectionViewLayout *)self->_layout _animationForReusableView:v61 toLayoutAttributes:v58 type:2];
                long long v103 = [[UICollectionViewAnimation alloc] initWithView:v61 viewType:2 finalLayoutAttributes:v58 startFraction:0 endFraction:1 animateFromCurrentPostion:v74 deleteAfterAnimation:0.0 customAnimations:1.0];
                long long v104 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, (uint64_t)v58);
                [v12 addObject:v103];
                [v114 setObject:v103 forKey:v104];

                goto LABEL_64;
              }
              id v58 = 0;
              uint64_t v28 = v115;
              goto LABEL_69;
            }
            uint64_t v117 = (uint64_t)v48;
            [v58 frame];
            v141.origin.double x = v62;
            v141.origin.double y = v63;
            v141.size.double width = v64;
            v141.size.double height = v65;
            v135.origin.double x = v50;
            v135.origin.double y = v52;
            v135.size.double width = v54;
            v135.size.double height = v56;
            CGRect v136 = CGRectUnion(v135, v141);
            -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](self->_layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v30, v136.origin.x, v136.origin.y, v136.size.width, v136.size.height);
            v142.origin.double x = v66;
            v142.origin.double y = v67;
            v142.size.double width = v68;
            v142.size.double height = v69;
            v137.origin.double x = v19;
            v137.origin.double y = v21;
            v137.size.double width = v23;
            v137.size.double height = v25;
            if (CGRectIntersectsRect(v137, v142) && v30 && !v61)
            {
              if (![v30 isHidden] || (objc_msgSend(v58, "isHidden") & 1) == 0)
              {
                id v70 = [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v35 atIndexPath:v48 layout:self->_layout withLayoutAttributes:v30 applyAttributes:1];
                if (v70)
                {
                  uint64_t v61 = v70;
                  unsigned __int16 v71 = v30[144];
                  uint64_t v72 = 1;
                  if ((v71 & 2) != 0) {
                    uint64_t v72 = 2;
                  }
                  if (v71) {
                    uint64_t v73 = 0;
                  }
                  else {
                    uint64_t v73 = v72;
                  }
                  -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:]((uint64_t)v109, (uint64_t)v70, (uint64_t)v35, v73, (uint64_t)v48);
                  id v12 = v112;
LABEL_39:
                  LOBYTE(v106) = 1;
                  uint64_t v74 = [(UICollectionView *)self _viewAnimationsForView:v61 startingLayoutAttributes:v30 endingLayoutAttributes:v58 startingLayout:self->_layout endingLayout:self->_layout animationSetup:0 animationCompletion:0 enableCustomAnimations:v106 customAnimationsType:2];
                  uint64_t orthogonalScrollerController = (uint64_t)self->_orthogonalScrollerController;
                  BOOL v76 = [v61 _layoutAttributes];
                  LOBYTE(orthogonalScrollerController) = -[_UICollectionViewOrthogonalScrollerSectionController isElementInOrthogonalScrollingSectionWithLayoutAttributes:](orthogonalScrollerController, v76);

                  if ((orthogonalScrollerController & 1) == 0)
                  {
                    id v77 = self;
                    long long v123 = 0u;
                    long long v124 = 0u;
                    long long v121 = 0u;
                    long long v122 = 0u;
                    int v113 = v74;
                    id obj = v74;
                    uint64_t v78 = [(UICollectionViewAnimation *)obj countByEnumeratingWithState:&v121 objects:v132 count:16];
                    if (v78)
                    {
                      uint64_t v79 = v78;
                      uint64_t v80 = *(void *)v122;
                      do
                      {
                        uint64_t v81 = 0;
                        do
                        {
                          if (*(void *)v122 != v80) {
                            objc_enumerationMutation(obj);
                          }
                          uint64_t v82 = *(void **)(*((void *)&v121 + 1) + 8 * v81);
                          id v83 = [v61 superview];
                          uint64_t v84 = v58;
                          uint64_t v85 = [(UICollectionView *)v77 _subviewRouterForView:v61 attributes:v58 createIfNecessary:0];
                          uint64_t v86 = (void *)v85;
                          if (v85) {
                            uint64_t v87 = *(void **)(v85 + 40);
                          }
                          else {
                            uint64_t v87 = 0;
                          }
                          id v88 = v87;

                          if (v83 != v88) {
                            [v82 setParentInCollectionViewDuringAnimation:1];
                          }

                          ++v81;
                          id v58 = v84;
                        }
                        while (v79 != v81);
                        uint64_t v89 = [(UICollectionViewAnimation *)obj countByEnumeratingWithState:&v121 objects:v132 count:16];
                        uint64_t v79 = v89;
                      }
                      while (v89);
                    }

                    id v12 = v112;
                    uint64_t v74 = v113;
                    self = v77;
                    id v26 = v110;
                    uint64_t v29 = v118;
                  }
                  if ([(UICollectionViewAnimation *)v74 count] == 1)
                  {
                    id v90 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, (uint64_t)v58);
                    id v91 = [(UICollectionViewAnimation *)v74 objectAtIndexedSubscript:0];
                    [v111 setObject:v91 forKey:v90];
                  }
                  [v12 addObjectsFromArray:v74];
LABEL_64:
                  uint64_t v28 = v115;
LABEL_65:

                  goto LABEL_68;
                }
                uint64_t v28 = v115;
                id v12 = v112;
LABEL_69:

                goto LABEL_70;
              }
            }
            else if (v61)
            {
              goto LABEL_39;
            }
            uint64_t v28 = v115;
            goto LABEL_68;
          }
          uint64_t v35 = v119;
          int v47 = -[UICollectionViewUpdate validatedNewIndexPathForSupplementaryElementOfKind:oldIndexPath:]((uint64_t)currentUpdate, v119, v31);

          if (v47) {
            goto LABEL_21;
          }
LABEL_18:
          [v30 frame];
          CGFloat v39 = v38;
          CGFloat v41 = v40;
          CGFloat v43 = v42;
          CGFloat v45 = v44;
          layout = self->_layout;
          if (v33) {
            [(UICollectionViewLayout *)layout finalLayoutAttributesForDisappearingDecorationElementOfKind:v119 atIndexPath:v31];
          }
          else {
          __int16 v92 = [(UICollectionViewLayout *)layout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:v119 atIndexPath:v31];
          }
          uint64_t v28 = v115;
          [v92 frame];
          v143.origin.double x = v93;
          v143.origin.double y = v94;
          v143.size.double width = v95;
          v143.size.double height = v96;
          v138.origin.double x = v39;
          v138.origin.double y = v41;
          v138.size.double width = v43;
          v138.size.double height = v45;
          CGRect v139 = CGRectUnion(v138, v143);
          uint64_t v117 = (uint64_t)v92;
          -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](self->_layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v92, v139.origin.x, v139.origin.y, v139.size.width, v139.size.height);
          v144.origin.double x = v97;
          v144.origin.double y = v98;
          v144.size.double width = v99;
          v144.size.double height = v100;
          v140.origin.double x = v19;
          v140.origin.double y = v21;
          v140.size.double width = v23;
          v140.size.double height = v25;
          if (CGRectIntersectsRect(v140, v144))
          {
            id v58 = [(UICollectionView *)self _visibleSupplementaryViewOfKind:v119 atIndexPath:v31 isDecorationView:v33];
            if (v58)
            {
              uint64_t v61 = [(UICollectionViewLayout *)self->_layout _animationForReusableView:v58 toLayoutAttributes:v92 type:2];
              uint64_t v74 = [[UICollectionViewAnimation alloc] initWithView:v58 viewType:2 finalLayoutAttributes:v92 startFraction:1 endFraction:1 animateFromCurrentPostion:v61 deleteAfterAnimation:0.0 customAnimations:1.0];
              [v12 addObject:v74];
              id v101 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, v117);
              [v114 setObject:v74 forKey:v101];

              uint64_t v29 = v118;
              goto LABEL_65;
            }
            uint64_t v29 = v118;
LABEL_68:
            char v48 = (void *)v117;
            goto LABEL_69;
          }
          char v48 = v92;
          uint64_t v29 = v118;
LABEL_70:
        }
        ++v29;
      }
      while (v29 != v28);
      uint64_t v105 = [v26 countByEnumeratingWithState:&v125 objects:v133 count:16];
      uint64_t v28 = v105;
    }
    while (v105);
  }
}

- (id)_visibleSupplementaryViewOfKind:(id)a3 atIndexPath:(id)a4 isDecorationView:(BOOL)a5
{
  if (a5) {
    [(UICollectionView *)self _visibleDecorationViewOfKind:a3 atIndexPath:a4];
  }
  else {
  id v5 = [(UICollectionView *)self _visibleSupplementaryViewOfKind:a3 atIndexPath:a4];
  }
  return v5;
}

- (id)_visibleDecorationViewOfKind:(id)a3 atIndexPath:(id)a4
{
  return -[_UICollectionViewSubviewManager visibleDecorationOfKind:atIndexPath:]((uint64_t *)self->_subviewManager, (uint64_t)a3, (uint64_t)a4);
}

void __34__UICollectionView_setDataSource___block_invoke_239(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    char v2 = [WeakRetained dataSource];
    if (!v2) {
      [v3 setDataSource:0];
    }

    id WeakRetained = v3;
  }
}

- (void)setDelegate:(id)delegate
{
  id v4 = delegate;
  if (!v4)
  {
LABEL_7:
    BOOL v6 = 0;
    goto LABEL_8;
  }
  char v5 = dyld_program_sdk_at_least();
  BOOL v6 = v4;
  if ((v5 & 1) == 0)
  {
    unsigned __int8 v7 = objc_msgSend(v4, sel_allowsWeakReference);
    BOOL v6 = v4;
    if ((v7 & 1) == 0)
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __32__UICollectionView_setDelegate___block_invoke;
      block[3] = &unk_1E52D9F98;
      id v124 = v4;
      long long v125 = self;
      if (setDelegate__once != -1) {
        dispatch_once(&setDelegate__once, block);
      }

      goto LABEL_7;
    }
  }
LABEL_8:
  id v8 = v6;

  id v9 = [(UIScrollView *)self delegate];
  if (v8 == v9)
  {
    if (v8)
    {
      id v10 = v8;
      goto LABEL_126;
    }
    if ((*(_DWORD *)&self->_collectionViewFlags & 0x80000000) == 0)
    {
      id v10 = 0;
      goto LABEL_126;
    }
  }
  v122.receiver = self;
  v122.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v122 setDelegate:v8];
  id v10 = [(UIScrollView *)self delegate];

  p_collectionViewFlags = &self->_collectionViewFlags;
  *(void *)&self->_collectionViewFlags = *(void *)&self->_collectionViewFlags & 0xFFFFFFFF7FFFFFFFLL | ((unint64_t)(v10 != 0) << 31);
  *(void *)&self->_collectionViewFlags = *(void *)&self->_collectionViewFlags & 0xFFFFFFFFFFFFFFFELL | objc_opt_respondsToSelector() & 1;
  char v12 = objc_opt_respondsToSelector();
  uint64_t v13 = 2;
  if ((v12 & 1) == 0) {
    uint64_t v13 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFFDLL | v13;
  char v14 = objc_opt_respondsToSelector();
  uint64_t v15 = 4;
  if ((v14 & 1) == 0) {
    uint64_t v15 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFFBLL | v15;
  char v16 = objc_opt_respondsToSelector();
  uint64_t v17 = 8;
  if ((v16 & 1) == 0) {
    uint64_t v17 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFF7 | v17;
  char v18 = objc_opt_respondsToSelector();
  uint64_t v19 = 16;
  if ((v18 & 1) == 0) {
    uint64_t v19 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFEFLL | v19;
  char v20 = objc_opt_respondsToSelector();
  uint64_t v21 = 32;
  if ((v20 & 1) == 0) {
    uint64_t v21 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFDFLL | v21;
  char v22 = objc_opt_respondsToSelector();
  uint64_t v23 = 64;
  if ((v22 & 1) == 0) {
    uint64_t v23 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFFBFLL | v23;
  char v24 = objc_opt_respondsToSelector();
  uint64_t v25 = 256;
  if ((v24 & 1) == 0) {
    uint64_t v25 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFEFFLL | v25;
  char v26 = objc_opt_respondsToSelector();
  uint64_t v27 = 512;
  if ((v26 & 1) == 0) {
    uint64_t v27 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFDFFLL | v27;
  char v28 = objc_opt_respondsToSelector();
  uint64_t v29 = 1024;
  if ((v28 & 1) == 0) {
    uint64_t v29 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFBFFLL | v29;
  char v30 = objc_opt_respondsToSelector();
  uint64_t v31 = 2048;
  if ((v30 & 1) == 0) {
    uint64_t v31 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFF7FFLL | v31;
  if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    if (objc_opt_respondsToSelector()) {
      unsigned int v32 = 128;
    }
    else {
      unsigned int v32 = 0;
    }
  }
  else
  {
    unsigned int v32 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFFF7FLL | v32;
  char v33 = objc_opt_respondsToSelector();
  uint64_t v34 = 4096;
  if ((v33 & 1) == 0) {
    uint64_t v34 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFEFFFLL | v34;
  char v35 = objc_opt_respondsToSelector();
  uint64_t v36 = 0x2000;
  if ((v35 & 1) == 0) {
    uint64_t v36 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFDFFFLL | v36;
  char v37 = objc_opt_respondsToSelector();
  uint64_t v38 = 0x4000;
  if ((v37 & 1) == 0) {
    uint64_t v38 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFFBFFFLL | v38;
  char v39 = objc_opt_respondsToSelector();
  uint64_t v40 = 0x8000;
  if ((v39 & 1) == 0) {
    uint64_t v40 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFF7FFFLL | v40;
  char v41 = objc_opt_respondsToSelector();
  uint64_t v42 = 0x40000000;
  if ((v41 & 1) == 0) {
    uint64_t v42 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFBFFFFFFFLL | v42;
  char v43 = objc_opt_respondsToSelector();
  uint64_t v44 = 0x10000;
  if ((v43 & 1) == 0) {
    uint64_t v44 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFEFFFFLL | v44;
  char v45 = objc_opt_respondsToSelector();
  uint64_t v46 = 0x20000;
  if ((v45 & 1) == 0) {
    uint64_t v46 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFDFFFFLL | v46;
  char v47 = objc_opt_respondsToSelector();
  uint64_t v48 = 0x40000;
  if ((v47 & 1) == 0) {
    uint64_t v48 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFFBFFFFLL | v48;
  char v49 = objc_opt_respondsToSelector();
  uint64_t v50 = 0x80000;
  if ((v49 & 1) == 0) {
    uint64_t v50 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFF7FFFFLL | v50;
  char v51 = objc_opt_respondsToSelector();
  uint64_t v52 = 0x100000;
  if ((v51 & 1) == 0) {
    uint64_t v52 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFEFFFFFLL | v52;
  char v53 = objc_opt_respondsToSelector();
  uint64_t v54 = 0x200000;
  if ((v53 & 1) == 0) {
    uint64_t v54 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFDFFFFFLL | v54;
  char v55 = objc_opt_respondsToSelector();
  uint64_t v56 = 0x400000;
  if ((v55 & 1) == 0) {
    uint64_t v56 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFFBFFFFFLL | v56;
  char v57 = objc_opt_respondsToSelector();
  uint64_t v58 = 0x800000;
  if ((v57 & 1) == 0) {
    uint64_t v58 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFF7FFFFFLL | v58;
  char v59 = objc_opt_respondsToSelector();
  uint64_t v60 = 0x1000000;
  if ((v59 & 1) == 0) {
    uint64_t v60 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFEFFFFFFLL | v60;
  char v61 = objc_opt_respondsToSelector();
  uint64_t v62 = 0x2000000;
  if ((v61 & 1) == 0) {
    uint64_t v62 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFDFFFFFFLL | v62;
  char v63 = objc_opt_respondsToSelector();
  uint64_t v64 = 0x4000000;
  if ((v63 & 1) == 0) {
    uint64_t v64 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFFBFFFFFFLL | v64;
  char v65 = objc_opt_respondsToSelector();
  uint64_t v66 = 0x8000000;
  if ((v65 & 1) == 0) {
    uint64_t v66 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFF7FFFFFFLL | v66;
  char v67 = objc_opt_respondsToSelector();
  uint64_t v68 = 0x10000000;
  if ((v67 & 1) == 0) {
    uint64_t v68 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFEFFFFFFFLL | v68;
  char v69 = objc_opt_respondsToSelector();
  uint64_t v70 = 0x20000000;
  if ((v69 & 1) == 0) {
    uint64_t v70 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFFDFFFFFFFLL | v70;
  char v71 = objc_opt_respondsToSelector();
  uint64_t v72 = 0x8000000000000;
  if ((v71 & 1) == 0) {
    uint64_t v72 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFF7FFFFFFFFFFFFLL | v72;
  char v73 = objc_opt_respondsToSelector();
  uint64_t v74 = 0x10000000000000;
  if ((v73 & 1) == 0) {
    uint64_t v74 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFEFFFFFFFFFFFFFLL | v74;
  char v75 = objc_opt_respondsToSelector();
  uint64_t v76 = 0x100000000;
  if ((v75 & 1) == 0) {
    uint64_t v76 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFEFFFFFFFFLL | v76;
  char v77 = objc_opt_respondsToSelector();
  uint64_t v78 = 0x200000000;
  if ((v77 & 1) == 0) {
    uint64_t v78 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFDFFFFFFFFLL | v78;
  char v79 = objc_opt_respondsToSelector();
  uint64_t v80 = 0x400000000;
  if ((v79 & 1) == 0) {
    uint64_t v80 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFFBFFFFFFFFLL | v80;
  char v81 = objc_opt_respondsToSelector();
  uint64_t v82 = 0x4000000000;
  if ((v81 & 1) == 0) {
    uint64_t v82 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFBFFFFFFFFFLL | v82;
  char v83 = objc_opt_respondsToSelector();
  uint64_t v84 = 0x8000000000;
  if ((v83 & 1) == 0) {
    uint64_t v84 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFF7FFFFFFFFFLL | v84;
  char v85 = objc_opt_respondsToSelector();
  uint64_t v86 = 0x10000000000;
  if ((v85 & 1) == 0) {
    uint64_t v86 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFEFFFFFFFFFFLL | v86;
  char v87 = objc_opt_respondsToSelector();
  uint64_t v88 = 0x20000000000;
  if ((v87 & 1) == 0) {
    uint64_t v88 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFDFFFFFFFFFFLL | v88;
  char v89 = objc_opt_respondsToSelector();
  int v90 = *((unsigned __int8 *)&self->_collectionViewFlags + 18);
  int v91 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
  uint64_t v93 = *(void *)p_collectionViewFlags;
  uint64_t v92 = *((void *)&self->_collectionViewFlags + 1);
  uint64_t v94 = 0x40000000000;
  if ((v89 & 1) == 0) {
    uint64_t v94 = 0;
  }
  unint64_t v95 = v93 & 0xFFFFFBFFFFFFFFFFLL | v94;
  *(void *)p_collectionViewFlags = v95;
  if ((v93 & 0x700000000) != 0)
  {
    int v96 = v91 | (v90 << 16);
    unint64_t v97 = v95 & 0xFFFF87C7FFFFFFFFLL;
  }
  else
  {
    char v98 = objc_opt_respondsToSelector();
    uint64_t v99 = 0x800000000;
    if ((v98 & 1) == 0) {
      uint64_t v99 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFF7FFFFFFFFLL | v99;
    char v100 = objc_opt_respondsToSelector();
    uint64_t v101 = 0x1000000000;
    if ((v100 & 1) == 0) {
      uint64_t v101 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFEFFFFFFFFFLL | v101;
    char v102 = objc_opt_respondsToSelector();
    uint64_t v103 = 0x2000000000;
    if ((v102 & 1) == 0) {
      uint64_t v103 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFFFDFFFFFFFFFLL | v103;
    if (!_os_feature_enabled_impl() || !_UIIsPrivateMainBundle()) {
      goto LABEL_115;
    }
    char v104 = objc_opt_respondsToSelector();
    uint64_t v105 = 0x80000000000;
    if ((v104 & 1) == 0) {
      uint64_t v105 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFF7FFFFFFFFFFLL | v105;
    char v106 = objc_opt_respondsToSelector();
    uint64_t v107 = 0x100000000000;
    if ((v106 & 1) == 0) {
      uint64_t v107 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFEFFFFFFFFFFFLL | v107;
    char v108 = objc_opt_respondsToSelector();
    uint64_t v109 = 0x200000000000;
    if ((v108 & 1) == 0) {
      uint64_t v109 = 0;
    }
    *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFFDFFFFFFFFFFFLL | v109;
    char v110 = objc_opt_respondsToSelector();
    int v96 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v92 = *((void *)&self->_collectionViewFlags + 1);
    uint64_t v111 = 0x400000000000;
    if ((v110 & 1) == 0) {
      uint64_t v111 = 0;
    }
    unint64_t v97 = *(void *)p_collectionViewFlags & 0xFFFFBFFFFFFFFFFFLL | v111;
  }
  *(void *)p_collectionViewFlags = v97;
  *((void *)&self->_collectionViewFlags + 1) = v92;
  *((_WORD *)&self->_collectionViewFlags + 8) = v96;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v96);
LABEL_115:
  char v112 = objc_opt_respondsToSelector();
  uint64_t v113 = 0x800000000000;
  if ((v112 & 1) == 0) {
    uint64_t v113 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFF7FFFFFFFFFFFLL | v113;
  char v114 = objc_opt_respondsToSelector();
  uint64_t v115 = 0x1000000000000;
  if ((v114 & 1) == 0) {
    uint64_t v115 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFEFFFFFFFFFFFFLL | v115;
  char v116 = objc_opt_respondsToSelector();
  uint64_t v117 = 0x4000000000000;
  if ((v116 & 1) == 0) {
    uint64_t v117 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFBFFFFFFFFFFFFLL | v117;
  char v118 = objc_opt_respondsToSelector();
  uint64_t v119 = 0x2000000000000;
  if ((v118 & 1) == 0) {
    uint64_t v119 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFFDFFFFFFFFFFFFLL | v119;
  char v120 = objc_opt_respondsToSelector();
  uint64_t v121 = 0x20000000000000;
  if ((v120 & 1) == 0) {
    uint64_t v121 = 0;
  }
  *(void *)p_collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFDFFFFFFFFFFFFFLL | v121;
  [(UICollectionView *)self _configureContextMenuInteractionIfNeeded];
  [(UICollectionView *)self _configureSceneActivationInteractionIfNeeded];
LABEL_126:
}

- (void)setDataSource:(id)dataSource
{
  id v4 = dataSource;
  if (!v4)
  {
LABEL_7:
    BOOL v6 = 0;
    goto LABEL_8;
  }
  char v5 = dyld_program_sdk_at_least();
  BOOL v6 = v4;
  if ((v5 & 1) == 0)
  {
    unsigned __int8 v7 = objc_msgSend(v4, sel_allowsWeakReference);
    BOOL v6 = v4;
    if ((v7 & 1) == 0)
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __34__UICollectionView_setDataSource___block_invoke;
      block[3] = &unk_1E52D9F98;
      id v71 = v4;
      uint64_t v72 = self;
      if (setDataSource__once != -1) {
        dispatch_once(&setDataSource__once, block);
      }

      goto LABEL_7;
    }
  }
LABEL_8:
  id v8 = v6;

  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  id v10 = WeakRetained;
  if (WeakRetained != v8 || !v8 && (*((void *)&self->_collectionViewFlags + 1) & 2) != 0)
  {
    if (WeakRetained) {
      objc_setAssociatedObject(WeakRetained, (char *)&self->super.super.super.super.isa + 2, 0, (void *)1);
    }
    objc_storeWeak((id *)&self->_dataSource, v8);
    id v11 = v8;
    id v12 = [(UICollectionView *)self dataSource];
    if (v11 == v12)
    {
      unsigned int v15 = [(UICollectionView *)self allowsWeakReference];

      BOOL v13 = v11 == 0;
      uint64_t v14 = 2 * (v11 != 0);
      if (v11 && v15)
      {
        objc_initWeak(&location, self);
        char v16 = [_UIWeakHelper alloc];
        uint64_t v64 = MEMORY[0x1E4F143A8];
        uint64_t v65 = 3221225472;
        uint64_t v66 = __34__UICollectionView_setDataSource___block_invoke_239;
        char v67 = &unk_1E52DC308;
        objc_copyWeak(&v68, &location);
        uint64_t v17 = [(_UIWeakHelper *)v16 initWithDeallocationBlock:&v64];
        objc_setAssociatedObject(v11, (char *)&self->super.super.super.super.isa + 2, v17, (void *)1);

        objc_destroyWeak(&v68);
        objc_destroyWeak(&location);
        BOOL v13 = 0;
        uint64_t v14 = 2;
      }
    }
    else
    {

      BOOL v13 = v11 == 0;
      uint64_t v14 = 2 * (v11 != 0);
    }

    p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
    int v19 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    unint64_t v20 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFFDLL | v14;
    *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v20;
    *((_WORD *)&self->_collectionViewFlags + 8) = v19;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v19);
    char v21 = objc_opt_respondsToSelector();
    uint64_t v22 = 0x40000000000000;
    if ((v21 & 1) == 0) {
      uint64_t v22 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xFFBFFFFFFFFFFFFFLL | v22;
    char v23 = objc_opt_respondsToSelector();
    uint64_t v24 = 0x80000000000000;
    if ((v23 & 1) == 0) {
      uint64_t v24 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xFF7FFFFFFFFFFFFFLL | v24;
    char v25 = objc_opt_respondsToSelector();
    uint64_t v26 = 0x100000000000000;
    if ((v25 & 1) == 0) {
      uint64_t v26 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xFEFFFFFFFFFFFFFFLL | v26;
    char v27 = objc_opt_respondsToSelector();
    uint64_t v28 = 0x200000000000000;
    if ((v27 & 1) == 0) {
      uint64_t v28 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xFDFFFFFFFFFFFFFFLL | v28;
    char v29 = objc_opt_respondsToSelector();
    uint64_t v30 = 0x2000000000000000;
    if ((v29 & 1) == 0) {
      uint64_t v30 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xDFFFFFFFFFFFFFFFLL | v30;
    char v31 = objc_opt_respondsToSelector();
    uint64_t v32 = 0x4000000000000000;
    if ((v31 & 1) == 0) {
      uint64_t v32 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xBFFFFFFFFFFFFFFFLL | v32;
    char v33 = objc_opt_respondsToSelector();
    uint64_t v34 = 0x400000000000000;
    if ((v33 & 1) == 0) {
      uint64_t v34 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xFBFFFFFFFFFFFFFFLL | v34;
    char v35 = objc_opt_respondsToSelector();
    uint64_t v36 = 0x800000000000000;
    if ((v35 & 1) == 0) {
      uint64_t v36 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xF7FFFFFFFFFFFFFFLL | v36;
    char v37 = objc_opt_respondsToSelector();
    uint64_t v38 = 0x1000000000000000;
    if ((v37 & 1) == 0) {
      uint64_t v38 = 0;
    }
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags & 0xEFFFFFFFFFFFFFFFLL | v38;
    if (dyld_program_sdk_at_least())
    {
      char v39 = objc_opt_respondsToSelector();
      unint64_t v40 = 0x8000000000000000;
      if ((v39 & 1) == 0) {
        unint64_t v40 = 0;
      }
      *(void *)p_uint64_t collectionViewFlags = v40 & 0x8000000000000000 | *(void *)p_collectionViewFlags & 0x7FFFFFFFFFFFFFFFLL;
      char v41 = objc_opt_respondsToSelector();
      int v42 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                      + 18) << 16);
      uint64_t v43 = *(void *)p_collectionViewFlags;
      unint64_t v44 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFFELL | ((v41 & 1) != 0);
    }
    else
    {
      int v42 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                      + 18) << 16);
      unint64_t v44 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v43 = *(void *)p_collectionViewFlags & 0x7FFFFFFFFFFFFFFFLL;
    }
    char v45 = &self->_collectionViewFlags;
    *(void *)&self->_uint64_t collectionViewFlags = v43;
    *((void *)&self->_collectionViewFlags + 1) = v44;
    *((_WORD *)&self->_collectionViewFlags + 8) = v42;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v42);
    char v46 = objc_opt_respondsToSelector();
    uint64_t v47 = 4;
    if ((v46 & 1) == 0) {
      uint64_t v47 = 0;
    }
    *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFFBLL | v47;
    char v48 = objc_opt_respondsToSelector();
    uint64_t v49 = 8;
    if ((v48 & 1) == 0) {
      uint64_t v49 = 0;
    }
    *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFF7 | v49;
    int v50 = dyld_program_sdk_at_least();
    int v51 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t collectionViewFlags = *(void *)v45;
    unint64_t v53 = *((void *)&self->_collectionViewFlags + 1);
    if (v50 && (v53 & 4) != 0)
    {
      if (objc_opt_respondsToSelector())
      {
        id v54 = v11;
        *(void *)&self->_uint64_t collectionViewFlags = *(void *)&self->_collectionViewFlags & 0xBFFFFFFFFFFFFFFFLL | (((*(void *)&self->_collectionViewFlags >> 62) & [v54 _subclassOverridesMethodWithSelector:sel_collectionView_moveItemAtIndexPath_toIndexPath_] & 1) << 62);
        *(void *)&self->_uint64_t collectionViewFlags = *(void *)&self->_collectionViewFlags & 0xDFFFFFFFFFFFFFFFLL | (((*(void *)&self->_collectionViewFlags >> 61) & [v54 _subclassOverridesMethodWithSelector:sel_collectionView_canMoveItemAtIndexPath_] & 1) << 61);
        *(void *)&self->_uint64_t collectionViewFlags = *(void *)&self->_collectionViewFlags & 0x7FFFFFFFFFFFFFFFLL | ((unint64_t)((*(void *)&self->_collectionViewFlags < 0) & [v54 _subclassOverridesMethodWithSelector:sel_indexTitlesForCollectionView_]) << 63);
        int v55 = [v54 _subclassOverridesMethodWithSelector:sel_collectionView_indexPathForIndexTitle_atIndex_];

        int v51 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                        + 18) << 16);
        uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
        unint64_t v53 = *((void *)&self->_collectionViewFlags + 1) & v55 | *((void *)&self->_collectionViewFlags
                                                                                 + 1) & 0xFFFFFFFFFFFFFFFELL;
        *((void *)&self->_collectionViewFlags + 1) = v53;
      }
      else
      {
        int v51 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                        + 18) << 16);
        uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
        unint64_t v53 = *((void *)&self->_collectionViewFlags + 1);
      }
    }
    *(void *)char v45 = collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v53 | 0x10000000;
    *((_WORD *)&self->_collectionViewFlags + 8) = v51;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v51);
    -[_UICollectionViewDragAndDropController didUpdateDataSource]((uint64_t)self->_dragAndDropController);
    if (dyld_program_sdk_at_least())
    {
      int v56 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
      int v57 = v56 | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
      if ((v56 & 0x400) != 0)
      {
        unint64_t v58 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFEFFFFFFFFLL;
        *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
        *((void *)&self->_collectionViewFlags + 1) = v58;
        *((_WORD *)&self->_collectionViewFlags + 8) = v57;
        *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v57);
      }
    }
    if (!v13 || (dyld_program_sdk_at_least() & 1) == 0)
    {
      if ([(UICollectionViewLayout *)self->_layout _shouldInvalidateLayoutForDataSourceChange])
      {
        [(UICollectionView *)self _invalidateLayoutForReload];
      }
      else
      {
        [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
      }
    }
    if (dyld_program_sdk_at_least())
    {
      -[_UICollectionViewSelectionController reset]((uint64_t)self->_selectionController);
      [(_UICollectionViewMultiSelectController *)self->_multiSelectController clearSelectionState];
    }
    if ([(UICollectionView *)self _wantsIndexOverlays])
    {
      uint64_t v59 = [(UIView *)self window];
      if (v59)
      {
        uint64_t v60 = (void *)v59;
        char v61 = [(UICollectionView *)self _indexOverlayManager];

        if (!v61)
        {
          [(UICollectionView *)self _setupIndexOverlayManagerIfNecessary];
          uint64_t v62 = [(UICollectionView *)self _indexOverlayManager];
          char v63 = [(UIView *)self window];
          -[_UICollectionTableIndexOverlayManager hostDidMoveToWindow:]((uint64_t)v62, v63);
        }
      }
    }
  }
}

- (id)dataSource
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  return WeakRetained;
}

- (BOOL)_wantsIndexOverlays
{
  id v3 = [(UIView *)self traitCollection];
  if ([v3 userInterfaceIdiom] == 3
    && (*(void *)&self->_collectionViewFlags & 0x8000000000000000) != 0)
  {
    BOOL v4 = *((void *)&self->_collectionViewFlags + 1) & 1;
  }
  else
  {
    LOBYTE(v4) = 0;
  }

  return v4;
}

- (BOOL)_dragAndDropNeededForReordering
{
  int v3 = dyld_program_sdk_at_least();
  if (v3) {
    LOBYTE(v3) = *(void *)&self->_collectionViewFlags & 0x4000000000000000 | *((void *)&self->_collectionViewFlags
  }
                                                                                 + 1) & 4
              && (dragAndDropController = self->_dragAndDropController) != 0
              && dragAndDropController->_preferredDragDestinationVisualStyle == 2;
  return v3;
}

- (id)dropDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dropDelegate);
  return WeakRetained;
}

- (id)dragDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDelegate);
  return WeakRetained;
}

- (id)dragSourceDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragSourceDelegate);
  return WeakRetained;
}

- (id)dragDestinationDelegate
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDestinationDelegate);
  return WeakRetained;
}

- (void)_configureSceneActivationInteractionIfNeeded
{
  uint64_t v3 = *(void *)&self->_collectionViewFlags & 0x1800000000000;
  int v4 = [(id)UIApp supportsMultipleScenes];
  sceneActivationInteractiouint64_t n = self->_sceneActivationInteraction;
  if (v4) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if (sceneActivationInteraction)
    {
      -[UIView removeInteraction:](self, "removeInteraction:");
      unsigned __int8 v7 = self->_sceneActivationInteraction;
      self->_sceneActivationInteractiouint64_t n = 0;
    }
  }
  else if (!sceneActivationInteraction)
  {
    objc_initWeak(&location, self);
    id v8 = [UIWindowSceneActivationInteraction alloc];
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 3221225472;
    BOOL v13 = __64__UICollectionView__configureSceneActivationInteractionIfNeeded__block_invoke;
    uint64_t v14 = &unk_1E52E5D68;
    objc_copyWeak(&v15, &location);
    id v9 = [(UIWindowSceneActivationInteraction *)v8 initWithConfigurationProvider:&v11 errorHandler:&__block_literal_global_1107];
    id v10 = self->_sceneActivationInteraction;
    self->_sceneActivationInteractiouint64_t n = v9;

    -[UIView addInteraction:](self, "addInteraction:", self->_sceneActivationInteraction, v11, v12, v13, v14);
    objc_destroyWeak(&v15);
    objc_destroyWeak(&location);
  }
}

- (void)_configureContextMenuInteractionIfNeeded
{
  BOOL v3 = [(UICollectionView *)self _delegateSupportsMenuInteraction];
  contextMenuInteractiouint64_t n = self->_contextMenuInteraction;
  if (v3)
  {
    if (!contextMenuInteraction)
    {
      char v5 = [[UIContextMenuInteraction alloc] initWithDelegate:self];
      BOOL v6 = self->_contextMenuInteraction;
      self->_contextMenuInteractiouint64_t n = v5;

      unsigned __int8 v7 = self->_contextMenuInteraction;
      [(UIView *)self addInteraction:v7];
    }
  }
  else if (contextMenuInteraction)
  {
    -[UIView removeInteraction:](self, "removeInteraction:");
    id v8 = self->_contextMenuInteraction;
    self->_contextMenuInteractiouint64_t n = 0;
  }
}

- (BOOL)_delegateSupportsMenuInteraction
{
  return (*(void *)&self->_collectionViewFlags & 0x180900000000) != 0;
}

- (BOOL)dragInteractionEnabled
{
  dragAndDropController = self->_dragAndDropController;
  return dragAndDropController && dragAndDropController->_dragInteractionEnabled;
}

- (BOOL)_allowsMultipleSelectionDuringEditing
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 14) & 1;
}

- (BOOL)_updateWithItems:(id)a3 tentativelyForReordering:(BOOL)a4 propertyAnimator:(id)a5 collectionViewAnimator:(id)a6
{
  uint64_t v209 = *MEMORY[0x1E4F143B8];
  id v149 = a3;
  id v8 = a5;
  id v148 = a6;
  BOOL v9 = +[UIView areAnimationsEnabled];
  int v10 = dyld_program_sdk_at_least() ^ 1;
  uint64_t v11 = v10 & v9;
  if (v10)
  {
    uint64_t v12 = self;
  }
  else
  {
    uint64_t v12 = self;
    if (v9)
    {
      BOOL v13 = [(UIView *)self window];
      uint64_t v11 = v13 != 0;
    }
  }
  int v152 = v11;
  [(UICollectionView *)v12 _prepareLayoutForUpdates:v11];
  currentUpdate = v12->_currentUpdate;
  if (currentUpdate) {
    *(unsigned char *)&currentUpdate->_flags |= 1u;
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke;
  aBlock[3] = &unk_1E52E5E90;
  void aBlock[4] = v12;
  id v15 = (void (**)(void *, void))_Block_copy(aBlock);
  subviewManager = v12->_subviewManager;
  if (subviewManager)
  {
    visibleViews = subviewManager->_visibleViews;
    if (visibleViews) {
      visibleViews->_indexPathValidationEnabled = 0;
    }
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258B78);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    v133 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR))
    {
      uint64_t v134 = v12->_currentUpdate;
      *(_DWORD *)v205 = 134218242;
      char v206 = v12;
      __int16 v207 = 2112;
      v208 = (NSIndexPath *)v134;
      _os_log_impl(&dword_1853B0000, v133, OS_LOG_TYPE_ERROR, "[UICV %p] _updateWithItems: Processing update %@", v205, 0x16u);
    }
  }
  [(UICollectionView *)v12 _rebasePrefetchedCellIndexPathsWithMapping:v15];
  [(UICollectionView *)v12 _resignOrRebaseFirstResponderViewWithIndexPathMapping:v15];
  [(UICollectionView *)v12 _resetOrRebaseFocusedItemForCurrentUpdateWithIndexPathMapping:v15];
  uint64_t v151 = [(UICollectionView *)v12 _identityTracker:0];
  if (v151)
  {
    int v19 = [(UICollectionView *)v12 contextMenuInteraction];
    unint64_t v20 = [v19 _internalIdentifiersForDismissingMenu];

    long long v186 = 0u;
    long long v187 = 0u;
    long long v184 = 0u;
    long long v185 = 0u;
    id v21 = v20;
    uint64_t v22 = [v21 countByEnumeratingWithState:&v184 objects:v196 count:16];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)v185;
      while (2)
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          if (*(void *)v185 != v24) {
            objc_enumerationMutation(v21);
          }
          uint64_t v26 = *(void *)(*((void *)&v184 + 1) + 8 * i);
          char v27 = -[_UIIndexPathIdentityTracker currentIndexPathForIdentifier:]((uint64_t)v151, v26);
          if (v27)
          {
            uint64_t v28 = [(UICollectionViewUpdate *)self->_currentUpdate finalIndexPathForInitialIndexPath:v27];

            if (!v28)
            {
              char v29 = [(UICollectionView *)self contextMenuInteraction];
              [v29 _retargetDismissingMenuWithInternalIdentifier:v26 toPreview:0 force:0];

              goto LABEL_23;
            }
          }
        }
        uint64_t v23 = [v21 countByEnumeratingWithState:&v184 objects:v196 count:16];
        if (v23) {
          continue;
        }
        break;
      }
    }
LABEL_23:

    -[_UIIndexPathIdentityTracker updateWithUpdateItems:]((uint64_t)v151, v149);
    uint64_t v12 = self;
  }
  uint64_t v30 = ((void (**)(void *, NSIndexPath *))v15)[2](v15, v12->_pendingSelectionIndexPath);
  pendingSelectionIndexPath = v12->_pendingSelectionIndexPath;
  v12->_pendingSelectionIndexPath = (NSIndexPath *)v30;

  uint64_t v32 = v12->_selectionController;
  uint64_t v33 = (uint64_t)v32;
  uint64_t v34 = v12;
  if (v32) {
    uint64_t v35 = [(NSMutableSet *)v32->_selectedIndexPaths copy];
  }
  else {
    uint64_t v35 = 0;
  }
  if ([(UICollectionView *)v12 _isConnectedToDiffableDataSource])
  {
    uint64_t v36 = [(UICollectionView *)v12 _diffableDataSourceImpl];
    char v37 = [v36 currentTransaction];
    uint64_t v38 = v37;
    if (v36 && v37)
    {
      char v39 = -[_UICollectionViewSelectionController rebaseItemsWithDiffableTransaction:](v33, v37);

      uint64_t v34 = self;
      if (v39) {
        goto LABEL_33;
      }
    }
    else
    {

      uint64_t v34 = self;
    }
  }
  -[_UICollectionViewSelectionController rebaseItemsWithTranslator:](v33, v34->_currentUpdate);
LABEL_33:
  if (!v33 || ([*(id *)(v33 + 8) isEqualToSet:v35] & 1) == 0) {
    [(_UICollectionViewMultiSelectController *)v34->_multiSelectController clearSelectionState];
  }
  BOOL v146 = (void *)v35;
  v147 = (void *)v33;
  if (v34->_pendingDeselectionIndexPaths)
  {
    unint64_t v40 = (NSMutableSet *)objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithCapacity:", -[NSMutableSet count](v34->_pendingDeselectionIndexPaths, "count"));
    long long v180 = 0u;
    long long v181 = 0u;
    long long v182 = 0u;
    long long v183 = 0u;
    char v41 = v34->_pendingDeselectionIndexPaths;
    uint64_t v42 = [(NSMutableSet *)v41 countByEnumeratingWithState:&v180 objects:v195 count:16];
    if (v42)
    {
      uint64_t v43 = v42;
      uint64_t v44 = *(void *)v181;
      do
      {
        for (uint64_t j = 0; j != v43; ++j)
        {
          if (*(void *)v181 != v44) {
            objc_enumerationMutation(v41);
          }
          char v46 = v15[2](v15, *(void *)(*((void *)&v180 + 1) + 8 * j));
          if (v46) {
            [(NSMutableSet *)v40 addObject:v46];
          }
        }
        uint64_t v43 = [(NSMutableSet *)v41 countByEnumeratingWithState:&v180 objects:v195 count:16];
      }
      while (v43);
    }

    uint64_t v34 = self;
    pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = v40;
  }
  [(UICollectionView *)v34 _reloadSectionIndexTitles];
  [(UICollectionView *)v34 _clearNeedsRecomputePreferredAttributesForInvalidatedElements];
  collectionViewData = self->_collectionViewData;
  [(UIScrollView *)self visibleBounds];
  -[UICollectionViewData validateLayoutInRect:]((uint64_t)collectionViewData, v49, v50, v51, v52);
  [(UICollectionView *)self _computeVisibleContentOffsetForUpdate:self->_currentUpdate usingData:self->_collectionViewData];
  -[UICollectionView _clearSpecificInvalidationLists](self);
  unint64_t v53 = self;
  if ((*((_WORD *)&self->_collectionViewFlags + 8) & 0x1000) != 0
    || +[UIView areAnimationsEnabled])
  {
    unint64_t v54 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B80);
    if (*(unsigned char *)v54)
    {
      CGRect v135 = *(NSObject **)(v54 + 8);
      if (os_log_type_enabled(v135, OS_LOG_TYPE_ERROR))
      {
        contentOffsetRestorationAnchor = self->_contentOffsetRestorationAnchor;
        *(_DWORD *)v205 = 134218242;
        char v206 = self;
        __int16 v207 = 2112;
        v208 = contentOffsetRestorationAnchor;
        _os_log_impl(&dword_1853B0000, v135, OS_LOG_TYPE_ERROR, "_updateWithItems: cv == %p; Attempting to rebase anchor for %@",
          v205,
          0x16u);
      }
    }
    [(UICollectionView *)self _rebaseContentOffsetAnchorOrScrollTargetForUpdate:self->_currentUpdate];
  }
  BOOL v145 = [(UICollectionView *)self _reviseNewContentOffsetForUpdate:self->_currentUpdate];
  int64_t didScrollNotificationSuspensionCount = self->_didScrollNotificationSuspensionCount;
  if (!didScrollNotificationSuspensionCount)
  {
    [(UIScrollView *)self contentOffset];
    self->_contentOffsetWhenScrollNotificationsSuspended.double x = v56;
    self->_contentOffsetWhenScrollNotificationsSuspended.double y = v57;
    unint64_t v53 = self;
  }
  v53->_int64_t didScrollNotificationSuspensionCount = didScrollNotificationSuspensionCount + 1;
  if (v152)
  {
    unint64_t v58 = -[UIViewAnimationContext initWithCompletionHandler:]([UIViewAnimationContext alloc], self->_updateCompletionHandler);
    id updateCompletionHandler = self->_updateCompletionHandler;
    self->_id updateCompletionHandler = 0;

    uint64_t v60 = self->_currentUpdate;
    if (v60) {
      *(unsigned char *)&v60->_flags |= 2u;
    }
    v176[0] = MEMORY[0x1E4F143A8];
    v176[1] = 3221225472;
    v176[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_923;
    v176[3] = &unk_1E52DD450;
    v176[4] = self;
    id v177 = v148;
    id v61 = v149;
    id v178 = v61;
    uint64_t v62 = v58;
    id v179 = v62;
    +[UIView performWithoutAnimation:v176];
    char v63 = [(UICollectionViewLayout *)self->_layout _propertyAnimatorForCollectionViewUpdates:v61 withCustomAnimator:v8];

    if (v63) {
      dispatch_group_t v150 = dispatch_group_create();
    }
    else {
      dispatch_group_t v150 = 0;
    }
    uint64_t v109 = (void *)[v63 copy];
    id v8 = (id)[v63 copy];
    long long v172 = 0u;
    long long v173 = 0u;
    long long v174 = 0u;
    long long v175 = 0u;
    char v110 = [v63 _animations];
    uint64_t v111 = [v110 countByEnumeratingWithState:&v172 objects:v194 count:16];
    if (v111)
    {
      uint64_t v112 = v111;
      uint64_t v113 = *(void *)v173;
      do
      {
        for (uint64_t k = 0; k != v112; ++k)
        {
          if (*(void *)v173 != v113) {
            objc_enumerationMutation(v110);
          }
          uint64_t v115 = (void *)[*(id *)(*((void *)&v172 + 1) + 8 * k) copy];
          [v8 addAnimations:v115];
        }
        uint64_t v112 = [v110 countByEnumeratingWithState:&v172 objects:v194 count:16];
      }
      while (v112);
    }

    long long v170 = 0u;
    long long v171 = 0u;
    long long v168 = 0u;
    long long v169 = 0u;
    char v116 = [v63 _completions];
    uint64_t v117 = [v116 countByEnumeratingWithState:&v168 objects:v193 count:16];
    if (v117)
    {
      uint64_t v118 = v117;
      uint64_t v119 = *(void *)v169;
      do
      {
        for (uint64_t m = 0; m != v118; ++m)
        {
          if (*(void *)v169 != v119) {
            objc_enumerationMutation(v116);
          }
          uint64_t v121 = (void *)[*(id *)(*((void *)&v168 + 1) + 8 * m) copy];
          [v8 addCompletion:v121];
        }
        uint64_t v118 = [v116 countByEnumeratingWithState:&v168 objects:v193 count:16];
      }
      while (v118);
    }

    v163[0] = MEMORY[0x1E4F143A8];
    v163[1] = 3221225472;
    v163[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2;
    v163[3] = &unk_1E52E5B08;
    v163[4] = self;
    objc_super v122 = v62;
    id v164 = v122;
    id v123 = v109;
    id v165 = v123;
    id v124 = v150;
    uint64_t v166 = v124;
    BOOL v167 = v145;
    long long v125 = _Block_copy(v163);
    v161[0] = MEMORY[0x1E4F143A8];
    v161[1] = 3221225472;
    v161[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_925;
    v161[3] = &unk_1E52DA660;
    v161[4] = self;
    char v104 = v122;
    id v162 = v104;
    long long v126 = _Block_copy(v161);
    if (v8)
    {
      [v8 addAnimations:v125];
      [v8 startAnimation];
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2_926;
      block[3] = &unk_1E52DA040;
      id v160 = v126;
      dispatch_group_notify(v124, MEMORY[0x1E4F14428], block);
    }
    else
    {
      if (dyld_program_sdk_at_least()) {
        uint64_t v127 = 6;
      }
      else {
        uint64_t v127 = 4;
      }
      +[UIView animateWithDuration:v127 delay:v125 options:v126 animations:0.3 completion:0.0];
    }

    LOBYTE(v63) = 0;
    uint64_t v93 = v146;
    uint64_t v92 = v147;
    goto LABEL_130;
  }
  unint64_t v64 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B88);
  if (*(unsigned char *)v64)
  {
    CGRect v137 = *(NSObject **)(v64 + 8);
    if (os_log_type_enabled(v137, OS_LOG_TYPE_ERROR))
    {
      CGRect v138 = v53->_currentUpdate;
      *(_DWORD *)v205 = 134218242;
      char v206 = v53;
      __int16 v207 = 2112;
      v208 = (NSIndexPath *)v138;
      _os_log_impl(&dword_1853B0000, v137, OS_LOG_TYPE_ERROR, "_updateWithItems: cv == %p; performing update without animations. Update: %@",
        v205,
        0x16u);
    }
  }
  indexPathsRequiringPreferredAttributes = v53->_indexPathsRequiringPreferredAttributes;
  v53->_indexPathsRequiringPreferredAttributes = 0;

  uint64_t v66 = v53->_currentUpdate;
  CGRect v144 = v66;
  if (!v66)
  {
    CGRect v139 = [MEMORY[0x1E4F28B00] currentHandler];
    [v139 handleFailureInMethod:sel__updateSubviewManagerForCurrentUpdateWithoutAnimationsReusingDeletedViews, v53, @"UICollectionView.m", 12626, @"Invalid parameter not satisfying: %@", @"currentUpdate != nil" object file lineNumber description];
LABEL_142:

    goto LABEL_61;
  }
  if ((*(unsigned char *)&v66->_flags & 2) != 0)
  {
    CGRect v139 = [MEMORY[0x1E4F28B00] currentHandler];
    [v139 handleFailureInMethod:sel__updateSubviewManagerForCurrentUpdateWithoutAnimationsReusingDeletedViews, v53, @"UICollectionView.m", 12627, @"UICollectionView internal inconsistency: attempted to reuse deleted views for an update which is not animated. Collection view: %@", v53 object file lineNumber description];
    goto LABEL_142;
  }
LABEL_61:
  char v67 = objc_alloc_init(_UICollectionViewSubviewCollection);
  id v68 = objc_opt_new();
  p_isa = (id *)&v67->super.isa;
  [(UICollectionView *)v53 _populateSubviewCollectionWithExistingVisibleViewsForCurrentUpdate:v67 addingDeletedViewsToSet:v68 updateLayoutAttributesIndexPaths:1];
  char v69 = self->_focusedItemState;
  uint64_t v70 = self;
  v153 = self->_firstResponderView;
  long long v189 = 0u;
  long long v190 = 0u;
  long long v191 = 0u;
  long long v192 = 0u;
  id v71 = v68;
  uint64_t v72 = [v71 countByEnumeratingWithState:&v189 objects:v205 count:16];
  if (!v72) {
    goto LABEL_95;
  }
  uint64_t v73 = v72;
  uint64_t v74 = *(void *)v190;
  do
  {
    uint64_t v75 = 0;
    do
    {
      if (*(void *)v190 != v74) {
        objc_enumerationMutation(v71);
      }
      uint64_t v76 = *(UICollectionReusableView **)(*((void *)&v189 + 1) + 8 * v75);
      if (![(UICollectionView *)v70 _viewIsReorderedCell:v76])
      {
        if ([(UICollectionReusableView *)v76 _isInUpdateAnimation])
        {
          [(UICollectionReusableView *)v76 _setHiddenForReuse:1];
          goto LABEL_87;
        }
        if (v69)
        {
          char v77 = v69->_reusableView;

          if (v76 == v77)
          {
            uint64_t v78 = [MEMORY[0x1E4F28B00] currentHandler];
            char v79 = [(UICollectionReusableView *)v76 _layoutAttributes];
            [v78 handleFailureInMethod:sel__updateSubviewManagerForCurrentUpdateWithoutAnimationsReusingDeletedViews object:self file:v76 lineNumber:v79 description:v69];
          }
        }
        if (v153 && v76 == v153)
        {
          char v87 = [MEMORY[0x1E4F28B00] currentHandler];
          uint64_t v88 = [(UICollectionReusableView *)v153 _layoutAttributes];
          objc_msgSend(v87, "handleFailureInMethod:object:file:lineNumber:description:", sel__updateSubviewManagerForCurrentUpdateWithoutAnimationsReusingDeletedViews, self, v153, v88);
        }
        uint64_t v80 = [(UICollectionReusableView *)v76 _layoutAttributes];
        char v81 = (void *)v80;
        if (v80)
        {
          uint64_t v70 = self;
          if ((*(_WORD *)(v80 + 288) & 1) == 0)
          {
            if ([(UICollectionView *)self _reuseSupplementaryView:v76]) {
              goto LABEL_86;
            }
LABEL_84:
            unint64_t v86 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258BA0);
            if (*(unsigned char *)v86)
            {
              int v90 = *(NSObject **)(v86 + 8);
              if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 134218754;
                v198 = self;
                __int16 v199 = 2112;
                v200 = v76;
                __int16 v201 = 2112;
                v202 = v81;
                __int16 v203 = 2112;
                v204 = v144;
                char v83 = v90;
                uint64_t v84 = "_createNewSubviewManagerForUpdateWithoutAnimations: cv == %p; forcibly removing view: %@; with att"
                      "ributes: %@; for update: %@";
                uint32_t v85 = 42;
LABEL_82:
                _os_log_impl(&dword_1853B0000, v83, OS_LOG_TYPE_ERROR, v84, buf, v85);
              }
            }
            goto LABEL_85;
          }
          if (![(UICollectionView *)self _reuseCell:v76 notifyDidEndDisplaying:1])goto LABEL_84; {
        }
          }
        else
        {
          if (os_variant_has_internal_diagnostics())
          {
            char v89 = __UIFaultDebugAssertLog();
            if (os_log_type_enabled(v89, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412546;
              v198 = self;
              __int16 v199 = 2112;
              v200 = v76;
              _os_log_fault_impl(&dword_1853B0000, v89, OS_LOG_TYPE_FAULT, "UICollectionView internal bug: non-animated batch update forcibly removing deleted view without layout attributes. Collection view:  %@; view: %@",
                buf,
                0x16u);
            }
          }
          else
          {
            uint64_t v82 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258B98) + 8);
            if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412546;
              v198 = self;
              __int16 v199 = 2112;
              v200 = v76;
              char v83 = v82;
              uint64_t v84 = "UICollectionView internal bug: non-animated batch update forcibly removing deleted view without layo"
                    "ut attributes. Collection view:  %@; view: %@";
              uint32_t v85 = 22;
              goto LABEL_82;
            }
          }
LABEL_85:
          [(UIView *)v76 removeFromSuperview];
          uint64_t v70 = self;
        }
LABEL_86:
      }
LABEL_87:
      ++v75;
    }
    while (v73 != v75);
    uint64_t v91 = [v71 countByEnumeratingWithState:&v189 objects:v205 count:16];
    uint64_t v73 = v91;
  }
  while (v91);
LABEL_95:

  -[_UICollectionViewSubviewManager replaceVisibleViewsWithoutCopyingWithContentsOfSubviewCollection:]((uint64_t)v70->_subviewManager, p_isa);
  uint64_t v93 = v146;
  uint64_t v92 = v147;
  if (v145)
  {
    uint64_t v94 = v70->_currentUpdate;
    double x = v94->_newContentOffset.x;
    double y = v94->_newContentOffset.y;
    unint64_t v97 = (unsigned __int16 *)((char *)&v70->_collectionViewFlags + 16);
    int v98 = *((unsigned __int16 *)&v70->_collectionViewFlags + 8) | (*((unsigned __int8 *)&v70->_collectionViewFlags + 18) << 16);
    *unint64_t v97 = v98;
    *((unsigned char *)v97 + 2) = (v98 | 0x20000u) >> 16;
    -[UICollectionView setContentOffset:](self, "setContentOffset:", x, y);
    int v99 = v98 & 0x20000;
    uint64_t v70 = self;
    int v100 = *v97;
    unsigned int v101 = ((v100 | (*((unsigned __int8 *)v97 + 2) << 16)) & 0xFFFDFFFF | v99) >> 16;
    *unint64_t v97 = v100;
    *((unsigned char *)v97 + 2) = v101;
    if ([(UIScrollView *)self isDecelerating])
    {
      unint64_t v102 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258B90);
      if (*(unsigned char *)v102)
      {
        CGRect v140 = *(NSObject **)(v102 + 8);
        if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR))
        {
          CGRect v141 = v140;
          [(UIScrollView *)self contentOffset];
          NSStringFromCGPoint(v210);
          CGRect v142 = (NSIndexPath *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v205 = 134218242;
          char v206 = self;
          __int16 v207 = 2112;
          v208 = v142;
          _os_log_impl(&dword_1853B0000, v141, OS_LOG_TYPE_ERROR, "_updateWithItems: cv == %p updating decel last offset to %@", v205, 0x16u);

          uint64_t v70 = self;
        }
      }
      [(UIScrollView *)v70 contentOffset];
      -[UIScrollView _updateDecelerationLastOffset:](v70, "_updateDecelerationLastOffset:");
    }
  }
  -[UICollectionView _resumeDidScrollNotifications]((CGFloat *)v70);
  -[UICollectionViewData finalizeCollectionViewUpdates]((uint64_t)v70->_collectionViewData);
  [(UICollectionViewLayout *)v70->_layout _finalizeCollectionViewUpdate:v70->_currentUpdate];
  [(UICollectionView *)v70 _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  uint64_t v103 = v70;
  char v104 = _Block_copy(v70->_updateCompletionHandler);
  id v105 = v103->_updateCompletionHandler;
  v103->_id updateCompletionHandler = 0;

  if ((*((void *)&v103->_collectionViewFlags + 1) & 4) != 0)
  {
    char v108 = [(UIView *)v103 window];
    if (v108) {
      LOBYTE(v63) = 1;
    }
    else {
      LODWORD(v63) = dyld_program_sdk_at_least() ^ 1;
    }

    uint64_t v92 = v147;
    uint64_t v93 = v146;
    if (!v8) {
      goto LABEL_128;
    }
LABEL_101:
    v155[0] = MEMORY[0x1E4F143A8];
    v155[1] = 3221225472;
    v155[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2_930;
    v155[3] = &unk_1E52E5E20;
    char v106 = &v156;
    id v156 = v104;
    uint64_t v107 = v104;
    [v8 addCompletion:v155];
    [v8 startAnimation];
  }
  else
  {
    LODWORD(v63) = dyld_program_sdk_at_least() ^ 1;
    if (v8) {
      goto LABEL_101;
    }
LABEL_128:
    v157[0] = MEMORY[0x1E4F143A8];
    v157[1] = 3221225472;
    v157[2] = __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_929;
    v157[3] = &unk_1E52DA040;
    char v106 = &v158;
    id v158 = v104;
    long long v128 = v104;
    dispatch_async(MEMORY[0x1E4F14428], v157);
  }

LABEL_130:
  *((void *)&self->_collectionViewFlags + 1) &= ~0x4000000uLL;
  uint64_t v129 = self->_currentUpdate;
  self->_currentUpdate = 0;

  [(UICollectionViewLayout *)self->_layout _setCollectionViewAnimationContext:0];
  id v130 = self->_subviewManager;
  if (v130)
  {
    id v131 = v130->_visibleViews;
    if (v131) {
      v131->_indexPathValidationEnabled = 1;
    }
  }

  return (char)v63;
}

id __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v4 = -[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:](*(void *)(*(void *)(*(void *)(a1 + 32) + 2192) + 16), a2);
    if (v4 == 0x7FFFFFFFFFFFFFFFLL
      || (uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 2192) finalGlobalIndexForInitialGlobalIndex:v4],
          v5 == 0x7FFFFFFFFFFFFFFFLL))
    {
      BOOL v6 = 0;
    }
    else
    {
      BOOL v6 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](*(unsigned char **)(*(void *)(a1 + 32) + 2184), v5);
    }
  }
  else
  {
    BOOL v6 = 0;
  }
  return v6;
}

- (id)_identityTracker:(BOOL)a3
{
  identityTracker = self->_identityTracker;
  if (identityTracker) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = !a3;
  }
  if (!v5)
  {
    BOOL v6 = (_UIIndexPathIdentityTracker *)-[_UIIndexPathIdentityTracker initWithCollectionView:]((id *)[_UIIndexPathIdentityTracker alloc], self);
    unsigned __int8 v7 = self->_identityTracker;
    self->_identityTracker = v6;

    identityTracker = self->_identityTracker;
  }
  return identityTracker;
}

- (void)_clearNeedsRecomputePreferredAttributesForInvalidatedElements
{
  intrinsicContentSizeInvalidationContext = self->_intrinsicContentSizeInvalidationContext;
  self->_intrinsicContentSizeInvalidationContext = 0;

  int v4 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
  unsigned int v5 = v4 & 0xFFFFFF9F | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *((_WORD *)&self->_collectionViewFlags + 8) = v4 & 0xFF9F;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
}

- (BOOL)_isConnectedToDiffableDataSource
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 2) & 1;
}

- (void)layoutSubviews
{
  v24.receiver = self;
  v24.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v24 layoutSubviews];
  uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
  uint64_t v4 = v3 & 0x400000008000000;
  uint64_t v5 = v3 & 0x100040000000;
  if (v4 != 0x8000000 && v5 == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

    if (WeakRetained)
    {
      *((void *)&self->_collectionViewFlags + 1) |= 0x100000000000uLL;
      collectionViewData = self->_collectionViewData;
      if (collectionViewData) {
        int v9 = (*(unsigned char *)&collectionViewData->_collectionViewDataFlags >> 3) & 1;
      }
      else {
        LOBYTE(v9) = 0;
      }
      [(UICollectionView *)self _reloadDataIfNeeded];
      [(UICollectionView *)self _visibleBounds];
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;
      -[UICollectionViewData validateLayoutInRect:]((uint64_t)self->_collectionViewData, v10, v12, v14, v16);
      if ((v9 & 1) == 0) {
        [(UICollectionView *)self _updateDefaultLayoutMargins];
      }
      uint64_t v18 = [(UICollectionView *)self _recomputePreferredAttributesForInvalidatedElementsIfNeeded];
      if ((*((void *)&self->_collectionViewFlags + 1) & 0x100) != 0 && !self->_reloadingSuspendedCount)
      {
        int v19 = (void *)MEMORY[0x18C108260](v18);
        unint64_t v20 = [(UICollectionView *)self _updateVisibleCellsNow:1];
        if ([(UICollectionView *)self _prefetchingAllowed])
        {
          -[UICollectionView _updatePrefetchVelocityIntegratorForVisibleBounds:](self, "_updatePrefetchVelocityIntegratorForVisibleBounds:", v11, v13, v15, v17);
          BOOL v21 = !v20 && (unint64_t)((*((void *)&self->_collectionViewFlags + 1) & 0x2000000000000000) == 0);
          if (![(UICollectionView *)self _updatePrefetchedCells:v21]
            && (*((void *)&self->_collectionViewFlags + 1) & 0x40000000000000) != 0)
          {
            [(UICollectionView *)self _performReloadPrefetchIfNeeded];
          }
        }
      }
      [(UICollectionView *)self _updateBackgroundView];
      [(UICollectionView *)self _updateIndex];
      uint64_t v22 = [(UIView *)self _focusSystem];
      if (v22)
      {
        uint64_t v23 = *((void *)&self->_collectionViewFlags + 1);

        if ((v23 & 0x100000000) == 0) {
          [(UICollectionView *)self _highlightFirstVisibleItemIfAppropriate];
        }
      }
      *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFBFEFFEFFFFFFFFLL | 0x100000000;
      [(UICollectionView *)self _updateContentFocusContainerGuides];
    }
  }
}

- (void)_updateIndex
{
  uint64_t v2 = *((void *)&self->_collectionViewFlags + 1);
  if ((v2 & 0x80000000000000) == 0)
  {
    int v4 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v2 | 0x80000000000000;
    *((_WORD *)&self->_collectionViewFlags + 8) = v4;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v4);
    uint64_t v5 = [(UICollectionView *)self _indexBarEntries];
    if ([v5 count])
    {
      BOOL v6 = [(UIScrollView *)self _staticScrollBar];
    }
    else
    {
      uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
      id v8 = [(UIScrollView *)self _staticScrollBar];
      BOOL v6 = v8;
      if ((collectionViewFlags & 0x400000000000000) == 0)
      {
        if (v8) {
          [v8 setShowIndexBar:0];
        }
        [(UICollectionView *)self _removeStandaloneIndexBarIfNecessary];
        goto LABEL_16;
      }
    }
    if (v6)
    {
      [v6 setShowIndexBar:1];
      int v9 = [v6 indexBarView];
      [(UICollectionView *)self _removeStandaloneIndexBarIfNecessary];
    }
    else
    {
      indexBar = self->_indexBar;
      if (indexBar)
      {
        int v9 = indexBar;
      }
      else
      {
        id v16 = 0;
        id v17 = 0;
        double v11 = [(UIView *)self traitCollection];
        +[UIIndexBarAccessoryView makeIndexBarView:&v17 scrollAccessoryContainerView:&v16 forTraits:v11];
        id v12 = v17;
        int v9 = (UIIndexBarAccessoryView *)v17;
        id v13 = v16;

        [(UIScrollView *)self setAccessoryView:v13 atEdge:1];
        objc_storeStrong((id *)&self->_indexBar, v12);
      }
    }
    [(UIIndexBarView *)v9 setDelegate:self];
    [(UIIndexBarAccessoryView *)v9 setEntries:v5];
    -[UIIndexBarView setDrawingInsets:](v9, "setDrawingInsets:", 0.0, 0.0, 0.0, 0.0);
    uint64_t v14 = [(UICollectionView *)self _indexOverlayManager];
    double v15 = (void *)v14;
    if (v14) {
      [*(id *)(v14 + 24) reloadData];
    }

LABEL_16:
  }
}

- (void)_updateContentFocusContainerGuides
{
  uint64_t v3 = [(UIView *)self _focusSystem];

  if (v3)
  {
    if (!self->_contentFocusContainerGuide)
    {
      int v4 = objc_alloc_init(UIFocusContainerGuide);
      contentFocusContainerGuide = self->_contentFocusContainerGuide;
      self->_contentFocusContainerGuide = v4;

      [(UIView *)self addLayoutGuide:self->_contentFocusContainerGuide];
      [(UILayoutGuide *)self->_contentFocusContainerGuide _setLockedToOwningView:1];
      [(UILayoutGuide *)self->_contentFocusContainerGuide setIdentifier:@"UICollectionViewContentFocusContainerGuide"];
    }
    BOOL v6 = [(UICollectionView *)self collectionViewLayout];
    uint64_t v7 = [v6 _layoutAxis];

    endOfContentFocusContainerGuide = self->_endOfContentFocusContainerGuide;
    if (endOfContentFocusContainerGuide || v7 == 0)
    {
      if (endOfContentFocusContainerGuide) {
        BOOL v10 = v7 == 0;
      }
      else {
        BOOL v10 = 0;
      }
      if (v10)
      {
        [(UILayoutGuide *)endOfContentFocusContainerGuide _setLockedToOwningView:0];
        [(UIView *)self removeLayoutGuide:self->_endOfContentFocusContainerGuide];
        double v11 = self->_endOfContentFocusContainerGuide;
        self->_endOfContentFocusContainerGuide = 0;
      }
    }
    else
    {
      id v12 = objc_alloc_init(UIFocusContainerGuide);
      id v13 = self->_endOfContentFocusContainerGuide;
      self->_endOfContentFocusContainerGuide = v12;

      [(UIView *)self addLayoutGuide:self->_endOfContentFocusContainerGuide];
      [(UILayoutGuide *)self->_endOfContentFocusContainerGuide _setLockedToOwningView:1];
      [(UILayoutGuide *)self->_endOfContentFocusContainerGuide setIdentifier:@"UICollectionViewEndOfContentFocusContainerGuide"];
    }
    uint64_t v14 = self->_contentFocusContainerGuide;
    [(UIView *)self bounds];
    [(UILayoutGuide *)v14 _setManualLayoutFrame:"_setManualLayoutFrame:"];
    if (self->_endOfContentFocusContainerGuide)
    {
      if (v7)
      {
        if (-[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData) >= 1)
        {
          collectionViewData = self->_collectionViewData;
          if (collectionViewData)
          {
            if ((*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 2) == 0) {
              -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
            }
            if (collectionViewData->_totalItemCount >= 1)
            {
              id v16 = self->_collectionViewData;
              if (v16)
              {
                if ((*(unsigned char *)&v16->_collectionViewDataFlags & 2) == 0) {
                  -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
                }
                uint64_t v17 = v16->_totalItemCount - 1;
              }
              else
              {
                uint64_t v17 = -1;
              }
              uint64_t v18 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](v16, v17);
              int v19 = [(UICollectionView *)self layoutAttributesForItemAtIndexPath:v18];
              if (v19)
              {
                unint64_t v20 = v19;
                if (v7 == 2)
                {
                  [v19 frame];
                  double MinY = CGRectGetMinY(v33);
                  [(UIView *)self bounds];
                  double Width = CGRectGetWidth(v34);
                  [v20 size];
                  double Height = v23;
                  double MinX = 0.0;
                }
                else if (v7 == 1)
                {
                  [v19 frame];
                  double MinX = CGRectGetMinX(v35);
                  [v20 size];
                  double Width = v27;
                  [(UIView *)self bounds];
                  double Height = CGRectGetHeight(v36);
                  double MinY = 0.0;
                }
                else
                {
                  double Width = *(double *)(MEMORY[0x1E4F1DB28] + 16);
                  double Height = *(double *)(MEMORY[0x1E4F1DB28] + 24);
                  double MinX = *MEMORY[0x1E4F1DB28];
                  double MinY = *(double *)(MEMORY[0x1E4F1DB28] + 8);
                }
                -[UILayoutGuide _setManualLayoutFrame:](self->_endOfContentFocusContainerGuide, "_setManualLayoutFrame:", MinX, MinY, Width, Height);

                uint64_t v28 = [(UICollectionView *)self _focusedItemState];
                id v31 = (id)v28;
                if (v28) {
                  char v29 = *(void **)(v28 + 8);
                }
                else {
                  char v29 = 0;
                }
                id v30 = v29;
                [(UIFocusGuide *)self->_endOfContentFocusContainerGuide setEnabled:v30 != 0];

                return;
              }
            }
          }
        }
        [(UIFocusGuide *)self->_endOfContentFocusContainerGuide setEnabled:0];
        uint64_t v26 = self->_endOfContentFocusContainerGuide;
        [(UIView *)self bounds];
        [(UILayoutGuide *)v26 _setManualLayoutFrame:"_setManualLayoutFrame:"];
      }
    }
  }
}

- (void)_recomputePreferredAttributesForInvalidatedElementsIfNeeded
{
  uint64_t v3 = self->_intrinsicContentSizeInvalidationContext;
  if (v3)
  {
    if ((*((_WORD *)&self->_collectionViewFlags + 8) & 0x20) != 0
      && ([(UIView *)self window], int v4 = objc_claimAutoreleasedReturnValue(), v4, v4))
    {
      int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
      int v6 = v5 | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
      if ((v5 & 0x40) == 0)
      {
        uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
        *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
        *((void *)&self->_collectionViewFlags + 1) = v7;
        *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v6);
        *((_WORD *)&self->_collectionViewFlags + 8) = v6 | 0x40;
        [(UIScrollView *)self setNeedsLayout];
        goto LABEL_21;
      }
      int v8 = 1;
    }
    else
    {
      int v8 = 0;
    }
    int v9 = [(UICollectionViewLayoutInvalidationContext *)v3 invalidatedItemIndexPaths];
    BOOL v10 = [(UICollectionViewLayoutInvalidationContext *)v3 invalidatedSupplementaryIndexPaths];
    if ([v9 count] || objc_msgSend(v10, "count"))
    {
      v31[0] = MEMORY[0x1E4F143A8];
      v31[1] = 3221225472;
      void v31[2] = __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke;
      v31[3] = &unk_1E52DCB30;
      v31[4] = self;
      id v32 = v9;
      id v33 = v10;
      if (v8)
      {
        double v11 = self->_collectionViewData;
        [(UICollectionView *)self _visibleBounds];
        -[UICollectionViewData validateLayoutInRect:]((uint64_t)v11, v12, v13, v14, v15);
        if (v11) {
          *(unsigned char *)&v11->_collectionViewDataFlags |= 0x10u;
        }
        id v16 = (UICollectionViewData *)-[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], self, self->_layout);
        collectionViewData = self->_collectionViewData;
        self->_collectionViewData = v16;

        v29[0] = 0;
        v29[1] = v29;
        v29[2] = 0x3032000000;
        v29[3] = __Block_byref_object_copy__41;
        v29[4] = __Block_byref_object_dispose__41;
        id v30 = 0;
        int v18 = dyld_program_sdk_at_least();
        v25[0] = MEMORY[0x1E4F143A8];
        v25[1] = 3221225472;
        v25[2] = __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_3;
        v25[3] = &unk_1E52E5B70;
        double v27 = v29;
        uint64_t v28 = v31;
        if (v18) {
          uint64_t v19 = 6;
        }
        else {
          uint64_t v19 = 4;
        }
        v25[4] = self;
        unint64_t v20 = v11;
        uint64_t v26 = v20;
        v24[0] = MEMORY[0x1E4F143A8];
        v24[1] = 3221225472;
        v24[2] = __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_4;
        v24[3] = &unk_1E52E5B98;
        v24[4] = self;
        v24[5] = v29;
        +[UIView animateWithDuration:v19 delay:v25 options:v24 animations:0.3 completion:0.0];

        _Block_object_dispose(v29, 8);
      }
      else
      {
        __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke((uint64_t)v31);
      }
      [(UICollectionView *)self _clearNeedsRecomputePreferredAttributesForInvalidatedElements];
      unsigned int v21 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                      + 18) << 16);
      int v22 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFE7F | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v22);
      *((_WORD *)&self->_collectionViewFlags + 8) = v22 | ((((v21 >> 7) + 1) & 3) << 7);
      if ((v21 & 0x180) == 0)
      {
        v23[0] = MEMORY[0x1E4F143A8];
        v23[1] = 3221225472;
        v23[2] = __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_5;
        v23[3] = &unk_1E52D9F70;
        v23[4] = self;
        [(id)UIApp _performBlockAfterCATransactionCommits:v23];
      }
    }
    else
    {
      [(UICollectionView *)self _clearNeedsRecomputePreferredAttributesForInvalidatedElements];
    }
  }
LABEL_21:
}

- (void)_updateBackgroundView
{
  [(UIView *)self bounds];
  -[UIView setFrame:](self->_backgroundView, "setFrame:");
  backgroundView = self->_backgroundView;
  int v4 = self->_layout;
  int v5 = backgroundView;
  int v6 = v5;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    uint64_t v8 = [(UIView *)v5 effectiveUserInterfaceLayoutDirection];
    if (v8 == [(UICollectionViewLayout *)v4 developmentLayoutDirection])
    {
      if (![(UIView *)v6 _flipsHorizontalAxis]) {
        goto LABEL_10;
      }
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = [(UICollectionViewLayout *)v4 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [(UIView *)v6 _setFlipsHorizontalAxis:v9];
  }
LABEL_10:

  BOOL v10 = self->_backgroundView;
  [(UIScrollView *)self _moveContentSubview:v10 toBack:1];
}

- (id)_indexBarEntries
{
  if ((*(void *)&self->_collectionViewFlags & 0x8400000000000000) != 0)
  {
    uint64_t v3 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
    if ([v3 count])
    {
      id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 3221225472;
      v10[2] = __36__UICollectionView__indexBarEntries__block_invoke;
      v10[3] = &unk_1E52E57D8;
      void v10[4] = self;
      id v5 = v4;
      id v11 = v5;
      [v3 enumerateObjectsUsingBlock:v10];
      int v6 = v11;
      id v7 = v5;
    }
    else
    {
      v12.receiver = self;
      v12.super_class = (Class)UICollectionView;
      id v7 = [(UIScrollView *)&v12 _indexBarEntries];
    }
  }
  else
  {
    v9.receiver = self;
    v9.super_class = (Class)UICollectionView;
    id v7 = [(UIScrollView *)&v9 _indexBarEntries];
  }
  return v7;
}

- (void)_removeStandaloneIndexBarIfNecessary
{
  uint64_t v3 = self->_indexBar;
  if (v3)
  {
    id v7 = v3;
    id v4 = [(UIScrollView *)self accessoryViewAtEdge:1];
    BOOL v5 = [(UIView *)v7 isDescendantOfView:v4];

    if (v5) {
      [(UIScrollView *)self setAccessoryView:0 atEdge:1];
    }
    indexBar = self->_indexBar;
    self->_indexBar = 0;

    uint64_t v3 = v7;
  }
}

- (void)_setUsesStaticScrollBar:(BOOL)a3
{
  BOOL v3 = a3;
  BOOL v5 = [(UIScrollView *)self _staticScrollBar];
  BOOL v6 = v5 == 0;

  v7.receiver = self;
  v7.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v7 _setUsesStaticScrollBar:v3];
  if (v6 == v3) {
    [(UICollectionView *)self _reloadSectionIndexTitles];
  }
}

- (void)_reloadSectionIndexTitles
{
  *((void *)&self->_collectionViewFlags + 1) &= ~0x80000000000000uLL;
  indexBarSectionIndexTitles = self->_indexBarSectionIndexTitles;
  self->_indexBarSectionIndexTitles = 0;

  [(UICollectionView *)self _updateIndex];
}

- (void)_rebasePrefetchedCellIndexPathsWithMapping:(id)a3
{
  id v4 = a3;
  if ([(NSMutableDictionary *)self->_prefetchCacheItems count])
  {
    BOOL v5 = (void *)[(NSMutableDictionary *)self->_prefetchCacheItems copy];
    [(NSMutableDictionary *)self->_prefetchCacheItems removeAllObjects];
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __63__UICollectionView__rebasePrefetchedCellIndexPathsWithMapping___block_invoke;
    v6[3] = &unk_1E52E52E8;
    void v6[4] = self;
    id v7 = v4;
    [v5 enumerateKeysAndObjectsUsingBlock:v6];
  }
}

- (void)_resignOrRebaseFirstResponderViewWithIndexPathMapping:(id)a3
{
  objc_super v24 = (void (**)(id, NSIndexPath *))a3;
  if ([(UICollectionView *)self _isFirstResponderInDeletedSectionOrItem])
  {
    unint64_t v5 = 0;
    do
    {
      BOOL v6 = [(UIView *)self window];
      id v7 = [v6 firstResponder];

      uint64_t v8 = self->_firstResponderView;
      objc_super v9 = self->_firstResponderIndexPath;
      int v10 = [v7 resignFirstResponder];
      id v11 = [(UIView *)self window];
      objc_super v12 = [v11 firstResponder];

      if (!v10 || v7 == v12)
      {
        CGFloat v13 = [MEMORY[0x1E4F28B00] currentHandler];
        CGFloat v14 = v13;
        CGFloat v15 = @"NO";
        if (v10) {
          CGFloat v15 = @"YES";
        }
        [v13 handleFailureInMethod:a2, self, @"UICollectionView.m", 12711, @"The first responder contained inside of a deleted section or item refused to resign.\nFirst responder that was asked to resign (returned %@ from -resignFirstResponder): %@ inside containing view: %@ at index path: %@\nCurrent first responder: %@ inside containing view: %@ at index path: %@", v15, v7, v8, v9, v12, self->_firstResponderView, self->_firstResponderIndexPath object file lineNumber description];
      }
      if (v5 >= 0x64)
      {
        id v16 = [MEMORY[0x1E4F28B00] currentHandler];
        uint64_t v17 = v16;
        int v18 = @"NO";
        if (v10) {
          int v18 = @"YES";
        }
        [v16 handleFailureInMethod:a2, self, @"UICollectionView.m", 12712, @"Attempted to delete a section or item containing the first responder, but after repeatedly telling the first responder to resign, the first responder remained inside a deleted section or item. This may be caused by a cycle where the first responder is moving back and forth between the same views.\nFirst responder that was asked to resign (returned %@ from -resignFirstResponder): %@ inside containing view: %@ at index path: %@\nCurrent first responder: %@ inside containing view: %@ at index path: %@", v18, v7, v8, v9, v12, self->_firstResponderView, self->_firstResponderIndexPath object file lineNumber description];
      }
      ++v5;
    }
    while ([(UICollectionView *)self _isFirstResponderInDeletedSectionOrItem]);
  }
  if (self->_firstResponderView)
  {
    int64_t firstResponderViewType = self->_firstResponderViewType;
    if (firstResponderViewType == 2)
    {
      int64_t v22 = [(UICollectionViewUpdate *)self->_currentUpdate finalSectionIndexForInitialSectionIndex:[(NSIndexPath *)self->_firstResponderIndexPath section]];
      double v23 = [MEMORY[0x1E4F28D58] indexPathForRow:0x7FFFFFFFFFFFFFFFLL inSection:v22];
      firstResponderIndexPath = self->_firstResponderIndexPath;
      self->_firstResponderIndexPath = v23;
    }
    else if (firstResponderViewType == 1)
    {
      v24[2](v24, self->_firstResponderIndexPath);
      unint64_t v20 = (NSIndexPath *)objc_claimAutoreleasedReturnValue();
      firstResponderIndexPath = self->_firstResponderIndexPath;
      self->_firstResponderIndexPath = v20;
    }
    else
    {
      firstResponderIndexPath = self->_firstResponderIndexPath;
      self->_firstResponderIndexPath = 0;
    }
  }
}

- (void)_resetOrRebaseFocusedItemForCurrentUpdateWithIndexPathMapping:(id)a3
{
  CGRect v36 = (void (**)(id, id))a3;
  if (!self->_currentUpdate)
  {
    CGRect v35 = [MEMORY[0x1E4F28B00] currentHandler];
    [v35 handleFailureInMethod:a2, self, @"UICollectionView.m", 12755, @"UICollectionView internal inconsistency: attempted to rebase the focused item state outside of an update. Collection view: %@", self object file lineNumber description];
  }
  *((void *)&self->_collectionViewFlags + 1) &= ~0x8000000000uLL;
  uint64_t v5 = [(UICollectionView *)self _focusedItemState];
  BOOL v6 = (void *)v5;
  if (v5) {
    id v7 = *(void **)(v5 + 16);
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  if (v8)
  {
    uint64_t v9 = [(UICollectionView *)self _focusedItemState];
    int v10 = (void *)v9;
    if (v9)
    {
      id v11 = *(id *)(v9 + 8);
      objc_super v12 = (void *)v10[2];
    }
    else
    {
      id v11 = 0;
      objc_super v12 = 0;
    }
    id v13 = v12;
    if ([(UICollectionView *)self _isFocusedViewInDeletedSectionOrItem]
      || [v11 _isHiddenForReordering])
    {
      *((void *)&self->_collectionViewFlags + 1) |= 0x8000000000uLL;
      [(UICollectionView *)self _setFocusedItemState:0];
    }
    if (v11)
    {
      uint64_t v14 = [(UICollectionView *)self _focusedItemState];
      CGFloat v15 = (void *)v14;
      id v16 = v14 ? *(void **)(v14 + 8) : 0;
      id v17 = v16;

      if (!v17) {
        [(UICollectionView *)self _reusePreviouslyFocusedManagedSubviewIfNeeded:v11];
      }
    }
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x8000000000) == 0)
    {
      if (v10 && v10[4])
      {
        int64_t v18 = -[UICollectionViewUpdate finalSectionIndexForInitialSectionIndex:](self->_currentUpdate, "finalSectionIndexForInitialSectionIndex:", [v13 section]);
        uint64_t v19 = [(UICollectionView *)self _focusedItemState];
        unint64_t v20 = [MEMORY[0x1E4F28D58] indexPathForRow:0x7FFFFFFFFFFFFFFFLL inSection:v18];
        unsigned int v21 = -[_UICollectionViewFocusedItemState copyWithIndexPath:preservingReusableView:](v19, v20, 1);
        [(UICollectionView *)self _setFocusedItemState:v21];

        objc_storeStrong((id *)&self->_currentUpdate->_oldFocusedItemState, v10);
        uint64_t v22 = [(UICollectionView *)self _focusedItemState];
        currentUpdate = self->_currentUpdate;
        newFocusedItemState = currentUpdate->_newFocusedItemState;
        currentUpdate->_newFocusedItemState = (_UICollectionViewFocusedItemState *)v22;
      }
      else
      {
        newFocusedItemState = v36[2](v36, v13);
        char v25 = [(UICollectionView *)self _focusedItemState];
        uint64_t v26 = -[_UICollectionViewFocusedItemState copyWithIndexPath:preservingReusableView:](v25, newFocusedItemState, 1);
        [(UICollectionView *)self _setFocusedItemState:v26];

        objc_storeStrong((id *)&self->_currentUpdate->_oldFocusedItemState, v10);
        uint64_t v27 = [(UICollectionView *)self _focusedItemState];
        uint64_t v28 = self->_currentUpdate;
        char v29 = v28->_newFocusedItemState;
        v28->_newFocusedItemState = (_UICollectionViewFocusedItemState *)v27;
      }
    }
    uint64_t v30 = [(UICollectionView *)self _focusedItemState];
    id v31 = (void *)v30;
    if (v30) {
      id v32 = *(void **)(v30 + 16);
    }
    else {
      id v32 = 0;
    }
    id v33 = v32;
    BOOL v34 = [(UICollectionView *)self _indexPathIsValid:v33 allowSectionItemSentinel:1];

    if (!v34) {
      [(UICollectionView *)self _setFocusedItemState:0];
    }
  }
}

- (BOOL)_isFirstResponderInDeletedSectionOrItem
{
  if (self->_firstResponderView)
  {
    firstResponderIndexPath = self->_firstResponderIndexPath;
    if (firstResponderIndexPath)
    {
      currentUpdate = self->_currentUpdate;
      if (currentUpdate)
      {
        if (self->_firstResponderViewType == 1)
        {
          uint64_t v5 = -[UICollectionViewUpdate finalIndexPathForInitialIndexPath:](currentUpdate, "finalIndexPathForInitialIndexPath:");
        }
        else
        {
          uint64_t v7 = [(NSIndexPath *)firstResponderIndexPath length];
          id v8 = self->_currentUpdate;
          if (v7 == 1)
          {
            uint64_t v9 = [(NSMutableDictionary *)v8->_deletedSupplementaryTopLevelIndexesDict objectForKeyedSubscript:self->_firstResponderViewKind];
            char v6 = objc_msgSend(v9, "containsIndex:", -[NSIndexPath indexAtPosition:](self->_firstResponderIndexPath, "indexAtPosition:", 0));
LABEL_11:

            return v6;
          }
          uint64_t v5 = -[UICollectionViewUpdate validatedNewIndexPathForSupplementaryElementOfKind:oldIndexPath:]((uint64_t)v8, self->_firstResponderViewKind, self->_firstResponderIndexPath);
        }
        uint64_t v9 = (void *)v5;
        char v6 = v5 == 0;
        goto LABEL_11;
      }
    }
  }
  return 0;
}

- (void)_computeVisibleContentOffsetForUpdate:(id)a3 usingData:(id)a4
{
  char v39 = (double *)a3;
  id v6 = a4;
  [(UIView *)self bounds];
  double v8 = v7;
  double v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  double v15 = -[UICollectionViewData collectionViewContentRect]((uint64_t)v6);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;

  [(UIScrollView *)self _effectiveContentInset];
  double v24 = v15 - v23;
  double v26 = v19 - (-v23 - v25);
  double v28 = v17 - v27;
  double v29 = v21 - (-v22 - v27);
  v43.origin.double x = v24;
  v43.origin.double y = v28;
  v43.size.double width = v26;
  v43.size.double height = v29;
  v56.origin.double x = v8;
  v56.origin.double y = v10;
  CGFloat v40 = v14;
  CGFloat v41 = v12;
  v56.size.double width = v12;
  v56.size.double height = v14;
  BOOL v30 = CGRectContainsRect(v43, v56);
  double v31 = v8;
  double v32 = v10;
  if (!v30)
  {
    v44.origin.double x = v8;
    v44.origin.double y = v10;
    v44.size.double height = v40;
    v44.size.double width = v12;
    double MaxY = CGRectGetMaxY(v44);
    v45.origin.double x = v24;
    v45.origin.double y = v28;
    v45.size.double width = v26;
    v45.size.double height = v29;
    double v32 = v10;
    if (MaxY > CGRectGetMaxY(v45))
    {
      v46.origin.double x = v24;
      v46.origin.double y = v28;
      v46.size.double width = v26;
      v46.size.double height = v29;
      double Height = CGRectGetHeight(v46);
      v47.origin.double x = v8;
      v47.origin.double y = v10;
      v47.size.double height = v40;
      v47.size.double width = v41;
      double v32 = v10;
      if (Height > CGRectGetHeight(v47))
      {
        v48.origin.double x = v8;
        v48.origin.double y = v10;
        v48.size.double height = v40;
        v48.size.double width = v41;
        double v35 = CGRectGetMaxY(v48);
        v49.origin.double x = v24;
        v49.origin.double y = v28;
        v49.size.double width = v26;
        v49.size.double height = v29;
        double v32 = v10 - (v35 - CGRectGetMaxY(v49));
      }
    }
    v50.origin.double x = v8;
    v50.origin.double y = v10;
    v50.size.double height = v40;
    v50.size.double width = v41;
    double MaxX = CGRectGetMaxX(v50);
    v51.origin.double x = v24;
    v51.origin.double y = v28;
    v51.size.double width = v26;
    v51.size.double height = v29;
    if (MaxX <= CGRectGetMaxX(v51)) {
      goto LABEL_8;
    }
    v52.origin.double x = v24;
    v52.origin.double y = v28;
    v52.size.double width = v26;
    v52.size.double height = v29;
    double Width = CGRectGetWidth(v52);
    v53.origin.double x = v8;
    v53.origin.double y = v10;
    v53.size.double height = v40;
    v53.size.double width = v41;
    if (Width <= CGRectGetWidth(v53))
    {
LABEL_8:
      double v31 = v8;
    }
    else
    {
      v54.origin.double x = v8;
      v54.origin.double y = v10;
      v54.size.double height = v40;
      v54.size.double width = v41;
      double v38 = CGRectGetMaxX(v54);
      v55.origin.double x = v24;
      v55.origin.double y = v28;
      v55.size.double width = v26;
      v55.size.double height = v29;
      double v31 = v8 - (v38 - CGRectGetMaxX(v55));
    }
  }
  v39[4] = v8;
  v39[5] = v10;
  v39[6] = v31;
  v39[7] = v32;
}

- (BOOL)_reviseNewContentOffsetForUpdate:(id)a3
{
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  id v4 = (uint64_t *)a3;
  double v6 = *((double *)v4 + 6);
  double v5 = *((double *)v4 + 7);
  double v7 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:self];
  double v8 = [v7 scrollManager];
  int v9 = [v8 isScrollingScrollableContainer:self];
  double v10 = v5;
  double v11 = v6;
  if (v9)
  {
    [v8 targetContentOffsetForScrollableContainer:self];
    double v11 = v12;
    double v10 = v13;
  }
  -[UICollectionViewLayout targetContentOffsetForProposedContentOffset:](self->_layout, "targetContentOffsetForProposedContentOffset:", v11, v10);
  -[UICollectionView _delegateTargetOffsetForProposedContentOffset:](self, "_delegateTargetOffsetForProposedContentOffset:");
  double v15 = v14;
  double v17 = v16;
  BOOL v18 = vabdd_f64(v6, v14) < 0.0001;
  BOOL v19 = vabdd_f64(v5, v16) < 0.0001 && v18;
  if (dyld_program_sdk_at_least()
    && !v19
    && ![(UIScrollView *)self isScrollAnimating])
  {
    double v20 = -[UICollectionViewData collectionViewContentRect](v4[3]);
    double v57 = v5;
    double v21 = v6;
    double v23 = v22;
    double v25 = v24;
    BOOL v26 = [(UIScrollView *)self _isAutomaticContentOffsetAdjustmentEnabled];
    [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:1];
    double v27 = v23;
    double v6 = v21;
    double v5 = v57;
    -[UIScrollView _adjustedContentOffsetForContentOffset:contentSize:skipsAdjustmentIfScrolling:](self, "_adjustedContentOffsetForContentOffset:contentSize:skipsAdjustmentIfScrolling:", 0, v15, v17, v27, v25);
    double v15 = v28;
    double v17 = v29;
    [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:v26];
  }
  if (!v9) {
    goto LABEL_16;
  }
  if (vabdd_f64(v11, v15) >= 0.0001 || vabdd_f64(v10, v17) >= 0.0001)
  {
    [v8 cancelScrollingForScrollableContainer:self];
LABEL_16:
    int v31 = 0;
    goto LABEL_17;
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258BA8);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    CGRect v51 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      id v61 = self;
      _os_log_impl(&dword_1853B0000, v51, OS_LOG_TYPE_ERROR, "_reviseNewContentOffsetForUpdate: cv == %p; clearing restoration anchor",
        buf,
        0xCu);
    }
  }
  [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
  int v31 = 1;
  double v15 = v6;
  double v17 = v5;
LABEL_17:
  double v32 = vabdd_f64(v15, v6);
  double v33 = vabdd_f64(v17, v5);
  BOOL v34 = v33 >= 0.0001 || v32 >= 0.0001;
  if (v34)
  {
    unint64_t v35 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258BB0);
    if (*(unsigned char *)v35)
    {
      CGRect v46 = *(NSObject **)(v35 + 8);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        CGRect v47 = v46;
        [(UIScrollView *)self contentOffset];
        NSStringFromCGPoint(v69);
        CGRect v48 = v58 = v31;
        v70.double x = v6;
        v70.double y = v5;
        CGRect v49 = NSStringFromCGPoint(v70);
        v71.double x = v15;
        v71.double y = v17;
        CGRect v50 = NSStringFromCGPoint(v71);
        *(_DWORD *)buf = 134218754;
        id v61 = self;
        __int16 v62 = 2112;
        char v63 = v48;
        __int16 v64 = 2112;
        uint64_t v65 = v49;
        __int16 v66 = 2112;
        char v67 = v50;
        _os_log_impl(&dword_1853B0000, v47, OS_LOG_TYPE_ERROR, "_reviseNewContentOffsetForUpdate: cv == %p; proposed origin modified by layout, delegate, or focus. Current: %"
          "@; original: %@; new: %@",
          buf,
          0x2Au);

        BOOL v34 = 1;
        int v31 = v58;
      }
    }
  }
  if (((v31 | dyld_program_sdk_at_least() ^ 1) & 1) == 0
    && ((v34 | [(UICollectionView *)self _isReordering]) & 1) == 0
    && self->_contentOffsetRestorationAnchor)
  {
    char v59 = 0;
    [(UIScrollView *)self _contentInsetIncludingDecorations];
    double v38 = [(UICollectionView *)(uint64_t)self _contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets:v36 shouldApply:v37];
    if (v59)
    {
      CGFloat v40 = v38;
      CGFloat v41 = v39;
      unint64_t v42 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258BB8);
      if (*(unsigned char *)v42)
      {
        CGRect v52 = *(NSObject **)(v42 + 8);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
        {
          CGRect v53 = v52;
          v72.double x = v6;
          v72.double y = v5;
          CGRect v54 = NSStringFromCGPoint(v72);
          v73.double x = v40;
          v73.double y = v41;
          CGRect v55 = NSStringFromCGPoint(v73);
          *(_DWORD *)buf = 134218498;
          id v61 = self;
          __int16 v62 = 2112;
          char v63 = v54;
          __int16 v64 = 2112;
          uint64_t v65 = v55;
          _os_log_impl(&dword_1853B0000, v53, OS_LOG_TYPE_ERROR, "_reviseNewContentOffsetForUpdate: cv == %p; changing new visible origin from %@ to %@",
            buf,
            0x20u);
        }
      }
      double v17 = v41;
      double v15 = v40;
    }
    else
    {
      unint64_t v43 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258BC0);
      if (*(unsigned char *)v43)
      {
        CGRect v56 = *(NSObject **)(v43 + 8);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 134217984;
          id v61 = self;
          _os_log_impl(&dword_1853B0000, v56, OS_LOG_TYPE_ERROR, "_reviseNewContentOffsetForUpdate: cv == %p; clearing restoration anchor",
            buf,
            0xCu);
        }
      }
      [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
    }
    double v32 = vabdd_f64(v15, v6);
    double v33 = vabdd_f64(v17, v5);
  }
  BOOL v44 = v33 >= 0.0001 || v32 >= 0.0001;
  *((double *)v4 + 6) = v15;
  *((double *)v4 + 7) = v17;

  return v44;
}

- (CGPoint)_delegateTargetOffsetForProposedContentOffset:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  if ((collectionViewFlags & 0x8000) != 0)
  {
    double v7 = [(UICollectionView *)self _delegateProxy];
    objc_msgSend(v7, "collectionView:targetContentOffsetForProposedContentOffset:", self, x, y);
    goto LABEL_5;
  }
  if ((collectionViewFlags & 0x4000) != 0)
  {
    double v7 = [(UICollectionView *)self _delegateProxy];
    objc_msgSend(v7, "_collectionView:targetContentOffsetForProposedContentOffset:", self, x, y);
LABEL_5:
    double x = v8;
    double y = v9;
  }
  double v10 = x;
  double v11 = y;
  result.double y = v11;
  result.double x = v10;
  return result;
}

- (id)_diffableDataSourceImpl
{
  BOOL v3 = [(UICollectionView *)self _dataSourceActual];
  id v4 = 0;
  if ((objc_opt_respondsToSelector() & 1) != 0 && v3 != self)
  {
    id v4 = [(UICollectionView *)v3 _diffableDataSourceImpl];
  }

  return v4;
}

- (BOOL)_updatePrefetchedCells:(BOOL)a3
{
  BOOL v3 = a3;
  if (![(_UIVelocityIntegrator *)self->_prefetchVelocityIntegrator hasVelocity])
  {
    BOOL v5 = [(UICollectionViewLayout *)self->_layout _hasOrthogonalScrollingSections];
    if (!v5) {
      return v5;
    }
  }
  [(_UIVelocityIntegrator *)self->_prefetchVelocityIntegrator velocity];
  double v8 = v6;
  double v9 = v7;
  if (self->_activeOrthogonalPrefetchingContext)
  {
    if (v3) {
      goto LABEL_5;
    }
LABEL_9:
    LOBYTE(v5) = 0;
    return v5;
  }
  -[UICollectionView _pruneCachedPrefetchViewsForVelocity:](self, "_pruneCachedPrefetchViewsForVelocity:", v6, v7);
  if (!v3) {
    goto LABEL_9;
  }
LABEL_5:
  mainPrefetchingContext = self->_mainPrefetchingContext;
  if (mainPrefetchingContext && [(NSMutableArray *)mainPrefetchingContext->_items count]) {
    [(UICollectionView *)self _prefetchItemsForPrefetchingContext:self->_mainPrefetchingContext];
  }
  else {
    -[UICollectionView _computeMainPrefetchCandidatesForVelocity:](self, "_computeMainPrefetchCandidatesForVelocity:", v8, v9);
  }
  LOBYTE(v5) = 1;
  return v5;
}

- (void)_rebaseContentOffsetAnchorOrScrollTargetForUpdate:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (dyld_program_sdk_at_least())
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __70__UICollectionView__rebaseContentOffsetAnchorOrScrollTargetForUpdate___block_invoke;
    aBlock[3] = &unk_1E52E5360;
    id v5 = v4;
    id v22 = v5;
    double v6 = (unsigned int (**)(void *, NSIndexPath *))_Block_copy(aBlock);
    double v7 = self->_scrollingTargetIndexPath;
    double v8 = self->_contentOffsetRestorationAnchor;
    double v9 = v8;
    if (v7)
    {
      if (v6[2](v6, v7))
      {
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589E0);
        if (*(unsigned char *)CategoryCachedImpl)
        {
          double v17 = *(NSObject **)(CategoryCachedImpl + 8);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134217984;
            double v24 = self;
            _os_log_impl(&dword_1853B0000, v17, OS_LOG_TYPE_ERROR, "_rebaseContentOffsetAnchorOrScrollTarget: cv == %p; clearing scrolling target index path",
              buf,
              0xCu);
          }
        }
        [(UICollectionView *)self _clearTargetIndexPathForScrolling];
      }
      else
      {
        double v12 = [v5 finalIndexPathForInitialIndexPath:v7];
        scrollingTargetIndexPath = self->_scrollingTargetIndexPath;
        self->_scrollingTargetIndexPath = v12;
      }
    }
    else if (v8)
    {
      if (v6[2](v6, v8))
      {
        unint64_t v11 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589E8);
        if (*(unsigned char *)v11)
        {
          BOOL v18 = *(NSObject **)(v11 + 8);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134217984;
            double v24 = self;
            _os_log_impl(&dword_1853B0000, v18, OS_LOG_TYPE_ERROR, "_rebaseContentOffsetAnchorOrScrollTarget: cv == %p; clearing restoration anchor that was moved or deleted",
              buf,
              0xCu);
          }
        }
        [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
      }
      else
      {
        double v14 = [v5 finalIndexPathForInitialIndexPath:v9];
        contentOffsetRestorationAnchor = self->_contentOffsetRestorationAnchor;
        self->_contentOffsetRestorationAnchor = v14;

        unint64_t v16 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB2589F0);
        if (*(unsigned char *)v16)
        {
          BOOL v19 = *(NSObject **)(v16 + 8);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          {
            double v20 = self->_contentOffsetRestorationAnchor;
            *(_DWORD *)buf = 134218498;
            double v24 = self;
            __int16 v25 = 2112;
            BOOL v26 = v9;
            __int16 v27 = 2112;
            double v28 = v20;
            _os_log_impl(&dword_1853B0000, v19, OS_LOG_TYPE_ERROR, "_rebaseContentOffsetAnchorOrScrollTarget: cv == %p; rebased restoration anchor from %@ to %@",
              buf,
              0x20u);
          }
        }
      }
    }
  }
}

- (void)_pruneCachedPrefetchViewsForVelocity:(CGVector)a3
{
  ddouble y = a3.dy;
  ddouble x = a3.dx;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  if (a3.dx == 0.0 && a3.dy == 0.0)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258990);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      double v7 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 134217984;
        *(void *)((char *)&buf + 4) = self;
        _os_log_impl(&dword_1853B0000, v7, OS_LOG_TYPE_ERROR, "[UICV %p] Skipping pruning of prefetched cells due to zero velocity", (uint8_t *)&buf, 0xCu);
      }
    }
  }
  else if ([(NSMutableDictionary *)self->_prefetchCacheItems count])
  {
    [(UICollectionView *)self _visibleBounds];
    -[UICollectionView _computePrefetchCacheValidationBoundsForPrefetchVelocity:visibleBounds:](self, "_computePrefetchCacheValidationBoundsForPrefetchVelocity:visibleBounds:", dx, dy, v8, v9, v10, v11);
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v41 = 0x3032000000;
    unint64_t v42 = __Block_byref_object_copy__41;
    unint64_t v43 = __Block_byref_object_dispose__41;
    id v44 = 0;
    uint64_t v29 = 0;
    BOOL v30 = &v29;
    uint64_t v31 = 0x3032000000;
    double v32 = __Block_byref_object_copy__41;
    double v33 = __Block_byref_object_dispose__41;
    id v34 = 0;
    prefetchCacheItems = self->_prefetchCacheItems;
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    v28[2] = __57__UICollectionView__pruneCachedPrefetchViewsForVelocity___block_invoke;
    v28[3] = &unk_1E52E5248;
    v28[7] = v13;
    v28[8] = v14;
    v28[9] = v15;
    v28[10] = v16;
    void v28[4] = self;
    v28[5] = &buf;
    v28[6] = &v29;
    [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v28];
    unint64_t v17 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258998);
    if (*(unsigned char *)v17)
    {
      id v22 = *(NSObject **)(v17 + 8);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        uint64_t v23 = *(void *)(*((void *)&buf + 1) + 40);
        *(_DWORD *)double v36 = 134218242;
        double v37 = self;
        __int16 v38 = 2112;
        uint64_t v39 = v23;
        _os_log_impl(&dword_1853B0000, v22, OS_LOG_TYPE_ERROR, "[UICV %p] Pruning prefetched cells: %@", v36, 0x16u);
      }
    }
    if ([*(id *)(*((void *)&buf + 1) + 40) count]) {
      [(NSMutableDictionary *)self->_prefetchCacheItems removeObjectsForKeys:*(void *)(*((void *)&buf + 1) + 40)];
    }
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v18 = (id)v30[5];
    uint64_t v19 = [v18 countByEnumeratingWithState:&v24 objects:v35 count:16];
    if (v19)
    {
      uint64_t v20 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v19; ++i)
        {
          if (*(void *)v25 != v20) {
            objc_enumerationMutation(v18);
          }
          -[UICollectionView _reusePrefetchedCell:](self, "_reusePrefetchedCell:", *(void *)(*((void *)&v24 + 1) + 8 * i), (void)v24);
        }
        uint64_t v19 = [v18 countByEnumeratingWithState:&v24 objects:v35 count:16];
      }
      while (v19);
    }

    _Block_object_dispose(&v29, 8);
    _Block_object_dispose(&buf, 8);
  }
}

- (_UICollectionTableIndexOverlayManager)_indexOverlayManager
{
  return self->_indexOverlayManager;
}

- (void)setDropDelegate:(id)dropDelegate
{
  id obj = dropDelegate;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dropDelegate);

  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_dropDelegate, obj);
    _UIValidateAccountBasedDelegateRespondsToSelector(obj, (uint64_t)sel__collectionView_dataOwnerForDropSession_withDestinationIndexPath_);
    -[_UICollectionViewDragAndDropController didUpdateDropDelegate]((id *)&self->_dragAndDropController->super.super.isa);
  }
}

- (void)setDragDelegate:(id)dragDelegate
{
  id obj = dragDelegate;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDelegate);

  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_dragDelegate, obj);
    _UIValidateAccountBasedDelegateRespondsToSelector(obj, (uint64_t)sel__collectionView_dataOwnerForDragSession_atIndexPath_);
    -[_UICollectionViewDragAndDropController didUpdateDragDelegate]((id *)&self->_dragAndDropController->super.super.isa);
  }
}

uint64_t __50__UICollectionView__updateBackgroundColorIfNeeded__block_invoke(uint64_t a1)
{
  uint64_t result = [*(id *)(a1 + 32) setBackgroundColor:*(void *)(a1 + 40)];
  *(void *)(*(void *)(a1 + 32) + 2640) &= ~0x2000000000uLL;
  return result;
}

- (void)setBackgroundColor:(id)a3
{
  *((void *)&self->_collectionViewFlags + 1) |= 0x2000000000uLL;
  v3.receiver = self;
  v3.super_class = (Class)UICollectionView;
  [(UIView *)&v3 setBackgroundColor:a3];
}

- (void)_adjustForAutomaticKeyboardInfo:(id)a3 animated:(BOOL)a4 lastAdjustment:(double *)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  if ([(UIScrollView *)self _isFirstResponderKeyboardAvoidanceEnabled])
  {
    v9.receiver = self;
    v9.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v9 _adjustForAutomaticKeyboardInfo:v8 animated:v6 lastAdjustment:a5];
    if (*a5 != 0.0) {
      -[UICollectionView _scrollFirstResponderCellToVisible:](self, "_scrollFirstResponderCellToVisible:", 1, *a5);
    }
  }
}

void __125__UICollectionView__createPreparedSupplementaryViewForElementOfKind_atIndexPath_layout_withLayoutAttributes_applyAttributes___block_invoke(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _dataSourceProxy];
  uint64_t v2 = [v5 collectionView:*(void *)(a1 + 32) viewForSupplementaryElementOfKind:*(void *)(a1 + 40) atIndexPath:*(void *)(a1 + 56)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

- (UICollectionReusableView)dequeueConfiguredReusableSupplementaryViewWithRegistration:(UICollectionViewSupplementaryRegistration *)registration forIndexPath:(NSIndexPath *)indexPath
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  double v7 = registration;
  id v8 = indexPath;
  if (dyld_program_sdk_at_least())
  {
    objc_super v9 = [(UICollectionViewSupplementaryRegistration *)v7 _collectionViewRequestingViewWhenCreated];

    if (v9 == self)
    {
      if (_UIIsPrivateMainBundle())
      {
        double v10 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          double v28 = v7;
          _os_log_fault_impl(&dword_1853B0000, v10, OS_LOG_TYPE_FAULT, "Attempted to dequeue a supplementary view using a registration that was created inside -collectionView:viewForSupplementaryElementOfKind:atIndexPath: or inside a UICollectionViewDiffableDataSource supplementary view provider. Creating a new registration each time a supplementary view is requested will prevent reuse and cause created supplementary views to remain inaccessible in memory for the lifetime of the collection view. Registrations should be created up front and reused. Registration: %@", buf, 0xCu);
        }
      }
      else
      {
        double v10 = [MEMORY[0x1E4F28B00] currentHandler];
        [v10 handleFailureInMethod:a2, self, @"UICollectionView.m", 9754, @"Attempted to dequeue a supplementary view using a registration that was created inside -collectionView:viewForSupplementaryElementOfKind:atIndexPath: or inside a UICollectionViewDiffableDataSource supplementary view provider. Creating a new registration each time a supplementary view is requested will prevent reuse and cause created supplementary views to remain inaccessible in memory for the lifetime of the collection view. Registrations should be created up front and reused. Registration: %@", v7 object file lineNumber description];
      }
    }
  }
  double v11 = [(UICollectionViewSupplementaryRegistration *)v7 elementKind];
  double v12 = [(UICollectionViewSupplementaryRegistration *)v7 reuseIdentifier];
  if (![v11 length])
  {
    id v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 9757, @"UIKit internal inconsistency: registration missing element kind %@", v7 object file lineNumber description];
  }
  if (![v12 length])
  {
    uint64_t v19 = [MEMORY[0x1E4F28B00] currentHandler];
    [v19 handleFailureInMethod:a2, self, @"UICollectionView.m", 9758, @"UIKit internal inconsistency: registration missing reuse identifier %@", v7 object file lineNumber description];
  }
  uint64_t v13 = [(id)objc_opt_class() _reuseKeyForSupplementaryViewOfKind:v11 withReuseIdentifier:v12];
  BOOL v14 = [(UICollectionViewSupplementaryRegistration *)v7 hasSupplementaryClass];
  BOOL v15 = [(UICollectionViewSupplementaryRegistration *)v7 hasSupplementaryNib];
  BOOL v16 = v15;
  if (v14 || v15)
  {
    if (v14) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v20 = [MEMORY[0x1E4F28B00] currentHandler];
    [v20 handleFailureInMethod:a2, self, @"UICollectionView.m", 9763, @"Supplementary registration is invalid (no view class or nib) %@", v7 object file lineNumber description];

    if (v14)
    {
LABEL_15:
      unint64_t v17 = [(NSMutableDictionary *)self->_supplementaryViewClassDict objectForKeyedSubscript:v13];

      if (!v17) {
        [(UICollectionView *)self registerClass:[(UICollectionViewSupplementaryRegistration *)v7 supplementaryClass] forSupplementaryViewOfKind:v11 withReuseIdentifier:v12];
      }
      goto LABEL_23;
    }
  }
  double v21 = [(NSMutableDictionary *)self->_supplementaryViewNibDict objectForKeyedSubscript:v13];

  if (v21) {
    BOOL v22 = 0;
  }
  else {
    BOOL v22 = v16;
  }
  if (v22)
  {
    uint64_t v23 = [(UICollectionViewSupplementaryRegistration *)v7 supplementaryNib];
    [(UICollectionView *)self registerNib:v23 forSupplementaryViewOfKind:v11 withReuseIdentifier:v12];
  }
LABEL_23:
  long long v24 = [(UICollectionView *)self _dequeueReusableViewOfKind:v11 withIdentifier:v12 forIndexPath:v8 viewCategory:1];
  long long v25 = [(UICollectionViewSupplementaryRegistration *)v7 configurationHandler];
  ((void (**)(void, void *, void *, NSIndexPath *))v25)[2](v25, v24, v11, v8);

  return (UICollectionReusableView *)v24;
}

- (void)registerClass:(Class)viewClass forSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier
{
  uint64_t v20 = elementKind;
  objc_super v9 = identifier;
  if (![(NSString *)v20 length])
  {
    BOOL v14 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v15 = *MEMORY[0x1E4F1C3C8];
    BOOL v16 = NSStringFromSelector(a2);
    [v14 raise:v15, @"must pass a valid element kind to -[UICollectionView %@]", v16 format];
  }
  if (![(NSString *)v9 length])
  {
    unint64_t v17 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v18 = *MEMORY[0x1E4F1C3C8];
    uint64_t v19 = NSStringFromSelector(a2);
    [v17 raise:v18, @"must pass a valid reuse identifier to -[UICollectionView %@]", v19 format];
  }
  if (!self->_supplementaryViewClassDict)
  {
    double v10 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    supplementaryViewClassDict = self->_supplementaryViewClassDict;
    self->_supplementaryViewClassDict = v10;
  }
  double v12 = [(id)objc_opt_class() _reuseKeyForSupplementaryViewOfKind:v20 withReuseIdentifier:v9];
  [(NSMutableDictionary *)self->_supplementaryViewNibDict removeObjectForKey:v12];
  uint64_t v13 = self->_supplementaryViewClassDict;
  if (viewClass) {
    [(NSMutableDictionary *)v13 setValue:viewClass forKey:v12];
  }
  else {
    [(NSMutableDictionary *)v13 removeObjectForKey:v12];
  }
  [(UICollectionView *)self _registeredSupplementaryViewKind:v20];
}

+ (id)_reuseKeyForSupplementaryViewOfKind:(id)a3 withReuseIdentifier:(id)a4
{
  if ((id)qword_1EB258AA0 != a3 || qword_1EB258AA8 != (void)a4)
  {
    id v6 = a4;
    id v7 = a3;
    uint64_t v8 = [v7 length];
    uint64_t v9 = v8 + [v6 length] + 1;
    double v10 = (char *)malloc_type_malloc(2 * v9, 0x1000040BDFB0063uLL);
    [v7 getCharacters:v10];
    double v11 = &v10[2 * v8];
    *(_WORD *)double v11 = 47;
    [v6 getCharacters:v11 + 2];
    uint64_t v12 = [[NSString alloc] initWithCharactersNoCopy:v10 length:v9 freeWhenDone:1];
    uint64_t v13 = (void *)qword_1EB258AB0;
    qword_1EB258AB0 = v12;

    uint64_t v14 = [v7 copy];
    uint64_t v15 = (void *)qword_1EB258AA0;
    qword_1EB258AA0 = v14;

    uint64_t v16 = [v6 copy];
    unint64_t v17 = (void *)qword_1EB258AA8;
    qword_1EB258AA8 = v16;
  }
  id v18 = (id) qword_1EB258AB0;
  return v18;
}

- (void)_registeredSupplementaryViewKind:(id)a3
{
  id v4 = a3;
  supplementaryViewRegisteredKinds = self->_supplementaryViewRegisteredKinds;
  id v8 = v4;
  if (!supplementaryViewRegisteredKinds)
  {
    id v6 = [MEMORY[0x1E4F1CA80] set];
    id v7 = self->_supplementaryViewRegisteredKinds;
    self->_supplementaryViewRegisteredKinds = v6;

    id v4 = v8;
    supplementaryViewRegisteredKinds = self->_supplementaryViewRegisteredKinds;
  }
  [(NSMutableSet *)supplementaryViewRegisteredKinds addObject:v4];
}

void __49__UICollectionView_reconfigureItemsAtIndexPaths___block_invoke(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(a1 + 40), "_reconfigureItemAtIndexPath:", *(void *)(*((void *)&v7 + 1) + 8 * v6++), (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

- (void)_reconfigureItemAtIndexPath:(id)a3
{
  id v5 = a3;
  id v14 = v5;
  if (!v5)
  {
    uint64_t v13 = [MEMORY[0x1E4F28B00] currentHandler];
    [v13 handleFailureInMethod:a2, self, @"UICollectionView.m", 10294, @"Invalid parameter not satisfying: %@", @"indexPath != nil" object file lineNumber description];

    id v5 = 0;
  }
  uint64_t v6 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v5];
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = *(id *)(v6 + 24);
    if (v8)
    {
      long long v9 = v8;
      long long v10 = *(id *)(v7 + 16);
      if (v10)
      {
        __int16 v11 = v10[144];

        if (v11)
        {
          *(unsigned char *)(v7 + 8) |= 4u;
          goto LABEL_10;
        }
      }
      else
      {
      }
    }
  }
  uint64_t v12 = [(UICollectionView *)self _cellForItemAtIndexPath:v14];
  if (v12) {
    [(UICollectionView *)self _reconfigureCell:v12 forItemAtIndexPath:v14];
  }

LABEL_10:
}

- (void)_reconfigureCell:(id)a3 forItemAtIndexPath:(id)a4
{
  id v8 = a3;
  id v9 = a4;
  long long v10 = v9;
  if (v8)
  {
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v23 = [MEMORY[0x1E4F28B00] currentHandler];
    [v23 handleFailureInMethod:a2, self, @"UICollectionView.m", 10315, @"Invalid parameter not satisfying: %@", @"cell != nil" object file lineNumber description];

    if (v10) {
      goto LABEL_3;
    }
  }
  long long v24 = [MEMORY[0x1E4F28B00] currentHandler];
  [v24 handleFailureInMethod:a2, self, @"UICollectionView.m", 10316, @"Invalid parameter not satisfying: %@", @"indexPath != nil" object file lineNumber description];

LABEL_3:
  p_cellBeingReconfigured = &self->_cellBeingReconfigured;
  if (self->_cellBeingReconfigured)
  {
    uint64_t v31 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v25 = [(UICollectionView *)self dataSourceIndexPathForPresentationIndexPath:v10];
    BOOL v30 = *p_cellBeingReconfigured;
    long long v26 = [(UICollectionView *)self dataSourceIndexPathForPresentationIndexPath:self->_indexPathBeingReconfigured];
    [v31 handleFailureInMethod:a2, self, @"UICollectionView.m", 10319, @"Attempted to reconfigure a cell while already in the process of reconfiguring a cell. Check the backtrace to see what's causing this. (Attempted to reconfigure cell %@ for index path %@ while already reconfiguring cell %@ for index path %@)", v8, v25, v30, v26 object file lineNumber description];
  }
  objc_storeStrong((id *)&self->_cellBeingReconfigured, a3);
  p_indexPathBeingReconfigured = &self->_indexPathBeingReconfigured;
  objc_storeStrong((id *)&self->_indexPathBeingReconfigured, a4);
  uint64_t v13 = (void *)_UISetCurrentFallbackEnvironment(self);
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258AE8);
  uint64_t v15 = *(id *)(CategoryCachedImpl + 8);
  if (os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
    && os_signpost_enabled(v15))
  {
    [v10 section];
    [v10 item];
    _os_signpost_emit_unreliably_with_name_impl();
  }

  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  if (!WeakRetained)
  {
    long long v27 = [MEMORY[0x1E4F28B00] currentHandler];
    [v27 handleFailureInMethod:a2, self, @"UICollectionView.m", 10325, @"UICollectionView dataSource is not set: %@", self object file lineNumber description];
  }
  unint64_t v17 = [(UICollectionView *)self _dataSourceProxy];
  id v18 = [v17 collectionView:self cellForItemAtIndexPath:v10];

  if (v18 != v8)
  {
    double v28 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v29 = [(UICollectionView *)self dataSourceIndexPathForPresentationIndexPath:v10];
    objc_msgSend(v28, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, @"UICollectionView.m", 10327, @"UICollectionView dataSource returned a different cell from -collectionView:cellForItemAtIndexPath: than the cell being reconfigured, which is not allowed. When reconfiguring an item, you must obtain the existing cell by dequeuing a cell for the index path specified, using the same registration or reuse identifier that was used to dequeue the cell originally, and return the same cell. Index path: %@; Existing cell: %@; Returned cell: %@",
      v29,
      v8,
      v18);
  }
  unint64_t v19 = __UILogGetCategoryCachedImpl("CollectionView", &qword_1EB258AF0);
  uint64_t v20 = *(id *)(v19 + 8);
  if (os_signpost_id_make_with_pointer(*(os_log_t *)(v19 + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
    && os_signpost_enabled(v20))
  {
    _os_signpost_emit_unreliably_with_name_impl();
  }

  _UIRestorePreviousFallbackEnvironment(v13);
  double v21 = *p_cellBeingReconfigured;
  *p_cellBeingReconfigured = 0;

  BOOL v22 = *p_indexPathBeingReconfigured;
  *p_indexPathBeingReconfigured = 0;
}

void __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_394(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _dataSourceProxy];
  uint64_t v2 = [v5 collectionView:*(void *)(a1 + 32) cellForItemAtIndexPath:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

- (UICollectionViewCell)dequeueConfiguredReusableCellWithRegistration:(UICollectionViewCellRegistration *)registration forIndexPath:(NSIndexPath *)indexPath item:(id)item
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v9 = registration;
  id v10 = item;
  __int16 v11 = indexPath;
  if (dyld_program_sdk_at_least())
  {
    uint64_t v12 = [(UICollectionViewCellRegistration *)v9 _collectionViewRequestingViewWhenCreated];

    if (v12 == self)
    {
      if (_UIIsPrivateMainBundle())
      {
        uint64_t v13 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          long long v24 = v9;
          _os_log_fault_impl(&dword_1853B0000, v13, OS_LOG_TYPE_FAULT, "Attempted to dequeue a cell using a registration that was created inside -collectionView:cellForItemAtIndexPath: or inside a UICollectionViewDiffableDataSource cell provider. Creating a new registration each time a cell is requested will prevent reuse and cause created cells to remain inaccessible in memory for the lifetime of the collection view. Registrations should be created up front and reused. Registration: %@", buf, 0xCu);
        }
      }
      else
      {
        uint64_t v13 = [MEMORY[0x1E4F28B00] currentHandler];
        [v13 handleFailureInMethod:a2, self, @"UICollectionView.m", 9726, @"Attempted to dequeue a cell using a registration that was created inside -collectionView:cellForItemAtIndexPath: or inside a UICollectionViewDiffableDataSource cell provider. Creating a new registration each time a cell is requested will prevent reuse and cause created cells to remain inaccessible in memory for the lifetime of the collection view. Registrations should be created up front and reused. Registration: %@", v9 object file lineNumber description];
      }
    }
  }
  id v14 = [(UICollectionViewCellRegistration *)v9 reuseIdentifier];
  if (![v14 length])
  {
    BOOL v22 = [MEMORY[0x1E4F28B00] currentHandler];
    [v22 handleFailureInMethod:a2, self, @"UICollectionView.m", 9728, @"UIKit internal inconsistency: registration missing reuse identifier %@", v9 object file lineNumber description];
  }
  if ([(UICollectionViewCellRegistration *)v9 hasCellClass])
  {
    uint64_t v15 = [(NSMutableDictionary *)self->_cellClassDict objectForKeyedSubscript:v14];

    if (!v15) {
      [(UICollectionView *)self registerClass:[(UICollectionViewCellRegistration *)v9 cellClass] forCellWithReuseIdentifier:v14];
    }
  }
  else if ([(UICollectionViewCellRegistration *)v9 hasCellNib])
  {
    uint64_t v16 = [(NSMutableDictionary *)self->_cellNibDict objectForKeyedSubscript:v14];

    if (!v16)
    {
      unint64_t v17 = [(UICollectionViewCellRegistration *)v9 cellNib];
      [(UICollectionView *)self registerNib:v17 forCellWithReuseIdentifier:v14];
    }
  }
  else
  {
    id v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 9739, @"Cell registration is invalid (no cell class or nib) %@", v9 object file lineNumber description];
  }
  unint64_t v19 = [(UICollectionView *)self _dequeueReusableViewOfKind:@"UICollectionElementKindCell" withIdentifier:v14 forIndexPath:v11 viewCategory:0];
  uint64_t v20 = [(UICollectionViewCellRegistration *)v9 configurationHandler];
  ((void (**)(void, void *, NSIndexPath *, id))v20)[2](v20, v19, v11, v10);

  return (UICollectionViewCell *)v19;
}

- (void)registerClass:(Class)cellClass forCellWithReuseIdentifier:(NSString *)identifier
{
  uint64_t v15 = identifier;
  if ([(NSString *)v15 length])
  {
    if (!cellClass) {
      goto LABEL_5;
    }
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v11 = *MEMORY[0x1E4F1C3C8];
    uint64_t v12 = NSStringFromSelector(a2);
    [v10 raise:v11, @"must pass a valid reuse identifier to -[UICollectionView %@]", v12 format];

    if (!cellClass) {
      goto LABEL_5;
    }
  }
  if (([(objc_class *)cellClass isSubclassOfClass:objc_opt_class()] & 1) == 0)
  {
    uint64_t v13 = [MEMORY[0x1E4F28B00] currentHandler];
    id v14 = NSStringFromClass(cellClass);
    [v13 handleFailureInMethod:a2, self, @"UICollectionView.m", 9464, @"attempt to register a cell class '%@' which is not a subclass of UICollectionViewCell", v14 object file lineNumber description];
  }
LABEL_5:
  if (!self->_cellClassDict)
  {
    uint64_t v7 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    cellClassDict = self->_cellClassDict;
    self->_cellClassDict = v7;
  }
  [(NSMutableDictionary *)self->_cellNibDict removeObjectForKey:v15];
  id v9 = self->_cellClassDict;
  if (cellClass) {
    [(NSMutableDictionary *)v9 setValue:cellClass forKey:v15];
  }
  else {
    [(NSMutableDictionary *)v9 removeObjectForKey:v15];
  }
}

- (void)setScrollEnabled:(BOOL)a3
{
  BOOL v3 = a3;
  BOOL v5 = [(UIScrollView *)self isScrollEnabled];
  v6.receiver = self;
  v6.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v6 setScrollEnabled:v3];
  if (v5 != v3) {
    [(UICollectionView *)self _updateDerivesVisibleBoundsFromContainingScrollView];
  }
}

- (void)_didMoveFromWindow:(id)a3 toWindow:(id)a4
{
  v6.receiver = self;
  v6.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v6 _didMoveFromWindow:a3 toWindow:a4];
  BOOL v5 = +[_UIHDRUsageCoordinator sharedInstance]();
  -[_UIHDRUsageCoordinator applyConstrainedHDROverrideToView:]((uint64_t)v5, self);

  [(UICollectionView *)self _updateDerivesVisibleBoundsFromContainingScrollView];
}

- (void)_didMoveFromSuperview:(id)a3
{
  v4.receiver = self;
  v4.super_class = (Class)UICollectionView;
  [(UIView *)&v4 _didMoveFromSuperview:a3];
  [(UICollectionView *)self _updateDerivesVisibleBoundsFromContainingScrollView];
}

- (void)_updateDerivesVisibleBoundsFromContainingScrollView
{
  p_containerScrollView = &self->_containerScrollView;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_containerScrollView);
  id v10 = WeakRetained;
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x800000000000) != 0)
  {
    if ([(UIScrollView *)self isScrollEnabled])
    {
      id v5 = 0;
    }
    else
    {
      id v5 = [(UIView *)self _containingScrollView];
    }
    id WeakRetained = v10;
  }
  else
  {
    id v5 = 0;
  }
  if (WeakRetained != v5)
  {
    if (WeakRetained)
    {
      objc_storeWeak((id *)p_containerScrollView, 0);
      -[UIView _removeGeometryChangeObserver:](self, v10);
    }
    if (v5)
    {
      objc_storeWeak((id *)p_containerScrollView, v5);
      -[UIView _addGeometryChangeObserver:](self, v5);
    }
  }
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v5 != 0) == ((v7 & 0x1000000000000) == 0))
  {
    int v8 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v9 = *(void *)p_collectionViewFlags;
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v8);
    *(void *)p_uint64_t collectionViewFlags = v9;
    *((void *)&self->_collectionViewFlags + 1) = v7 & 0xFFFEFFFFFFFFFFFFLL | ((unint64_t)(v5 != 0) << 48);
    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:0];
  }
}

- (void)_stopScrollingNotify:(BOOL)a3 pin:(BOOL)a4
{
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v5 _stopScrollingNotify:a3 pin:a4];
  [(UICollectionView *)self _clearTargetIndexPathForScrolling];
}

- (void)setContentOffset:(CGPoint)a3 animated:(BOOL)a4
{
  BOOL v4 = a4;
  double y = a3.y;
  double x = a3.x;
  [(UIScrollView *)self contentOffset];
  if (x != v9 || y != v8)
  {
    [(UIView *)self bounds];
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;
    debugger = self->_debugger;
    if (debugger)
    {
      [(UIScrollView *)self contentOffset];
      -[_UICollectionViewFeedbackLoopDebugger recordCollectionViewPointPropertyChange:fromPoint:toPoint:](debugger, "recordCollectionViewPointPropertyChange:fromPoint:toPoint:", @"contentOffset");
    }
    collectionViewData = self->_collectionViewData;
    if (collectionViewData
      && (*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 8) != 0
      && -[UICollectionViewLayout shouldInvalidateLayoutForBoundsChange:](self->_layout, "shouldInvalidateLayoutForBoundsChange:", x, y, v16, v18))
    {
      double v21 = -[UICollectionViewLayout _invalidationContextForBoundsChange:fromOldBounds:](self->_layout, "_invalidationContextForBoundsChange:fromOldBounds:", x, y, v16, v18, v12, v14, v16, v18);
      [(UICollectionViewLayout *)self->_layout _invalidateLayoutUsingContext:v21];
    }
  }
  if (v4
    && ([(UICollectionView *)self _customScrollAnimation],
        (uint64_t v22 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v23 = (id)v22;
    -[UIScrollView _setContentOffset:animation:](self, "_setContentOffset:animation:", v22, x, y);
  }
  else
  {
    v24.receiver = self;
    v24.super_class = (Class)UICollectionView;
    -[UIScrollView setContentOffset:animated:](&v24, sel_setContentOffset_animated_, v4, x, y);
  }
}

- (id)_customScrollAnimation
{
  return 0;
}

- (void)_updateBackgroundColorIfNeeded
{
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x2000000000) == 0)
  {
    BOOL v3 = [(UICollectionView *)self backgroundView];

    if (!v3)
    {
      if (dyld_program_sdk_at_least())
      {
        BOOL v4 = [(UICollectionViewLayout *)self->_layout _preferredBackgroundColor];
      }
      else
      {
        BOOL v4 = 0;
      }
      unint64_t v5 = [(UIView *)self traitCollection];
      if (v5)
      {
        objc_super v6 = (void *)v5;
        _UIRecordTraitUsage(v5, 0x13uLL);
        uint64_t v7 = v6[16];

        if (v4)
        {
LABEL_15:
          v9[0] = MEMORY[0x1E4F143A8];
          v9[1] = 3221225472;
          v9[2] = __50__UICollectionView__updateBackgroundColorIfNeeded__block_invoke;
          v9[3] = &unk_1E52D9F98;
          v9[4] = self;
          id v10 = v4;
          id v8 = v4;
          +[UIView _performSystemAppearanceModifications:v9];

          return;
        }
        if (v7 == 2)
        {
          BOOL v4 = 0;
          goto LABEL_15;
        }
      }
      else if (v4)
      {
        goto LABEL_15;
      }
      if (dyld_program_sdk_at_least()) {
        +[UIColor systemBackgroundColor];
      }
      else {
      BOOL v4 = +[UIColor blackColor];
      }
      goto LABEL_15;
    }
  }
}

- (UIView)backgroundView
{
  return self->_backgroundView;
}

- (id)preparedCells
{
  BOOL v3 = [(UICollectionView *)self visibleCells];
  BOOL v4 = (void *)[v3 mutableCopy];

  prefetchCacheItems = self->_prefetchCacheItems;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __33__UICollectionView_preparedCells__block_invoke;
  v8[3] = &unk_1E52E5298;
  id v6 = v4;
  id v9 = v6;
  [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v8];

  return v6;
}

- (NSArray)visibleCells
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  return (NSArray *)[(UICollectionView *)self _existingVisibleCells];
}

void __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int has_internal_diagnostics = os_variant_has_internal_diagnostics();
  char v6 = [v4 deleteAfterAnimation];
  if (has_internal_diagnostics)
  {
    if ((v6 & 1) == 0)
    {
      double v11 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v15 = 138412546;
        uint64_t v16 = v14;
        __int16 v17 = 2112;
        id v18 = v4;
        _os_log_fault_impl(&dword_1853B0000, v11, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: expected disappearing view to be deleted after its animation completes. Collection view: %@; Animation: %@",
          (uint8_t *)&v15,
          0x16u);
      }
    }
  }
  else if ((v6 & 1) == 0)
  {
    double v12 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIInternalPreference_CollectionViewShouldComputeVisibleBoundsForCurrentUpdateAfterPreparingLayout_block_invoke_9___s_category)+ 8);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      int v15 = 138412546;
      uint64_t v16 = v13;
      __int16 v17 = 2112;
      id v18 = v4;
      _os_log_impl(&dword_1853B0000, v12, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: expected disappearing view to be deleted after its animation completes. Collection view: %@; Animation: %@",
        (uint8_t *)&v15,
        0x16u);
    }
  }
  uint64_t v7 = [v4 view];
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = [v7 _layoutAttributes];
  id v10 = [v4 finalLayoutAttributes];
  (*(void (**)(uint64_t, void *, void *, void *))(v8 + 16))(v8, v9, v10, v7);
}

void __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke_902(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int has_internal_diagnostics = os_variant_has_internal_diagnostics();
  int v6 = [v4 deleteAfterAnimation];
  if (has_internal_diagnostics)
  {
    if (v6)
    {
      uint64_t v22 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
      {
        uint64_t v25 = *(void *)(a1 + 32);
        int v26 = 138412546;
        uint64_t v27 = v25;
        __int16 v28 = 2112;
        id v29 = v4;
        _os_log_fault_impl(&dword_1853B0000, v22, OS_LOG_TYPE_FAULT, "UICollectionView internal inconsistency: on-screen view is unexpectedly scheduled to delete after its animation completes. Collection view: %@; Animation: %@",
          (uint8_t *)&v26,
          0x16u);
      }
    }
  }
  else if (v6)
  {
    id v23 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", _UIInternalPreference_CollectionViewShouldComputeVisibleBoundsForCurrentUpdateAfterPreparingLayout_block_invoke_10___s_category)+ 8);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      uint64_t v24 = *(void *)(a1 + 32);
      int v26 = 138412546;
      uint64_t v27 = v24;
      __int16 v28 = 2112;
      id v29 = v4;
      _os_log_impl(&dword_1853B0000, v23, OS_LOG_TYPE_ERROR, "UICollectionView internal inconsistency: on-screen view is unexpectedly scheduled to delete after its animation completes. Collection view: %@; Animation: %@",
        (uint8_t *)&v26,
        0x16u);
    }
  }
  uint64_t v7 = [v4 view];
  uint64_t v8 = [v7 _layoutAttributes];
  [v8 frame];
  double v10 = v9;
  double v12 = v11;
  uint64_t v13 = [v4 finalLayoutAttributes];
  [v13 frame];
  double v15 = vabdd_f64(v10, v14);
  double v17 = vabdd_f64(v12, v16);

  if (v15 >= 0.00000011920929 || v17 >= 0.00000011920929)
  {
    uint64_t v19 = *(void *)(a1 + 40);
    uint64_t v20 = [v7 _layoutAttributes];
    double v21 = [v4 finalLayoutAttributes];
    (*(void (**)(uint64_t, void *, void *, void *))(v19 + 16))(v19, v20, v21, v7);
  }
}

void __94__UICollectionView__updateOrderingOfViewsInDisappearingViewAnimations_onScreenViewAnimations___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v11 = a2;
  id v7 = a4;
  if (v11)
  {
    if (a3)
    {
      id v8 = a3;
      uint64_t v9 = [v11 zIndex];
      uint64_t v10 = [v8 zIndex];

      if (v9 == v10) {
        objc_msgSend(*(id *)(a1 + 32), "_addControlledSubview:atZIndex:forced:", v7, objc_msgSend(v11, "zIndex"), 1);
      }
    }
  }
}

- (void)_addControlledSubview:(id)a3 atZIndex:(int64_t)a4 forced:(BOOL)a5
{
}

- (void)_notifyDidScroll
{
  if (self->_didScrollNotificationSuspensionCount <= 0)
  {
    v2.receiver = self;
    v2.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v2 _notifyDidScroll];
  }
}

- (void)_layoutAdjustmentsDidChange
{
  v3.receiver = self;
  v3.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v3 _layoutAdjustmentsDidChange];
  [(UICollectionViewLayout *)self->_layout _scrollViewLayoutAdjustmentsChanged];
}

uint64_t __50__UICollectionView__sortedDeduplicatedReloadItems__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "compareIndexPaths:");
}

- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)a3 isDecorationView:(BOOL)a4
{
  id v6 = a3;
  [(UICollectionView *)self _reloadDataIfNeeded];
  subviewManager = (uint64_t *)self->_subviewManager;
  if (a4) {
    -[_UICollectionViewSubviewManager indexPathsForVisibleDecorationsOfKind:](subviewManager, (uint64_t)v6);
  }
  else {
  id v8 = -[_UICollectionViewSubviewManager indexPathsForVisibleSupplementariesOfKind:](subviewManager, (uint64_t)v6);
  }

  return v8;
}

- (void)_prepareLayoutForUpdates:(BOOL)a3
{
  BOOL v3 = a3;
  -[UICollectionViewData _prepareToLoadData]((uint64_t)self->_collectionViewData);
  id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unint64_t v5 = [(NSArray *)self->_originalDeleteItems sortedArrayUsingSelector:sel_compareIndexPaths_];
  [v9 addObjectsFromArray:v5];

  id v6 = [(NSArray *)self->_originalInsertItems sortedArrayUsingSelector:sel_compareIndexPaths_];
  [v9 addObjectsFromArray:v6];

  id v7 = [(NSMutableArray *)self->_reloadItems sortedArrayUsingSelector:sel_compareIndexPaths_];
  [v9 addObjectsFromArray:v7];

  id v8 = [(NSMutableArray *)self->_moveItems sortedArrayUsingSelector:sel_compareIndexPaths_];
  [v9 addObjectsFromArray:v8];

  [(UICollectionViewLayout *)self->_layout _prepareForCollectionViewUpdates:v9 animated:v3];
}

- (void)_enumerateVisibleViews:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    id v9 = [MEMORY[0x1E4F28B00] currentHandler];
    [v9 handleFailureInMethod:a2, self, @"UICollectionView.m", 1490, @"Invalid parameter not satisfying: %@", @"block != NULL" object file lineNumber description];
  }
  subviewManager = self->_subviewManager;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __43__UICollectionView__enumerateVisibleViews___block_invoke;
  v10[3] = &unk_1E52E4FA8;
  id v11 = v5;
  id v7 = v5;
  id v8 = v7;
  if (subviewManager)
  {
    -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v10);
    id v8 = v11;
  }
}

- (void)_updatePreferredAttributesForCurrentUpdate
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if ([(UICollectionViewLayout *)self->_layout _estimatesSizes])
  {
    if (self->_currentUpdate)
    {
      if ([(UICollectionViewLayout *)self->_layout _needsRecomputeOfPreferredAttributesForVisibleEstimatedItemsDuringUpdate])
      {
        if (![(UICollectionView *)self _isReordering])
        {
          indexPathsRequiringPreferredAttributes = self->_indexPathsRequiringPreferredAttributes;
          self->_indexPathsRequiringPreferredAttributes = 0;

          [(UICollectionView *)self _updatePreferredAttributesForCurrentUpdate:0];
          unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_updatePreferredAttributesForCurrentUpdate___s_category);
          if (*(unsigned char *)CategoryCachedImpl)
          {
            id v5 = *(NSObject **)(CategoryCachedImpl + 8);
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            {
              int v6 = 134217984;
              id v7 = self;
              _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_ERROR, "[UICV %p] _updatePreferredAttributesForCurrentUpdate finished", (uint8_t *)&v6, 0xCu);
            }
          }
        }
      }
    }
  }
}

- (void)_updatePreferredAttributesForCurrentUpdate:(unint64_t)a3
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  if (a3 >= 0x65)
  {
    if (os_variant_has_internal_diagnostics())
    {
      id v44 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v61 = self;
        _os_log_fault_impl(&dword_1853B0000, v44, OS_LOG_TYPE_FAULT, "UICollectionView exceeded the maximum allowed number of preferred attribute update passes while preparing update animations. This likely indicates a bug in the sizing implementation of self-sizing views, which prevents the layout from converging on a stable solution. Views may animate incorrectly as a result. %@", buf, 0xCu);
      }
    }
    else
    {
      id v4 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_updatePreferredAttributesForCurrentUpdate____s_category)+ 8);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v61 = self;
        _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "UICollectionView exceeded the maximum allowed number of preferred attribute update passes while preparing update animations. This likely indicates a bug in the sizing implementation of self-sizing views, which prevents the layout from converging on a stable solution. Views may animate incorrectly as a result. %@", buf, 0xCu);
      }
    }
    return;
  }
  unint64_t v5 = a3;
  int v6 = dyld_program_sdk_at_least();
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  *((void *)&self->_collectionViewFlags + 1) = v7 & 0xFFFFFFFFFFFFFEFFLL;
  [(UICollectionView *)self _visibleBounds];
  double x = v8;
  double y = v9;
  double width = v10;
  double height = v11;
  if ((v6 & 1) == 0)
  {
    CGFloat v16 = CGRectGetWidth(*(CGRect *)&v8) * -0.5;
    v63.origin.double x = x;
    v63.origin.double y = y;
    v63.size.double width = width;
    v63.size.double height = height;
    CGFloat v17 = CGRectGetHeight(v63) * -0.5;
    v64.origin.double x = x;
    v64.origin.double y = y;
    v64.size.double width = width;
    v64.size.double height = height;
    CGRect v65 = CGRectInset(v64, v16, v17);
    double x = v65.origin.x;
    double y = v65.origin.y;
    double width = v65.size.width;
    double height = v65.size.height;
  }
  BOOL v18 = [(UICollectionViewLayout *)self->_layout _estimatesSupplementaryItems];
  [(UICollectionViewLayout *)self->_layout _willPerformUpdateVisibleCellsPass];
  uint64_t v19 = (void *)_UISetCurrentFallbackEnvironment(self);
  id v51 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  id v50 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  int v20 = dyld_program_sdk_at_least();
  BOOL v49 = v18;
  if (v18) {
    int v21 = dyld_program_sdk_at_least();
  }
  else {
    int v21 = 0;
  }
  int v53 = v21;
  if ((v20 | v21))
  {
    uint64_t v45 = v19;
    __int16 v46 = v7;
    int v47 = v6;
    unint64_t v48 = v5;
    -[UICollectionViewLayout _extendedAttributesQueryIncludingOrthogonalScrollingRegions:](self->_layout, "_extendedAttributesQueryIncludingOrthogonalScrollingRegions:", x, y, width, height);
    long long v55 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v22 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
    int v23 = v53;
    if (!v22) {
      goto LABEL_41;
    }
    uint64_t v24 = v22;
    uint64_t v25 = *(void *)v56;
    CGRect v52 = self;
    while (1)
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v56 != v25) {
          objc_enumerationMutation(obj);
        }
        uint64_t v27 = *(void *)(*((void *)&v55 + 1) + 8 * v26);
        if (v27)
        {
          __int16 v28 = *(_WORD *)(v27 + 288);
          int v29 = v28 & 1;
          BOOL v30 = (v28 & 3) == 0;
        }
        else
        {
          int v29 = 0;
          BOOL v30 = 0;
        }
        if ((v29 ^ 1 | v20) == 1 && !v30 | v23)
        {
          uint64_t v31 = [*(id *)(*((void *)&v55 + 1) + 8 * v26) indexPath];
          if (!v31)
          {
LABEL_36:

            goto LABEL_37;
          }
          if (v29)
          {
            double v32 = [(UICollectionViewUpdate *)self->_currentUpdate initialIndexPathForFinalIndexPath:v31];
            if (!v32) {
              goto LABEL_35;
            }
            double v33 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v32);

            if (v33)
            {
              self = v52;
              if (!v30)
              {
LABEL_35:

                int v23 = v53;
                goto LABEL_36;
              }
LABEL_29:
              subviewManager = (uint64_t *)self->_subviewManager;
              double v37 = -[UIBarButtonItemGroup _items]((id *)v27);
              __int16 v38 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](subviewManager, (uint64_t)v37, (uint64_t)v32);

              if (!v38)
              {
                uint64_t v39 = v50;
                CGFloat v40 = (void *)v27;
                goto LABEL_33;
              }
            }
            else
            {
              uint64_t v39 = v51;
              CGFloat v40 = v31;
LABEL_33:
              [v39 addObject:v40];
            }
          }
          else
          {
            if (!v30)
            {
              double v32 = 0;
              goto LABEL_35;
            }
            currentUpdate = self->_currentUpdate;
            unint64_t v35 = -[UIBarButtonItemGroup _items]((id *)v27);
            double v32 = -[UICollectionViewUpdate validatedOldIndexPathForSupplementaryElementOfKind:newIndexPath:]((uint64_t)currentUpdate, v35, v31);

            if (v32)
            {
              self = v52;
              goto LABEL_29;
            }
          }
          self = v52;
          goto LABEL_35;
        }
LABEL_37:
        ++v26;
      }
      while (v24 != v26);
      uint64_t v41 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
      uint64_t v24 = v41;
      if (!v41)
      {
LABEL_41:

        unint64_t v5 = v48;
        int v6 = v47;
        LOWORD(v7) = v46;
        uint64_t v19 = v45;
        break;
      }
    }
  }
  int v42 = -[UICollectionView _updatePreferredAttributesForItemsInCurrentUpdateWithRect:newlyVisible:includeInserts:](self, "_updatePreferredAttributesForItemsInCurrentUpdateWithRect:newlyVisible:includeInserts:", v51, v5 == 0, x, y, width, height);
  if (v49) {
    v42 |= -[UICollectionView _updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect:newlyVisible:includeInserts:](self, "_updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect:newlyVisible:includeInserts:", v50, v5 == 0, x, y, width, height);
  }
  _UIRestorePreviousFallbackEnvironment(v19);
  -[UICollectionViewLayout _didPerformUpdateVisibleCellsPassWithLayoutOffset:](self->_layout, "_didPerformUpdateVisibleCellsPassWithLayoutOffset:", *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8));
  uint64_t v43 = *((void *)&self->_collectionViewFlags + 1);
  *((void *)&self->_collectionViewFlags + 1) = v43 | v7 & 0x100;
  if ((v6 & v42) == 1 && (v43 & 0x100) != 0) {
    [(UICollectionView *)self _updatePreferredAttributesForCurrentUpdate:v5 + 1];
  }
}

- (void)_createAndAppendViewAnimationsForNewlyVisibleAuxiliariesInCurrentUpdate:(id)a3 appearingAnimations:(id)a4 animationsForOnScreenViews:(id)a5 newSubviewCollection:(id)a6 attributesForNewModel:(id)a7
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  id v40 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  double v15 = v12;
  id v39 = v14;
  id v16 = a7;
  if (dyld_program_sdk_at_least()
    && [(UICollectionViewLayout *)self->_layout _wantsAnimationsForOffscreenAuxillaries])
  {
    uint64_t v45 = self;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    id v38 = v16;
    id obj = v16;
    uint64_t v17 = [obj countByEnumeratingWithState:&v48 objects:v52 count:16];
    if (!v17) {
      goto LABEL_41;
    }
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v49;
    int v42 = v15;
    uint64_t v43 = v13;
    while (1)
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v49 != v19) {
          objc_enumerationMutation(obj);
        }
        uint64_t v21 = *(void *)(*((void *)&v48 + 1) + 8 * v20);
        if (v21)
        {
          __int16 v22 = *(_WORD *)(v21 + 288);
          if ((v22 & 2) != 0 || (v22 & 3) == 0)
          {
            int v23 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, *(void *)(*((void *)&v48 + 1) + 8 * v20));
            uint64_t v24 = [v13 objectForKey:v23];
            if (v24) {
              goto LABEL_12;
            }
            uint64_t v25 = [v15 objectForKey:v23];

            if (!v25)
            {
              uint64_t v24 = -[UIBarButtonItemGroup _items]((id *)v21);
              id v44 = [(id)v21 indexPath];
              uint64_t v26 = -[UICollectionViewUpdate validatedOldIndexPathForSupplementaryElementOfKind:newIndexPath:]((uint64_t)v45->_currentUpdate, v24, v44);
              __int16 v46 = -[UICollectionView _visibleSupplementaryViewOfKind:atIndexPath:isDecorationView:](v45, "_visibleSupplementaryViewOfKind:atIndexPath:isDecorationView:", v24);
              if (!v26) {
                goto LABEL_45;
              }
              uint64_t v27 = v26;
              uint64_t v28 = [v26 section];
              BOOL v29 = v28 < -[UICollectionViewData numberOfSections]((uint64_t)v45->_currentUpdate->_oldModel);
              uint64_t v26 = v27;
              if (!v29 && [v27 item] != 0x7FFFFFFFFFFFFFFFLL) {
                goto LABEL_45;
              }
              uint64_t oldModel = (uint64_t)v45->_currentUpdate->_oldModel;
              if ((v22 & 2) != 0) {
                -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:](oldModel, (uint64_t)v24, v27);
              }
              else {
              uint64_t v31 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:](oldModel, (uint64_t)v24, v27);
              }
              if (!v31)
              {
LABEL_45:
                uint64_t v31 = [v46 _layoutAttributes];
                if (!v31)
                {
                  layout = v45->_layout;
                  if ((v22 & 2) != 0) {
                    [(UICollectionViewLayout *)layout initialLayoutAttributesForAppearingDecorationElementOfKind:v24 atIndexPath:v44];
                  }
                  else {
                  uint64_t v31 = [(UICollectionViewLayout *)layout initialLayoutAttributesForAppearingSupplementaryElementOfKind:v24 atIndexPath:v44];
                  }
                  if (!v31)
                  {
                    uint64_t v31 = (void *)[(id)v21 copy];
                    [v31 setAlpha:0.0];
                  }
                }
              }
              char v33 = [(id)v21 isHidden];
              if (v26 && (v33 & 1) == 0 && !v46)
              {
                uint64_t v41 = v26;
                id v34 = [(UICollectionView *)v45 _createPreparedSupplementaryViewForElementOfKind:v24 atIndexPath:v44 layout:v45->_layout withLayoutAttributes:v31 applyAttributes:1];
                if (v34)
                {
                  if ((v22 & 2) != 0) {
                    -[_UICollectionViewSubviewCollection setView:forDecorationOfKind:atIndexPath:]((uint64_t)v39, (uint64_t)v34, (uint64_t)v24, (uint64_t)v44);
                  }
                  else {
                    -[_UICollectionViewSubviewCollection setView:forSupplementaryOfKind:atIndexPath:]((uint64_t)v39, (uint64_t)v34, (uint64_t)v24, (uint64_t)v44);
                  }
                  unint64_t v35 = [(UICollectionViewLayout *)v45->_layout _animationForReusableView:v34 toLayoutAttributes:v21 type:2];
                  double v36 = [[UICollectionViewAnimation alloc] initWithView:v34 viewType:2 finalLayoutAttributes:v21 startFraction:0 endFraction:0 animateFromCurrentPostion:v35 deleteAfterAnimation:0.0 customAnimations:1.0];
                  [v43 setObject:v36 forKey:v23];
                  [v40 addObject:v36];
                }
                uint64_t v26 = v41;
              }

              double v15 = v42;
              id v13 = v43;
LABEL_12:
            }
          }
        }
        ++v20;
      }
      while (v18 != v20);
      uint64_t v37 = [obj countByEnumeratingWithState:&v48 objects:v52 count:16];
      uint64_t v18 = v37;
      if (!v37)
      {
LABEL_41:

        id v16 = v38;
        break;
      }
    }
  }
}

- (BOOL)_updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect:(CGRect)a3 newlyVisible:(id)a4 includeInserts:(BOOL)a5
{
  BOOL v5 = a5;
  CGFloat height = a3.size.height;
  CGFloat width = a3.size.width;
  CGFloat y = a3.origin.y;
  CGFloat x = a3.origin.x;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v11 = a4;
  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  if (v5)
  {
    id v33 = v11;
    id v13 = self->_currentUpdate->_newModel;
    -[UICollectionViewData validateLayoutInRect:]((uint64_t)v13, x, y, width, height);
    double v32 = v13;
    -[UICollectionViewData knownSupplementaryElementKinds]((id *)&v13->super.isa);
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v36 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
    if (v36)
    {
      uint64_t v35 = *(void *)v45;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v45 != v35) {
            objc_enumerationMutation(obj);
          }
          uint64_t v37 = v14;
          uint64_t v15 = *(void *)(*((void *)&v44 + 1) + 8 * v14);
          id v16 = -[UICollectionViewLayout indexPathsToInsertForSupplementaryViewOfKind:](self->_layout, "indexPathsToInsertForSupplementaryViewOfKind:", v15, v32);
          long long v40 = 0u;
          long long v41 = 0u;
          long long v42 = 0u;
          long long v43 = 0u;
          uint64_t v17 = [v16 countByEnumeratingWithState:&v40 objects:v48 count:16];
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = *(void *)v41;
            do
            {
              for (uint64_t i = 0; i != v18; ++i)
              {
                if (*(void *)v41 != v19) {
                  objc_enumerationMutation(v16);
                }
                uint64_t v21 = [(UICollectionViewLayout *)self->_layout layoutAttributesForSupplementaryViewOfKind:v15 atIndexPath:*(void *)(*((void *)&v40 + 1) + 8 * i)];
                __int16 v22 = v21;
                if (v21)
                {
                  layout = self->_layout;
                  [v21 frame];
                  -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v22);
                  v52.origin.CGFloat x = v24;
                  v52.origin.CGFloat y = v25;
                  v52.size.CGFloat width = v26;
                  v52.size.CGFloat height = v27;
                  v51.origin.CGFloat x = x;
                  v51.origin.CGFloat y = y;
                  v51.size.CGFloat width = width;
                  v51.size.CGFloat height = height;
                  if (CGRectIntersectsRect(v51, v52)) {
                    [v12 addObject:v22];
                  }
                }
              }
              uint64_t v18 = [v16 countByEnumeratingWithState:&v40 objects:v48 count:16];
            }
            while (v18);
          }

          ++v14;
        }
        while (v37 + 1 != v36);
        uint64_t v36 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
      }
      while (v36);
    }

    id v11 = v33;
  }
  if (dyld_program_sdk_at_least())
  {
    subviewManager = self->_subviewManager;
    v38[0] = MEMORY[0x1E4F143A8];
    v38[1] = 3221225472;
    v38[2] = __116__UICollectionView__updatePreferredAttributesForSupplementariesInCurrentUpdateWithRect_newlyVisible_includeInserts___block_invoke;
    v38[3] = &unk_1E52E5AE0;
    v38[4] = self;
    id v29 = v12;
    id v39 = v29;
    if (subviewManager)
    {
      -[_UICollectionViewSubviewCollection enumerateSupplementariesWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v38);
      id v29 = v39;
    }
  }
  if (objc_msgSend(v11, "count", v32)) {
    [v12 unionSet:v11];
  }
  BOOL v30 = [(UICollectionView *)self _updatePreferredAttributesForSupplementariesInCurrentUpdate:v12];

  return v30;
}

- (BOOL)_updatePreferredAttributesForSupplementariesInCurrentUpdate:(id)a3
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    int v7 = 0;
    uint64_t v8 = *(void *)v22;
    while (1)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v22 != v8) {
          objc_enumerationMutation(v4);
        }
        double v10 = *(id **)(*((void *)&v21 + 1) + 8 * i);
        if (dyld_program_sdk_at_least())
        {
          currentUpdate = self->_currentUpdate;
          id v12 = -[UIBarButtonItemGroup _items](v10);
          id v13 = [v10 indexPath];
          -[UICollectionViewUpdate validatedOldIndexPathForSupplementaryElementOfKind:newIndexPath:]((uint64_t)currentUpdate, v12, v13);
          id v14 = (id)objc_claimAutoreleasedReturnValue();

          if (v14)
          {
            subviewManager = (uint64_t *)self->_subviewManager;
            id v16 = -[UIBarButtonItemGroup _items](v10);
            uint64_t v17 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](subviewManager, (uint64_t)v16, (uint64_t)v14);

            if (v17)
            {
              v7 |= [(UICollectionView *)self _updatePreferredAttributesForReusableViewInCurrentUpdate:v17 withOriginalAttributes:v10 isExistingView:1];

              goto LABEL_14;
            }
          }
        }
        uint64_t v18 = -[UIBarButtonItemGroup _items](v10);
        uint64_t v19 = [v10 indexPath];
        id v14 = [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v18 atIndexPath:v19 layout:self->_layout withLayoutAttributes:v10 applyAttributes:1];

        if (v14)
        {
          v7 |= [(UICollectionView *)self _updatePreferredAttributesForReusableViewInCurrentUpdate:v14 withOriginalAttributes:v10 isExistingView:0];
          if (([v14 _isInUpdateAnimation] & 1) == 0) {
            [(UICollectionView *)self _reuseSupplementaryView:v14];
          }
        }
LABEL_14:
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (!v6) {
        goto LABEL_18;
      }
    }
  }
  LOBYTE(v7) = 0;
LABEL_18:

  return v7 & 1;
}

uint64_t __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_923(uint64_t a1)
{
  [*(id *)(a1 + 32) contentOffset];
  double v3 = v2;
  double v5 = v4;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(v6 + 2192);
  double v8 = *(double *)(v7 + 48);
  double v9 = *(double *)(v7 + 56);
  int v10 = *(unsigned __int16 *)(v6 + 2648) | (*(unsigned __int8 *)(v6 + 2650) << 16);
  *(_WORD *)(v6 + 2648) = *(_WORD *)(v6 + 2648);
  *(unsigned char *)(v6 + 2650) = (v10 | 0x20000u) >> 16;
  objc_msgSend((id)v6, "setContentOffset:", v8, v9);
  int v11 = *(unsigned __int16 *)(v6 + 2648);
  unsigned int v12 = (v11 | (*(unsigned __int8 *)(v6 + 2650) << 16)) & 0xFFFDFFFF;
  *(_WORD *)(v6 + 2648) = v11;
  *(unsigned char *)(v6 + 2650) = (v12 | v10 & 0x20000) >> 16;
  id v13 = (void *)_UISetCurrentFallbackEnvironment(*(void **)(a1 + 32));
  id v14 = -[_UICollectionViewAnimationContext initWithDataSourceTranslator:updates:layout:]((id *)[_UICollectionViewAnimationContext alloc], *(void **)(*(void *)(a1 + 32) + 2192), *(void **)(a1 + 48), *(void **)(*(void *)(a1 + 32) + 2064));
  -[_UICollectionViewAnimator setAnimationContext:](*(void *)(a1 + 40), v14);

  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16) {
    [v15 _viewAnimationsForCurrentUpdateWithCollectionViewAnimator:v16 updatingContentOffsetForRestorationAnchor:1];
  }
  else {
  uint64_t v17 = [v15 _viewAnimationsForCurrentUpdate];
  }
  -[UIViewAnimationContext setViewAnimations:](*(void *)(a1 + 56), v17);

  uint64_t v18 = -[UIBarButtonItemGroup _items](*(id **)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 2064) _setCollectionViewAnimationContext:v18];

  uint64_t result = _UIRestorePreviousFallbackEnvironment(v13);
  uint64_t v20 = *(void *)(a1 + 32);
  if (v20)
  {
    int v21 = *(unsigned __int16 *)(v20 + 2648) | (*(unsigned __int8 *)(v20 + 2650) << 16);
    *(_WORD *)(v20 + 2648) = *(_WORD *)(v20 + 2648);
    *(unsigned char *)(v20 + 2650) = (v21 | 0x20000u) >> 16;
    uint64_t result = objc_msgSend((id)v20, "setContentOffset:", v3, v5);
    int v22 = *(unsigned __int16 *)(v20 + 2648);
    unsigned int v23 = (v22 | (*(unsigned __int8 *)(v20 + 2650) << 16)) & 0xFFFDFFFF;
    *(_WORD *)(v20 + 2648) = v22;
    *(unsigned char *)(v20 + 2650) = (v23 | v21 & 0x20000) >> 16;
  }
  return result;
}

- (void)setAlwaysBounceHorizontal:(BOOL)a3
{
  *((void *)&self->_collectionViewFlags + 1) |= 0x2000000000000uLL;
  v3.receiver = self;
  v3.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v3 setAlwaysBounceHorizontal:a3];
}

- (void)_setDefaultAlwaysBounceVertical:(BOOL)a3 horizontal:(BOOL)a4
{
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x2000000000000) == 0)
  {
    BOOL v4 = a4;
    v7.receiver = self;
    v7.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v7 setAlwaysBounceVertical:a3];
    v6.receiver = self;
    v6.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v6 setAlwaysBounceHorizontal:v4];
  }
}

- (void)setAlwaysBounceVertical:(BOOL)a3
{
  *((void *)&self->_collectionViewFlags + 1) |= 0x2000000000000uLL;
  v3.receiver = self;
  v3.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v3 setAlwaysBounceVertical:a3];
}

- (void)setContentInset:(UIEdgeInsets)a3
{
  double right = a3.right;
  bottouint64_t m = a3.bottom;
  double left = a3.left;
  double top = a3.top;
  v20.receiver = self;
  v20.super_class = (Class)UICollectionView;
  -[UIScrollView setContentInset:](&v20, sel_setContentInset_);
  if (!dyld_program_sdk_at_least()
    || (([(UIScrollView *)self contentInset], left == v11) ? (BOOL v12 = top == v8) : (BOOL v12 = 0),
        v12 ? (BOOL v13 = right == v10) : (BOOL v13 = 0),
        v13 ? (BOOL v14 = bottom == v9) : (BOOL v14 = 0),
        !v14))
  {
    uint64_t v15 = [(UICollectionView *)self _horizontalIndexTitleBar];

    if (v15)
    {
      uint64_t v16 = [(UICollectionView *)self _horizontalIndexTitleBar];
      objc_msgSend(v16, "_setParentContentInset:", top, left, bottom, right);
    }
    collectionViewData = self->_collectionViewData;
    if (collectionViewData) {
      int v18 = (*(unsigned char *)&collectionViewData->_collectionViewDataFlags >> 3) & 1;
    }
    else {
      int v18 = 0;
    }
    uint64_t viewFlags = (uint64_t)self->super.super._viewFlags;
    if (dyld_program_sdk_at_least() && v18 && (viewFlags & 0x8000000000000000) == 0) {
      [(UICollectionViewLayout *)self->_layout invalidateLayout];
    }
    if (+[UIView _isInAnimationBlock]) {
      [(UIView *)self layoutBelowIfNeeded];
    }
  }
}

- (id)_updatedNewlyAppearingLayoutAttributesForCurrentVisibleBounds:(BOOL)a3
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  -[UICollectionViewData invalidate:]((uint64_t)self->_collectionViewData, 1);
  collectionViewData = self->_collectionViewData;
  [(UICollectionView *)self _visibleBounds];
  double v10 = -[UICollectionViewData layoutAttributesForElementsInRect:](collectionViewData, v6, v7, v8, v9);
  double v11 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v10, "count"));
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v12 = v10;
  uint64_t v13 = [v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v20 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v17 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        if (!-[UICollectionView _visibleViewForLayoutAttributes:](self, "_visibleViewForLayoutAttributes:", v17, (void)v19)&& (a3 || ([v17 isHidden] & 1) == 0))
        {
          [v11 addObject:v17];
        }
      }
      uint64_t v14 = [v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v14);
  }

  [(UICollectionView *)self _sortAttributesByDistanceToVisibleBoundsOrigin:v11];
  return v11;
}

- (void)_sortAttributesByDistanceToVisibleBoundsOrigin:(id)a3
{
  id v4 = a3;
  [(UICollectionView *)self _visibleBounds];
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  BOOL v9 = [(UICollectionViewLayout *)self->_layout _hasOrthogonalScrollingSections];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __67__UICollectionView__sortAttributesByDistanceToVisibleBoundsOrigin___block_invoke;
  v10[3] = &unk_1E52E5470;
  BOOL v11 = v9;
  void v10[4] = self;
  void v10[5] = v6;
  v10[6] = v8;
  [v4 sortUsingComparator:v10];
}

- (BOOL)_shouldSelectionFollowFocusForIndexPath:(id)a3 initiatedBySelection:(BOOL)a4 focusItemStateCandidate:(id)a5
{
  BOOL v6 = a4;
  id v8 = a3;
  id v9 = a5;
  if (_AXSFullKeyboardAccessEnabled()) {
    goto LABEL_2;
  }
  if (dyld_program_sdk_at_least()
    && v6
    && [(_UICollectionViewMultiSelectController *)self->_multiSelectController isInMultiselectInteraction])
  {
    if (v9)
    {
      id v12 = (id *)v9;
    }
    else
    {
      id v12 = [(UICollectionView *)self _focusedItemState];
      if (!v12) {
        goto LABEL_11;
      }
    }
    uint64_t v13 = [(UICollectionView *)self _indexPathsForSelectedItems];
    id v14 = v12[2];
    char v15 = [v13 containsObject:v14];

    if (v15)
    {
LABEL_2:
      char v10 = 0;
      goto LABEL_3;
    }
  }
LABEL_11:
  if (!v6)
  {
    uint64_t v16 = [(UICollectionView *)self _cellForItemAtIndexPath:v8];
    uint64_t v17 = v16;
    if (v16 && ([v16 _hasCustomSelectionAction] & 1) != 0)
    {
      char v10 = 0;
      goto LABEL_23;
    }
  }
  int v18 = !v6;
  BOOL v19 = [(UICollectionView *)self selectionFollowsFocus];
  char v10 = v19;
  if (v8) {
    BOOL v20 = v19;
  }
  else {
    BOOL v20 = 0;
  }
  if ((v18 & v20) == 1)
  {
    if ((*(void *)&self->_collectionViewFlags & 0x4000000000000) == 0)
    {
      char v10 = 1;
      goto LABEL_3;
    }
    uint64_t v17 = [(UICollectionView *)self _delegateProxy];
    char v10 = [v17 collectionView:self selectionFollowsFocusForItemAtIndexPath:v8];
LABEL_23:
  }
LABEL_3:

  return v10;
}

- (void)_updateSelectionIsKey
{
  uint64_t v3 = (*((void *)&self->_collectionViewFlags + 1) >> 24) & 1;
  int v4 = [(UICollectionView *)self selectionFollowsFocus];
  _UITableUpdateSelectionIsKeyTraitOverride(self, v3, v4);
}

- (BOOL)selectionFollowsFocus
{
  uint64_t v2 = *(void *)((char *)&self->_collectionViewFlags + 10) & 3;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __41__UICollectionView_selectionFollowsFocus__block_invoke;
  v4[3] = &unk_1E52DA6B0;
  v4[4] = self;
  return _UITriStateToBool(v2, v4);
}

uint64_t __41__UICollectionView_selectionFollowsFocus__block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _focusBehavior];
  uint64_t v3 = [v2 defaultValueForSelectionFollowsFocusInCollectionView:*(void *)(a1 + 32)];

  return v3;
}

- (void)_removeUntrackedAuxillaryViewsForBeforeVisibleViews:(id)a3 afterVisibleViews:(id)a4 withTrackingViewAnimations:(id)a5
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (uint64_t *)a3;
  id v8 = a4;
  id v9 = a5;
  char v10 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28D30]), "initWithOptions:capacity:", 512, objc_msgSend(v9, "count"));
  v33[0] = MEMORY[0x1E4F143A8];
  v33[1] = 3221225472;
  v33[2] = __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke;
  v33[3] = &unk_1E52E5F08;
  id v11 = v10;
  id v34 = v11;
  -[_UICollectionViewSubviewCollection enumerateSupplementariesWithEnumerator:]((uint64_t)v8, (uint64_t)v33);
  v31[0] = MEMORY[0x1E4F143A8];
  v31[1] = 3221225472;
  void v31[2] = __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_2;
  v31[3] = &unk_1E52E5F08;
  id v12 = v11;
  id v32 = v12;
  -[_UICollectionViewSubviewCollection enumerateDecorationsWithEnumerator:]((uint64_t)v8, (uint64_t)v31);
  uint64_t v13 = objc_msgSend(objc_alloc(MEMORY[0x1E4F28D30]), "initWithOptions:capacity:", 512, objc_msgSend(v9, "count"));
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v14 = v9;
  uint64_t v15 = [v14 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)v28;
    do
    {
      uint64_t v18 = 0;
      do
      {
        if (*(void *)v28 != v17) {
          objc_enumerationMutation(v14);
        }
        BOOL v19 = [*(id *)(*((void *)&v27 + 1) + 8 * v18) view];
        [v13 addObject:v19];

        ++v18;
      }
      while (v16 != v18);
      uint64_t v16 = [v14 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v16);
  }

  v23[4] = v24;
  v24[0] = MEMORY[0x1E4F143A8];
  v24[1] = 3221225472;
  v24[2] = __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_3;
  v24[3] = &unk_1E52E5600;
  id v25 = v12;
  id v26 = v13;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 3221225472;
  v23[2] = __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_4;
  v23[3] = &__block_descriptor_40_e67_v40__0__NSIndexPath_8__NSString_16__UICollectionReusableView_24_B32lu32l8;
  id v20 = v13;
  id v21 = v12;
  if (v7) {
    -[_UICollectionViewSubviewCollection enumerateSupplementariesWithEnumerator:](v7[1], (uint64_t)v23);
  }
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 3221225472;
  v22[2] = __117__UICollectionView__removeUntrackedAuxillaryViewsForBeforeVisibleViews_afterVisibleViews_withTrackingViewAnimations___block_invoke_5;
  v22[3] = &__block_descriptor_40_e67_v40__0__NSIndexPath_8__NSString_16__UICollectionReusableView_24_B32lu32l8;
  v22[4] = v24;
  if (v7) {
    -[_UICollectionViewSubviewCollection enumerateDecorationsWithEnumerator:](v7[1], (uint64_t)v22);
  }
}

- (void)_setReorderFeedbackGenerator:(id)a3
{
  uint64_t v5 = (_UIDragSnappingFeedbackGenerator *)a3;
  if ([(UIFeedbackGenerator *)self->_reorderFeedbackGenerator isActive])
  {
    uint64_t v7 = [MEMORY[0x1E4F28B00] currentHandler];
    [v7 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:2162 description:@"Reorder feedback behavior should not be changed while active."];
  }
  reorderFeedbackGenerator = self->_reorderFeedbackGenerator;
  self->_reorderFeedbackGenerator = v5;
}

- (void)setDragInteractionEnabled:(BOOL)dragInteractionEnabled
{
}

- (id)_dataSourceSectionIndexTitles
{
  indexBarSectionIndexTitles = self->_indexBarSectionIndexTitles;
  if (!indexBarSectionIndexTitles)
  {
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    if ((collectionViewFlags & 0x800000000000000) != 0)
    {
      uint64_t v5 = [(UICollectionView *)self _dataSourceProxy];
      BOOL v6 = [v5 _collectionView:self sectionIndexTitlesTrimmedToCount:0x7FFFFFFFFFFFFFFFLL];
    }
    else if ((collectionViewFlags & 0x400000000000000) != 0)
    {
      uint64_t v5 = [(UICollectionView *)self _dataSourceProxy];
      BOOL v6 = [v5 _sectionIndexTitlesForCollectionView:self];
    }
    else
    {
      if ((collectionViewFlags & 0x8000000000000000) == 0)
      {
        uint64_t v5 = 0;
        self->_indexBarSectionIndexTitles = (NSArray *)MEMORY[0x1E4F1CBF0];
LABEL_10:

        indexBarSectionIndexTitles = self->_indexBarSectionIndexTitles;
        goto LABEL_11;
      }
      uint64_t v5 = [(UICollectionView *)self _dataSourceProxy];
      BOOL v6 = [v5 indexTitlesForCollectionView:self];
    }
    uint64_t v7 = self->_indexBarSectionIndexTitles;
    self->_indexBarSectionIndexTitles = v6;

    goto LABEL_10;
  }
LABEL_11:
  id v8 = indexBarSectionIndexTitles;
  return v8;
}

- (void)didMoveToWindow
{
  id v13 = [(UIView *)self window];
  if (!v13)
  {
    id v12 = [(UICollectionView *)self _currentTouch];

    if (v12) {
      [(UICollectionView *)self _cancelTouches];
    }
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x2000000000000000) != 0)
    {
      _UIUpdateCycleUnregisterIdleObserver(self);
      *((void *)&self->_collectionViewFlags + 1) &= ~0x2000000000000000uLL;
    }
    uint64_t v9 = [(UICollectionView *)self _indexOverlayManager];
    char v10 = (void *)v9;
    id v11 = 0;
    goto LABEL_17;
  }
  collectionViewData = self->_collectionViewData;
  if (collectionViewData && (*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 8) != 0) {
    [(UICollectionView *)self _updateDefaultLayoutMargins];
  }
  if ([(UICollectionView *)self _useIdleObserverForCellPrefetching]
    && (*((void *)&self->_collectionViewFlags + 1) & 0x2000000000000000) == 0)
  {
    _UIUpdateCycleRegisterIdleObserver(self);
    *((void *)&self->_collectionViewFlags + 1) |= 0x2000000000000000uLL;
  }
  sectionFocusGuideController = self->_sectionFocusGuideController;
  uint64_t v5 = [(UICollectionView *)self _focusedItemState];
  BOOL v6 = (void *)v5;
  if (v5) {
    uint64_t v7 = *(void **)(v5 + 16);
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;
  [(_UICollectionViewSectionFocusGuideController *)sectionFocusGuideController updateFocusedIndexPath:v8];

  [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController reloadSectionFocusGuides];
  if ([(UICollectionView *)self _wantsIndexOverlays])
  {
    [(UICollectionView *)self _setupIndexOverlayManagerIfNecessary];
    uint64_t v9 = [(UICollectionView *)self _indexOverlayManager];
    char v10 = (void *)v9;
    id v11 = v13;
LABEL_17:
    -[_UICollectionTableIndexOverlayManager hostDidMoveToWindow:](v9, v11);
  }
}

- (BOOL)_useIdleObserverForCellPrefetching
{
  int v2 = _UIInternalPreferenceUsesDefault((int *)&_UIInternalPreference_CollectionViewCellPrefetchingMode, @"CollectionViewCellPrefetchingMode", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateInteger);
  unint64_t v3 = qword_1EB256F00;
  if (v2) {
    unint64_t v3 = 0;
  }
  if (v3 >= 0xFFFFFFFFFFFFFFFELL) {
    return 0;
  }
  if (v3 == 1) {
    return 1;
  }
  return dyld_program_sdk_at_least();
}

- (void)setBounds:(CGRect)a3
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  [(UIView *)self bounds];
  double v8 = v43.origin.x;
  double v9 = v43.origin.y;
  double v10 = v43.size.width;
  double v11 = v43.size.height;
  v48.origin.double x = x;
  v48.origin.double y = y;
  v48.size.double width = width;
  v48.size.double height = height;
  if (CGRectEqualToRect(v43, v48)) {
    return;
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x8000000) != 0)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258908);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      id v25 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        id v26 = v25;
        v44.origin.double x = v8;
        v44.origin.double y = v9;
        v44.size.double width = v10;
        v44.size.double height = v11;
        long long v27 = NSStringFromCGRect(v44);
        v45.origin.double x = x;
        v45.origin.double y = y;
        v45.size.double width = width;
        v45.size.double height = height;
        long long v28 = NSStringFromCGRect(v45);
        *(_DWORD *)long long buf = 134218498;
        uint64_t v37 = self;
        __int16 v38 = 2112;
        id v39 = v27;
        __int16 v40 = 2112;
        long long v41 = v28;
        _os_log_impl(&dword_1853B0000, v26, OS_LOG_TYPE_ERROR, "setBounds: cv == %p; oldBounds == %@; newBounds == %@",
          buf,
          0x20u);
      }
    }
    v35.receiver = self;
    v35.super_class = (Class)UICollectionView;
    -[UIScrollView setBounds:](&v35, sel_setBounds_, x, y, width, height);
    goto LABEL_35;
  }
  collectionViewData = self->_collectionViewData;
  if (!collectionViewData)
  {
    int v14 = 0;
    if (!dyld_program_sdk_at_least())
    {
      uint64_t v16 = 0;
      int v17 = 0;
      goto LABEL_16;
    }
LABEL_6:
    if ([(UICollectionViewLayout *)self->_layout _preparedForBoundsChanges]
      || (v14 & 1) != 0)
    {
      goto LABEL_12;
    }
LABEL_14:
    uint64_t v16 = 0;
    int v14 = 0;
    int v17 = 0;
    goto LABEL_16;
  }
  $33D6A0B6D1060ABBBAF8FFE3C835D577 collectionViewDataFlags = collectionViewData->_collectionViewDataFlags;
  if (dyld_program_sdk_at_least())
  {
    int v14 = (*(unsigned int *)&collectionViewDataFlags >> 3) & 1;
    goto LABEL_6;
  }
  if ((*(unsigned char *)&collectionViewDataFlags & 8) == 0) {
    goto LABEL_14;
  }
LABEL_12:
  if (-[UICollectionViewLayout shouldInvalidateLayoutForBoundsChange:](self->_layout, "shouldInvalidateLayoutForBoundsChange:", x, y, width, height))
  {
    uint64_t v16 = -[UICollectionViewLayout _invalidationContextForBoundsChange:fromOldBounds:](self->_layout, "_invalidationContextForBoundsChange:fromOldBounds:", x, y, width, height, v8, v9, v10, v11);
    int v14 = 1;
    int v17 = 1;
  }
  else
  {
    uint64_t v16 = 0;
    int v17 = 0;
    int v14 = 1;
  }
LABEL_16:
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x4000000000) != 0)
  {
    if (((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16)) & 0x20000) != 0)
      goto LABEL_23;
  }
  else
  {
    self->_preRotationBounds.origin.double x = v8;
    self->_preRotationBounds.origin.double y = v9;
    self->_preRotationBounds.size.double width = v10;
    self->_preRotationBounds.size.double height = v11;
    int v18 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *((void *)&self->_collectionViewFlags + 1) |= 0x4000000000uLL;
    if ((v18 & 0x20000) != 0) {
      goto LABEL_23;
    }
  }
  if (![(UIScrollView *)self isScrollAnimating]) {
    [(UICollectionView *)self _clearTargetIndexPathForScrolling];
  }
  [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
LABEL_23:
  debugger = self->_debugger;
  if (debugger) {
    [(_UICollectionViewFeedbackLoopDebugger *)debugger recordCollectionViewRectPropertyChange:@"bounds", v8, v9, v10, v11, x, y, width, height fromRect toRect];
  }
  v34.receiver = self;
  v34.super_class = (Class)UICollectionView;
  -[UIScrollView setBounds:](&v34, sel_setBounds_, x, y, width, height);
  if (v17)
  {
    unint64_t v20 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258910);
    if (*(unsigned char *)v20)
    {
      long long v29 = *(NSObject **)(v20 + 8);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        long long v30 = v29;
        v46.origin.double x = v8;
        v46.origin.double y = v9;
        v46.size.double width = v10;
        v46.size.double height = v11;
        NSStringFromCGRect(v46);
        uint64_t v31 = v33 = v14;
        v47.origin.double x = x;
        v47.origin.double y = y;
        v47.size.double width = width;
        v47.size.double height = height;
        id v32 = NSStringFromCGRect(v47);
        *(_DWORD *)long long buf = 134218498;
        uint64_t v37 = self;
        __int16 v38 = 2112;
        id v39 = v31;
        __int16 v40 = 2112;
        long long v41 = v32;
        _os_log_impl(&dword_1853B0000, v30, OS_LOG_TYPE_ERROR, "setBounds: cv == %p; invalidating for oldBounds == %@; newBounds == %@",
          buf,
          0x20u);

        int v14 = v33;
      }
    }
    [(UICollectionViewLayout *)self->_layout _invalidateLayoutUsingContext:v16];
    if (v14)
    {
      id v21 = [v16 _invalidatedSupplementaryViews];
      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v21 == 0];

      activeOrthogonalPrefetchingContext = self->_activeOrthogonalPrefetchingContext;
      self->_activeOrthogonalPrefetchingContext = 0;

LABEL_30:
      if (v10 != width || v11 != height) {
        [(UICollectionView *)self _updateDefaultLayoutMargins];
      }
      goto LABEL_34;
    }
    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
    uint64_t v24 = self->_activeOrthogonalPrefetchingContext;
    self->_activeOrthogonalPrefetchingContext = 0;
  }
  else
  {
    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v14 ^ 1u];
    unsigned int v23 = self->_activeOrthogonalPrefetchingContext;
    self->_activeOrthogonalPrefetchingContext = 0;

    if (((v14 ^ 1) & 1) == 0) {
      goto LABEL_30;
    }
  }
LABEL_34:

LABEL_35:
  if (v10 != width || v11 != height) {
    [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController performLayout];
  }
}

- (void)_clearTargetIndexPathForScrolling
{
  scrollingTargetIndexPath = self->_scrollingTargetIndexPath;
  self->_scrollingTargetIndexPath = 0;

  self->_offsetToScrollingTarget = (CGPoint)*MEMORY[0x1E4F1DAD8];
  CGSize v4 = *(CGSize *)(MEMORY[0x1E4F1DB28] + 16);
  self->_scrollingTargetFrame.origiuint64_t n = (CGPoint)*MEMORY[0x1E4F1DB28];
  self->_scrollingTargetFrame.size = v4;
  self->_requestedPositionOfScrollingTarget = 0;
  int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
  unsigned int v6 = v5 & 0xFFFFBFFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *((_WORD *)&self->_collectionViewFlags + 8) = v5 & 0xBFFF;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v6);
}

- (void)setFrame:(CGRect)a3
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  [(UIView *)self frame];
  v71.origin.double x = v8;
  v71.origin.double y = v9;
  v71.size.double width = v10;
  v71.size.double height = v11;
  v63.origin.double x = x;
  v63.origin.double y = y;
  v63.size.double width = width;
  v63.size.double height = height;
  if (CGRectEqualToRect(v63, v71)) {
    return;
  }
  [(UIView *)self frame];
  double v49 = v13;
  double v50 = v12;
  double v51 = v14;
  double v52 = v15;
  [(UIView *)self bounds];
  double v16 = v64.origin.x;
  double v17 = v64.origin.y;
  double v19 = v18;
  double v21 = v20;
  v64.size.double width = width;
  v64.size.double height = height;
  v72.origin.double x = v64.origin.x;
  v72.origin.double y = v64.origin.y;
  v72.size.double width = v19;
  v72.size.double height = v21;
  BOOL v22 = CGRectEqualToRect(v64, v72);
  collectionViewData = self->_collectionViewData;
  if (collectionViewData) {
    int v24 = (*(unsigned char *)&collectionViewData->_collectionViewDataFlags >> 3) & 1;
  }
  else {
    int v24 = 0;
  }
  if (dyld_program_sdk_at_least()) {
    v24 |= [(UICollectionViewLayout *)self->_layout _preparedForBoundsChanges];
  }
  uint64_t v25 = v24 ^ 1u;
  if (((v25 | v22) & 1) != 0
    || !-[UICollectionViewLayout shouldInvalidateLayoutForBoundsChange:](self->_layout, "shouldInvalidateLayoutForBoundsChange:", v16, v17, width, height))
  {
    id v26 = 0;
    int v27 = 0;
  }
  else
  {
    id v26 = -[UICollectionViewLayout _invalidationContextForBoundsChange:fromOldBounds:](self->_layout, "_invalidationContextForBoundsChange:fromOldBounds:", v16, v17, width, height, v16, v17, v19, v21);
    int v27 = 1;
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x4000000000) == 0)
  {
    self->_preRotationBounds.origin.double x = v16;
    self->_preRotationBounds.origin.double y = v17;
    self->_preRotationBounds.size.double width = v19;
    self->_preRotationBounds.size.double height = v21;
    *((void *)&self->_collectionViewFlags + 1) |= 0x4000000000uLL;
  }
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &setFrame____s_category);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    uint64_t v42 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
    {
      CGRect v43 = v42;
      [(UIView *)self frame];
      NSStringFromCGRect(v69);
      CGRect v44 = v48 = v24;
      v70.origin.double x = x;
      v70.origin.double y = y;
      v70.size.double width = width;
      v70.size.double height = height;
      uint64_t v45 = NSStringFromCGRect(v70);
      CGRect v46 = (void *)v45;
      CGRect v47 = @"NO";
      *(_DWORD *)long long buf = 134218754;
      long long v55 = self;
      if (v27) {
        CGRect v47 = @"YES";
      }
      __int16 v56 = 2112;
      long long v57 = v44;
      __int16 v58 = 2112;
      uint64_t v59 = v45;
      __int16 v60 = 2112;
      id v61 = v47;
      _os_log_impl(&dword_1853B0000, v43, OS_LOG_TYPE_ERROR, "setFrame: cv == %p; oldFrame == %@; newFrame == %@ invalidateLayout == %@",
        buf,
        0x2Au);

      int v24 = v48;
    }
  }
  debugger = self->_debugger;
  double v30 = v51;
  if (debugger) {
    [(_UICollectionViewFeedbackLoopDebugger *)debugger recordCollectionViewRectPropertyChange:@"frame", v50, v49, v51, v52, x, y, width, height fromRect toRect];
  }
  v53.receiver = self;
  v53.super_class = (Class)UICollectionView;
  -[UIScrollView setFrame:](&v53, sel_setFrame_, x, y, width, height);
  if (!v22)
  {
    if (v27)
    {
      uint64_t v31 = self->_collectionViewData;
      if (v31)
      {
        CGFloat v32 = v31->_contentSize.width;
        CGFloat v33 = v31->_contentSize.height;
      }
      else
      {
        CGFloat v32 = 0.0;
        CGFloat v33 = 0.0;
      }
      [(UICollectionViewLayout *)self->_layout _invalidateLayoutUsingContext:v26];
      if ((dyld_program_sdk_at_least() & 1) == 0) {
        double v34 = -[UICollectionViewData collectionViewContentRect]((uint64_t)self->_collectionViewData);
      }
      if ((*((void *)&self->_collectionViewFlags + 1) & 0x10000000) == 0
        && ![(UIScrollView *)self isTracking]
        && ![(UICollectionViewLayout *)self->_layout _estimatesSizes])
      {
        v65.origin.double x = x;
        v65.origin.double y = y;
        v65.size.double width = width;
        v65.size.double height = height;
        if (!CGRectIsEmpty(v65))
        {
          v66.origin.double y = v49;
          v66.origin.double x = v50;
          v66.size.double width = v51;
          v66.size.double height = v52;
          if (!CGRectIsEmpty(v66))
          {
            -[UICollectionViewData collectionViewContentRect]((uint64_t)self->_collectionViewData);
            -[UICollectionView _contentOffsetForNewFrame:oldFrame:newContentSize:andOldContentSize:](self, "_contentOffsetForNewFrame:oldFrame:newContentSize:andOldContentSize:", x, y, width, height, v50, v49, v51, v52, v35, v36, *(void *)&v32, *(void *)&v33);
            -[UICollectionView setContentOffset:](self, "setContentOffset:");
          }
        }
      }
      [(UIView *)self bounds];
      double MinX = CGRectGetMinX(v67);
      CGFloat v38 = MinX - CGRectGetMinX(self->_preRotationBounds);
      [(UIView *)self bounds];
      double MinY = CGRectGetMinY(v68);
      CGFloat v40 = MinY - CGRectGetMinY(self->_preRotationBounds);
      self->_rotationBoundsOffset.double x = v38;
      self->_rotationBoundsOffset.double y = v40;
      if (v24)
      {
        long long v41 = [v26 _invalidatedSupplementaryViews];
        [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v41 == 0];

        double v30 = v51;
LABEL_30:
        if (v19 != width || v21 != height) {
          [(UICollectionView *)self _updateDefaultLayoutMargins];
        }
        goto LABEL_34;
      }
      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v25];
      double v30 = v51;
    }
    else
    {
      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:v25];
      if (v24) {
        goto LABEL_30;
      }
    }
  }
LABEL_34:
  if ((v30 != width || v52 != height) && (*((void *)&self->_collectionViewFlags + 1) & 0x200000000000) != 0) {
    [(UICollectionView *)self _scrollFirstResponderCellToVisible:+[UIView _isInAnimationBlock] ^ 1];
  }
}

- (void)_updateDefaultLayoutMargins
{
  unint64_t v3 = [(UICollectionView *)self collectionViewLayout];
  [v3 _preferredLayoutMargins];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  if (v5 == 1.79769313e308) {
    double v12 = 8.0;
  }
  else {
    double v12 = v5;
  }
  if (v7 == 1.79769313e308) {
    double v13 = 8.0;
  }
  else {
    double v13 = v7;
  }
  if (v9 == 1.79769313e308) {
    double v14 = 8.0;
  }
  else {
    double v14 = v9;
  }
  if (v11 == 1.79769313e308) {
    double v15 = 8.0;
  }
  else {
    double v15 = v11;
  }
  -[UICollectionView _setDefaultLayoutMargins:fromViewController:](self, "_setDefaultLayoutMargins:fromViewController:", 0, v12, v13, v14, v15);
}

- (void)_setDefaultLayoutMargins:(UIEdgeInsets)a3 fromViewController:(BOOL)a4
{
  uint64_t v4 = *((void *)&self->_collectionViewFlags + 1);
  if ((v4 & 0x10000000000000) == 0 || a4)
  {
    BOOL v5 = a3.left == self->_defaultLayoutMargins.left && a3.top == self->_defaultLayoutMargins.top;
    BOOL v6 = v5 && a3.right == self->_defaultLayoutMargins.right;
    if (!v6 || a3.bottom != self->_defaultLayoutMargins.bottom)
    {
      int v8 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
      uint64_t v9 = 0x10000000000000;
      if (!a4) {
        uint64_t v9 = 0;
      }
      p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
      *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v4 & 0xFFEFFFFFFFFFFFFFLL | v9;
      *((_WORD *)&self->_collectionViewFlags + 8) = v8;
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v8);
      self->_defaultLayoutMargins = a3;
      unint64_t v11 = *((void *)&self->_collectionViewFlags + 1);
      if ((v11 & 0x4000000000000) == 0)
      {
        int v12 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                        + 18) << 16);
        *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags;
        *((void *)&self->_collectionViewFlags + 1) = v11 | 0x8000000000000;
        *((_WORD *)&self->_collectionViewFlags + 8) = v12;
        *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v12);
        [(UICollectionView *)self setLayoutMargins:"setLayoutMargins:"];
        *((void *)p_collectionViewFlags + 1) = *((void *)p_collectionViewFlags + 1) & 0xFFF7FFFFFFFFFFFFLL | (((v11 >> 51) & 1) << 51);
      }
    }
  }
}

- (void)setLayoutMargins:(UIEdgeInsets)a3
{
  double right = a3.right;
  bottouint64_t m = a3.bottom;
  double left = a3.left;
  double top = a3.top;
  [(UIView *)self layoutMargins];
  [(UIView *)self _rawLayoutMargins];
  if (left != v11 || top != v8 || right != v10 || bottom != v9)
  {
    *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFBFFFFFFFFFFFFLL | ((unint64_t)((*((void *)&self->_collectionViewFlags + 1) & 0xC000000000000) != 0x8000000000000) << 50);
    v15.receiver = self;
    v15.super_class = (Class)UICollectionView;
    -[UIView setLayoutMargins:](&v15, sel_setLayoutMargins_, top, left, bottom, right);
  }
}

- (UICollectionView)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout
{
  double height = frame.size.height;
  double width = frame.size.width;
  double y = frame.origin.y;
  double x = frame.origin.x;
  double v10 = layout;
  if (!v10) {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"UICollectionView must be initialized with a non-nil layout parameter"];
  }
  v14.receiver = self;
  v14.super_class = (Class)UICollectionView;
  double v11 = -[UIScrollView initWithFrame:](&v14, sel_initWithFrame_, x, y, width, height);
  int v12 = v11;
  if (v11)
  {
    objc_storeStrong((id *)&v11->_layout, layout);
    *((void *)&v12->_collectionViewFlags + 1) |= 0x2400uLL;
    UICollectionViewCommonSetup(v12);
  }

  return v12;
}

- (CGPoint)_contentOffsetForNewFrame:(CGRect)a3 oldFrame:(CGRect)a4 newContentSize:(CGSize)a5 andOldContentSize:(CGSize)a6
{
  CGFloat rect = a4.size.height;
  CGFloat width = a4.size.width;
  double height = a3.size.height;
  double v8 = a3.size.width;
  [(UIScrollView *)self _effectiveContentInset];
  double v33 = v10;
  double v12 = v11;
  double v29 = v14;
  double v30 = v13;
  [(UIView *)self bounds];
  double v17 = v15;
  double v34 = v16;
  double v32 = 0.0;
  double v18 = 0.0;
  if (v37 > 0.0)
  {
    CGFloat v19 = width;
    CGFloat v20 = rect;
    double v18 = CGRectGetMidX(*(CGRect *)&v15) / v37;
  }
  if (v38 > 0.0)
  {
    v40.origin.double x = v17;
    v40.origin.double y = v34;
    v40.size.CGFloat width = width;
    v40.size.double height = rect;
    double v32 = CGRectGetMidY(v40) / v38;
  }
  double v21 = -v12;
  if (v8 < v35 && v17 > v21)
  {
    v41.origin.double x = 0.0;
    v41.origin.double y = 0.0;
    v41.size.CGFloat width = v8;
    v41.size.double height = height;
    double v23 = round(v35 * v18 + CGRectGetWidth(v41) * -0.5);
    v42.origin.double y = 0.0;
    v42.origin.double x = v23;
    v42.size.CGFloat width = v8;
    v42.size.double height = height;
    if (CGRectGetMinX(v42) >= v21) {
      double v21 = v23;
    }
    if (v8 + v21 > v35 + v29) {
      double v21 = v35 + v29 - v8;
    }
  }
  double v24 = -v33;
  if (height < v36 && v34 > v24)
  {
    v43.origin.double y = 0.0;
    v43.origin.double x = v21;
    v43.size.CGFloat width = v8;
    v43.size.double height = height;
    double v26 = round(v36 * v32 + CGRectGetHeight(v43) * -0.5);
    v44.origin.double x = v21;
    v44.origin.double y = v26;
    v44.size.CGFloat width = v8;
    v44.size.double height = height;
    if (CGRectGetMinY(v44) >= v24) {
      double v24 = v26;
    }
    if (height + v24 > v36 + v30) {
      double v24 = v36 + v30 - height;
    }
  }
  double v27 = v21;
  double v28 = v24;
  result.double y = v28;
  result.double x = v27;
  return result;
}

- (NSArray)indexPathsForSelectedItems
{
  unint64_t v3 = [(UICollectionView *)self _indexPathsForSelectedItems];
  uint64_t v4 = [(UICollectionView *)self _translatePresentationIndexPathsToDataSourceIndexPathsAsNeeded:v3];

  return (NSArray *)v4;
}

- (id)_translatePresentationIndexPathsToDataSourceIndexPathsAsNeeded:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    id v5 = [(UICollectionView *)self _indexPathsBeforeShadowUpdatesForIndexPaths:v4];
  }
  else
  {
    id v5 = v4;
  }
  BOOL v6 = v5;

  return v6;
}

- (id)_indexPathsForSelectedItems
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  selectionController = self->_selectionController;
  if (selectionController) {
    id v4 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
  }
  else {
    id v4 = 0;
  }
  id v5 = [v4 allObjects];

  return v5;
}

- (void)_deselectItemsAtIndexPaths:(id)a3 animated:(BOOL)a4 transitionCoordinator:(id)a5
{
  BOOL v6 = a4;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a5;
  if ([v8 count])
  {
    double v23 = v9;
    [(UICollectionView *)self _reloadDataIfNeeded];
    double v10 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v8, "count"));
    double v11 = self->_selectionController;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    id v12 = v8;
    uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v40 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)v36;
      do
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if (*(void *)v36 != v15) {
            objc_enumerationMutation(v12);
          }
          double v17 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:*(void *)(*((void *)&v35 + 1) + 8 * i)];
          if (v11 && [(NSMutableSet *)v11->_selectedIndexPaths containsObject:v17]) {
            [v10 addObject:v17];
          }
        }
        uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v40 count:16];
      }
      while (v14);
    }

    id v9 = v23;
    if (v23)
    {
      -[_UICollectionViewSelectionController addDeselectionTransitionIndexPaths:]((uint64_t)v11, (uint64_t)v10);
      v27[0] = MEMORY[0x1E4F143A8];
      v27[1] = 3221225472;
      v27[2] = __78__UICollectionView__deselectItemsAtIndexPaths_animated_transitionCoordinator___block_invoke;
      v27[3] = &unk_1E52E4FF8;
      double v28 = v11;
      double v29 = self;
      BOOL v30 = v6;
      v24[0] = MEMORY[0x1E4F143A8];
      v24[1] = 3221225472;
      v24[2] = __78__UICollectionView__deselectItemsAtIndexPaths_animated_transitionCoordinator___block_invoke_2;
      v24[3] = &unk_1E52DB270;
      uint64_t v25 = v28;
      double v26 = self;
      [v23 animateAlongsideTransition:v27 completion:v24];

      double v18 = v28;
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      double v18 = v10;
      uint64_t v19 = [(_UICollectionViewSelectionController *)v18 countByEnumeratingWithState:&v31 objects:v39 count:16];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = *(void *)v32;
        do
        {
          for (uint64_t j = 0; j != v20; ++j)
          {
            if (*(void *)v32 != v21) {
              objc_enumerationMutation(v18);
            }
            [(UICollectionView *)self _deselectItemAtIndexPath:*(void *)(*((void *)&v31 + 1) + 8 * j) animated:v6 notifyDelegate:0];
          }
          uint64_t v20 = [(_UICollectionViewSelectionController *)v18 countByEnumeratingWithState:&v31 objects:v39 count:16];
        }
        while (v20);
      }
    }
  }
}

void __63__UICollectionView__rebasePrefetchedCellIndexPathsWithMapping___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  BOOL v6 = a3;
  double v7 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if (v7)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_UIInternalPreference_CollectionViewCellPrefetchingMode_block_invoke_5___s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      id v12 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = v12;
        if (v6) {
          uint64_t v15 = (void *)v6[3];
        }
        else {
          uint64_t v15 = 0;
        }
        id v16 = v15;
        double v17 = objc_msgSend(v5, "_ui_shortDescription");
        double v18 = objc_msgSend(v7, "_ui_shortDescription");
        int v19 = 134219010;
        uint64_t v20 = v13;
        __int16 v21 = 2048;
        BOOL v22 = v6;
        __int16 v23 = 2048;
        id v24 = v16;
        __int16 v25 = 2112;
        double v26 = v17;
        __int16 v27 = 2112;
        double v28 = v18;
        _os_log_impl(&dword_1853B0000, v14, OS_LOG_TYPE_ERROR, "[UICV %p] Rebasing prefetch item (%p) with view %p from %@ to %@", (uint8_t *)&v19, 0x34u);
      }
    }
    if (v6) {
      *((unsigned char *)v6 + 8) |= 1u;
    }
    [*(id *)(*(void *)(a1 + 32) + 2736) setObject:v6 forKey:v7];
  }
  else
  {
    id v9 = *(void **)(a1 + 32);
    if (v6) {
      double v10 = (void *)v6[3];
    }
    else {
      double v10 = 0;
    }
    id v11 = v10;
    [v9 _reusePrefetchedCell:v11];
  }
}

void __49__UICollectionView__invalidateLayoutWithContext___block_invoke_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = [*(id *)(*(void *)(a1 + 32) + 2584) objectForKeyedSubscript:a2];
  if (!v6)
  {
    id v7 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    [*(id *)(*(void *)(a1 + 32) + 2584) setObject:v7 forKeyedSubscript:a2];
    BOOL v6 = v7;
  }
  id v8 = v6;
  [v6 addObjectsFromArray:a3];
}

- (void)_updatePrefetchVelocityIntegratorForVisibleBounds:(CGRect)a3
{
  double y = a3.origin.y;
  double x = a3.origin.x;
  prefetchVelocityIntegrator = self->_prefetchVelocityIntegrator;
  if (!prefetchVelocityIntegrator)
  {
    id v7 = objc_alloc_init(_UIVelocityIntegrator);
    id v8 = self->_prefetchVelocityIntegrator;
    self->_prefetchVelocityIntegrator = v7;

    [(_UIVelocityIntegrator *)self->_prefetchVelocityIntegrator setHysteresisTimeInterval:0.3];
    id v9 = self->_prefetchVelocityIntegrator;
    if (v9) {
      v9->_resetHysteresisOnSampleThetaDiff = 1.04719755;
    }
    objc_initWeak(&location, self);
    uint64_t v12 = MEMORY[0x1E4F143A8];
    uint64_t v13 = 3221225472;
    uint64_t v14 = __70__UICollectionView__updatePrefetchVelocityIntegratorForVisibleBounds___block_invoke;
    uint64_t v15 = &unk_1E52DC308;
    objc_copyWeak(&v16, &location);
    id v11 = self->_prefetchVelocityIntegrator;
    if (v11) {
      objc_setProperty_nonatomic_copy(v11, v10, &v12, 88);
    }
    objc_destroyWeak(&v16);
    objc_destroyWeak(&location);
    prefetchVelocityIntegrator = self->_prefetchVelocityIntegrator;
  }
  -[_UIVelocityIntegrator addSample:](prefetchVelocityIntegrator, "addSample:", x, y, a3.size.width, a3.size.height, v12, v13, v14, v15);
}

- (id)_delegateActual
{
  id WeakRetained = objc_loadWeakRetained(&self->super._delegate);
  return WeakRetained;
}

- (id)_visibleSupplementaryViewsOfKind:(id)a3 isDecorationView:(BOOL)a4
{
  id v6 = a3;
  [(UICollectionView *)self _reloadDataIfNeeded];
  subviewManager = (uint64_t *)self->_subviewManager;
  if (a4) {
    -[_UICollectionViewSubviewManager visibleDecorationsOfKind:](subviewManager, (uint64_t)v6);
  }
  else {
  id v8 = -[_UICollectionViewSubviewManager visibleSupplementariesOfKind:](subviewManager, (uint64_t)v6);
  }

  return v8;
}

- (void)_willRemoveSubview:(id)a3
{
  v6.receiver = self;
  v6.super_class = (Class)UICollectionView;
  id v4 = a3;
  [(UIView *)&v6 _willRemoveSubview:v4];
  id v5 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  objc_msgSend(v5, "willRemoveSubview:", v4, v6.receiver, v6.super_class);
}

- (NSString)description
{
  uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
  unint64_t v4 = v3 & 0x8000000000000000;
  *((void *)&self->_collectionViewFlags + 1) = v3 | 0x8000000000000000;
  v14.receiver = self;
  v14.super_class = (Class)UICollectionView;
  id v5 = [(UIScrollView *)&v14 description];
  objc_super v6 = (void *)[v5 mutableCopy];

  objc_msgSend(v6, "deleteCharactersInRange:", objc_msgSend(v6, "length") - 1, 1);
  layout = self->_layout;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  id v9 = WeakRetained;
  if (v3 < 0)
  {
    double v10 = (objc_class *)objc_opt_class();
    id v11 = NSStringFromClass(v10);
    id v12 = objc_loadWeakRetained((id *)&self->_dataSource);
    [v6 appendFormat:@"; layout: %@; dataSource: <%@: %p>>", layout, v11, v12];
  }
  else
  {
    [v6 appendFormat:@"; layout: %@; dataSource: %@>", layout, WeakRetained];
  }

  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0x7FFFFFFFFFFFFFFFLL | v4;
  return (NSString *)v6;
}

uint64_t __41__UICollectionView__invalidateWithBlock___block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v3();
}

uint64_t __49__UICollectionView__invalidateLayoutWithContext___block_invoke_5(uint64_t a1)
{
  -[UICollectionViewData invalidateItemsAtIndexPaths:](*(void *)(a1 + 32), *(void **)(a1 + 40));
  -[UICollectionViewData invalidateSupplementaryIndexPaths:](*(void *)(a1 + 32), *(void **)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 56);
  return -[UICollectionViewData invalidateDecorationIndexPaths:](v2, v3);
}

uint64_t __49__UICollectionView__invalidateLayoutWithContext___block_invoke_6(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 2568);
    if (!v2)
    {
      id v3 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
      uint64_t v4 = *(void *)(a1 + 40);
      id v5 = *(void **)(v4 + 2568);
      *(void *)(v4 + 2568) = v3;

      uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 2568);
    }
    [v2 addObjectsFromArray:*(void *)(a1 + 32)];
  }
  if ([*(id *)(a1 + 48) count])
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (!*(void *)(v6 + 2576))
    {
      id v7 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      uint64_t v8 = *(void *)(a1 + 40);
      id v9 = *(void **)(v8 + 2576);
      *(void *)(v8 + 2576) = v7;

      uint64_t v6 = *(void *)(a1 + 40);
    }
    double v10 = *(void **)(a1 + 48);
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke_7;
    v18[3] = &unk_1E52E0A90;
    v18[4] = v6;
    [v10 enumerateKeysAndObjectsUsingBlock:v18];
  }
  uint64_t result = [*(id *)(a1 + 56) count];
  if (result)
  {
    uint64_t v12 = *(void *)(a1 + 40);
    if (!*(void *)(v12 + 2584))
    {
      id v13 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void **)(v14 + 2584);
      *(void *)(v14 + 2584) = v13;

      uint64_t v12 = *(void *)(a1 + 40);
    }
    id v16 = *(void **)(a1 + 56);
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    void v17[2] = __49__UICollectionView__invalidateLayoutWithContext___block_invoke_8;
    v17[3] = &unk_1E52E0A90;
    void v17[4] = v12;
    return [v16 enumerateKeysAndObjectsUsingBlock:v17];
  }
  return result;
}

- (void)accessoryInsetsDidChange:(UIEdgeInsets)a3
{
  double right = a3.right;
  bottouint64_t m = a3.bottom;
  double left = a3.left;
  double top = a3.top;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  v24.receiver = self;
  v24.super_class = (Class)UICollectionView;
  -[UIScrollView accessoryInsetsDidChange:](&v24, sel_accessoryInsetsDidChange_);
  [(UIScrollView *)self accessoryInsets];
  if (v9 != left || v8 != top || v11 != right || v10 != bottom)
  {
    CGFloat v15 = v8;
    CGFloat v16 = v9;
    CGFloat v17 = v10;
    CGFloat v18 = v11;
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", accessoryInsetsDidChange____s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      uint64_t v20 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        __int16 v21 = v20;
        v30.double top = top;
        v30.double left = left;
        v30.bottouint64_t m = bottom;
        v30.double right = right;
        BOOL v22 = NSStringFromUIEdgeInsets(v30);
        v31.double top = v15;
        v31.double left = v16;
        v31.bottouint64_t m = v17;
        v31.double right = v18;
        __int16 v23 = NSStringFromUIEdgeInsets(v31);
        *(_DWORD *)long long buf = 138412546;
        double v26 = v22;
        __int16 v27 = 2112;
        double v28 = v23;
        _os_log_impl(&dword_1853B0000, v21, OS_LOG_TYPE_ERROR, "Invalidating layout due to [UICollectionView accessoryInsetsDidChange:] previousInsets: %@, newInsets: %@", buf, 0x16u);
      }
    }
    [(UICollectionView *)self _invalidateLayoutForUpdatedLayoutMarginsIfNeeded];
  }
}

- (void)_safeAreaInsetsDidChangeFromOldInsets:(UIEdgeInsets)a3
{
  double right = a3.right;
  bottouint64_t m = a3.bottom;
  double left = a3.left;
  double top = a3.top;
  v17.receiver = self;
  v17.super_class = (Class)UICollectionView;
  -[UIView _safeAreaInsetsDidChangeFromOldInsets:](&v17, sel__safeAreaInsetsDidChangeFromOldInsets_);
  [(UIView *)self safeAreaInsets];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  if (-[UICollectionViewLayout _shouldInvalidateLayoutForUpdatedSafeAreaInsets:fromOldInsets:](self->_layout, "_shouldInvalidateLayoutForUpdatedSafeAreaInsets:fromOldInsets:"))
  {
    debugger = self->_debugger;
    if (debugger) {
      [(_UICollectionViewFeedbackLoopDebugger *)debugger recordCollectionViewInsetsPropertyChange:@"safeAreaInsets", top, left, bottom, right, v9, v11, v13, v15 fromInsets toInsets];
    }
    [(UICollectionView *)self _invalidateLayoutForUpdatedLayoutMarginsIfNeeded];
  }
}

- (void)_layoutMarginsDidChangeFromOldMargins:(UIEdgeInsets)a3
{
  double right = a3.right;
  bottouint64_t m = a3.bottom;
  double left = a3.left;
  double top = a3.top;
  v17.receiver = self;
  v17.super_class = (Class)UICollectionView;
  [(UIView *)&v17 _layoutMarginsDidChangeFromOldMargins:sel__layoutMarginsDidChangeFromOldMargins_];
  [(UIView *)self layoutMargins];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  if (-[UICollectionViewLayout _shouldInvalidateLayoutForUpdatedLayoutMargins:fromOldMargins:](self->_layout, "_shouldInvalidateLayoutForUpdatedLayoutMargins:fromOldMargins:"))
  {
    debugger = self->_debugger;
    if (debugger) {
      [(_UICollectionViewFeedbackLoopDebugger *)debugger recordCollectionViewInsetsPropertyChange:@"layoutMargins", top, left, bottom, right, v9, v11, v13, v15 fromInsets toInsets];
    }
    [(UICollectionView *)self _invalidateLayoutForUpdatedLayoutMarginsIfNeeded];
  }
}

- (void)_invalidateLayoutForUpdatedLayoutMarginsIfNeeded
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  layout = self->_layout;
  [(UIView *)self layoutMargins];
  uint64_t v4 = [(UICollectionViewLayout *)layout _invalidationContextForUpdatedLayoutMargins:"_invalidationContextForUpdatedLayoutMargins:"];
  if (v4)
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &_invalidateLayoutForUpdatedLayoutMarginsIfNeeded___s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      uint64_t v6 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        id v7 = v6;
        [(UIView *)self safeAreaInsets];
        double v8 = NSStringFromUIEdgeInsets(v17);
        [(UIView *)self layoutMargins];
        double v9 = NSStringFromUIEdgeInsets(v18);
        int v10 = 134218498;
        double v11 = self;
        __int16 v12 = 2112;
        double v13 = v8;
        __int16 v14 = 2112;
        double v15 = v9;
        _os_log_impl(&dword_1853B0000, v7, OS_LOG_TYPE_ERROR, "_invalidateLayoutForUpdatedLayoutMarginsIfNeeded: cv == %p; Invalidating layout for safeAreaInsets: %@, layoutMargins: %@",
          (uint8_t *)&v10,
          0x20u);
      }
    }
    [(UICollectionViewLayout *)self->_layout invalidateLayoutWithContext:v4];
    [(UIScrollView *)self setNeedsLayout];
  }
}

- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated
{
  BOOL v4 = animated;
  id v7 = layout;
  double v9 = v7;
  if (!v7)
  {
    double v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:6889 description:@"layout cannot be nil in setCollectionViewLayout:animated:"];

    id v7 = 0;
  }
  [(UICollectionView *)self _setCollectionViewLayout:v7 animated:v4 isInteractive:0 completion:0];
}

- (void)setCollectionViewLayout:(UICollectionViewLayout *)collectionViewLayout
{
  id v5 = collectionViewLayout;
  id v7 = v5;
  if (!v5)
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    [v6 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:6883 description:@"layout cannot be nil in setCollectionViewLayout:"];

    id v5 = 0;
  }
  [(UICollectionView *)self _setCollectionViewLayout:v5 animated:0 isInteractive:0 completion:0];
}

- (void)_setCollectionViewLayout:(id)a3 animated:(BOOL)a4 isInteractive:(BOOL)a5 completion:(id)a6 animator:(id)a7
{
  BOOL v162 = a5;
  BOOL v166 = a4;
  uint64_t v247 = *MEMORY[0x1E4F143B8];
  __int16 v12 = (UICollectionViewLayout *)a3;
  id v169 = a6;
  id v170 = a7;
  locatiouint64_t n = (id *)&self->_layout;
  id v179 = v12;
  if (self->_layout != v12)
  {
    int v13 = dyld_program_sdk_at_least();
    uint64_t v14 = *((void *)&self->_collectionViewFlags + 1);
    long long v173 = self;
    if (v13)
    {
      if ((v14 & 0x400000000) != 0)
      {
        double v15 = [MEMORY[0x1E4F28B00] currentHandler];
        [v15 handleFailureInMethod:a2, self, @"UICollectionView.m", 6916, @"Cannot set the layout [%@] for [%@] during an update.", v12, self object file lineNumber description];
      }
    }
    else if ((v14 & 0x400000000) != 0)
    {
      uint64_t v151 = *(id *)(__UILogGetCategoryCachedImpl("Assert", &_setCollectionViewLayout_animated_isInteractive_completion_animator____s_category)+ 8);
      if (os_log_type_enabled(v151, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412546;
        *(void *)&uint8_t buf[4] = v12;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = self;
        _os_log_impl(&dword_1853B0000, v151, OS_LOG_TYPE_ERROR, "Cannot set the layout [%@] for [%@] during an update.", buf, 0x16u);
      }
    }
    [(UICollectionView *)self _resetPrefetchState];
    id v165 = [(UICollectionView *)self _focusedItemState];
    [(UICollectionView *)self _setFocusedItemState:0];
    uint64_t v16 = v165;
    if (v165) {
      uint64_t v16 = (void *)v165[1];
    }
    id v17 = v16;
    [(UICollectionView *)self _reusePreviouslyFocusedManagedSubviewIfNeeded:v17];

    [(UIScrollView *)self _resetContentScrollableAxes];
    [(UICollectionViewLayout *)v12 _setCollectionView:self];
    if ([(UICollectionViewLayout *)v12 canBeEdited])
    {
      BOOL v18 = [(UICollectionViewLayout *)v12 isEditing];
      unint64_t v19 = *((void *)&self->_collectionViewFlags + 1);
      if (((v18 ^ ((v19 & 0x400000000000) == 0)) & 1) == 0) {
        [(UICollectionViewLayout *)v12 setEditing:(v19 >> 46) & 1];
      }
    }
    id v171 = objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
    [v171 _setInvalidateEverything:1];
    [v171 _setInvalidateDataSourceCounts:1];
    [(UICollectionViewLayout *)v12 _invalidateLayoutUsingContext:v171];
    [(UICollectionView *)self _reloadDataIfNeeded];
    uint64_t v20 = self;
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x10000000) != 0)
    {
      dispatch_group_t v150 = [MEMORY[0x1E4F28B00] currentHandler];
      objc_msgSend(v150, "handleFailureInMethod:object:file:lineNumber:description:", a2, self);

      uint64_t v20 = self;
    }
    if (v166 || v162)
    {
      [(UIScrollView *)v20 stopScrollingAndZooming];
      uint64_t v20 = self;
    }
    if ((*((void *)&v20->_collectionViewFlags + 1) & 0x100000000) == 0)
    {
      [*location _setCollectionView:0];
      [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController cleanupSectionFocusGuides];
      -[_UICollectionViewOrthogonalScrollerSectionController reconfigureScrollViewsForUpdate:]((uint64_t)self->_orthogonalScrollerController, 0);
      [(UICollectionView *)self _reconfigureSectionContainersForUpdate:0];
      objc_storeStrong(location, a3);
      [*location _setCollectionView:self];
      __int16 v21 = (UICollectionViewData *)-[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], self, *location);
      collectionViewData = self->_collectionViewData;
      self->_collectionViewData = v21;

      [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
      __int16 v23 = *location;
      objc_super v24 = self;
      if (!v23)
      {
LABEL_139:

        goto LABEL_140;
      }
      __int16 v25 = v24;
      uint64_t v26 = [(UIView *)v24 effectiveUserInterfaceLayoutDirection];
      if (v26 == [v23 developmentLayoutDirection])
      {
        if (![(UIView *)v25 _flipsHorizontalAxis])
        {
LABEL_47:
          objc_super v24 = v25;
          goto LABEL_139;
        }
        uint64_t v27 = 0;
      }
      else
      {
        uint64_t v27 = [v23 _wantsRightToLeftHorizontalMirroringIfNeeded];
      }
      [(UIScrollView *)v25 _setFlipsHorizontalAxis:v27];
      goto LABEL_47;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      [*location _prepareForTransitionToLayout:v12];
      [(UICollectionViewLayout *)v12 _prepareForTransitionFromLayout:*location];
    }
    BOOL v167 = (unsigned char *)-[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], self, v12);
    -[UICollectionViewData _prepareToLoadData]((uint64_t)v167);
    -[UICollectionViewData _prepareToLoadData]((uint64_t)self->_collectionViewData);
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      [(UICollectionViewLayout *)v12 setTransitionProgress:0.0];
    }
    *((void *)&self->_collectionViewFlags + 1) |= 0x8000000uLL;
    selectionController = self->_selectionController;
    if (selectionController) {
      uint64_t v29 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
    }
    else {
      uint64_t v29 = 0;
    }
    id v157 = (void *)[v29 mutableCopy];

    UIEdgeInsets v30 = (void *)MEMORY[0x1E4F1CA80];
    UIEdgeInsets v31 = [(UICollectionView *)self _indexPathsForVisibleItems];
    id v164 = [v30 setWithArray:v31];

    if ([v164 intersectsSet:v157]) {
      [v164 intersectSet:v157];
    }
    [(UICollectionView *)self _visibleBounds];
    double x = v248.origin.x;
    double y = v248.origin.y;
    double width = v248.size.width;
    double height = v248.size.height;
    double MidX = CGRectGetMidX(v248);
    v249.origin.double x = x;
    v249.origin.double y = y;
    v249.size.double width = width;
    v249.size.double height = height;
    double MidY = CGRectGetMidY(v249);
    uint64_t v38 = [v164 count];
    if ((*(void *)&self->_collectionViewFlags & 0x1000) != 0)
    {
      CGRect v40 = [(UICollectionView *)self _delegateProxy];
      long long v172 = [v40 _indexPathOfReferenceItemForLayoutTransitionInCollectionView:self];

      BOOL v39 = v172 != 0;
      if (v172)
      {
        uint64_t v41 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)v167, v172);
        goto LABEL_52;
      }
    }
    else
    {
      BOOL v39 = 0;
    }
    if ([v164 count] == 1)
    {
      long long v172 = [v164 anyObject];
    }
    else
    {
      long long v237 = 0u;
      long long v238 = 0u;
      long long v235 = 0u;
      long long v236 = 0u;
      id v42 = v164;
      uint64_t v43 = [v42 countByEnumeratingWithState:&v235 objects:v246 count:16];
      if (v43)
      {
        long long v172 = 0;
        uint64_t v44 = *(void *)v236;
        double v45 = 3.40282347e38;
        do
        {
          for (uint64_t i = 0; i != v43; ++i)
          {
            if (*(void *)v236 != v44) {
              objc_enumerationMutation(v42);
            }
            CGRect v47 = *(void **)(*((void *)&v235 + 1) + 8 * i);
            int v48 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v47);
            [v48 center];
            *(float *)&double v49 = (v49 - MidX) * (v49 - MidX) + (v50 - MidY) * (v50 - MidY);
            double v51 = sqrtf(*(float *)&v49);
            if (v45 > v51)
            {
              double v52 = v47;

              double v45 = v51;
              long long v172 = v52;
            }
          }
          uint64_t v43 = [v42 countByEnumeratingWithState:&v235 objects:v246 count:16];
        }
        while (v43);
      }
      else
      {
        long long v172 = 0;
      }
    }
    if (!v172)
    {
      long long v172 = 0;
      goto LABEL_56;
    }
    objc_super v53 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)v167, v172);
    uint64_t v41 = v53;
    if (!v39)
    {
      [v53 center];
      double x = v63 - width * 0.5;
      double y = v64 - height * 0.5;
      goto LABEL_55;
    }
LABEL_52:
    [v41 frame];
    double v55 = v54;
    double v57 = v56;
    __int16 v58 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v172);
    [v58 frame];
    double v60 = v59;
    [v58 frame];
    double v62 = v61;

    double x = v55 - (v60 - x);
    double y = v57 - (v62 - y);
LABEL_55:

LABEL_56:
    -[UICollectionViewData collectionViewContentRect]((uint64_t)v167);
    double v158 = v250.size.height;
    double v160 = v250.size.width;
    v250.origin.double x = 0.0;
    v250.origin.double y = 0.0;
    v254.origin.double x = x;
    v254.origin.double y = y;
    v254.size.double width = width;
    v254.size.double height = height;
    if (CGRectContainsRect(v250, v254))
    {
      double v65 = x;
      CGRect v66 = self;
    }
    else
    {
      v251.origin.double x = 0.0;
      v251.origin.double y = 0.0;
      v251.size.double height = v158;
      v251.size.double width = v160;
      v255.origin.double x = x;
      v255.origin.double y = y;
      v255.size.double width = width;
      v255.size.double height = height;
      CGRect v252 = CGRectIntersection(v251, v255);
      double v65 = 0.0;
      CGRect v66 = self;
      if (v160 > width)
      {
        if (v252.size.width >= width)
        {
          double v65 = x;
        }
        else
        {
          double v67 = width - v252.size.width;
          if (v252.origin.x <= x) {
            double v68 = -v67;
          }
          else {
            double v68 = v67;
          }
          double v65 = x + v68;
        }
      }
      if (v158 <= height)
      {
        double y = 0.0;
      }
      else if (v252.size.height < height)
      {
        double v69 = height - v252.size.height;
        if (v252.origin.y <= y) {
          double v69 = -(height - v252.size.height);
        }
        double y = y + v69;
      }
    }
    [(UIScrollView *)v66 _effectiveContentInset];
    double v71 = -v70;
    double v73 = -v72;
    double v74 = v65 - v70;
    double v75 = y - v72;
    if (v38) {
      double v76 = v74;
    }
    else {
      double v76 = v71;
    }
    if (v38) {
      double v77 = v75;
    }
    else {
      double v77 = v73;
    }
    -[UICollectionViewLayout transitionContentOffsetForProposedContentOffset:keyItemIndexPath:](v179, "transitionContentOffsetForProposedContentOffset:keyItemIndexPath:", v172, v76, v77);
    -[UICollectionViewLayout targetContentOffsetForProposedContentOffset:](v179, "targetContentOffsetForProposedContentOffset:");
    -[UICollectionView _delegateTargetOffsetForProposedContentOffset:](self, "_delegateTargetOffsetForProposedContentOffset:");
    double v79 = v78;
    double v81 = v80;
    uint64_t v82 = -[UICollectionViewData layoutAttributesForElementsInRect:](v167, v78, v80, width, height);
    id v83 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    id v84 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    id v85 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke;
    aBlock[3] = &unk_1E52E5560;
    id v155 = v83;
    id v232 = v155;
    id v153 = v84;
    id v233 = v153;
    id v152 = v85;
    id v234 = v152;
    long long v175 = (void (**)(void *, void *, void *, uint64_t, uint64_t))_Block_copy(aBlock);
    long long v229 = 0u;
    long long v230 = 0u;
    long long v227 = 0u;
    long long v228 = 0u;
    id obj = v82;
    uint64_t v86 = [obj countByEnumeratingWithState:&v227 objects:v245 count:16];
    if (v86)
    {
      uint64_t v87 = *(void *)v228;
      do
      {
        for (uint64_t j = 0; j != v86; ++j)
        {
          if (*(void *)v228 != v87) {
            objc_enumerationMutation(obj);
          }
          uint64_t v89 = *(void *)(*((void *)&v227 + 1) + 8 * j);
          int v90 = -[UICollectionViewLayoutAttributes __indexPath]((void *)v89);
          if (!v89)
          {
            uint64_t v92 = 0;
LABEL_88:
            uint64_t v94 = [*location layoutAttributesForItemAtIndexPath:v90];
            uint64_t v95 = [(UICollectionViewLayout *)v179 layoutAttributesForItemAtIndexPath:v90];
            uint64_t v96 = 0;
            goto LABEL_89;
          }
          __int16 v91 = *(_WORD *)(v89 + 288);
          uint64_t v92 = *(void *)(v89 + 8);
          if (v91) {
            goto LABEL_88;
          }
          id v93 = *location;
          if ((v91 & 2) != 0)
          {
            uint64_t v94 = [v93 layoutAttributesForDecorationViewOfKind:*(void *)(v89 + 8) atIndexPath:v90];
            uint64_t v95 = [(UICollectionViewLayout *)v179 layoutAttributesForDecorationViewOfKind:v92 atIndexPath:v90];
            uint64_t v96 = 2;
          }
          else
          {
            uint64_t v94 = [v93 layoutAttributesForSupplementaryViewOfKind:*(void *)(v89 + 8) atIndexPath:v90];
            uint64_t v95 = [(UICollectionViewLayout *)v179 layoutAttributesForSupplementaryViewOfKind:v92 atIndexPath:v90];
            uint64_t v96 = 1;
          }
LABEL_89:
          if (v94 | v95)
          {
            unint64_t v97 = [MEMORY[0x1E4F1CA60] dictionary];
            int v98 = v97;
            if (v95) {
              [v97 setObject:v95 forKey:@"newLayoutInfos"];
            }
            if (v94) {
              [v98 setObject:v94 forKey:@"previousLayoutInfos"];
            }
            v175[2](v175, v98, v90, v92, v96);
          }
        }
        uint64_t v86 = [obj countByEnumeratingWithState:&v227 objects:v245 count:16];
      }
      while (v86);
    }

    subviewManager = v173->_subviewManager;
    v224[0] = MEMORY[0x1E4F143A8];
    v224[1] = 3221225472;
    v224[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_2;
    v224[3] = &unk_1E52E5588;
    v224[4] = v173;
    int v100 = v179;
    uint64_t v225 = v100;
    uint64_t v176 = v175;
    id v226 = v176;
    if (subviewManager) {
      -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v224);
    }
    [(UICollectionView *)v173 _updateBackgroundView];
    v222[0] = MEMORY[0x1E4F143A8];
    v222[1] = 3221225472;
    v222[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_3;
    v222[3] = &unk_1E52E55D8;
    v222[4] = v173;
    unsigned int v101 = v100;
    id v223 = v101;
    unint64_t v102 = (void (**)(void *, id))_Block_copy(v222);
    v102[2](v102, v155);
    v220[0] = MEMORY[0x1E4F143A8];
    v220[1] = 3221225472;
    v220[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_6;
    v220[3] = &unk_1E52E5F58;
    uint64_t v103 = v102;
    char v221 = v103;
    [v153 enumerateKeysAndObjectsUsingBlock:v220];
    v218[0] = MEMORY[0x1E4F143A8];
    v218[1] = 3221225472;
    v218[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_7;
    v218[3] = &unk_1E52E5F58;
    long long v174 = v103;
    v219 = v174;
    [v152 enumerateKeysAndObjectsUsingBlock:v218];
    v216[0] = MEMORY[0x1E4F143A8];
    v216[1] = 3221225472;
    v216[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_8;
    v216[3] = &unk_1E52E5600;
    v216[4] = v173;
    char v104 = v101;
    int64_t v217 = v104;
    [(UICollectionView *)v173 _applyBlockToAllReusableViews:v216];
    *(void *)long long buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000;
    uint64_t v242 = __Block_byref_object_copy__41;
    uint64_t v243 = __Block_byref_object_dispose__41;
    id v244 = 0;
    [(UIView *)v173 bounds];
    double v106 = v105;
    double v108 = v107;
    double v110 = v109;
    double v112 = v111;
    uint64_t v113 = [UIView alloc];
    char v114 = v167;
    uint64_t v115 = -[UIView initWithFrame:](v113, "initWithFrame:", *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));
    [(UIView *)v173 addSubview:v115];
    id v116 = *location;
    if (v167)
    {
      if ((v167[96] & 8) != 0)
      {
        if (!-[UICollectionViewLayout shouldInvalidateLayoutForBoundsChange:](v104, "shouldInvalidateLayoutForBoundsChange:", v79, v81, width, height))goto LABEL_105; {
        v253.origin.double x = v79;
        }
        v253.origin.double y = v81;
        v253.size.double width = width;
        v253.size.double height = height;
        v256.origin.double x = v106;
        v256.origin.double y = v108;
        v256.size.double width = v110;
        v256.size.double height = v112;
        if (!CGRectEqualToRect(v253, v256))
        {
          char v114 = -[UICollectionViewLayout _invalidationContextForBoundsChange:fromOldBounds:](v104, "_invalidationContextForBoundsChange:fromOldBounds:", v79, v81, width, height, v106, v108, v110, v112);
          char v117 = 1;
          char v118 = 1;
        }
        else
        {
LABEL_105:
          char v114 = 0;
          char v118 = 0;
          char v117 = 1;
        }
LABEL_107:
        v200[0] = MEMORY[0x1E4F143A8];
        v200[1] = 3221225472;
        v200[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_9;
        v200[3] = &unk_1E52E56C8;
        v200[4] = v173;
        double v209 = v79;
        double v210 = v81;
        double v211 = v160;
        double v212 = v158;
        char v213 = v117;
        __int16 v201 = v104;
        BOOL v214 = v166;
        id v119 = v155;
        id v202 = v119;
        id v120 = v153;
        id v203 = v120;
        id v121 = v152;
        id v204 = v121;
        objc_super v122 = v115;
        BOOL v215 = v162;
        v205 = v122;
        v208 = buf;
        __int16 v23 = v167;
        id v206 = v23;
        id v123 = v116;
        id v207 = v123;
        id v124 = (void (**)(void))_Block_copy(v200);
        v190[0] = MEMORY[0x1E4F143A8];
        v190[1] = 3221225472;
        v190[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_18;
        v190[3] = &unk_1E52E56F0;
        v190[4] = v173;
        id v163 = v123;
        id v191 = v163;
        id v154 = v119;
        id v192 = v154;
        id v156 = v120;
        id v193 = v156;
        id v159 = v121;
        id v194 = v159;
        v198 = buf;
        id v197 = v169;
        char v199 = v118;
        id v168 = v114;
        id v195 = v168;
        v161 = v122;
        v196 = v161;
        long long v125 = _Block_copy(v190);
        if (v170)
        {
          id v126 = v170;
          uint64_t v127 = (void *)[v126 copy];
          long long v188 = 0u;
          long long v189 = 0u;
          long long v186 = 0u;
          long long v187 = 0u;
          long long v128 = [v126 _animations];
          uint64_t v129 = [v128 countByEnumeratingWithState:&v186 objects:v240 count:16];
          if (v129)
          {
            uint64_t v130 = *(void *)v187;
            do
            {
              for (uint64_t k = 0; k != v129; ++k)
              {
                if (*(void *)v187 != v130) {
                  objc_enumerationMutation(v128);
                }
                unint64_t v132 = (void *)[*(id *)(*((void *)&v186 + 1) + 8 * k) copy];
                [v127 addAnimations:v132];
              }
              uint64_t v129 = [v128 countByEnumeratingWithState:&v186 objects:v240 count:16];
            }
            while (v129);
          }

          long long v184 = 0u;
          long long v185 = 0u;
          long long v182 = 0u;
          long long v183 = 0u;
          v133 = [v126 _completions];
          uint64_t v134 = [v133 countByEnumeratingWithState:&v182 objects:v239 count:16];
          if (v134)
          {
            uint64_t v135 = *(void *)v183;
            do
            {
              for (uint64_t m = 0; m != v134; ++m)
              {
                if (*(void *)v183 != v135) {
                  objc_enumerationMutation(v133);
                }
                CGRect v137 = (void *)[*(id *)(*((void *)&v182 + 1) + 8 * m) copy];
                [v127 addCompletion:v137];
              }
              uint64_t v134 = [v133 countByEnumeratingWithState:&v182 objects:v239 count:16];
            }
            while (v134);
          }

          [v127 addAnimations:v124];
          v180[0] = MEMORY[0x1E4F143A8];
          v180[1] = 3221225472;
          v180[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_20;
          v180[3] = &unk_1E52E5E20;
          id v181 = v125;
          [v127 addCompletion:v180];
          [v127 startAnimation];

          CGRect v138 = v173;
        }
        else if (v166)
        {
          CGRect v138 = v173;
          if (dyld_program_sdk_at_least()) {
            uint64_t v139 = 7;
          }
          else {
            uint64_t v139 = 5;
          }
          +[UIView animateWithDuration:v139 delay:v124 options:v125 animations:0.3 completion:0.0];
        }
        else
        {
          v124[2](v124);
          CGRect v138 = v173;
          (*((void (**)(void *, uint64_t))v125 + 2))(v125, 1);
        }
        id v140 = *location;
        CGRect v141 = v138;
        CGRect v142 = v141;
        if (!v141 || !v140) {
          goto LABEL_136;
        }
        uint64_t v143 = [v141 effectiveUserInterfaceLayoutDirection];
        if (v143 == [v140 developmentLayoutDirection])
        {
          if (![v142 _flipsHorizontalAxis])
          {
LABEL_136:

            *((void *)&v173->_collectionViewFlags + 1) &= ~0x4000000uLL;
            [v142 setNeedsFocusUpdate];
            id v145 = v142[359];
            uint64_t v146 = [v142 _focusedItemState];
            v147 = (void *)v146;
            if (v146) {
              id v148 = *(void **)(v146 + 16);
            }
            else {
              id v148 = 0;
            }
            id v149 = v148;
            [v145 updateFocusedIndexPath:v149];

            [v142[359] reloadSectionFocusGuides];
            _Block_object_dispose(buf, 8);

            objc_super v24 = v172;
            goto LABEL_139;
          }
          uint64_t v144 = 0;
        }
        else
        {
          uint64_t v144 = [v140 _wantsRightToLeftHorizontalMirroringIfNeeded];
        }
        [v142 _setFlipsHorizontalAxis:v144];
        goto LABEL_136;
      }
      char v117 = 0;
      char v114 = 0;
    }
    else
    {
      char v117 = 0;
    }
    char v118 = 0;
    goto LABEL_107;
  }
LABEL_140:
}

- (void)_invalidateLayoutForReload
{
  id v3 = objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
  [v3 _setInvalidateDataSourceCounts:1];
  [v3 _setInvalidateEverything:1];
  [v3 _setIntent:3];
  [(UICollectionViewLayout *)self->_layout _invalidateLayoutUsingContext:v3];
}

- (void)_setFocusedItemState:(id)a3
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v5 = (id *)a3;
  uint64_t v6 = [(UICollectionView *)self _focusedItemState];
  objc_storeStrong((id *)&self->_focusedItemState, a3);
  if (v6)
  {
    id v7 = *(id *)(v6 + 8);
    if (v7)
    {
      double v8 = v7;
      id v9 = *(id *)(v6 + 8);
      id v10 = v5 ? v5[1] : 0;
      id v11 = v10;

      if (v9 != v11)
      {
        id v12 = *(id *)(v6 + 8);
        [(UICollectionView *)self _reusePreviouslyFocusedManagedSubviewIfNeeded:v12];
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258BC8);
        if (*(unsigned char *)CategoryCachedImpl)
        {
          __int16 v23 = *(NSObject **)(CategoryCachedImpl + 8);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          {
            objc_super v24 = v23;
            if (v5)
            {
              id v25 = v5[2];
              id v26 = v5[1];
              uint64_t v27 = v25;
            }
            else
            {
              id v25 = 0;
              uint64_t v27 = 0;
              id v26 = 0;
            }
            id v28 = v26;
            id v29 = *(id *)(v6 + 8);
            int v31 = 134218754;
            long long v32 = self;
            __int16 v33 = 2112;
            id v34 = v25;
            __int16 v35 = 2112;
            id v36 = v28;
            __int16 v37 = 2112;
            id v38 = v29;
            _os_log_impl(&dword_1853B0000, v24, OS_LOG_TYPE_ERROR, "[UICV %p] _setFocusedItemState: Asked to update focus at %@ to cell %@ while cell %@ is already focused", (uint8_t *)&v31, 0x2Au);
          }
        }
      }
    }
  }
  if (v5)
  {
    uint64_t v14 = (UICollectionView *)v5[1];
    if (os_variant_has_internal_diagnostics())
    {
      if (v14)
      {
        if ([(UIView *)v14 isHidden] || ([(UIView *)v14 alpha], v30 <= 0.0))
        {
          BOOL v22 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
          {
            int v31 = 138412290;
            long long v32 = v14;
            _os_log_fault_impl(&dword_1853B0000, v22, OS_LOG_TYPE_FAULT, "Attempting store a hidden view as focused: %@", (uint8_t *)&v31, 0xCu);
          }
        }
      }
    }
    else if (v14)
    {
      if ([(UIView *)v14 isHidden] || ([(UIView *)v14 alpha], v17 <= 0.0))
      {
        double v15 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258BD0) + 8);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          int v31 = 138412290;
          long long v32 = v14;
          _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_ERROR, "Attempting store a hidden view as focused: %@", (uint8_t *)&v31, 0xCu);
        }
      }
    }
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = (UICollectionView *)-[_UICollectionViewFocusedItemState copyWithReusableView:]((void *)v6, 0);
    uint64_t v14 = v16;
  }
  [(UICollectionView *)self _setRememberedFocusedItemState:v16];

  currentUpdate = self->_currentUpdate;
  if (currentUpdate)
  {
    oldFocusedItemState = currentUpdate->_oldFocusedItemState;
    currentUpdate->_oldFocusedItemState = 0;

    uint64_t v20 = self->_currentUpdate;
    newFocusedItemState = v20->_newFocusedItemState;
    v20->_newFocusedItemState = 0;
  }
}

- (void)_setRememberedFocusedItemState:(id)a3
{
}

- (void)_reusePreviouslyFocusedManagedSubviewIfNeeded:(id)a3
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if ([(UICollectionView *)self _canReusePreviouslyFocusedManagedSubview:v4])
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_reusePreviouslyFocusedManagedSubviewIfNeeded____s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      double v8 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = 134218242;
        id v10 = self;
        __int16 v11 = 2112;
        id v12 = v4;
        _os_log_impl(&dword_1853B0000, v8, OS_LOG_TYPE_ERROR, "[UICV %p] Reusing previously focused managed subview %@", (uint8_t *)&v9, 0x16u);
      }
    }
    uint64_t v6 = [v4 _layoutAttributes];
    if (v6 && (__int16 v7 = v6[144], v6, (v7 & 1) != 0)) {
      [(UICollectionView *)self _reuseCell:v4];
    }
    else {
      [(UICollectionView *)self _reuseSupplementaryView:v4];
    }
  }
}

- (BOOL)_canReusePreviouslyFocusedManagedSubview:(id)a3
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v4 = (UICollectionReusableView *)a3;
  if (!v4) {
    goto LABEL_22;
  }
  uint64_t v5 = [(UICollectionView *)self _focusedItemState];
  uint64_t v6 = (void *)v5;
  if (v5) {
    __int16 v7 = *(void **)(v5 + 8);
  }
  else {
    __int16 v7 = 0;
  }
  double v8 = v7;
  if (v8 == v4)
  {

LABEL_22:
    BOOL v18 = 0;
    goto LABEL_23;
  }
  firstResponderView = self->_firstResponderView;

  if (firstResponderView == v4) {
    goto LABEL_22;
  }
  if ([(UICollectionReusableView *)v4 _isInUpdateAnimation]) {
    goto LABEL_22;
  }
  if (-[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)self->_subviewManager, v4)) {
    goto LABEL_22;
  }
  subviewManager = self->_subviewManager;
  if (subviewManager)
  {
    if (-[_UICollectionViewSubviewCollection containsView:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v4)) {
      goto LABEL_22;
    }
  }
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  __int16 v11 = [(NSMutableDictionary *)self->_prefetchCacheItems objectEnumerator];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v21;
    while (2)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v21 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        if (v16) {
          uint64_t v16 = (void *)v16[3];
        }
        double v17 = v16;

        if (v17 == v4)
        {
          BOOL v18 = 0;
          goto LABEL_25;
        }
      }
      uint64_t v13 = [v11 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v13) {
        continue;
      }
      break;
    }
  }
  BOOL v18 = 1;
LABEL_25:

LABEL_23:
  return v18;
}

- (void)_setCollectionViewLayout:(id)a3 animated:(BOOL)a4 isInteractive:(BOOL)a5 completion:(id)a6
{
}

void __49__UICollectionView__invalidateLayoutWithContext___block_invoke_7(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 2576) objectForKeyedSubscript:a2];
  if (!v6)
  {
    id v7 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    [*(id *)(*(void *)(a1 + 32) + 2576) setObject:v7 forKeyedSubscript:a2];
    uint64_t v6 = v7;
  }
  id v8 = v6;
  [v6 addObjectsFromArray:a3];
}

- (void)deselectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated
{
  BOOL v4 = animated;
  [(UICollectionView *)self _reloadDataIfNeeded];
  id v7 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:indexPath];
  [(UICollectionView *)self _deselectItemAtIndexPath:v7 animated:v4 notifyDelegate:0];
}

- (void)setAllowsSelection:(BOOL)allowsSelection
{
  uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v3 & 0x400) == 0) ^ allowsSelection) & 1) == 0)
  {
    if (allowsSelection)
    {
      int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
      *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v3 | 0x400;
      *((_WORD *)&self->_collectionViewFlags + 8) = v5;
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
    }
    else
    {
      if (![(UICollectionView *)self _isEditing]) {
        [(UICollectionView *)self _deselectAllAnimated:0 notifyDelegate:0];
      }
      *((void *)&self->_collectionViewFlags + 1) &= ~0x400uLL;
      [(UICollectionView *)self setAllowsMultipleSelection:0];
    }
  }
}

- (void)_deselectItemAtIndexPath:(id)a3 animated:(BOOL)a4 notifyDelegate:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  selectionController = self->_selectionController;
  if (selectionController
    && [(NSMutableSet *)selectionController->_selectedIndexPaths containsObject:v8])
  {
    BOOL v10 = [(UICollectionView *)self _validateSelectionOrHighlightIndexPath:v8 isSelection:1 allowMassIndexPath:0 assertIfInvalid:0];
    __int16 v11 = [(UICollectionView *)self _delegateProxy];
    uint64_t v12 = v11;
    if (!v5
      || (*(void *)&self->_collectionViewFlags & 0x10) == 0
      || [v11 collectionView:self shouldDeselectItemAtIndexPath:v8])
    {
      uint64_t v13 = self->_selectionController;
      if (v13) {
        [(NSMutableSet *)v13->_selectedIndexPaths removeObject:v8];
      }
      uint64_t v14 = [(UICollectionView *)self _cellForItemAtIndexPath:v8];
      double v15 = v14;
      if (v14)
      {
        [v14 _setSelected:0 animated:v6];
      }
      else if (v10)
      {
        uint64_t v16 = [(UICollectionView *)self collectionViewLayout];
        [v16 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:v8 separatorOnly:0];
      }
      if (v5)
      {
        multiSelectController = self->_multiSelectController;
        BOOL v18 = self->_selectionController;
        unint64_t v19 = v18 ? (void *)[(NSMutableSet *)v18->_selectedIndexPaths copy] : 0;
        long long v20 = [v19 allObjects];
        [(_UICollectionViewMultiSelectController *)multiSelectController selectedIndexPathsChanged:v20];

        if ((*(void *)&self->_collectionViewFlags & 0x40) != 0) {
          [v12 collectionView:self didDeselectItemAtIndexPath:v8];
        }
      }
      if (dyld_program_sdk_at_least()
        && ((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                       + 18) << 16)) & 0x40000) == 0
        && [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:0 initiatedBySelection:1])
      {
        long long v21 = [(UIView *)self _focusSystem];
        long long v22 = v21;
        if (v15 && [v21 _focusedItemIsContainedInEnvironment:v15 includeSelf:1])
        {
          __int16 v35 = v22;
          uint64_t v23 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v8);
          objc_super v24 = [(UICollectionView *)self indexPathsForSelectedItems];
          v40[0] = MEMORY[0x1E4F143A8];
          v40[1] = 3221225472;
          v40[2] = __69__UICollectionView__deselectItemAtIndexPath_animated_notifyDelegate___block_invoke;
          v40[3] = &unk_1E52E4FD0;
          void v40[4] = self;
          v40[5] = v23;
          uint64_t v25 = [v24 sortedArrayUsingComparator:v40];

          long long v38 = 0u;
          long long v39 = 0u;
          long long v36 = 0u;
          long long v37 = 0u;
          id v26 = v25;
          uint64_t v27 = [v26 countByEnumeratingWithState:&v36 objects:v41 count:16];
          if (v27)
          {
            uint64_t v28 = v27;
            uint64_t v29 = *(void *)v37;
            while (2)
            {
              for (uint64_t i = 0; i != v28; ++i)
              {
                if (*(void *)v37 != v29) {
                  objc_enumerationMutation(v26);
                }
                uint64_t v31 = *(void *)(*((void *)&v36 + 1) + 8 * i);
                long long v32 = [(UICollectionView *)self _cellForItemAtIndexPath:v31];
                if (v32
                  && [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:v31 initiatedBySelection:1])
                {

                  long long v22 = v35;
                  [v35 _updateFocusImmediatelyToEnvironment:v32];

                  goto LABEL_33;
                }
              }
              uint64_t v28 = [v26 countByEnumeratingWithState:&v36 objects:v41 count:16];
              if (v28) {
                continue;
              }
              break;
            }
          }

          long long v22 = v35;
          [v35 _startDeferringFocusIfSupported];
LABEL_33:
        }
      }
      __int16 v33 = [(UIView *)self traitCollection];
      uint64_t v34 = [v33 userInterfaceIdiom];

      if (v34 == 3) {
        [(UIView *)self setNeedsFocusUpdate];
      }
    }
  }
}

- (void)_deselectAllAnimated:(BOOL)a3 notifyDelegate:(BOOL)a4
{
  BOOL v4 = a4;
  BOOL v5 = a3;
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  selectionController = self->_selectionController;
  if (selectionController) {
    id v8 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
  }
  else {
    id v8 = 0;
  }
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v23;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v23 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void *)(*((void *)&v22 + 1) + 8 * v12);
        uint64_t v14 = self->_selectionController;
        if (v14) {
          [(NSMutableSet *)v14->_selectedIndexPaths removeObject:*(void *)(*((void *)&v22 + 1) + 8 * v12)];
        }
        double v15 = [(UICollectionView *)self _cellForItemAtIndexPath:v13];
        [v15 _setSelected:0 animated:v5];

        if (v4 && (*(void *)&self->_collectionViewFlags & 0x40) != 0)
        {
          uint64_t v16 = [(UICollectionView *)self _delegateProxy];
          [v16 collectionView:self didDeselectItemAtIndexPath:v13];
        }
        ++v12;
      }
      while (v10 != v12);
      uint64_t v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v10);
  }
  if (v4)
  {
    multiSelectController = self->_multiSelectController;
    BOOL v18 = self->_selectionController;
    if (v18) {
      unint64_t v19 = (void *)[(NSMutableSet *)v18->_selectedIndexPaths copy];
    }
    else {
      unint64_t v19 = 0;
    }
    long long v20 = [v19 allObjects];
    [(_UICollectionViewMultiSelectController *)multiSelectController selectedIndexPathsChanged:v20];
  }
  if (dyld_program_sdk_at_least()
    && ((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16)) & 0x40000) == 0
    && [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:0 initiatedBySelection:1])
  {
    long long v21 = [(UIView *)self _focusSystem];
    if ([v21 _focusedItemIsContainedInEnvironment:self includeSelf:1]) {
      [v21 _startDeferringFocusIfSupported];
    }
  }
}

- (void)selectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition
{
  BOOL v6 = animated;
  uint64_t v8 = *((void *)&self->_collectionViewFlags + 1);
  if ((~v8 & 0x60000000000) == 0)
  {
    int v9 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v8 & 0xFFFFFBFFFFFFFFFFLL;
    *((_WORD *)&self->_collectionViewFlags + 8) = v9;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v9);
  }
  uint64_t v10 = indexPath;
  [(UICollectionView *)self _reloadDataIfNeeded];
  id v12 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:v10];

  LOBYTE(v11) = 0;
  [(UICollectionView *)self _selectItemAtIndexPath:v12 animated:v6 scrollPosition:scrollPosition notifyDelegate:0 deselectPrevious:0 performPrimaryAction:0 performCustomSelectionAction:v11];
}

- (void)_selectItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6 deselectPrevious:(BOOL)a7 performPrimaryAction:(BOOL)a8 performCustomSelectionAction:(BOOL)a9
{
  BOOL v9 = a8;
  BOOL v11 = a6;
  BOOL v13 = a4;
  BOOL v16 = [(UICollectionView *)self _validateSelectionOrHighlightIndexPath:a3 isSelection:1 allowMassIndexPath:1 assertIfInvalid:1];
  double v17 = [(UICollectionView *)self _cellForItemAtIndexPath:a3];
  id v62 = v17;
  if (a9)
  {
    [v17 _performCustomSelectionAction];
    goto LABEL_53;
  }
  BOOL v18 = [(UICollectionView *)self _allowsEffectiveSelection];
  BOOL v19 = !a3 || [a3 section] == 0x7FFFFFFFFFFFFFFFLL || objc_msgSend(a3, "item") == 0x7FFFFFFFFFFFFFFFLL;
  if (v18 && v19)
  {
    [(UICollectionView *)self _deselectAllAnimated:v13 notifyDelegate:v11];
    goto LABEL_53;
  }
  long long v20 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
  if (v11)
  {
    if (![(UICollectionView *)self _delegateAllowsSelectingItemAtIndexPath:a3]|| !v18)
    {
      goto LABEL_50;
    }
LABEL_13:
    BOOL v56 = v9;
    uint64_t v21 = 2632;
    int v57 = *((unsigned __int8 *)&self->_collectionViewFlags + 18);
    int v60 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
    *((_WORD *)&self->_collectionViewFlags + 8) = v60;
    *((unsigned char *)&self->_collectionViewFlags + 18) = ((v57 << 16) | 0x40000u) >> 16;
    long long v22 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
    if (a7) {
      goto LABEL_14;
    }
    int v23 = 2888;
    if (![(UICollectionView *)self _allowsEffectiveMultipleSelection])
    {
      selectionController = self->_selectionController;
      long long v25 = selectionController ? (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy] : 0;
      id v26 = objc_msgSend(v25, "anyObject", 2632);
      char v54 = [v26 isEqual:a3];

      uint64_t v21 = v53;
      long long v22 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
      if ((v54 & 1) == 0)
      {
LABEL_14:
        [(UICollectionView *)self _deselectAllAnimated:v13 notifyDelegate:v11];
        int v23 = v22[454];
      }
    }
    uint64_t v55 = v23;
    uint64_t v27 = *(uint64_t *)((char *)&self->super.super.super.super.isa + v23);
    if (v27)
    {
      if (([*(id *)(v27 + 8) containsObject:a3] & 1) == 0)
      {
        uint64_t v28 = *(uint64_t *)((char *)&self->super.super.super.super.isa + v23);
        if (v28)
        {
          [*(id *)(v28 + 8) addObject:a3];
          if (!*(unsigned char *)(v28 + 40)) {
            [*(id *)(v28 + 32) removeAllObjects];
          }
        }
      }
    }
    uint64_t v29 = v21;
    if (v62)
    {
      [v62 _setSelected:1 animated:v13];
      long long v20 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
      unsigned __int8 v30 = v57;
      BOOL v9 = v56;
    }
    else
    {
      long long v20 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
      unsigned __int8 v30 = v57;
      BOOL v9 = v56;
      if (v16)
      {
        uint64_t v31 = [(UICollectionView *)self collectionViewLayout];
        [v31 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:a3 separatorOnly:0];
      }
    }
    if (a5) {
      -[UICollectionView _scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", a3, a5, v13, 0.0, 0.0, 0.0, 0.0);
    }
    unsigned int v32 = v60 & 0xFF00FFFF | (v30 << 16);
    __int16 v33 = [(UIView *)self _focusSystem];
    id v61 = [v33 focusedItem];
    id v34 = v62;
    BOOL v35 = [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:a3 initiatedBySelection:1];
    if (!v62 || v61 == v34 || !dyld_program_sdk_at_least())
    {
      if (!v35) {
        goto LABEL_43;
      }
      goto LABEL_41;
    }
    if (!v35) {
      goto LABEL_43;
    }
    __int16 v58 = v33;
    unsigned int v36 = v32;
    uint64_t v37 = v29;
    long long v38 = [(UIView *)self _focusSystem];
    char v39 = [v38 _focusedItemIsContainedInEnvironment:self includeSelf:1];

    if (!v11 || (v39 & 1) != 0)
    {
      uint64_t v29 = v37;
      unsigned int v32 = v36;
      __int16 v33 = v58;
      if (!v61)
      {
LABEL_41:
        if (([v33 _focusedItemIsContainedInEnvironment:self includeSelf:1] & 1) == 0) {
          [(UIView *)self setNeedsFocusUpdate];
        }
LABEL_43:
        if (!v11)
        {
LABEL_49:
          double v50 = (unsigned __int16 *)((char *)&self->super.super.super.__layeringSceneIdentity + v29);
          unsigned int v51 = (*v50 | (*((unsigned __int8 *)&self->super.super.super.__layeringSceneIdentity + v29 + 2) << 16)) & 0xFFFBFFFF;
          *double v50 = *v50;
          *((unsigned char *)v50 + 2) = (v51 | v32 & 0x40000) >> 16;

          goto LABEL_50;
        }
LABEL_44:
        double v59 = v33;
        uint64_t v41 = [v34 _selectionSegueTemplate];
        id v42 = (id)[v41 perform:v34];

        if ((*(uint64_t *)((unsigned char *)&self->super.super.super.super.isa + v29) & 0x20) != 0)
        {
          +[UIViewController _sendPrepareForTapGesture:]((uint64_t)UIViewController, v34);
          uint64_t v43 = [(UICollectionView *)self _delegateProxy];
          [v43 collectionView:self didSelectItemAtIndexPath:a3];
        }
        unsigned int v44 = v32;
        multiSelectController = self->_multiSelectController;
        uint64_t v46 = *(uint64_t *)((char *)&self->super.super.super.super.isa + v55);
        uint64_t v47 = v29;
        if (v46) {
          int v48 = (void *)[*(id *)(v46 + 8) copy];
        }
        else {
          int v48 = 0;
        }
        double v49 = [v48 allObjects];
        [(_UICollectionViewMultiSelectController *)multiSelectController selectedIndexPathsChanged:v49];

        uint64_t v29 = v47;
        unsigned int v32 = v44;
        __int16 v33 = v59;
        goto LABEL_49;
      }
    }
    else
    {
      BOOL v40 = [(UICollectionView *)self _shouldBecomeFocusedOnSelection];
      uint64_t v29 = v37;
      unsigned int v32 = v36;
      __int16 v33 = v58;
      if (v40 || !v61)
      {
        if (v40)
        {
LABEL_58:
          [v33 _updateFocusImmediatelyToEnvironment:v34];
          if (!v11) {
            goto LABEL_49;
          }
          goto LABEL_44;
        }
        goto LABEL_41;
      }
    }
    if ([v33 _focusedItemIsContainedInEnvironment:self includeSelf:1]) {
      goto LABEL_58;
    }
    goto LABEL_41;
  }
  if (v18) {
    goto LABEL_13;
  }
LABEL_50:
  if (v9 && (*(uint64_t *)((unsigned char *)&self->super.super.super.super.isa + v20[442]) & 0x10000000000000) != 0)
  {
    double v52 = [(UICollectionView *)self _delegateProxy];
    [v52 collectionView:self performPrimaryActionForItemAtIndexPath:a3];
  }
LABEL_53:
}

- (BOOL)allowsMultipleSelection
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 11) & 1;
}

- (void)_cellPreferredSeparatorInsetsChanged:(id)a3
{
  id v5 = [(UICollectionView *)self _indexPathForCell:a3];
  if (v5)
  {
    BOOL v4 = [(UICollectionView *)self collectionViewLayout];
    [v4 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:v5 separatorOnly:1];
  }
}

- (BOOL)_validateSelectionOrHighlightIndexPath:(id)a3 isSelection:(BOOL)a4 allowMassIndexPath:(BOOL)a5 assertIfInvalid:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v8 = a4;
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  id v11 = a3;
  if (dyld_program_sdk_at_least()) {
    [(UICollectionView *)self _reloadDataIfNeeded];
  }
  if (v11 && [v11 section] != 0x7FFFFFFFFFFFFFFFLL && objc_msgSend(v11, "item") != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v12 = [v11 section];
    if (v12 >= -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData))
    {
      if (!v6)
      {
LABEL_17:
        a5 = 0;
        goto LABEL_18;
      }
      _UIIsPrivateMainBundle();
      if (dyld_program_sdk_at_least())
      {
        double v15 = [MEMORY[0x1E4F28B00] currentHandler];
        if (v8) {
          BOOL v18 = @"selection";
        }
        else {
          BOOL v18 = @"highlight";
        }
        [v15 handleFailureInMethod:a2, self, @"UICollectionView.m", 8167, @"Attempted to modify the %@ of an item in an out-of-bounds section (%ld) when there are only %ld sections. Collection view: %@.", v18, objc_msgSend(v11, "section"), -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData), self, v41 object file lineNumber description];
        goto LABEL_24;
      }
      if (!os_variant_has_internal_diagnostics())
      {
        BOOL v19 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258A80) + 8);
        if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
        if (v8) {
          long long v20 = @"selection";
        }
        else {
          long long v20 = @"highlight";
        }
        uint64_t v21 = v19;
        uint64_t v22 = [v11 section];
        uint64_t v23 = -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData);
        *(_DWORD *)long long buf = 138413058;
        uint64_t v43 = v20;
        __int16 v44 = 2048;
        uint64_t v45 = v22;
        __int16 v46 = 2048;
        uint64_t v47 = v23;
        __int16 v48 = 2112;
        double v49 = self;
        long long v24 = "Attempted to modify the %@ of an item in an out-of-bounds section (%ld) when there are only %ld sections. "
              "Collection view: %@.  This will become an assert in a future version.";
        long long v25 = v21;
        uint32_t v26 = 42;
LABEL_37:
        _os_log_impl(&dword_1853B0000, v25, OS_LOG_TYPE_ERROR, v24, buf, v26);

        goto LABEL_17;
      }
      uint64_t v31 = __UIFaultDebugAssertLog();
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_FAULT))
      {
LABEL_44:

        goto LABEL_17;
      }
      if (v8) {
        unsigned int v32 = @"selection";
      }
      else {
        unsigned int v32 = @"highlight";
      }
      uint64_t v33 = [v11 section];
      uint64_t v34 = -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData);
      *(_DWORD *)long long buf = 138413058;
      uint64_t v43 = v32;
      __int16 v44 = 2048;
      uint64_t v45 = v33;
      __int16 v46 = 2048;
      uint64_t v47 = v34;
      __int16 v48 = 2112;
      double v49 = self;
      BOOL v35 = "Attempted to modify the %@ of an item in an out-of-bounds section (%ld) when there are only %ld sections. Co"
            "llection view: %@.  This will become an assert in a future version.";
      unsigned int v36 = v31;
      uint32_t v37 = 42;
LABEL_49:
      _os_log_fault_impl(&dword_1853B0000, v36, OS_LOG_TYPE_FAULT, v35, buf, v37);
      goto LABEL_44;
    }
    uint64_t v13 = [v11 item];
    a5 = v13 < -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v11 section]);
    if (!a5 && v6)
    {
      _UIIsPrivateMainBundle();
      if (dyld_program_sdk_at_least())
      {
        double v15 = [MEMORY[0x1E4F28B00] currentHandler];
        if (v8) {
          BOOL v16 = @"selection";
        }
        else {
          BOOL v16 = @"highlight";
        }
        [v15 handleFailureInMethod:a2, self, @"UICollectionView.m", 8175, @"Attempted to modify the %@ of an out-of-bounds item (%ld) when there are only %ld items in section %ld. Collection view: %@.", v16, objc_msgSend(v11, "item"), -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, objc_msgSend(v11, "section")), objc_msgSend(v11, "section"), self object file lineNumber description];
LABEL_24:

        goto LABEL_17;
      }
      if (!os_variant_has_internal_diagnostics())
      {
        uint64_t v27 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258A88) + 8);
        if (!os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
          goto LABEL_17;
        }
        if (v8) {
          uint64_t v28 = @"selection";
        }
        else {
          uint64_t v28 = @"highlight";
        }
        uint64_t v21 = v27;
        uint64_t v29 = [v11 item];
        uint64_t v30 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v11 section]);
        *(_DWORD *)long long buf = 138413314;
        uint64_t v43 = v28;
        __int16 v44 = 2048;
        uint64_t v45 = v29;
        __int16 v46 = 2048;
        uint64_t v47 = v30;
        __int16 v48 = 2048;
        double v49 = (UICollectionView *)[v11 section];
        __int16 v50 = 2112;
        unsigned int v51 = self;
        long long v24 = "Attempted to modify the %@ of an out-of-bounds item (%ld) when there are only %ld items in section %ld. Co"
              "llection view: %@.  This will become an assert in a future version.";
        long long v25 = v21;
        uint32_t v26 = 52;
        goto LABEL_37;
      }
      uint64_t v31 = __UIFaultDebugAssertLog();
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_FAULT)) {
        goto LABEL_44;
      }
      if (v8) {
        long long v38 = @"selection";
      }
      else {
        long long v38 = @"highlight";
      }
      uint64_t v39 = [v11 item];
      uint64_t v40 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v11 section]);
      *(_DWORD *)long long buf = 138413314;
      uint64_t v43 = v38;
      __int16 v44 = 2048;
      uint64_t v45 = v39;
      __int16 v46 = 2048;
      uint64_t v47 = v40;
      __int16 v48 = 2048;
      double v49 = (UICollectionView *)[v11 section];
      __int16 v50 = 2112;
      unsigned int v51 = self;
      BOOL v35 = "Attempted to modify the %@ of an out-of-bounds item (%ld) when there are only %ld items in section %ld. Coll"
            "ection view: %@.  This will become an assert in a future version.";
      unsigned int v36 = v31;
      uint32_t v37 = 52;
      goto LABEL_49;
    }
  }
LABEL_18:

  return a5;
}

- (BOOL)allowsSelection
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 10) & 1;
}

- (BOOL)_allowsEffectiveSelection
{
  if ([(UICollectionView *)self _isEditing])
  {
    return [(UICollectionView *)self allowsSelectionDuringEditing];
  }
  else
  {
    return [(UICollectionView *)self allowsSelection];
  }
}

- (BOOL)_shouldSelectionFollowFocusForIndexPath:(id)a3 initiatedBySelection:(BOOL)a4
{
  return [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:a3 initiatedBySelection:a4 focusItemStateCandidate:0];
}

- (BOOL)_allowsEffectiveMultipleSelection
{
  if ([(UICollectionView *)self _isEditing])
  {
    return [(UICollectionView *)self allowsMultipleSelectionDuringEditing];
  }
  else
  {
    return [(UICollectionView *)self allowsMultipleSelection];
  }
}

- (void)setAllowsFocus:(BOOL)allowsFocus
{
  uint64_t v3 = 0x100000;
  if (allowsFocus) {
    uint64_t v3 = 0x200000;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFCFFFFFLL | v3;
}

- (UICollectionReusableView)dequeueReusableSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath
{
  BOOL v9 = elementKind;
  uint64_t v10 = identifier;
  if (![(NSString *)v9 length])
  {
    uint64_t v13 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v14 = *MEMORY[0x1E4F1C3C8];
    double v15 = NSStringFromSelector(a2);
    [v13 raise:v14, @"must pass a valid element kind to -[UICollectionView %@]", v15 format];
  }
  if (![(NSString *)v10 length])
  {
    BOOL v16 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v17 = *MEMORY[0x1E4F1C3C8];
    BOOL v18 = NSStringFromSelector(a2);
    [v16 raise:v17, @"must pass a valid reuse identifier to -[UICollectionView %@]", v18 format];
  }
  id v11 = [(UICollectionView *)self _dequeueReusableViewOfKind:v9 withIdentifier:v10 forIndexPath:indexPath viewCategory:1];

  return (UICollectionReusableView *)v11;
}

- (void)deleteSections:(NSIndexSet *)sections
{
  id v4 = [(UICollectionView *)self _sectionIndexesAfterShadowUpdatesForSectionIndexes:sections];
  [(UICollectionView *)self _updateSections:v4 updateAction:1];
}

- (id)_sectionIndexesAfterShadowUpdatesForSectionIndexes:(id)a3
{
  return [(UICollectionView *)self _sectionIndexesAfterShadowUpdatesForSectionIndexes:a3 allowingAppendingInserts:0];
}

- (void)setAllowsMultipleSelection:(BOOL)allowsMultipleSelection
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (((((*((void *)&self->_collectionViewFlags + 1) & 0x800) == 0) ^ allowsMultipleSelection) & 1) == 0)
  {
    -[_UICollectionViewSelectionController setAllowsMultipleSelection:]((uint64_t)self->_selectionController, allowsMultipleSelection);
    if (allowsMultipleSelection)
    {
      *((void *)&self->_collectionViewFlags + 1) |= 0x800uLL;
      [(UICollectionView *)self _updateMultiSelectControllerIfNeeded];
      [(UICollectionView *)self setAllowsSelection:1];
    }
    else
    {
      selectionController = self->_selectionController;
      if (selectionController
        && [(NSMutableSet *)selectionController->_selectedIndexPaths count] >= 2
        && ![(UICollectionView *)self _isEditing])
      {
        BOOL v6 = self->_selectionController;
        if (v6) {
          id v7 = (void *)[(NSMutableSet *)v6->_selectedIndexPaths copy];
        }
        else {
          id v7 = 0;
        }
        id v8 = (id)[v7 anyObject];
        long long v15 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        id v9 = v7;
        uint64_t v10 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v16;
          do
          {
            for (uint64_t i = 0; i != v11; ++i)
            {
              if (*(void *)v16 != v12) {
                objc_enumerationMutation(v9);
              }
              id v14 = *(id *)(*((void *)&v15 + 1) + 8 * i);
              if (v14 != v8) {
                -[UICollectionView _deselectItemAtIndexPath:animated:notifyDelegate:](self, "_deselectItemAtIndexPath:animated:notifyDelegate:", v14, 0, 0, (void)v15);
              }
            }
            uint64_t v11 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
          }
          while (v11);
        }
      }
      *((void *)&self->_collectionViewFlags + 1) &= ~0x800uLL;
      [(UICollectionView *)self _updateMultiSelectControllerIfNeeded];
    }
  }
}

- (void)_setAllowsMultipleSelectionDuringEditing:(BOOL)a3
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v3 & 0x4000) == 0) ^ a3) & 1) == 0)
  {
    if (a3)
    {
      int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
      *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v3 | 0x4000;
      *((_WORD *)&self->_collectionViewFlags + 8) = v5;
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
      [(UICollectionView *)self _updateMultiSelectControllerIfNeeded];
      [(UICollectionView *)self setAllowsSelectionDuringEditing:1];
    }
    else
    {
      selectionController = self->_selectionController;
      if (selectionController
        && [(NSMutableSet *)selectionController->_selectedIndexPaths count] >= 2
        && [(UICollectionView *)self _isEditing])
      {
        id v7 = self->_selectionController;
        if (v7) {
          id v8 = (void *)[(NSMutableSet *)v7->_selectedIndexPaths copy];
        }
        else {
          id v8 = 0;
        }
        id v9 = (id)[v8 anyObject];
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        id v10 = v8;
        uint64_t v11 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v11)
        {
          uint64_t v12 = v11;
          uint64_t v13 = *(void *)v17;
          do
          {
            for (uint64_t i = 0; i != v12; ++i)
            {
              if (*(void *)v17 != v13) {
                objc_enumerationMutation(v10);
              }
              id v15 = *(id *)(*((void *)&v16 + 1) + 8 * i);
              if (v15 != v9) {
                -[UICollectionView _deselectItemAtIndexPath:animated:notifyDelegate:](self, "_deselectItemAtIndexPath:animated:notifyDelegate:", v15, 0, 0, (void)v16);
              }
            }
            uint64_t v12 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
          }
          while (v12);
        }
      }
      *((void *)&self->_collectionViewFlags + 1) &= ~0x4000uLL;
      [(UICollectionView *)self _updateMultiSelectControllerIfNeeded];
    }
  }
}

- (void)_updateMultiSelectControllerIfNeeded
{
  [(_UICollectionViewMultiSelectController *)self->_multiSelectController setEnabled:(*((void *)&self->_collectionViewFlags + 1) & 0x4800) != 0];
}

- (void)setSpringLoaded:(BOOL)a3
{
}

- (id)_preparedCellForItemAtIndexPath:(id)a3 withLayoutAttributes:(id)a4 applyAttributes:(BOOL)a5 isFocused:(BOOL)a6 notify:(BOOL)a7
{
  BOOL v7 = a7;
  BOOL v8 = a6;
  BOOL v9 = a5;
  if (![(UICollectionView *)self _prefetchingAllowed]) {
    goto LABEL_19;
  }
  uint64_t v13 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:a3];
  id v14 = (id *)v13;
  if (v13)
  {
    id v15 = *(id *)(v13 + 16);
    if (!v15)
    {
      id v17 = 0;
      goto LABEL_17;
    }
    long long v16 = v15;
    if ((*((_WORD *)v15 + 144) & 1) == 0)
    {
      id v17 = v15;
LABEL_17:

      goto LABEL_18;
    }
    id v17 = v14[3];

    if (v17)
    {
      BOOL v18 = [(UICollectionView *)self _updatePrefetchItemIfNeeded:v14 forIndexPath:a3 withLayoutAttributes:a4 willDisplay:1];
      [(NSMutableDictionary *)self->_prefetchCacheItems removeObjectForKey:a3];
      if (!v18)
      {
        [(UICollectionView *)self _reusePrefetchedCell:v17];
        goto LABEL_17;
      }
      unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("CollectionView", &_preparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify____s_category);
      uint64_t v20 = *(id *)(CategoryCachedImpl + 8);
      if (os_signpost_id_make_with_pointer(*(os_log_t *)(CategoryCachedImpl + 8), self) - 1 <= 0xFFFFFFFFFFFFFFFDLL
        && os_signpost_enabled(v20))
      {
        *(_DWORD *)uint64_t v23 = 134218240;
        *(void *)&v23[4] = [a3 section];
        *(_WORD *)&v23[12] = 2048;
        *(void *)&v23[14] = [a3 item];
        _os_signpost_emit_unreliably_with_name_impl();
      }

      if ([v17 _isHiddenForReuse])
      {
        [v17 _setHiddenForReuse:0];
        if (!v8)
        {
LABEL_13:
          if (!v7)
          {
LABEL_15:

            goto LABEL_20;
          }
LABEL_14:
          -[UICollectionView _notifyWillDisplayCellIfNeeded:forIndexPath:](self, "_notifyWillDisplayCellIfNeeded:forIndexPath:", v17, a3, *(_OWORD *)v23, *(void *)&v23[16]);
          goto LABEL_15;
        }
      }
      else if (!v8)
      {
        goto LABEL_13;
      }
      uint64_t v22 = +[_UICollectionViewFocusedItemState stateWithReusableView:]((uint64_t)_UICollectionViewFocusedItemState, v17);
      [(UICollectionView *)self _setFocusedItemState:v22];

      if (!v7) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
LABEL_18:

LABEL_19:
  id v17 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:a3 withLayoutAttributes:a4 applyAttributes:v9 isFocused:v8 notify:v7];
LABEL_20:
  return v17;
}

- (BOOL)_updatePrefetchItemIfNeeded:(id)a3 forIndexPath:(id)a4 withLayoutAttributes:(id)a5 willDisplay:(BOOL)a6
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  id v10 = (id *)a3;
  uint64_t v11 = (UICollectionView *)a4;
  id v12 = a5;
  if (!v10)
  {
    id v13 = 0;
    BOOL v18 = 1;
    goto LABEL_30;
  }
  id v13 = v10[3];
  if (v13)
  {
    char v14 = *((unsigned char *)v10 + 8);
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258980);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      uint64_t v23 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        os_log_t log = v23;
        uint64_t v27 = [(UICollectionView *)v11 _ui_shortDescription];
        long long v24 = [v13 _layoutAttributes];
        long long v25 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v11);
        *(_DWORD *)long long buf = 134219010;
        uint64_t v33 = self;
        __int16 v34 = 2112;
        BOOL v35 = v10;
        __int16 v36 = 2112;
        uint32_t v37 = v27;
        __int16 v38 = 2112;
        uint64_t v39 = v24;
        __int16 v40 = 2112;
        uint64_t v41 = v25;
        _os_log_impl(&dword_1853B0000, log, OS_LOG_TYPE_ERROR, "[UICV %p] _updatePrefetchItemIfNeeded:%@ indexPath:%@ cellAttrs: %@ attrsFromLayout: %@", buf, 0x34u);
      }
    }
    if ((v14 & 7) != 0)
    {
      [v13 _setHiddenForReuse:0];
      if ((v14 & 4) != 0) {
        [(UICollectionView *)self _reconfigureCell:v13 forItemAtIndexPath:v11];
      }
    }
    if (a6 || (v14 & 2) != 0)
    {
      [(UICollectionView *)self _configureCachedCellForDisplay:v13 withIndexPath:v11 layoutAttributesToUpdate:0];
      if ((v14 & 1) == 0)
      {
LABEL_10:
        if ((v14 & 2) != 0) {
          goto LABEL_11;
        }
        goto LABEL_19;
      }
    }
    else if ((v14 & 1) == 0)
    {
      goto LABEL_10;
    }
    if (v12)
    {
      id v19 = v12;
    }
    else
    {
      -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v11);
      id v19 = (id)objc_claimAutoreleasedReturnValue();
      if (!v19)
      {
        int v17 = 0;
        if (a6) {
          goto LABEL_28;
        }
        goto LABEL_26;
      }
    }
    -[UIBackgroundConfiguration _setCustomView:]((uint64_t)v10, v19);
    v29[0] = MEMORY[0x1E4F143A8];
    v29[1] = 3221225472;
    v29[2] = __94__UICollectionView__updatePrefetchItemIfNeeded_forIndexPath_withLayoutAttributes_willDisplay___block_invoke;
    v29[3] = &unk_1E52DCB30;
    v29[4] = self;
    id v30 = v19;
    id v31 = v13;
    id v20 = v19;
    +[UIView performWithoutAnimation:v29];

    if ((v14 & 2) != 0)
    {
LABEL_11:
      id v16 = v10[2];
      if (v16)
      {
        [v13 _invalidatePreferredAttributes];
        [(UICollectionView *)self _checkForPreferredAttributesInView:v13 originalAttributes:v16];
        int v17 = 1;
      }
      else
      {
        if (os_variant_has_internal_diagnostics())
        {
          uint32_t v26 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)long long buf = 138412546;
            uint64_t v33 = v11;
            __int16 v34 = 2112;
            BOOL v35 = (id *)v13;
            _os_log_fault_impl(&dword_1853B0000, v26, OS_LOG_TYPE_FAULT, "UIKit internal inconsistency: prefetch items should never have nil attributes. Index path: %@; View: %@",
              buf,
              0x16u);
          }
        }
        else
        {
          uint64_t v21 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258988) + 8);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 138412546;
            uint64_t v33 = v11;
            __int16 v34 = 2112;
            BOOL v35 = (id *)v13;
            _os_log_impl(&dword_1853B0000, v21, OS_LOG_TYPE_ERROR, "UIKit internal inconsistency: prefetch items should never have nil attributes. Index path: %@; View: %@",
              buf,
              0x16u);
          }
        }
        int v17 = 0;
      }

      if (a6) {
        goto LABEL_28;
      }
      goto LABEL_26;
    }
LABEL_19:
    int v17 = 1;
    if (a6)
    {
LABEL_28:
      BOOL v18 = v17 != 0;
      goto LABEL_29;
    }
LABEL_26:
    if (([v13 _isHiddenForReuse] & 1) == 0) {
      [v13 _setHiddenForReuse:1];
    }
    goto LABEL_28;
  }
  BOOL v18 = 1;
LABEL_29:
  *((unsigned char *)v10 + 8) &= 0xF8u;
LABEL_30:

  return v18;
}

- (void)_configureCachedCellForDisplay:(id)a3 withIndexPath:(id)a4 layoutAttributesToUpdate:(id)a5
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_configureCachedCellForDisplay_withIndexPath_layoutAttributesToUpdate____s_category);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    id v10 = *(NSObject **)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = v10;
      id v12 = objc_msgSend(a4, "_ui_shortDescription");
      id v13 = [a3 _layoutAttributes];
      *(_DWORD *)long long buf = 134219010;
      id v16 = self;
      __int16 v17 = 2112;
      id v18 = a3;
      __int16 v19 = 2112;
      id v20 = v12;
      __int16 v21 = 2112;
      uint64_t v22 = v13;
      __int16 v23 = 2112;
      id v24 = a5;
      _os_log_impl(&dword_1853B0000, v11, OS_LOG_TYPE_ERROR, "[UICV %p] Configuring cached cell %@ with indexPath:%@ cellAttrs: %@ layoutAttrsToUpdate: %@", buf, 0x34u);
    }
  }
  if (a5)
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __90__UICollectionView__configureCachedCellForDisplay_withIndexPath_layoutAttributesToUpdate___block_invoke;
    v14[3] = &unk_1E52E51D0;
    v14[4] = self;
    v14[5] = a5;
    v14[6] = a3;
    +[UIView performWithoutAnimation:v14];
  }
  [(UICollectionView *)self _configureCellForDisplay:a3 indexPath:a4 cached:1];
}

- (void)setPrefetchingEnabled:(BOOL)prefetchingEnabled
{
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v4 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v4 & 0x4000000000000000) == 0) ^ prefetchingEnabled) & 1) == 0)
  {
    int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v6 = *(void *)p_collectionViewFlags;
    uint64_t v7 = 0x4000000000000000;
    if (!prefetchingEnabled) {
      uint64_t v7 = 0;
    }
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *(void *)p_uint64_t collectionViewFlags = v6;
    *((void *)&self->_collectionViewFlags + 1) = v4 & 0xBFFFFFFFFFFFFFFFLL | v7;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
    if (!prefetchingEnabled) {
      [(UICollectionView *)self _resetPrefetchState];
    }
  }
}

- (void)_setAllowsSelectionDuringEditing:(BOOL)a3
{
  uint64_t v3 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v3 & 0x1000) == 0) ^ a3) & 1) == 0)
  {
    if (a3)
    {
      int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                     + 18) << 16);
      *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v3 | 0x1000;
      *((_WORD *)&self->_collectionViewFlags + 8) = v5;
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
    }
    else
    {
      if ([(UICollectionView *)self _isEditing]) {
        [(UICollectionView *)self _deselectAllAnimated:0 notifyDelegate:0];
      }
      *((void *)&self->_collectionViewFlags + 1) &= ~0x1000uLL;
      [(UICollectionView *)self setAllowsMultipleSelectionDuringEditing:0];
    }
  }
}

- (void)setSelectionFollowsFocus:(BOOL)selectionFollowsFocus
{
  if (selectionFollowsFocus) {
    uint64_t v3 = 2;
  }
  else {
    uint64_t v3 = 1;
  }
  int v4 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if ((WORD1(*((void *)&self->_collectionViewFlags + 1)) & 3) != v3)
  {
    unint64_t v5 = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFCFFFFLL;
    *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v5 | (v3 << 16);
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v4);
    *((_WORD *)&self->_collectionViewFlags + 8) = v4 | HIWORD(v3);
    [(UICollectionView *)self _updateSelectionIsKey];
  }
}

void __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_3(void *a1)
{
  (*(void (**)(void))(a1[7] + 16))();
  uint64_t v2 = (void *)a1[4];
  if ((v2[330] & 0x100) != 0)
  {
    uint64_t v3 = [v2 _setupAnimationsForResizedViewsWithOldModel:a1[5]];
    uint64_t v4 = *(void *)(a1[6] + 8);
    unint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
}

uint64_t __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) _beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        if ([*(id *)(a1 + 32) _indexPathIsValid:v7])
        {
          BOOL v8 = [*(id *)(a1 + 32) _cellForItemAtIndexPath:v7];
          BOOL v9 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), v7);
          [*(id *)(a1 + 32) _recomputePreferredAttributesForInvalidatedView:v8 originalAttributes:v9];
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v4);
  }

  id v10 = *(void **)(a1 + 48);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_2;
  v12[3] = &unk_1E52E0A90;
  void v12[4] = *(void *)(a1 + 32);
  [v10 enumerateKeysAndObjectsUsingBlock:v12];
  return [*(id *)(a1 + 32) _endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
}

- (BOOL)_recomputePreferredAttributesForInvalidatedView:(id)a3 originalAttributes:(id)a4
{
  if (!a3) {
    return 0;
  }
  char v7 = [a3 _isHiddenForReuse];
  if (!a4 || (v7 & 1) != 0) {
    return 0;
  }
  [a3 _invalidatePreferredAttributes];
  return [(UICollectionView *)self _checkForPreferredAttributesInView:a3 originalAttributes:a4];
}

- (void)_endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate
{
  double v3 = *MEMORY[0x1E4F1DAD8];
  double v4 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  if ([(UICollectionViewLayout *)self->_layout _estimatesSizes])
  {
    uint64_t v5 = [(UICollectionViewLayout *)self->_layout _layoutAxis];
    if ((unint64_t)(v5 - 1) <= 1)
    {
      double v3 = _UISetPointValueForAxis(v5, v3, v4, -1.0);
      double v4 = v6;
    }
  }
  BOOL v7 = [(UIScrollView *)self _isAutomaticContentOffsetAdjustmentEnabled];
  [(UIScrollView *)self contentOffset];
  double v9 = v8;
  [(UIScrollView *)self _effectiveContentInset];
  if (v9 < -v10
    || ([(UIScrollView *)self contentOffset],
        double v12 = v11,
        [(UIScrollView *)self _effectiveContentInset],
        v12 < -v13))
  {
    [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:0];
  }
  -[UICollectionViewLayout _didPerformUpdateVisibleCellsPassWithLayoutOffset:](self->_layout, "_didPerformUpdateVisibleCellsPassWithLayoutOffset:", v3, v4);
  [(UIScrollView *)self _setAutomaticContentOffsetAdjustmentEnabled:v7];
}

- (void)_beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate
{
}

uint64_t __119__UICollectionView__endItemAnimationsWithInvalidationContext_tentativelyForReordering_animator_collectionViewAnimator___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (void)_setAllowsVisibleCellUpdatesDuringUpdateAnimations:(BOOL)a3
{
  uint64_t v3 = 0x200000000000000;
  if (!a3) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFDFFFFFFFFFFFFFFLL | v3;
}

- (void)setDirectionalLayoutMargins:(NSDirectionalEdgeInsets)a3
{
  double trailing = a3.trailing;
  bottouint64_t m = a3.bottom;
  double leading = a3.leading;
  double top = a3.top;
  [(UIView *)self _rawLayoutMargins];
  int v12 = *((_DWORD *)&self->super.super._viewFlags + 4);
  if ((v12 & 0x80000) != 0) {
    double v13 = v11;
  }
  else {
    double v13 = v9;
  }
  if ((*(void *)&v12 & 0x80000) == 0) {
    double v9 = v11;
  }
  if (leading != v13 || top != v8 || trailing != v9 || bottom != v10)
  {
    *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFBFFFFFFFFFFFFLL | ((unint64_t)((*((void *)&self->_collectionViewFlags + 1) & 0xC000000000000) != 0x8000000000000) << 50);
    v17.receiver = self;
    v17.super_class = (Class)UICollectionView;
    -[UIView setDirectionalLayoutMargins:](&v17, sel_setDirectionalLayoutMargins_, top, leading, bottom, trailing);
  }
}

- (void)_setShouldSkipForcedLayoutBeforeBatchUpdates:(BOOL)a3
{
  int v3 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xDFFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (a3) {
    __int16 v4 = 0x2000;
  }
  else {
    __int16 v4 = 0;
  }
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xDFFF | v4;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v3);
}

- (void)_setDelaysUserInitiatedItemSelection:(BOOL)a3
{
  int v3 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFDFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (a3) {
    __int16 v4 = 512;
  }
  else {
    __int16 v4 = 0;
  }
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFDFF | v4;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v3);
}

- (void)_setPreferredDragDestinationVisualStyle:(int64_t)a3
{
  dragAndDropController = self->_dragAndDropController;
  if (dragAndDropController) {
    dragAndDropController->_preferredDragDestinationVisualStyle = a3;
  }
}

- (UICollectionViewLayoutAttributes)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    uint64_t v5 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:indexPath];
    if (v5)
    {
      double v8 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v5);
      double v6 = (void *)[v8 copy];

      if (v6) {
        [v6 setIndexPath:indexPath];
      }
    }
    else
    {
      double v6 = 0;
    }
  }
  else
  {
    uint64_t v5 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, indexPath);
    double v6 = (void *)[v5 copy];
  }

  return (UICollectionViewLayoutAttributes *)v6;
}

- (void)_setShouldPrefetchCellsWhenPerformingReloadData:(BOOL)a3
{
  uint64_t v3 = 0x20000000000000;
  if (!a3) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFDFFFFFFFFFFFFFLL | v3;
}

void __99__UICollectionView__createAndAppendViewAnimationsForDeletesInCurrentUpdate_disappearingAnimations___block_invoke(id *a1, uint64_t a2)
{
  -[UICollectionViewData indexPathForItemAtGlobalIndex:](*(unsigned char **)(*((void *)a1[4] + 274) + 16), a2);
  id v13 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](*((id ***)a1[4] + 362), (uint64_t)v13);
  if (v3)
  {
    uint64_t v4 = [*((id *)a1[4] + 258) finalLayoutAttributesForDisappearingItemAtIndexPath:v13];
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      if (dyld_program_sdk_at_least())
      {
        uint64_t v6 = [v5 zIndex];
        BOOL v7 = [v3 _layoutAttributes];
        uint64_t v8 = [v7 zIndex];

        if (v6 != v8) {
          objc_msgSend(a1[4], "_addControlledSubview:atZIndex:forced:", v3, objc_msgSend(v5, "zIndex"), 1);
        }
      }
    }
    else
    {
      double v9 = [v3 _layoutAttributes];
      uint64_t v5 = (void *)[v9 copy];

      [v5 setAlpha:0.0];
    }
    double v10 = [*((id *)a1[4] + 258) _animationForReusableView:v3 toLayoutAttributes:v5 type:2];
    double v11 = [[UICollectionViewAnimation alloc] initWithView:v3 viewType:1 finalLayoutAttributes:v5 startFraction:1 endFraction:1 animateFromCurrentPostion:v10 deleteAfterAnimation:0.0 customAnimations:1.0];
    [a1[5] addObject:v11];
    int v12 = +[_UICollectionViewItemKey collectionItemKeyForCellWithIndexPath:]((uint64_t)_UICollectionViewItemKey, v13);
    [a1[6] setObject:v11 forKey:v12];
  }
}

- (void)_setShouldBecomeFocusedOnSelection:(BOOL)a3
{
  uint64_t v3 = 0x40000;
  if (a3) {
    uint64_t v3 = 0x80000;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFF3FFFFLL | v3;
}

- (void)setPrefetchDataSource:(id)prefetchDataSource
{
  id v4 = prefetchDataSource;
  if (!v4)
  {
LABEL_7:
    uint64_t v6 = 0;
    goto LABEL_8;
  }
  char v5 = dyld_program_sdk_at_least();
  uint64_t v6 = v4;
  if ((v5 & 1) == 0)
  {
    unsigned __int8 v7 = objc_msgSend(v4, sel_allowsWeakReference);
    uint64_t v6 = v4;
    if ((v7 & 1) == 0)
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __42__UICollectionView_setPrefetchDataSource___block_invoke;
      block[3] = &unk_1E52D9F98;
      id v28 = v4;
      uint64_t v29 = self;
      if (setPrefetchDataSource__once != -1) {
        dispatch_once(&setPrefetchDataSource__once, block);
      }

      goto LABEL_7;
    }
  }
LABEL_8:
  id v8 = v6;

  id WeakRetained = objc_loadWeakRetained((id *)&self->_prefetchDataSource);
  double v10 = WeakRetained;
  if (WeakRetained != v8 || !v8 && (*((void *)&self->_collectionViewFlags + 1) & 0x40) != 0)
  {
    if (WeakRetained) {
      objc_setAssociatedObject(WeakRetained, (char *)&self->super.super.super.super.isa + 2, 0, (void *)1);
    }
    objc_storeWeak((id *)&self->_prefetchDataSource, v8);
    id v11 = v8;
    id v12 = [(UICollectionView *)self prefetchDataSource];
    if (v11 == v12)
    {
      unsigned int v14 = [(UICollectionView *)self allowsWeakReference];

      unint64_t v13 = (unint64_t)(v11 != 0) << 6;
      if (v11 && v14)
      {
        objc_initWeak(&location, self);
        long long v15 = [_UIWeakHelper alloc];
        v24[0] = MEMORY[0x1E4F143A8];
        v24[1] = 3221225472;
        v24[2] = __42__UICollectionView_setPrefetchDataSource___block_invoke_268;
        v24[3] = &unk_1E52DC308;
        objc_copyWeak(&v25, &location);
        long long v16 = [(_UIWeakHelper *)v15 initWithDeallocationBlock:v24];
        objc_setAssociatedObject(v11, (char *)&self->super.super.super.super.isa + 2, v16, (void *)1);

        objc_destroyWeak(&v25);
        objc_destroyWeak(&location);
        unint64_t v13 = 64;
      }
    }
    else
    {

      unint64_t v13 = (unint64_t)(v11 != 0) << 6;
    }

    p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
    int v18 = *((unsigned __int16 *)p_collectionViewFlags + 8) | (*((unsigned __int8 *)p_collectionViewFlags + 18) << 16);
    unint64_t v19 = *((void *)p_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFBFLL | v13;
    *(void *)p_uint64_t collectionViewFlags = *(void *)p_collectionViewFlags;
    *((void *)p_collectionViewFlags + 1) = v19;
    *((_WORD *)p_collectionViewFlags + 8) = v18;
    *((unsigned char *)p_collectionViewFlags + 18) = BYTE2(v18);
    char v20 = objc_opt_respondsToSelector();
    uint64_t v21 = 16;
    if ((v20 & 1) == 0) {
      uint64_t v21 = 0;
    }
    *((void *)p_collectionViewFlags + 1) = *((void *)p_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFEFLL | v21;
    char v22 = objc_opt_respondsToSelector();
    uint64_t v23 = 32;
    if ((v22 & 1) == 0) {
      uint64_t v23 = 0;
    }
    *((void *)p_collectionViewFlags + 1) = *((void *)p_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFFDFLL | v23;
  }
}

- (id)prefetchDataSource
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_prefetchDataSource);
  return WeakRetained;
}

- (void)_setShouldResetInitialLayoutOnDataSourceChange:(BOOL)a3
{
  int v3 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFBFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (a3) {
    __int16 v4 = 1024;
  }
  else {
    __int16 v4 = 0;
  }
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xFBFF | v4;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v3);
}

- (void)_setShouldPersistSelectionOnReloadDataWhenPossible:(BOOL)a3
{
  int v3 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xF7FF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (a3) {
    __int16 v4 = 2048;
  }
  else {
    __int16 v4 = 0;
  }
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xF7FF | v4;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v3);
}

- (void)setBackgroundView:(UIView *)backgroundView
{
  char v5 = backgroundView;
  p_backgroundView = &self->_backgroundView;
  unsigned __int8 v7 = self->_backgroundView;
  if (v7 != v5)
  {
    long long v15 = v5;
    [(UIView *)v7 removeFromSuperview];
    objc_storeStrong((id *)&self->_backgroundView, backgroundView);
    [(UIView *)self bounds];
    -[UIView setFrame:](*p_backgroundView, "setFrame:");
    id v8 = *p_backgroundView;
    double v9 = self->_layout;
    double v10 = v8;
    id v11 = v10;
    if (v9) {
      BOOL v12 = v10 == 0;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      goto LABEL_11;
    }
    uint64_t v13 = [(UIView *)v10 effectiveUserInterfaceLayoutDirection];
    if (v13 == [(UICollectionViewLayout *)v9 developmentLayoutDirection])
    {
      if (![(UIView *)v11 _flipsHorizontalAxis])
      {
LABEL_11:

        [(UIScrollView *)self _addContentSubview:*p_backgroundView atBack:1];
        char v5 = v15;
        goto LABEL_12;
      }
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = [(UICollectionViewLayout *)v9 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [(UIView *)v11 _setFlipsHorizontalAxis:v14];
    goto LABEL_11;
  }
LABEL_12:
}

void __45__UICollectionView__indexPathForView_ofType___block_invoke_2(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  if (a3) {
    id v8 = *(void **)(a3 + 24);
  }
  else {
    id v8 = 0;
  }
  id v9 = v8;
  id v10 = *(id *)(a1 + 32);

  if (v9 == v10)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

- (void)setDragSourceDelegate:(id)a3
{
  id obj = a3;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragSourceDelegate);

  char v5 = obj;
  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_dragSourceDelegate, obj);
    -[_UICollectionViewDragAndDropController didUpdateDragDelegate]((id *)&self->_dragAndDropController->super.super.isa);
    char v5 = obj;
  }
}

- (void)setDragDestinationDelegate:(id)a3
{
  id obj = a3;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDestinationDelegate);

  char v5 = obj;
  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_dragDestinationDelegate, obj);
    -[_UICollectionViewDragAndDropController didUpdateDropDelegate]((id *)&self->_dragAndDropController->super.super.isa);
    char v5 = obj;
  }
}

- (BOOL)canBecomeFirstResponder
{
  uint64_t v3 = [(UIView *)self window];
  if (v3)
  {
    __int16 v4 = (void *)v3;
    char v5 = [(UIView *)self window];
    uint64_t v6 = [v5 screen];
    uint64_t v7 = [v6 _userInterfaceIdiom];

    if (v7 == 3) {
      return 1;
    }
  }
  v9.receiver = self;
  v9.super_class = (Class)UICollectionView;
  return [(UIResponder *)&v9 canBecomeFirstResponder];
}

- (void)setSemanticContentAttribute:(int64_t)a3
{
  UISemanticContentAttribute v5 = [(UIView *)self semanticContentAttribute];
  v20.receiver = self;
  v20.super_class = (Class)UICollectionView;
  [(UIView *)&v20 setSemanticContentAttribute:a3];
  if (v5 != a3)
  {
    subviewManager = self->_subviewManager;
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    v19[2] = __48__UICollectionView_setSemanticContentAttribute___block_invoke;
    v19[3] = &__block_descriptor_40_e70_v48__0Q8__NSIndexPath_16__NSString_24__UICollectionReusableView_32_B40l;
    v19[4] = a3;
    if (subviewManager) {
      -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v19);
    }
    uint64_t v7 = self->_layout;
    id v8 = self;
    objc_super v9 = v8;
    if (v7)
    {
      uint64_t v10 = [(UIView *)v8 effectiveUserInterfaceLayoutDirection];
      if (v10 == [(UICollectionViewLayout *)v7 developmentLayoutDirection])
      {
        if (![(UIView *)v9 _flipsHorizontalAxis]) {
          goto LABEL_10;
        }
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = [(UICollectionViewLayout *)v7 _wantsRightToLeftHorizontalMirroringIfNeeded];
      }
      [(UIScrollView *)v9 _setFlipsHorizontalAxis:v11];
    }
LABEL_10:

    backgroundView = v9->_backgroundView;
    uint64_t v13 = self->_layout;
    uint64_t v14 = backgroundView;
    long long v15 = v14;
    if (v13) {
      BOOL v16 = v14 == 0;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      goto LABEL_19;
    }
    uint64_t v17 = [(UIView *)v14 effectiveUserInterfaceLayoutDirection];
    if (v17 == [(UICollectionViewLayout *)v13 developmentLayoutDirection])
    {
      if (![(UIView *)v15 _flipsHorizontalAxis])
      {
LABEL_19:

        [(UICollectionView *)v9 reloadData];
        return;
      }
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = [(UICollectionViewLayout *)v13 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [(UIView *)v15 _setFlipsHorizontalAxis:v18];
    goto LABEL_19;
  }
}

- (void)setSelfSizingInvalidation:(UICollectionViewSelfSizingInvalidation)selfSizingInvalidation
{
  unint64_t v3 = *((unsigned __int16 *)&self->_collectionViewFlags + 8);
  char v4 = *((unsigned char *)&self->_collectionViewFlags + 18);
  *((_WORD *)&self->_collectionViewFlags + 8) = v3 & 0xFFE7 | (8 * (selfSizingInvalidation & 3));
  *((unsigned char *)&self->_collectionViewFlags + 18) = v4;
  if (((v3 >> 3) & 3) != selfSizingInvalidation)
  {
    if ((selfSizingInvalidation & 3) != 0)
    {
      LOBYTE(v3) = v3 & 0xE7 | (8 * (selfSizingInvalidation & 3));
    }
    else
    {
      [(UICollectionView *)self _clearNeedsRecomputePreferredAttributesForInvalidatedElements];
      LOWORD(v3) = *((_WORD *)&self->_collectionViewFlags + 8);
    }
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 3221225472;
    v6[2] = __46__UICollectionView_setSelfSizingInvalidation___block_invoke;
    v6[3] = &__block_descriptor_33_e34_v16__0__UICollectionReusableView_8l;
    BOOL v7 = (v3 & 0x18) == 16;
    [(UICollectionView *)self _applyBlockToAllReusableViews:v6];
  }
}

- (void)_applyBlockToAllReusableViews:(id)a3
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  char v4 = (void (**)(id, void))a3;
  UISemanticContentAttribute v5 = (void *)[objc_alloc(MEMORY[0x1E4F28D30]) initWithOptions:512 capacity:10];
  subviewManager = self->_subviewManager;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  v29[2] = __50__UICollectionView__applyBlockToAllReusableViews___block_invoke;
  v29[3] = &unk_1E52E5F30;
  id v7 = v5;
  id v30 = v7;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v29);
  }
  prefetchCacheItems = self->_prefetchCacheItems;
  v27[0] = MEMORY[0x1E4F143A8];
  v27[1] = 3221225472;
  v27[2] = __50__UICollectionView__applyBlockToAllReusableViews___block_invoke_2;
  v27[3] = &unk_1E52E5298;
  id v9 = v7;
  id v28 = v9;
  [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v27];
  if (self->_firstResponderView) {
    objc_msgSend(v9, "addObject:");
  }
  focusedItemState = self->_focusedItemState;
  if (focusedItemState) {
    focusedItemState = (_UICollectionViewFocusedItemState *)focusedItemState->_reusableView;
  }
  uint64_t v11 = focusedItemState;

  if (v11)
  {
    BOOL v12 = self->_focusedItemState;
    if (v12) {
      BOOL v12 = (_UICollectionViewFocusedItemState *)v12->_reusableView;
    }
    uint64_t v13 = v12;
    [v9 addObject:v13];
  }
  uint64_t v14 = self->_subviewManager;
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __50__UICollectionView__applyBlockToAllReusableViews___block_invoke_3;
  v25[3] = &unk_1E52E5538;
  id v15 = v9;
  id v26 = v15;
  -[_UICollectionViewSubviewManager enumerateAllViewsInReuseQueueWithEnumerator:]((uint64_t)v14, (uint64_t)v25);
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v16 = v15;
  uint64_t v17 = [v16 countByEnumeratingWithState:&v21 objects:v31 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)v22 != v19) {
          objc_enumerationMutation(v16);
        }
        v4[2](v4, *(void *)(*((void *)&v21 + 1) + 8 * i));
      }
      uint64_t v18 = [v16 countByEnumeratingWithState:&v21 objects:v31 count:16];
    }
    while (v18);
  }
}

- (void)setEditing:(BOOL)editing
{
  BOOL v3 = editing;
  if ([(UICollectionView *)self _isEditing] != editing)
  {
    uint64_t v5 = 0x400000000000;
    if (!v3) {
      uint64_t v5 = 0;
    }
    *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFBFFFFFFFFFFFLL | v5;
    if (!dyld_program_sdk_at_least()
      || !v3
      || (~*((_DWORD *)&self->_collectionViewFlags + 2) & 0x4800) != 0
      || ([(UICollectionView *)self _indexPathsForSelectedItems],
          uint64_t v6 = objc_claimAutoreleasedReturnValue(),
          unint64_t v7 = [v6 count],
          v6,
          v7 <= 1))
    {
      [(UICollectionView *)self _deselectAllAnimated:0 notifyDelegate:0];
    }
    if (!v3) {
      [(_UICollectionViewMultiSelectController *)self->_multiSelectController clearSelectionState];
    }
    id v8 = [(UIView *)self traitCollection];
    id v9 = _UITableConstantsForTraitCollection(v8);
    [v9 defaultEditAndUpdateAnimationDuration];
    double v11 = v10;

    int v12 = dyld_program_sdk_at_least();
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __31__UICollectionView_setEditing___block_invoke;
    v14[3] = &unk_1E52D9FC0;
    if (v12) {
      uint64_t v13 = 6;
    }
    else {
      uint64_t v13 = 4;
    }
    v14[4] = self;
    BOOL v15 = v3;
    +[UIView animateWithDuration:v13 delay:v14 options:0 animations:v11 completion:0.0];
  }
}

- (BOOL)__isKindOfUICollectionView
{
  return 1;
}

- (UICollectionView)initWithFrame:(CGRect)a3
{
  return -[UICollectionView initWithFrame:collectionViewLayout:](self, "initWithFrame:collectionViewLayout:", 0, a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
}

- (UICollectionView)initWithCoder:(NSCoder *)coder
{
  char v4 = coder;
  v28.receiver = self;
  v28.super_class = (Class)UICollectionView;
  uint64_t v5 = [(UIScrollView *)&v28 initWithCoder:v4];
  if (v5)
  {
    uint64_t v6 = [(NSCoder *)v4 decodeObjectForKey:@"UICollectionLayout"];
    layout = v5->_layout;
    v5->_layout = (UICollectionViewLayout *)v6;

    uint64_t v8 = [(NSCoder *)v4 decodeObjectForKey:@"UIBackgroundView"];
    backgroundView = v5->_backgroundView;
    v5->_backgroundView = (UIView *)v8;

    if ([(NSCoder *)v4 containsValueForKey:@"UIAllowsSelection"]) {
      char v10 = [(NSCoder *)v4 decodeBoolForKey:@"UIAllowsSelection"];
    }
    else {
      char v10 = 1;
    }
    *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFFBFFLL | ((unint64_t)(v10 & 1) << 10);
    BOOL v11 = [(NSCoder *)v4 containsValueForKey:@"UIAllowsMultipleSelection"];
    if (v11) {
      LOBYTE(v11) = [(NSCoder *)v4 decodeBoolForKey:@"UIAllowsMultipleSelection"];
    }
    *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFF7FFLL | ((unint64_t)v11 << 11);
    if ([(NSCoder *)v4 containsValueForKey:@"UIAllowsSelectionDuringEditing"]) {
      char v12 = [(NSCoder *)v4 decodeBoolForKey:@"UIAllowsSelectionDuringEditing"];
    }
    else {
      char v12 = 1;
    }
    *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFEFFFLL | ((unint64_t)(v12 & 1) << 12);
    BOOL v13 = [(NSCoder *)v4 containsValueForKey:@"UIAllowsMultipleSelectionDuringEditing"];
    if (v13) {
      LOBYTE(v13) = [(NSCoder *)v4 decodeBoolForKey:@"UIAllowsMultipleSelectionDuringEditing"];
    }
    *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFBFFFLL | ((unint64_t)v13 << 14);
    if ([(NSCoder *)v4 containsValueForKey:@"UIAllowsUserInitiatedMultipleSelection"]) {
      char v14 = [(NSCoder *)v4 decodeBoolForKey:@"UIAllowsUserInitiatedMultipleSelection"];
    }
    else {
      char v14 = 1;
    }
    *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xFFFFFFFFFFFFDFFFLL | ((unint64_t)(v14 & 1) << 13);
    BOOL v15 = [(NSCoder *)v4 decodeObjectForKey:@"UICollectionViewCellPrototypeNibExternalObjects"];
    uint64_t v16 = mutableDictionaryByTransformingLeafDictionariesToWeakValued(v15);
    cellNibExternalObjectsTables = v5->_cellNibExternalObjectsTables;
    v5->_cellNibExternalObjectsTables = (NSMutableDictionary *)v16;

    uint64_t v18 = [(NSCoder *)v4 decodeObjectForKey:@"UICollectionViewSupplementaryViewPrototypeNibExternalObjects"];
    uint64_t v19 = mutableDictionaryByTransformingLeafDictionariesToWeakValued(v18);
    supplementaryViewNibExternalObjectsTables = v5->_supplementaryViewNibExternalObjectsTables;
    v5->_supplementaryViewNibExternalObjectsTables = (NSMutableDictionary *)v19;

    uint64_t v21 = [(NSCoder *)v4 decodeObjectForKey:@"UICollectionViewCellNibDict"];
    cellNibDict = v5->_cellNibDict;
    v5->_cellNibDict = (NSMutableDictionary *)v21;

    uint64_t v23 = [(NSCoder *)v4 decodeObjectForKey:@"UICollectionViewSupplementaryViewNibDict"];
    supplementaryViewNibDict = v5->_supplementaryViewNibDict;
    v5->_supplementaryViewNibDict = (NSMutableDictionary *)v23;

    UICollectionViewCommonSetup(v5);
    if ([(NSCoder *)v4 containsValueForKey:@"UICollectionViewPrefetchingEnabled"])
    {
      BOOL v25 = [(NSCoder *)v4 decodeBoolForKey:@"UICollectionViewPrefetchingEnabled"];
      uint64_t v26 = 0x4000000000000000;
      if (!v25) {
        uint64_t v26 = 0;
      }
      *((void *)&v5->_collectionViewFlags + 1) = *((void *)&v5->_collectionViewFlags + 1) & 0xBFFFFFFFFFFFFFFFLL | v26;
    }
    if ([(NSCoder *)v4 containsValueForKey:@"UISpringLoaded"]) {
      [(UICollectionView *)v5 setSpringLoaded:[(NSCoder *)v4 decodeBoolForKey:@"UISpringLoaded"]];
    }
  }

  return v5;
}

- (void)encodeWithCoder:(id)a3
{
  id v4 = a3;
  v8.receiver = self;
  v8.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v8 encodeWithCoder:v4];
  layout = self->_layout;
  if (layout) {
    [v4 encodeObject:layout forKey:@"UICollectionLayout"];
  }
  backgroundView = self->_backgroundView;
  if (backgroundView) {
    [v4 encodeObject:backgroundView forKey:@"UIBackgroundView"];
  }
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v7 & 0x400) != 0)
  {
    if ((v7 & 0x800) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    [v4 encodeBool:0 forKey:@"UIAllowsSelection"];
    uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
    if ((v7 & 0x800) == 0)
    {
LABEL_7:
      if ((v7 & 0x1000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
  }
  [v4 encodeBool:1 forKey:@"UIAllowsMultipleSelection"];
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v7 & 0x1000) == 0)
  {
LABEL_8:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  [v4 encodeBool:1 forKey:@"UIAllowsSelectionDuringEditing"];
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v7 & 0x4000) == 0)
  {
LABEL_9:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_25:
  [v4 encodeBool:1 forKey:@"UIAllowsMultipleSelectionDuringEditing"];
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x2000) != 0) {
LABEL_10:
  }
    [v4 encodeBool:1 forKey:@"UIAllowsUserInitiatedMultipleSelection"];
LABEL_11:
  if ([(NSMutableDictionary *)self->_cellNibExternalObjectsTables count]) {
    [v4 encodeObject:self->_cellNibExternalObjectsTables forKey:@"UICollectionViewCellPrototypeNibExternalObjects"];
  }
  if ([(NSMutableDictionary *)self->_supplementaryViewNibExternalObjectsTables count]) {
    [v4 encodeObject:self->_supplementaryViewNibExternalObjectsTables forKey:@"UICollectionViewSupplementaryViewPrototypeNibExternalObjects"];
  }
  if ([(NSMutableDictionary *)self->_cellNibDict count]) {
    [v4 encodeObject:self->_cellNibDict forKey:@"UICollectionViewCellNibDict"];
  }
  if ([(NSMutableDictionary *)self->_supplementaryViewNibDict count]) {
    [v4 encodeObject:self->_supplementaryViewNibDict forKey:@"UICollectionViewSupplementaryViewNibDict"];
  }
  objc_msgSend(v4, "encodeBool:forKey:", -[UICollectionView isPrefetchingEnabled](self, "isPrefetchingEnabled"), @"UICollectionViewPrefetchingEnabled");
  if ([(UICollectionView *)self isSpringLoaded]) {
    [v4 encodeBool:1 forKey:@"UISpringLoaded"];
  }
}

- (void)dealloc
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  id v4 = WeakRetained;
  if (WeakRetained) {
    objc_setAssociatedObject(WeakRetained, (char *)&self->super.super.super.super.isa + 2, 0, (void *)1);
  }

  id v5 = objc_loadWeakRetained((id *)&self->_containerScrollView);
  if (v5) {
    -[UIView _removeGeometryChangeObserver:](self, v5);
  }
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v6 = [(UIView *)self subviews];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v19 objects:v25 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v20;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v20 != v9) {
          objc_enumerationMutation(v6);
        }
        BOOL v11 = *(void **)(*((void *)&v19 + 1) + 8 * v10);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          [v11 _setCollectionView:0];
        }
        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v19 objects:v25 count:16];
    }
    while (v8);
  }

  char v12 = [(UICollectionViewLayout *)self->_layout collectionView];

  if (v12 == self) {
    [(UICollectionViewLayout *)self->_layout _setCollectionView:0];
  }
  -[_UICollectionViewSubviewRouter setContainer:]((uint64_t)self->_subviewRouter, 0);
  subviewManager = self->_subviewManager;
  if (subviewManager) {
    subviewManager->_collectionView = 0;
  }
  id updateCompletionHandler = self->_updateCompletionHandler;
  if (updateCompletionHandler)
  {
    self->_id updateCompletionHandler = 0;

    BOOL v15 = *(NSObject **)(__UILogGetCategoryCachedImpl("UICollectionView", &dealloc___s_category_2) + 8);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      long long v24 = self;
      _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_ERROR, "UICollectionView (%@) is being deallocated while an update is in flight (animations have not completed) and an unexpected result may occur.", buf, 0xCu);
    }
  }
  uint64_t v16 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v16 removeObserver:self name:@"UIApplicationDidReceiveMemoryWarningNotification" object:0];

  uint64_t v17 = +[_UIHDRUsageCoordinator sharedInstance]();
  -[_UIHDRUsageCoordinator unregisterForDefaultDynamicRangeChanges:]((uint64_t)v17, self);

  v18.receiver = self;
  v18.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v18 dealloc];
}

- (void)_layoutDirectionTraitDidChange
{
  uint64_t v6 = self->_layout;
  BOOL v3 = self;
  if (v3 && v6)
  {
    uint64_t v4 = [(UIView *)v3 effectiveUserInterfaceLayoutDirection];
    if (v4 == [(UICollectionViewLayout *)v6 developmentLayoutDirection])
    {
      if (![(UIView *)v3 _flipsHorizontalAxis]) {
        goto LABEL_8;
      }
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = [(UICollectionViewLayout *)v6 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [(UIScrollView *)v3 _setFlipsHorizontalAxis:v5];
  }
LABEL_8:
}

- (void)_invalidateLayoutForPreferredContentSizeCategoryTraitDidChange
{
}

- (void)_traitsConsumedByLayoutInvalidated
{
  if (dyld_program_sdk_at_least()
    && ((_UIInternalPreferenceUsesDefault(&_UIInternalPreference_CollectionViewAutomaticallyInvalidatesForTraitChanges, @"CollectionViewAutomaticallyInvalidatesForTraitChanges", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool) & 1) != 0|| byte_1E8FD504C))
  {
    id v3 = objc_alloc_init((Class)[(id)objc_opt_class() invalidationContextClass]);
    [v3 _setIntent:14];
    [(UICollectionViewLayout *)self->_layout invalidateLayoutWithContext:v3];
  }
}

- (BOOL)canBeEdited
{
  if (dyld_program_sdk_at_least()) {
    return 1;
  }
  uint64_t v4 = [(UICollectionView *)self collectionViewLayout];
  char v5 = [v4 canBeEdited];

  return v5;
}

void __31__UICollectionView_setEditing___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionViewLayout];
  int v3 = [v2 canBeEdited];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) collectionViewLayout];
    [v4 setEditing:*(unsigned __int8 *)(a1 + 40)];
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 2896);
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 3221225472;
  char v14 = __31__UICollectionView_setEditing___block_invoke_2;
  BOOL v15 = &unk_1E52E4EE0;
  uint64_t v16 = v5;
  LOBYTE(v17) = *(unsigned char *)(a1 + 40);
  if (v6)
  {
    -[_UICollectionViewSubviewCollection enumerateAllViewsWithEnumerator:](*(void *)(v6 + 8), (uint64_t)&v12);
    uint64_t v5 = *(void *)(a1 + 32);
  }
  uint64_t v7 = objc_msgSend(*(id *)(v5 + 2064), "_invalidationContextForRefreshingVisibleElementAttributes", v12, v13, v14, v15, v16, v17);
  uint64_t v8 = [*(id *)(a1 + 32) collectionViewLayout];
  [v8 invalidateLayoutWithContext:v7];

  uint64_t v9 = [*(id *)(a1 + 32) window];
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    BOOL v11 = +[UIView areAnimationsEnabled];

    if (v11) {
      [*(id *)(a1 + 32) layoutIfNeeded];
    }
  }
}

uint64_t __31__UICollectionView_setEditing___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    a3 = 0;
  }
  return [*(id *)(a1 + 32) _updateEditing:*(unsigned __int8 *)(a1 + 40) forView:a5 atIndexPath:a3 elementCategory:a2];
}

- (BOOL)_canEditItemAtIndexPath:(id)a3
{
  id v4 = a3;
  if (!v4)
  {
    BOOL v5 = 0;
    goto LABEL_9;
  }
  if ((*(void *)&self->_collectionViewFlags & 0x40000000) != 0)
  {
    uint64_t v6 = [(UICollectionView *)self _delegateProxy];
    char v7 = [v6 collectionView:self canEditItemAtIndexPath:v4];
LABEL_8:
    BOOL v5 = v7;

    goto LABEL_9;
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 8) != 0)
  {
    uint64_t v6 = [(UICollectionView *)self _dataSourceProxy];
    char v7 = [v6 _collectionView:self canEditItemAtIndexPath:v4];
    goto LABEL_8;
  }
  BOOL v5 = 1;
LABEL_9:

  return v5;
}

- (id)_objectInDictionary:(id)a3 forKind:(id)a4 indexPath:(id)a5
{
  uint64_t v6 = [a3 objectForKeyedSubscript:a4];
  char v7 = [v6 objectForKeyedSubscript:a5];

  return v7;
}

- (void)_setObject:(id)a3 inDictionary:(id)a4 forKind:(id)a5 indexPath:(id)a6
{
  id v14 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = [v9 objectForKeyedSubscript:v10];
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v13 = v14;
    if (!v14) {
      goto LABEL_7;
    }
LABEL_6:
    [v12 setObject:v13 forKeyedSubscript:a6];
    goto LABEL_8;
  }
  uint64_t v12 = [MEMORY[0x1E4F1CA60] dictionary];
  if (v14)
  {
    [v9 setObject:v12 forKeyedSubscript:v10];
    id v13 = v14;
    goto LABEL_6;
  }
LABEL_7:
  [v12 removeObjectForKey:a6];
LABEL_8:
}

- (void)_addEntriesFromDictionary:(id)a3 inDictionary:(id)a4 andSet:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __66__UICollectionView__addEntriesFromDictionary_inDictionary_andSet___block_invoke;
  v12[3] = &unk_1E52E4F30;
  void v12[4] = self;
  id v13 = v8;
  id v14 = v9;
  id v10 = v9;
  id v11 = v8;
  [a3 enumerateKeysAndObjectsUsingBlock:v12];
}

void __66__UICollectionView__addEntriesFromDictionary_inDictionary_andSet___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __66__UICollectionView__addEntriesFromDictionary_inDictionary_andSet___block_invoke_2;
  v7[3] = &unk_1E52E4F08;
  uint64_t v6 = *(void **)(a1 + 40);
  v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  uint64_t v10 = a2;
  id v9 = *(id *)(a1 + 48);
  [a3 enumerateKeysAndObjectsUsingBlock:v7];
}

uint64_t __66__UICollectionView__addEntriesFromDictionary_inDictionary_andSet___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(a1 + 32) _setObject:a3 inDictionary:*(void *)(a1 + 40) forKind:*(void *)(a1 + 56) indexPath:a2];
  BOOL v5 = *(void **)(a1 + 48);
  return [v5 addObject:a3];
}

- (void)_addEntriesFromDictionary:(id)a3 inDictionary:(id)a4
{
}

- (id)_keysForObject:(id)a3 inDictionary:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000;
  uint64_t v16 = __Block_byref_object_copy__41;
  uint64_t v17 = __Block_byref_object_dispose__41;
  id v18 = 0;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __48__UICollectionView__keysForObject_inDictionary___block_invoke;
  v10[3] = &unk_1E52E4F80;
  id v7 = v5;
  id v11 = v7;
  uint64_t v12 = &v13;
  [v6 enumerateKeysAndObjectsUsingBlock:v10];
  id v8 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v8;
}

void __48__UICollectionView__keysForObject_inDictionary___block_invoke(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __48__UICollectionView__keysForObject_inDictionary___block_invoke_2;
  v10[3] = &unk_1E52E4F58;
  id v8 = *(id *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  id v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = a2;
  uint64_t v14 = a4;
  [a3 enumerateKeysAndObjectsUsingBlock:v10];
}

void __48__UICollectionView__keysForObject_inDictionary___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)(a1 + 32) == a3)
  {
    uint64_t v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C978]), "initWithObjects:", *(void *)(a1 + 48), a2, 0);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    **(unsigned char **)(a1 + 56) = 1;
    *a4 = 1;
  }
}

- (BOOL)_hasRegisteredClassOrNibForSupplementaryViewOfKind:(id)a3
{
  return [(NSMutableSet *)self->_supplementaryViewRegisteredKinds containsObject:a3];
}

void __32__UICollectionView_setDelegate___block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v2 = *(NSObject **)(__UILogGetCategoryCachedImpl("Warning", &_UIInternalPreference_CollectionViewAutomaticallyInvalidatesForTraitChanges_block_invoke___s_category)+ 8);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_ERROR, "You are trying to set a deallocating object as a delegate. This will be a hard crash in the future. Offending object: %@ hostObject: %@", (uint8_t *)&v5, 0x16u);
  }
}

void __34__UICollectionView_setDataSource___block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v2 = *(NSObject **)(__UILogGetCategoryCachedImpl("Warning", &_UIInternalPreference_CollectionViewAutomaticallyInvalidatesForTraitChanges_block_invoke_2___s_category)+ 8);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_ERROR, "You are trying to set a deallocating object as dataSource. This will be a hard crash in the future. Offending object: %@ hosting object: %@", (uint8_t *)&v5, 0x16u);
  }
}

void __42__UICollectionView_setPrefetchDataSource___block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v2 = *(NSObject **)(__UILogGetCategoryCachedImpl("Warning", &_UIInternalPreference_CollectionViewAutomaticallyInvalidatesForTraitChanges_block_invoke_3___s_category)+ 8);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_ERROR, "You are trying to set a deallocating object as prefetchDataSource. This will be a hard crash in the future. Offending object: %@ hosting object: %@", (uint8_t *)&v5, 0x16u);
  }
}

void __42__UICollectionView_setPrefetchDataSource___block_invoke_268(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained prefetchDataSource];
    if (!v2) {
      [v3 setPrefetchDataSource:0];
    }

    id WeakRetained = v3;
  }
}

- (BOOL)_dataSourceMatchesCurrentCounts
{
  return -[UICollectionViewData dataSourceMatchesCurrentCounts]((uint64_t)self->_collectionViewData);
}

- (int64_t)_dataSourceNumberOfSections
{
  id v3 = [(UICollectionView *)self _dataSourceActual];
  char v4 = objc_opt_respondsToSelector();

  if ((v4 & 1) == 0) {
    return 1;
  }
  int v5 = [(UICollectionView *)self _dataSourceActual];
  uint64_t v6 = [v5 numberOfSectionsInCollectionView:self];

  return v6 & ~(v6 >> 63);
}

- (int64_t)_dataSourceNumberOfItemsInSection:(int64_t)a3
{
  int v5 = [(UICollectionView *)self _dataSourceActual];
  int64_t v6 = [v5 collectionView:self numberOfItemsInSection:a3];

  return v6;
}

- (BOOL)_isIndexPathSelectedItem:(id)a3
{
  id v4 = a3;
  [(UICollectionView *)self _reloadDataIfNeeded];
  selectionController = self->_selectionController;
  if (selectionController) {
    int64_t v6 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
  }
  else {
    int64_t v6 = 0;
  }
  char v7 = [v6 containsObject:v4];

  return v7;
}

- (BOOL)_delegateAllowsHighlightingItemAtIndexPath:(id)a3
{
  if ((*(void *)&self->_collectionViewFlags & 1) == 0) {
    return 1;
  }
  id v4 = self;
  id v5 = a3;
  int64_t v6 = [(UICollectionView *)v4 _delegateProxy];
  LOBYTE(v4) = [v6 collectionView:v4 shouldHighlightItemAtIndexPath:v5];

  return (char)v4;
}

- (BOOL)_delegateAllowsSelectingItemAtIndexPath:(id)a3
{
  if ((*(void *)&self->_collectionViewFlags & 8) == 0) {
    return 1;
  }
  id v4 = self;
  id v5 = a3;
  int64_t v6 = [(UICollectionView *)v4 _delegateProxy];
  LOBYTE(v4) = [v6 collectionView:v4 shouldSelectItemAtIndexPath:v5];

  return (char)v4;
}

- (BOOL)_inferFocusabilityForCell:(id)a3 atIndexPath:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([(UICollectionView *)self _isIndexPathSelectedItem:v7])
  {
    BOOL v8 = 1;
  }
  else
  {
    uint64_t v9 = [v6 _existingContentView];
    BOOL v8 = (!v9 || !dyld_program_sdk_at_least() || (_UIViewContainsFocusableSubviews(v9) & 1) == 0)
      && (dyld_program_sdk_at_least() && ([v6 _hasCustomSelectionAction] & 1) != 0
       || [(UICollectionView *)self _allowsEffectiveSelection]
       && (!dyld_program_sdk_at_least()
        || [(UICollectionView *)self _delegateAllowsHighlightingItemAtIndexPath:v7]));
  }
  return v8;
}

- (BOOL)_delegateSupportsPrimaryAction
{
  return (*(void *)&self->_collectionViewFlags >> 52) & 1;
}

- (BOOL)_canPerformPrimaryActionForItemAtIndexPath:(id)a3
{
  id v4 = a3;
  if (v4 && [(UICollectionView *)self _delegateSupportsPrimaryAction])
  {
    if ((*(void *)&self->_collectionViewFlags & 0x8000000000000) != 0)
    {
      id v6 = [(UICollectionView *)self _delegateProxy];
      LOBYTE(self) = [v6 collectionView:self canPerformPrimaryActionForItemAtIndexPath:v4];
    }
    else
    {
      LODWORD(self) = ![(UICollectionView *)self _isEditing];
    }
  }
  else
  {
    LOBYTE(self) = 0;
  }

  return (char)self;
}

uint64_t __69__UICollectionView__deselectItemAtIndexPath_animated_notifyDelegate___block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 2184);
  id v6 = a3;
  uint64_t v7 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v5, a2);
  uint64_t v8 = -[UICollectionViewData globalIndexForItemAtIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), v6);

  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v10 = v7 - v9;
  if (v7 - v9 < 0) {
    unint64_t v10 = v9 - v7;
  }
  uint64_t v11 = v8 - v9;
  if (v11 < 0) {
    uint64_t v11 = -v11;
  }
  if (v10 < v11) {
    uint64_t v12 = -1;
  }
  else {
    uint64_t v12 = v11 < v10;
  }
  uint64_t v13 = v8 < v7;
  if (v7 < v8) {
    uint64_t v13 = -1;
  }
  if (v12) {
    return v12;
  }
  else {
    return v13;
  }
}

void __78__UICollectionView__deselectItemsAtIndexPaths_animated_transitionCoordinator___block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(void **)(a1 + 32);
  if (v2) {
    id v2 = (void *)v2[3];
  }
  id v3 = v2;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_msgSend(*(id *)(a1 + 40), "_deselectItemAtIndexPath:animated:notifyDelegate:", *(void *)(*((void *)&v8 + 1) + 8 * v7++), *(unsigned __int8 *)(a1 + 48), 0, (void)v8);
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

void __78__UICollectionView__deselectItemsAtIndexPaths_animated_transitionCoordinator___block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if ([a2 isCancelled])
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v3 = *(void **)(a1 + 32);
    if (v3) {
      id v3 = (void *)v3[3];
    }
    uint64_t v4 = v3;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v13;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          LOBYTE(v11) = 0;
          [*(id *)(a1 + 40) _selectItemAtIndexPath:*(void *)(*((void *)&v12 + 1) + 8 * v8++) animated:0 scrollPosition:0 notifyDelegate:0 deselectPrevious:0 performPrimaryAction:0 performCustomSelectionAction:v11];
        }
        while (v6 != v8);
        uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v6);
    }
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    long long v10 = *(void **)(v9 + 24);
    *(void *)(v9 + 24) = 0;
  }
}

- (id)_multiSelectController
{
  return self->_multiSelectController;
}

- (void)_setAllowsBandSelectionForMultipleSelection:(BOOL)a3
{
  uint64_t v3 = 0x8000;
  if (!a3) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFFFF7FFFLL | v3;
}

- (BOOL)_allowsBandSelectionForMultipleSelection
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 15) & 1;
}

- (BOOL)allowsUserInitiatedMultipleSelection
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 13) & 1;
}

- (void)setAllowsUserInitiatedMultipleSelection:(BOOL)a3
{
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v4 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v4 & 0x2000) == 0) ^ a3) & 1) == 0)
  {
    int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v6 = *(void *)p_collectionViewFlags;
    uint64_t v7 = 0x2000;
    if (!a3) {
      uint64_t v7 = 0;
    }
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *(void *)p_uint64_t collectionViewFlags = v6;
    *((void *)&self->_collectionViewFlags + 1) = v4 & 0xFFFFFFFFFFFFDFFFLL | v7;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
  }
}

- (BOOL)_allowsSelectionDuringEditing
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 12) & 1;
}

- (BOOL)_allowsEffectiveSelectionOrCustomActionAtIndexPath:(id)a3
{
  id v4 = a3;
  BOOL v5 = [(UICollectionView *)self _allowsEffectiveSelection]
    || dyld_program_sdk_at_least()
    && ([(UICollectionView *)self _cellForItemAtIndexPath:v4],
        (uint64_t v6 = objc_claimAutoreleasedReturnValue()) != 0)
    && (uint64_t v7 = v6, v8 = [v6 _hasCustomSelectionAction], v7, (v8 & 1) != 0)
    || [(UICollectionView *)self _canPerformPrimaryActionForItemAtIndexPath:v4];

  return v5;
}

- (BOOL)_delaysUserInitiatedItemSelection
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 9) & 1;
}

- (BOOL)_shouldBecomeFocusedOnSelection
{
  *((void *)&v2 + 1) = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | ((unint64_t)*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *(void *)&long long v2 = *((void *)&self->_collectionViewFlags + 1);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __51__UICollectionView__shouldBecomeFocusedOnSelection__block_invoke;
  v4[3] = &unk_1E52DA6B0;
  v4[4] = self;
  return _UITriStateToBool((v2 >> 18) & 3, v4);
}

uint64_t __51__UICollectionView__shouldBecomeFocusedOnSelection__block_invoke(uint64_t a1)
{
  if (dyld_program_sdk_at_least()) {
    return 1;
  }
  uint64_t v3 = [*(id *)(a1 + 32) traitCollection];
  BOOL v2 = [v3 _splitViewControllerContext] == 3;

  return v2;
}

- (BOOL)_defaultAllowsFocus
{
  uint64_t v3 = [(UIView *)self _focusBehavior];
  uint64_t v4 = [v3 cellFocusability];

  BOOL v5 = [(UICollectionView *)self allowsSelection];
  BOOL result = 0;
  if (v5 && v4 != 3)
  {
    if (v4 == 2)
    {
      uint64_t v7 = [(UIView *)self traitCollection];
      char v8 = [v7 _hasSplitViewControllerContextSidebarColumn];

      return v8;
    }
    else
    {
      return 1;
    }
  }
  return result;
}

- (BOOL)allowsFocus
{
  *((void *)&v2 + 1) = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | ((unint64_t)*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *(void *)&long long v2 = *((void *)&self->_collectionViewFlags + 1);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __31__UICollectionView_allowsFocus__block_invoke;
  v4[3] = &unk_1E52DA6B0;
  v4[4] = self;
  return _UITriStateToBool((v2 >> 20) & 3, v4);
}

uint64_t __31__UICollectionView_allowsFocus__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _defaultAllowsFocus];
}

- (void)setAllowsFocusDuringEditing:(BOOL)allowsFocusDuringEditing
{
  uint64_t v3 = 0x400000;
  if (allowsFocusDuringEditing) {
    uint64_t v3 = 0x800000;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFFFFFF3FFFFFLL | v3;
}

- (BOOL)_defaultAllowsFocusDuringEditing
{
  if (![(UICollectionView *)self allowsSelectionDuringEditing]) {
    return 0;
  }
  uint64_t v3 = [(UIView *)self _focusBehavior];
  if ([v3 cellFocusability] == 2)
  {
    uint64_t v4 = [(UIView *)self traitCollection];
    char v5 = [v4 _hasSplitViewControllerContextSidebarColumn];
  }
  else
  {
    char v5 = 1;
  }

  return v5;
}

- (BOOL)allowsFocusDuringEditing
{
  *((void *)&v2 + 1) = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | ((unint64_t)*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  *(void *)&long long v2 = *((void *)&self->_collectionViewFlags + 1);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __44__UICollectionView_allowsFocusDuringEditing__block_invoke;
  v4[3] = &unk_1E52DA6B0;
  v4[4] = self;
  return _UITriStateToBool((v2 >> 22) & 3, v4);
}

uint64_t __44__UICollectionView_allowsFocusDuringEditing__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _defaultAllowsFocusDuringEditing];
}

- (BOOL)_allowsEffectiveFocus
{
  if ([(UICollectionView *)self _isEditing] || ![(UICollectionView *)self allowsFocus])
  {
    BOOL v3 = [(UICollectionView *)self _isEditing];
    if (v3)
    {
      LOBYTE(v3) = [(UICollectionView *)self allowsFocusDuringEditing];
    }
  }
  else
  {
    LOBYTE(v3) = 1;
  }
  return v3;
}

- (BOOL)_effectiveDefaultAllowsFocus
{
  if ([(UICollectionView *)self _isEditing]
    || ![(UICollectionView *)self _defaultAllowsFocus])
  {
    BOOL v3 = [(UICollectionView *)self _isEditing];
    if (v3)
    {
      LOBYTE(v3) = [(UICollectionView *)self _defaultAllowsFocusDuringEditing];
    }
  }
  else
  {
    LOBYTE(v3) = 1;
  }
  return v3;
}

- (id)_reorderFeedbackGenerator
{
  return self->_reorderFeedbackGenerator;
}

- (void)_unhighlightItemAtIndexPath:(id)a3 animated:(BOOL)a4
{
}

- (void)_unhighlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 notifyDelegate:(BOOL)a5
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  id v8 = a3;
  selectionController = self->_selectionController;
  if (selectionController)
  {
    id v17 = v8;
    int v10 = [(NSMutableSet *)selectionController->_highlightedIndexPaths containsObject:v8];
    id v8 = v17;
    if (v10)
    {
      BOOL v11 = [(UICollectionView *)self _validateSelectionOrHighlightIndexPath:v17 isSelection:0 allowMassIndexPath:0 assertIfInvalid:0];
      long long v12 = self->_selectionController;
      if (v12) {
        [(NSMutableSet *)v12->_highlightedIndexPaths removeObject:v17];
      }
      long long v13 = [(UICollectionView *)self _cellForItemAtIndexPath:v17];
      long long v14 = v13;
      if (v13)
      {
        [v13 _setHighlighted:0 animated:v6];
      }
      else if (v11)
      {
        long long v15 = [(UICollectionView *)self collectionViewLayout];
        [v15 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:v17 separatorOnly:0];
      }
      if (v5 && (*(void *)&self->_collectionViewFlags & 4) != 0)
      {
        uint64_t v16 = [(UICollectionView *)self _delegateProxy];
        [v16 collectionView:self didUnhighlightItemAtIndexPath:v17];
      }
      id v8 = v17;
    }
  }
}

- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6
{
  return [(UICollectionView *)self _highlightItemAtIndexPath:a3 animated:a4 scrollPosition:a5 notifyDelegate:a6 playFeedback:0];
}

- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5 notifyDelegate:(BOOL)a6 playFeedback:(BOOL)a7
{
  BOOL v7 = a6;
  BOOL v33 = a4;
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  BOOL v11 = -[UICollectionView _validateSelectionOrHighlightIndexPath:isSelection:allowMassIndexPath:assertIfInvalid:](self, "_validateSelectionOrHighlightIndexPath:isSelection:allowMassIndexPath:assertIfInvalid:", a3, 0, 1, 1, a7);
  char v12 = 0;
  if ([(UICollectionView *)self _allowsEffectiveSelectionOrCustomActionAtIndexPath:a3])
  {
    selectionController = self->_selectionController;
    if (selectionController
      && ([(NSMutableSet *)selectionController->_highlightedIndexPaths containsObject:a3] & 1) != 0)
    {
      return 0;
    }
    uint64_t v32 = [(UICollectionView *)self _delegateProxy];
    if (!a3 || [a3 section] == 0x7FFFFFFFFFFFFFFFLL || objc_msgSend(a3, "item") == 0x7FFFFFFFFFFFFFFFLL)
    {
      long long v14 = self->_selectionController;
      if (v14) {
        long long v15 = (void *)[(NSMutableSet *)v14->_highlightedIndexPaths copy];
      }
      else {
        long long v15 = 0;
      }
      long long v36 = 0u;
      long long v37 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      uint64_t v16 = [v15 countByEnumeratingWithState:&v34 objects:v38 count:16];
      if (!v16) {
        goto LABEL_23;
      }
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)v35;
      while (1)
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v35 != v18) {
            objc_enumerationMutation(v15);
          }
          uint64_t v20 = *(void *)(*((void *)&v34 + 1) + 8 * i);
          long long v21 = [(UICollectionView *)self _cellForItemAtIndexPath:v20];
          long long v22 = v21;
          if (v21)
          {
            [v21 _setHighlighted:0 animated:v33];
            if (!v7) {
              goto LABEL_21;
            }
          }
          else
          {
            uint64_t v23 = [(UICollectionView *)self collectionViewLayout];
            [v23 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:v20 separatorOnly:0];

            if (!v7) {
              goto LABEL_21;
            }
          }
          if ((*(void *)&self->_collectionViewFlags & 4) != 0) {
            [v32 collectionView:self didUnhighlightItemAtIndexPath:v20];
          }
LABEL_21:
        }
        uint64_t v17 = [v15 countByEnumeratingWithState:&v34 objects:v38 count:16];
        if (!v17)
        {
LABEL_23:
          long long v24 = self->_selectionController;
          if (v24) {
            [(NSMutableSet *)v24->_highlightedIndexPaths removeAllObjects];
          }

LABEL_26:
          char v12 = 0;
          goto LABEL_27;
        }
      }
    }
    if (v7
      && (*(void *)&self->_collectionViewFlags & 1) != 0
      && ![(_UISelectionInteraction *)self->_selectionInteraction isHinting]
      && ![v32 collectionView:self shouldHighlightItemAtIndexPath:a3])
    {
      if (!v11) {
        goto LABEL_26;
      }
      id v30 = [(UICollectionView *)self _cellForItemAtIndexPath:a3];
      id v31 = v30;
      if (v30) {
        char v12 = [v30 _hasCustomSelectionAction];
      }
      else {
        char v12 = 0;
      }
    }
    else
    {
      uint64_t v26 = self->_selectionController;
      if (v26) {
        [(NSMutableSet *)v26->_highlightedIndexPaths addObject:a3];
      }
      uint64_t v27 = [(UICollectionView *)self _cellForItemAtIndexPath:a3];
      objc_super v28 = v27;
      if (v27)
      {
        [v27 _setHighlighted:1 animated:v33];
      }
      else if (v11)
      {
        uint64_t v29 = [(UICollectionView *)self collectionViewLayout];
        [v29 _cellBackgroundOrBottomSeparatorChangedAtIndexPath:a3 separatorOnly:0];
      }
      if (a5) {
        -[UICollectionView _scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", a3, a5, v33, 0.0, 0.0, 0.0, 0.0);
      }
      if (v7 && (*(void *)&self->_collectionViewFlags & 2) != 0) {
        [v32 collectionView:self didHighlightItemAtIndexPath:a3];
      }

      char v12 = 1;
    }
LABEL_27:
  }
  return v12;
}

- (BOOL)_highlightItemAtIndexPath:(id)a3 animated:(BOOL)a4 scrollPosition:(unint64_t)a5
{
  return [(UICollectionView *)self _highlightItemAtIndexPath:a3 animated:a4 scrollPosition:a5 notifyDelegate:0];
}

- (BOOL)_isPerformingReloadData
{
  return self->_reloadingSuspendedCount > 0;
}

void __30__UICollectionView_reloadData__block_invoke_4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(void *)(v1 + 2640) & 0x10000000) == 0)
  {
    BOOL v3 = (double *)(v1 + 2200);
    double v4 = *v3;
    double v5 = v3[1];
    double v6 = v3[2];
    double v7 = v3[3];
    v11.origin.double x = *v3;
    v11.origin.double y = v5;
    v11.size.double width = v6;
    v11.size.double height = v7;
    if (CGRectGetWidth(v11) > 0.0)
    {
      v12.origin.double x = v4;
      v12.origin.double y = v5;
      v12.size.double width = v6;
      v12.size.double height = v7;
      if (CGRectGetHeight(v12) > 0.0)
      {
        v13.origin.double x = v4;
        v13.origin.double y = v5;
        v13.size.double width = v6;
        v13.size.double height = v7;
        CGFloat v8 = CGRectGetWidth(v13) * -0.75;
        v14.origin.double x = v4;
        v14.origin.double y = v5;
        v14.size.double width = v6;
        v14.size.double height = v7;
        CGFloat v9 = CGRectGetHeight(v14) * -0.75;
        v15.origin.double x = v4;
        v15.origin.double y = v5;
        v15.size.double width = v6;
        v15.size.double height = v7;
        CGRect v16 = CGRectInset(v15, v8, v9);
        id v10 = (id)objc_msgSend(*(id *)(a1 + 32), "_computeMainPrefetchCandidatesForVisibleBounds:futureVisibleBounds:prefetchVector:", v4, v5, v6, v7, v16.origin.x, v16.origin.y, v16.size.width, v16.size.height, 0, 0);
      }
    }
  }
}

- (void)_addReloadDataCompletionBlock:(id)a3
{
  id v5 = a3;
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x20000000) == 0)
  {
    CGRect v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2, self, @"UICollectionView.m", 2574, @"Attempting to add a reload data completion block but a reload is not in progress. Collection view: %@", self object file lineNumber description];
  }
  double v6 = _Block_copy(self->_reloadDataCompletionBlock);
  double v7 = v6;
  if (v6)
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __50__UICollectionView__addReloadDataCompletionBlock___block_invoke;
    aBlock[3] = &unk_1E52DE9A0;
    id v14 = v6;
    id v15 = v5;
    CGFloat v8 = _Block_copy(aBlock);
    reloadDataCompletionBlocuint64_t k = self->_reloadDataCompletionBlock;
    self->_reloadDataCompletionBlocuint64_t k = v8;

    id v10 = v14;
  }
  else
  {
    CGRect v11 = _Block_copy(v5);
    id v10 = self->_reloadDataCompletionBlock;
    self->_reloadDataCompletionBlocuint64_t k = v11;
  }
}

uint64_t __50__UICollectionView__addReloadDataCompletionBlock___block_invoke(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  long long v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v2();
}

- (BOOL)_shouldPersistSelectionOnReloadDataWhenPossible
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 11) & 1;
}

- (BOOL)_forcePreserveSemanticContentOffsetDuringUpdates
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 12) & 1;
}

- (void)_setForcePreserveSemanticContentOffsetDuringUpdates:(BOOL)a3
{
  int v3 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xEFFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
  if (a3) {
    __int16 v4 = 4096;
  }
  else {
    __int16 v4 = 0;
  }
  *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xEFFF | v4;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v3);
}

- (BOOL)_isCellInvolvedInDragOrDropAnimationAtIndexPath:(id)a3
{
  id v4 = a3;
  id v5 = [(UICollectionView *)self _cellForItemAtIndexPath:v4];
  LOBYTE(self) = -[_UICollectionViewDragAndDropController isCellInvolvedInDragOrDropAnimation:atIndexPath:]((BOOL)self->_dragAndDropController, v5, (uint64_t)v4);

  return (char)self;
}

- (int64_t)_preferredDragDestinationVisualStyle
{
  dragAndDropController = self->_dragAndDropController;
  if (dragAndDropController) {
    return dragAndDropController->_preferredDragDestinationVisualStyle;
  }
  else {
    return 0;
  }
}

- (void)_immediatelyBeginDruidBasedReorderIfPossibleWithTouch:(id)a3
{
  dragAndDropController = self->_dragAndDropController;
  if (dragAndDropController) {
    -[_UICollectionViewDragSourceController attemptToBeginDragImmediatelyWithTouch:]((uint64_t)dragAndDropController->_sourceController, a3);
  }
}

- (void)_setIsAncestorOfFirstResponder:(BOOL)a3
{
  BOOL v3 = a3;
  v25.receiver = self;
  v25.super_class = (Class)UICollectionView;
  -[UIView _setIsAncestorOfFirstResponder:](&v25, sel__setIsAncestorOfFirstResponder_);
  id v5 = [(UIView *)self window];
  id v6 = [v5 firstResponder];

  if (v6)
  {
    while (1)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
      double v7 = [v6 nextResponder];

      id v6 = v7;
      if (!v7) {
        goto LABEL_9;
      }
    }
    id v6 = v6;
    double v7 = v6;
    do
    {
      CGFloat v8 = [v7 superview];

      if (v8 == self) {
        break;
      }
      uint64_t v9 = [v7 superview];

      double v7 = (void *)v9;
    }
    while (v9);
  }
  else
  {
    double v7 = 0;
  }
LABEL_9:
  if (v3)
  {
    objc_storeStrong((id *)&self->_firstResponderView, v7);
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v10 = [v7 _layoutAttributes];
      firstResponderView = (UICollectionReusableView *)v10;
      if (v10)
      {
        p_int64_t firstResponderViewType = &self->_firstResponderViewType;
        if (*(_WORD *)(v10 + 288))
        {
          *p_int64_t firstResponderViewType = 1;
          long long v22 = [(UICollectionView *)self _indexPathForCell:v7];
          uint64_t v23 = v22;
          if (!v22)
          {
            uint64_t v23 = [(UICollectionReusableView *)firstResponderView indexPath];
          }
          objc_storeStrong((id *)&self->_firstResponderIndexPath, v23);
          if (!v22) {

          }
          firstResponderViewKind = self->_firstResponderViewKind;
          self->_firstResponderViewKind = 0;
          goto LABEL_34;
        }
      }
      else
      {
        p_int64_t firstResponderViewType = &self->_firstResponderViewType;
      }
      *p_int64_t firstResponderViewType = 2;
      CGRect v13 = [(UICollectionView *)self _indexPathForSupplementaryView:v7];
      id v14 = v13;
      if (!v13)
      {
        id v14 = [(UICollectionReusableView *)firstResponderView indexPath];
      }
      objc_storeStrong((id *)&self->_firstResponderIndexPath, v14);
      if (!v13) {

      }
      firstResponderViewKind = [v7 _layoutAttributes];
      -[UIBarButtonItemGroup _items](firstResponderViewKind);
      CGRect v16 = (NSString *)objc_claimAutoreleasedReturnValue();
      uint64_t v17 = self->_firstResponderViewKind;
      self->_firstResponderViewKind = v16;

LABEL_34:
      goto LABEL_37;
    }
    self->_int64_t firstResponderViewType = 0;
    firstResponderIndexPath = self->_firstResponderIndexPath;
    self->_firstResponderIndexPath = 0;

    firstResponderView = (UICollectionReusableView *)self->_firstResponderViewKind;
    self->_firstResponderViewKind = 0;
  }
  else
  {
    firstResponderView = self->_firstResponderView;
    if (self->_firstResponderViewType)
    {
      firstResponderView = firstResponderView;
      uint64_t v18 = self->_firstResponderView;
      self->_firstResponderView = 0;

      subviewManager = self->_subviewManager;
      if ((!subviewManager
         || !-[_UICollectionViewSubviewCollection containsView:]((uint64_t)subviewManager->_visibleViews, (uint64_t)firstResponderView))&& firstResponderView != self->_newContentView)
      {
        self;
        if ((__addingResponderToTree & 1) == 0
          && ![(UICollectionReusableView *)firstResponderView _isInUpdateAnimation])
        {
          int64_t firstResponderViewType = self->_firstResponderViewType;
          if (firstResponderViewType == 2)
          {
            [(UICollectionView *)self _reuseSupplementaryView:firstResponderView];
          }
          else if (firstResponderViewType == 1)
          {
            [(UICollectionView *)self _reuseCell:firstResponderView notifyDidEndDisplaying:1];
          }
        }
      }
      long long v24 = self->_firstResponderIndexPath;
      self->_firstResponderIndexPath = 0;

      self->_int64_t firstResponderViewType = 0;
    }
    else
    {
      self->_firstResponderView = 0;
    }
  }
LABEL_37:
}

- (void)_addControlledSubview:(id)a3
{
  id v5 = [a3 _layoutAttributes];
  -[UICollectionView _addControlledSubview:atZIndex:forced:](self, "_addControlledSubview:atZIndex:forced:", a3, [v5 zIndex], 1);
}

- (void)_reparentViewIntoSelf:(id)a3
{
  viewsOptedOutOfBeingParentedIntoContainers = self->_viewsOptedOutOfBeingParentedIntoContainers;
  if (viewsOptedOutOfBeingParentedIntoContainers)
  {
    [(NSMutableSet *)viewsOptedOutOfBeingParentedIntoContainers addObject:a3];
  }
  else
  {
    id v6 = [MEMORY[0x1E4F1CA80] setWithObject:a3];
    double v7 = self->_viewsOptedOutOfBeingParentedIntoContainers;
    self->_viewsOptedOutOfBeingParentedIntoContainers = v6;
  }
  [(UICollectionView *)self _addControlledSubview:a3];
}

- (void)_reparentViewIntoCorrectContainer:(id)a3
{
  -[NSMutableSet removeObject:](self->_viewsOptedOutOfBeingParentedIntoContainers, "removeObject:");
  if (![(NSMutableSet *)self->_viewsOptedOutOfBeingParentedIntoContainers count])
  {
    viewsOptedOutOfBeingParentedIntoContainers = self->_viewsOptedOutOfBeingParentedIntoContainers;
    self->_viewsOptedOutOfBeingParentedIntoContainers = 0;
  }
  [(UICollectionView *)self _addControlledSubview:a3];
}

- (void)sendSubviewToBack:(id)a3
{
  id v4 = a3;
  id v5 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  int v6 = [v5 shouldSendSubviewToBack:v4];

  if (v6)
  {
    v7.receiver = self;
    v7.super_class = (Class)UICollectionView;
    [(UIView *)&v7 sendSubviewToBack:v4];
  }
}

- (void)exchangeSubviewAtIndex:(int64_t)a3 withSubviewAtIndex:(int64_t)a4
{
  objc_super v7 = -[UICollectionView subviewRouter]((id *)&self->super.super.super.super.isa);
  int v8 = [v7 shouldExchangeSubviewAtIndex:a3 withSubviewAtIndex:a4];

  if (v8)
  {
    v9.receiver = self;
    v9.super_class = (Class)UICollectionView;
    [(UIView *)&v9 exchangeSubviewAtIndex:a3 withSubviewAtIndex:a4];
  }
}

void __75__UICollectionView__sectionContainerViewForSectionIndex_createIfNecessary___block_invoke(uint64_t a1)
{
  long long v2 = [_UICollectionSectionContainerView alloc];
  BOOL v3 = *(double **)(a1 + 32);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  if (v3)
  {
    double v8 = v3[30];
    double v5 = v3[31];
    double v6 = v3[32];
    double v7 = v3[33];
  }
  uint64_t v9 = -[_UICollectionSectionContainerView initWithFrame:](v2, "initWithFrame:", v8, v5, v6, v7);
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  CGRect v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) frame];
  objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setBounds:");
  uint64_t v12 = *(void *)(a1 + 32);
  if (v12) {
    double v4 = *(double *)(v12 + 48);
  }
  CGRect v13 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) layer];
  [v13 setCornerRadius:v4];

  uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  id v15 = *(void **)(*(void *)(a1 + 40) + 3032);
  CGRect v16 = [NSNumber numberWithInteger:*(void *)(a1 + 56)];
  [v15 setObject:v14 forKeyedSubscript:v16];

  -[UICollectionView subviewRouter](*(id **)(a1 + 40));
  id v17 = (id)objc_claimAutoreleasedReturnValue();
  -[_UICollectionViewSubviewRouter addContainerView:]((uint64_t)v17, *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
}

void __59__UICollectionView__reconfigureSectionContainersForUpdate___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  double v6 = *(void **)(a1 + 32);
  uint64_t v7 = [v14 integerValue];
  if (v6) {
    uint64_t v7 = [v6 finalSectionIndexForInitialSectionIndex:v7];
  }
  if (v7 == 0x7FFFFFFFFFFFFFFFLL || ![*(id *)(a1 + 40) containsIndex:v7])
  {
    uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 3040);
    if (v10)
    {
      [v10 addObject:v5];
    }
    else
    {
      uint64_t v11 = [MEMORY[0x1E4F1CA48] arrayWithObject:v5];
      uint64_t v12 = *(void *)(a1 + 56);
      CGRect v13 = *(void **)(v12 + 3040);
      *(void *)(v12 + 3040) = v11;
    }
  }
  else
  {
    double v8 = *(void **)(a1 + 48);
    uint64_t v9 = [NSNumber numberWithInteger:v7];
    [v8 setObject:v5 forKeyedSubscript:v9];
  }
}

void __48__UICollectionView__layoutSectionContainerViews__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v11 = a3;
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2064), "_sectionDescriptorForSectionIndex:", objc_msgSend(a2, "integerValue"));
  id v5 = (double *)objc_claimAutoreleasedReturnValue();
  double v6 = v5;
  if (v5)
  {
    objc_msgSend(v11, "setFrame:", v5[30], v5[31], v5[32], v5[33]);
    [v11 frame];
    objc_msgSend(v11, "setBounds:");
    double v7 = v6[6];
    double v8 = [v11 layer];
    [v8 setCornerRadius:v7];

    uint64_t v9 = *MEMORY[0x1E4F39EA8];
    uint64_t v10 = [v11 layer];
    [v10 setCornerCurve:v9];

    [v11 setClipsToBounds:*((unsigned __int8 *)v6 + 8)];
  }
}

- (BOOL)_shouldScrollToContentBeginningInRightToLeft
{
  return [(UICollectionViewLayout *)self->_layout _shouldScrollToContentBeginningInRightToLeft];
}

uint64_t __48__UICollectionView_setSemanticContentAttribute___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return [a5 setSemanticContentAttribute:*(void *)(a1 + 32)];
}

- (void)_setDefaultLayoutMargins:(UIEdgeInsets)a3
{
}

- (void)_invalidateLayoutForVisibleBounds:(CGRect)a3 oldVisibleBounds:(CGRect)a4
{
}

- (void)_setShouldDeriveVisibleBoundsFromContainingScrollView:(BOOL)a3
{
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v4 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v4 & 0x800000000000) == 0) ^ a3) & 1) == 0)
  {
    int v5 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v6 = *(void *)p_collectionViewFlags;
    uint64_t v7 = 0x800000000000;
    if (!a3) {
      uint64_t v7 = 0;
    }
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *(void *)p_uint64_t collectionViewFlags = v6;
    *((void *)&self->_collectionViewFlags + 1) = v4 & 0xFFFF7FFFFFFFFFFFLL | v7;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v5);
    [(UICollectionView *)self _updateDerivesVisibleBoundsFromContainingScrollView];
  }
}

- (CGRect)_effectiveVisibleBoundsForBounds:(CGRect)a3
{
  double top = self->_visibleRectInsets.top;
  double left = self->_visibleRectInsets.left;
  double v5 = a3.origin.x + left;
  double v6 = a3.origin.y + top;
  double v7 = a3.size.width - (left + self->_visibleRectInsets.right);
  double v8 = a3.size.height - (top + self->_visibleRectInsets.bottom);
  result.size.double height = v8;
  result.size.double width = v7;
  result.origin.double y = v6;
  result.origin.double x = v5;
  return result;
}

- (void)_setCellPrefetchMode:(int64_t)a3
{
  [(UICollectionView *)self setPrefetchingEnabled:a3 == 1];
}

- (int64_t)_cellPrefetchMode
{
  return [(UICollectionView *)self isPrefetchingEnabled];
}

- (BOOL)_hasPrefetchItems
{
  mainPrefetchingContext = self->_mainPrefetchingContext;
  return mainPrefetchingContext && [(NSMutableArray *)mainPrefetchingContext->_items count]
      || [(NSMutableDictionary *)self->_prefetchCacheItems count] != 0;
}

- (BOOL)isPrefetchingEnabled
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 62) & 1;
}

- (BOOL)_shouldPrefetchCellsWhenPerformingReloadData
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 53) & 1;
}

- (id)_prefetchingContextForOrthogonalScrollingSection:(int64_t)a3
{
  double v5 = [(UICollectionViewLayout *)self->_layout _orthogonalScrollingSections];
  int v6 = [v5 containsIndex:a3];

  if (v6)
  {
    orthogonalSectionPrefetchingContexts = self->_orthogonalSectionPrefetchingContexts;
    double v8 = [NSNumber numberWithInteger:a3];
    uint64_t v9 = [(NSMutableDictionary *)orthogonalSectionPrefetchingContexts objectForKeyedSubscript:v8];
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

- (void)_setPrefetchingContext:(id)a3 forOrthogonalScrollingSection:(int64_t)a4
{
  id v10 = a3;
  int v6 = [(UICollectionViewLayout *)self->_layout _orthogonalScrollingSections];
  int v7 = [v6 containsIndex:a4];

  if (v7)
  {
    orthogonalSectionPrefetchingContexts = self->_orthogonalSectionPrefetchingContexts;
    uint64_t v9 = [NSNumber numberWithInteger:a4];
    [(NSMutableDictionary *)orthogonalSectionPrefetchingContexts setObject:v10 forKeyedSubscript:v9];
  }
}

void __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _dataSourceProxy];
  uint64_t v2 = [v5 collectionView:*(void *)(a1 + 32) cellForItemAtIndexPath:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t __112__UICollectionView__createPreparedCellForItemAtIndexPath_withLayoutAttributes_applyAttributes_isFocused_notify___block_invoke_3(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
}

uint64_t __90__UICollectionView__configureCachedCellForDisplay_withIndexPath_layoutAttributesToUpdate___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

- (BOOL)_shouldFadeCellsForBoundChangeWhileRotating
{
  if (dyld_program_sdk_at_least()
    && ([(UICollectionViewLayout *)self->_layout _estimatesSizes]
     || [(UICollectionViewLayout *)self->_layout _disallowsFadeCellsForBoundsChange]))
  {
    return 0;
  }
  uint64_t v4 = [(UIView *)self window];
  uint64_t v5 = [(UIView *)self _viewControllerForAncestor];
  int v6 = (void *)v5;
  BOOL v3 = 1;
  if (v4 && v5 && [v4 isRotating])
  {
    memset(v9, 0, sizeof(v9));
    [v6 _getRotationContentSettings:v9];
    if (LOBYTE(v9[0])) {
      BOOL v7 = BYTE3(v9[0]) == 0;
    }
    else {
      BOOL v7 = 0;
    }
    BOOL v3 = !v7;
  }

  return v3;
}

- (CGPoint)_reorderingTargetPosition
{
  double x = self->_reorderingTargetPosition.x;
  double y = self->_reorderingTargetPosition.y;
  result.double y = y;
  result.double x = x;
  return result;
}

uint64_t __94__UICollectionView__updatePrefetchItemIfNeeded_forIndexPath_withLayoutAttributes_willDisplay___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

- (unint64_t)_prefetchItemsForPrefetchingContext:(id)a3
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (id *)a3;
  BOOL v5 = [(UICollectionView *)self _useIdleObserverForCellPrefetching];
  if (v5) {
    [(UICollectionView *)self _beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
  }
  if (v4 && [v4[2] count])
  {
    int v6 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
    while (1)
    {
      uint64_t v7 = -[_UICollectionViewPrefetchingContext popNextItem]((uint64_t)v4);
      double v8 = (void *)v7;
      uint64_t v9 = v7 ? *(void **)(v7 + 16) : 0;
      id v10 = v9;
      id v11 = [v10 indexPath];

      uint64_t v12 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v11);

      if (!v12)
      {
        uint64_t v13 = v6[491];
        id v14 = [*(id *)((char *)&self->super.super.super.super.isa + v13) objectForKeyedSubscript:v11];

        if (!v14)
        {
          uint64_t v15 = [(UICollectionView *)self _focusedItemState];
          if (!v15) {
            goto LABEL_14;
          }
          CGRect v16 = (void *)v15;
          uint64_t v17 = [(UICollectionView *)self _focusedItemState];
          uint64_t v18 = (void *)v17;
          long long v19 = v17 ? *(void **)(v17 + 16) : 0;
          id v20 = v19;
          char v21 = [v20 isEqual:v11];

          int v6 = &OBJC_IVAR____UISearchBarVisualProviderLegacy__leftButton;
          if ((v21 & 1) == 0)
          {
LABEL_14:
            firstResponderIndexPath = self->_firstResponderIndexPath;
            if (!firstResponderIndexPath
              || ([(NSIndexPath *)firstResponderIndexPath isEqual:v11] & 1) == 0)
            {
              uint64_t v23 = v8 ? (void *)v8[2] : 0;
              id v24 = v23;
              id v25 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v11 withLayoutAttributes:v24 applyAttributes:0 isFocused:0 notify:0];

              if (v25) {
                break;
              }
            }
          }
        }
      }

      if (![v4[2] count])
      {
        unint64_t v26 = 0;
        if (v5) {
          goto LABEL_27;
        }
        goto LABEL_28;
      }
    }
    if (v5) {
      [v25 _setHiddenForReuse:1];
    }
    -[_UIHomeAffordanceObservationRecord setLegacyViewServiceSessionIdentifier:]((uint64_t)v8, v25);
    objc_super v28 = *(Class *)((char *)&self->super.super.super.super.isa + v13);
    if (v8) {
      uint64_t v29 = (void *)v8[2];
    }
    else {
      uint64_t v29 = 0;
    }
    id v30 = v29;
    id v31 = [v30 indexPath];
    [v28 setObject:v8 forKeyedSubscript:v31];

    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_prefetchItemsForPrefetchingContext____s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      BOOL v33 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        long long v34 = v33;
        long long v35 = objc_msgSend(v11, "_ui_shortDescription");
        if (v8) {
          long long v36 = (void *)v8[2];
        }
        else {
          long long v36 = 0;
        }
        id v37 = v36;
        *(_DWORD *)long long buf = 134218754;
        uint64_t v39 = self;
        __int16 v40 = 2112;
        uint64_t v41 = v35;
        __int16 v42 = 2112;
        id v43 = v25;
        __int16 v44 = 2112;
        id v45 = v37;
        _os_log_impl(&dword_1853B0000, v34, OS_LOG_TYPE_ERROR, "[UICV %p] Prefetched cell for index path:%@ Cell: %@. Attributes: %@", buf, 0x2Au);
      }
    }

    unint64_t v26 = 1;
    if (v5) {
      goto LABEL_27;
    }
  }
  else
  {
    unint64_t v26 = 0;
    if (v5) {
LABEL_27:
    }
      [(UICollectionView *)self _endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
  }
LABEL_28:

  return v26;
}

- (void)_computeMainPrefetchCandidatesForVelocity:(CGVector)a3
{
  ddouble y = a3.dy;
  ddouble x = a3.dx;
  [(UICollectionView *)self _visibleBounds];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  -[UICollectionView _computeFutureVisibleBoundsForPrefetchVelocity:visibleBounds:](self, "_computeFutureVisibleBoundsForPrefetchVelocity:visibleBounds:", dx, dy, v6, v8, v10, v12);
  -[UICollectionView _computeMainPrefetchCandidatesForVisibleBounds:futureVisibleBounds:prefetchVector:](self, "_computeMainPrefetchCandidatesForVisibleBounds:futureVisibleBounds:prefetchVector:", v7, v9, v11, v13, v14, v15, v16, v17, *(void *)&dx, *(void *)&dy);
  uint64_t v18 = (_UICollectionViewPrefetchingContext *)objc_claimAutoreleasedReturnValue();
  mainPrefetchingContext = self->_mainPrefetchingContext;
  self->_mainPrefetchingContext = v18;
}

- (id)_computeMainPrefetchCandidatesForVisibleBounds:(CGRect)a3 futureVisibleBounds:(CGRect)a4 prefetchVector:(CGVector)a5
{
  double height = a4.size.height;
  double width = a4.size.width;
  double y = a4.origin.y;
  double x = a4.origin.x;
  double v16 = a3.size.width;
  double v17 = a3.size.height;
  double v9 = a3.origin.y;
  double v10 = a3.origin.x;
  mainPrefetchingContext = self->_mainPrefetchingContext;
  if (mainPrefetchingContext && CGRectEqualToRect(mainPrefetchingContext->_prefetchRect, a4))
  {
    double v13 = self->_mainPrefetchingContext;
  }
  else
  {
    double v14 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 1, x, y, width, height);
    -[UICollectionView _prefetchingContextForVisibleBounds:prefetchVector:prefetchRect:attributes:](self, "_prefetchingContextForVisibleBounds:prefetchVector:prefetchRect:attributes:", v14, v10, v9, v16, v17, v19, v20, *(void *)&x, *(void *)&y, *(void *)&width, *(void *)&height);
    double v13 = (_UICollectionViewPrefetchingContext *)objc_claimAutoreleasedReturnValue();
  }
  return v13;
}

- (id)_prefetchingContextForVisibleBounds:(CGRect)a3 prefetchVector:(CGVector)a4 prefetchRect:(CGRect)a5 attributes:(id)a6
{
  ddouble y = a4.dy;
  ddouble x = a4.dx;
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v13 = a6;
  id v31 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v13, "count"));
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v14 = v13;
  uint64_t v15 = [v14 countByEnumeratingWithState:&v32 objects:v36 count:16];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)v33;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v33 != v17) {
          objc_enumerationMutation(v14);
        }
        double v19 = *(_WORD **)(*((void *)&v32 + 1) + 8 * i);
        layout = self->_layout;
        [v19 frame];
        -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v19);
        v40.origin.double x = x;
        v40.origin.double y = y;
        v40.size.double width = width;
        v40.size.double height = height;
        BOOL v21 = CGRectIntersectsRect(v39, v40);
        if (v19 && !v21 && (v19[144] & 1) != 0)
        {
          long long v22 = [v19 indexPath];
          uint64_t v23 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v22);

          if (!v23)
          {
            id v24 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v22];

            if (!v24)
            {
              id v25 = -[_UICollectionViewPrefetchItem initWithAttributes:]((id *)[_UICollectionViewPrefetchItem alloc], v19);
              [v31 addObject:v25];
            }
          }
        }
      }
      uint64_t v16 = [v14 countByEnumeratingWithState:&v32 objects:v36 count:16];
    }
    while (v16);
  }

  -[UICollectionView _reorderPrefetchCandidates:forPrefetchVelocity:visibleBounds:](self, "_reorderPrefetchCandidates:forPrefetchVelocity:visibleBounds:", v31, dx, dy, x, y, width, height);
  unint64_t v26 = -[_UICollectionViewPrefetchingContext initWithPrefetchItems:prefetchRect:]((id *)[_UICollectionViewPrefetchingContext alloc], v31, a5.origin.x, a5.origin.y, a5.size.width, a5.size.height);
  uint64_t v27 = v26;
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x10) != 0 && v26 && [v26[2] count])
  {
    objc_super v28 = [(UICollectionView *)self _prefetchDataSourceProxy];
    uint64_t v29 = -[_UICollectionViewPrefetchingContext remainingIndexPaths](v27);
    [v28 collectionView:self prefetchItemsAtIndexPaths:v29];
  }
  return v27;
}

- (CGRect)_computeFutureVisibleBoundsForPrefetchVelocity:(CGVector)a3 visibleBounds:(CGRect)a4
{
  CGFloat height = a4.size.height;
  CGFloat width = a4.size.width;
  double y = a4.origin.y;
  double x = a4.origin.x;
  ddouble y = a3.dy;
  ddouble x = a3.dx;
  double v26 = CGRectGetHeight(a4);
  v27.origin.double x = x;
  v27.origin.double y = y;
  v27.size.CGFloat width = width;
  v27.size.CGFloat height = height;
  double v11 = CGRectGetWidth(v27);
  double v12 = fabs(dx);
  double v13 = fabs(dy);
  if (v12 < 2.22044605e-16 || v13 < 2.22044605e-16)
  {
    if (dx <= 0.0)
    {
      if (dx >= 0.0)
      {
        double v20 = height;
        double v17 = width;
        double MinY = y;
        double MaxX = x;
        goto LABEL_14;
      }
      v30.origin.double x = x;
      v30.origin.double y = y;
      v30.size.CGFloat width = width;
      v30.size.CGFloat height = height;
      double v17 = v11 * 0.75;
      double MaxX = CGRectGetMinX(v30) - v11 * 0.75;
      v31.origin.double x = x;
      v31.origin.double y = y;
      v31.size.CGFloat width = width;
      v31.size.CGFloat height = height;
      double MinY = CGRectGetMinY(v31);
    }
    else
    {
      v28.origin.double x = x;
      v28.origin.double y = y;
      v28.size.CGFloat width = width;
      v28.size.CGFloat height = height;
      double MaxX = CGRectGetMaxX(v28);
      v29.origin.double x = x;
      v29.origin.double y = y;
      v29.size.CGFloat width = width;
      v29.size.CGFloat height = height;
      double MinY = CGRectGetMinY(v29);
      double v17 = v11 * 0.75;
    }
    double v20 = v26;
LABEL_14:
    if (dy <= 0.0)
    {
      if (dy >= 0.0) {
        goto LABEL_22;
      }
      v34.origin.double x = x;
      v34.origin.double y = y;
      v34.size.CGFloat width = width;
      v34.size.CGFloat height = height;
      double MaxX = CGRectGetMinX(v34);
      v35.origin.double x = x;
      v35.origin.double y = y;
      v35.size.CGFloat width = width;
      v35.size.CGFloat height = height;
      CGFloat v21 = CGRectGetMinY(v35);
      double v20 = v26 * 0.75;
      double MinY = v21 - v26 * 0.75;
    }
    else
    {
      v32.origin.double x = x;
      v32.origin.double y = y;
      v32.size.CGFloat width = width;
      v32.size.CGFloat height = height;
      double MaxX = CGRectGetMinX(v32);
      v33.origin.double x = x;
      v33.origin.double y = y;
      v33.size.CGFloat width = width;
      v33.size.CGFloat height = height;
      double MinY = CGRectGetMaxY(v33);
      double v20 = v26 * 0.75;
    }
    double v17 = v11;
    goto LABEL_22;
  }
  double v18 = v12 / (v12 + v13);
  double v19 = v13 / (v12 + v13);
  if (v18 <= v19 * 5.0)
  {
    if (v19 > v18 * 5.0) {
      double v18 = 0.0;
    }
  }
  else
  {
    double v19 = 0.0;
  }
  -[UICollectionView _unitVectorForVector:](self, "_unitVectorForVector:", dx, dy);
  double MaxX = x + v11 * 0.5 * v18 * v22;
  double MinY = y + v26 * 0.5 * v19 * v23;
  double v17 = v11 * 1.25;
  double v20 = v26 * 1.25;
LABEL_22:
  double v24 = MaxX;
  double v25 = v17;
  result.size.CGFloat height = v20;
  result.size.CGFloat width = v25;
  result.origin.double y = MinY;
  result.origin.double x = v24;
  return result;
}

- (CGRect)_computePrefetchCacheValidationBoundsForPrefetchVelocity:(CGVector)a3 visibleBounds:(CGRect)a4
{
  CGFloat height = a4.size.height;
  CGFloat width = a4.size.width;
  CGFloat y = a4.origin.y;
  CGFloat x = a4.origin.x;
  [(UICollectionView *)self _computeFutureVisibleBoundsForPrefetchVelocity:a3.dx visibleBounds:a3.dy];
  v27.origin.CGFloat x = v8;
  v27.origin.CGFloat y = v9;
  v27.size.CGFloat width = v10;
  v27.size.CGFloat height = v11;
  v23.origin.CGFloat x = x;
  v23.origin.CGFloat y = y;
  v23.size.CGFloat width = width;
  v23.size.CGFloat height = height;
  CGRect v24 = CGRectUnion(v23, v27);
  CGFloat v20 = v24.origin.y;
  CGFloat v21 = v24.origin.x;
  CGFloat v12 = v24.size.width;
  CGFloat v13 = v24.size.height;
  v24.origin.CGFloat x = x;
  v24.origin.CGFloat y = y;
  v24.size.CGFloat width = width;
  v24.size.CGFloat height = height;
  double v14 = CGRectGetWidth(v24) * -0.25;
  v25.origin.CGFloat x = x;
  v25.origin.CGFloat y = y;
  v25.size.CGFloat width = width;
  v25.size.CGFloat height = height;
  double v15 = CGRectGetHeight(v25) * -0.25;
  CGFloat v17 = v20;
  CGFloat v16 = v21;
  CGFloat v18 = v12;
  CGFloat v19 = v13;
  return CGRectInset(*(CGRect *)&v16, v14, v15);
}

void __57__UICollectionView__pruneCachedPrefetchViewsForVelocity___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    double v6 = *(void **)(a3 + 24);
  }
  else {
    double v6 = 0;
  }
  id v7 = v6;

  if (v7)
  {
    CGFloat v8 = *(void **)(*(void *)(a1 + 32) + 2064);
    if (a3)
    {
      id v9 = *(id *)(a3 + 16);
      CGFloat v10 = *(void **)(a3 + 16);
    }
    else
    {
      id v9 = 0;
      CGFloat v10 = 0;
    }
    id v11 = v10;
    [v11 frame];
    objc_msgSend(v8, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v9);
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGFloat v19 = v18;

    v33.origin.CGFloat x = v13;
    v33.origin.CGFloat y = v15;
    v33.size.CGFloat width = v17;
    v33.size.CGFloat height = v19;
    if (!CGRectIntersectsRect(*(CGRect *)(a1 + 56), v33))
    {
      CGFloat v20 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      if (v20)
      {
        [v20 addObject:a2];
      }
      else
      {
        uint64_t v21 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithObjects:", a2, 0);
        uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8);
        CGRect v23 = *(void **)(v22 + 40);
        *(void *)(v22 + 40) = v21;
      }
      CGRect v24 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      if (v24)
      {
        if (a3) {
          CGRect v25 = *(void **)(a3 + 24);
        }
        else {
          CGRect v25 = 0;
        }
        id v31 = v25;
        objc_msgSend(v24, "addObject:");
      }
      else
      {
        id v26 = objc_alloc(MEMORY[0x1E4F1CA48]);
        if (a3) {
          CGRect v27 = *(void **)(a3 + 24);
        }
        else {
          CGRect v27 = 0;
        }
        id v31 = v27;
        uint64_t v28 = objc_msgSend(v26, "initWithObjects:", v31, 0);
        uint64_t v29 = *(void *)(*(void *)(a1 + 48) + 8);
        CGRect v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 40) = v28;
      }
    }
  }
}

- (void)_reusePrefetchedCell:(id)a3
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = -[_UICollectionViewSubviewManager isViewInReuseQueue:]((uint64_t)self->_subviewManager, v4);
  if (v5 & 1) != 0 || ([v4 _isInUpdateAnimation])
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_reusePrefetchedCell____s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      id v7 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        CGFloat v8 = v7;
        int v9 = 134218754;
        CGFloat v10 = self;
        __int16 v11 = 1024;
        int v12 = v5;
        __int16 v13 = 1024;
        int v14 = [v4 _isInUpdateAnimation];
        __int16 v15 = 2112;
        id v16 = v4;
        _os_log_impl(&dword_1853B0000, v8, OS_LOG_TYPE_ERROR, "[UICV %p] Skipping reuse of prefetched cell for reason isViewInReuseQueue(%d) inUpdateAnimation(%d): %@", (uint8_t *)&v9, 0x22u);
      }
    }
  }
  else
  {
    [(UICollectionView *)self _reuseCell:v4 notifyDidEndDisplaying:0];
  }
}

- (void)_prunePrefetchedViewsAtIndexPaths:(id)a3
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  int v5 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v4, "count"));
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v6 = v4;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v26;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v26 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:*(void *)(*((void *)&v25 + 1) + 8 * v10)];
        int v12 = (void *)v11;
        if (v11) {
          __int16 v13 = *(void **)(v11 + 24);
        }
        else {
          __int16 v13 = 0;
        }
        id v14 = v13;

        if (v14) {
          [v5 addObject:v14];
        }

        ++v10;
      }
      while (v8 != v10);
      uint64_t v15 = [v6 countByEnumeratingWithState:&v25 objects:v30 count:16];
      uint64_t v8 = v15;
    }
    while (v15);
  }

  [(NSMutableDictionary *)self->_prefetchCacheItems removeObjectsForKeys:v6];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v16 = v5;
  uint64_t v17 = [v16 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)v22 != v19) {
          objc_enumerationMutation(v16);
        }
        -[UICollectionView _reusePrefetchedCell:](self, "_reusePrefetchedCell:", *(void *)(*((void *)&v21 + 1) + 8 * i), (void)v21);
      }
      uint64_t v18 = [v16 countByEnumeratingWithState:&v21 objects:v29 count:16];
    }
    while (v18);
  }
}

- (void)_reorderPrefetchCandidates:(id)a3 forPrefetchVelocity:(CGVector)a4 visibleBounds:(CGRect)a5
{
  CGFloat height = a5.size.height;
  CGFloat width = a5.size.width;
  CGFloat y = a5.origin.y;
  CGFloat x = a5.origin.x;
  dCGFloat y = a4.dy;
  dCGFloat x = a4.dx;
  id v12 = a3;
  if (fabs(dx) >= 2.22044605e-16)
  {
    double v13 = *MEMORY[0x1E4F1DAD8];
    double v14 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
    if (fabs(dy) < 2.22044605e-16) {
      goto LABEL_4;
    }
    if (dx <= 0.0)
    {
      if (dx >= 0.0) {
        goto LABEL_10;
      }
      v23.origin.CGFloat x = x;
      v23.origin.CGFloat y = y;
      v23.size.CGFloat width = width;
      v23.size.CGFloat height = height;
      double MinX = CGRectGetMinX(v23);
    }
    else
    {
      v22.origin.CGFloat x = x;
      v22.origin.CGFloat y = y;
      v22.size.CGFloat width = width;
      v22.size.CGFloat height = height;
      double MinX = CGRectGetMaxX(v22);
    }
    double v13 = MinX;
LABEL_10:
    if (dy <= 0.0)
    {
      if (dy >= 0.0)
      {
LABEL_15:
        char v15 = 0;
        goto LABEL_16;
      }
      v25.origin.CGFloat x = x;
      v25.origin.CGFloat y = y;
      v25.size.CGFloat width = width;
      v25.size.CGFloat height = height;
      double MinY = CGRectGetMinY(v25);
    }
    else
    {
      v24.origin.CGFloat x = x;
      v24.origin.CGFloat y = y;
      v24.size.CGFloat width = width;
      v24.size.CGFloat height = height;
      double MinY = CGRectGetMaxY(v24);
    }
    double v14 = MinY;
    goto LABEL_15;
  }
  double v13 = *MEMORY[0x1E4F1DAD8];
  double v14 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
LABEL_4:
  char v15 = 1;
LABEL_16:
  BOOL v18 = [(UICollectionViewLayout *)self->_layout _hasOrthogonalScrollingSections];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __81__UICollectionView__reorderPrefetchCandidates_forPrefetchVelocity_visibleBounds___block_invoke;
  v19[3] = &unk_1E52E5270;
  BOOL v20 = v18;
  v19[4] = self;
  char v21 = v15;
  *(double *)&void v19[5] = dx;
  *(double *)&v19[6] = dy;
  *(double *)&void v19[7] = v13;
  *(double *)&v19[8] = v14;
  [v12 sortUsingComparator:v19];
}

uint64_t __81__UICollectionView__reorderPrefetchCandidates_forPrefetchVelocity_visibleBounds___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2) {
    a2 = (void *)a2[2];
  }
  if (a3) {
    id v4 = *(void **)(a3 + 16);
  }
  else {
    id v4 = 0;
  }
  if (*(unsigned char *)(a1 + 72)) {
    double v5 = -[UICollectionView _layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:](*(void *)(a1 + 32), a2);
  }
  else {
    [a2 frame];
  }
  CGFloat v9 = v5;
  CGFloat v10 = v6;
  CGFloat v11 = v7;
  CGFloat v12 = v8;
  if (*(unsigned char *)(a1 + 72)) {
    double v13 = -[UICollectionView _layoutAttributesFrameAdjustedForOrthogonalScrollingOffset:](*(void *)(a1 + 32), v4);
  }
  else {
    [v4 frame];
  }
  CGFloat v17 = v13;
  CGFloat v18 = v14;
  CGFloat v19 = v15;
  CGFloat v20 = v16;
  if (*(unsigned char *)(a1 + 73))
  {
    double v21 = *(double *)(a1 + 40);
    CGFloat rect = v12;
    if (v21 > 0.0)
    {
      v36.origin.CGFloat x = v9;
      v36.origin.CGFloat y = v10;
      v36.size.CGFloat width = v11;
      v36.size.CGFloat height = v12;
      double MinX = CGRectGetMinX(v36);
      v37.origin.CGFloat x = v17;
      v37.origin.CGFloat y = v18;
      v37.size.CGFloat width = v19;
      v37.size.CGFloat height = v20;
      if (MinX <= CGRectGetMinX(v37))
      {
        v38.origin.CGFloat x = v9;
        v38.origin.CGFloat y = v10;
        v38.size.CGFloat width = v11;
        v38.size.CGFloat height = rect;
        double v23 = CGRectGetMinX(v38);
        v39.origin.CGFloat x = v17;
        v39.origin.CGFloat y = v18;
        v39.size.CGFloat width = v19;
        v39.size.CGFloat height = v20;
        double v24 = CGRectGetMinX(v39);
        goto LABEL_25;
      }
      return 1;
    }
    if (v21 < 0.0)
    {
      v40.origin.CGFloat x = v9;
      v40.origin.CGFloat y = v10;
      v40.size.CGFloat width = v11;
      v40.size.CGFloat height = v12;
      double v28 = CGRectGetMinX(v40);
      v41.origin.CGFloat x = v17;
      v41.origin.CGFloat y = v18;
      v41.size.CGFloat width = v19;
      v41.size.CGFloat height = v20;
      if (v28 < CGRectGetMinX(v41)) {
        return 1;
      }
      v42.origin.CGFloat x = v9;
      v42.origin.CGFloat y = v10;
      v42.size.CGFloat width = v11;
      v42.size.CGFloat height = rect;
      double v29 = CGRectGetMinX(v42);
      v43.origin.CGFloat x = v17;
      v43.origin.CGFloat y = v18;
      v43.size.CGFloat width = v19;
      v43.size.CGFloat height = v20;
      if (v29 <= CGRectGetMinX(v43)) {
        return 0;
      }
      return -1;
    }
    double v30 = *(double *)(a1 + 48);
    if (v30 > 0.0)
    {
      v44.origin.CGFloat x = v9;
      v44.origin.CGFloat y = v10;
      v44.size.CGFloat width = v11;
      v44.size.CGFloat height = v12;
      double MinY = CGRectGetMinY(v44);
      v45.origin.CGFloat x = v17;
      v45.origin.CGFloat y = v18;
      v45.size.CGFloat width = v19;
      v45.size.CGFloat height = v20;
      if (MinY <= CGRectGetMinY(v45))
      {
        v46.origin.CGFloat x = v9;
        v46.origin.CGFloat y = v10;
        v46.size.CGFloat width = v11;
        v46.size.CGFloat height = rect;
        double v23 = CGRectGetMinY(v46);
        v47.origin.CGFloat x = v17;
        v47.origin.CGFloat y = v18;
        v47.size.CGFloat width = v19;
        v47.size.CGFloat height = v20;
        double v24 = CGRectGetMinY(v47);
LABEL_25:
        if (v23 < v24) {
          return -1;
        }
        return 0;
      }
      return 1;
    }
    if (v30 < 0.0)
    {
      v48.origin.CGFloat x = v9;
      v48.origin.CGFloat y = v10;
      v48.size.CGFloat width = v11;
      v48.size.CGFloat height = v12;
      double MaxY = CGRectGetMaxY(v48);
      v49.origin.CGFloat x = v17;
      v49.origin.CGFloat y = v18;
      v49.size.CGFloat width = v19;
      v49.size.CGFloat height = v20;
      if (MaxY > CGRectGetMaxY(v49)) {
        return -1;
      }
      v50.origin.CGFloat x = v9;
      v50.origin.CGFloat y = v10;
      v50.size.CGFloat width = v11;
      v50.size.CGFloat height = rect;
      double v34 = CGRectGetMaxY(v50);
      v51.origin.CGFloat x = v17;
      v51.origin.CGFloat y = v18;
      v51.size.CGFloat width = v19;
      v51.size.CGFloat height = v20;
      if (v34 < CGRectGetMaxY(v51)) {
        return 1;
      }
    }
  }
  else
  {
    UIDistanceBetweenPointAndRect(*(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 64), v9, v10, v11, v12);
    double v26 = v25;
    UIDistanceBetweenPointAndRect(*(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 64), v17, v18, v19, v20);
    if (v26 > v27) {
      return 1;
    }
    if (v26 < v27) {
      return -1;
    }
  }
  return 0;
}

- (CGVector)_unitVectorForVector:(CGVector)a3
{
  BOOL v3 = a3.dx < 0.0;
  if (a3.dx > 0.0) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  if (v3) {
    double v4 = -1.0;
  }
  BOOL v5 = a3.dy < 0.0;
  if (a3.dy > 0.0) {
    double v6 = 1.0;
  }
  else {
    double v6 = 0.0;
  }
  if (v5) {
    double v6 = -1.0;
  }
  result.dCGFloat y = v6;
  result.dCGFloat x = v4;
  return result;
}

- (void)_performReloadPrefetchIfNeeded
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x20000000000000) != 0
    && [(UICollectionView *)self _prefetchingAllowed])
  {
    [(UICollectionView *)self _visibleBounds];
    CGFloat x = v34.origin.x;
    CGFloat y = v34.origin.y;
    CGFloat width = v34.size.width;
    CGFloat height = v34.size.height;
    CGFloat v7 = CGRectGetWidth(v34) * -0.5;
    v35.origin.CGFloat x = x;
    v35.origin.CGFloat y = y;
    v35.size.CGFloat width = width;
    v35.size.CGFloat height = height;
    CGFloat v8 = CGRectGetHeight(v35) * -0.5;
    v36.origin.CGFloat x = x;
    v36.origin.CGFloat y = y;
    v36.size.CGFloat width = width;
    v36.size.CGFloat height = height;
    CGRect v37 = CGRectInset(v36, v7, v8);
    CGFloat v9 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 1, v37.origin.x, v37.origin.y, v37.size.width, v37.size.height);
    [(UICollectionView *)self _beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v10 = v9;
    uint64_t v11 = [v10 countByEnumeratingWithState:&v28 objects:v32 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)v29;
      id v27 = v10;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v29 != v13) {
            objc_enumerationMutation(v10);
          }
          double v15 = *(void **)(*((void *)&v28 + 1) + 8 * v14);
          double v16 = [v15 indexPath];
          CGFloat v17 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:]((id **)self->_subviewManager, (uint64_t)v16);

          if (!v17)
          {
            CGFloat v18 = [(NSMutableDictionary *)self->_prefetchCacheItems objectForKeyedSubscript:v16];

            if (!v18)
            {
              CGFloat v19 = -[_UICollectionViewPrefetchItem initWithAttributes:]((id *)[_UICollectionViewPrefetchItem alloc], v15);
              CGFloat v20 = v19;
              if (v19)
              {
                id v21 = v19[2];
                id v22 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v16 withLayoutAttributes:v21 applyAttributes:0 isFocused:0 notify:0];
                -[_UIHomeAffordanceObservationRecord setLegacyViewServiceSessionIdentifier:]((uint64_t)v20, v22);

                id v23 = v20[3];
              }
              else
              {
                id v25 = [(UICollectionView *)self _createPreparedCellForItemAtIndexPath:v16 withLayoutAttributes:0 applyAttributes:0 isFocused:0 notify:0];
                -[_UIHomeAffordanceObservationRecord setLegacyViewServiceSessionIdentifier:](0, v25);

                id v23 = 0;
              }
              id v24 = v23;
              [v24 _setHiddenForReuse:1];

              [(NSMutableDictionary *)self->_prefetchCacheItems setObject:v20 forKeyedSubscript:v16];
              id v10 = v27;
            }
          }

          ++v14;
        }
        while (v12 != v14);
        uint64_t v26 = [v10 countByEnumeratingWithState:&v28 objects:v32 count:16];
        uint64_t v12 = v26;
      }
      while (v26);
    }

    [(UICollectionView *)self _endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
  }
}

void __47__UICollectionView__resetPrefetchedCachedCells__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = *(id *)(a3 + 24);
    if (v4)
    {
      id v5 = v4;
      if (([v4 _isInUpdateAnimation] & 1) == 0) {
        [*(id *)(a1 + 32) addObject:v5];
      }
      id v4 = v5;
    }
  }
  else
  {
    id v4 = 0;
  }
}

uint64_t __45__UICollectionView__resetAllPrefetchContexts__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_resetPrefetchingContext:");
}

void __70__UICollectionView__updatePrefetchVelocityIntegratorForVisibleBounds___block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _resetAllPrefetchContexts];
}

- (void)_updateCycleIdleUntil:(unint64_t)a3
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

  if (WeakRetained && [(UICollectionView *)self _prefetchingAllowed])
  {
    uint64_t v6 = mach_absolute_time();
    unint64_t v7 = v6;
    if (a3 >= v6) {
      unint64_t v8 = a3 - v6;
    }
    else {
      unint64_t v8 = 0;
    }
    CGFloat v9 = (void *)_UISetCurrentFallbackEnvironment(self);
    if ([(NSMutableDictionary *)self->_prefetchCacheItems count])
    {
      uint64_t v18 = 0;
      CGFloat v19 = &v18;
      uint64_t v20 = 0x3032000000;
      id v21 = __Block_byref_object_copy__41;
      id v22 = __Block_byref_object_dispose__41;
      id v23 = 0;
      [(UICollectionView *)self _beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
      prefetchCacheItems = self->_prefetchCacheItems;
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      void v17[2] = __42__UICollectionView__updateCycleIdleUntil___block_invoke;
      v17[3] = &unk_1E52E5310;
      void v17[4] = self;
      void v17[5] = &v18;
      v17[6] = a3;
      [(NSMutableDictionary *)prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v17];
      [(UICollectionView *)self _endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
      if (v19[5])
      {
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &_updateCycleIdleUntil____s_category);
        if (*(unsigned char *)CategoryCachedImpl)
        {
          double v15 = *(NSObject **)(CategoryCachedImpl + 8);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            uint64_t v16 = v19[5];
            *(_DWORD *)long long buf = 134218242;
            id v25 = self;
            __int16 v26 = 2112;
            uint64_t v27 = v16;
            _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_ERROR, "[UICV %p] Pruning invalid prefetch items at index paths: %@", buf, 0x16u);
          }
        }
        [(UICollectionView *)self _prunePrefetchedViewsAtIndexPaths:v19[5]];
      }
      _Block_object_dispose(&v18, 8);
    }
    uint64_t v12 = mach_absolute_time();
    if (v7 < a3 && (float)((float)(v12 - v7) / (float)v8) <= 0.1)
    {
      uint64_t v13 = self->_activeOrthogonalPrefetchingContext;
      uint64_t v14 = v13;
      if (v13 && [(NSMutableArray *)v13->_items count]) {
        [(UICollectionView *)self _prefetchItemsForPrefetchingContext:v14];
      }
      else {
        [(UICollectionView *)self _updatePrefetchedCells:1];
      }
    }
    _UIRestorePreviousFallbackEnvironment(v9);
  }
}

uint64_t __42__UICollectionView__updateCycleIdleUntil___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (([*(id *)(a1 + 32) _updatePrefetchItemIfNeeded:a3 forIndexPath:a2 withLayoutAttributes:0 willDisplay:0] & 1) == 0)
  {
    unint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (v7)
    {
      [v7 addObject:a2];
    }
    else
    {
      uint64_t v8 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithObjects:", a2, 0);
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      id v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 40) = v8;
    }
  }
  uint64_t result = mach_absolute_time();
  if (result >= *(void *)(a1 + 48)) {
    *a4 = 1;
  }
  return result;
}

BOOL __77__UICollectionView__saveContentOffsetRestorationAnchorIfNecessaryUsingModel___block_invoke(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 indexPath];
  if (*(void *)(*(void *)(a1 + 32) + 2192)
    && +[UIView areAnimationsEnabled])
  {
    if (-[UICollectionViewUpdate hasMovedItemAtOldIndexPath:](*(void *)(*(void *)(a1 + 32) + 2192), v3))
    {
      BOOL v4 = 0;
    }
    else
    {
      uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 2192) finalIndexPathForInitialIndexPath:v3];
      BOOL v4 = v6 != 0;
    }
  }
  else
  {
    BOOL v4 = 1;
  }

  return v4;
}

- (id)_layoutAttributesClosestToReferencePoint:(uint64_t)a3 amongCandidates:(void *)a4 onAxis:(double)a5 shouldConsiderBlock:(double)a6
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v10 = a4;
  if (a1)
  {
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    id obj = a2;
    uint64_t v11 = [obj countByEnumeratingWithState:&v34 objects:v38 count:16];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = 0;
      uint64_t v14 = *(void *)v35;
      double v15 = (char *)(v10 + 2);
      double v16 = 1.79769313e308;
      do
      {
        uint64_t v17 = 0;
        uint64_t v31 = v12;
        do
        {
          if (*(void *)v35 != v14) {
            objc_enumerationMutation(obj);
          }
          uint64_t v18 = *(void **)(*((void *)&v34 + 1) + 8 * v17);
          if (v10[2](v10, v18))
          {
            id v19 = (id)[v18 indexPath];
            [v18 frame];
            double v22 = _UICollectionLayoutDistanceBetweenPointsOnAxis(a3, a5, a6, v20, v21);
            double v23 = v22;
            if (v22 < v16
              || vabdd_f64(v22, v16) <= 0.001
              && ((id v25 = (id)[v13 indexPath],
                   __int16 v26 = v15,
                   uint64_t v27 = [v19 section],
                   BOOL v28 = v27 < [v25 section],
                   double v15 = v26,
                   uint64_t v12 = v31,
                   v28)
               || (uint64_t v29 = [v19 item], v29 < objc_msgSend(v25, "item"))))
            {
              id v24 = v18;

              double v16 = v23;
              uint64_t v13 = v24;
            }
          }
          ++v17;
        }
        while (v12 != v17);
        uint64_t v12 = [obj countByEnumeratingWithState:&v34 objects:v38 count:16];
      }
      while (v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

BOOL __70__UICollectionView__rebaseContentOffsetAnchorOrScrollTargetForUpdate___block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (-[UICollectionViewUpdate hasMovedItemAtOldIndexPath:](*(void *)(a1 + 32), v3))
  {
    BOOL v4 = 1;
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) finalIndexPathForInitialIndexPath:v3];
    BOOL v4 = v5 == 0;
  }
  return v4;
}

- (double)_contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets:(double)a3 shouldApply:(double)a4
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0.0;
  }
  if (!a2)
  {
    uint64_t v33 = [MEMORY[0x1E4F28B00] currentHandler];
    [v33 handleFailureInMethod:sel__contentOffsetForRestoringPositionToCurrentRestorationAnchorWithContentInsets_shouldApply_, a1, @"UICollectionView.m", 5351, @"Invalid parameter not satisfying: %@", @"shouldApply != NULL" object file lineNumber description];
  }
  [(id)a1 contentOffset];
  double v9 = v8;
  double v11 = v10;
  *a2 = 0;
  uint64_t v12 = [*(id *)(a1 + 2064) _layoutAxis];
  if ((unint64_t)(v12 - 1) <= 1)
  {
    uint64_t v13 = v12;
    if (([(id)a1 isScrollAnimating] & 1) == 0
      && ((dyld_program_sdk_at_least() & 1) != 0
       || ([(id)a1 isDecelerating] & 1) == 0 && (objc_msgSend((id)a1, "isTracking") & 1) == 0))
    {
      if (*(void *)(a1 + 2192)
        && (dyld_program_sdk_at_least() & 1) == 0
        && [*(id *)(*(void *)(a1 + 2192) + 8) count])
      {
        unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A20);
        if ((*(unsigned char *)CategoryCachedImpl & 1) == 0) {
          return v9;
        }
        double v15 = *(NSObject **)(CategoryCachedImpl + 8);
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          return v9;
        }
        *(_DWORD *)long long buf = 134217984;
        uint64_t v37 = a1;
        double v16 = "_contentOffsetForRestoringPosition: cv == %p; Not restoring -- have in-flight update";
        uint64_t v17 = v15;
        uint32_t v18 = 12;
      }
      else
      {
        uint64_t v19 = *(void *)(a1 + 2184);
        if (v19
          && (-[UICollectionViewData _isIndexPathValid:validateItemCounts:](v19, *(void **)(a1 + 2912), 1) & 1) != 0)
        {
          double v20 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(a1 + 2184), *(void **)(a1 + 2912));
          [v20 frame];
          double v23 = _UIPointValueForAxis(v13, v21, v22);
          double v24 = v23 + _UIPointValueForAxis(v13, *(double *)(a1 + 2920), *(double *)(a1 + 2928));
          if (v13 == 2) {
            double v25 = a3;
          }
          else {
            double v25 = a4;
          }
          double v26 = _UISetPointValueForAxis(v13, v9, v11, v24 - v25);
          double v28 = v27;
          uint64_t v29 = [(id)a1 _isAutomaticContentOffsetAdjustmentEnabled];
          [(id)a1 _setAutomaticContentOffsetAdjustmentEnabled:1];
          -[UICollectionViewData collectionViewContentRect](*(void *)(a1 + 2184));
          [(id)a1 _adjustedContentOffsetForContentOffset:0 contentSize:v26 skipsAdjustmentIfScrolling:v28];
          double v9 = v30;
          [(id)a1 _setAutomaticContentOffsetAdjustmentEnabled:v29];
          *a2 = 1;

          return v9;
        }
        unint64_t v31 = __UILogGetCategoryCachedImpl("UICollectionView", &qword_1EB258A28);
        if ((*(unsigned char *)v31 & 1) == 0) {
          return v9;
        }
        long long v34 = *(NSObject **)(v31 + 8);
        if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          return v9;
        }
        uint64_t v35 = *(void *)(a1 + 2912);
        *(_DWORD *)long long buf = 134218242;
        uint64_t v37 = a1;
        __int16 v38 = 2112;
        uint64_t v39 = v35;
        double v16 = "_contentOffsetForRestoringPosition: cv == %p; the anchor %@ is no longer valid";
        uint64_t v17 = v34;
        uint32_t v18 = 22;
      }
      _os_log_impl(&dword_1853B0000, v17, OS_LOG_TYPE_ERROR, v16, buf, v18);
    }
  }
  return v9;
}

- (double)_frameOfElementAtScrollingTargetIndexPath:(uint64_t)a1
{
  if (!a1) {
    return 0.0;
  }
  uint64_t v4 = [a2 section];
  if ([a2 item] == 0x7FFFFFFFFFFFFFFFLL)
  {
    [*(id *)(a1 + 2064) _frameForScrollingToFirstElementInSectionAtIndex:v4];
    double v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
  }
  else
  {
    double v6 = *MEMORY[0x1E4F1DB20];
    CGFloat v8 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
    CGFloat v10 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
    CGFloat v12 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  }
  v17.origin.CGFloat x = v6;
  v17.origin.CGFloat y = v8;
  v17.size.CGFloat width = v10;
  v17.size.CGFloat height = v12;
  if (CGRectIsNull(v17))
  {
    uint64_t v13 = [a2 item];
    if (v13 < -[UICollectionViewData numberOfItemsInSection:](*(void *)(a1 + 2184), v4))
    {
      uint64_t v14 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(a1 + 2184), a2);
      [v14 frame];
      double v6 = v15;
    }
  }
  return v6;
}

- (double)_clampedContentOffset:(double)a3 forScrollableAreaGivenContentSize:(double)a4 inScrollView:(double)a5
{
  id v10 = a2;
  double v11 = v10;
  if (a1)
  {
    if (fabs(a5 * a6) >= 2.22044605e-16)
    {
      objc_msgSend(v10, "_maximumContentOffsetForContentSize:", a5, a6);
      double v13 = v12;
      [v11 _minimumContentOffset];
      if (a3 <= v13) {
        double v15 = a3;
      }
      else {
        double v15 = v13;
      }
      if (v15 >= v14) {
        a3 = v15;
      }
      else {
        a3 = v14;
      }
    }
  }
  else
  {
    a3 = 0.0;
  }

  return a3;
}

- (id)_storeScrollingTargetInfoForIndexPath:(void *)a3 frame:(double)a4 scrollPosition:(double)a5 additionalInsets:(double)a6
{
  if (result)
  {
    if (a2)
    {
      double v21 = result;
      objc_msgSend(result, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:itemFrame:containingScrollView:clampToScrollableArea:", a2, a3, result, 0, a8, a9, a10, a11, a4, a5, a6, a7);
      double v26 = v23;
      double v27 = v22;
      objc_storeStrong(v21 + 367, a2);
      v21[370] = a3;
      *((double *)v21 + 375) = a8;
      *((double *)v21 + 376) = a9;
      *((double *)v21 + 377) = a10;
      *((double *)v21 + 378) = a11;
      *((double *)v21 + 371) = a4;
      *((double *)v21 + 372) = a5;
      *((double *)v21 + 373) = a6;
      *((double *)v21 + 374) = a7;
      uint64_t result = (id *)[v21 _contentInsetIncludingDecorations];
      *((double *)v21 + 368) = v27 - a4 + v24;
      *((double *)v21 + 369) = v26 - a5 + v25;
    }
  }
  return result;
}

void __43__UICollectionView__updateVisibleCellsNow___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v5 = *(void **)(a1 + 32);
  id v6 = [a5 _layoutAttributes];
  [v5 addObject:v6];
}

uint64_t __43__UICollectionView__updateVisibleCellsNow___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = -[UICollectionViewLayoutAttributes __indexPath](a2);
  double v5 = -[UICollectionViewLayoutAttributes __indexPath](a3);
  return [v4 compare:v5];
}

void __43__UICollectionView__updateVisibleCellsNow___block_invoke_499(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  _UIIsPrivateMainBundle();
  if (dyld_program_sdk_at_least())
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    -[NSObject handleFailureInMethod:object:file:lineNumber:description:](v4, "handleFailureInMethod:object:file:lineNumber:description:", *(void *)(a1 + 40), v3, *(void *)(a1 + 32));
LABEL_3:

    goto LABEL_7;
  }
  if (os_variant_has_internal_diagnostics())
  {
    uint64_t v4 = __UIFaultDebugAssertLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412546;
      id v9 = v3;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_fault_impl(&dword_1853B0000, v4, OS_LOG_TYPE_FAULT, "Expected dequeued view to be returned to the collection view in preparation for display. When the collection view's data source is asked to provide a view for a given index path, ensure that a single view is dequeued and returned to the collection view. Avoid dequeuing views without a request from the collection view. For retrieving an existing view in the collection view, use -[UICollectionView cellForItemAtIndexPath:] or -[UICollectionView supplementaryViewForElementKind:atIndexPath:]. Dequeued view: %@; Collection view: %@  This will become an assert "
        "in a future version.",
        buf,
        0x16u);
    }
    goto LABEL_3;
  }
  double v5 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIInternalPreference_CollectionViewCellPrefetchingMode_block_invoke_6___s_category)+ 8);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412546;
    id v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v6;
    _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_ERROR, "Expected dequeued view to be returned to the collection view in preparation for display. When the collection view's data source is asked to provide a view for a given index path, ensure that a single view is dequeued and returned to the collection view. Avoid dequeuing views without a request from the collection view. For retrieving an existing view in the collection view, use -[UICollectionView cellForItemAtIndexPath:] or -[UICollectionView supplementaryViewForElementKind:atIndexPath:]. Dequeued view: %@; Collection view: %@  This will become an assert in a future version.",
      buf,
      0x16u);
  }
LABEL_7:
  [v3 _setHiddenForReuse:1];
}

- (void)_incrementRotationAnimationCount
{
}

- (void)_decrementRotationAnimationCount
{
  int64_t v2 = self->_rotationAnimationCount - 1;
  self->_rotationAnimationCount = v2;
  if (!v2)
  {
    self->_rotationBoundsOffset = (CGPoint)*MEMORY[0x1E4F1DAD8];
    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
    [(UIScrollView *)self contentOffset];
    self->_lastLayoutOffset.CGFloat x = v4;
    self->_lastLayoutOffset.CGFloat y = v5;
  }
}

- (void)_animateVisibleView:(id)a3 withLayoutAttributes:(id)a4 completionHandler:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  [(UICollectionView *)self _incrementRotationAnimationCount];
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x2020000000;
  char v25 = 0;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __79__UICollectionView__animateVisibleView_withLayoutAttributes_completionHandler___block_invoke;
  v19[3] = &unk_1E52E53D0;
  id v20 = v8;
  id v11 = v9;
  double v22 = self;
  double v23 = v24;
  id v21 = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  v14[2] = __79__UICollectionView__animateVisibleView_withLayoutAttributes_completionHandler___block_invoke_2;
  v14[3] = &unk_1E52E53F8;
  uint32_t v18 = v24;
  id v12 = v20;
  id v15 = v12;
  id v13 = v10;
  double v16 = self;
  id v17 = v13;
  +[UIView animateWithDuration:v19 animations:v14 completion:0.0];

  _Block_object_dispose(v24, 8);
}

void __79__UICollectionView__animateVisibleView_withLayoutAttributes_completionHandler___block_invoke(uint64_t a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = *(id *)(a1 + 32);
    [*(id *)(a1 + 40) center];
    objc_msgSend(v2, "setPosition:");
    [v2 bounds];
    double v4 = v3;
    double v6 = v5;
    [*(id *)(a1 + 40) size];
    objc_msgSend(v2, "setBounds:", v4, v6, v7, v8);
    [*(id *)(a1 + 40) alpha];
    *(float *)&double v9 = v9;
    [v2 setOpacity:v9];
    id v10 = *(void **)(a1 + 40);
    if (v10) {
      [v10 transform3D];
    }
    else {
      memset(v17, 0, sizeof(v17));
    }
    [v2 setTransform:v17];
  }
  else
  {
    [*(id *)(a1 + 40) alpha];
    if (v11 == 0.0)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        int v12 = [*(id *)(a1 + 32) _disableRasterizeInAnimations] ^ 1;
        *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
      }
      else
      {
        int v12 = 1;
      }
      if (!dyld_program_sdk_at_least() && v12)
      {
        id v13 = [*(id *)(a1 + 32) layer];
        if (([v13 shouldRasterize] & 1) == 0) {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
        }
        [v13 setShouldRasterize:1];
        [*(id *)(a1 + 48) _currentScreenScale];
        objc_msgSend(v13, "setRasterizationScale:");
      }
    }
    uint64_t v15 = *(void *)(a1 + 40);
    double v14 = *(void **)(a1 + 48);
    uint64_t v16 = *(void *)(a1 + 32);
    [v14 _applyLayoutAttributes:v15 toView:v16];
  }
}

uint64_t __79__UICollectionView__animateVisibleView_withLayoutAttributes_completionHandler___block_invoke_2(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    id v2 = [*(id *)(a1 + 32) layer];
    [v2 setShouldRasterize:0];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  double v4 = *(void **)(a1 + 40);
  return [v4 _decrementRotationAnimationCount];
}

uint64_t __60__UICollectionView__removeVisibleViews_fadeForBoundsChange___block_invoke_507(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[5] + 16))(a1[5], a1[6], a1[4]);
}

uint64_t __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _incrementRotationAnimationCount];
}

uint64_t __88__UICollectionView__updateLayoutAttributesForExistingVisibleViewsFadingForBoundsChange___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _decrementRotationAnimationCount];
}

- (void)_prepareClonedViewsForTransitionLayout
{
  id v2 = self;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  collectionViewData = self->_collectionViewData;
  if (collectionViewData) {
    collectionViewData = (UICollectionViewData *)collectionViewData->_clonedCellAttributes;
  }
  double v4 = collectionViewData;
  double v5 = v4;
  double v6 = (UICollectionViewData *)MEMORY[0x1E4F1CBF0];
  if (v4) {
    double v7 = v4;
  }
  else {
    double v7 = (UICollectionViewData *)MEMORY[0x1E4F1CBF0];
  }
  double v8 = v7;

  double v9 = v2->_collectionViewData;
  if (v9) {
    double v9 = (UICollectionViewData *)v9->_clonedSupplementaryAttributes;
  }
  id v10 = v9;
  double v11 = v10;
  if (v10) {
    int v12 = v10;
  }
  else {
    int v12 = v6;
  }
  id v13 = v12;

  double v14 = v2->_collectionViewData;
  if (v14) {
    double v14 = (UICollectionViewData *)v14->_clonedDecorationAttributes;
  }
  uint64_t v15 = v14;
  uint64_t v16 = v15;
  if (v15) {
    id v17 = v15;
  }
  else {
    id v17 = v6;
  }
  uint32_t v18 = v17;

  if (!v2->_clonedCellsDict)
  {
    uint64_t v19 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA60]), "initWithCapacity:", -[UICollectionViewData count](v8, "count"));
    clonedCellsDict = v2->_clonedCellsDict;
    v2->_clonedCellsDict = (NSMutableDictionary *)v19;

    id v21 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    clonedSupplementaryViewsDict = v2->_clonedSupplementaryViewsDict;
    v2->_clonedSupplementaryViewsDict = v21;

    double v23 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    clonedDecorationViewsDict = v2->_clonedDecorationViewsDict;
    v2->_clonedDecorationViewsDict = v23;
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __58__UICollectionView__prepareClonedViewsForTransitionLayout__block_invoke;
  aBlock[3] = &unk_1E52E54C0;
  void aBlock[4] = v2;
  char v25 = (void (**)(void *, NSMutableDictionary *, void))_Block_copy(aBlock);
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  CGRect v42 = v13;
  CGRect v43 = v8;
  double v26 = [(UICollectionViewData *)v8 arrayByAddingObjectsFromArray:v13];
  CGRect v41 = v18;
  double v27 = [v26 arrayByAddingObjectsFromArray:v18];

  id obj = v27;
  uint64_t v28 = [v27 countByEnumeratingWithState:&v45 objects:v50 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v46;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v46 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v32 = *(void *)(*((void *)&v45 + 1) + 8 * v31);
        if (v32)
        {
          __int16 v33 = *(_WORD *)(v32 + 288);
          if (v33)
          {
            v25[2](v25, v2->_clonedCellsDict, *(void *)(*((void *)&v45 + 1) + 8 * v31));
            goto LABEL_32;
          }
          if ((v33 & 3) != 0) {
            long long v34 = &OBJC_IVAR___UICollectionView__clonedDecorationViewsDict;
          }
          else {
            long long v34 = &OBJC_IVAR___UICollectionView__clonedSupplementaryViewsDict;
          }
        }
        else
        {
          long long v34 = &OBJC_IVAR___UICollectionView__clonedDecorationViewsDict;
        }
        uint64_t v35 = v2;
        id v36 = *(id *)((char *)&v2->super.super.super.super.isa + *v34);
        uint64_t v37 = -[UIBarButtonItemGroup _items]((id *)v32);
        __int16 v38 = [v36 objectForKeyedSubscript:v37];

        if (!v38)
        {
          __int16 v38 = [MEMORY[0x1E4F1CA60] dictionary];
          uint64_t v39 = -[UIBarButtonItemGroup _items]((id *)v32);
          [v36 setObject:v38 forKeyedSubscript:v39];
        }
        v25[2](v25, v38, v32);

        id v2 = v35;
LABEL_32:
        ++v31;
      }
      while (v29 != v31);
      uint64_t v40 = [obj countByEnumeratingWithState:&v45 objects:v50 count:16];
      uint64_t v29 = v40;
    }
    while (v40);
  }
}

void __58__UICollectionView__prepareClonedViewsForTransitionLayout__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  double v6 = a3;
  double v7 = -[UICollectionViewLayoutAttributes __indexPath](v6);
  uint64_t v8 = [v5 objectForKeyedSubscript:v7];
  if (!v8)
  {
    id v10 = [UICollectionReusableView alloc];
    double v11 = *MEMORY[0x1E4F1DAD8];
    double v12 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
    [v6 size];
    uint64_t v15 = -[UICollectionReusableView initWithFrame:](v10, "initWithFrame:", v11, v12, v13, v14);
    [(UIView *)v15 setAutoresizingMask:0];
    [(UICollectionReusableView *)v15 setTranslatesAutoresizingMaskIntoConstraints:1];
    [(UIView *)v15 _setHostsLayoutEngine:1];
    [(UICollectionReusableView *)v15 _markAsDequeued];
    [v5 setObject:v15 forKeyedSubscript:v7];
    [*(id *)(a1 + 32) _applyLayoutAttributes:v6 toView:v15];
    uint64_t v16 = [v5 objectForKeyedSubscript:v7];
    *(void *)(*(void *)(a1 + 32) + 2640) |= 0x40000000uLL;
    id v17 = [v16 snapshotViewAfterScreenUpdates:0];
    [v16 bounds];
    objc_msgSend(v17, "setBounds:");
    [v17 setAutoresizingMask:18];
    [(UIView *)v15 addSubview:v17];
    *(void *)(*(void *)(a1 + 32) + 2640) &= ~0x40000000uLL;
    id v18 = *(id *)(*(void *)(a1 + 32) + 2064);
    uint64_t v19 = v15;
    id v20 = v19;
    if (!v19 || !v18) {
      goto LABEL_10;
    }
    uint64_t v21 = [(UIView *)v19 effectiveUserInterfaceLayoutDirection];
    if (v21 == [v18 developmentLayoutDirection])
    {
      if (![(UIView *)v20 _flipsHorizontalAxis])
      {
LABEL_10:

        v25[0] = MEMORY[0x1E4F143A8];
        v25[1] = 3221225472;
        v25[2] = __58__UICollectionView__prepareClonedViewsForTransitionLayout__block_invoke_2;
        v25[3] = &unk_1E52DD450;
        uint64_t v23 = *(void *)(a1 + 32);
        id v26 = v16;
        uint64_t v27 = v23;
        double v9 = v20;
        uint64_t v28 = v9;
        uint64_t v29 = v6;
        id v24 = v16;
        +[UIView performWithoutAnimation:v25];

        goto LABEL_11;
      }
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = [v18 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [(UIView *)v20 _setFlipsHorizontalAxis:v22];
    goto LABEL_10;
  }
  double v9 = (UICollectionReusableView *)v8;
  [*(id *)(a1 + 32) _applyLayoutAttributes:v6 toView:v8];
LABEL_11:
}

uint64_t __58__UICollectionView__prepareClonedViewsForTransitionLayout__block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = *(void **)(a1 + 40);
    return objc_msgSend(v3, "insertSubview:belowSubview:", v2);
  }
  else
  {
    uint64_t v5 = [*(id *)(a1 + 56) zIndex];
    return [v1 _addControlledSubview:v2 atZIndex:v5 forced:0 initialAttributes:0];
  }
}

void __65__UICollectionView__updateFocusAfterLoadingVisibleCellsIfNeeded___block_invoke(uint64_t a1)
{
  uint64_t v2 = -[_UICollectionViewFocusedItemState copyWithReusableView:](*(void **)(a1 + 40), 0);
  [*(id *)(a1 + 32) _setFocusedItemState:v2];

  double v4 = [[_UIFocusUpdateRequest alloc] initWithEnvironment:*(void *)(a1 + 32)];
  [(_UIFocusUpdateRequest *)v4 setAllowsFocusingCurrentItem:1];
  [(_UIFocusUpdateRequest *)v4 setScrollIfNecessary:(*(void *)(*(void *)(a1 + 32) + 2640) >> 42) & 1];
  uint64_t v3 = [*(id *)(a1 + 32) _focusSystem];
  [v3 _requestFocusUpdate:v4];
  [v3 updateFocusIfNeeded];
}

uint64_t __78__UICollectionView__setUpCompletionHandlerForAnimationInterruptionIfNecessary__block_invoke(uint64_t result, char a2)
{
  if ((a2 & 1) == 0) {
    return [*(id *)(result + 32) _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  }
  return result;
}

- (void)_ensureViewsAreLoadedInRect:(CGRect)a3
{
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  *((void *)&self->_collectionViewFlags + 1) |= 0x200000000uLL;
  self->_visibleBounds = a3;
  [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:0];
  [(UIView *)self layoutBelowIfNeeded];
  *((void *)p_collectionViewFlags + 1) &= ~0x200000000uLL;
}

- (void)_setVisibleRectEdgeInsets:(UIEdgeInsets)a3
{
  self->_visibleRectInsets = a3;
}

- (UIEdgeInsets)_visibleRectEdgeInsets
{
  double top = self->_visibleRectInsets.top;
  double left = self->_visibleRectInsets.left;
  bottouint64_t m = self->_visibleRectInsets.bottom;
  double right = self->_visibleRectInsets.right;
  result.double right = right;
  result.bottouint64_t m = bottom;
  result.double left = left;
  result.double top = top;
  return result;
}

- (BOOL)_allowsVisibleCellUpdatesDuringUpdateAnimations
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 57) & 1;
}

- (BOOL)_allowsVisibleViewUpdatesDuringLayoutTransitions
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 58) & 1;
}

- (void)_setAllowsVisibleViewUpdatesDuringLayoutTransitions:(BOOL)a3
{
  uint64_t v3 = 0x400000000000000;
  if (!a3) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFBFFFFFFFFFFFFFFLL | v3;
}

uint64_t __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) insertSubview:*(void *)(a1 + 40) belowSubview:*(void *)(a1 + 48)];
}

void __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_3(uint64_t a1)
{
  [*(id *)(a1 + 32) _setLayoutAttributes:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(*(void *)(a1 + 48) + 2064);
  uint64_t v3 = *(void **)(a1 + 32);
  id v8 = v2;
  id v4 = v3;
  if (v8) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    uint64_t v6 = [v4 effectiveUserInterfaceLayoutDirection];
    if (v6 == [v8 developmentLayoutDirection])
    {
      if (![v4 _flipsHorizontalAxis]) {
        goto LABEL_10;
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = [v8 _wantsRightToLeftHorizontalMirroringIfNeeded];
    }
    [v4 _setFlipsHorizontalAxis:v7];
  }
LABEL_10:
}

uint64_t __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_4(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_5(uint64_t a1, void *a2)
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_6;
  v5[3] = &unk_1E52DC3D0;
  char v8 = *(unsigned char *)(a1 + 48);
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v4 = a2;
  +[UIView performWithoutAnimation:v5];
  v4[2](v4, 1);
}

uint64_t __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_6(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v3 = *(void **)(a1 + 40);
  if (v2)
  {
    [v3 frame];
    id v4 = *(void **)(a1 + 32);
    return objc_msgSend(v4, "setFrame:");
  }
  else
  {
    [v3 center];
    id v6 = *(void **)(a1 + 32);
    return objc_msgSend(v6, "setCenter:");
  }
}

uint64_t __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_7(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

uint64_t __198__UICollectionView__viewAnimationsForView_startingLayoutAttributes_endingLayoutAttributes_startingLayout_endingLayout_animationSetup_animationCompletion_enableCustomAnimations_customAnimationsType___block_invoke_8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

uint64_t __50__UICollectionView__applyBlockToAllReusableViews___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return [*(id *)(a1 + 32) addObject:a5];
}

void __50__UICollectionView__applyBlockToAllReusableViews___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = *(id *)(a3 + 24);
    if (v4)
    {
      id v5 = v4;
      [*(id *)(a1 + 32) addObject:v4];
      id v4 = v5;
    }
  }
  else
  {
    id v4 = 0;
  }
}

uint64_t __50__UICollectionView__applyBlockToAllReusableViews___block_invoke_3(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

- (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated completion:(void *)completion
{
  BOOL v6 = animated;
  double v13 = layout;
  id v9 = completion;
  id v10 = v13;
  id v11 = v9;
  if (!v13)
  {
    double v12 = [MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:6895 description:@"layout cannot be nil in setCollectionViewLayout:animated:completion:"];

    id v10 = 0;
  }
  [(UICollectionView *)self _setCollectionViewLayout:v10 animated:v6 isInteractive:0 completion:v11];
}

- (void)setCollectionViewLayout:(id)a3 withAnimator:(id)a4
{
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke(id *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v9 = a4;
  id v12 = v9;
  if (a5 == 1)
  {
    id v10 = [a1[5] objectForKeyedSubscript:v9];
    if (!v10)
    {
      id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      id v11 = a1[5];
LABEL_8:
      [v11 setObject:v10 forKeyedSubscript:v12];
    }
  }
  else
  {
    if (!a5)
    {
      [a1[4] setObject:a2 forKeyedSubscript:a3];
      goto LABEL_10;
    }
    id v10 = [a1[6] objectForKeyedSubscript:v9];
    if (!v10)
    {
      id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
      id v11 = a1[6];
      goto LABEL_8;
    }
  }
  [v10 setObject:a2 forKeyedSubscript:a3];

LABEL_10:
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_2(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v16 = a3;
  id v8 = a4;
  id v9 = [a5 _layoutAttributes];
  if (!v9 || (__int16 v10 = v9[144], (v10 & 1) != 0))
  {

    uint64_t v12 = [*(id *)(*(void *)(a1 + 32) + 2064) layoutAttributesForItemAtIndexPath:v16];
    uint64_t v13 = [*(id *)(a1 + 40) layoutAttributesForItemAtIndexPath:v16];
  }
  else
  {

    id v11 = *(void **)(*(void *)(a1 + 32) + 2064);
    if ((v10 & 2) != 0)
    {
      uint64_t v12 = [v11 layoutAttributesForDecorationViewOfKind:v8 atIndexPath:v16];
      [*(id *)(a1 + 40) layoutAttributesForDecorationViewOfKind:v8 atIndexPath:v16];
    }
    else
    {
      uint64_t v12 = [v11 layoutAttributesForSupplementaryViewOfKind:v8 atIndexPath:v16];
      [*(id *)(a1 + 40) layoutAttributesForSupplementaryViewOfKind:v8 atIndexPath:v16];
    uint64_t v13 = };
  }
  if (v12 | v13)
  {
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v15 = v14;
    if (v13) {
      [v14 setObject:v13 forKeyedSubscript:@"newLayoutInfos"];
    }
    if (v12) {
      [v15 setObject:v12 forKeyedSubscript:@"previousLayoutInfos"];
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_3(uint64_t a1, void *a2)
{
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_4;
  v4[3] = &unk_1E52E55B0;
  uint64_t v3 = *(void **)(a1 + 40);
  v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [a2 enumerateKeysAndObjectsUsingBlock:v4];
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_4(uint64_t a1, uint64_t a2, void *a3)
{
  BOOL v6 = [a3 objectForKey:@"previousLayoutInfos"];
  id v7 = [a3 objectForKey:@"newLayoutInfos"];
  id v8 = v7;
  if (v6)
  {
    id v9 = v6[1];
    __int16 v10 = v6;
  }
  else
  {
    -[UIBarButtonItemGroup _items](v7);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v10 = v8;
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 2464), v8);
    if (!v10)
    {
      if ([0 isHidden]) {
        [0 isHidden];
      }
      __int16 v10 = 0;
      goto LABEL_20;
    }
  }
  __int16 v11 = *((_WORD *)v10 + 144);
  if (v11)
  {
    uint64_t v12 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](*(id ***)(*(void *)(a1 + 32) + 2896), a2);
  }
  else
  {
    if (!v9) {
      goto LABEL_12;
    }
    if ((v11 & 3) != 0)
    {
      if ((v11 & 2) == 0) {
        goto LABEL_12;
      }
      uint64_t v12 = -[_UICollectionViewSubviewManager visibleDecorationOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), (uint64_t)v9, a2);
    }
    else
    {
      uint64_t v12 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), (uint64_t)v9, a2);
    }
  }
  uint64_t v13 = (void *)v12;
  if (v12)
  {
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_5;
    v20[3] = &unk_1E52DCB30;
    v20[4] = *(void *)(a1 + 32);
    __int16 v10 = v10;
    uint64_t v21 = v10;
    id v14 = v13;
    id v22 = v14;
    +[UIView performWithoutAnimation:v20];

    goto LABEL_30;
  }
LABEL_12:
  if ([v8 isHidden])
  {
    id v14 = 0;
    if (([v6 isHidden] & 1) != 0 || !v8) {
      goto LABEL_30;
    }
  }
  else if (!v8)
  {
LABEL_20:
    id v14 = 0;
    goto LABEL_30;
  }
  __int16 v15 = *((_WORD *)v8 + 144);
  if (v15)
  {
    id v14 = (id)[*(id *)(a1 + 32) _createPreparedCellForItemAtIndexPath:a2 withLayoutAttributes:v10 applyAttributes:1];
    if (v14) {
      -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:](*(void *)(*(void *)(a1 + 32) + 2896), (uint64_t)v14, a2);
    }
  }
  else if ((v15 & 3) != 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_20;
    }
    id v14 = (id)[*(id *)(a1 + 32) _createPreparedSupplementaryViewForElementOfKind:v9 atIndexPath:a2 layout:*(void *)(a1 + 40) withLayoutAttributes:v10 applyAttributes:1];
    if (v14)
    {
      uint64_t v17 = *(void *)(*(void *)(a1 + 32) + 2896);
      if (v17) {
        -[_UICollectionViewSubviewCollection setView:forDecorationOfKind:atIndexPath:](*(void *)(v17 + 8), (uint64_t)v14, (uint64_t)v9, a2);
      }
    }
  }
  else
  {
    id v14 = (id)[*(id *)(a1 + 32) _createPreparedSupplementaryViewForElementOfKind:v9 atIndexPath:a2 layout:*(void *)(a1 + 40) withLayoutAttributes:v10 applyAttributes:1];
    if (v14)
    {
      uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 2896);
      if (v16) {
        -[_UICollectionViewSubviewCollection setView:forSupplementaryOfKind:atIndexPath:](*(void *)(v16 + 8), (uint64_t)v14, (uint64_t)v9, a2);
      }
    }
  }
LABEL_30:
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = *(void **)(v18 + 2464);
  *(void *)(v18 + 2464) = 0;
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_5(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_6(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_7(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_8(uint64_t a1, void *a2)
{
  return [a2 willTransitionFromLayout:*(void *)(*(void *)(a1 + 32) + 2064) toLayout:*(void *)(a1 + 40)];
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_9(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  if ((v2[329] & 0x2000) != 0)
  {
    uint64_t v3 = [v2 _delegateProxy];
    int v4 = objc_msgSend(v3, "_collectionView:shouldApplyTransitionContentOffset:contentSize:", *(void *)(a1 + 32), *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128));

    if (!v4) {
      goto LABEL_5;
    }
    int v2 = *(void **)(a1 + 32);
  }
  objc_msgSend(v2, "setContentOffset:", *(double *)(a1 + 104), *(double *)(a1 + 112));
  objc_msgSend(*(id *)(a1 + 32), "setContentSize:", *(double *)(a1 + 120), *(double *)(a1 + 128));
LABEL_5:
  if (*(unsigned char *)(a1 + 136)) {
    [*(id *)(a1 + 32) _updateDefaultLayoutMargins];
  }
  if ([*(id *)(*(void *)(a1 + 32) + 2064) _supportsAdvancedTransitionAnimations]
    && [*(id *)(a1 + 40) _supportsAdvancedTransitionAnimations])
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_10;
    aBlock[3] = &unk_1E52E5650;
    id v5 = *(void **)(a1 + 40);
    void aBlock[4] = *(void *)(a1 + 32);
    char v32 = *(unsigned char *)(a1 + 137);
    BOOL v6 = &v31;
    id v31 = v5;
    id v7 = _Block_copy(aBlock);
    (*((void (**)(void *, void, void, void))v7 + 2))(v7, *(void *)(a1 + 48), 0, 0);
    id v8 = *(void **)(a1 + 56);
    v28[0] = MEMORY[0x1E4F143A8];
    v28[1] = 3221225472;
    v28[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_12;
    v28[3] = &unk_1E52E5F58;
    id v9 = &v29;
    id v10 = v7;
    id v29 = v10;
    [v8 enumerateKeysAndObjectsUsingBlock:v28];
    __int16 v11 = *(void **)(a1 + 64);
    v26[0] = MEMORY[0x1E4F143A8];
    v26[1] = 3221225472;
    v26[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_13;
    v26[3] = &unk_1E52E5F58;
    uint64_t v12 = &v27;
    id v27 = v10;
    id v13 = v10;
    id v14 = v26;
  }
  else
  {
    v24[0] = MEMORY[0x1E4F143A8];
    v24[1] = 3221225472;
    v24[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_14;
    void v24[3] = &unk_1E52E56A0;
    __int16 v15 = *(void **)(a1 + 40);
    void v24[4] = *(void *)(a1 + 32);
    BOOL v6 = &v25;
    id v25 = v15;
    uint64_t v16 = _Block_copy(v24);
    (*((void (**)(void *, void, void, void))v16 + 2))(v16, *(void *)(a1 + 48), 0, 0);
    uint64_t v17 = *(void **)(a1 + 56);
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_16;
    v22[3] = &unk_1E52E5F58;
    id v9 = &v23;
    id v18 = v16;
    id v23 = v18;
    [v17 enumerateKeysAndObjectsUsingBlock:v22];
    __int16 v11 = *(void **)(a1 + 64);
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_17;
    v20[3] = &unk_1E52E5F58;
    uint64_t v12 = &v21;
    id v21 = v18;
    id v13 = v18;
    id v14 = v20;
  }
  [v11 enumerateKeysAndObjectsUsingBlock:v14];

  [*(id *)(a1 + 72) setAlpha:0.0];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 2064), *(id *)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 2872) cleanupSectionFocusGuides];
  -[_UICollectionViewOrthogonalScrollerSectionController reconfigureScrollViewsForUpdate:](*(void *)(*(void *)(a1 + 32) + 2864), 0);
  [*(id *)(a1 + 32) _reconfigureSectionContainersForUpdate:0];
  if (*(unsigned char *)(a1 + 138)) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), *(id *)(*(void *)(a1 + 32) + 2184));
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 2184), *(id *)(a1 + 80));
  objc_opt_class();
  uint64_t result = objc_opt_isKindOfClass();
  if ((result & 1) == 0)
  {
    [*(id *)(a1 + 40) _finalizeLayoutTransition];
    return [*(id *)(a1 + 88) _finalizeLayoutTransition];
  }
  return result;
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_10(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_11;
  v10[3] = &unk_1E52E5628;
  uint64_t v13 = a3;
  id v8 = *(void **)(a1 + 40);
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v7;
  char v14 = *(unsigned char *)(a1 + 48);
  id v12 = v8;
  id v9 = v7;
  [a2 enumerateKeysAndObjectsUsingBlock:v10];
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_11(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5 == 2)
  {
    BOOL v6 = -[_UICollectionViewSubviewManager visibleDecorationOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), *(void *)(a1 + 40), a2);
  }
  else if (v5 == 1)
  {
    BOOL v6 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), *(void *)(a1 + 40), a2);
  }
  else
  {
    if (v5) {
      return;
    }
    BOOL v6 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](*(id ***)(*(void *)(a1 + 32) + 2896), a2);
  }
  id v7 = v6;
  if (v6)
  {
    [v6 _addUpdateAnimation];
    [a3 setObject:v7 forKey:@"view"];
    id v8 = [a3 objectForKeyedSubscript:@"previousLayoutInfos"];
    id v9 = [a3 objectForKeyedSubscript:@"newLayoutInfos"];
    if (!v9)
    {
      id v9 = (void *)[v8 copy];
      [v9 setAlpha:0.0];
    }
    if (*(unsigned char *)(a1 + 64))
    {
      LOBYTE(v15) = 1;
      id v10 = [*(id *)(a1 + 32) _viewAnimationsForView:v7 startingLayoutAttributes:v8 endingLayoutAttributes:v9 startingLayout:*(void *)(*(void *)(a1 + 32) + 2064) endingLayout:*(void *)(a1 + 48) animationSetup:0 animationCompletion:0 enableCustomAnimations:v15 customAnimationsType:1];
      long long v16 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      uint64_t v11 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)v17;
        do
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if (*(void *)v17 != v13) {
              objc_enumerationMutation(v10);
            }
            [*(id *)(*((void *)&v16 + 1) + 8 * i) start];
          }
          uint64_t v12 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
        }
        while (v12);
      }
    }
    else if (v9)
    {
      [*(id *)(a1 + 32) _applyLayoutAttributes:v9 toView:v7];
    }
  }
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_12(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_13(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_14(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_15;
  v10[3] = &unk_1E52E5678;
  uint64_t v13 = a3;
  id v8 = *(void **)(a1 + 40);
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v7;
  id v12 = v8;
  id v9 = v7;
  [a2 enumerateKeysAndObjectsUsingBlock:v10];
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_15(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5 == 2)
  {
    uint64_t v6 = -[_UICollectionViewSubviewManager visibleDecorationOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), *(void *)(a1 + 40), a2);
    if (!v6) {
      return;
    }
  }
  else if (v5 == 1)
  {
    uint64_t v6 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), *(void *)(a1 + 40), a2);
    if (!v6) {
      return;
    }
  }
  else
  {
    if (v5) {
      return;
    }
    uint64_t v6 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](*(id ***)(*(void *)(a1 + 32) + 2896), a2);
    if (!v6) {
      return;
    }
  }
  id v11 = (id)v6;
  id v7 = [a3 objectForKeyedSubscript:@"previousLayoutInfos"];
  id v8 = [a3 objectForKeyedSubscript:@"newLayoutInfos"];
  if (!v8)
  {
    id v8 = (void *)[v7 copy];
    [v8 setAlpha:0.0];
  }
  id v9 = [*(id *)(a1 + 48) _animationForReusableView:v11 toLayoutAttributes:v8 type:1];
  id v10 = (void (**)(void, void))[v9 copy];

  if (v10)
  {
    [v11 _setBaseLayoutAttributes:v8];
    v10[2](v10, 0);
    [v11 applyLayoutAttributes:v8];
  }
  else
  {
    [*(id *)(a1 + 32) _applyLayoutAttributes:v8 toView:v11];
  }
  [v11 _addUpdateAnimation];
  [a3 setObject:v11 forKey:@"view"];
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_16(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_17(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_18(id *a1)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  v62[0] = MEMORY[0x1E4F143A8];
  v62[1] = 3221225472;
  v62[2] = __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_19;
  v62[3] = &unk_1E52E5600;
  id v2 = a1[4];
  id v3 = a1[5];
  id v4 = a1[4];
  id v63 = v3;
  id v64 = v4;
  [v2 _applyBlockToAllReusableViews:v62];
  -[_UICollectionViewOrthogonalScrollerSectionController processQueuedScrollViewRemovals](*((void *)a1[4] + 358));
  [a1[4] _processQueuedSectionContainerRemovals];
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  uint64_t v5 = [a1[6] objectEnumerator];
  uint64_t v6 = [v5 countByEnumeratingWithState:&v58 objects:v69 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v59;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v59 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = [*(id *)(*((void *)&v58 + 1) + 8 * i) objectForKeyedSubscript:@"view"];
        [v10 _clearUpdateAnimation];
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v58 objects:v69 count:16];
    }
    while (v7);
  }

  long long v56 = 0u;
  long long v57 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  CGRect v41 = a1;
  id v11 = [a1[7] objectEnumerator];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v54 objects:v68 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v55;
    do
    {
      for (uint64_t j = 0; j != v13; ++j)
      {
        if (*(void *)v55 != v14) {
          objc_enumerationMutation(v11);
        }
        long long v16 = *(void **)(*((void *)&v54 + 1) + 8 * j);
        long long v50 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v17 = [v16 objectEnumerator];
        uint64_t v18 = [v17 countByEnumeratingWithState:&v50 objects:v67 count:16];
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = *(void *)v51;
          do
          {
            for (uint64_t k = 0; k != v19; ++k)
            {
              if (*(void *)v51 != v20) {
                objc_enumerationMutation(v17);
              }
              id v22 = [*(id *)(*((void *)&v50 + 1) + 8 * k) objectForKeyedSubscript:@"view"];
              [v22 _clearUpdateAnimation];
            }
            uint64_t v19 = [v17 countByEnumeratingWithState:&v50 objects:v67 count:16];
          }
          while (v19);
        }
      }
      uint64_t v13 = [v11 countByEnumeratingWithState:&v54 objects:v68 count:16];
    }
    while (v13);
  }

  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v23 = [v41[8] objectEnumerator];
  uint64_t v24 = [v23 countByEnumeratingWithState:&v46 objects:v66 count:16];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)v47;
    do
    {
      for (uint64_t m = 0; m != v25; ++m)
      {
        if (*(void *)v47 != v26) {
          objc_enumerationMutation(v23);
        }
        uint64_t v28 = *(void **)(*((void *)&v46 + 1) + 8 * m);
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        long long v45 = 0u;
        id v29 = [v28 objectEnumerator];
        uint64_t v30 = [v29 countByEnumeratingWithState:&v42 objects:v65 count:16];
        if (v30)
        {
          uint64_t v31 = v30;
          uint64_t v32 = *(void *)v43;
          do
          {
            for (uint64_t n = 0; n != v31; ++n)
            {
              if (*(void *)v43 != v32) {
                objc_enumerationMutation(v29);
              }
              long long v34 = [*(id *)(*((void *)&v42 + 1) + 8 * n) objectForKeyedSubscript:@"view"];
              [v34 _clearUpdateAnimation];
            }
            uint64_t v31 = [v29 countByEnumeratingWithState:&v42 objects:v65 count:16];
          }
          while (v31);
        }
      }
      uint64_t v25 = [v23 countByEnumeratingWithState:&v46 objects:v66 count:16];
    }
    while (v25);
  }

  *((void *)v41[4] + 330) &= ~0x8000000uLL;
  [v41[4] _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  uint64_t v35 = v41[4];
  uint64_t v36 = v35[400];
  if (v36)
  {
    char v37 = (*(uint64_t (**)(void))(v36 + 16))(v35[400]);
    [v41[4] _setNavigationCompletion:0];
    if ((v37 & 1) == 0)
    {
      objc_storeStrong((id *)v41[4] + 258, v41[5]);
      objc_storeStrong((id *)v41[4] + 273, *(id *)(*((void *)v41[12] + 1) + 40));
      [*((id *)v41[4] + 258) _didFinishLayoutTransitionAnimations:0];
      __int16 v38 = (void (**)(id, void))v41[11];
      if (v38) {
        v38[2](v38, 0);
      }
      [v41[4] layoutIfNeeded];
      goto LABEL_48;
    }
  }
  else
  {
    [v35 _setNavigationCompletion:0];
  }
  id v39 = v41[5];
  if (v39 != *((id *)v41[4] + 258))
  {
    [v39 _setCollectionView:0];
    id v39 = (id)*((void *)v41[4] + 258);
  }
  [v39 _didFinishLayoutTransitionAnimations:1];
  uint64_t v40 = (void (**)(id, uint64_t))v41[11];
  if (v40) {
    v40[2](v40, 1);
  }
  if (*((unsigned char *)v41 + 104)) {
    [*((id *)v41[4] + 258) _invalidateLayoutUsingContext:v41[9]];
  }
LABEL_48:
  [v41[10] removeFromSuperview];
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_19(uint64_t a1, void *a2)
{
  return [a2 didTransitionFromLayout:*(void *)(a1 + 32) toLayout:*(void *)(*(void *)(a1 + 40) + 2064)];
}

uint64_t __88__UICollectionView__setCollectionViewLayout_animated_isInteractive_completion_animator___block_invoke_20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0);
}

- (UICollectionViewTransitionLayout)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout *)layout completion:(UICollectionViewLayoutInteractiveTransitionCompletion)completion
{
  uint64_t v8 = layout;
  UICollectionViewLayoutInteractiveTransitionCompletion v9 = completion;
  if (!v8)
  {
    uint64_t v21 = [MEMORY[0x1E4F28B00] currentHandler];
    [v21 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:7525 description:@"layout cannot be nil in startInteractiveTransitionToCollectionViewLayout:"];
  }
  if (self->_isInInteractiveTransition)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    [v10 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:7528 description:@"the collection is already in the middle of an interactive transition"];
  }
  id v11 = (void *)[v9 copy];
  id interactiveCompletionHandler = self->_interactiveCompletionHandler;
  self->_id interactiveCompletionHandler = v11;

  if ((*((void *)&self->_collectionViewFlags + 1) & 0x100000000) != 0)
  {
    long long v16 = [(UICollectionView *)self _delegateActual];
    if (objc_opt_respondsToSelector())
    {
      long long v17 = [(UICollectionView *)self _delegateProxy];
      uint64_t v18 = [(UICollectionView *)self collectionViewLayout];
      uint64_t v15 = [v17 collectionView:self transitionLayoutForOldLayout:v18 newLayout:v8];
    }
    else
    {
      uint64_t v19 = [UICollectionViewTransitionLayout alloc];
      long long v17 = [(UICollectionView *)self collectionViewLayout];
      uint64_t v15 = [(UICollectionViewTransitionLayout *)v19 initWithCurrentLayout:v17 nextLayout:v8];
    }

    [(UICollectionView *)self setCollectionViewLayout:v15];
    self->_isInInteractiveTransitiouint64_t n = 1;
    self->_shouldAccumulateTrackedLayoutValues = 1;
  }
  else
  {
    [(UICollectionViewLayout *)self->_layout _setCollectionView:0];
    objc_storeStrong((id *)&self->_layout, layout);
    [(UICollectionViewLayout *)self->_layout _setCollectionView:self];
    uint64_t v13 = (UICollectionViewData *)-[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], self, self->_layout);
    collectionViewData = self->_collectionViewData;
    self->_collectionViewData = v13;

    [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
    uint64_t v15 = 0;
  }

  return v15;
}

- (void)_updateTransitionWithProgress:(double)a3
{
  id v5 = [(UICollectionView *)self collectionViewLayout];
  -[UICollectionViewData invalidate:]((uint64_t)self->_collectionViewData, 1);
  [v5 setTransitionProgress:a3];
  [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
}

- (void)_cleanUpAfterInteractiveTransitionDidFinish:(BOOL)a3
{
  BOOL v3 = a3;
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  id v5 = [(UICollectionView *)self collectionViewLayout];
  uint64_t v6 = [v5 currentLayout];
  uint64_t v7 = [v5 nextLayout];
  [v5 _oldVisibleBounds];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  [v5 _newVisibleBounds];
  if (v3)
  {
    double v9 = v16;
    double v11 = v17;
    double v13 = v18;
    double v15 = v19;
  }
  __int16 v38 = (void *)v6;
  if (v3) {
    uint64_t v20 = v7;
  }
  else {
    uint64_t v20 = (void *)v6;
  }
  [(UICollectionView *)self setCollectionViewLayout:v20];
  -[UICollectionView setBounds:](self, "setBounds:", v9, v11, v13, v15);
  *((void *)&self->_collectionViewFlags + 1) &= ~0x8000000uLL;
  [(UICollectionView *)self _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  id interactiveCompletionHandler = (void (**)(id, uint64_t, BOOL))self->_interactiveCompletionHandler;
  if (interactiveCompletionHandler)
  {
    interactiveCompletionHandler[2](interactiveCompletionHandler, 1, v3);
    id v22 = self->_interactiveCompletionHandler;
    self->_id interactiveCompletionHandler = 0;
  }
  trackedValuesKeys = self->_trackedValuesKeys;
  self->_trackedValuesKeys = 0;

  interactiveTransitionValueTrackingDict = self->_interactiveTransitionValueTrackingDict;
  self->_interactiveTransitionValueTrackingDict = 0;

  self->_shouldAccumulateTrackedLayoutValues = 1;
  __64__UICollectionView__cleanUpAfterInteractiveTransitionDidFinish___block_invoke(self->_clonedCellsDict);
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v25 = [(NSMutableDictionary *)self->_clonedSupplementaryViewsDict objectEnumerator];
  uint64_t v26 = [v25 countByEnumeratingWithState:&v43 objects:v48 count:16];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)v44;
    do
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        if (*(void *)v44 != v28) {
          objc_enumerationMutation(v25);
        }
        __64__UICollectionView__cleanUpAfterInteractiveTransitionDidFinish___block_invoke(*(void **)(*((void *)&v43 + 1) + 8 * i));
      }
      uint64_t v27 = [v25 countByEnumeratingWithState:&v43 objects:v48 count:16];
    }
    while (v27);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v30 = [(NSMutableDictionary *)self->_clonedDecorationViewsDict objectEnumerator];
  uint64_t v31 = [v30 countByEnumeratingWithState:&v39 objects:v47 count:16];
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)v40;
    do
    {
      for (uint64_t j = 0; j != v32; ++j)
      {
        if (*(void *)v40 != v33) {
          objc_enumerationMutation(v30);
        }
        __64__UICollectionView__cleanUpAfterInteractiveTransitionDidFinish___block_invoke(*(void **)(*((void *)&v39 + 1) + 8 * j));
      }
      uint64_t v32 = [v30 countByEnumeratingWithState:&v39 objects:v47 count:16];
    }
    while (v32);
  }

  clonedCellsDict = self->_clonedCellsDict;
  self->_clonedCellsDict = 0;

  clonedSupplementaryViewsDict = self->_clonedSupplementaryViewsDict;
  self->_clonedSupplementaryViewsDict = 0;

  clonedDecorationViewsDict = self->_clonedDecorationViewsDict;
  self->_clonedDecorationViewsDict = 0;
}

void __64__UICollectionView__cleanUpAfterInteractiveTransitionDidFinish___block_invoke(void *a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = objc_msgSend(a1, "objectEnumerator", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * v5++) removeFromSuperview];
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

- (void)_finishInteractiveTransitionShouldFinish:(BOOL)a3 finalAnimation:(BOOL)a4
{
  BOOL v5 = a3;
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  if (!self->_isInInteractiveTransition)
  {
    id v23 = [MEMORY[0x1E4F28B00] currentHandler];
    [v23 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:7621 description:@"the collection was not prepared for an interactive transition. see startInteractiveTransitionToCollectionViewLayout:completion:"];
  }
  self->_shouldAccumulateTrackedLayoutValues = 0;
  double currentInteractiveTransitionTimeStamp = self->_currentInteractiveTransitionTimeStamp;
  double previousInteractiveTransitionTimeStamp = self->_previousInteractiveTransitionTimeStamp;
  if (currentInteractiveTransitionTimeStamp == previousInteractiveTransitionTimeStamp)
  {
    double v9 = 0.0;
    if (a4) {
      goto LABEL_5;
    }
  }
  else
  {
    double v9 = (self->_currentInteractiveTransitionProgress - self->_previousInteractiveTransitionProgress)
       / (currentInteractiveTransitionTimeStamp - previousInteractiveTransitionTimeStamp);
    if (a4)
    {
LABEL_5:
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = __76__UICollectionView__finishInteractiveTransitionShouldFinish_finalAnimation___block_invoke;
      aBlock[3] = &unk_1E52E5DD8;
      void aBlock[4] = self;
      uint64_t v25 = _Block_copy(aBlock);
      v30[0] = MEMORY[0x1E4F143A8];
      v30[1] = 3221225472;
      v30[2] = __76__UICollectionView__finishInteractiveTransitionShouldFinish_finalAnimation___block_invoke_2;
      v30[3] = &unk_1E52E0478;
      void v30[4] = self;
      BOOL v31 = v5;
      uint64_t v24 = _Block_copy(v30);
      if (v5) {
        double v10 = 1.0;
      }
      else {
        double v10 = 0.0;
      }
      uint64_t v11 = [[_UIDynamicValueAnimation alloc] initWithValue:self->_currentInteractiveTransitionProgress velocity:v9 unitSize:0.004];
      double v12 = +[_UIDynamicAnimationActiveValue upperBoundary:1 ofType:v10];
      double v13 = +[_UIDynamicAnimationActiveValue lowerBoundary:1 ofType:v10];
      [(_UIDynamicValueAnimation *)v11 addActiveValue:v12];
      [(_UIDynamicValueAnimation *)v11 addActiveValue:v13];
      double v14 = objc_alloc_init(_UIDynamicAnimationGroup);
      endInteractiveTransitionAnimationGroup = self->_endInteractiveTransitionAnimationGroup;
      self->_endInteractiveTransitionAnimationGroup = v14;

      [(_UIDynamicAnimation *)self->_endInteractiveTransitionAnimationGroup _setUsesNSTimer:1];
      [(_UIDynamicAnimationGroup *)self->_endInteractiveTransitionAnimationGroup addAnimation:v11];
      double v16 = [(UICollectionView *)self _dynamicAnimationsForTrackValues];
      long long v26 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      uint64_t v17 = [v16 countByEnumeratingWithState:&v26 objects:v33 count:16];
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v19 = *(void *)v27;
        do
        {
          for (uint64_t i = 0; i != v18; ++i)
          {
            if (*(void *)v27 != v19) {
              objc_enumerationMutation(v16);
            }
            -[_UIDynamicAnimationGroup addAnimation:](self->_endInteractiveTransitionAnimationGroup, "addAnimation:", *(void *)(*((void *)&v26 + 1) + 8 * i), v24);
          }
          uint64_t v18 = [v16 countByEnumeratingWithState:&v26 objects:v33 count:16];
        }
        while (v18);
      }
      uint64_t v21 = v24;
      -[_UIDynamicAnimationGroup runWithGroupApplier:completion:](self->_endInteractiveTransitionAnimationGroup, "runWithGroupApplier:completion:", v25, v24, v24);
      self->_isInInteractiveTransitiouint64_t n = 0;

      return;
    }
  }
  self->_isInInteractiveTransitiouint64_t n = 0;
  [(UICollectionView *)self _cleanUpAfterInteractiveTransitionDidFinish:v5];
}

void __76__UICollectionView__finishInteractiveTransitionShouldFinish_finalAnimation___block_invoke(uint64_t a1, int a2)
{
  if ((a2 - 1) <= 1)
  {
    uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 2528) animations];
    uint64_t v4 = [v3 objectAtIndex:0];
    [v4 value];
    double v6 = v5;

    [*(id *)(a1 + 32) _updateTransitionWithProgress:v6];
    long long v7 = [*(id *)(*(void *)(a1 + 32) + 2528) animations];
    uint64_t v8 = [v7 count];

    if (v8 >= 2)
    {
      double v9 = [*(id *)(*(void *)(a1 + 32) + 2528) animations];
      id v10 = (id)[v9 mutableCopy];

      [v10 removeObjectAtIndex:0];
      [*(id *)(a1 + 32) _updateTrackedLayoutValuesWith:v10];
    }
  }
}

void __76__UICollectionView__finishInteractiveTransitionShouldFinish_finalAnimation___block_invoke_2(uint64_t a1)
{
  [*(id *)(a1 + 32) _cleanUpAfterInteractiveTransitionDidFinish:*(unsigned __int8 *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 2528);
  *(void *)(v2 + 2528) = 0;
}

- (void)_finishInteractiveTransitionWithFinalAnimation:(BOOL)a3
{
}

- (void)_cancelInteractiveTransitionWithFinalAnimation:(BOOL)a3
{
}

- (void)finishInteractiveTransition
{
}

- (void)cancelInteractiveTransition
{
}

- (id)_pivotForTransitionFromLayout:(id)a3 toLayout:(id)a4
{
  if ((*(void *)&self->_collectionViewFlags & 0x1000) != 0)
  {
    double v6 = [(UICollectionView *)self _delegateProxy];
    uint64_t v4 = [v6 _indexPathOfReferenceItemForLayoutTransitionInCollectionView:self];
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

- (UICollectionViewLayoutAttributes)layoutAttributesForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
  double v6 = kind;
  [(UICollectionView *)self _reloadDataIfNeeded];
  long long v7 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:]((uint64_t)self->_collectionViewData, (uint64_t)v6, indexPath);

  uint64_t v8 = (void *)[v7 copy];
  return (UICollectionViewLayoutAttributes *)v8;
}

- (NSIndexPath)indexPathForItemAtPoint:(CGPoint)point
{
  uint64_t v4 = -[UICollectionView _indexPathForItemAtPoint:](self, "_indexPathForItemAtPoint:", point.x, point.y);
  if (dyld_program_sdk_at_least())
  {
    dragAndDropController = self->_dragAndDropController;
    if (!dragAndDropController || dragAndDropController->_sessionKind != 1)
    {
      uint64_t v6 = [(UICollectionView *)self _translatePresentationIndexPathToDataSourceIndexPathAsNeeded:v4];

      uint64_t v4 = (void *)v6;
    }
  }
  return (NSIndexPath *)v4;
}

- (id)_indexPathForItemAtPoint:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [(UICollectionView *)self _reloadDataIfNeeded];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v6 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 1, x, y, 1.0, 1.0);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    double v9 = 0;
    uint64_t v10 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v6);
        }
        double v12 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (v9)
        {
          uint64_t v13 = objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * i), "zIndex", (void)v17);
          if (v13 <= [v9 zIndex]) {
            continue;
          }
        }
        id v14 = v12;

        double v9 = v14;
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }
  else
  {
    double v9 = 0;
  }

  double v15 = [v9 indexPath];

  return v15;
}

void __45__UICollectionView__indexPathForView_ofType___block_invoke_3(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if (*(void *)(a1 + 32) == a3)
  {
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    id v8 = v9;
    *a4 = 1;
  }
}

void __45__UICollectionView__indexPathForView_ofType___block_invoke_4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if (*(void *)(a1 + 32) == a3)
  {
    id v9 = v8;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    id v8 = v9;
    *a4 = 1;
  }
}

- (id)indexPathForSupplementaryView:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 _layoutAttributes];
  uint64_t v6 = (void *)v5;
  if (v5)
  {
    __int16 v7 = *(_WORD *)(v5 + 288);
    uint64_t v8 = 1;
    if ((v7 & 2) != 0) {
      uint64_t v8 = 2;
    }
    if (v7) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = v8;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = [(UICollectionView *)self _indexPathForView:v4 ofType:v9];

  if (v10)
  {
    uint64_t v11 = [(UICollectionView *)self _translatePresentationIndexPathToDataSourceIndexPathAsNeeded:v10];
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v11;
}

- (id)_indexPathForSupplementaryView:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [v4 _layoutAttributes];
  uint64_t v6 = (void *)v5;
  if (v5)
  {
    __int16 v7 = *(_WORD *)(v5 + 288);
    uint64_t v8 = 1;
    if ((v7 & 2) != 0) {
      uint64_t v8 = 2;
    }
    if (v7) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = v8;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = [(UICollectionView *)self _indexPathForView:v4 ofType:v9];

  return v10;
}

void __33__UICollectionView_preparedCells__block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v10 = v4;
  if (v4) {
    uint64_t v5 = (void *)v4[3];
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    __int16 v7 = *(void **)(a1 + 32);
    if (v10) {
      uint64_t v8 = (void *)v10[3];
    }
    else {
      uint64_t v8 = 0;
    }
    id v9 = v8;
    [v7 addObject:v9];
  }
}

- (id)_indexPathsForPreparedItems
{
  [(UICollectionView *)self _reloadDataIfNeeded];
  uint64_t v3 = objc_opt_new();
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    char v4 = ![(UICollectionView *)self _isOperatingWithPresentationValues];
  }
  else {
    char v4 = 0;
  }
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __47__UICollectionView__indexPathsForPreparedItems__block_invoke;
  aBlock[3] = &unk_1E52E5768;
  char v19 = v4;
  void aBlock[4] = self;
  id v5 = v3;
  id v18 = v5;
  id v6 = (void (**)(void *, id, void, char *))_Block_copy(aBlock);
  subviewManager = self->_subviewManager;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v6);
  }
  [(NSMutableDictionary *)self->_prefetchCacheItems enumerateKeysAndObjectsUsingBlock:v6];
  uint64_t v8 = [(UICollectionView *)self _focusedItemState];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = *(id *)(v8 + 8);
    if (v10)
    {
      uint64_t v11 = *(void *)(v9 + 32);

      if (!v11)
      {
        char v16 = 0;
        id v12 = *(id *)(v9 + 16);
        v6[2](v6, v12, 0, &v16);
      }
    }
  }
  uint64_t v13 = self->_firstResponderIndexPath;
  if (v13 && self->_firstResponderView && self->_firstResponderViewType == 1)
  {
    char v16 = 0;
    v6[2](v6, v13, 0, &v16);
  }
  id v14 = [v5 array];

  return v14;
}

void __47__UICollectionView__indexPathsForPreparedItems__block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = v3;
  if (*(unsigned char *)(a1 + 48))
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v7 = v3;
  uint64_t v5 = [*(id *)(a1 + 32) _indexPathBeforeShadowUpdatesForIndexPath:v3];

  char v4 = (void *)v5;
  if (v5)
  {
LABEL_3:
    id v6 = v4;
    [*(id *)(a1 + 40) addObject:v4];
    char v4 = v6;
  }
LABEL_4:
}

- (id)_visibleDecorationViewsOfKind:(id)a3
{
  return [(UICollectionView *)self _visibleSupplementaryViewsOfKind:a3 isDecorationView:1];
}

- (id)_indexPathsForVisibleDecorationViewsOfKind:(id)a3
{
  return [(UICollectionView *)self _indexPathsForVisibleSupplementaryViewsOfKind:a3 isDecorationView:1];
}

- (BOOL)_validateScrollingTargetIndexPath:(id)a3 raisingExceptionIfNecessary:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v7 = a3;
  uint64_t v8 = [v7 section];
  if (v8 >= -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData))
  {
    if (!v4)
    {
LABEL_22:
      BOOL v9 = 0;
      goto LABEL_23;
    }
    _UIIsPrivateMainBundle();
    if (dyld_program_sdk_at_least())
    {
      id v10 = [MEMORY[0x1E4F28B00] currentHandler];
      [v10 handleFailureInMethod:a2, self, @"UICollectionView.m", 8127, @"Attempted to scroll the collection view to an out-of-bounds section (%ld) when there are only %ld sections. Collection view: %@.", objc_msgSend(v7, "section"), -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData), self, v31 object file lineNumber description];
LABEL_13:

      goto LABEL_22;
    }
    if (!os_variant_has_internal_diagnostics())
    {
      uint64_t v13 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258A70) + 8);
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      id v14 = v13;
      uint64_t v15 = [v7 section];
      uint64_t v16 = -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData);
      *(_DWORD *)long long buf = 134218498;
      uint64_t v33 = v15;
      __int16 v34 = 2048;
      uint64_t v35 = v16;
      __int16 v36 = 2112;
      char v37 = self;
      long long v17 = "Attempted to scroll the collection view to an out-of-bounds section (%ld) when there are only %ld sections. "
            "Collection view: %@.  This will become an assert in a future version.";
      id v18 = v14;
      uint32_t v19 = 32;
      goto LABEL_20;
    }
    id v14 = __UIFaultDebugAssertLog();
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      goto LABEL_21;
    }
    uint64_t v24 = [v7 section];
    uint64_t v25 = -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData);
    *(_DWORD *)long long buf = 134218498;
    uint64_t v33 = v24;
    __int16 v34 = 2048;
    uint64_t v35 = v25;
    __int16 v36 = 2112;
    char v37 = self;
    long long v26 = "Attempted to scroll the collection view to an out-of-bounds section (%ld) when there are only %ld sections. Co"
          "llection view: %@.  This will become an assert in a future version.";
    long long v27 = v14;
    uint32_t v28 = 32;
LABEL_28:
    _os_log_fault_impl(&dword_1853B0000, v27, OS_LOG_TYPE_FAULT, v26, buf, v28);
    goto LABEL_21;
  }
  if ([v7 item] == 0x7FFFFFFFFFFFFFFFLL)
  {
    BOOL v9 = 1;
    goto LABEL_23;
  }
  uint64_t v11 = [v7 item];
  BOOL v9 = v11 < -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v7 section]);
  if (!v9 && v4)
  {
    _UIIsPrivateMainBundle();
    if (dyld_program_sdk_at_least())
    {
      id v10 = [MEMORY[0x1E4F28B00] currentHandler];
      [v10 handleFailureInMethod:a2, self, @"UICollectionView.m", 8140, @"Attempted to scroll the collection view to an out-of-bounds item (%ld) when there are only %ld items in section %ld. Collection view: %@.", objc_msgSend(v7, "item"), -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, objc_msgSend(v7, "section")), objc_msgSend(v7, "section"), self object file lineNumber description];
      goto LABEL_13;
    }
    if (!os_variant_has_internal_diagnostics())
    {
      long long v20 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258A78) + 8);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      id v14 = v20;
      uint64_t v21 = [v7 item];
      uint64_t v22 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v7 section]);
      *(_DWORD *)long long buf = 134218754;
      uint64_t v33 = v21;
      __int16 v34 = 2048;
      uint64_t v35 = v22;
      __int16 v36 = 2048;
      char v37 = (UICollectionView *)[v7 section];
      __int16 v38 = 2112;
      long long v39 = self;
      long long v17 = "Attempted to scroll the collection view to an out-of-bounds item (%ld) when there are only %ld items in sect"
            "ion %ld. Collection view: %@.  This will become an assert in a future version.";
      id v18 = v14;
      uint32_t v19 = 42;
LABEL_20:
      _os_log_impl(&dword_1853B0000, v18, OS_LOG_TYPE_ERROR, v17, buf, v19);
LABEL_21:

      goto LABEL_22;
    }
    id v14 = __UIFaultDebugAssertLog();
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
      goto LABEL_21;
    }
    uint64_t v29 = [v7 item];
    uint64_t v30 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, [v7 section]);
    *(_DWORD *)long long buf = 134218754;
    uint64_t v33 = v29;
    __int16 v34 = 2048;
    uint64_t v35 = v30;
    __int16 v36 = 2048;
    char v37 = (UICollectionView *)[v7 section];
    __int16 v38 = 2112;
    long long v39 = self;
    long long v26 = "Attempted to scroll the collection view to an out-of-bounds item (%ld) when there are only %ld items in sectio"
          "n %ld. Collection view: %@.  This will become an assert in a future version.";
    long long v27 = v14;
    uint32_t v28 = 42;
    goto LABEL_28;
  }
LABEL_23:

  return v9;
}

- (CGPoint)_contentOffsetForScrollingToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5
{
  double trailing = a5.trailing;
  bottouint64_t m = a5.bottom;
  double leading = a5.leading;
  double top = a5.top;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v11 = a3;
  if ([(UICollectionView *)self _validateScrollingTargetIndexPath:v11 raisingExceptionIfNecessary:1])
  {
    v31.origin.double x = -[UICollectionView _frameOfElementAtScrollingTargetIndexPath:]((uint64_t)self, v11);
    double x = v31.origin.x;
    double y = v31.origin.y;
    double width = v31.size.width;
    double height = v31.size.height;
    if (!CGRectIsNull(v31))
    {
      -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:itemFrame:containingScrollView:clampToScrollableArea:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:itemFrame:containingScrollView:clampToScrollableArea:", v11, a4, self, 1, top, leading, bottom, trailing, x, y, width, height);
      goto LABEL_7;
    }
    uint64_t v16 = *(NSObject **)(__UILogGetCategoryCachedImpl("UICollectionView", &_contentOffsetForScrollingToItemAtIndexPath_atScrollPosition_additionalInsets____s_category)+ 8);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      long long v17 = v16;
      id v18 = objc_msgSend(v11, "_ui_shortDescription");
      int v25 = 138412546;
      long long v26 = v18;
      __int16 v27 = 2112;
      uint32_t v28 = self;
      _os_log_impl(&dword_1853B0000, v17, OS_LOG_TYPE_ERROR, "UICollectionView asked to scroll to invalid index path: %@ for which it cannot calculate a target content offset. Ensure your index path is valid. If this is a section index path, your section must have at least one item. Collection view: %@", (uint8_t *)&v25, 0x16u);
    }
  }
  [(UIScrollView *)self contentOffset];
LABEL_7:
  double v21 = v19;
  double v22 = v20;

  double v23 = v21;
  double v24 = v22;
  result.double y = v24;
  result.double x = v23;
  return result;
}

- (CGPoint)_contentOffsetForScrollingToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 itemFrame:(CGRect)a6 containingScrollView:(id)a7 clampToScrollableArea:(BOOL)a8
{
  BOOL v8 = a8;
  double height = a6.size.height;
  double width = a6.size.width;
  double y = a6.origin.y;
  double x = a6.origin.x;
  double trailing = a5.trailing;
  bottouint64_t m = a5.bottom;
  double leading = a5.leading;
  double top = a5.top;
  id v19 = a3;
  double v20 = (UICollectionView *)a7;
  if (dyld_program_sdk_at_least() && [(UIScrollView *)v20 isPagingEnabled])
  {
    [(UIScrollView *)v20 _interpageSpacing];
    if (v22 == *MEMORY[0x1E4F1DB30] && v21 == *(double *)(MEMORY[0x1E4F1DB30] + 8))
    {
      [(UIScrollView *)v20 _pagingOrigin];
      if (v25 == *MEMORY[0x1E4F1DAD8] && v24 == *(double *)(MEMORY[0x1E4F1DAD8] + 8))
      {
        [(UIScrollView *)v20 _firstPageOffset];
        if (v28 == 0.0 && v27 == 0.0)
        {
          -[UIScrollView _rectForPageContainingRect:](v20, "_rectForPageContainingRect:", x, y, width, height);
LABEL_77:
          double v65 = v29;
          double v67 = v30;
          goto LABEL_78;
        }
      }
    }
  }
  [(UIView *)v20 bounds];
  double v97 = v31;
  double v98 = v32;
  double v94 = v33;
  double v99 = v34;
  [(UIScrollView *)v20 _effectiveContentInset];
  double v39 = 0.0;
  if (v35 >= 0.0) {
    double v40 = v35;
  }
  else {
    double v40 = 0.0;
  }
  if (v36 >= 0.0) {
    double v41 = v36;
  }
  else {
    double v41 = 0.0;
  }
  if (v37 >= 0.0) {
    double v42 = v37;
  }
  else {
    double v42 = 0.0;
  }
  double v95 = v42;
  double v96 = v40;
  if (v38 >= 0.0) {
    double v43 = v38;
  }
  else {
    double v43 = 0.0;
  }
  double v93 = v43;
  [(UICollectionViewLayout *)self->_layout _supplementaryViewInsetsForScrollingToItemAtIndexPath:v19];
  double v44 = bottom;
  double v46 = top + v45;
  double v48 = leading + v47;
  double v50 = v44 + v49;
  double v52 = trailing + v51;
  uint64_t v53 = [(UIScrollView *)v20 _contentScrollableAxes];
  if (v53 == 2) {
    double v54 = 0.0;
  }
  else {
    double v54 = v52;
  }
  if (v53 == 2) {
    double v55 = 0.0;
  }
  else {
    double v55 = v48;
  }
  if (v53 == 1)
  {
    double v54 = v52;
    double v56 = 0.0;
  }
  else
  {
    double v56 = v50;
  }
  if (v53 == 1)
  {
    double v55 = v48;
    double v57 = 0.0;
  }
  else
  {
    double v57 = v46;
  }
  if (v53) {
    double v58 = v54;
  }
  else {
    double v58 = 0.0;
  }
  if (v53) {
    double v59 = v56;
  }
  else {
    double v59 = 0.0;
  }
  if (v53) {
    double v60 = v55;
  }
  else {
    double v60 = 0.0;
  }
  if (v53) {
    double v39 = v57;
  }
  uint64_t v61 = [(UIScrollView *)v20 _contentInsetAdjustmentBehavior];
  -[UICollectionView _contentOffsetFromProposedOffset:forScrollingToItemWithFrame:atScrollPosition:additionalInsets:containingScrollViewBounds:](self, "_contentOffsetFromProposedOffset:forScrollingToItemWithFrame:atScrollPosition:additionalInsets:containingScrollViewBounds:", a4, *(void *)&v39, *(void *)&v60, *(void *)&v59, *(void *)&v58, v97 + v41, v94 + v96, v98 - (v41 + v93), v99 - (v96 + v95));
  -[UICollectionViewLayout _contentOffsetFromProposedContentOffset:forScrollingToItemAtIndexPath:atScrollPosition:](self->_layout, "_contentOffsetFromProposedContentOffset:forScrollingToItemAtIndexPath:atScrollPosition:", v19, a4, v62 - v41, v63 - v96);
  double v65 = v64;
  double v67 = v66;
  if (v61 != 2)
  {
    double v68 = [(UIScrollView *)v20 _scrollDetentOffsets];
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __151__UICollectionView__contentOffsetForScrollingToItemAtIndexPath_atScrollPosition_additionalInsets_itemFrame_containingScrollView_clampToScrollableArea___block_invoke;
    aBlock[3] = &unk_1E52E57B0;
    id v69 = v68;
    id v102 = v69;
    uint64_t v70 = (unsigned int (**)(void, double))_Block_copy(aBlock);
    if (!((unsigned int (*)(double))v70[2])(v67))
    {
      double v71 = [v69 lastObject];
      [v71 doubleValue];
      double v73 = v72;

      double v74 = [v69 firstObject];
      [v74 doubleValue];
      double v76 = v75;

      if (v94 <= v76 && v94 >= v73 && v67 > v73 && !v70[2](v70, v94))
      {
        double v77 = fmax(v76 - v94, 0.0);
        if (a4)
        {
          double v67 = v67 + v77;
        }
        else
        {
          double v78 = v67 + v77 * 0.5;
          if ((a4 & 2) != 0) {
            double v67 = v78;
          }
        }
      }
      if (v67 < v76 && v67 > v73)
      {
        unint64_t v80 = 0;
        while ([v69 count] - 1 > v80)
        {
          double v81 = [v69 objectAtIndexedSubscript:v80];
          [v81 doubleValue];
          double v83 = v82;

          id v84 = [v69 objectAtIndexedSubscript:++v80];
          [v84 doubleValue];
          double v86 = v85;

          if (v67 < v83 && v67 > v86)
          {
            double v67 = v83;
            break;
          }
        }
      }
    }
  }
  if (v8)
  {
    if (v20 == self)
    {
      -[UICollectionViewData collectionViewContentRect]((uint64_t)self->_collectionViewData);
    }
    else
    {
      [(UIScrollView *)v20 contentSize];
      double v88 = v87;
      double v90 = v89;
    }
    double v29 = -[UICollectionView _clampedContentOffset:forScrollableAreaGivenContentSize:inScrollView:]((uint64_t)self, v20, v65, v67, v88, v90);
    goto LABEL_77;
  }
LABEL_78:

  double v91 = v65;
  double v92 = v67;
  result.double y = v92;
  result.double x = v91;
  return result;
}

BOOL __151__UICollectionView__contentOffsetForScrollingToItemAtIndexPath_atScrollPosition_additionalInsets_itemFrame_containingScrollView_clampToScrollableArea___block_invoke(uint64_t a1, double a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __151__UICollectionView__contentOffsetForScrollingToItemAtIndexPath_atScrollPosition_additionalInsets_itemFrame_containingScrollView_clampToScrollableArea___block_invoke_2;
  v4[3] = &__block_descriptor_40_e25_B32__0__NSNumber_8Q16_B24l;
  *(double *)&v4[4] = a2;
  return [v2 indexOfObjectPassingTest:v4] != 0x7FFFFFFFFFFFFFFFLL;
}

BOOL __151__UICollectionView__contentOffsetForScrollingToItemAtIndexPath_atScrollPosition_additionalInsets_itemFrame_containingScrollView_clampToScrollableArea___block_invoke_2(uint64_t a1, void *a2)
{
  [a2 doubleValue];
  return vabdd_f64(v3, *(double *)(a1 + 32)) <= 0.0001;
}

- (void)_contentOffsetFromProposedOffset:(double)a3 forScrollingToItemWithFrame:(CGFloat)a4 atScrollPosition:(CGFloat)a5 additionalInsets:(CGFloat)a6 containingScrollViewBounds:(CGFloat)a7
{
  double v28 = a13;
  if ([a1 _shouldReverseLayoutDirection])
  {
    if ([a1 _flipsHorizontalAxis]) {
      double v30 = a13;
    }
    else {
      double v30 = a15;
    }
    double v28 = v30;
  }
  if (a9)
  {
    if ((a9 & 6) != 0) {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"attempt to use a scroll position with multiple vertical positioning styles"];
    }
    v39.origin.double x = a4;
    v39.origin.double y = a5;
    v39.size.double width = a6;
    v39.size.double height = a7;
    CGRectGetMinY(v39);
  }
  else
  {
    if ((a9 & 2) != 0)
    {
      if ((a9 & 4) != 0) {
        [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"attempt to use a scroll position with multiple vertical positioning styles"];
      }
      v41.origin.double x = a4;
      v41.origin.double y = a5;
      v41.size.double width = a6;
      v41.size.double height = a7;
      CGRectGetMidY(v41);
      v42.origin.double x = a16;
      v42.origin.double y = a17;
      v42.size.double width = a18;
      v42.size.double height = a19;
      CGRectGetHeight(v42);
      if ((a9 & 8) != 0) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if ((a9 & 4) != 0)
    {
      v37.origin.double x = a4;
      v37.origin.double y = a5;
      v37.size.double width = a6;
      v37.size.double height = a7;
      CGRectGetMaxY(v37);
      v38.origin.double x = a16;
      v38.origin.double y = a17;
      v38.size.double width = a18;
      v38.size.double height = a19;
      CGRectGetHeight(v38);
      if ((a9 & 8) != 0) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
  }
  if ((a9 & 8) != 0)
  {
LABEL_23:
    if ((a9 & 0x30) != 0) {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"attempt to use a scroll position with multiple horizontal positioning styles"];
    }
    v43.origin.double x = a4;
    v43.origin.double y = a5;
    v43.size.double width = a6;
    v43.size.double height = a7;
    CGRectGetMinX(v43);
    return;
  }
LABEL_15:
  if ((a9 & 0x10) != 0)
  {
    if ((a9 & 0x20) != 0) {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"attempt to use a scroll position with multiple horizontal positioning styles"];
    }
    v44.origin.double x = a4;
    v44.origin.double y = a5;
    v44.size.double width = a6;
    v44.size.double height = a7;
    CGRectGetMidX(v44);
    v45.origin.double x = a16;
    v45.origin.double y = a17;
    v45.size.double width = a18;
    v45.size.double height = a19;
    CGRectGetWidth(v45);
  }
  else if ((a9 & 0x20) != 0)
  {
    v46.origin.double x = a4;
    v46.origin.double y = a5;
    v46.size.double width = a6;
    v46.size.double height = a7;
    CGRectGetMaxX(v46);
    v47.origin.double x = a16;
    v47.origin.double y = a17;
    v47.size.double width = a18;
    v47.size.double height = a19;
    CGRectGetWidth(v47);
  }
  else if (!a9)
  {
    v40.origin.double x = a16;
    v40.origin.double y = a17;
    v40.size.double width = a18;
    v40.size.double height = a19;
    v60.origin.double x = a4;
    v60.origin.double y = a5;
    v60.size.double width = a6;
    v60.size.double height = a7;
    if (!CGRectContainsRect(v40, v60))
    {
      v48.origin.double x = a4;
      v48.origin.double y = a5;
      v48.size.double width = a6;
      v48.size.double height = a7;
      CGFloat v34 = a4;
      CGFloat v31 = CGRectGetMinY(v48) - a12;
      v49.origin.double x = a16;
      v49.origin.double y = a17;
      v49.size.double width = a18;
      v49.size.double height = a19;
      if (v31 >= CGRectGetMinY(v49))
      {
        CGFloat v32 = v34;
        v50.origin.double x = v34;
        v50.origin.double y = a5;
        v50.size.double width = a6;
        v50.size.double height = a7;
        double MaxY = CGRectGetMaxY(v50);
        v51.origin.double x = a16;
        v51.origin.double y = a17;
        v51.size.double width = a18;
        v51.size.double height = a19;
        if (MaxY > CGRectGetMaxY(v51))
        {
          v52.origin.double x = v34;
          v52.origin.double y = a5;
          v52.size.double width = a6;
          v52.size.double height = a7;
          CGRectGetMaxY(v52);
          v53.origin.double x = a16;
          v53.origin.double y = a17;
          v53.size.double width = a18;
          v53.size.double height = a19;
          CGRectGetHeight(v53);
          dyld_program_sdk_at_least();
        }
      }
      else
      {
        CGFloat v32 = v34;
      }
      v54.origin.double x = v32;
      v54.origin.double y = a5;
      v54.size.double width = a6;
      v54.size.double height = a7;
      CGFloat v33 = CGRectGetMinX(v54) - v28;
      v55.origin.double x = a16;
      v55.origin.double y = a17;
      v55.size.double width = a18;
      v55.size.double height = a19;
      if (v33 >= CGRectGetMinX(v55))
      {
        v56.origin.double x = v32;
        v56.origin.double y = a5;
        v56.size.double width = a6;
        v56.size.double height = a7;
        double MaxX = CGRectGetMaxX(v56);
        v57.origin.double x = a16;
        v57.origin.double y = a17;
        v57.size.double width = a18;
        v57.size.double height = a19;
        if (MaxX > CGRectGetMaxX(v57))
        {
          v58.origin.double x = v32;
          v58.origin.double y = a5;
          v58.size.double width = a6;
          v58.size.double height = a7;
          CGRectGetMaxX(v58);
          v59.origin.double x = a16;
          v59.origin.double y = a17;
          v59.size.double width = a18;
          v59.size.double height = a19;
          CGRectGetWidth(v59);
          dyld_program_sdk_at_least();
        }
      }
    }
  }
}

- (void)scrollToItemAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(BOOL)animated
{
  BOOL v5 = animated;
  id v8 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:indexPath];
  -[UICollectionView _scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", v8, scrollPosition, v5, 0.0, 0.0, 0.0, 0.0);
}

- (void)_scrollToItemAtIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 animated:(BOOL)a6
{
  BOOL v6 = a6;
  double trailing = a5.trailing;
  bottouint64_t m = a5.bottom;
  double leading = a5.leading;
  double top = a5.top;
  id v13 = [(UICollectionView *)self _translateDataSourceIndexPathToPresentationIndexPathAsNeeded:a3];
  -[UICollectionView _scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", v13, a4, v6, top, leading, bottom, trailing);
}

- (void)_scrollToItemAtPresentationIndexPath:(id)a3 atScrollPosition:(unint64_t)a4 additionalInsets:(NSDirectionalEdgeInsets)a5 animated:(BOOL)a6
{
  BOOL v6 = a6;
  double trailing = a5.trailing;
  bottouint64_t m = a5.bottom;
  double leading = a5.leading;
  double top = a5.top;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  id v13 = a3;
  [(UICollectionView *)self _reloadDataIfNeeded];
  if (!v13) {
    goto LABEL_24;
  }
  [(UICollectionView *)self _clearContentOffsetRestorationAnchor];
  -[UICollectionViewData _prepareToLoadData]((uint64_t)self->_collectionViewData);
  uint64_t orthogonalScrollerController = self->_orthogonalScrollerController;
  if (orthogonalScrollerController
    && -[_UICollectionViewOrthogonalScrollerSectionController isIndexPathInOrthogonalScrollingSection:]((uint64_t)orthogonalScrollerController, v13))
  {
    -[_UICollectionViewOrthogonalScrollerSectionController scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:]((id *)&self->_orthogonalScrollerController->super.isa, v13, a4, v6, top, leading, bottom, trailing);
    if (!dyld_program_sdk_at_least()) {
      goto LABEL_24;
    }
    int v15 = 1;
  }
  else
  {
    int v15 = 0;
  }
  -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v13, a4, top, leading, bottom, trailing);
  double v17 = v16;
  double v19 = v18;
  if (v6
    || [(UIScrollView *)self contentInsetAdjustmentBehavior] == UIScrollViewContentInsetAdjustmentNever)
  {
    goto LABEL_14;
  }
  [(UIScrollView *)self _effectiveContentInset];
  double v21 = v20;
  double v23 = v22;
  double v40 = v24;
  double v41 = v25;
  -[UICollectionView setContentOffset:animated:](self, "setContentOffset:animated:", 0, v17, v19);
  [(UIScrollView *)self _effectiveContentInset];
  if (v23 != v29 || v21 != v26 || v41 != v28 || v40 != v27)
  {
    -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v13, a4, top, leading, bottom, trailing);
    double v17 = v30;
    double v19 = v31;
LABEL_14:
    -[UICollectionView setContentOffset:animated:](self, "setContentOffset:animated:", v6, v17, v19);
  }
  if (dyld_program_sdk_at_least()
    && ((v15 | ![(UICollectionViewLayout *)self->_layout _estimatesSizes]) & 1) == 0)
  {
    v51.origin.double x = -[UICollectionView _frameOfElementAtScrollingTargetIndexPath:]((uint64_t)self, v13);
    double x = v51.origin.x;
    double y = v51.origin.y;
    double width = v51.size.width;
    double height = v51.size.height;
    if (CGRectIsNull(v51))
    {
      double v36 = *(NSObject **)(__UILogGetCategoryCachedImpl("UICollectionView", &_scrollToItemAtPresentationIndexPath_atScrollPosition_additionalInsets_animated____s_category)+ 8);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        CGRect v37 = v36;
        *(_DWORD *)long long buf = 138413058;
        uint64_t v43 = objc_opt_class();
        __int16 v44 = 2048;
        CGRect v45 = self;
        __int16 v46 = 2112;
        id v47 = v13;
        __int16 v48 = 2112;
        CGRect v49 = self;
        _os_log_impl(&dword_1853B0000, v37, OS_LOG_TYPE_ERROR, "<%@ %p> received null target element frame for scrolling target at index path %@. Scrolling may not function correctly. \nCollection View: %@", buf, 0x2Au);
      }
    }
    else
    {
      -[UICollectionView _storeScrollingTargetInfoForIndexPath:frame:scrollPosition:additionalInsets:]((id *)&self->super.super.super.super.isa, v13, (void *)a4, x, y, width, height, top, leading, bottom, trailing);
      if (v6) {
        __int16 v38 = ![(UIScrollView *)self isScrollAnimating];
      }
      else {
        __int16 v38 = 1;
      }
      int v39 = *((_WORD *)&self->_collectionViewFlags + 8) & 0xBFFF | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
      *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8) & 0xBFFF | (v38 << 14);
      *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v39);
    }
  }
LABEL_24:
}

- (void)_scrollViewAnimationEnded:(id)a3 finished:(BOOL)a4
{
  v8.receiver = self;
  v8.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v8 _scrollViewAnimationEnded:a3 finished:a4];
  if (self->_scrollingTargetIndexPath)
  {
    uint64_t v5 = *((void *)&self->_collectionViewFlags + 1);
    if ((v5 & 0x100) != 0)
    {
      __int16 v6 = *((_WORD *)&self->_collectionViewFlags + 8) | 0x4000;
      char v7 = *((unsigned char *)&self->_collectionViewFlags + 18);
      *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
      *((void *)&self->_collectionViewFlags + 1) = v5;
      *((unsigned char *)&self->_collectionViewFlags + 18) = v7;
      *((_WORD *)&self->_collectionViewFlags + 8) = v6;
    }
    else
    {
      [(UICollectionView *)self _clearTargetIndexPathForScrolling];
    }
  }
}

- (BOOL)_shouldResetInitialLayoutOnDataSourceChange
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 10) & 1;
}

- (void)_scrollViewWillEndDraggingWithVelocity:(CGPoint)a3 targetContentOffset:(CGPoint *)a4
{
  -[UICollectionViewLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:](self->_layout, "targetContentOffsetForProposedContentOffset:withScrollingVelocity:", a4->x, a4->y, a3.x, a3.y);
  a4->double x = v5;
  a4->double y = v6;
}

- (CGPoint)_adjustFocusContentOffset:(CGPoint)a3 toShowFocusItemWithInfo:(id)a4
{
  double y = a3.y;
  double x = a3.x;
  id v7 = a4;
  uint64_t v8 = [(UICollectionView *)self _horizontalIndexTitleBar];
  if (!v8) {
    goto LABEL_4;
  }
  BOOL v9 = (void *)v8;
  id v10 = [(UICollectionView *)self _horizontalIndexTitleBar];
  id v11 = [v7 containingView];
  int v12 = [v10 _isViewEntryCell:v11];

  if (v12)
  {
    [(UIScrollView *)self contentOffset];
  }
  else
  {
LABEL_4:
    v19.receiver = self;
    v19.super_class = (Class)UICollectionView;
    -[UIScrollView _adjustFocusContentOffset:toShowFocusItemWithInfo:](&v19, sel__adjustFocusContentOffset_toShowFocusItemWithInfo_, v7, x, y);
  }
  double v15 = v13;
  double v16 = v14;

  double v17 = v15;
  double v18 = v16;
  result.double y = v18;
  result.double x = v17;
  return result;
}

- (unint64_t)_focusPrimaryScrollableAxis
{
  double v3 = [(UICollectionView *)self collectionViewLayout];
  unint64_t v4 = [v3 _layoutAxis];

  if (v4 != 1 && v4 != 2)
  {
    v6.receiver = self;
    v6.super_class = (Class)UICollectionView;
    return [(UIScrollView *)&v6 _focusPrimaryScrollableAxis];
  }
  return v4;
}

- (void)_setShouldPreventFocusScrollPastContentSize:(BOOL)a3
{
  BOOL v3 = a3;
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  -[UIScrollView _setShouldPreventFocusScrollPastContentSize:](&v5, sel__setShouldPreventFocusScrollPastContentSize_);
  -[_UICollectionViewOrthogonalScrollerSectionController setShouldPreventFocusScrollPastContentSize:]((uint64_t)self->_orthogonalScrollerController, v3);
}

- (id)_createStaticScrollBar
{
  uint64_t v2 = [_UIIndexBarStaticScrollAccessory alloc];
  BOOL v3 = -[_UIStaticScrollBar initWithFrame:](v2, "initWithFrame:", *MEMORY[0x1E4F1DB28], *(double *)(MEMORY[0x1E4F1DB28] + 8), *(double *)(MEMORY[0x1E4F1DB28] + 16), *(double *)(MEMORY[0x1E4F1DB28] + 24));
  return v3;
}

- (BOOL)indexBarView:(id)a3 didSelectEntry:(id)a4 atIndex:(int64_t)a5
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v7 = a4;
  uint64_t v8 = [v7 title];
  BOOL v9 = [v7 indexPath];

  if (v9
    || ([(UICollectionView *)self _indexPathForEntryWithTitle:v8 atIndex:a5 validateTitles:1], (BOOL v9 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    [(UIScrollView *)self contentOffset];
    double v11 = v10;
    double v13 = v12;
    double v14 = [(UIView *)self _focusBehavior];
    if ([v14 refinesIndexBarTargetContentOffset])
    {
      double v15 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:self];
      double v16 = [v15 scrollManager];
      if (v16)
      {
        v49.origin.double x = -[UICollectionView _frameOfElementAtScrollingTargetIndexPath:]((uint64_t)self, v9);
        double x = v49.origin.x;
        double y = v49.origin.y;
        double width = v49.size.width;
        double height = v49.size.height;
        if (CGRectIsNull(v49))
        {
          double v21 = *(NSObject **)(__UILogGetCategoryCachedImpl("UICollectionView", &indexBarView_didSelectEntry_atIndex____s_category)+ 8);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            double v22 = v21;
            int v38 = 138413314;
            uint64_t v39 = objc_opt_class();
            __int16 v40 = 2048;
            double v41 = self;
            __int16 v42 = 2048;
            int64_t v43 = a5;
            __int16 v44 = 2112;
            CGRect v45 = v9;
            __int16 v46 = 2112;
            id v47 = self;
            _os_log_impl(&dword_1853B0000, v22, OS_LOG_TYPE_ERROR, "<%@ %p> received null target element frame for scrolling to index bar entry index (%ld) at index path %@. Scrolling may not function correctly. \nCollection View: %@", (uint8_t *)&v38, 0x34u);
          }
        }
        else
        {
          -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v9, 1, 0.0, 0.0, 0.0, 0.0);
          double v26 = v25;
          double v28 = v27;
          double v29 = [(UIScrollView *)self _focusTuple];
          objc_msgSend(v16, "contentOffsetForEnvironmentScrollableContainer:toShowRect:targetOffset:", v29, x, y, width, height, v26, v28);
          double v31 = v30;
          double v33 = v32;

          -[UICollectionView setContentOffset:animated:](self, "setContentOffset:animated:", 0, v31, v33);
        }
      }
    }
    else
    {
      if ([(UIScrollView *)self _shouldReverseLayoutDirectionConsideringFlippedHorizontalAxis])
      {
        uint64_t v23 = 33;
      }
      else
      {
        uint64_t v23 = 9;
      }
      -[UICollectionView _scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtIndexPath:atScrollPosition:additionalInsets:animated:", v9, v23, 0, 0.0, 0.0, 0.0, 0.0);
    }
    [(UIScrollView *)self contentOffset];
    BOOL v36 = vabdd_f64(v34, v11) >= 0.00000011920929;
    BOOL v24 = vabdd_f64(v35, v13) >= 0.00000011920929 || v36;
  }
  else
  {
    BOOL v24 = 0;
  }

  return v24;
}

- (CGPoint)indexBarAccessoryView:(id)a3 contentOffsetForEntry:(id)a4 atIndex:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  double v10 = [v9 title];
  double v11 = [v9 indexPath];
  if (v11
    || ([(UICollectionView *)self _indexPathForEntryWithTitle:v10 atIndex:a5 validateTitles:1], (double v11 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v11, 1, 0.0, 0.0, 0.0, 0.0);
    double v13 = v12;
    double v15 = v14;
    double v16 = [(UIView *)self _focusBehavior];
    if ([v16 refinesIndexBarTargetContentOffset])
    {
      double v17 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:self];
      double v18 = [v17 scrollManager];
      if (v18)
      {
        double v19 = -[UICollectionView _frameOfElementAtScrollingTargetIndexPath:]((uint64_t)self, v11);
        double v21 = v20;
        double v23 = v22;
        double v25 = v24;
        double v26 = [(UIScrollView *)self _focusTuple];
        objc_msgSend(v18, "contentOffsetForEnvironmentScrollableContainer:toShowRect:targetOffset:", v26, v19, v21, v23, v25, v13, v15);
        double v13 = v27;
        double v15 = v28;
      }
    }
  }
  else
  {
    v33.receiver = self;
    v33.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v33 indexBarAccessoryView:v8 contentOffsetForEntry:v9 atIndex:a5];
    double v13 = v31;
    double v15 = v32;
  }

  double v29 = v13;
  double v30 = v15;
  result.double y = v30;
  result.double x = v29;
  return result;
}

- (CGPoint)_contentOffsetForLowFidelityScrollInDirection:(CGPoint)a3 duration:(double *)a4
{
  double y = a3.y;
  double x = a3.x;
  v81.receiver = self;
  v81.super_class = (Class)UICollectionView;
  -[UIScrollView _contentOffsetForLowFidelityScrollInDirection:duration:](&v81, sel__contentOffsetForLowFidelityScrollInDirection_duration_, a4);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  if (y == 0.0
    || ([(UIScrollView *)self contentSize], double v12 = v11, [(UIView *)self bounds], v12 > v13))
  {
    if (x == 0.0
      || ([(UIScrollView *)self contentSize], double v15 = v14, [(UIView *)self bounds], v15 > v16))
    {
      if (!self
        || y >= 0.0
        || ([(UIScrollView *)self _contentInsetIncludingDecorations],
            v10 + v17 > 0.001))
      {
        if (x >= 0.0
          && (x <= 0.0
           || ![(UIView *)self _shouldReverseLayoutDirection]
           || [(UIView *)self _flipsHorizontalAxis])
          || ([(UICollectionView *)self _isContentOffset:v8 atStartOfAxis:v10] & 1) == 0)
        {
          if ([(UIScrollView *)self isScrollAnimating]) {
            [(UIScrollView *)self _animatedTargetOffset];
          }
          else {
            [(UIScrollView *)self contentOffset];
          }
          double v20 = v18;
          double v21 = v19;
          [(UIView *)self bounds];
          double v23 = v22;
          double v25 = v24;
          double v26 = v20 + x * v22;
          double v27 = v21 + y * v24;
          double v78 = v29;
          double v79 = v28;
          double v30 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 0, v28, v29, v22, v24);
          uint64_t v31 = [(UICollectionViewLayout *)self->_layout _layoutAxis];
          v80[0] = MEMORY[0x1E4F143A8];
          v80[1] = 3221225472;
          v80[2] = __75__UICollectionView__contentOffsetForLowFidelityScrollInDirection_duration___block_invoke;
          v80[3] = &unk_1E52E5338;
          v80[4] = self;
          double v32 = [(UICollectionView *)(uint64_t)self _layoutAttributesClosestToReferencePoint:v31 amongCandidates:v80 onAxis:v26 shouldConsiderBlock:v27];
          objc_super v33 = v32;
          if (v32)
          {
            double v70 = v27;
            double v71 = v26;
            [v32 frame];
            CGFloat v76 = v35;
            CGFloat v77 = v34;
            CGFloat v74 = v37;
            CGFloat rect2 = v36;
            layout = self->_layout;
            uint64_t v39 = [v33 indexPath];
            [(UICollectionViewLayout *)layout _supplementaryViewInsetsForScrollingToItemAtIndexPath:v39];
            double v72 = v41;
            double v73 = v40;
            double v43 = v42;
            double v45 = v44;

            if ([(UIView *)self _shouldReverseLayoutDirection])
            {
              BOOL v46 = [(UIView *)self _flipsHorizontalAxis];
              if (v46) {
                double v47 = v43;
              }
              else {
                double v47 = v45;
              }
              if (!v46) {
                double v45 = v43;
              }
              double v43 = v47;
            }
            if (y < 0.0)
            {
              uint64_t v48 = 4;
            }
            else
            {
              if (y > 0.0) {
                uint64_t v48 = 1;
              }
              else {
                uint64_t v48 = 32;
              }
              if (y <= 0.0 && x >= 0.0)
              {
                if (x <= 0.0) {
                  uint64_t v48 = 0;
                }
                else {
                  uint64_t v48 = 8;
                }
              }
            }
            [(UIScrollView *)self _effectiveContentInset];
            double v50 = v78 + v49;
            double v53 = v23 - (v51 + v52);
            double v55 = v25 - (v49 + v54);
            v83.origin.double x = v43 + v79 + v51;
            v84.size.double height = v74;
            v83.origin.double y = v73 + v50;
            v83.size.double width = v53 - (v43 + v45);
            v83.size.double height = v55 - (v73 + v72);
            v84.origin.double y = v76;
            v84.origin.double x = v77;
            v84.size.double width = rect2;
            if (CGRectContainsRect(v83, v84))
            {
              if (y < 0.0) {
                double v56 = v25;
              }
              else {
                double v56 = -0.0;
              }
              double v57 = v56 + v70;
              if (x >= 0.0) {
                double v58 = -0.0;
              }
              else {
                double v58 = v23;
              }
              double v59 = v58 + v71;
              CGRect v60 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 0, v71, v70, v23, v25);
              uint64_t v61 = [(UICollectionView *)(uint64_t)self _layoutAttributesClosestToReferencePoint:[(UICollectionViewLayout *)self->_layout _layoutAxis] amongCandidates:&__block_literal_global_680 onAxis:v59 shouldConsiderBlock:v57];
              double v62 = v61;
              if (v61)
              {
                double v63 = [v61 indexPath];
                -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v63, v48, 0.0, 0.0, 0.0, 0.0);
                CGFloat v8 = v64;
                CGFloat v10 = v65;
              }
            }
            else
            {
              CGRect v60 = [v33 indexPath];
              -[UICollectionView _contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:](self, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", v60, v48, 0.0, 0.0, 0.0, 0.0);
              CGFloat v8 = v66;
              CGFloat v10 = v67;
            }
          }
        }
      }
    }
  }
  double v68 = v8;
  double v69 = v10;
  result.double y = v69;
  result.double x = v68;
  return result;
}

BOOL __75__UICollectionView__contentOffsetForLowFidelityScrollInDirection_duration___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(id ***)(*(void *)(a1 + 32) + 2896);
  BOOL v3 = [a2 indexPath];
  unint64_t v4 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](v2, (uint64_t)v3);
  BOOL v5 = v4 != 0;

  return v5;
}

uint64_t __75__UICollectionView__contentOffsetForLowFidelityScrollInDirection_duration___block_invoke_2()
{
  return 1;
}

- (id)_focusFastScrollingIndexBarEntries
{
  BOOL v3 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
  if ([v3 count])
  {
    id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __54__UICollectionView__focusFastScrollingIndexBarEntries__block_invoke;
    void v9[3] = &unk_1E52E57D8;
    v9[4] = self;
    id v5 = v4;
    id v10 = v5;
    [v3 enumerateObjectsUsingBlock:v9];
    objc_super v6 = v10;
    id v7 = v5;
  }
  else
  {
    v11.receiver = self;
    v11.super_class = (Class)UICollectionView;
    id v7 = [(UIScrollView *)&v11 _focusFastScrollingIndexBarEntries];
  }

  return v7;
}

void __54__UICollectionView__focusFastScrollingIndexBarEntries__block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_super v6 = [*(id *)(a1 + 32) _indexPathForEntryWithTitle:v5 atIndex:a3 validateTitles:0];
  if ([v6 length] == 1)
  {
    objc_msgSend(MEMORY[0x1E4F28D58], "indexPathForItem:inSection:", 0, objc_msgSend(v6, "indexAtPosition:", 0));
    id v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v7 = v6;
  }
  CGFloat v8 = v7;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 3221225472;
  double v14 = __54__UICollectionView__focusFastScrollingIndexBarEntries__block_invoke_2;
  double v15 = &unk_1E52E5820;
  objc_copyWeak(&v18, &location);
  id v9 = v6;
  id v16 = v9;
  id v10 = v8;
  id v17 = v10;
  objc_super v11 = +[_UIFocusFastScrollingIndexBarEntry entryWithTitle:v5 generator:&v12];
  objc_msgSend(v11, "setTargetFocusedIndexPath:", v10, v12, v13, v14, v15);
  [*(id *)(a1 + 40) addObject:v11];

  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);
}

double __54__UICollectionView__focusFastScrollingIndexBarEntries__block_invoke_2(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (os_variant_has_internal_diagnostics())
  {
    if (!WeakRetained)
    {
      double v22 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_fault_impl(&dword_1853B0000, v22, OS_LOG_TYPE_FAULT, "Index entry's weak reference to UICollectionView could not be resolved to strong reference.", buf, 2u);
      }

      goto LABEL_12;
    }
  }
  else if (!WeakRetained)
  {
    double v23 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIInternalPreference_CollectionViewLimitsCellsCreatedPerPass_block_invoke_8___s_category)+ 8);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)double v25 = 0;
      _os_log_impl(&dword_1853B0000, v23, OS_LOG_TYPE_ERROR, "Index entry's weak reference to UICollectionView could not be resolved to strong reference.", v25, 2u);
    }
    goto LABEL_12;
  }
  [WeakRetained contentSize];
  if (v3 == 0.0 || ([WeakRetained contentSize], v4 == 0.0))
  {
LABEL_12:
    double v21 = INFINITY;
    goto LABEL_13;
  }
  objc_msgSend(WeakRetained, "_contentOffsetForScrollingToItemAtIndexPath:atScrollPosition:additionalInsets:", *(void *)(a1 + 32), 1, 0.0, 0.0, 0.0, 0.0);
  double v6 = v5;
  double v8 = v7;
  id v9 = [WeakRetained _collectionViewData];
  double v10 = -[UICollectionViewData rectForItemAtIndexPath:]((uint64_t)v9, *(void **)(a1 + 40));
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  id v17 = +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:WeakRetained];
  id v18 = [v17 scrollManager];
  double v19 = [WeakRetained _focusTuple];
  objc_msgSend(v18, "contentOffsetForEnvironmentScrollableContainer:toShowRect:targetOffset:", v19, v10, v12, v14, v16, v6, v8);
  double v21 = v20;

LABEL_13:
  return v21;
}

- (void)_setupIndexOverlayManagerIfNecessary
{
  double v3 = [(UICollectionView *)self _indexOverlayManager];

  if (!v3)
  {
    double v4 = -[_UICollectionTableIndexOverlayManager initWithHost:]((id *)[_UICollectionTableIndexOverlayManager alloc], self);
    [(UICollectionView *)self _setIndexOverlayManager:v4];
  }
}

- (void)_wheelChangedWithEvent:(id)a3
{
  id v4 = a3;
  double v5 = [(UICollectionView *)self _indexOverlayManager];
  double v6 = [(UIView *)self _screen];
  if ([v6 _userInterfaceIdiom] != 3
    || !v5
    || ![(UICollectionView *)self _wantsIndexOverlays])
  {

    goto LABEL_8;
  }
  BOOL v7 = [(UIView *)self _isFocusedOrAncestorOfFocusedView];

  if (!v7)
  {
LABEL_8:
    v10.receiver = self;
    double v8 = &v10;
    goto LABEL_9;
  }
  if ((-[_UICollectionTableIndexOverlayManager handleWheelChangedEvent:]((uint64_t)v5, v4) & 1) == 0)
  {
    id v9 = self;
    double v8 = (objc_super *)&v9;
LABEL_9:
    v8->super_class = (Class)UICollectionView;
    -[objc_super _wheelChangedWithEvent:](v8, sel__wheelChangedWithEvent_, v4, v9);
  }
}

- (void)_moveWithEvent:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(UICollectionView *)self _indexOverlayManager];
  double v6 = (void *)v5;
  collectionViewData = self->_collectionViewData;
  if (collectionViewData
    && (collectionViewData->_totalItemCount >= 1 ? (BOOL v8 = v5 == 0) : (BOOL v8 = 1), !v8 && (*(unsigned char *)(v5 + 48) & 1) != 0))
  {
    -[_UICollectionTableIndexOverlayManager handleMoveEvent:](v5, v4);
  }
  else
  {
    v9.receiver = self;
    v9.super_class = (Class)UICollectionView;
    [(UIResponder *)&v9 _moveWithEvent:v4];
  }
}

- (int64_t)_currentSectionIndexTitleIndex
{
  currentIndexTitleIndedouble x = self->_currentIndexTitleIndex;
  if (currentIndexTitleIndex != -1)
  {
    id v4 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
    unint64_t v5 = [v4 count];

    if (currentIndexTitleIndex < v5) {
      return self->_currentIndexTitleIndex;
    }
  }
  [(UIView *)self bounds];
  double v8 = v7;
  double v10 = v9;
  double v13 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](self->_collectionViewData, 0, v7, v9, v11, v12);
  double v14 = [(UICollectionView *)(uint64_t)self _layoutAttributesClosestToReferencePoint:[(UICollectionViewLayout *)self->_layout _layoutAxis] amongCandidates:&__block_literal_global_691 onAxis:v8 shouldConsiderBlock:v10];
  double v15 = v14;
  int64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
  if (v14)
  {
    double v16 = [v14 indexPath];
    uint64_t v17 = [v16 section];

    id v18 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
    uint64_t v21 = 0;
    double v22 = &v21;
    uint64_t v23 = 0x2020000000;
    uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 3221225472;
    v20[2] = __50__UICollectionView__currentSectionIndexTitleIndex__block_invoke_2;
    v20[3] = &unk_1E52E5848;
    void v20[5] = &v21;
    void v20[6] = v17;
    void v20[4] = self;
    [v18 enumerateObjectsUsingBlock:v20];
    int64_t v6 = v22[3];
    if (v6 == 0x7FFFFFFFFFFFFFFFLL)
    {
      if ([v18 count])
      {
        int64_t v6 = 0;
        v22[3] = 0;
      }
      else
      {
        int64_t v6 = v22[3];
      }
    }
    _Block_object_dispose(&v21, 8);
  }
  return v6;
}

uint64_t __50__UICollectionView__currentSectionIndexTitleIndex__block_invoke()
{
  return 1;
}

void __50__UICollectionView__currentSectionIndexTitleIndex__block_invoke_2(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  double v8 = (void *)a1[4];
  uint64_t v9 = a3;
  if (v8[330])
  {
    id v12 = v7;
    double v10 = [v8 _dataSourceProxy];
    double v11 = [v10 collectionView:a1[4] indexPathForIndexTitle:v12 atIndex:a3];

    uint64_t v9 = [v11 section];
    id v7 = v12;
  }
  if (v9 == a1[6])
  {
    *(void *)(*(void *)(a1[5] + 8) + 24) = a3;
    *a4 = 1;
  }
}

- (void)_recomputeSectionIndexTitleIndex
{
  self->_currentIndexTitleIndedouble x = -1;
  int64_t v3 = [(UICollectionView *)self _currentSectionIndexTitleIndex];
  self->_currentIndexTitleIndedouble x = v3;
  id v4 = [(UICollectionView *)self _updateIndexOverlayToShowTitleAtIndex:v3];
}

- (id)_updateIndexOverlayToShowTitleAtIndex:(int64_t)a3
{
  unint64_t v5 = [(UICollectionView *)self _dataSourceSectionIndexTitles];
  int64_t v6 = v5;
  if (a3 < 0 || [v5 count] <= (unint64_t)a3)
  {
    id v7 = 0;
  }
  else
  {
    id v7 = [v6 objectAtIndex:a3];
    -[_UICollectionTableIndexOverlayManager setIndexOverlayIndicatorViewText:]((uint64_t)self->_indexOverlayManager, v7);
  }

  return v7;
}

- (void)_moveSectionIndexTitleIndexToIndex:(int64_t)a3 highlight:(BOOL)a4
{
  if ((a3 & 0x8000000000000000) == 0)
  {
    BOOL v4 = a4;
    id v7 = -[UICollectionView _updateIndexOverlayToShowTitleAtIndex:](self, "_updateIndexOverlayToShowTitleAtIndex:");
    if (v7)
    {
      double v11 = v7;
      int64_t v8 = [(UICollectionView *)self _sectionIndexChangedToIndex:a3 title:v7];
      uint64_t v9 = [MEMORY[0x1E4F28D58] indexPathForItem:0 inSection:v8];
      if (v4)
      {
        int64_t v10 = [(UICollectionView *)self _globalIndexPathForItemAtIndexPath:v9];
        if (v10 != 0x7FFFFFFFFFFFFFFFLL) {
          [(UICollectionView *)self _unhighlightAllItemsAndHighlightGlobalItem:v10];
        }
      }

      id v7 = v11;
    }
  }
}

- (void)_shiftSectionIndexTitleIndexByAmount:(int64_t)a3
{
  int64_t v4 = [(UICollectionView *)self _currentSectionIndexTitleIndex] + a3;
  [(UICollectionView *)self _moveSectionIndexTitleIndexToIndex:v4 highlight:1];
}

- (void)userInteractionStoppedWithIndexBarView:(id)a3
{
  int64_t v4 = [(UIView *)self traitCollection];
  uint64_t v5 = [v4 userInterfaceIdiom];

  if (v5 == 3)
  {
    id v6 = [(UICollectionView *)self _indexOverlayManager];
    -[_UICollectionTableIndexOverlayManager transitionIndexOverlaySelectionViewToVisible:]((uint64_t)v6, 1);
  }
}

- (int64_t)_sectionIndexChangedToIndex:(int64_t)a3 title:(id)a4
{
  id v6 = a4;
  if (*((void *)&self->_collectionViewFlags + 1))
  {
    int64_t v8 = [(UICollectionView *)self _dataSourceProxy];
    id v7 = [v8 collectionView:self indexPathForIndexTitle:v6 atIndex:a3];

    int64_t v9 = [v7 section];
    if (v7)
    {
      self->_currentIndexTitleIndedouble x = a3;
      -[UICollectionView _scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:](self, "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", v7, 1, 0, 0.0, 0.0, 0.0, 0.0);
      int64_t v10 = [(UIView *)self traitCollection];
      char v11 = [v10 interactionModel];

      if ((v11 & 2) != 0) {
        [(UICollectionView *)self _requestFocusOnItemAtIndexPath:v7];
      }
    }
    a3 = v9;
  }
  else
  {
    id v7 = 0;
  }

  return a3;
}

- (void)_transitionIndexOverlaySelectionViewToVisible:(BOOL)a3
{
  BOOL v3 = a3;
  id v4 = [(UICollectionView *)self _indexOverlayManager];
  -[_UICollectionTableIndexOverlayManager transitionIndexOverlaySelectionViewToVisible:]((uint64_t)v4, v3);
}

- (void)_hideIndexOverlay
{
  id v2 = [(UICollectionView *)self _indexOverlayManager];
  -[_UICollectionTableIndexOverlayManager transitionIndexOverlayIndicatorViewToVisible:shouldFadeBackToInvisible:]((uint64_t)v2, 0, 0);
}

- (void)registerNib:(UINib *)nib forCellWithReuseIdentifier:(NSString *)identifier
{
  double v14 = nib;
  id v7 = identifier;
  if (![(NSString *)v7 length])
  {
    char v11 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v12 = *MEMORY[0x1E4F1C3C8];
    double v13 = NSStringFromSelector(a2);
    [v11 raise:v12, @"must pass a valid reuse identifier to -[UICollectionView %@]", v13 format];
  }
  if (!self->_cellNibDict)
  {
    int64_t v8 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    cellNibDict = self->_cellNibDict;
    self->_cellNibDict = v8;
  }
  [(NSMutableDictionary *)self->_cellClassDict removeObjectForKey:v7];
  int64_t v10 = self->_cellNibDict;
  if (v14) {
    [(NSMutableDictionary *)v10 setValue:v14 forKey:v7];
  }
  else {
    [(NSMutableDictionary *)v10 removeObjectForKey:v7];
  }
}

- (void)registerNib:(UINib *)nib forSupplementaryViewOfKind:(NSString *)kind withReuseIdentifier:(NSString *)identifier
{
  uint64_t v21 = nib;
  int64_t v9 = kind;
  int64_t v10 = identifier;
  if (![(NSString *)v9 length])
  {
    double v15 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v16 = *MEMORY[0x1E4F1C3C8];
    uint64_t v17 = NSStringFromSelector(a2);
    [v15 raise:v16, @"must pass a valid element kind to -[UICollectionView %@]", v17 format];
  }
  if (![(NSString *)v10 length])
  {
    id v18 = (void *)MEMORY[0x1E4F1CA00];
    uint64_t v19 = *MEMORY[0x1E4F1C3C8];
    double v20 = NSStringFromSelector(a2);
    [v18 raise:v19, @"must pass a valid reuse identifier to -[UICollectionView %@]", v20 format];
  }
  if (!self->_supplementaryViewNibDict)
  {
    char v11 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    supplementaryViewNibDict = self->_supplementaryViewNibDict;
    self->_supplementaryViewNibDict = v11;
  }
  double v13 = [(id)objc_opt_class() _reuseKeyForSupplementaryViewOfKind:v9 withReuseIdentifier:v10];
  [(NSMutableDictionary *)self->_supplementaryViewClassDict removeObjectForKey:v13];
  double v14 = self->_supplementaryViewNibDict;
  if (v21) {
    [(NSMutableDictionary *)v14 setValue:v21 forKey:v13];
  }
  else {
    [(NSMutableDictionary *)v14 removeObjectForKey:v13];
  }
  [(UICollectionView *)self _registeredSupplementaryViewKind:v9];
}

- (void)_setExternalObjectTable:(id)a3 forNibLoadingOfCellWithReuseIdentifier:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  cellNibExternalObjectsTables = self->_cellNibExternalObjectsTables;
  if (!cellNibExternalObjectsTables)
  {
    int64_t v8 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    int64_t v9 = self->_cellNibExternalObjectsTables;
    self->_cellNibExternalObjectsTables = v8;

    cellNibExternalObjectsTables = self->_cellNibExternalObjectsTables;
  }
  [(NSMutableDictionary *)cellNibExternalObjectsTables setObject:v10 forKey:v6];
}

- (void)_setExternalObjectTable:(id)a3 forNibLoadingOfSupplementaryViewOfKind:(id)a4 withReuseIdentifier:(id)a5
{
  id v14 = a3;
  id v8 = a4;
  id v9 = a5;
  supplementaryViewNibExternalObjectsTables = self->_supplementaryViewNibExternalObjectsTables;
  if (!supplementaryViewNibExternalObjectsTables)
  {
    char v11 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v12 = self->_supplementaryViewNibExternalObjectsTables;
    self->_supplementaryViewNibExternalObjectsTables = v11;

    supplementaryViewNibExternalObjectsTables = self->_supplementaryViewNibExternalObjectsTables;
  }
  double v13 = [(id)objc_opt_class() _reuseKeyForSupplementaryViewOfKind:v8 withReuseIdentifier:v9];
  [(NSMutableDictionary *)supplementaryViewNibExternalObjectsTables setObject:v14 forKey:v13];
}

- (void)_prepareViewForUse:(id)a3 withElementCategory:(unint64_t)a4 elementKind:(id)a5 reuseIdentifier:(id)a6 indexPath:(id)a7
{
  id v12 = a3;
  [(UICollectionView *)self _prepareViewForUse:v12 withElementCategory:a4 elementKind:a5 reuseIdentifier:a6 indexPath:a7 applyDefaultAttributes:1];
  -[_UICollectionViewSubviewManager ensureViewIsRemovedFromReuseQueue:]((uint64_t)self->_subviewManager, v12);
}

- (id)_dequeueReusableCellWithRegistration:(id)a3 forIndexPath:(id)a4
{
  id v6 = a3;
  id v7 = [(UICollectionView *)self _diffableIdentifierForIndexPath:a4];
  id v8 = [(UICollectionView *)self dequeueConfiguredReusableCellWithRegistration:v6 forIndexPath:a4 item:v7];

  return v8;
}

- (id)_reusableViewWithoutAttributesForElementCategory:(unint64_t)a3 kind:(id)a4 indexPath:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  uint64_t v10 = *((void *)&self->_collectionViewFlags + 1);
  int v12 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16) | 2;
  *((_WORD *)&self->_collectionViewFlags + 8) |= 2u;
  if (a3 == 1)
  {
    double v13 = [(UICollectionView *)self _dataSourceProxy];
    uint64_t v14 = [v13 collectionView:self viewForSupplementaryElementOfKind:v8 atIndexPath:v9];
    goto LABEL_5;
  }
  if (!a3)
  {
    double v13 = [(UICollectionView *)self _dataSourceProxy];
    uint64_t v14 = [v13 collectionView:self cellForItemAtIndexPath:v9];
LABEL_5:
    double v15 = (void *)v14;

    int v16 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    uint64_t v10 = *((void *)&self->_collectionViewFlags + 1);
    goto LABEL_7;
  }
  double v15 = 0;
  int v16 = v12 & 0xFFFFFF;
LABEL_7:
  *(void *)&self->_uint64_t collectionViewFlags = collectionViewFlags;
  *((void *)&self->_collectionViewFlags + 1) = v10;
  *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v16);
  *((_WORD *)&self->_collectionViewFlags + 8) = v16 & 0xFFFD;
  subviewManager = self->_subviewManager;
  if (subviewManager) {
    [(NSHashTable *)subviewManager->_dequeuedViews removeObject:v15];
  }

  return v15;
}

- (void)reloadSections:(NSIndexSet *)sections
{
  id v4 = [(UICollectionView *)self _sectionIndexesAfterShadowUpdatesForSectionIndexes:sections];
  [(UICollectionView *)self _updateSections:v4 updateAction:2];
}

- (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection
{
  if (dyld_program_sdk_at_least()
    && !(*((_WORD *)&self->_collectionViewFlags + 8) & 4 | ~*((_DWORD *)&self->_collectionViewFlags + 2) & 4))
  {
    uint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
    [v10 handleFailureInMethod:a2, self, @"UICollectionView.m", 10124, @"UICollectionView must be updated via the UICollectionViewDiffableDataSource APIs when acting as the UICollectionView's dataSource: please do not call mutation APIs directly on UICollectionView. %@", self object file lineNumber description];
  }
  int64_t v8 = [(UICollectionView *)self presentationSectionIndexForDataSourceSectionIndex:section];
  int64_t v9 = [(UICollectionView *)self presentationSectionIndexForDataSourceSectionIndex:newSection];
  [(UICollectionView *)self _moveSection:v8 toSection:v9];
}

- (void)_moveSection:(int64_t)a3 toSection:(int64_t)a4
{
  id v11 = [(UICollectionView *)self _arrayForUpdateAction:3];
  id v7 = [UICollectionViewUpdateItem alloc];
  int64_t v8 = [MEMORY[0x1E4F28D58] indexPathForRow:0x7FFFFFFFFFFFFFFFLL inSection:a3];
  int64_t v9 = [MEMORY[0x1E4F28D58] indexPathForRow:0x7FFFFFFFFFFFFFFFLL inSection:a4];
  uint64_t v10 = [(UICollectionViewUpdateItem *)v7 initWithInitialIndexPath:v8 finalIndexPath:v9 updateAction:3];

  [v11 addObject:v10];
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x400000000) == 0)
  {
    [(UICollectionView *)self _setupCellAnimations];
    [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:0];
  }
}

- (void)_updateWithUpdates:(id)a3 updateAction:(int64_t)a4
{
  id v7 = a3;
  uint64_t v6 = [v7 count];
  if (a4 != 4 && v6) {
    [(UICollectionView *)self _updateRowsAtIndexPaths:0 updateAction:a4 updates:v7];
  }
}

uint64_t __65__UICollectionView__updateRowsAtIndexPaths_updateAction_updates___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = [*(id *)(a1 + 32) _addUpdateToShadowControllerIfNeeded:a2];
  if ((result & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

- (void)moveItemAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath
{
  if (!(*((_WORD *)&self->_collectionViewFlags + 8) & 4 | ~*((_DWORD *)&self->_collectionViewFlags + 2) & 4))
  {
    int64_t v9 = [MEMORY[0x1E4F28B00] currentHandler];
    [v9 handleFailureInMethod:a2, self, @"UICollectionView.m", 10230, @"UICollectionView must be updated via the UICollectionViewDiffableDataSource APIs when acting as the UICollectionView's dataSource: please do not call mutation APIs directly on UICollectionView. %@", self object file lineNumber description];
  }
  id v10 = [(UICollectionView *)self _indexPathAfterShadowUpdatesForIndexPath:indexPath];
  id v7 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathAfterShadowUpdates:newIndexPath allowingAppendingInserts:[(NSIndexPath *)indexPath section] != [(NSIndexPath *)newIndexPath section]];
  [(UICollectionView *)self _moveItemAtIndexPath:v10 toIndexPath:v7];
}

- (void)_moveItemAtIndexPath:(id)a3 toIndexPath:(id)a4
{
  id v11 = [(UICollectionView *)self _arrayForUpdateAction:3];
  id v7 = [[UICollectionViewUpdateItem alloc] initWithInitialIndexPath:a3 finalIndexPath:a4 updateAction:3];
  [v11 addObject:v7];
  BOOL v8 = [(UICollectionView *)self _addUpdateToShadowControllerIfNeeded:v7];
  uint64_t v9 = *((void *)&self->_collectionViewFlags + 1);
  if (v8)
  {
    if ((v9 & 0x400000000) == 0)
    {
      [(UICollectionView *)self _setupCellAnimations];
      [(UICollectionView *)self _endItemAnimationsWithInvalidationContext:0];
    }
  }
  else if ((v9 & 0x400000000) != 0)
  {
    int v10 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    *(void *)&self->_uint64_t collectionViewFlags = self->_collectionViewFlags;
    *((void *)&self->_collectionViewFlags + 1) = v9 | 0x800000000;
    *((_WORD *)&self->_collectionViewFlags + 8) = v10;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v10);
  }
  else
  {
    [(UICollectionView *)self reloadData];
  }
}

- (void)_endItemAnimationsWithInvalidationContext:(id)a3
{
}

- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4
{
}

- (void)_endItemAnimationsWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5
{
}

- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Batch_Updates:(id)a3
{
  uint64_t v5 = (void *)MEMORY[0x1E4F28B00];
  id v6 = a3;
  id v7 = [v5 currentHandler];
  [v7 handleFailureInMethod:a2, self, @"UICollectionView.m", 10798, @"%@", v6 object file lineNumber description];
}

- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Sections:(id)a3
{
  uint64_t v5 = (void *)MEMORY[0x1E4F28B00];
  id v6 = a3;
  id v7 = [v5 currentHandler];
  [v7 handleFailureInMethod:a2, self, @"UICollectionView.m", 10803, @"%@", v6 object file lineNumber description];
}

- (void)_Bug_Detected_In_Client_Of_UICollectionView_Invalid_Number_Of_Items_In_Section:(id)a3
{
  uint64_t v5 = (void *)MEMORY[0x1E4F28B00];
  id v6 = a3;
  id v7 = [v5 currentHandler];
  [v7 handleFailureInMethod:a2, self, @"UICollectionView.m", 10808, @"%@", v6 object file lineNumber description];
}

- (void)_updateFocusedCellIndexPathIfNecessaryWithLastFocusedRect:(CGRect)a3
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  uint64_t v8 = [(UICollectionView *)self _focusedItemState];
  uint64_t v9 = (void *)v8;
  if (v8) {
    int v10 = *(void **)(v8 + 16);
  }
  else {
    int v10 = 0;
  }
  id v25 = v10;

  if (v25)
  {
    uint64_t v11 = [v25 item];
    uint64_t v12 = [v25 section];
    NSInteger v13 = [(UICollectionView *)self numberOfSections];
    if (v12 < v13) {
      unint64_t v14 = -[UICollectionView numberOfItemsInSection:](self, "numberOfItemsInSection:", [v25 section]);
    }
    else {
      unint64_t v14 = 0;
    }
    BOOL v15 = v11 == 0x7FFFFFFFFFFFFFFFLL || [v25 item] < v14;
    if (v12 < v13 && v15) {
      goto LABEL_21;
    }
    if (v12 >= v13) {
      LOBYTE(v15) = 1;
    }
    if (!v15 && v14)
    {
      int v16 = objc_msgSend(MEMORY[0x1E4F28D58], "indexPathForItem:inSection:", v14 - 1, objc_msgSend(v25, "section"));
      uint64_t v17 = [(UICollectionView *)self _focusedItemState];
      id v18 = -[_UICollectionViewFocusedItemState copyWithIndexPath:preservingReusableView:](v17, v16, 0);
      [(UICollectionView *)self _setFocusedItemState:v18];
    }
  }
  uint64_t v19 = [(UICollectionView *)self _focusedItemState];
  double v20 = (void *)v19;
  if (v19)
  {
    id v21 = *(id *)(v19 + 16);
    if (v21)
    {
      double v22 = v21;
LABEL_20:

      goto LABEL_21;
    }
  }
  v27.origin.double x = x;
  v27.origin.double y = y;
  v27.size.double width = width;
  v27.size.double height = height;
  BOOL IsNull = CGRectIsNull(v27);

  if (!IsNull)
  {
    double v20 = _UIFocusClosestFocusableViewToRectInView(self, x, y, width, height);
    double v22 = [(UICollectionView *)self _managedSubviewForView:v20];
    if (v22)
    {
      uint64_t v24 = +[_UICollectionViewFocusedItemState stateWithReusableView:]((uint64_t)_UICollectionViewFocusedItemState, v22);
      [(UICollectionView *)self _setFocusedItemState:v24];
    }
    else
    {
      [(UICollectionView *)self _setFocusedItemState:0];
    }
    goto LABEL_20;
  }
LABEL_21:
}

- (id)_viewAnimationsForCurrentUpdate
{
  return [(UICollectionView *)self _viewAnimationsForCurrentUpdateWithCollectionViewAnimator:0 updatingContentOffsetForRestorationAnchor:1];
}

UICollectionViewAnimation *__129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke(uint64_t a1, void *a2)
{
  BOOL v3 = a2;
  id v4 = v3;
  if (v3) {
    int v5 = (v3[144] >> 1) & 1;
  }
  else {
    int v5 = 0;
  }
  id v6 = -[UIBarButtonItemGroup _items]((id *)v3);
  id v7 = [v4 indexPath];
  uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 2064);
  if (v5) {
    [v8 initialLayoutAttributesForAppearingDecorationElementOfKind:v6 atIndexPath:v7];
  }
  else {
  uint64_t v9 = [v8 initialLayoutAttributesForAppearingSupplementaryElementOfKind:v6 atIndexPath:v7];
  }
  if (!v9)
  {
    uint64_t v9 = (void *)[v4 copy];
    [v9 setAlpha:0.0];
  }
  [v9 frame];
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  [v4 frame];
  v40.origin.double x = v18;
  v40.origin.double y = v19;
  v40.size.double width = v20;
  v40.size.double height = v21;
  v38.origin.double x = v11;
  v38.origin.double y = v13;
  v38.size.double width = v15;
  v38.size.double height = v17;
  CGRect v39 = CGRectUnion(v38, v40);
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2064), "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v4, v39.origin.x, v39.origin.y, v39.size.width, v39.size.height);
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  if ([v9 isHidden] && objc_msgSend(v4, "isHidden")) {
    char v30 = dyld_program_sdk_at_least();
  }
  else {
    char v30 = 0;
  }
  v41.origin.double x = v23;
  v41.origin.double y = v25;
  v41.size.double width = v27;
  v41.size.double height = v29;
  uint64_t v31 = 0;
  if (CGRectIntersectsRect(*(CGRect *)(a1 + 48), v41) && (v30 & 1) == 0)
  {
    uint64_t v32 = [*(id *)(a1 + 32) _createPreparedSupplementaryViewForElementOfKind:v6 atIndexPath:v7 layout:*(void *)(*(void *)(a1 + 32) + 2064) withLayoutAttributes:v9 applyAttributes:1];
    if (v32)
    {
      objc_super v33 = (void *)v32;
      uint64_t v34 = *(void *)(a1 + 40);
      if (v5) {
        -[_UICollectionViewSubviewCollection setView:forDecorationOfKind:atIndexPath:](v34, (uint64_t)v33, (uint64_t)v6, (uint64_t)v7);
      }
      else {
        -[_UICollectionViewSubviewCollection setView:forSupplementaryOfKind:atIndexPath:](v34, (uint64_t)v33, (uint64_t)v6, (uint64_t)v7);
      }
      objc_msgSend(*(id *)(a1 + 32), "_addControlledSubview:atZIndex:forced:initialAttributes:", v33, objc_msgSend(v4, "zIndex"), 0, 0);
      double v35 = [*(id *)(*(void *)(a1 + 32) + 2064) _animationForReusableView:v33 toLayoutAttributes:v4 type:2];
      uint64_t v31 = [[UICollectionViewAnimation alloc] initWithView:v33 viewType:2 finalLayoutAttributes:v4 startFraction:0 endFraction:0 animateFromCurrentPostion:v35 deleteAfterAnimation:0.0 customAnimations:1.0];
    }
    else
    {
      uint64_t v31 = 0;
    }
  }

  return v31;
}

void __129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_3;
  v7[3] = &unk_1E52E59F8;
  int v5 = *(void **)(a1 + 40);
  v7[4] = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v10 = a2;
  uint64_t v11 = v6;
  id v8 = v5;
  id v9 = *(id *)(a1 + 48);
  [a3 enumerateIndexesUsingBlock:v7];
}

void __129__UICollectionView__createAndAppendViewAnimationsForInsertedAuxiliariesInCurrentUpdate_appearingAnimations_newSubviewCollection___block_invoke_3(uint64_t a1, uint64_t a2)
{
  -[UICollectionViewData knownDecorationElementKinds](*(void *)(*(void *)(*(void *)(a1 + 32) + 2192) + 24));
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  char v4 = [v11 containsObject:*(void *)(a1 + 56)];
  int v5 = [MEMORY[0x1E4F28D58] indexPathWithIndex:a2];
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 32) + 2192) + 24);
  uint64_t v7 = *(void *)(a1 + 56);
  if (v4) {
    -[UICollectionViewData layoutAttributesForDecorationViewOfKind:atIndexPath:](v6, v7, v5);
  }
  else {
  id v8 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:](v6, v7, v5);
  }
  id v9 = (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  if (v9)
  {
    [*(id *)(a1 + 40) addObject:v9];
    uint64_t v10 = +[_UICollectionViewItemKey collectionItemKeyForLayoutAttributes:]((uint64_t)_UICollectionViewItemKey, (uint64_t)v8);
    [*(id *)(a1 + 48) setObject:v9 forKey:v10];
  }
}

uint64_t __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2_926(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t __102__UICollectionView__updateWithItems_tentativelyForReordering_propertyAnimator_collectionViewAnimator___block_invoke_2_930(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (BOOL)_isFocusedViewInDeletedSectionOrItem
{
  uint64_t v3 = [(UICollectionView *)self _focusedItemState];
  char v4 = (id *)v3;
  if (v3)
  {
    currentUpdate = self->_currentUpdate;
    if (currentUpdate)
    {
      uint64_t v6 = *(void *)(v3 + 32);
      id v7 = *(id *)(v3 + 16);
      id v8 = v7;
      if (v6)
      {
        uint64_t v9 = [v7 length];

        uint64_t v10 = self->_currentUpdate;
        if (v9 == 1)
        {
          deletedSupplementaryTopLevelIndexesDict = v10->_deletedSupplementaryTopLevelIndexesDict;
          id v12 = v4[3];
          CGFloat v13 = [(NSMutableDictionary *)deletedSupplementaryTopLevelIndexesDict objectForKeyedSubscript:v12];

          id v14 = v4[2];
          char v15 = objc_msgSend(v13, "containsIndex:", objc_msgSend(v14, "indexAtPosition:", 0));

LABEL_10:
          goto LABEL_11;
        }
        id v8 = v4[3];
        id v16 = v4[2];
        CGFloat v13 = -[UICollectionViewUpdate validatedNewIndexPathForSupplementaryElementOfKind:oldIndexPath:]((uint64_t)v10, v8, v16);
      }
      else
      {
        CGFloat v13 = [(UICollectionViewUpdate *)currentUpdate finalIndexPathForInitialIndexPath:v7];
      }

      char v15 = v13 == 0;
      goto LABEL_10;
    }
  }
  char v15 = 0;
LABEL_11:

  return v15;
}

- (void)_endUpdatesWithInvalidationContext:(id)a3 tentativelyForReordering:(BOOL)a4 animator:(id)a5
{
}

- (void)performBatchUpdates:(id)a3 withAnimator:(id)a4
{
}

- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5
{
}

- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6
{
}

- (void)_performBatchUpdates:(id)a3 completion:(id)a4 invalidationContext:(id)a5 tentativelyForReordering:(BOOL)a6 animator:(id)a7
{
}

void __49__UICollectionView__invalidateLayoutWithContext___block_invoke(uint64_t a1)
{
}

uint64_t __46__UICollectionView_setSelfSizingInvalidation___block_invoke(uint64_t a1, void *a2)
{
  return [a2 _setAutomaticIntrinsicContentSizeInvalidationEnabled:*(unsigned __int8 *)(a1 + 32)];
}

- (UICollectionViewSelfSizingInvalidation)selfSizingInvalidation
{
  return ((unint64_t)*((unsigned __int16 *)&self->_collectionViewFlags + 8) >> 3) & 3;
}

void __79__UICollectionView__recomputePreferredAttributesForInvalidatedElementsIfNeeded__block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if ([*(id *)(a1 + 32) _isSectionValidInIndexPath:v11])
        {
          id v12 = -[_UICollectionViewSubviewManager visibleSupplementaryOfKind:atIndexPath:](*(uint64_t **)(*(void *)(a1 + 32) + 2896), (uint64_t)v5, (uint64_t)v11);
          CGFloat v13 = -[UICollectionViewData layoutAttributesForSupplementaryElementOfKind:atIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), (uint64_t)v5, v11);
          [*(id *)(a1 + 32) _recomputePreferredAttributesForInvalidatedView:v12 originalAttributes:v13];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }
}

- (id)_setupAnimationsForResizedViewsWithOldModel:(id)a3
{
  collectionViewData = self->_collectionViewData;
  id v5 = a3;
  [(UICollectionView *)self _visibleBounds];
  -[UICollectionViewData validateLayoutInRect:]((uint64_t)collectionViewData, v6, v7, v8, v9);
  uint64_t v10 = [UICollectionViewUpdate alloc];
  id v11 = self->_collectionViewData;
  [(UIScrollView *)self contentOffset];
  double v13 = v12;
  double v15 = v14;
  [(UIScrollView *)self contentOffset];
  CGFloat v18 = (UICollectionViewUpdate *)-[UICollectionViewUpdate initWithCollectionView:updateItems:moveItemSourceIndexPaths:oldModel:newModel:oldContentOffset:newContentOffset:]((id *)&v10->super.isa, self, MEMORY[0x1E4F1CBF0], 0, v5, v11, v13, v15, v16, v17);

  currentUpdate = self->_currentUpdate;
  self->_currentUpdate = v18;

  CGFloat v20 = self->_currentUpdate;
  if (v20)
  {
    *(unsigned char *)&v20->_flags |= 2u;
    CGFloat v21 = self->_currentUpdate;
  }
  else
  {
    CGFloat v21 = 0;
  }
  uint64_t v22 = MEMORY[0x1E4F1CBF0];
  [(UICollectionViewLayout *)self->_layout _prepareForCollectionViewUpdates:MEMORY[0x1E4F1CBF0] withDataSourceTranslator:v21];
  [(UICollectionViewLayout *)self->_layout _prepareForCollectionViewUpdates:v22 animated:1];
  CGFloat v23 = self->_currentUpdate;
  if (v23) {
    *(unsigned char *)&v23->_flags |= 1u;
  }
  double v24 = -[UIViewAnimationContext initWithCompletionHandler:]([UIViewAnimationContext alloc], 0);
  uint64_t v30 = MEMORY[0x1E4F143A8];
  uint64_t v31 = 3221225472;
  uint64_t v32 = __64__UICollectionView__setupAnimationsForResizedViewsWithOldModel___block_invoke;
  objc_super v33 = &unk_1E52D9F98;
  CGFloat v25 = v24;
  id v34 = v25;
  double v35 = self;
  +[UIView performWithoutAnimation:&v30];
  -[UICollectionView _incrementUpdateAnimationCountWithContext:](self, "_incrementUpdateAnimationCountWithContext:", v25, v30, v31, v32, v33);
  double v26 = -[_UICollectionViewSubviewManager allVisibleViewsHashTable]((id **)self->_subviewManager);
  -[_UICollectionViewSubviewManager removeAllVisibleViews]((uint64_t)self->_subviewManager);
  [(UICollectionView *)self _startViewAnimationsWithContext:v25 oldVisibleViews:v26 viewAnimator:0 viewAnimationsCompletedDispatchGroup:0];
  -[UICollectionViewData finalizeCollectionViewUpdates]((uint64_t)self->_collectionViewData);
  [(UICollectionViewLayout *)self->_layout _finalizeCollectionViewUpdate:self->_currentUpdate];
  CGFloat v27 = self->_currentUpdate;
  self->_currentUpdate = 0;

  double v28 = v25;
  return v28;
}

void __64__UICollectionView__setupAnimationsForResizedViewsWithOldModel___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) _viewAnimationsForCurrentUpdateWithCollectionViewAnimator:0 updatingContentOffsetForRestorationAnchor:0];
  -[UIViewAnimationContext setViewAnimations:](*(void *)(a1 + 32), v2);
}

- (void)_accessibilitySetInterfaceStyleIntent:(unint64_t)a3
{
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  [(UIView *)&v5 _accessibilitySetInterfaceStyleIntent:a3];
  char v4 = [(UICollectionView *)self collectionViewLayout];
  [v4 invalidateLayout];
}

- (void)_unhighlightAllItems
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  selectionController = self->_selectionController;
  if (selectionController) {
    char v4 = (void *)[(NSMutableSet *)selectionController->_highlightedIndexPaths copy];
  }
  else {
    char v4 = 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        [(UICollectionView *)self _unhighlightItemAtIndexPath:*(void *)(*((void *)&v9 + 1) + 8 * v8++) animated:0 notifyDelegate:1];
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

- (id)_selectableIndexPathForItemContainingHitView:(id)a3
{
  id v4 = a3;
  if (!v4) {
    goto LABEL_9;
  }
  do
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      break;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      break;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 && ([v4 isTracking]) {
      goto LABEL_9;
    }
    uint64_t v5 = [v4 superview];

    id v4 = (id)v5;
  }
  while (v5);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v6 = [(UICollectionView *)self _indexPathForCell:v4];
  }
  else
  {
LABEL_9:
    uint64_t v6 = 0;
  }

  return v6;
}

- (BOOL)_shouldDeselectItemsOnTouchesBegan
{
  return dyld_program_sdk_at_least() ^ 1;
}

- (void)touchesBegan:(id)a3 withEvent:(id)a4
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [(UICollectionView *)self _currentTouch];
  if (v8)
  {
    long long v9 = v8;
    if ([v8 phase] != 4 && objc_msgSend(v9, "phase") != 3) {
      goto LABEL_9;
    }

    [(UICollectionView *)self _cancelTouches];
  }
  if (_UITouchesContainsTouchFromExternalTouchpad(v6))
  {
LABEL_8:
    long long v9 = 0;
LABEL_9:
    CGRect v41 = self;
    long long v12 = (objc_super *)&v41;
    goto LABEL_25;
  }
  id v10 = v7;
  if ([v10 _buttonMask])
  {
    char v11 = [v10 _buttonMask];

    if ((v11 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  long long v9 = [v6 anyObject];
  [(UICollectionView *)self _setCurrentTouch:v9];
  if (v9)
  {
    p_pendingSelectionIndexPath = &self->_pendingSelectionIndexPath;
    if (!self->_pendingSelectionIndexPath)
    {
      uint64_t v14 = [v9 view];
      double v15 = [(UICollectionView *)self _selectableIndexPathForItemContainingHitView:v14];
      if (v15)
      {
        if ([(UICollectionView *)self _allowsEffectiveSelectionOrCustomActionAtIndexPath:v15])
        {
          objc_storeStrong((id *)&self->_pendingSelectionIndexPath, v15);
          double v16 = [(UIView *)self traitCollection];
          uint64_t v17 = _UIShouldAnimateDefaultCellHighlightAndSelection(v16);

          if ([(UIScrollView *)self isDragging]
            || ![(UICollectionView *)self _highlightItemAtIndexPath:*p_pendingSelectionIndexPath animated:v17 scrollPosition:0 notifyDelegate:1 playFeedback:1])
          {
            uint64_t v19 = *p_pendingSelectionIndexPath;
            *p_pendingSelectionIndexPath = 0;
          }
          else if ([(UICollectionView *)self _shouldDeselectItemsOnTouchesBegan])
          {
            pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
            if (pendingDeselectionIndexPaths)
            {
              [(NSMutableSet *)pendingDeselectionIndexPaths removeAllObjects];
            }
            else
            {
              CGFloat v20 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E4F1CA80]);
              CGFloat v21 = self->_pendingDeselectionIndexPaths;
              self->_pendingDeselectionIndexPaths = v20;
            }
            if (![(UICollectionView *)self _allowsEffectiveMultipleSelection])
            {
              long long v39 = 0u;
              long long v40 = 0u;
              long long v37 = 0u;
              long long v38 = 0u;
              selectionController = self->_selectionController;
              objc_super v33 = v15;
              id v34 = v14;
              unsigned int v35 = v17;
              id v32 = v7;
              if (selectionController) {
                CGFloat v23 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
              }
              else {
                CGFloat v23 = 0;
              }
              uint64_t v24 = [v23 countByEnumeratingWithState:&v37 objects:v42 count:16];
              if (v24)
              {
                uint64_t v25 = v24;
                uint64_t v26 = *(void *)v38;
                do
                {
                  for (uint64_t i = 0; i != v25; ++i)
                  {
                    if (*(void *)v38 != v26) {
                      objc_enumerationMutation(v23);
                    }
                    double v28 = *(void **)(*((void *)&v37 + 1) + 8 * i);
                    if (([v28 isEqual:*p_pendingSelectionIndexPath] & 1) == 0)
                    {
                      [(UICollectionView *)self _cellForItemAtIndexPath:v28];
                      CGFloat v29 = p_pendingSelectionIndexPath;
                      v31 = uint64_t v30 = v23;
                      [v31 _setSelected:0 animated:v35];

                      CGFloat v23 = v30;
                      p_pendingSelectionIndexPath = v29;
                      [(NSMutableSet *)self->_pendingDeselectionIndexPaths addObject:v28];
                    }
                  }
                  uint64_t v25 = [v23 countByEnumeratingWithState:&v37 objects:v42 count:16];
                }
                while (v25);
              }

              double v15 = v33;
              uint64_t v14 = v34;
              id v7 = v32;
            }
          }
        }
      }
      else if (![(UICollectionView *)self _allowsEffectiveMultipleSelection])
      {
        [(UICollectionView *)self _unhighlightAllItems];
      }
    }
  }
  v36.receiver = self;
  long long v12 = &v36;
LABEL_25:
  v12->super_class = (Class)UICollectionView;
  [(objc_super *)v12 touchesBegan:v6 withEvent:v7];
}

- (void)touchesMoved:(id)a3 withEvent:(id)a4
{
  id v5 = a3;
  id v24 = [(UICollectionView *)self _currentTouch];
  int v6 = [v5 containsObject:v24];

  id v7 = v24;
  if (v6)
  {
    uint64_t v8 = [(UIView *)self traitCollection];
    uint64_t v9 = _UIShouldAnimateDefaultCellHighlightAndSelection(v8);

    if (self->_pendingSelectionIndexPath)
    {
      id v10 = -[UICollectionView _cellForItemAtIndexPath:](self, "_cellForItemAtIndexPath:");
      char v11 = v10;
      if (v10)
      {
        [v10 bounds];
        CGFloat v13 = v12;
        CGFloat v15 = v14;
        CGFloat v17 = v16;
        CGFloat v19 = v18;
        [v24 locationInView:v11];
        v26.double x = v20;
        v26.double y = v21;
        v27.origin.double x = v13;
        v27.origin.double y = v15;
        v27.size.double width = v17;
        v27.size.double height = v19;
        BOOL v22 = CGRectContainsPoint(v27, v26);
        int v23 = [v11 isHighlighted];
        if (v22)
        {
          if ((v23 & 1) == 0) {
            [(UICollectionView *)self _highlightItemAtIndexPath:self->_pendingSelectionIndexPath animated:v9 scrollPosition:0 notifyDelegate:1 playFeedback:1];
          }
        }
        else if (v23)
        {
          [(UICollectionView *)self _unhighlightItemAtIndexPath:self->_pendingSelectionIndexPath animated:v9 notifyDelegate:1];
        }
      }
    }
    else
    {
      char v11 = 0;
    }

    id v7 = v24;
  }
}

- (void)_userSelectItemAtIndexPath:(id)a3
{
  id v5 = [(UIView *)self traitCollection];
  int v6 = _UIShouldAnimateDefaultCellHighlightAndSelection(v5);

  if (v6)
  {
    id v7 = [(UICollectionView *)self _cellForItemAtIndexPath:a3];
    uint64_t v8 = v7;
    if (v7)
    {
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 3221225472;
      v9[2] = __47__UICollectionView__userSelectItemAtIndexPath___block_invoke;
      void v9[3] = &unk_1E52E5BC0;
      v9[4] = self;
      void v9[5] = a3;
      [v7 _performConfigurationStateModifications:v9];
    }
    else
    {
      [(UICollectionView *)self _userSelectItemAtIndexPath:a3 animatedSelection:0];
    }
  }
  else
  {
    [(UICollectionView *)self _userSelectItemAtIndexPath:a3 animatedSelection:0];
  }
}

uint64_t __47__UICollectionView__userSelectItemAtIndexPath___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _userSelectItemAtIndexPath:*(void *)(a1 + 40) animatedSelection:1];
}

- (void)_userSelectItemAtIndexPath:(id)a3 animatedSelection:(BOOL)a4
{
  BOOL v4 = a4;
  -[UICollectionView _cellForItemAtIndexPath:](self, "_cellForItemAtIndexPath:");
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  int v7 = [v12 isSelected];
  if (v12 && [v12 _hasCustomSelectionAction])
  {
    char v8 = 1;
    [(UICollectionView *)self _unhighlightItemAtIndexPath:a3 animated:0 notifyDelegate:1];
  }
  else
  {
    BOOL v9 = [(UICollectionView *)self _canPerformPrimaryActionForItemAtIndexPath:a3];
    uint64_t v10 = 1;
    [(UICollectionView *)self _unhighlightItemAtIndexPath:a3 animated:v9 notifyDelegate:1];
    char v8 = 0;
    if (v9) {
      goto LABEL_8;
    }
  }
  if (([(UICollectionView *)self _allowsEffectiveMultipleSelection] & v7) == 1)
  {
    [(UICollectionView *)self _deselectItemAtIndexPath:a3 animated:v4 notifyDelegate:1];
    goto LABEL_9;
  }
  uint64_t v10 = 0;
LABEL_8:
  LOBYTE(v11) = v8;
  [(UICollectionView *)self _selectItemAtIndexPath:a3 animated:v4 scrollPosition:0 notifyDelegate:1 deselectPrevious:v10 performPrimaryAction:v10 performCustomSelectionAction:v11];
LABEL_9:
}

- (void)_springLoadedInteractionSelectItemAtIndexPath:(id)a3
{
  id v5 = -[UICollectionView _cellForItemAtIndexPath:](self, "_cellForItemAtIndexPath:");
  id v9 = v5;
  if (v5 && ([v5 _hasCustomSelectionAction] & 1) != 0)
  {
    BOOL v6 = 0;
    char v7 = 1;
  }
  else
  {
    BOOL v6 = [(UICollectionView *)self _canPerformPrimaryActionForItemAtIndexPath:a3];
    char v7 = 0;
  }
  LOBYTE(v8) = v7;
  [(UICollectionView *)self _selectItemAtIndexPath:a3 animated:0 scrollPosition:0 notifyDelegate:1 deselectPrevious:0 performPrimaryAction:v6 performCustomSelectionAction:v8];
}

- (void)_multiSelectInteractionSelectItemAtIndexPath:(id)a3
{
  LOBYTE(v3) = 0;
  [(UICollectionView *)self _selectItemAtIndexPath:a3 animated:0 scrollPosition:0 notifyDelegate:1 deselectPrevious:0 performPrimaryAction:0 performCustomSelectionAction:v3];
}

- (void)touchesEnded:(id)a3 withEvent:(id)a4
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [(UICollectionView *)self _currentTouch];
  if (![v6 containsObject:v8]) {
    goto LABEL_48;
  }
  [(UICollectionView *)self _setCurrentTouch:0];
  v60.receiver = self;
  v60.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v60 touchesEnded:v6 withEvent:v7];
  BOOL v9 = [(UIScrollView *)self isDragging];
  if (v8 && !v9)
  {
    uint64_t v10 = [v8 view];
    if (self->_pendingSelectionIndexPath)
    {
      uint64_t v11 = -[UICollectionView _cellForItemAtIndexPath:](self, "_cellForItemAtIndexPath:");
      id v12 = v11;
      if (v11)
      {
        [v11 bounds];
        CGFloat v14 = v13;
        CGFloat v16 = v15;
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        [v8 locationInView:v12];
        v64.double x = v21;
        v64.double y = v22;
        v65.origin.double x = v14;
        v65.origin.double y = v16;
        v65.size.double width = v18;
        v65.size.double height = v20;
        if (!CGRectContainsPoint(v65, v64))
        {
          [(NSMutableSet *)self->_pendingDeselectionIndexPaths removeAllObjects];
LABEL_23:

          goto LABEL_24;
        }
      }
    }
    else
    {
      id v12 = 0;
    }
    if (v10)
    {
      uint64_t v23 = [(UICollectionView *)self _selectableIndexPathForItemContainingHitView:v10];
      if (!v23) {
        goto LABEL_23;
      }
      id v24 = (void *)v23;
      BOOL v25 = [(UICollectionView *)self _allowsEffectiveSelectionOrCustomActionAtIndexPath:self->_pendingSelectionIndexPath];

      if (!v25) {
        goto LABEL_23;
      }
    }
    else if (![(UICollectionView *)self _allowsEffectiveSelectionOrCustomActionAtIndexPath:self->_pendingSelectionIndexPath])
    {
      goto LABEL_23;
    }
    pendingSelectionIndexPath = self->_pendingSelectionIndexPath;
    if (!pendingSelectionIndexPath)
    {
      if ((dyld_program_sdk_at_least() & 1) != 0
        || [(UICollectionView *)self _allowsEffectiveMultipleSelection])
      {
LABEL_22:
        uint64_t v30 = self->_pendingSelectionIndexPath;
        self->_pendingSelectionIndexPath = 0;

        goto LABEL_23;
      }
      pendingSelectionIndexPath = self->_pendingSelectionIndexPath;
    }
    CGRect v27 = pendingSelectionIndexPath;
    double v28 = v27;
    if ((*((_WORD *)&self->_collectionViewFlags + 8) & 0x200) != 0)
    {
      CGFloat v29 = (void *)UIApp;
      v58[0] = MEMORY[0x1E4F143A8];
      v58[1] = 3221225472;
      void v58[2] = __43__UICollectionView_touchesEnded_withEvent___block_invoke;
      v58[3] = &unk_1E52D9F98;
      v58[4] = self;
      double v59 = v27;
      [v29 _performBlockAfterCATransactionCommits:v58];
    }
    else
    {
      [(UICollectionView *)self _userSelectItemAtIndexPath:v27];
    }

    goto LABEL_22;
  }
LABEL_24:
  uint64_t v31 = [(UIView *)self traitCollection];
  uint64_t v32 = _UIShouldAnimateDefaultCellHighlightAndSelection(v31);

  objc_super v33 = self->_pendingSelectionIndexPath;
  if (v33)
  {
    [(UICollectionView *)self _unhighlightItemAtIndexPath:v33 animated:0 notifyDelegate:1];
    id v34 = self->_pendingSelectionIndexPath;
    self->_pendingSelectionIndexPath = 0;
  }
  long long v56 = 0u;
  long long v57 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  selectionController = self->_selectionController;
  if (selectionController) {
    objc_super v36 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
  }
  else {
    objc_super v36 = 0;
  }
  uint64_t v37 = [v36 countByEnumeratingWithState:&v54 objects:v62 count:16];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)v55;
    do
    {
      for (uint64_t i = 0; i != v38; ++i)
      {
        if (*(void *)v55 != v39) {
          objc_enumerationMutation(v36);
        }
        CGRect v41 = [(UICollectionView *)self _cellForItemAtIndexPath:*(void *)(*((void *)&v54 + 1) + 8 * i)];
        if (([v41 isSelected] & 1) == 0) {
          [v41 _setSelected:1 animated:v32];
        }
      }
      uint64_t v38 = [v36 countByEnumeratingWithState:&v54 objects:v62 count:16];
    }
    while (v38);
  }

  if ([(UICollectionView *)self _shouldDeselectItemsOnTouchesBegan])
  {
    id v49 = v7;
    long long v52 = 0u;
    long long v53 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    double v42 = self->_pendingDeselectionIndexPaths;
    uint64_t v43 = [(NSMutableSet *)v42 countByEnumeratingWithState:&v50 objects:v61 count:16];
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = *(void *)v51;
      do
      {
        for (uint64_t j = 0; j != v44; ++j)
        {
          if (*(void *)v51 != v45) {
            objc_enumerationMutation(v42);
          }
          double v47 = [(UICollectionView *)self _cellForItemAtIndexPath:*(void *)(*((void *)&v50 + 1) + 8 * j)];
          if ([v47 isSelected]) {
            [v47 _setSelected:0 animated:v32];
          }
        }
        uint64_t v44 = [(NSMutableSet *)v42 countByEnumeratingWithState:&v50 objects:v61 count:16];
      }
      while (v44);
    }

    pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = 0;

    id v7 = v49;
  }
LABEL_48:
}

uint64_t __43__UICollectionView_touchesEnded_withEvent___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _userSelectItemAtIndexPath:*(void *)(a1 + 40)];
}

- (void)_selectAllSelectedItems
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  selectionController = self->_selectionController;
  if (selectionController) {
    BOOL v4 = (void *)[(NSMutableSet *)selectionController->_selectedIndexPaths copy];
  }
  else {
    BOOL v4 = 0;
  }
  uint64_t v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        BOOL v9 = -[UICollectionView _cellForItemAtIndexPath:](self, "_cellForItemAtIndexPath:", *(void *)(*((void *)&v10 + 1) + 8 * i), (void)v10);
        [v9 _setSelected:1 animated:0];
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
}

- (void)_cancelTouches
{
  [(UICollectionView *)self _setCurrentTouch:0];
  uint64_t v3 = [(UIView *)self traitCollection];
  uint64_t v4 = _UIShouldAnimateDefaultCellHighlightAndSelection(v3);

  [(UICollectionView *)self _unhighlightItemAtIndexPath:self->_pendingSelectionIndexPath animated:v4 notifyDelegate:1];
  pendingSelectionIndexPath = self->_pendingSelectionIndexPath;
  self->_pendingSelectionIndexPath = 0;

  if ([(UICollectionView *)self _shouldDeselectItemsOnTouchesBegan])
  {
    if (![(UIScrollView *)self isTracking]) {
      [(UICollectionView *)self _selectAllSelectedItems];
    }
    pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = 0;
  }
}

- (void)touchesCancelled:(id)a3 withEvent:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = [(UICollectionView *)self _currentTouch];
  int v9 = [v6 containsObject:v8];

  if (v9)
  {
    v10.receiver = self;
    v10.super_class = (Class)UICollectionView;
    [(UIScrollView *)&v10 touchesCancelled:v6 withEvent:v7];
    [(UICollectionView *)self _cancelTouches];
  }
}

- (void)_scrollViewDidEndDraggingWithDeceleration:(BOOL)a3
{
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v5 _scrollViewDidEndDraggingWithDeceleration:a3];
  if ([(UICollectionView *)self _shouldDeselectItemsOnTouchesBegan])
  {
    [(UICollectionView *)self _selectAllSelectedItems];
    pendingDeselectionIndexPaths = self->_pendingDeselectionIndexPaths;
    self->_pendingDeselectionIndexPaths = 0;
  }
}

- (BOOL)_shouldShowMenuForCell:(id)a3
{
  id v4 = a3;
  if ([(UICollectionView *)self _delegateSupportsMenuInteraction])
  {
    char v5 = 0;
  }
  else
  {
    id v6 = [(UICollectionView *)self _indexPathForCell:v4];
    if (v6 && (*(void *)&self->_collectionViewFlags & 0x80) != 0)
    {
      id v7 = [(UICollectionView *)self _delegateProxy];
      char v5 = [v7 collectionView:self shouldShowMenuForItemAtIndexPath:v6];
    }
    else
    {
      char v5 = 0;
    }
  }
  return v5;
}

- (BOOL)_canPerformAction:(SEL)a3 forCell:(id)a4 sender:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  if (![(UICollectionView *)self _delegateSupportsMenuInteraction]
    && (*(void *)&self->_collectionViewFlags & 0x80) != 0
    && ([(UICollectionView *)self _indexPathForCell:v8],
        (uint64_t v10 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    long long v11 = (void *)v10;
    long long v12 = [(UICollectionView *)self _delegateProxy];
    char v13 = [v12 collectionView:self canPerformAction:a3 forItemAtIndexPath:v11 withSender:v9];
  }
  else
  {
    char v13 = 0;
  }

  return v13;
}

- (void)_performAction:(SEL)a3 forCell:(id)a4 sender:(id)a5
{
  id v11 = a4;
  id v8 = a5;
  if (![(UICollectionView *)self _delegateSupportsMenuInteraction]
    && (*(void *)&self->_collectionViewFlags & 0x80) != 0)
  {
    id v9 = [(UICollectionView *)self _delegateProxy];
    uint64_t v10 = [(UICollectionView *)self _indexPathForCell:v11];
    [v9 collectionView:self performAction:a3 forItemAtIndexPath:v10 withSender:v8];
  }
}

- (void)_highlightFirstVisibleItemIfAppropriate
{
  id v8 = [(UIView *)self window];
  uint64_t v3 = [v8 _screen];
  id v4 = [v3 _capabilityForKey:@"UIScreenCapabilityTouchLevelsKey"];
  if ([v4 integerValue] != 2) {
    goto LABEL_5;
  }
  char v5 = [(UICollectionView *)self visibleCells];
  uint64_t v6 = [v5 count];

  if (!v6) {
    return;
  }
  id v7 = [(UICollectionView *)self _indexPathsForVisibleItems];
  id v8 = [v7 sortedArrayUsingSelector:sel_compare_];

  uint64_t v3 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](self->_collectionViewData, [(UICollectionView *)self highlightedGlobalItem]);
  if (([v8 containsObject:v3] & 1) == 0)
  {
    id v4 = [v8 firstObject];
    -[UICollectionView _unhighlightAllItemsAndHighlightGlobalItem:](self, "_unhighlightAllItemsAndHighlightGlobalItem:", -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v4));
LABEL_5:
  }
}

- (void)_unhighlightAllItemsAndHighlightGlobalItem:(int64_t)a3
{
  -[UICollectionViewData indexPathForItemAtGlobalIndex:](self->_collectionViewData, a3);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  id v4 = [MEMORY[0x1E4F28D58] indexPathForItem:0x7FFFFFFFFFFFFFFFLL inSection:0x7FFFFFFFFFFFFFFFLL];
  [(UICollectionView *)self _highlightItemAtIndexPath:v4 animated:0 scrollPosition:0 notifyDelegate:1];

  [(UICollectionView *)self _highlightItemAtIndexPath:v5 animated:0 scrollPosition:0 notifyDelegate:1];
}

- (void)_handlePresses:(id)a3 keyHandler:(id)a4 defaultHandler:(id)a5
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = (void (**)(void, id, void *))a4;
  uint64_t v10 = (void (**)(void))a5;
  id v11 = [(UIView *)self _focusSystem];
  long long v12 = [v11 focusedItem];
  char v13 = _UIFocusEnvironmentContainingView(v12);
  if (!v12
    || ([(UICollectionView *)self visibleCells],
        CGFloat v14 = objc_claimAutoreleasedReturnValue(),
        int v15 = [v14 containsObject:v13],
        v14,
        !v15))
  {
    id v16 = 0;
    uint64_t v23 = 0;
    if (!v10) {
      goto LABEL_16;
    }
LABEL_15:
    v10[2](v10);
    goto LABEL_16;
  }
  CGPoint v26 = v9;
  id v16 = v13;
  uint64_t v24 = [(UICollectionView *)self _indexPathForCell:v16];
  id v25 = v8;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v17 = v8;
  uint64_t v18 = [v17 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v28;
    while (2)
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v28 != v20) {
          objc_enumerationMutation(v17);
        }
        CGFloat v22 = [*(id *)(*((void *)&v27 + 1) + 8 * v21) key];
        if (v22 && ([v16 _canPerformActionForKey:v22] & 1) != 0)
        {

          id v9 = v26;
          if (v26) {
            v26[2](v26, v16, v22);
          }
          uint64_t v23 = (void *)v24;
          id v8 = v25;
          goto LABEL_17;
        }

        ++v21;
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v27 objects:v31 count:16];
      if (v19) {
        continue;
      }
      break;
    }
  }

  id v8 = v25;
  id v9 = v26;
  uint64_t v23 = (void *)v24;
  if (v10) {
    goto LABEL_15;
  }
LABEL_16:
  CGFloat v22 = 0;
LABEL_17:
}

- (void)pressesBegan:(id)a3 withEvent:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __43__UICollectionView_pressesBegan_withEvent___block_invoke;
  v10[3] = &unk_1E52DCB30;
  id v11 = v6;
  id v12 = v7;
  char v13 = self;
  id v8 = v7;
  id v9 = v6;
  [(UICollectionView *)self _handlePresses:v9 keyHandler:0 defaultHandler:v10];
}

id __43__UICollectionView_pressesBegan_withEvent___block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 48);
  v4.super_class = (Class)UICollectionView;
  return objc_msgSendSuper2(&v4, sel_pressesBegan_withEvent_, v2, v1);
}

- (void)pressesChanged:(id)a3 withEvent:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __45__UICollectionView_pressesChanged_withEvent___block_invoke;
  v10[3] = &unk_1E52DCB30;
  id v11 = v6;
  id v12 = v7;
  char v13 = self;
  id v8 = v7;
  id v9 = v6;
  [(UICollectionView *)self _handlePresses:v9 keyHandler:0 defaultHandler:v10];
}

id __45__UICollectionView_pressesChanged_withEvent___block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 48);
  v4.super_class = (Class)UICollectionView;
  return objc_msgSendSuper2(&v4, sel_pressesChanged_withEvent_, v2, v1);
}

- (void)pressesEnded:(id)a3 withEvent:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __43__UICollectionView_pressesEnded_withEvent___block_invoke_2;
  v10[3] = &unk_1E52DCB30;
  id v11 = v6;
  id v12 = v7;
  char v13 = self;
  id v8 = v7;
  id v9 = v6;
  [(UICollectionView *)self _handlePresses:v9 keyHandler:&__block_literal_global_992 defaultHandler:v10];
}

uint64_t __43__UICollectionView_pressesEnded_withEvent___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_performActionForKey:");
}

id __43__UICollectionView_pressesEnded_withEvent___block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 48);
  v4.super_class = (Class)UICollectionView;
  return objc_msgSendSuper2(&v4, sel_pressesEnded_withEvent_, v2, v1);
}

- (void)pressesCancelled:(id)a3 withEvent:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __47__UICollectionView_pressesCancelled_withEvent___block_invoke;
  v10[3] = &unk_1E52DCB30;
  id v11 = v6;
  id v12 = v7;
  char v13 = self;
  id v8 = v7;
  id v9 = v6;
  [(UICollectionView *)self _handlePresses:v9 keyHandler:0 defaultHandler:v10];
}

id __47__UICollectionView_pressesCancelled_withEvent___block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 48);
  v4.super_class = (Class)UICollectionView;
  return objc_msgSendSuper2(&v4, sel_pressesCancelled_withEvent_, v2, v1);
}

- (BOOL)_selectionInteractionShouldBegin:(id)a3
{
  objc_super v4 = _indexPathForSelectionInteraction(self);
  BOOL v5 = v4
    && [(UICollectionView *)self _allowsEffectiveSelectionOrCustomActionAtIndexPath:v4]&& [(UICollectionView *)self _delegateAllowsHighlightingItemAtIndexPath:v4];

  return v5;
}

- (void)_selectionInteractionDidBeginHinting:(id)a3
{
  objc_super v4 = _indexPathForSelectionInteraction(self);
  if (v4)
  {
    BOOL v5 = v4;
    [(UICollectionView *)self _highlightItemAtIndexPath:v4 animated:0 scrollPosition:0 notifyDelegate:1];
    objc_super v4 = v5;
  }
}

- (void)_selectionInteractionDidCancelHinting:(id)a3
{
  objc_super v4 = _indexPathForSelectionInteraction(self);
  if (v4)
  {
    BOOL v5 = v4;
    [(UICollectionView *)self _unhighlightItemAtIndexPath:v4 animated:0 notifyDelegate:1];
    objc_super v4 = v5;
  }
}

- (void)_selectionInteractionDidSelect:(id)a3
{
  selectionController = self->_selectionController;
  if (selectionController) {
    BOOL v5 = (void *)[(NSMutableSet *)selectionController->_highlightedIndexPaths copy];
  }
  else {
    BOOL v5 = 0;
  }
  id v7 = [v5 anyObject];

  if ([(UICollectionView *)self _indexPathIsValid:v7])
  {
    [(UICollectionView *)self _userSelectItemAtIndexPath:v7];
  }
  else
  {
    id v6 = _indexPathForSelectionInteraction(self);
    if (v6) {
      [(UICollectionView *)self _userSelectItemAtIndexPath:v6];
    }
  }
}

- (int64_t)highlightedGlobalItem
{
  selectionController = self->_selectionController;
  if (!selectionController || [(NSMutableSet *)selectionController->_highlightedIndexPaths count] < 1) {
    return -1;
  }
  objc_super v4 = self->_selectionController;
  if (v4) {
    BOOL v5 = (void *)[(NSMutableSet *)v4->_highlightedIndexPaths copy];
  }
  else {
    BOOL v5 = 0;
  }
  id v6 = [v5 anyObject];

  int64_t v7 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v6);
  return v7;
}

- (int64_t)maximumGlobalItemIndex
{
  collectionViewData = self->_collectionViewData;
  if (!collectionViewData) {
    return 0;
  }
  if ((*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 2) == 0) {
    -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
  }
  return collectionViewData->_totalItemCount;
}

- (void)_trackLayoutValue:(double)a3 forKey:(id)a4
{
  id v6 = a4;
  int64_t v7 = v6;
  if (self->_shouldAccumulateTrackedLayoutValues)
  {
    id v13 = v6;
    if (!self->_interactiveTransitionValueTrackingDict)
    {
      id v8 = (NSMutableDictionary *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:2];
      interactiveTransitionValueTrackingDict = self->_interactiveTransitionValueTrackingDict;
      self->_interactiveTransitionValueTrackingDict = v8;

      int64_t v7 = v13;
    }
    if (!self->_trackedValuesKeys)
    {
      uint64_t v10 = (NSMutableArray *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:2];
      trackedValuesKeys = self->_trackedValuesKeys;
      self->_trackedValuesKeys = v10;

      int64_t v7 = v13;
    }
    id v12 = [(NSMutableDictionary *)self->_interactiveTransitionValueTrackingDict objectForKey:v7];
    if (!v12)
    {
      id v12 = objc_alloc_init(_UICollectionViewTrackedValue);
      [(NSMutableDictionary *)self->_interactiveTransitionValueTrackingDict setValue:v12 forKey:v13];
      [(NSMutableArray *)self->_trackedValuesKeys addObject:v13];
    }
    [(_UICollectionViewTrackedValue *)v12 addValue:a3];

    int64_t v7 = v13;
  }
}

- (double)_trackedLayoutValueForKey:(id)a3
{
  uint64_t v3 = [(NSMutableDictionary *)self->_interactiveTransitionValueTrackingDict objectForKey:a3];
  objc_super v4 = v3;
  if (v3)
  {
    [v3 trackedValue];
    double v6 = v5;
  }
  else
  {
    double v6 = 0.0;
  }

  return v6;
}

- (void)_updateTrackedLayoutValuesWith:(id)a3
{
  id v12 = a3;
  uint64_t v4 = [v12 count];
  if (v4 >= 1)
  {
    uint64_t v5 = v4;
    for (uint64_t i = 0; i != v5; ++i)
    {
      int64_t v7 = [v12 objectAtIndex:i];
      [v7 value];
      double v9 = v8;

      uint64_t v10 = [(NSMutableArray *)self->_trackedValuesKeys objectAtIndex:i];
      id v11 = [(NSMutableDictionary *)self->_interactiveTransitionValueTrackingDict objectForKey:v10];
      [v11 setTrackedValue:v9];
    }
  }
}

- (id)_dynamicAnimationsForTrackValues
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if ([(NSMutableArray *)self->_trackedValuesKeys count])
  {
    uint64_t v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", -[NSMutableArray count](self->_trackedValuesKeys, "count"));
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id obj = self->_trackedValuesKeys;
    uint64_t v4 = [(NSMutableArray *)obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v18 != v6) {
            objc_enumerationMutation(obj);
          }
          double v8 = [(NSMutableDictionary *)self->_interactiveTransitionValueTrackingDict objectForKey:*(void *)(*((void *)&v17 + 1) + 8 * i)];
          [v8 speed];
          double v10 = v9;
          [v8 trackedValue];
          id v12 = [[_UIDynamicValueAnimation alloc] initWithValue:v11 velocity:v10 unitSize:0.05];
          id v13 = +[_UIDynamicAnimationActiveValue upperBoundary:1 ofType:0.0];
          CGFloat v14 = +[_UIDynamicAnimationActiveValue lowerBoundary:1 ofType:0.0];
          [(_UIDynamicValueAnimation *)v12 addActiveValue:v13];
          [(_UIDynamicValueAnimation *)v12 addActiveValue:v14];
          [v3 addObject:v12];
        }
        uint64_t v5 = [(NSMutableArray *)obj countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v5);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

- (void)encodeRestorableStateWithCoder:(id)a3
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = [(UICollectionView *)self dataSource];
  int v6 = [(id)objc_opt_class() conformsToProtocol:&unk_1ED65E2E0];

  v20.receiver = self;
  v20.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v20 encodeRestorableStateWithCoder:v4];
  int64_t v7 = [(UICollectionView *)self _indexPathsForSelectedItems];
  if ([v7 count])
  {
    [v4 encodeObject:v7 forKey:@"CollectionViewSelectedCellIndexPaths"];
    if (v6)
    {
      double v8 = [(UICollectionView *)self dataSource];
      if ([v7 count])
      {
        double v9 = [MEMORY[0x1E4F1CA48] array];
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        id v10 = v7;
        uint64_t v11 = [v10 countByEnumeratingWithState:&v16 objects:v21 count:16];
        if (v11)
        {
          uint64_t v12 = v11;
          uint64_t v13 = *(void *)v17;
          do
          {
            uint64_t v14 = 0;
            do
            {
              if (*(void *)v17 != v13) {
                objc_enumerationMutation(v10);
              }
              int v15 = objc_msgSend(v8, "modelIdentifierForElementAtIndexPath:inView:", *(void *)(*((void *)&v16 + 1) + 8 * v14), self, (void)v16);
              if (v15) {
                [v9 addObject:v15];
              }

              ++v14;
            }
            while (v12 != v14);
            uint64_t v12 = [v10 countByEnumeratingWithState:&v16 objects:v21 count:16];
          }
          while (v12);
        }

        if ([v9 count]) {
          [v4 encodeObject:v9 forKey:@"CollectionViewSelectedCellModelIdentifiers"];
        }
      }
    }
  }
}

- (BOOL)_isSectionValidInIndexPath:(id)a3
{
  if (!a3) {
    return 0;
  }
  unint64_t v4 = [a3 section];
  return [(UICollectionView *)self numberOfSections] > v4;
}

- (void)_orthogonalScrollView:(id)a3 didScrollToOffset:(CGPoint)a4 inSection:(int64_t)a5
{
  double y = a4.y;
  double x = a4.x;
  id v22 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

  if (WeakRetained)
  {
    id v10 = [(UICollectionViewLayout *)self->_layout _sectionDescriptorForSectionIndex:a5];
    double v11 = -[_UICollectionLayoutSectionDescriptor scrollingUnitVector]((uint64_t)v10);
    double v13 = v12;
    -[UICollectionViewLayout _setOffset:forOrthogonalScrollingSection:](self->_layout, "_setOffset:forOrthogonalScrollingSection:", a5, x, y);
    collectionViewData = self->_collectionViewData;
    [(UICollectionView *)self _visibleBounds];
    -[UICollectionViewData validateLayoutInRect:]((uint64_t)collectionViewData, v15, v16, v17, v18);
    unint64_t v19 = [(UICollectionView *)self _updateVisibleCellsNow:1];
    if ([(UICollectionView *)self _prefetchingAllowed])
    {
      if (v19) {
        BOOL v20 = 0;
      }
      else {
        BOOL v20 = (*((void *)&self->_collectionViewFlags + 1) & 0x2000000000000000) == 0;
      }
      -[UICollectionView _updatePrefetchedCellsForOrthogonalScrollingSection:withOriginalPrefetchingVector:canCompute:canPrefetch:](self, "_updatePrefetchedCellsForOrthogonalScrollingSection:withOriginalPrefetchingVector:canCompute:canPrefetch:", a5, v19 == 0, v20, v11, v13);
    }
    if ((*(void *)&self->_collectionViewFlags & 0x2000000000000) != 0)
    {
      uint64_t v21 = [(UICollectionView *)self _delegateProxy];
      [v21 _collectionView:self orthogonalScrollViewDidScroll:v22 section:a5];
    }
  }
}

- (void)_updatePrefetchedCellsForOrthogonalScrollingSection:(int64_t)a3 withOriginalPrefetchingVector:(CGVector)a4 canCompute:(BOOL)a5 canPrefetch:(BOOL)a6
{
  BOOL v6 = a6;
  BOOL v7 = a5;
  ddouble y = a4.dy;
  ddouble x = a4.dx;
  -[UICollectionViewLayout _sectionDescriptorForSectionIndex:](self->_layout, "_sectionDescriptorForSectionIndex:");
  id v57 = (id)objc_claimAutoreleasedReturnValue();
  double v13 = -[_UICollectionLayoutSectionDescriptor scrollingUnitVector]((uint64_t)v57);
  double v14 = v12;
  if (v13 == 0.0 && v12 == 0.0) {
    [(_UIVelocityIntegrator *)self->_prefetchVelocityIntegrator velocity];
  }
  -[UICollectionView _pruneCachedPrefetchViewsForVelocity:](self, "_pruneCachedPrefetchViewsForVelocity:");
  uint64_t v15 = [(UICollectionView *)self _prefetchingContextForOrthogonalScrollingSection:a3];
  uint64_t v16 = v15;
  if (!v15)
  {
    if (!v7) {
      goto LABEL_23;
    }
    double v52 = v14;
LABEL_16:
    int v17 = 1;
    goto LABEL_17;
  }
  if (vabdd_f64(v13, dx) > 0.1 || vabdd_f64(v14, dy) > 0.1)
  {
    [(UICollectionView *)self _resetPrefetchingContext:v15];

    if (!v7)
    {
      [(UICollectionView *)self _setPrefetchingContext:0 forOrthogonalScrollingSection:a3];
      uint64_t v16 = 0;
      goto LABEL_23;
    }
    double v52 = v14;
    uint64_t v16 = 0;
    goto LABEL_16;
  }
  if (!v7 || [*(id *)(v15 + 16) count])
  {
    if (v6 && [*(id *)(v16 + 16) count]) {
      [(UICollectionView *)self _prefetchItemsForPrefetchingContext:v16];
    }
    goto LABEL_23;
  }
  double v52 = v14;
  int v17 = 0;
LABEL_17:
  [(UICollectionView *)self _visibleBounds];
  double v19 = v18;
  double v21 = v20;
  CGFloat v23 = v22;
  double v25 = v24;
  [(UICollectionViewLayout *)self->_layout _contentFrameForSection:a3];
  CGFloat v55 = v27;
  CGFloat v56 = v26;
  CGFloat v53 = v29;
  CGFloat v54 = v28;
  [(UICollectionViewLayout *)self->_layout _offsetForOrthogonalScrollingSection:a3];
  CGFloat v31 = v19 + v30;
  CGFloat v33 = v21 + v32;
  v59.origin.double x = v19;
  v59.origin.double y = v21;
  v59.size.double width = v23;
  v59.size.double height = v25;
  CGFloat Width = CGRectGetWidth(v59);
  double v50 = v21;
  double v51 = v19;
  v60.origin.double x = v19;
  v60.origin.double y = v21;
  double v49 = v23;
  v60.size.double width = v23;
  v60.size.double height = v25;
  v61.size.double height = CGRectGetHeight(v60);
  v61.origin.double x = v31;
  v61.origin.double y = v33;
  v61.size.double width = Width;
  v63.origin.double y = v55;
  v63.origin.double x = v56;
  v63.size.double height = v53;
  v63.size.double width = v54;
  CGRect v62 = CGRectIntersection(v61, v63);
  double v35 = _UIRectExpandByFactorAndUnitVector(v62.origin.x, v62.origin.y, v62.size.width, v62.size.height, 0.75, v13, v52);
  double v37 = v36;
  double v39 = v38;
  double v41 = v40;
  if (v17) {
    goto LABEL_21;
  }
  if (v16)
  {
    uint64_t v42 = *(void *)(v16 + 32);
    uint64_t v43 = *(void *)(v16 + 40);
    uint64_t v44 = *(void *)(v16 + 48);
    uint64_t v45 = *(void *)(v16 + 56);
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v42 = 0;
  }
  v64.origin.double x = v35;
  v64.origin.double y = v37;
  v64.size.double width = v39;
  v64.size.double height = v41;
  if (!CGRectEqualToRect(*(CGRect *)&v42, v64))
  {
LABEL_21:
    BOOL v46 = -[UICollectionViewLayout layoutAttributesForElementsInRect:](self->_layout, "layoutAttributesForElementsInRect:", v35, v37, v39, v41);
    uint64_t v47 = -[UICollectionView _prefetchingContextForVisibleBounds:prefetchVector:prefetchRect:attributes:](self, "_prefetchingContextForVisibleBounds:prefetchVector:prefetchRect:attributes:", v46, v51, v50, v49, v25, v13, v52, *(void *)&v35, *(void *)&v37, *(void *)&v39, *(void *)&v41);

    [(UICollectionView *)self _setPrefetchingContext:v47 forOrthogonalScrollingSection:a3];
    uint64_t v16 = v47;
  }
LABEL_23:
  activeOrthogonalPrefetchingContext = self->_activeOrthogonalPrefetchingContext;
  self->_activeOrthogonalPrefetchingContext = (_UICollectionViewPrefetchingContext *)v16;
}

- (void)decodeRestorableStateWithCoder:(id)a3
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  [(UIView *)self layoutIfNeeded];
  [(UIScrollView *)self contentOffset];
  double v6 = v5;
  double v8 = v7;
  double v9 = [(UICollectionView *)self dataSource];
  int v10 = [(id)objc_opt_class() conformsToProtocol:&unk_1ED65E2E0];

  v48.receiver = self;
  v48.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v48 decodeRestorableStateWithCoder:v4];
  [(UICollectionView *)self _reloadDataIfNeeded];
  [(UIScrollView *)self contentOffset];
  double v13 = v12;
  double v14 = v11;
  if (v6 == v12 && v8 == v11)
  {
LABEL_6:
    if (v10) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
  [(UIScrollView *)self contentSize];
  double v16 = v15;
  [(UIView *)self frame];
  if (v13 > v16 - v17
    || ([(UIScrollView *)self contentSize], double v19 = v18, [(UIView *)self frame], v14 > v19 - v20))
  {
    -[UICollectionView setContentOffset:](self, "setContentOffset:", v6, v8);
    goto LABEL_6;
  }
  [(UICollectionView *)self _updateVisibleCellsNow:1];
  if (v10)
  {
LABEL_7:
    double v21 = [(UICollectionView *)self dataSource];
    double v22 = (void *)MEMORY[0x1E4F1CAD0];
    uint64_t v23 = objc_opt_class();
    double v24 = objc_msgSend(v22, "setWithObjects:", v23, objc_opt_class(), 0);
    id v25 = [v4 decodeObjectOfClasses:v24 forKey:@"CollectionViewSelectedCellModelIdentifiers"];

    if (v25)
    {
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      id v25 = v25;
      uint64_t v26 = [v25 countByEnumeratingWithState:&v44 objects:v50 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v45;
        do
        {
          for (uint64_t i = 0; i != v27; ++i)
          {
            if (*(void *)v45 != v28) {
              objc_enumerationMutation(v25);
            }
            double v30 = [v21 indexPathForElementWithModelIdentifier:*(void *)(*((void *)&v44 + 1) + 8 * i) inView:self];
            if (v30 && [(UICollectionView *)self _indexPathIsValid:v30])
            {
              LOBYTE(v39) = 0;
              [(UICollectionView *)self _selectItemAtIndexPath:v30 animated:0 scrollPosition:0 notifyDelegate:0 deselectPrevious:0 performPrimaryAction:0 performCustomSelectionAction:v39];
            }
          }
          uint64_t v27 = [v25 countByEnumeratingWithState:&v44 objects:v50 count:16];
        }
        while (v27);
      }
    }
LABEL_31:

    goto LABEL_32;
  }
LABEL_20:
  CGFloat v31 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v32 = objc_opt_class();
  CGFloat v33 = objc_msgSend(v31, "setWithObjects:", v32, objc_opt_class(), 0);
  double v21 = [v4 decodeObjectOfClasses:v33 forKey:@"CollectionViewSelectedCellIndexPaths"];

  if ([v21 count])
  {
    long long v42 = 0u;
    long long v43 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    id v25 = v21;
    uint64_t v34 = [v25 countByEnumeratingWithState:&v40 objects:v49 count:16];
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = *(void *)v41;
      do
      {
        for (uint64_t j = 0; j != v35; ++j)
        {
          if (*(void *)v41 != v36) {
            objc_enumerationMutation(v25);
          }
          uint64_t v38 = *(void *)(*((void *)&v40 + 1) + 8 * j);
          if ([(UICollectionView *)self _indexPathIsValid:v38]) {
            [(UICollectionView *)self selectItemAtIndexPath:v38 animated:0 scrollPosition:0];
          }
        }
        uint64_t v35 = [v25 countByEnumeratingWithState:&v40 objects:v49 count:16];
      }
      while (v35);
    }
    double v21 = v25;
    goto LABEL_31;
  }
LABEL_32:
}

- (id)_contentFocusContainerGuide
{
  return self->_contentFocusContainerGuide;
}

- (void)setRemembersLastFocusedIndexPath:(BOOL)remembersLastFocusedIndexPath
{
  uint64_t v3 = 0x10000000000;
  if (!remembersLastFocusedIndexPath) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFFEFFFFFFFFFFLL | v3;
}

- (BOOL)remembersLastFocusedIndexPath
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 40) & 1;
}

- (BOOL)_displaysHorizontalIndexTitleBar
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 25) & 1;
}

- (void)_setDisplaysHorizontalIndexTitleBar:(BOOL)a3
{
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v4 = *((void *)&self->_collectionViewFlags + 1);
  if (((((v4 & 0x2000000) == 0) ^ a3) & 1) == 0)
  {
    int v6 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v7 = *(void *)p_collectionViewFlags;
    uint64_t v8 = 0x2000000;
    if (!a3) {
      uint64_t v8 = 0;
    }
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *(void *)p_uint64_t collectionViewFlags = v7;
    *((void *)&self->_collectionViewFlags + 1) = v4 & 0xFFFFFFFFFDFFFFFFLL | v8;
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v6);
    if (a3 && ![(UIScrollView *)self _canScrollY])
    {
      [(UICollectionView *)self setupHorizontalIndexTitleBar];
    }
    else
    {
      [(UICollectionView *)self teardownHorizontalIndexTitleBar];
    }
  }
}

- (CGPoint)_horizontalIndexTitleBarOffset
{
  double x = self->_horizontalIndexTitleBarOffset.x;
  double y = self->_horizontalIndexTitleBarOffset.y;
  result.double y = y;
  result.double x = x;
  return result;
}

- (void)_setHorizontalIndexTitleBarOffset:(CGPoint)a3
{
  if (self->_horizontalIndexTitleBarOffset.x != a3.x || self->_horizontalIndexTitleBarOffset.y != a3.y)
  {
    self->_horizontalIndexTitleBarOffset = a3;
    [(UICollectionView *)self layoutHorizontalIndexTitleBar];
  }
}

- (BOOL)canBecomeFocused
{
  if (![(UICollectionView *)self remembersLastFocusedIndexPath]) {
    goto LABEL_11;
  }
  if (-[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData) < 1) {
    goto LABEL_11;
  }
  collectionViewData = self->_collectionViewData;
  if (!collectionViewData) {
    goto LABEL_11;
  }
  if ((*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 2) == 0) {
    -[UICollectionViewData _updateItemCounts]((uint64_t)collectionViewData);
  }
  if (collectionViewData->_totalItemCount >= 1)
  {
    uint64_t v4 = [(UIView *)self _focusSystem];
    double v5 = [v4 focusedItem];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      int v6 = v5;
    }
    else {
      int v6 = 0;
    }
    BOOL v7 = ![(UIView *)self containsView:v6];
  }
  else
  {
LABEL_11:
    LOBYTE(v7) = 0;
  }
  return v7;
}

- (id)_primaryFocusItemForFocusGroup:(id)a3
{
  uint64_t v4 = [(UICollectionView *)self indexPathsForSelectedItems];
  if ([v4 count] == 1)
  {
    double v5 = [v4 firstObject];
    int v6 = [(UICollectionView *)self cellForItemAtIndexPath:v5];
  }
  else
  {
    int v6 = 0;
  }

  return v6;
}

- (void)_requestFocusOnItemAtIndexPath:(id)a3
{
  +[_UICollectionViewFocusedItemState stateWithIndexPath:elementKind:viewType:]((uint64_t)_UICollectionViewFocusedItemState, a3, @"UICollectionElementKindCell", 0);
  uint64_t v4 = (_UICollectionViewFocusedItemState *)objc_claimAutoreleasedReturnValue();
  targetFocusedItemState = self->_targetFocusedItemState;
  self->_targetFocusedItemState = v4;

  [(UIView *)self _setNeedsNonDeferredFocusUpdate];
}

- (id)preferredFocusedView
{
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = [(UICollectionView *)self _horizontalIndexTitleBar];
  double v5 = [v4 _currentlyFocusedCell];

  if (v5
    && ![(UICollectionView *)self isMovingFocusFromHorizontalIndexTitleBarToContent])
  {
    id v6 = v5;
LABEL_7:
    BOOL v7 = v6;
    goto LABEL_8;
  }
  if ((*((void *)&self->_collectionViewFlags + 1) & 0x81020000000) != 0) {
    goto LABEL_4;
  }
  if (-[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData) < 1) {
    goto LABEL_4;
  }
  collectionViewData = self->_collectionViewData;
  if (!collectionViewData) {
    goto LABEL_4;
  }
  if ((*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 2) == 0) {
    -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
  }
  if (collectionViewData->_totalItemCount < 1)
  {
LABEL_4:
    if ((*((void *)&self->_collectionViewFlags + 1) & 0x80000000000) != 0)
    {
      if (os_variant_has_internal_diagnostics())
      {
        double v29 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_FAULT))
        {
          double v86 = NSStringFromSelector(a2);
          *(_DWORD *)long long buf = 138412290;
          double v99 = v86;
          _os_log_fault_impl(&dword_1853B0000, v29, OS_LOG_TYPE_FAULT, "Recursively calling out to %@ while already in the process of creating a reusable view or cell. This might lead to unexpected behavior.", buf, 0xCu);
        }
      }
      else
      {
        uint64_t v26 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &preferredFocusedView___s_category) + 8);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          uint64_t v27 = v26;
          uint64_t v28 = NSStringFromSelector(a2);
          *(_DWORD *)long long buf = 138412290;
          double v99 = v28;
          _os_log_impl(&dword_1853B0000, v27, OS_LOG_TYPE_ERROR, "Recursively calling out to %@ while already in the process of creating a reusable view or cell. This might lead to unexpected behavior.", buf, 0xCu);
        }
      }
    }
    v92.receiver = self;
    v92.super_class = (Class)UICollectionView;
    id v6 = [(UIView *)&v92 preferredFocusedView];
    goto LABEL_7;
  }
  if ([(UICollectionView *)self isMovingFocusFromHorizontalIndexTitleBarToContent])
  {
    int v10 = [(UICollectionView *)self selectedIndexTitleEntry];

    if (v10)
    {
      double v11 = [(UICollectionView *)self selectedIndexTitleEntry];
      double v12 = [v11 targetFocusedIndexPath];
      BOOL v7 = [(UICollectionView *)self cellForItemAtIndexPath:v12];
    }
    else
    {
      double v11 = [(UICollectionView *)self indexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar];
      BOOL v7 = [(UICollectionView *)self cellForItemAtIndexPath:v11];
    }

    if (v7) {
      goto LABEL_8;
    }
  }
  double v13 = [(UICollectionView *)self _focusedItemState];

  if (!v13) {
    goto LABEL_47;
  }
  double v14 = [(UICollectionView *)self _focusedItemState];
  double v15 = v14;
  if (!v14 || v14[4] != 1)
  {
    double v16 = [(UICollectionView *)self _focusedItemState];
    if (v16)
    {
      uint64_t v17 = v16[4];

      if (v17 == 2) {
        goto LABEL_27;
      }
    }
    else
    {
    }
    uint64_t v30 = [(UICollectionView *)self _focusedItemState];
    double v19 = (void *)v30;
    if (!v30 || (id v20 = *(id *)(v30 + 8)) == 0)
    {
      uint64_t v31 = [(UICollectionView *)self _focusedItemState];
      double v22 = (void *)v31;
      if (v31) {
        uint64_t v32 = *(void **)(v31 + 16);
      }
      else {
        uint64_t v32 = 0;
      }
      id v24 = v32;
      BOOL v25 = [(UICollectionView *)self _indexPathIsValid:v24];
      goto LABEL_45;
    }
LABEL_41:

LABEL_46:
    double v13 = [(UICollectionView *)self _focusedItemState];
    goto LABEL_47;
  }

LABEL_27:
  uint64_t v18 = [(UICollectionView *)self _focusedItemState];
  double v19 = (void *)v18;
  if (v18)
  {
    id v20 = *(id *)(v18 + 8);
    if (v20) {
      goto LABEL_41;
    }
  }
  uint64_t v21 = [(UICollectionView *)self _focusedItemState];
  double v22 = (void *)v21;
  if (v21) {
    uint64_t v23 = *(void **)(v21 + 16);
  }
  else {
    uint64_t v23 = 0;
  }
  id v24 = v23;
  BOOL v25 = [(UICollectionView *)self _isSectionValidInIndexPath:v24];
LABEL_45:
  BOOL v33 = v25;

  if (v33) {
    goto LABEL_46;
  }
  double v13 = 0;
LABEL_47:
  targetFocusedItemState = self->_targetFocusedItemState;
  double v89 = v5;
  if (targetFocusedItemState)
  {
    uint64_t v35 = targetFocusedItemState;
LABEL_49:
    uint64_t v36 = (uint64_t)v35;
    goto LABEL_71;
  }
  if (dyld_program_sdk_at_least()
    && [(UICollectionView *)self remembersLastFocusedIndexPath])
  {
    if (v13)
    {
      double v37 = v13;
      id v38 = v13;
    }
    else
    {
      double v37 = 0;
      id v38 = [(UICollectionView *)self _rememberedFocusedItemState];
    }
    uint64_t v36 = (uint64_t)v38;
  }
  else
  {
    double v37 = v13;
    uint64_t v36 = 0;
  }
  uint64_t v39 = [(UICollectionView *)self _indexPathsForSelectedItems];
  long long v40 = [v39 firstObject];

  if (v40)
  {
    if (v36
      && ![(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:v40 initiatedBySelection:1 focusItemStateCandidate:v36])
    {

      double v13 = v37;
      goto LABEL_71;
    }
    uint64_t v41 = +[_UICollectionViewFocusedItemState stateWithIndexPath:elementKind:viewType:]((uint64_t)_UICollectionViewFocusedItemState, v40, @"UICollectionElementKindCell", 0);

    uint64_t v36 = v41;
  }

  double v13 = v37;
  if (!v36)
  {
    double v87 = v37;
    long long v42 = [(UICollectionView *)self _delegatePreferredIndexPath];
    if (v42)
    {
      uint64_t v36 = +[_UICollectionViewFocusedItemState stateWithIndexPath:elementKind:viewType:]((uint64_t)_UICollectionViewFocusedItemState, v42, @"UICollectionElementKindCell", 0);
    }
    else
    {
      uint64_t v36 = 0;
    }

    double v13 = v37;
    if (!v36 && v37)
    {
      uint64_t v35 = v37;
      goto LABEL_49;
    }
    if (!v36)
    {
      long long v96 = 0u;
      long long v97 = 0u;
      long long v94 = 0u;
      long long v95 = 0u;
      double v68 = [(UICollectionView *)self visibleCells];
      uint64_t v69 = [v68 countByEnumeratingWithState:&v94 objects:v100 count:16];
      if (v69)
      {
        uint64_t v70 = v69;
        uint64_t v36 = 0;
        uint64_t v71 = *(void *)v95;
        double v90 = v68;
        do
        {
          for (uint64_t i = 0; i != v70; ++i)
          {
            if (*(void *)v95 != v71) {
              objc_enumerationMutation(v68);
            }
            double v73 = *(void **)(*((void *)&v94 + 1) + 8 * i);
            if (-[UIView _hasFocusableContents](v73))
            {
              CGFloat v74 = [(UICollectionView *)self _indexPathForCell:v73];
              if (!v36) {
                goto LABEL_112;
              }
              id v75 = *(id *)(v36 + 16);
              if (!v75) {
                goto LABEL_112;
              }
              CGFloat v76 = v75;
              uint64_t v91 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v74);
              uint64_t v77 = v70;
              uint64_t v78 = v71;
              double v79 = self->_collectionViewData;
              id v80 = *(id *)(v36 + 16);
              uint64_t v81 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)v79, v80);

              BOOL v82 = v91 < v81;
              uint64_t v71 = v78;
              uint64_t v70 = v77;
              double v68 = v90;
              if (v82)
              {
LABEL_112:
                uint64_t v83 = +[_UICollectionViewFocusedItemState stateWithReusableView:]((uint64_t)_UICollectionViewFocusedItemState, v73);

                uint64_t v36 = v83;
              }
            }
          }
          uint64_t v70 = [v68 countByEnumeratingWithState:&v94 objects:v100 count:16];
        }
        while (v70);

        double v13 = v87;
        if (v36) {
          goto LABEL_71;
        }
      }
      else
      {
      }
      CGRect v84 = self->_collectionViewData;
      if (!v84) {
        goto LABEL_124;
      }
      if ((*(unsigned char *)&v84->_collectionViewDataFlags & 2) == 0) {
        -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
      }
      if (v84->_totalItemCount < 1) {
        goto LABEL_124;
      }
      double v85 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](self->_collectionViewData, 0);
      uint64_t v36 = +[_UICollectionViewFocusedItemState stateWithIndexPath:elementKind:viewType:]((uint64_t)_UICollectionViewFocusedItemState, v85, @"UICollectionElementKindCell", 0);

      if (!v36) {
        goto LABEL_124;
      }
    }
  }
LABEL_71:
  id v43 = *(id *)(v36 + 8);

  if (v43)
  {
    long long v44 = (void *)v36;
    goto LABEL_100;
  }
  double v88 = v13;
  [(UICollectionView *)self _beginReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];
  int v45 = dyld_program_sdk_at_least();
  if (*(void *)(v36 + 32))
  {
    id v46 = *(id *)(v36 + 24);
    id v47 = *(id *)(v36 + 16);
    id v48 = [(UICollectionView *)self supplementaryViewForElementKind:v46 atIndexPath:v47];

    if (v48) {
      goto LABEL_86;
    }
    id v49 = *(id *)(v36 + 24);
    id v50 = *(id *)(v36 + 16);
    uint64_t v51 = [(UICollectionView *)self layoutAttributesForSupplementaryElementOfKind:v49 atIndexPath:v50];

    if (!v51 || ([v51 isHidden] & 1) != 0)
    {
      id v48 = 0;
LABEL_85:

      goto LABEL_86;
    }
    *((void *)&self->_collectionViewFlags + 1) |= 0x80000000000uLL;
    id v54 = *(id *)(v36 + 24);
    id v48 = *(id *)(v36 + 16);
    id v55 = [(UICollectionView *)self _createPreparedSupplementaryViewForElementOfKind:v54 atIndexPath:v48 layout:self->_layout withLayoutAttributes:v51 applyAttributes:1];
LABEL_84:
    id v56 = v55;

    *((void *)&self->_collectionViewFlags + 1) &= ~0x80000000000uLL;
    id v48 = v56;
    goto LABEL_85;
  }
  id v52 = *(id *)(v36 + 16);
  id v48 = [(UICollectionView *)self _cellForItemAtIndexPath:v52];

  if (!v48 || [v48 _isHiddenForReuse])
  {
    id v53 = *(id *)(v36 + 16);
    uint64_t v51 = [(UICollectionView *)self layoutAttributesForItemAtIndexPath:v53];

    if (!v51 || ([v51 isHidden] & 1) != 0) {
      goto LABEL_85;
    }
    *((void *)&self->_collectionViewFlags + 1) |= 0x80000000000uLL;
    id v54 = *(id *)(v36 + 16);
    id v55 = [(UICollectionView *)self _preparedCellForItemAtIndexPath:v54 withLayoutAttributes:v51 applyAttributes:1 isFocused:v45 ^ 1u notify:1];
    goto LABEL_84;
  }
LABEL_86:
  long long v44 = -[_UICollectionViewFocusedItemState copyWithReusableView:]((void *)v36, v48);

  if ((v45 & 1) == 0)
  {
    [(UICollectionView *)self _setFocusedItemState:v44];
    goto LABEL_99;
  }
  if (v44) {
    id v57 = (void *)v44[1];
  }
  else {
    id v57 = 0;
  }
  id v58 = v57;

  if (v58)
  {
    if (v44)
    {
      subviewManager = self->_subviewManager;
      if (v44[4])
      {
        id v60 = (id)v44[1];
        id v61 = (id)v44[3];
        uint64_t v62 = v44[4];
        id v63 = (id)v44[2];
        if (subviewManager) {
          -[_UICollectionViewSubviewCollection setView:ofKind:inCategory:atIndexPath:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v60, (uint64_t)v61, v62, (uint64_t)v63);
        }

        goto LABEL_98;
      }
      -[_UICollectionViewFocusedItemState cell](v44);
      id v60 = (id)objc_claimAutoreleasedReturnValue();
      CGRect v64 = (void *)v44[2];
    }
    else
    {
      subviewManager = self->_subviewManager;
      -[_UICollectionViewFocusedItemState cell](0);
      id v60 = (id)objc_claimAutoreleasedReturnValue();
      CGRect v64 = 0;
    }
    id v65 = v64;
    -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:]((uint64_t)subviewManager, (uint64_t)v60, (uint64_t)v65);

LABEL_98:
  }
LABEL_99:
  [(UICollectionView *)self _endReusableViewCreationAndSelfSizingOutsideVisibleCellsUpdate];

  double v13 = v88;
  if (!v44)
  {
LABEL_124:
    long long v44 = 0;
    goto LABEL_125;
  }
LABEL_100:
  id v66 = (id)v44[1];
  if (!v66)
  {
LABEL_125:
    v93.receiver = self;
    v93.super_class = (Class)UICollectionView;
    BOOL v7 = [(UIView *)&v93 preferredFocusedView];
    id v67 = 0;
    goto LABEL_126;
  }
  id v67 = v66;
  BOOL v7 = v67;
LABEL_126:

  double v5 = v89;
LABEL_8:

  return v7;
}

- (id)_delegatePreferredIndexPath
{
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  if ((collectionViewFlags & 0x4000000) != 0)
  {
    id v6 = [(UICollectionView *)self _delegateProxy];
    uint64_t v7 = [v6 indexPathForPreferredFocusedViewInCollectionView:self];
  }
  else
  {
    if ((collectionViewFlags & 0x1000000) == 0)
    {
      double v5 = 0;
      goto LABEL_9;
    }
    id v6 = [(UICollectionView *)self _delegateProxy];
    uint64_t v7 = [v6 indexPathForPreferredFocusedItemForCollectionView:self];
  }
  double v5 = (void *)v7;

  if (v5 && ![(UICollectionView *)self _indexPathIsValid:v5])
  {
    uint64_t v8 = [MEMORY[0x1E4F28B00] currentHandler];
    [v8 handleFailureInMethod:a2, self, @"UICollectionView.m", 15015, @"no cell for index path (%@) - the collection view's delegate must return an index path for a valid UICollectionViewCell from -indexPathForPreferredFocusedViewInCollectionView:", v5 object file lineNumber description];
  }
LABEL_9:
  return v5;
}

- (id)_layoutAttributesForFailedMovementWithHeading:(unint64_t)a3
{
  if ((a3 & 0x300) != 0)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4F1CBF0];
  }
  else
  {
    char v6 = a3;
    [(UIScrollView *)self visibleBounds];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v16 = _UIVectorForFocusHeading(v6);
    double v18 = v17;
    double v19 = fabs(v17);
    if (fabs(v16) > 2.22044605e-16 || v19 > 2.22044605e-16)
    {
      v23.origin.double x = v9;
      v23.origin.double y = v11;
      v23.size.double width = v13;
      v23.size.double height = v15;
      double v21 = v9 + v16 * CGRectGetWidth(v23);
      v24.origin.double x = v9;
      v24.origin.double y = v11;
      v24.size.double width = v13;
      v24.size.double height = v15;
      CGFloat Height = CGRectGetHeight(v24);
      uint64_t v4 = -[UICollectionViewData layoutAttributesForElementsInRect:](self->_collectionViewData, v21, v11 + v18 * Height, v13, v15);
    }
    else
    {
      uint64_t v4 = (void *)MEMORY[0x1E4F1CBF0];
    }
  }
  return v4;
}

- (void)_focusMovementDidFailNotification:(id)a3
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (self->_searchFullPageOnFocusUpdate)
  {
    double v5 = [(UIView *)self _focusRegionFocusSystem];
    char v6 = [v4 object];

    if (v5 == v6)
    {
      uint64_t v7 = [v4 userInfo];
      double v8 = [v7 objectForKeyedSubscript:@"UIFocusUpdateContextKey"];

      double v9 = [v8 previouslyFocusedItem];
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v10 = v9;
        double v11 = [v10 _collectionView];

        if (v11 == self)
        {
          uint64_t v12 = [(UICollectionView *)self _focusedItemState];
          double v13 = (void *)v12;
          double v14 = v12 ? *(void **)(v12 + 16) : 0;
          id v15 = v14;
          double v16 = [(UICollectionView *)self indexPathForCell:v10];
          int v17 = [v15 isEqual:v16];

          if (v17)
          {
            [v10 frame];
            CGFloat v19 = v18;
            CGFloat v21 = v20;
            CGFloat v23 = v22;
            CGFloat v25 = v24;
            uint64_t v26 = -[UICollectionView _layoutAttributesForFailedMovementWithHeading:](self, "_layoutAttributesForFailedMovementWithHeading:", [v8 focusHeading]);
            long long v43 = 0u;
            long long v44 = 0u;
            long long v45 = 0u;
            long long v46 = 0u;
            uint64_t v27 = [v26 countByEnumeratingWithState:&v43 objects:v47 count:16];
            if (v27)
            {
              uint64_t v28 = v27;
              id v42 = v10;
              double v29 = 0;
              uint64_t v30 = *(void *)v44;
              double v31 = 1.79769313e308;
              do
              {
                for (uint64_t i = 0; i != v28; ++i)
                {
                  if (*(void *)v44 != v30) {
                    objc_enumerationMutation(v26);
                  }
                  BOOL v33 = *(_WORD **)(*((void *)&v43 + 1) + 8 * i);
                  if (v33)
                  {
                    if (v33[144])
                    {
                      [*(id *)(*((void *)&v43 + 1) + 8 * i) frame];
                      double v38 = UIDistanceBetweenRects(v34, v35, v36, v37, v19, v21, v23, v25);
                      if (v38 < v31)
                      {
                        double v39 = v38;
                        long long v40 = v33;

                        double v31 = v39;
                        double v29 = v40;
                      }
                    }
                  }
                }
                uint64_t v28 = [v26 countByEnumeratingWithState:&v43 objects:v47 count:16];
              }
              while (v28);
              id v10 = v42;
              if (v29)
              {
                uint64_t v41 = +[_UICollectionViewFocusedItemState stateWithLayoutAttributes:]((uint64_t)_UICollectionViewFocusedItemState, v29);
                [(UICollectionView *)self _setFocusedItemState:v41];

                [(UIView *)self setNeedsFocusUpdate];
              }
            }
          }
        }
      }
    }
  }
}

- (BOOL)_cellCanBecomeFocused:(id)a3
{
  id v4 = a3;
  double v5 = [(UICollectionView *)self _indexPathForCell:v4];
  char v6 = v5;
  if (!v5
    || [v5 length] != 2
    || [v6 row] == 0x7FFFFFFFFFFFFFFFLL
    || [v6 section] == 0x7FFFFFFFFFFFFFFFLL
    || (p_uint64_t collectionViewFlags = &self->_collectionViewFlags, (*((_WORD *)&self->_collectionViewFlags + 8) & 0x8000) != 0))
  {
    char v9 = 0;
  }
  else
  {
    BOOL v8 = [(UICollectionView *)self _allowsEffectiveFocus];
    char v9 = v8;
    uint64_t collectionViewFlags = *(void *)p_collectionViewFlags;
    if ((*(void *)p_collectionViewFlags & 0x280000) != 0)
    {
      if ((collectionViewFlags & 0x80000) != 0)
      {
        double v11 = [(UICollectionView *)self _delegateProxy];
        char v9 = [v11 _collectionView:self canFocusItemAtIndexPath:v6];

        uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
      }
      if ((collectionViewFlags & 0x200000) != 0)
      {
        uint64_t v12 = [(UICollectionView *)self _delegateProxy];
        char v9 = [v12 collectionView:self canFocusItemAtIndexPath:v6];
      }
    }
    else if (v8)
    {
      double v14 = [(UIView *)self _focusBehavior];
      uint64_t v15 = [v14 cellFocusability];

      if (v15 == 1) {
        char v9 = [(UICollectionView *)self _inferFocusabilityForCell:v4 atIndexPath:v6];
      }
      else {
        char v9 = 1;
      }
    }
  }

  return v9;
}

- (void)_cellBecameFocused:(id)a3
{
  id v4 = [(UICollectionView *)self _indexPathForCell:a3];
  if ((*(void *)&self->_collectionViewFlags & 0x400000) != 0)
  {
    id v6 = v4;
    double v5 = [(UICollectionView *)self _delegateProxy];
    [v5 _collectionView:self didFocusItemAtIndexPath:v6];

    id v4 = v6;
  }
}

- (int64_t)_cellFocusItemDeferral:(id)a3
{
  id v4 = a3;
  if (![(UICollectionView *)self _shouldBecomeFocusedOnSelection]) {
    goto LABEL_6;
  }
  if (![(UICollectionView *)self selectionFollowsFocus]) {
    goto LABEL_6;
  }
  uint64_t v5 = [(UICollectionView *)self _indexPathForCell:v4];
  if (!v5) {
    goto LABEL_6;
  }
  id v6 = (void *)v5;
  uint64_t v7 = [(UICollectionView *)self indexPathsForSelectedItems];
  char v8 = [v7 containsObject:v6];

  if (v8) {
    int64_t v9 = 2;
  }
  else {
LABEL_6:
  }
    int64_t v9 = 0;

  return v9;
}

- (BOOL)_containsFocusedItem
{
  uint64_t v2 = [(UICollectionView *)self _focusedItemState];
  uint64_t v3 = (void *)v2;
  if (v2) {
    id v4 = *(void **)(v2 + 8);
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  BOOL v6 = v5 != 0;

  return v6;
}

- (BOOL)_isMovingFocusFromHorizontalIndexBarToCellContent:(id)a3
{
  id v4 = a3;
  id v5 = [(UICollectionView *)self _horizontalIndexTitleBar];
  if (v5)
  {
    BOOL v6 = [(UICollectionView *)self _horizontalIndexTitleBar];
    uint64_t v7 = [v4 previouslyFocusedView];
    if ([v6 _isViewEntryCell:v7])
    {
      char v8 = [v4 nextFocusedView];
      int64_t v9 = [v8 superview];
      BOOL v10 = v9 == self;
    }
    else
    {
      BOOL v10 = 0;
    }
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

- (void)_performWhileSuppressingPromiseRegionGeneration:(id)a3
{
  id v5 = a3;
  id v12 = v5;
  if (!v5)
  {
    double v11 = [MEMORY[0x1E4F28B00] currentHandler];
    [v11 handleFailureInMethod:a2, self, @"UICollectionView.m", 15179, @"Invalid parameter not satisfying: %@", @"block" object file lineNumber description];

    id v5 = 0;
  }
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  int v7 = *((unsigned __int16 *)p_collectionViewFlags + 8);
  p_uint64_t collectionViewFlags = ($E5002888C47A7C21B81C223ED367F582 *)((char *)p_collectionViewFlags + 16);
  int v8 = v7 | (*((unsigned __int8 *)p_collectionViewFlags + 2) << 16);
  *(_WORD *)p_uint64_t collectionViewFlags = v7;
  *((unsigned char *)p_collectionViewFlags + 2) = (v8 | 0x10000u) >> 16;
  (*((void (**)(void))v5 + 2))();
  int v9 = *(_WORD *)p_collectionViewFlags;
  unsigned int v10 = (v9 | (*((unsigned __int8 *)p_collectionViewFlags + 2) << 16)) & 0xFFFEFFFF;
  *(_WORD *)p_uint64_t collectionViewFlags = v9;
  *((unsigned char *)p_collectionViewFlags + 2) = (v10 | v8 & 0x10000) >> 16;
}

- (id)focusItemsInRect:(CGRect)a3
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  if (_UIViewShouldReturnSubviewsInFocusItemsInRect())
  {
    v14.receiver = self;
    v14.super_class = (Class)UICollectionView;
    int v8 = -[UIView focusItemsInRect:](&v14, sel_focusItemsInRect_, x, y, width, height);
    int v9 = [(UIView *)self coordinateSpace];
    unsigned int v10 = -[UICollectionView _focusPromiseRegionsInRect:inCoordinateSpace:inSection:](self, "_focusPromiseRegionsInRect:inCoordinateSpace:inSection:", v9, 0x7FFFFFFFFFFFFFFFLL, x, y, width, height);

    double v11 = [v8 arrayByAddingObjectsFromArray:v10];
  }
  else
  {
    v13.receiver = self;
    v13.super_class = (Class)UICollectionView;
    double v11 = -[UIView focusItemsInRect:](&v13, sel_focusItemsInRect_, x, y, width, height);
  }
  return v11;
}

- (id)_extantFocusItemsInRect:(CGRect)a3
{
  v5.receiver = self;
  v5.super_class = (Class)UICollectionView;
  uint64_t v3 = -[UIView focusItemsInRect:](&v5, sel_focusItemsInRect_, a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
  return v3;
}

- (id)_childFocusRegionsInRect:(CGRect)a3 inCoordinateSpace:(id)a4
{
  double height = a3.size.height;
  double width = a3.size.width;
  double y = a3.origin.y;
  double x = a3.origin.x;
  id v9 = a4;
  if (_UIViewShouldReturnSubviewsInFocusItemsInRect())
  {
    v15.receiver = self;
    v15.super_class = (Class)UICollectionView;
    unsigned int v10 = -[UIView _childFocusRegionsInRect:inCoordinateSpace:](&v15, sel__childFocusRegionsInRect_inCoordinateSpace_, v9, x, y, width, height);
  }
  else
  {
    v14.receiver = self;
    v14.super_class = (Class)UICollectionView;
    double v11 = -[UIView _childFocusRegionsInRect:inCoordinateSpace:](&v14, sel__childFocusRegionsInRect_inCoordinateSpace_, v9, x, y, width, height);
    id v12 = -[UICollectionView _focusPromiseRegionsInRect:inCoordinateSpace:inSection:](self, "_focusPromiseRegionsInRect:inCoordinateSpace:inSection:", v9, 0x7FFFFFFFFFFFFFFFLL, x, y, width, height);
    unsigned int v10 = [v11 arrayByAddingObjectsFromArray:v12];
  }
  return v10;
}

- (id)_focusPromiseRegionsInRect:(CGRect)a3 inCoordinateSpace:(id)a4 inSection:(int64_t)a5
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16)) & 0x10000) != 0)
  {
    id v35 = (id)MEMORY[0x1E4F1CBF0];
  }
  else
  {
    -[UIView convertRect:fromCoordinateSpace:](self, "convertRect:fromCoordinateSpace:", a4, a3.origin.x, a3.origin.y, a3.size.width, a3.size.height);
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    id v35 = (id)objc_opt_new();
    -[UICollectionViewData layoutAttributesForElementsInRect:](self->_collectionViewData, v8, v10, v12, v14);
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v15 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v37 = *(void *)v39;
      do
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v39 != v37) {
            objc_enumerationMutation(obj);
          }
          double v18 = *(_WORD **)(*((void *)&v38 + 1) + 8 * i);
          uint64_t orthogonalScrollerController = self->_orthogonalScrollerController;
          double v20 = [v18 indexPath];
          int v21 = -[_UICollectionViewOrthogonalScrollerSectionController isIndexPathInOrthogonalScrollingSection:]((uint64_t)orthogonalScrollerController, v20);

          if (a5 == 0x7FFFFFFFFFFFFFFFLL)
          {
            double v22 = self->_orthogonalScrollerController;
            CGFloat v23 = [v18 indexPath];
            LODWORD(v22) = -[_UICollectionViewOrthogonalScrollerSectionController isIndexPathInExtantOrthogonalScroller:]((BOOL)v22, v23);

            unsigned int v24 = v21 & v22 ^ 1;
          }
          else
          {
            CGFloat v25 = [v18 indexPath];
            if ([v25 section] == a5)
            {
              uint64_t v26 = [v18 indexPath];
              unsigned int v24 = [v26 item] != 0x7FFFFFFFFFFFFFFFLL;
            }
            else
            {
              unsigned int v24 = 0;
            }
          }
          char v27 = [v18 isHidden];
          if (v18 && (v27 & 1) == 0 && v24 && (v18[144] & 1) != 0)
          {
            uint64_t v28 = [v18 indexPath];
            double v29 = [(UICollectionView *)self _cellForItemAtIndexPath:v28];

            if (!v29 || [v29 _isHiddenForReuse])
            {
              newContentView = self->_newContentView;
              if (!newContentView
                || ([(UICollectionReusableView *)newContentView _layoutAttributes],
                    double v31 = objc_claimAutoreleasedReturnValue(),
                    char v32 = [v31 isEqual:v18],
                    v31,
                    (v32 & 1) == 0))
              {
                BOOL v33 = objc_alloc_init(_UICollectionViewCellPromiseRegion);
                [(_UICollectionViewCellPromiseRegion *)v33 setCollectionView:self];
                [(_UICollectionViewCellPromiseRegion *)v33 setParentScrollView:self];
                [(_UICollectionViewCellPromiseRegion *)v33 setLayoutAttributes:v18];
                if (v21) {
                  -[_UICollectionViewOrthogonalScrollerSectionController updateParentScrollViewForCellPromiseRegion:]((id *)&self->_orthogonalScrollerController->super.isa, v33);
                }
                [v35 addObject:v33];
              }
            }
          }
        }
        uint64_t v16 = [obj countByEnumeratingWithState:&v38 objects:v42 count:16];
      }
      while (v16);
    }
  }
  return v35;
}

- (id)_fulfillPromisedFocusRegionForCell:(id)a3
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  objc_super v5 = [v4 layoutAttributes];
  BOOL v6 = [v5 indexPath];

  double v7 = [(UICollectionView *)self _cellForItemAtIndexPath:v6];
  double v8 = v7;
  if (v7 && ![v7 _isHiddenForReuse])
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258BE0);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      int v17 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        double v18 = v17;
        CGFloat v19 = objc_msgSend(v6, "_ui_shortDescription");
        int v20 = 134218498;
        int v21 = self;
        __int16 v22 = 2112;
        CGFloat v23 = v19;
        __int16 v24 = 2112;
        CGFloat v25 = v8;
        _os_log_impl(&dword_1853B0000, v18, OS_LOG_TYPE_ERROR, "[UICV %p] Returning existing cell to fulfill focus promise at %@: %@", (uint8_t *)&v20, 0x20u);
      }
    }
    double v10 = v8;
  }
  else
  {
    double v9 = [v4 layoutAttributes];
    double v10 = [(UICollectionView *)self _preparedCellForItemAtIndexPath:v6 withLayoutAttributes:v9 applyAttributes:1 isFocused:0 notify:0];

    [(UICollectionView *)self _setCurrentPromiseFulfillmentCell:v10];
    -[_UICollectionViewSubviewManager setVisibleCell:atIndexPath:]((uint64_t)self->_subviewManager, (uint64_t)v10, (uint64_t)v6);
    [v10 layoutIfNeeded];
    unint64_t v11 = __UILogGetCategoryCachedImpl("UICollectionViewCellLifeCycle", &qword_1EB258BD8);
    if (*(unsigned char *)v11)
    {
      double v12 = *(NSObject **)(v11 + 8);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        double v13 = v12;
        double v14 = objc_msgSend(v6, "_ui_shortDescription");
        int v20 = 134218498;
        int v21 = self;
        __int16 v22 = 2112;
        CGFloat v23 = v14;
        __int16 v24 = 2112;
        CGFloat v25 = v10;
        _os_log_impl(&dword_1853B0000, v13, OS_LOG_TYPE_ERROR, "[UICV %p] Creating (or unhiding prefetched) cell to fulfill focus promise at %@: %@", (uint8_t *)&v20, 0x20u);
      }
    }
  }

  return v10;
}

- (id)_focusScrollBoundaryMetricsForItem:(id)a3
{
  id v4 = a3;
  objc_super v5 = [[_UIFocusScrollBoundaryMetrics alloc] initWithFocusItem:v4 scrollView:self];
  [(UICollectionView *)self _updateFocusScrollBoundaryMetrics:v5 forItem:v4 inSection:0x7FFFFFFFFFFFFFFFLL];

  return v5;
}

- (void)_updateFocusScrollBoundaryMetrics:(id)a3 forItem:(id)a4 inSection:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  if ([v8 hasDisprovedAllRelevantAssumptions]) {
    goto LABEL_55;
  }
  if (a5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    double v10 = [(UICollectionView *)self _collectionViewData];
    int64_t v11 = -[UICollectionViewData numberOfSections]((uint64_t)v10);

    if (a5 < 0 || v11 <= a5) {
      goto LABEL_55;
    }
  }
  uint64_t v12 = [(UICollectionView *)self _collectionViewData];
  if (!v12)
  {
    uint64_t v14 = 0;
    if (a5 != 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_9;
    }
LABEL_54:
    v56.receiver = self;
    v56.super_class = (Class)UICollectionView;
    id v50 = -[UIScrollView _focusScrollBoundaryMetricsForItem:](&v56, sel__focusScrollBoundaryMetricsForItem_, v9, v51);
    [v8 consumeOtherMetrics:v50];

    goto LABEL_55;
  }
  double v13 = (void *)v12;
  if ((*(unsigned char *)(v12 + 96) & 2) == 0) {
    -[UICollectionViewData _updateItemCounts](v12);
  }
  uint64_t v14 = v13[21];

  if (a5 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v14 > 0)
    {
      uint64_t v16 = 0;
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_9:
  uint64_t v15 = [(UICollectionView *)self _collectionViewData];
  uint64_t v16 = -[UICollectionViewData numberOfItemsInSection:]((uint64_t)v15, a5);

  if (v16 < 1) {
    goto LABEL_55;
  }
LABEL_13:
  uint64_t v51 = v16;
  uint64_t v52 = v14;
  objc_opt_class();
  id v54 = v9;
  _UIFocusEnvironmentContainingView(v9);
  int v17 = (UICollectionView *)objc_claimAutoreleasedReturnValue();
  id v53 = v8;
  double v18 = (_UIFocusScrollBoundaryMetrics *)v8;
  CGFloat v19 = v18;
  int v20 = 0;
  int64_t v55 = a5;
  if (v17 && v17 != self)
  {
    int v20 = 0;
    while (1)
    {
      if (objc_opt_isKindOfClass())
      {
        int v21 = [(UICollectionView *)v17 _collectionView];
        __int16 v22 = v21;
        if (v21 == self)
        {
          CGFloat v25 = v17;

          uint64_t v26 = [(UICollectionView *)self _indexPathForCell:v25];
          if (v26)
          {
            char v27 = [(UICollectionView *)self _collectionViewData];
            uint64_t v28 = -[UICollectionViewData validatedGlobalIndexForItemAtIndexPath:]((uint64_t)v27, v26);

            a5 = v55;
            if (v28 != 0x7FFFFFFFFFFFFFFFLL)
            {
              uint64_t v30 = [[_UIFocusScrollBoundaryMetrics alloc] initWithFocusItem:v25 scrollView:self];

              int v17 = v25;
              int v20 = v25;
              goto LABEL_32;
            }
          }
        }
        else if (a5 == 0x7FFFFFFFFFFFFFFFLL {
               && v21
        }
               && [(UICollectionView *)v21 _canDeriveVisibleBoundsFromContainingScrollView])
        {
          CGFloat v23 = [[_UIFocusScrollBoundaryMetrics alloc] initWithFocusItem:v54 scrollView:v22];
          [(_UIFocusScrollBoundaryMetrics *)v23 consumeOtherMetrics:v19];
          [(UICollectionView *)v22 _updateFocusScrollBoundaryMetrics:v23 forItem:v54 inSection:0x7FFFFFFFFFFFFFFFLL];
          BOOL v24 = [(_UIFocusScrollBoundaryMetrics *)v19 consumeOtherMetrics:v23];

          if (v24)
          {

            int v49 = 1;
            uint64_t v30 = v19;
            goto LABEL_52;
          }
          CGFloat v25 = v20;
          a5 = v55;
        }
        else
        {
          CGFloat v25 = v20;
        }

        int v20 = v25;
      }
      double v29 = [(UIView *)v17 superview];

      uint64_t v28 = 0x7FFFFFFFFFFFFFFFLL;
      if (v29)
      {
        int v17 = v29;
        if (v29 != self) {
          continue;
        }
      }
      int v17 = v29;
      uint64_t v30 = v19;
      goto LABEL_32;
    }
  }
  uint64_t v30 = v18;
  uint64_t v28 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_32:
  if (a5 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v35 = 0;
    uint64_t v36 = v52;
  }
  else
  {
    uint64_t v31 = [(UICollectionView *)self _collectionViewData];
    int64_t v32 = a5;
    BOOL v33 = (void *)v31;
    CGFloat v34 = [MEMORY[0x1E4F28D58] indexPathForItem:0 inSection:v32];
    uint64_t v35 = -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)v33, v34);

    uint64_t v36 = v35 + v51;
  }
  uint64_t v37 = objc_opt_new();
  long long v38 = v37;
  uint64_t v39 = v35 + 5;
  if (v35 + 5 >= v36 - 1) {
    uint64_t v39 = v36 - 1;
  }
  objc_msgSend(v37, "addIndexesInRange:", v35, v39 - v35 + 1, v51);
  if (v36 - 6 <= v35) {
    uint64_t v40 = v35;
  }
  else {
    uint64_t v40 = v36 - 6;
  }
  objc_msgSend(v38, "addIndexesInRange:", v40, v36 - v40);
  if (v28 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v38, "addIndexesInRange:");
    [v38 removeIndex:v28];
  }
  long long v41 = objc_opt_new();
  v57[0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  v57[2] = __72__UICollectionView__updateFocusScrollBoundaryMetrics_forItem_inSection___block_invoke;
  v57[3] = &unk_1E52DA548;
  id v42 = v41;
  id v58 = v42;
  [v38 enumerateIndexesUsingBlock:v57];
  if ([v42 count])
  {
    unint64_t v43 = 0;
    while (1)
    {
      uint64_t v44 = (v43 & 1) != 0 ? [v42 count] + ~(v43 >> 1) : v43 >> 1;
      long long v45 = [v42 objectAtIndexedSubscript:v44];
      uint64_t v46 = [v45 integerValue];

      id v47 = [(UICollectionView *)self _collectionViewData];
      uint64_t v48 = -[UICollectionViewData layoutAttributesForGlobalItemIndex:](v47, v46);

      [v48 frame];
      -[_UIFocusScrollBoundaryMetrics checkOtherRect:](v30, "checkOtherRect:");
      LODWORD(v47) = [(_UIFocusScrollBoundaryMetrics *)v19 consumeOtherMetrics:v30];

      if (v47) {
        break;
      }
      if (++v43 >= [v42 count]) {
        goto LABEL_49;
      }
    }
    int v49 = 1;
  }
  else
  {
LABEL_49:
    int v49 = 0;
  }

LABEL_52:
  id v9 = v54;

  id v8 = v53;
  if (v55 == 0x7FFFFFFFFFFFFFFFLL && !v49) {
    goto LABEL_54;
  }
LABEL_55:
}

void __72__UICollectionView__updateFocusScrollBoundaryMetrics_forItem_inSection___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [NSNumber numberWithUnsignedInteger:a2];
  [v2 addObject:v3];
}

- (id)keyCommands
{
  return [(_UICollectionViewMultiSelectController *)self->_multiSelectController keyCommandsForSelectionExtension];
}

- (id)targetForAction:(SEL)a3 withSender:(id)a4
{
  id v6 = a4;
  double v7 = [(_UICollectionViewMultiSelectController *)self->_multiSelectController targetForKeyCommands];
  char v8 = objc_opt_respondsToSelector();

  if (v8)
  {
    uint64_t v9 = [(_UICollectionViewMultiSelectController *)self->_multiSelectController targetForKeyCommands];
  }
  else
  {
    v12.receiver = self;
    v12.super_class = (Class)UICollectionView;
    uint64_t v9 = [(UIResponder *)&v12 targetForAction:a3 withSender:v6];
  }
  double v10 = (void *)v9;

  return v10;
}

- (id)_targetIndexPathForMoveOfItemFromOriginalIndexPath:(id)a3 atCurrentIndexPath:(id)a4 toProposedIndexPath:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  if ((collectionViewFlags & 0x40000) != 0)
  {
    objc_super v12 = [(UICollectionView *)self _delegateProxy];
    uint64_t v13 = [v12 collectionView:self targetIndexPathForMoveOfItemFromOriginalIndexPath:v8 atCurrentIndexPath:v9 toProposedIndexPath:v10];
  }
  else if ((collectionViewFlags & 0x20000) != 0)
  {
    objc_super v12 = [(UICollectionView *)self _delegateProxy];
    uint64_t v13 = [v12 collectionView:self targetIndexPathForMoveFromItemAtIndexPath:v9 toProposedIndexPath:v10];
  }
  else
  {
    if ((collectionViewFlags & 0x10000) == 0) {
      goto LABEL_8;
    }
    objc_super v12 = [(UICollectionView *)self _delegateProxy];
    uint64_t v13 = [v12 _collectionView:self targetIndexPathForMoveFromItemAtIndexPath:v9 toProposedIndexPath:v10];
  }
  uint64_t v14 = (void *)v13;

  id v10 = v14;
LABEL_8:

  return v10;
}

- (BOOL)_canReorderItemAtIndexPath:(id)a3
{
  id v4 = a3;
  if (!v4 || ![(UICollectionView *)self _dataSourceSupportsReordering]) {
    goto LABEL_12;
  }
  if (![(UICollectionView *)self _dataSourceImplementsReorderingHandlers])
  {
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    if ((~collectionViewFlags & 0x6000000000000000) != 0)
    {
      if ((~collectionViewFlags & 0x300000000000000) == 0)
      {
        id v6 = [(UICollectionView *)self _dataSourceProxy];
        char v7 = [v6 _collectionView:self canMoveItemAtIndexPath:v4];
        goto LABEL_6;
      }
      if ((*((void *)&self->_collectionViewFlags + 1) & 4) == 0 || dyld_program_sdk_at_least())
      {
        BOOL v8 = (collectionViewFlags & 0x4200000000000000) != 0;
        goto LABEL_13;
      }
LABEL_12:
      BOOL v8 = 0;
      goto LABEL_13;
    }
  }
  id v6 = [(UICollectionView *)self _dataSourceProxy];
  char v7 = [v6 collectionView:self canMoveItemAtIndexPath:v4];
LABEL_6:
  BOOL v8 = v7;

LABEL_13:
  return v8;
}

- (BOOL)_canBeginReorderingItem
{
  int v3 = [(UICollectionViewLayout *)self->_layout _allowsItemInteractionsToBegin];
  if (v3)
  {
    dragAndDropController = self->_dragAndDropController;
    LOBYTE(v3) = -[_UICollectionViewDragAndDropController canBeginReorderingSession]((uint64_t)dragAndDropController);
  }
  return v3;
}

- (BOOL)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath *)indexPath
{
  return [(UICollectionView *)self _beginReorderingItemAtIndexPath:indexPath isLegacyMovement:1];
}

- (BOOL)_beginReorderingItemAtIndexPath:(id)a3 isLegacyMovement:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  if ((!v4 || [(UICollectionView *)self _canBeginReorderingItem])
    && ((dragAndDropController = self->_dragAndDropController) == 0
      ? (unint64_t sessionKind = 0)
      : (unint64_t sessionKind = dragAndDropController->_sessionKind),
        [(UICollectionView *)self _canReorderItemAtIndexPath:v6]
     || (sessionKind & 0xFFFFFFFFFFFFFFFELL) == 2))
  {
    [(UICollectionView *)self _resetPrefetchState];
    id v10 = [(UICollectionView *)self _cellForItemAtIndexPath:v6];
    int64_t v11 = [v10 _layoutAttributes];
    [v11 center];
    double v13 = v12;
    double v15 = v14;

    -[_UIDragFeedbackGenerator userInteractionStartedAtLocation:](self->_reorderFeedbackGenerator, "userInteractionStartedAtLocation:", v13, v15);
    if (sessionKind == 1) {
      -[_UIDragSnappingFeedbackGenerator draggedObjectLiftedAtLocation:](self->_reorderFeedbackGenerator, "draggedObjectLiftedAtLocation:", v13, v15);
    }
    -[_UICollectionViewDragAndDropController beginReorderingForItemAtIndexPath:cell:]((uint64_t)self->_dragAndDropController, v6, v10);
    uint64_t v16 = [(UICollectionView *)self _cellForItemAtIndexPath:v6];

    self->_reorderingTargetPosition.double x = v13;
    self->_reorderingTargetPosition.double y = v15;
    [(UICollectionView *)self _reparentViewIntoSelf:v16];
    int v17 = -[UICollectionViewData layoutAttributesForItemAtIndexPath:]((uint64_t)self->_collectionViewData, v6);
    if (dyld_program_sdk_at_least())
    {
      double v18 = [(UIView *)self traitCollection];
      uint64_t v19 = [v18 userInterfaceIdiom];

      if (v19 == 6)
      {
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 3221225472;
        v21[2] = __69__UICollectionView__beginReorderingItemAtIndexPath_isLegacyMovement___block_invoke;
        v21[3] = &unk_1E52DCB30;
        v21[4] = self;
        id v22 = v17;
        id v23 = v16;
        +[UIView animateWithDuration:v21 animations:0.3];
      }
      else
      {
        [(UICollectionView *)self _applyLayoutAttributes:v17 toView:v16];
      }
    }
    else
    {
      -[UICollectionView _addControlledSubview:atZIndex:forced:initialAttributes:](self, "_addControlledSubview:atZIndex:forced:initialAttributes:", v16, [v17 zIndex], 1, 0);
    }

    BOOL v9 = 1;
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

uint64_t __69__UICollectionView__beginReorderingItemAtIndexPath_isLegacyMovement___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _applyLayoutAttributes:*(void *)(a1 + 40) toView:*(void *)(a1 + 48)];
}

- (void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition
{
  double y = targetPosition.y;
  double x = targetPosition.x;
  -[UICollectionView _updateReorderingTargetPosition:](self, "_updateReorderingTargetPosition:");
  reorderFeedbackGenerator = self->_reorderFeedbackGenerator;
  -[_UIDragFeedbackGenerator positionUpdatedAtLocation:](reorderFeedbackGenerator, "positionUpdatedAtLocation:", x, y);
}

- (void)_updateReorderingTargetPosition:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  if ([(UICollectionView *)self _isReordering])
  {
    double v6 = self->_reorderingTargetPosition.x;
    double v7 = self->_reorderingTargetPosition.y;
    if (v6 != x || v7 != y)
    {
      self->_reorderingTargetPosition.double x = x;
      self->_reorderingTargetPosition.double y = y;
      BOOL v9 = [(_UICollectionViewDragAndDropController *)(uint64_t)self->_dragAndDropController updateReorderingForTargetPosition:y];
      uint64_t v10 = [v9 count];
      layout = self->_layout;
      double v12 = [v9 allValues];
      double v13 = [v9 allKeys];
      double v14 = -[UICollectionViewLayout _invalidationContextForReorderingTargetPosition:targetIndexPaths:withPreviousPosition:previousIndexPaths:](layout, "_invalidationContextForReorderingTargetPosition:targetIndexPaths:withPreviousPosition:previousIndexPaths:", v12, v13, x, y, v6, v7);

      v22[0] = MEMORY[0x1E4F143A8];
      v22[1] = 3221225472;
      v22[2] = __52__UICollectionView__updateReorderingTargetPosition___block_invoke;
      v22[3] = &unk_1E52DC3F8;
      void v22[4] = self;
      BOOL v25 = v10 != 0;
      id v15 = v9;
      id v23 = v15;
      id v16 = v14;
      id v24 = v16;
      id v17 = [(UICollectionView *)self _performShadowUpdates:v22];
      if (v10)
      {
        reorderFeedbackGenerator = self->_reorderFeedbackGenerator;
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 3221225472;
        v21[2] = __52__UICollectionView__updateReorderingTargetPosition___block_invoke_4;
        v21[3] = &unk_1E52DD178;
        v21[4] = self;
        *(double *)&void v21[5] = x;
        *(double *)&v21[6] = y;
        [(UIFeedbackGenerator *)reorderFeedbackGenerator performFeedbackWithDelay:v21 insideBlock:0.05];
      }
      dragAndDropController = self->_dragAndDropController;
      if (!dragAndDropController || dragAndDropController->_sessionKind != 2)
      {
        int v20 = [(UIScrollView *)self _autoScrollAssistant];
        objc_msgSend(v20, "autoScrollFromPoint:", x, y);
      }
    }
  }
}

void __52__UICollectionView__updateReorderingTargetPosition___block_invoke(uint64_t a1)
{
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __52__UICollectionView__updateReorderingTargetPosition___block_invoke_2;
  v5[3] = &unk_1E52DC3D0;
  char v8 = *(unsigned char *)(a1 + 56);
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 _performBatchUpdates:v5 completion:0 invalidationContext:*(void *)(a1 + 48) tentativelyForReordering:1];
}

uint64_t __52__UICollectionView__updateReorderingTargetPosition___block_invoke_2(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    v2[0] = MEMORY[0x1E4F143A8];
    v2[1] = 3221225472;
    v2[2] = __52__UICollectionView__updateReorderingTargetPosition___block_invoke_3;
    v2[3] = &unk_1E52E5C08;
    uint64_t v1 = *(void **)(result + 32);
    v2[4] = *(void *)(result + 40);
    return [v1 enumerateKeysAndObjectsUsingBlock:v2];
  }
  return result;
}

void __52__UICollectionView__updateReorderingTargetPosition___block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(*(id *)(a1 + 32), "_indexPathBeforeShadowUpdatesForIndexPath:");
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) _accessibilityPostReorderingAnnouncementForCurrentIndexPath:v6 targetIndexPath:a3 previousIndexPath:a2];
  [*(id *)(a1 + 32) _moveItemAtIndexPath:a2 toIndexPath:a3];
}

uint64_t __52__UICollectionView__updateReorderingTargetPosition___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2544), "objectSnappedAtLocation:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

- (id)_autoScrollAssistantForIndexPath:(id)a3
{
  id v4 = a3;
  if (v4
    && -[_UICollectionViewOrthogonalScrollerSectionController isIndexPathInOrthogonalScrollingSection:]((uint64_t)self->_orthogonalScrollerController, v4))
  {
    uint64_t v5 = -[_UICollectionViewOrthogonalScrollerSectionController autoScrollAssistantForOrthogonalScrollingSectionAtIndexPath:]((id *)&self->_orthogonalScrollerController->super.isa, v4);
  }
  else
  {
    uint64_t v5 = [(UIScrollView *)self _autoScrollAssistant];
  }
  id v6 = (void *)v5;

  return v6;
}

- (void)_autoScrollAssistantUpdateContentOffset:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  [(UIScrollView *)self contentOffset];
  double v7 = v6;
  double v9 = v8;
  unint64_t v10 = [(UICollectionViewLayout *)self->_layout _layoutAxis];
  if (v10 - 1 > 1) {
    goto LABEL_9;
  }
  uint64_t v11 = v10;
  [(UIView *)self bounds];
  double v33 = v13;
  double v34 = v12;
  [(UIScrollView *)self contentSize];
  double v32 = v14;
  double v16 = v15;
  [(UIScrollView *)self adjustedContentInset];
  double v35 = v7;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  UIUserInterfaceLayoutDirection v25 = [(UIView *)self effectiveUserInterfaceLayoutDirection];
  double v26 = v25 == UIUserInterfaceLayoutDirectionRightToLeft ? v20 : v24;
  double v27 = v25 == UIUserInterfaceLayoutDirectionRightToLeft ? v24 : v20;
  double v28 = _UITotalEdgeDimensionsForLayoutAxis(v11, v18, v27, v22, v26);
  double v29 = v28 + _UISizeValueForAxis(v11, v32, v16);
  double v30 = v29 - _UISizeValueForAxis(v11, v34, v33);
  BOOL v31 = _UIPointValueForAxis(v11, x, y) > v30;
  double v7 = v35;
  if (!v31)
  {
LABEL_9:
    v36.receiver = self;
    v36.super_class = (Class)UICollectionView;
    -[UIScrollView _autoScrollAssistantUpdateContentOffset:](&v36, sel__autoScrollAssistantUpdateContentOffset_, x, y);
    if (![(UIScrollView *)self isPagingEnabled]) {
      -[UICollectionView _updateReorderingTargetPosition:](self, "_updateReorderingTargetPosition:", x - v7 + self->_reorderingTargetPosition.x, y - v9 + self->_reorderingTargetPosition.y);
    }
  }
}

- (void)endInteractiveMovement
{
}

- (void)cancelInteractiveMovement
{
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _moveItemAtIndexPath:*(void *)(a1 + 40) toIndexPath:*(void *)(a1 + 48)];
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _moveItemAtIndexPath:*(void *)(a1 + 40) toIndexPath:*(void *)(a1 + 48)];
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_3(uint64_t a1)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_4;
  v2[3] = &unk_1E52E51D0;
  long long v3 = *(_OWORD *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  return [(id)v3 performBatchUpdates:v2 completion:0];
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyDataSourceForMoveOfItemFromIndexPath:*(void *)(a1 + 40) toIndexPath:*(void *)(a1 + 48)];
}

void __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_5(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 2064);
    long long v3 = [v2 _invalidationContextForEndingReorderingItemToFinalIndexPaths:*(void *)(a1 + 40) previousIndexPaths:*(void *)(a1 + 48) reorderingCancelled:*(unsigned __int8 *)(a1 + 65)];
    [v2 invalidateLayoutWithContext:v3];

    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = v4[273];
    [v4 visibleBounds];
    -[UICollectionViewData validateLayoutInRect:](v5, v6, v7, v8, v9);
  }
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id obj = *(id *)(a1 + 56);
  uint64_t v10 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v29 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v31 != v29) {
          objc_enumerationMutation(obj);
        }
        double v13 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        double v14 = [v13 cell];
        if (*(unsigned char *)(a1 + 65)) {
          [v13 originalIndexPath];
        }
        else {
        double v15 = [v13 targetIndexPath];
        }
        double v16 = -[_UICollectionViewSubviewManager visibleCellAtIndexPath:](*(id ***)(*(void *)(a1 + 32) + 2896), (uint64_t)v15);
        if (v16) {
          BOOL v17 = v16 == v14;
        }
        else {
          BOOL v17 = 1;
        }
        int v18 = !v17;

        if (dyld_program_sdk_at_least())
        {
          if (v18) {
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v19 = *(void *)(*(void *)(a1 + 32) + 2896);
          double v20 = [v13 cell];
          if (v19) {
            LODWORD(v19) = -[_UICollectionViewSubviewCollection containsView:](*(void *)(v19 + 8), (uint64_t)v20);
          }

          if ((v19 | v18)) {
            goto LABEL_34;
          }
        }
        uint64_t v21 = *(void *)(*(void *)(a1 + 32) + 2184);
        if (v21 && -[UICollectionViewData _isIndexPathValid:validateItemCounts:](v21, v15, 1))
        {
          double v22 = [v14 _layoutAttributes];
          id v23 = [v22 indexPath];
          id v24 = v15;
          UIUserInterfaceLayoutDirection v25 = v24;
          if (v23 == v24)
          {

LABEL_31:
            double v22 = [*(id *)(*(void *)(a1 + 32) + 2064) layoutAttributesForItemAtIndexPath:v25];
            double v27 = *(void **)(a1 + 32);
            id v23 = [v13 cell];
            [v27 _applyLayoutAttributes:v22 toView:v23];
LABEL_33:

            goto LABEL_34;
          }
          if (!v24 || !v23)
          {

            goto LABEL_33;
          }
          char v26 = [v23 isEqual:v24];

          if (v26) {
            goto LABEL_31;
          }
        }
LABEL_34:
      }
      uint64_t v11 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
    }
    while (v11);
  }
}

void __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_6(uint64_t a1)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 48))
  {
    if (*(unsigned char *)(a1 + 49))
    {
      if (*(uint64_t *)(*(void *)(a1 + 32) + 2096) <= 0) {
        int64_t v2 = 0;
      }
      else {
        int64_t v2 = 300000000;
      }
      dispatch_time_t v3 = dispatch_time(0, v2);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_7;
      block[3] = &unk_1E52D9F70;
      void block[4] = *(void *)(a1 + 32);
      dispatch_after(v3, MEMORY[0x1E4F14428], block);
    }
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v4 = *(id *)(a1 + 40);
    uint64_t v5 = [v4 countByEnumeratingWithState:&v31 objects:v37 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v32;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v32 != v7) {
            objc_enumerationMutation(v4);
          }
          CGFloat v9 = [*(id *)(*((void *)&v31 + 1) + 8 * v8) cell];
          uint64_t v10 = [v9 superview];
          if (v10)
          {
            uint64_t v11 = v10;
            uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 2896);
            if (v12)
            {
              BOOL v13 = -[_UICollectionViewSubviewCollection containsView:](*(void *)(v12 + 8), (uint64_t)v9);

              if (v13) {
                goto LABEL_16;
              }
            }
            else
            {
            }
            [v9 removeFromSuperview];
          }
LABEL_16:

          ++v8;
        }
        while (v6 != v8);
        uint64_t v14 = [v4 countByEnumeratingWithState:&v31 objects:v37 count:16];
        uint64_t v6 = v14;
      }
      while (v14);
    }
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v15 = *(id *)(a1 + 40);
  uint64_t v16 = [v15 countByEnumeratingWithState:&v27 objects:v36 count:16];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        if (*(void *)v28 != v18) {
          objc_enumerationMutation(v15);
        }
        double v20 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        uint64_t v21 = objc_msgSend(v20, "cell", (void)v27);
        uint64_t v22 = [v21 superview];
        if (v22)
        {
          id v23 = (void *)v22;
          id v24 = [v20 cell];
          char v25 = [v24 _isHiddenForReuse];

          if (v25) {
            continue;
          }
          char v26 = *(void **)(a1 + 32);
          uint64_t v21 = [v20 cell];
          [v26 _reparentViewIntoCorrectContainer:v21];
        }
      }
      uint64_t v17 = [v15 countByEnumeratingWithState:&v27 objects:v36 count:16];
    }
    while (v17);
  }
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_7(uint64_t a1)
{
  uint64_t result = [*(id *)(*(void *)(a1 + 32) + 2064) _estimatesSizes];
  if (result)
  {
    dispatch_time_t v3 = *(void **)(a1 + 32);
    return [v3 _setNeedsVisibleCellsUpdate:1 withLayoutAttributes:1];
  }
  return result;
}

uint64_t __64__UICollectionView__completeInteractiveMovementWithDisposition___block_invoke_8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 2544), "draggedObjectLandedAtLocation:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

- (void)_notifyDataSourceForMoveOfItemFromIndexPath:(id)a3 toIndexPath:(id)a4
{
  if ((*((void *)&self->_collectionViewFlags + 1) & 4) != 0)
  {
    id v9 = a4;
    id v10 = a3;
    uint64_t v11 = [[UICollectionViewUpdateItem alloc] initWithInitialIndexPath:v10 finalIndexPath:v9 updateAction:3];
    expectedDiffableUpdateIteuint64_t m = self->_expectedDiffableUpdateItem;
    self->_expectedDiffableUpdateIteuint64_t m = v11;

    BOOL v13 = [(UICollectionView *)self _dataSourceProxy];
    [v13 collectionView:self moveItemAtIndexPath:v10 toIndexPath:v9];

    uint64_t v8 = self->_expectedDiffableUpdateItem;
    self->_expectedDiffableUpdateIteuint64_t m = 0;
  }
  else
  {
    id v6 = a4;
    id v7 = a3;
    uint64_t v14 = [(UICollectionView *)self _dataSourceProxy];
    [(UICollectionViewUpdateItem *)v14 collectionView:self moveItemAtIndexPath:v7 toIndexPath:v6];

    uint64_t v8 = v14;
  }
}

- (void)_getOriginalReorderingIndexPaths:(id *)a3 targetIndexPaths:(id *)a4
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (self && (dragAndDropController = self->_dragAndDropController) != 0) {
    uint64_t v8 = [(NSMutableArray *)dragAndDropController->__reorderedItems count];
  }
  else {
    uint64_t v8 = 0;
  }
  if (a3)
  {
    id v9 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:v8];
    if (a4)
    {
LABEL_6:
      id v10 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:v8];
      goto LABEL_9;
    }
  }
  else
  {
    id v9 = 0;
    if (a4) {
      goto LABEL_6;
    }
  }
  id v10 = 0;
LABEL_9:
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v11 = [(UICollectionView *)self _reorderedItems];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        uint64_t v17 = [v16 originalIndexPath];
        [v9 addObject:v17];

        uint64_t v18 = [v16 targetIndexPath];
        [v10 addObject:v18];
      }
      uint64_t v13 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v13);
  }

  if (a3) {
    *a3 = v9;
  }
  if (a4) {
    *a4 = v10;
  }
}

- (void)_removeReorderDestinationView
{
  reorderDestinationView = self->_reorderDestinationView;
  if (reorderDestinationView)
  {
    [(UIView *)reorderDestinationView removeFromSuperview];
    id v4 = self->_reorderDestinationView;
    self->_reorderDestinationView = 0;
  }
}

- (void)_updateReorderDestinationViewWithLayoutAttributes:(id)a3
{
  id v4 = a3;
  id v16 = v4;
  if (!self->_reorderDestinationView)
  {
    unint64_t v5 = [(UIView *)self traitCollection];
    id v6 = (void *)v5;
    if (v5)
    {
      _UIRecordTraitUsage(v5, 0x13uLL);
      BOOL v7 = v6[16] == 2;
    }
    else
    {
      BOOL v7 = 0;
    }

    uint64_t v8 = [[_UIDragDestinationIndicatorView alloc] initWithSourceListStyle:v7];
    reorderDestinationView = self->_reorderDestinationView;
    self->_reorderDestinationView = v8;

    [(UIView *)self addSubview:self->_reorderDestinationView];
    id v4 = v16;
  }
  [v4 size];
  double v11 = v10;
  double v13 = v12;
  uint64_t v14 = self->_reorderDestinationView;
  [v16 frame];
  if (v11 <= v13) {
    -[_UIDragDestinationIndicatorView positionHorizontallyCenteredInFrame:](v14, "positionHorizontallyCenteredInFrame:");
  }
  else {
    -[_UIDragDestinationIndicatorView positionVerticallyCenteredInFrame:](v14, "positionVerticallyCenteredInFrame:");
  }
  id v15 = [v16 indexPath];
  [(_UIDragDestinationIndicatorView *)self->_reorderDestinationView setCurrentIndexPath:v15];
}

- (void)_cellDidBecomeFocused:(id)a3
{
  id v7 = [(UICollectionView *)self _indexPathForCell:a3];
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  if ((collectionViewFlags & 0x100000) != 0)
  {
    unint64_t v5 = [(UICollectionView *)self _delegateProxy];
    [v5 _collectionView:self didFocusItemAtIndexPath:v7];

    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  }
  if ((collectionViewFlags & 0x400000) != 0)
  {
    id v6 = [(UICollectionView *)self _delegateProxy];
    [v6 collectionView:self didFocusItemAtIndexPath:v7];
  }
}

- (void)_cellDidBecomeUnfocused:(id)a3
{
  id v4 = [(UICollectionView *)self _indexPathForCell:a3];
  if ((*(void *)&self->_collectionViewFlags & 0x800000) != 0)
  {
    id v6 = v4;
    unint64_t v5 = [(UICollectionView *)self _delegateProxy];
    [v5 collectionView:self didUnfocusItemAtIndexPath:v6];

    id v4 = v6;
  }
}

- (BOOL)_shouldUpdateFocusInContext:(id)a3
{
  id v4 = a3;
  v12.receiver = self;
  v12.super_class = (Class)UICollectionView;
  unsigned __int8 v5 = [(UIScrollView *)&v12 _shouldUpdateFocusInContext:v4];
  if (![(UICollectionView *)self _isMovingFocusFromHorizontalIndexBarToCellContent:v4])
  {
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    if ((collectionViewFlags & 0x8000000) != 0)
    {
      id v7 = +[UICollectionViewFocusUpdateContext _contextWithContext:v4 collectionView:self];
      uint64_t v8 = [(UICollectionView *)self _delegateProxy];
      unsigned __int8 v5 = [v8 collectionView:self shouldUpdateFocusInContext:v7];
    }
    else
    {
      if ((collectionViewFlags & 0x2000000) == 0) {
        goto LABEL_10;
      }
      id v7 = +[UICollectionViewFocusUpdateContext _contextWithContext:v4 collectionView:self];
      uint64_t v8 = [(UICollectionView *)self _delegateProxy];
      id v9 = [v7 previouslyFocusedIndexPath];
      double v10 = [v7 nextFocusedView];
      unsigned __int8 v5 = objc_msgSend(v8, "collectionView:shouldUpdateFocusFromItemAtIndexPath:toView:heading:", self, v9, v10, objc_msgSend(v7, "focusHeading"));
    }
    goto LABEL_10;
  }
  if (![(UIScrollView *)self isScrollAnimating])
  {
    [(UICollectionView *)self setIsMovingFocusFromHorizontalIndexTitleBarToContent:1];
    [(UIView *)self setNeedsFocusUpdate];
  }
  unsigned __int8 v5 = 0;
LABEL_10:

  return v5;
}

- (id)_managedSubviewForView:(id)a3
{
  id v4 = (UICollectionView *)a3;
  unsigned __int8 v5 = v4;
  id v6 = 0;
  id v7 = v4;
  if (v4 && v4 != self)
  {
    uint64_t v8 = v4;
    while (1)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v9 = v8;
        double v10 = [(UICollectionView *)v9 _layoutAttributes];

        if (v10)
        {
          double v10 = [(UICollectionView *)v9 _collectionView];
        }
      }
      else
      {
        double v10 = 0;
      }
      if (v10 == self) {
        break;
      }
      id v7 = [(UIView *)v8 superview];

      id v6 = 0;
      if (v7)
      {
        uint64_t v8 = v7;
        if (v7 != self) {
          continue;
        }
      }
      goto LABEL_14;
    }
    id v7 = v8;

    id v6 = v7;
  }
LABEL_14:

  return v6;
}

- (void)_willUpdateFocusInContext:(id)a3
{
  id v4 = [a3 nextFocusedItem];
  _UIFocusEnvironmentFirstCommonAncestor(v4, self);
  unsigned __int8 v5 = (UICollectionView *)objc_claimAutoreleasedReturnValue();

  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  uint64_t v7 = *((void *)&self->_collectionViewFlags + 1);
  if ((v5 == self) == ((v7 & 0x1000000) == 0))
  {
    int v8 = *((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags + 18) << 16);
    uint64_t v9 = *(void *)p_collectionViewFlags;
    *((_WORD *)&self->_collectionViewFlags + 8) = *((_WORD *)&self->_collectionViewFlags + 8);
    *((unsigned char *)&self->_collectionViewFlags + 18) = BYTE2(v8);
    *(void *)p_uint64_t collectionViewFlags = v9;
    *((void *)&self->_collectionViewFlags + 1) = v7 & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)(v5 == self) << 24);
    [(UICollectionView *)self _updateSelectionIsKey];
  }
}

- (void)_didUpdateFocusInContext:(id)a3
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  if ([(UICollectionView *)self _isMovingFocusFromHorizontalIndexBarToCellContent:v5])
  {
    [(UICollectionView *)self setSelectedIndexTitleEntry:0];
    [(UICollectionView *)self setIsMovingFocusFromHorizontalIndexTitleBarToContent:0];
    [(UICollectionView *)self setIndexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar:0];
  }
  uint64_t v6 = [(UICollectionView *)self _focusedItemState];
  uint64_t v7 = [v5 previouslyFocusedView];
  id v8 = [(UICollectionView *)self _managedSubviewForView:v7];

  if (v6)
  {
    id v9 = *(id *)(v6 + 16);
    [(UICollectionView *)self _unhighlightItemAtIndexPath:v9 animated:0 notifyDelegate:1];
  }
  targetFocusedItemState = self->_targetFocusedItemState;
  self->_targetFocusedItemState = 0;

  double v11 = [v5 nextFocusedView];
  if (v11 == self)
  {

    goto LABEL_15;
  }
  objc_super v12 = v11;
  double v13 = [v5 nextFocusedView];
  int v14 = [v13 isDescendantOfView:self];

  if (!v14)
  {
LABEL_15:
    [(UICollectionView *)self _setFocusedItemState:0];
    goto LABEL_29;
  }
  id v15 = [v5 nextFocusedView];
  id v16 = [(UICollectionView *)self _managedSubviewForView:v15];

  if (v16)
  {
    int has_internal_diagnostics = os_variant_has_internal_diagnostics();
    char v18 = [v16 isHidden];
    if (has_internal_diagnostics)
    {
      if ((v18 & 1) == 0)
      {
        [v16 alpha];
        if (v91 > 0.0)
        {
LABEL_11:
          uint64_t v20 = [v16 _layoutAttributes];
          long long v21 = (void *)v20;
          if (v20 && (*(_WORD *)(v20 + 288) & 1) != 0)
          {
            uint64_t v22 = [(UICollectionView *)self _indexPathForCell:v16];
          }
          else
          {
            uint64_t v22 = [(UICollectionView *)self indexPathForSupplementaryView:v16];
          }
          id v23 = (void *)v22;
          if (!v22)
          {
            id v23 = [v21 indexPath];
          }
          long long v95 = a2;
          if ([(UICollectionView *)self _indexPathIsValid:v23 allowSectionItemSentinel:1])
          {
            uint64_t v24 = +[_UICollectionViewFocusedItemState stateWithReusableView:overrideIndexPath:]((uint64_t)_UICollectionViewFocusedItemState, v16, v23);
            [(UICollectionView *)self _setFocusedItemState:v24];

            [(UICollectionView *)self _updateHorizontalIndexTitleBarSelectionForFocusedIndexPath:v23];
LABEL_27:

            a2 = v95;
            goto LABEL_28;
          }
          if (os_variant_has_internal_diagnostics())
          {
            char v26 = __UIFaultDebugAssertLog();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT))
            {
              objc_super v92 = [v5 nextFocusedView];
              objc_super v93 = -[UICollectionViewData dataSourceCountsDescription](self->_collectionViewData);
              *(_DWORD *)long long buf = 138413314;
              double v98 = v16;
              __int16 v99 = 2112;
              int v100 = v21;
              __int16 v101 = 2112;
              id v102 = v92;
              __int16 v103 = 2112;
              char v104 = self;
              __int16 v105 = 2112;
              double v106 = v93;
              _os_log_fault_impl(&dword_1853B0000, v26, OS_LOG_TYPE_FAULT, "Attempted to move focus into a view with an invalid index path: %@; Layout attributes: %@; Focused view:"
                " %@; Collection view: %@; Data source counts: %@",
                buf,
                0x34u);
            }
          }
          else
          {
            char v25 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258BF0) + 8);
            if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
            {
LABEL_26:
              [(UICollectionView *)self _setFocusedItemState:0];
              goto LABEL_27;
            }
            char v26 = v25;
            long long v27 = [v5 nextFocusedView];
            long long v28 = -[UICollectionViewData dataSourceCountsDescription](self->_collectionViewData);
            *(_DWORD *)long long buf = 138413314;
            double v98 = v16;
            __int16 v99 = 2112;
            int v100 = v21;
            __int16 v101 = 2112;
            id v102 = v27;
            __int16 v103 = 2112;
            char v104 = self;
            __int16 v105 = 2112;
            double v106 = v28;
            _os_log_impl(&dword_1853B0000, v26, OS_LOG_TYPE_ERROR, "Attempted to move focus into a view with an invalid index path: %@; Layout attributes: %@; Focused view: %"
              "@; Collection view: %@; Data source counts: %@",
              buf,
              0x34u);
          }
          goto LABEL_26;
        }
      }
      double v89 = __UIFaultDebugAssertLog();
      if (!os_log_type_enabled(v89, OS_LOG_TYPE_FAULT))
      {
LABEL_84:

        goto LABEL_11;
      }
      double v90 = [v5 nextFocusedView];
      *(_DWORD *)long long buf = 138412546;
      double v98 = v16;
      __int16 v99 = 2112;
      int v100 = v90;
      _os_log_fault_impl(&dword_1853B0000, v89, OS_LOG_TYPE_FAULT, "Attempting to move focus into a hidden view: %@; Focused view: %@",
        buf,
        0x16u);
    }
    else
    {
      if ((v18 & 1) == 0)
      {
        [v16 alpha];
        if (v19 > 0.0) {
          goto LABEL_11;
        }
      }
      double v88 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB258BE8) + 8);
      if (!os_log_type_enabled(v88, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      double v89 = v88;
      double v90 = [v5 nextFocusedView];
      *(_DWORD *)long long buf = 138412546;
      double v98 = v16;
      __int16 v99 = 2112;
      int v100 = v90;
      _os_log_impl(&dword_1853B0000, v89, OS_LOG_TYPE_ERROR, "Attempting to move focus into a hidden view: %@; Focused view: %@",
        buf,
        0x16u);
    }

    goto LABEL_84;
  }
  [(UICollectionView *)self _setFocusedItemState:0];
LABEL_28:

LABEL_29:
  long long v29 = [(UICollectionView *)self _focusedItemState];
  [(_UISelectionInteraction *)self->_selectionInteraction setEnabled:v29 != 0];

  [(UICollectionView *)self _setCurrentPromiseFulfillmentCell:0];
  v96.receiver = self;
  v96.super_class = (Class)UICollectionView;
  [(UIScrollView *)&v96 _didUpdateFocusInContext:v5];
  if (v6) {
    long long v30 = *(void **)(v6 + 8);
  }
  else {
    long long v30 = 0;
  }
  id v31 = v30;
  [(UICollectionView *)self _reusePreviouslyFocusedManagedSubviewIfNeeded:v31];

  if ((dyld_program_sdk_at_least() & 1) == 0 && v8)
  {
    long long v32 = v6 ? *(void **)(v6 + 8) : 0;
    id v33 = v32;

    if (v8 != v33) {
      [(UICollectionView *)self _reusePreviouslyFocusedManagedSubviewIfNeeded:v8];
    }
  }
  long long v34 = [(UICollectionView *)self _endOfContentFocusContainerGuide];

  if (v34)
  {
    uint64_t v35 = [(UICollectionView *)self _focusedItemState];
    objc_super v36 = (void *)v35;
    if (v35) {
      uint64_t v37 = *(void **)(v35 + 8);
    }
    else {
      uint64_t v37 = 0;
    }
    id v38 = v37;
    uint64_t v39 = [(UICollectionView *)self _endOfContentFocusContainerGuide];
    [v39 setEnabled:v38 != 0];
  }
  sectionFocusGuideController = self->_sectionFocusGuideController;
  uint64_t v41 = [(UICollectionView *)self _focusedItemState];
  id v42 = (void *)v41;
  if (v41) {
    unint64_t v43 = *(void **)(v41 + 16);
  }
  else {
    unint64_t v43 = 0;
  }
  id v44 = v43;
  [(_UICollectionViewSectionFocusGuideController *)sectionFocusGuideController updateFocusedIndexPath:v44];

  [(_UICollectionViewSectionFocusGuideController *)self->_sectionFocusGuideController performLayout];
  uint64_t v45 = [(UICollectionView *)self _horizontalIndexTitleBar];
  if (v45)
  {
    uint64_t v46 = (void *)v45;
    id v47 = [(UICollectionView *)self _horizontalIndexTitleBar];
    uint64_t v48 = [v5 nextFocusedView];
    int v49 = [v47 _isViewEntryCell:v48];

    if (v49)
    {
      if (v6) {
        id v50 = *(void **)(v6 + 16);
      }
      else {
        id v50 = 0;
      }
      id v51 = v50;
      [(UICollectionView *)self setIndexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar:v51];
    }
  }
  p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  if ((*(void *)&self->_collectionViewFlags & 0x10000000) != 0)
  {
    if (v6) {
      id v53 = *(void **)(v6 + 8);
    }
    else {
      id v53 = 0;
    }
    id v54 = v53;
    int64_t v55 = [v5 previouslyFocusedView];
    id v56 = [(UICollectionView *)self _managedSubviewForView:v55];

    if (v54 == v56)
    {
      if (v6) {
        id v58 = *(void **)(v6 + 16);
      }
      else {
        id v58 = 0;
      }
      id v57 = v58;
    }
    else
    {
      id v57 = 0;
    }
    CGRect v59 = +[_UIFocusAnimationCoordinatorManager animationCoordinatorForContext:v5];
    if (!v59)
    {
      double v87 = [MEMORY[0x1E4F28B00] currentHandler];
      [v87 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:16361 description:@"Received call to _didUpdateFocusInContext: outside of a focus update."];
    }
    id v60 = +[UICollectionViewFocusUpdateContext _contextWithContext:v5 collectionView:self cachedPreviouslyFocusedIndexPath:v57];
    id v61 = [(UICollectionView *)self _delegateProxy];
    [v61 collectionView:self didUpdateFocusInContext:v60 withAnimationCoordinator:v59];

    p_uint64_t collectionViewFlags = &self->_collectionViewFlags;
  }
  if (((*((unsigned __int16 *)p_collectionViewFlags + 8) | (*((unsigned __int8 *)p_collectionViewFlags + 18) << 16)) & 0x40000) == 0)
  {
    uint64_t v62 = [(UICollectionView *)self _focusedItemState];
    if (v62)
    {
      id v63 = (void *)v62;
      uint64_t v64 = [(UICollectionView *)self _focusedItemState];
      id v65 = (id)v64;
      if (v64 && *(void *)(v64 + 32))
      {
LABEL_63:

        goto LABEL_80;
      }
      uint64_t v66 = [(UICollectionView *)self _focusedItemState];
      id v67 = (void *)v66;
      if (v66) {
        double v68 = *(void **)(v66 + 8);
      }
      else {
        double v68 = 0;
      }
      id v69 = v68;
      id v70 = [v5 nextFocusedItem];

      if (v69 == v70)
      {
        if (dyld_program_sdk_at_least())
        {
          if (((*((unsigned __int16 *)&self->_collectionViewFlags + 8) | (*((unsigned __int8 *)&self->_collectionViewFlags
                                                                           + 18) << 16)) & 0x40000) == 0)
          {
            uint64_t v71 = [v5 _focusMovement];
            if (v71)
            {
              double v72 = (void *)v71;
              BOOL v73 = [(UICollectionView *)self _delegateSupportsPrimaryAction];

              if (v73) {
                goto LABEL_74;
              }
            }
          }
        }
        CGFloat v74 = [(UICollectionView *)self indexPathsForSelectedItems];
        uint64_t v75 = [(UICollectionView *)self _focusedItemState];
        CGFloat v76 = (void *)v75;
        uint64_t v77 = v75 ? *(void **)(v75 + 16) : 0;
        id v78 = v77;
        char v79 = [v74 containsObject:v78];

        if ((v79 & 1) == 0)
        {
LABEL_74:
          uint64_t v80 = [(UICollectionView *)self _focusedItemState];
          uint64_t v81 = (void *)v80;
          BOOL v82 = v80 ? *(void **)(v80 + 16) : 0;
          id v83 = v82;
          BOOL v84 = [(UICollectionView *)self _shouldSelectionFollowFocusForIndexPath:v83 initiatedBySelection:0];

          if (v84)
          {
            uint64_t v85 = [(UICollectionView *)self _focusedItemState];
            id v63 = (void *)v85;
            if (v85) {
              double v86 = *(void **)(v85 + 16);
            }
            else {
              double v86 = 0;
            }
            id v65 = v86;
            LOBYTE(v94) = 0;
            [(UICollectionView *)self _selectItemAtIndexPath:v65 animated:0 scrollPosition:0 notifyDelegate:1 deselectPrevious:1 performPrimaryAction:0 performCustomSelectionAction:v94];
            goto LABEL_63;
          }
        }
      }
    }
  }
LABEL_80:
}

- (BOOL)_focusTriggersSelectionDelegate
{
  return dyld_program_sdk_at_least();
}

- (id)_systemDefaultFocusGroupIdentifier
{
  dispatch_time_t v3 = [(UIView *)self _focusBehavior];
  char v4 = [v3 focusGroupContainmentBehavior];

  if ((v4 & 0x40) != 0)
  {
    uint64_t v6 = _UIFocusGroupIdentifierOfAssociatedSearchTextFieldForView(self);
    uint64_t v7 = v6;
    if (v6)
    {
      id v8 = v6;
    }
    else
    {
      v11.receiver = self;
      v11.super_class = (Class)UICollectionView;
      id v8 = [(UIView *)&v11 _systemDefaultFocusGroupIdentifier];
    }
    id v5 = v8;
  }
  else
  {
    v10.receiver = self;
    v10.super_class = (Class)UICollectionView;
    id v5 = [(UIView *)&v10 _systemDefaultFocusGroupIdentifier];
  }
  return v5;
}

- (void)_updateHorizontalIndexTitleBarSelectionForFocusedIndexPath:(id)a3
{
  id v27 = a3;
  char v4 = [(UICollectionView *)self _horizontalIndexTitleBar];

  if (v27 && v4)
  {
    uint64_t v5 = *((void *)&self->_collectionViewFlags + 1);
    uint64_t v6 = [(UICollectionView *)self _horizontalIndexTitleBar];
    uint64_t v7 = v6;
    if ((v5 & 1) == 0)
    {
      objc_msgSend(v6, "_selectEntryForTitleIndex:", objc_msgSend(v27, "section"));
      id v8 = v7;
LABEL_36:

      goto LABEL_37;
    }
    id v8 = [v6 entries];

    id v9 = [(UICollectionView *)self _horizontalIndexTitleBar];
    objc_super v10 = [v9 selectedEntry];

    if (v10)
    {
      if ([v8 count] == 1) {
        goto LABEL_35;
      }
      objc_super v11 = [v10 targetFocusedIndexPath];
      uint64_t v12 = [v27 compare:v11];
      switch(v12)
      {
        case 1:
          uint64_t v13 = [v8 indexOfObject:v10];
          if (v13 < (unint64_t)[v8 count])
          {
            while (1)
            {
              int v14 = [v8 objectAtIndexedSubscript:v13];
              if (v13 == [v8 count] - 1) {
                goto LABEL_31;
              }
              unint64_t v17 = v13 + 1;
              char v18 = [v8 objectAtIndexedSubscript:v13 + 1];
              double v19 = [v18 targetFocusedIndexPath];
              uint64_t v20 = [v27 compare:v19];

              if (v20 == -1)
              {
                char v26 = [(UICollectionView *)self _horizontalIndexTitleBar];
                [v26 _selectEntryForTitleIndex:v13];

                goto LABEL_32;
              }

              ++v13;
              if (v17 >= [v8 count]) {
                goto LABEL_18;
              }
            }
          }
          break;
        case 0:
LABEL_34:

          goto LABEL_35;
        case -1:
          uint64_t v13 = [v8 indexOfObject:v10] - 1;
          if (v13 >= 0)
          {
            while (1)
            {
              int v14 = [v8 objectAtIndexedSubscript:v13];
              id v15 = [v14 targetFocusedIndexPath];
              uint64_t v16 = [v27 compare:v15];

              if (!v13 || v16 == 1) {
                break;
              }

              --v13;
            }
LABEL_31:
            char v18 = [(UICollectionView *)self _horizontalIndexTitleBar];
            [v18 _selectEntryForTitleIndex:v13];
LABEL_32:

            goto LABEL_33;
          }
          break;
      }
LABEL_18:
    }
    if ([v8 count])
    {
      uint64_t v21 = 0;
      while (1)
      {
        objc_super v11 = [v8 objectAtIndexedSubscript:v21];
        uint64_t v22 = [v11 targetFocusedIndexPath];
        uint64_t v23 = [v27 compare:v22];

        if (!v23 || v21 == [v8 count] - 1 && v23 == 1)
        {
          uint64_t v24 = [(UICollectionView *)self _horizontalIndexTitleBar];
          int v14 = v24;
          uint64_t v25 = v21;
          goto LABEL_30;
        }
        if (v21 && v23 == -1) {
          break;
        }

        if (++v21 >= (unint64_t)[v8 count]) {
          goto LABEL_35;
        }
      }
      uint64_t v24 = [(UICollectionView *)self _horizontalIndexTitleBar];
      int v14 = v24;
      uint64_t v25 = v21 - 1;
LABEL_30:
      [v24 _selectEntryForTitleIndex:v25];
LABEL_33:

      goto LABEL_34;
    }
LABEL_35:

    goto LABEL_36;
  }
LABEL_37:
}

- (void)_setKeepsFirstResponderVisibleOnBoundsChange:(BOOL)a3
{
  uint64_t v3 = 0x200000000000;
  if (!a3) {
    uint64_t v3 = 0;
  }
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFFFFDFFFFFFFFFFFLL | v3;
}

- (BOOL)_keepsFirstResponderVisibleOnBoundsChange
{
  return (*((void *)&self->_collectionViewFlags + 1) >> 45) & 1;
}

- (void)_scrollFirstResponderCellToVisible:(BOOL)a3
{
  subviewManager = self->_subviewManager;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __55__UICollectionView__scrollFirstResponderCellToVisible___block_invoke;
  v4[3] = &unk_1E52E5C58;
  v4[4] = self;
  BOOL v5 = a3;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v4);
  }
}

void __55__UICollectionView__scrollFirstResponderCellToVisible___block_invoke(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  if ([a3 _isAncestorOfFirstResponder]
    && [*(id *)(a1 + 32) _indexPathIsValid:v7])
  {
    objc_msgSend(*(id *)(a1 + 32), "_scrollToItemAtPresentationIndexPath:atScrollPosition:additionalInsets:animated:", v7, 0, *(unsigned __int8 *)(a1 + 40), 0.0, 0.0, 0.0, 0.0);
    *a4 = 1;
  }
}

- (BOOL)_supportsAutomaticCatalystDragAndDropReordering
{
  if (![(UICollectionView *)self _dragAndDropNeededForReordering]) {
    return 0;
  }
  uint64_t v3 = [(UICollectionView *)self _dragDelegateActual];
  if (v3)
  {
    BOOL v4 = 0;
  }
  else
  {
    BOOL v5 = [(UICollectionView *)self _dropDelegateActual];
    BOOL v4 = v5 == 0;
  }
  return v4;
}

- (id)_indexPathOfItemNearestToPoint:(CGPoint)a3 intersectingRect:(CGRect)a4
{
  CGFloat height = a4.size.height;
  CGFloat width = a4.size.width;
  CGFloat y = a4.origin.y;
  CGFloat x = a4.origin.x;
  CGFloat v7 = a3.y;
  CGFloat v8 = a3.x;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  collectionViewData = self->_collectionViewData;
  [(UICollectionView *)self _visibleBounds];
  id v15 = -[UICollectionViewData layoutAttributesForCellsInRect:validateLayout:](collectionViewData, 1, v11, v12, v13, v14);
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  uint64_t v16 = [v15 countByEnumeratingWithState:&v45 objects:v49 count:16];
  if (!v16) {
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  CGFloat v40 = y;
  CGFloat v41 = width;
  CGFloat v42 = height;
  char v18 = 0;
  double v19 = 1.79769313e308;
  uint64_t v20 = *(void *)v46;
  CGFloat v36 = *(double *)(MEMORY[0x1E4F1DB28] + 24);
  CGFloat v37 = *(double *)(MEMORY[0x1E4F1DB28] + 16);
  v44.size.CGFloat width = v37;
  v44.size.CGFloat height = v36;
  CGFloat v38 = *(double *)(MEMORY[0x1E4F1DB28] + 8);
  CGFloat v39 = *MEMORY[0x1E4F1DB28];
  v44.origin.CGFloat x = *(CGFloat *)MEMORY[0x1E4F1DB28];
  v44.origin.CGFloat y = v38;
  do
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*(void *)v46 != v20) {
        objc_enumerationMutation(v15);
      }
      uint64_t v22 = *(void **)(*((void *)&v45 + 1) + 8 * i);
      layout = self->_layout;
      objc_msgSend(v22, "frame", *(void *)&v36, *(void *)&v37, *(void *)&v38, *(void *)&v39, *(void *)&v40, *(void *)&v41, *(void *)&v42);
      -[UICollectionViewLayout _orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:](layout, "_orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:frame:", v22);
      CGFloat v25 = v24;
      CGFloat v27 = v26;
      CGFloat v29 = v28;
      CGFloat v31 = v30;
      UIDistanceBetweenPointAndRect(v8, v7, v24, v26, v28, v30);
      double v33 = fabs(v32);
      if (v33 < v19)
      {
        uint64_t v34 = [v22 indexPath];

        v44.size.CGFloat width = v29;
        v44.size.CGFloat height = v31;
        v44.origin.CGFloat x = v25;
        v44.origin.CGFloat y = v27;
        double v19 = v33;
        char v18 = (void *)v34;
      }
    }
    uint64_t v17 = [v15 countByEnumeratingWithState:&v45 objects:v49 count:16];
  }
  while (v17);
  if (v18)
  {
    v52.origin.CGFloat y = v38;
    v52.origin.CGFloat x = v39;
    v52.size.CGFloat height = v36;
    v52.size.CGFloat width = v37;
    v54.origin.CGFloat x = x;
    v54.origin.CGFloat y = v40;
    v54.size.CGFloat width = v41;
    v54.size.CGFloat height = v42;
    if (!CGRectEqualToRect(v52, v54))
    {
      v53.origin.CGFloat x = x;
      v53.origin.CGFloat y = v40;
      v53.size.CGFloat width = v41;
      v53.size.CGFloat height = v42;
      if (!CGRectIntersectsRect(v53, v44))
      {

LABEL_14:
        char v18 = 0;
      }
    }
  }

  return v18;
}

uint64_t __96__UICollectionView__sectionIndexesAfterShadowUpdatesForSectionIndexes_allowingAppendingInserts___block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = [*(id *)(*(void *)(a1 + 32) + 2768) sectionIndexAfterShadowUpdates:a2 allowingAppendingInserts:*(unsigned __int8 *)(a1 + 48)];
  if (result != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = result;
    BOOL v5 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    return [v5 addIndex:v4];
  }
  return result;
}

- (id)_indexPathsBeforeShadowUpdatesForIndexPaths:(id)a3
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    id v5 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v4, "count"));
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v6 = v4;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v14;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v6);
          }
          double v11 = -[_UICollectionViewShadowUpdatesController indexPathBeforeShadowUpdates:](self->_dragAndDropController, "indexPathBeforeShadowUpdates:", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13);
          if (v11) {
            [v5 addObject:v11];
          }
        }
        uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v8);
    }
  }
  else
  {
    id v5 = v4;
  }

  return v5;
}

- (id)_indexPathAfterShadowUpdatesForIndexPath:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController))
  {
    id v5 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathAfterShadowUpdates:v4];
  }
  else
  {
    id v5 = v4;
  }
  id v6 = v5;

  return v6;
}

- (BOOL)isDragSessionActive
{
  dragAndDropController = self->_dragAndDropController;
  if (!dragAndDropController) {
    return 0;
  }
  if (-[_UICollectionViewDragSourceController isActive](&dragAndDropController->_sourceController->super.isa)) {
    return 1;
  }
  id v5 = self->_dragAndDropController;
  if (!v5) {
    return 0;
  }
  destinationController = v5->_destinationController;
  return -[_UICollectionViewDragDestinationController isActive](destinationController);
}

- (BOOL)hasUncommittedUpdates
{
  return -[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController);
}

- (id)_indexPathForInsertionAtPoint:(CGPoint)a3 dropIntent:(int64_t)a4 sourceIndexPath:(id)a5 indicatorLayoutAttributes:(id *)a6
{
  double y = a3.y;
  double x = a3.x;
  id v11 = a5;
  uint64_t v12 = -[_UICollectionViewDragAndDropController effectiveDragDestinationVisualStyle]((uint64_t)self->_dragAndDropController);
  uint64_t v13 = v12;
  BOOL v14 = a4 == 1 && v12 == 2;
  int v15 = v14;
  if (v14)
  {
    long long v16 = -[UICollectionViewLayout _layoutAttributesForInsertionIndicatorAtTargetPosition:sourceIndexPath:](self->_layout, "_layoutAttributesForInsertionIndicatorAtTargetPosition:sourceIndexPath:", v11, x, y);
    uint64_t v17 = [v16 indexPath];
    if (!v11) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v17 = -[UICollectionView _indexPathForItemAtPoint:](self, "_indexPathForItemAtPoint:", x, y);
    long long v16 = 0;
    if (!v11) {
      goto LABEL_19;
    }
  }
  if (v13 != 2)
  {
LABEL_19:
    id v22 = v17;
    goto LABEL_20;
  }
  uint64_t v18 = [(_UIDragDestinationIndicatorView *)self->_reorderDestinationView currentIndexPath];
  double v19 = (void *)v18;
  if (v18) {
    uint64_t v20 = (void *)v18;
  }
  else {
    uint64_t v20 = v11;
  }
  id v21 = v20;

  id v22 = [(UICollectionView *)self _targetIndexPathForMoveOfItemFromOriginalIndexPath:v11 atCurrentIndexPath:v21 toProposedIndexPath:v17];

  if (v15 && ([v22 isEqual:v17] & 1) == 0)
  {
    uint64_t v23 = [(UICollectionViewLayout *)self->_layout _layoutAttributesForInsertionIndicatorAtTargetIndexPath:v22];

    long long v16 = (void *)v23;
  }
LABEL_20:
  if (a6 && v16) {
    *a6 = v16;
  }

  return v22;
}

- (void)_updateDropTargetAppearanceWithTargetIndexPath:(id)a3 intent:(int64_t)a4 indicatorLayoutAttributes:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  subviewManager = self->_subviewManager;
  uint64_t v13 = MEMORY[0x1E4F143A8];
  uint64_t v14 = 3221225472;
  int v15 = __100__UICollectionView__updateDropTargetAppearanceWithTargetIndexPath_intent_indicatorLayoutAttributes___block_invoke;
  long long v16 = &unk_1E52E5CA8;
  id v11 = v8;
  id v17 = v11;
  int64_t v18 = a4;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)&v13);
  }
  uint64_t v12 = -[_UICollectionViewDragAndDropController indexPathForOriginalReorderedItem]((uint64_t)self->_dragAndDropController);
  if (v11 && a4 == 1 && v9 && (objc_msgSend(v11, "isEqual:", v12, v13, v14, v15, v16, v17, v18) & 1) == 0) {
    [(UICollectionView *)self _updateReorderDestinationViewWithLayoutAttributes:v9];
  }
  else {
    [(UICollectionView *)self _removeReorderDestinationView];
  }
}

void __100__UICollectionView__updateDropTargetAppearanceWithTargetIndexPath_intent_indicatorLayoutAttributes___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (*(void *)(a1 + 32) && *(void *)(a1 + 40) == 2 && (objc_msgSend(v7, "isEqual:") & 1) != 0) {
    uint64_t v6 = 2;
  }
  else {
    uint64_t v6 = 1;
  }
  [v5 _setDropState:v6];
}

- (void)_resetDropTargetAppearance
{
  subviewManager = self->_subviewManager;
  if (subviewManager) {
    -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)&__block_literal_global_1065);
  }
}

uint64_t __46__UICollectionView__resetDropTargetAppearance__block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 _setDropState:0];
}

- (void)horizontalIndexBar:(id)a3 selectedEntry:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  [(UICollectionView *)self setSelectedIndexTitleEntry:v6];
  if ((*(void *)&self->_collectionViewFlags & 0x20000000) != 0)
  {
    id v9 = [(UICollectionView *)self _delegateProxy];
    [v9 _collectionView:self horizontalIndexTitleBar:v10 selectedEntry:v6];
  }
  else
  {
    id v7 = [(UIView *)self traitCollection];
    if ([v7 layoutDirection] == 1) {
      uint64_t v8 = 32;
    }
    else {
      uint64_t v8 = 8;
    }

    id v9 = [v6 targetFocusedIndexPath];

    [(UICollectionView *)self scrollToItemAtIndexPath:v9 atScrollPosition:v8 animated:1];
  }
}

- (id)_performShadowUpdates:(id)a3
{
  id v5 = a3;
  if (!v5)
  {
    int64_t v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2, self, @"UICollectionView.m", 16835, @"Invalid parameter not satisfying: %@", @"updates != NULL" object file lineNumber description];
  }
  id v6 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController shadowUpdates];
  uint64_t v7 = [v6 count];

  unint64_t v8 = *((void *)&self->_collectionViewFlags + 1);
  *((void *)&self->_collectionViewFlags + 1) = v8 | 0x100000000000000;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = __42__UICollectionView__performShadowUpdates___block_invoke;
  v19[3] = &unk_1E52DA040;
  id v9 = v5;
  id v20 = v9;
  [(UICollectionView *)self _performInternalBatchUpdates:v19];
  *((void *)&self->_collectionViewFlags + 1) = *((void *)&self->_collectionViewFlags + 1) & 0xFEFFFFFFFFFFFFFFLL | ((HIBYTE(v8) & 1) << 56);
  id v10 = (void *)MEMORY[0x1E4F28E60];
  id v11 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController shadowUpdates];
  uint64_t v12 = objc_msgSend(v10, "indexSetWithIndexesInRange:", 0, objc_msgSend(v11, "count"));

  objc_msgSend(v12, "removeIndexesInRange:", 0, v7);
  if ([v12 firstIndex] == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4F1CBF0];
  }
  else
  {
    uint64_t v14 = [v12 firstIndex];
    uint64_t v15 = [v12 count];
    long long v16 = [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController shadowUpdates];
    uint64_t v13 = objc_msgSend(v16, "subarrayWithRange:", v14, v15);
  }
  return v13;
}

uint64_t __42__UICollectionView__performShadowUpdates___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

- (id)_diffableIdentifierForIndexPath:(id)a3
{
  id v4 = a3;
  if (v4 && [(UICollectionView *)self _isConnectedToDiffableDataSource])
  {
    id v5 = [(UICollectionView *)self _diffableDataSourceImpl];
    id v6 = v5;
    if (v5)
    {
      uint64_t v7 = [v5 itemIdentifierForIndexPath:v4];
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

- (int64_t)presentationSectionIndexForDataSourceSectionIndex:(int64_t)a3
{
  return [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController sectionIndexAfterShadowUpdates:a3];
}

- (int64_t)dataSourceSectionIndexForPresentationSectionIndex:(int64_t)a3
{
  return [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController sectionIndexBeforeShadowUpdates:a3];
}

- (id)dataSourceIndexPathForPresentationIndexPath:(id)a3
{
  return [(_UICollectionViewShadowUpdatesController *)self->_dragAndDropController indexPathBeforeShadowUpdates:a3];
}

- (void)performUsingPresentationValues:(id)a3
{
}

- (BOOL)_isOperatingWithPresentationValues
{
  return self->_performUsingPresentationValuesRefCount > 0;
}

- (id)_translateDataSourceIndexPathsToPresentationIndexPathsAsNeeded:(id)a3
{
  id v4 = a3;
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)
    && ![(UICollectionView *)self _isOperatingWithPresentationValues])
  {
    id v5 = [(UICollectionView *)self _indexPathsAfterShadowUpdatesForIndexPaths:v4];
  }
  else
  {
    id v5 = v4;
  }
  id v6 = v5;

  return v6;
}

- (id)_dragDelegateProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_dragDelegate);
  }
  return WeakRetained;
}

- (id)_dropDelegateProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_dropDelegate);
  }
  return WeakRetained;
}

- (id)_dragDelegateActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDelegate);
  return WeakRetained;
}

- (id)_dropDelegateActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dropDelegate);
  return WeakRetained;
}

- (id)_dragSourceDelegateProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_dragSourceDelegate);
  }
  return WeakRetained;
}

- (id)_dragDestinationDelegateProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_dragDestinationDelegate);
  }
  return WeakRetained;
}

- (id)_dragSourceDelegateActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragSourceDelegate);
  return WeakRetained;
}

- (id)_dragDestinationDelegateActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_dragDestinationDelegate);
  return WeakRetained;
}

- (BOOL)_shouldSpringLoadItemAtIndexPath:(id)a3 withContext:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  unint64_t v8 = [(UICollectionView *)self _delegateActual];
  char v9 = objc_opt_respondsToSelector();

  if (v9)
  {
    id v10 = [(UICollectionView *)self _delegateProxy];
    char v11 = [v10 collectionView:self shouldSpringLoadItemAtIndexPath:v6 withContext:v7];
  }
  else
  {
    uint64_t v12 = [(UICollectionView *)self _delegateActual];
    char v13 = objc_opt_respondsToSelector();

    if ((v13 & 1) == 0)
    {
      BOOL v14 = 1;
      goto LABEL_7;
    }
    id v10 = [(UICollectionView *)self _delegateProxy];
    char v11 = [v10 _collectionView:self shouldSpringLoadItemAtIndexPath:v6 withContext:v7];
  }
  BOOL v14 = v11;

LABEL_7:
  return v14;
}

- (void)_unhighlightSpringLoadedItem
{
  highlightedSpringLoadedIteuint64_t m = self->_highlightedSpringLoadedItem;
  if (highlightedSpringLoadedItem)
  {
    [(UICollectionView *)self _unhighlightItemAtIndexPath:highlightedSpringLoadedItem animated:0];
    id v4 = self->_highlightedSpringLoadedItem;
    self->_highlightedSpringLoadedIteuint64_t m = 0;
  }
}

- (void)_highlightSpringLoadedItemAtIndexPath:(id)a3
{
  id v5 = a3;
  if (v5)
  {
    id v6 = v5;
    [(UICollectionView *)self _highlightItemAtIndexPath:v5 animated:0 scrollPosition:0];
    objc_storeStrong((id *)&self->_highlightedSpringLoadedItem, a3);
    id v5 = v6;
  }
}

- (void)_performUpdate:(id)a3
{
  v22[1] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  id v6 = v5;
  if (v5 && v5[6] == 0x7FFFFFFFFFFFFFFFLL)
  {
    long long v16 = [MEMORY[0x1E4F28B00] currentHandler];
    [v16 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:17078 description:@"Section operations are not supported for this IPI"];
  }
  id v7 = -[UICollectionViewUpdateItem _indexPath](v6);
  unint64_t v8 = [v6 indexPathBeforeUpdate];
  char v9 = [v6 indexPathAfterUpdate];
  if (![v6 updateAction])
  {
    if (!v7)
    {
      id v17 = [MEMORY[0x1E4F28B00] currentHandler];
      [v17 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:17085 description:@"Original indexPath is nil. This is bad."];
    }
    id v10 = -[UICollectionViewUpdateItem _indexPath](v6);
    v22[0] = v10;
    char v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
    uint64_t v12 = self;
    char v13 = v11;
    uint64_t v14 = 0;
    goto LABEL_12;
  }
  if ([v6 updateAction] != 1)
  {
    if ([v6 updateAction] != 3)
    {
      uint64_t v15 = [MEMORY[0x1E4F28B00] currentHandler];
      [v15 handleFailureInMethod:a2, self, @"UICollectionView.m", 17098, @"%s: Unhandled update item action for update: %@", "-[UICollectionView _performUpdate:]", v6 object file lineNumber description];

      goto LABEL_13;
    }
    if (v8)
    {
      if (v9)
      {
LABEL_17:
        [(UICollectionView *)self _moveItemAtIndexPath:v8 toIndexPath:v9];
        goto LABEL_13;
      }
    }
    else
    {
      double v19 = [MEMORY[0x1E4F28B00] currentHandler];
      [v19 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:17093 description:@"indexPathBeforeUpdate is nil. This is bad."];

      if (v9) {
        goto LABEL_17;
      }
    }
    id v20 = [MEMORY[0x1E4F28B00] currentHandler];
    [v20 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:17094 description:@"indexPathAfterUpdate is nil. This is bad."];

    goto LABEL_17;
  }
  if (!v7)
  {
    int64_t v18 = [MEMORY[0x1E4F28B00] currentHandler];
    [v18 handleFailureInMethod:a2 object:self file:@"UICollectionView.m" lineNumber:17089 description:@"Original indexPath is nil. This is bad."];
  }
  id v10 = -[UICollectionViewUpdateItem _indexPath](v6);
  id v21 = v10;
  char v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v21 count:1];
  uint64_t v12 = self;
  char v13 = v11;
  uint64_t v14 = 1;
LABEL_12:
  [(UICollectionView *)v12 _updateRowsAtIndexPaths:v13 updateAction:v14];

LABEL_13:
}

- (void)_purgeReuseQueues
{
  [(UICollectionView *)self _resetPrefetchState];
  -[_UICollectionViewSubviewManager enumerateAllViewsInReuseQueueWithEnumerator:]((uint64_t)self->_subviewManager, (uint64_t)&__block_literal_global_1090);
  subviewManager = self->_subviewManager;
  if (subviewManager)
  {
    reuseQueues = subviewManager->_reuseQueues;
    [(NSMutableDictionary *)reuseQueues removeAllObjects];
  }
}

uint64_t __37__UICollectionView__purgeReuseQueues__block_invoke(uint64_t a1, void *a2)
{
  return [a2 removeFromSuperview];
}

- (id)_prefetchDataSourceProxy
{
  if (-[_UICollectionViewDragAndDropController hasShadowUpdates](self->_dragAndDropController)) {
    id WeakRetained = self->_dragAndDropController;
  }
  else {
    id WeakRetained = (_UICollectionViewDragAndDropController *)objc_loadWeakRetained((id *)&self->_prefetchDataSource);
  }
  return WeakRetained;
}

- (id)_prefetchDataSourceActual
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_prefetchDataSource);
  return WeakRetained;
}

- (void)_managedSubviewAdded:(id)a3
{
  id v4 = a3;
  id v5 = self->_layout;
  id v6 = v4;
  id v11 = v6;
  if (v6 && v5)
  {
    uint64_t v7 = [v6 effectiveUserInterfaceLayoutDirection];
    if (v7 == [(UICollectionViewLayout *)v5 developmentLayoutDirection])
    {
      int v8 = [v11 _flipsHorizontalAxis];
      char v9 = v11;
      if (!v8) {
        goto LABEL_8;
      }
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = [(UICollectionViewLayout *)v5 _wantsRightToLeftHorizontalMirroringIfNeeded];
      char v9 = v11;
    }
    [v9 _setFlipsHorizontalAxis:v10];
  }
LABEL_8:
}

- (void)_performBatchUpdates:(id)a3 viewPropertyAnimator:(id)a4 customAnimationsProvider:(id)a5
{
}

- (void)_performBatchUpdates:(id)a3 customAnimationsProvider:(id)a4
{
}

- (id)_updateTranslator
{
  return self->_currentUpdate;
}

- (id)_orthogonalScrollerController
{
  return self->_orthogonalScrollerController;
}

- (int64_t)_totalItemCount
{
  collectionViewData = self->_collectionViewData;
  if (!collectionViewData) {
    return 0;
  }
  if ((*(unsigned char *)&collectionViewData->_collectionViewDataFlags & 2) == 0) {
    -[UICollectionViewData _updateItemCounts]((uint64_t)self->_collectionViewData);
  }
  return collectionViewData->_totalItemCount;
}

- (BOOL)_indexPathIsSectionAppendingIndexPath:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (!v4
    || (unint64_t)[v4 length] < 2
    || (uint64_t v6 = [v5 section], v6 == 0x7FFFFFFFFFFFFFFFLL)
    || (uint64_t v7 = v6, v6 >= -[UICollectionViewData numberOfSections]((uint64_t)self->_collectionViewData)))
  {
    BOOL v9 = 0;
  }
  else
  {
    uint64_t v8 = [v5 item];
    BOOL v9 = v8 == -[UICollectionViewData numberOfItemsInSection:]((uint64_t)self->_collectionViewData, v7);
  }

  return v9;
}

- (id)contextMenuInteraction:(id)a3 configurationForMenuAtLocation:(CGPoint)a4
{
  double y = a4.y;
  double x = a4.x;
  v38[1] = *MEMORY[0x1E4F143B8];
  if (![(UICollectionView *)self _delegateSupportsMenuInteraction]
    || ![(UICollectionViewLayout *)self->_layout _allowsItemInteractionsToBegin])
  {
    char v13 = 0;
    goto LABEL_38;
  }
  uint64_t v7 = *(void *)&self->_collectionViewFlags & 0x80100000000;
  uint64_t v8 = -[UICollectionView indexPathForItemAtPoint:](self, "indexPathForItemAtPoint:", x, y);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __74__UICollectionView_contextMenuInteraction_configurationForMenuAtLocation___block_invoke;
  aBlock[3] = &unk_1E52E5CF0;
  void aBlock[4] = self;
  *(double *)&void aBlock[5] = x;
  *(double *)&aBlock[6] = y;
  BOOL v9 = _Block_copy(aBlock);
  uint64_t v10 = (void (**)(void, void))v9;
  if (v8)
  {
    if (!-[UICollectionView _cellAtIndexPath:containsInteractiveControlAtPoint:](self, "_cellAtIndexPath:containsInteractiveControlAtPoint:", v8, x, y))
    {
      if (v7)
      {
        id v11 = [(UICollectionView *)self indexPathsForSelectedItems];
        if ([v11 containsObject:v8])
        {
          id v12 = v11;
        }
        else
        {
          v38[0] = v8;
          id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v38 count:1];
        }
        id v15 = v12;
        uint64_t v17 = ((void (**)(void, id))v10)[2](v10, v12);
        goto LABEL_23;
      }
      if ((*(void *)&self->_collectionViewFlags & 0x100000000000) != 0)
      {
        uint64_t v14 = [(UICollectionView *)self indexPathsForSelectedItems];
        if ([v14 containsObject:v8])
        {
          id v15 = v14;
          long long v16 = [(UICollectionView *)self _delegateProxy];
          char v13 = objc_msgSend(v16, "_dci_collectionView:contextMenuConfigurationForSelectedItemsAtIndexPaths:point:", self, v15, x, y);

          if (v13)
          {
LABEL_24:
            if ([v15 count])
            {
              CGFloat v31 = v10;
              int64_t v18 = [MEMORY[0x1E4F1CA80] set];
              long long v32 = 0u;
              long long v33 = 0u;
              long long v34 = 0u;
              long long v35 = 0u;
              id v30 = v15;
              id v19 = v15;
              uint64_t v20 = [v19 countByEnumeratingWithState:&v32 objects:v37 count:16];
              if (v20)
              {
                uint64_t v21 = v20;
                uint64_t v22 = *(void *)v33;
                do
                {
                  for (uint64_t i = 0; i != v21; ++i)
                  {
                    if (*(void *)v33 != v22) {
                      objc_enumerationMutation(v19);
                    }
                    CGFloat v24 = *(void **)(*((void *)&v32 + 1) + 8 * i);
                    if ((objc_msgSend(v24, "isEqual:", v8, v30) & 1) == 0)
                    {
                      CGFloat v25 = [(UICollectionView *)self _identityTracker:1];
                      CGFloat v26 = -[_UIIndexPathIdentityTracker identifierForIndexPath:]((uint64_t)v25, v24);
                      [v18 addObject:v26];
                    }
                  }
                  uint64_t v21 = [v19 countByEnumeratingWithState:&v32 objects:v37 count:16];
                }
                while (v21);
              }

              objc_msgSend(v13, "set_internalSecondaryItemIdentifiers:", v18);
              id v15 = v30;
              uint64_t v10 = v31;
            }
            CGFloat v27 = -[UICollectionView _identityTracker:](self, "_identityTracker:", 1, v30);
            CGFloat v28 = -[_UIIndexPathIdentityTracker identifierForIndexPath:]((uint64_t)v27, v8);
            objc_msgSend(v13, "set_internalIdentifier:", v28);

            goto LABEL_36;
          }
          goto LABEL_20;
        }
      }
      id v15 = 0;
LABEL_20:
      if ((*(void *)&self->_collectionViewFlags & 0x800000000) == 0)
      {
        char v13 = 0;
        goto LABEL_36;
      }
      id v11 = [(UICollectionView *)self _delegateProxy];
      uint64_t v17 = objc_msgSend(v11, "collectionView:contextMenuConfigurationForItemAtIndexPath:point:", self, v8, x, y);
LABEL_23:
      char v13 = (void *)v17;

      if (v13) {
        goto LABEL_24;
      }
LABEL_36:

      goto LABEL_37;
    }
    goto LABEL_11;
  }
  if (!v7)
  {
LABEL_11:
    char v13 = 0;
    goto LABEL_37;
  }
  char v13 = (*((void (**)(void *, void))v9 + 2))(v9, MEMORY[0x1E4F1CBF0]);
  objc_msgSend(v13, "set_internalIdentifier:", @"com.apple.UIKit.UICollectionView.backgroundMenu");
LABEL_37:

LABEL_38:
  return v13;
}

id __74__UICollectionView_contextMenuInteraction_configurationForMenuAtLocation___block_invoke(double *a1, void *a2)
{
  uint64_t v3 = (void *)*((void *)a1 + 4);
  uint64_t v4 = v3[329];
  id v5 = a2;
  uint64_t v6 = [v3 _delegateProxy];
  uint64_t v7 = v6;
  uint64_t v8 = *((void *)a1 + 4);
  double v9 = a1[5];
  double v10 = a1[6];
  if ((v4 & 0x100000000) != 0) {
    objc_msgSend(v6, "collectionView:contextMenuConfigurationForItemsAtIndexPaths:point:", v8, v5, v9, v10);
  }
  else {
  id v11 = objc_msgSend(v6, "_dci_collectionView:contextMenuConfigurationForItemsAtIndexPaths:point:", v8, v5, v9, v10);
  }

  return v11;
}

- (BOOL)_cellAtIndexPath:(id)a3 containsInteractiveControlAtPoint:(CGPoint)a4
{
  double y = a4.y;
  double x = a4.x;
  uint64_t v7 = [(UICollectionView *)self cellForItemAtIndexPath:a3];
  -[UIView convertPoint:toView:](self, "convertPoint:toView:", v7, x, y);
  uint64_t v8 = objc_msgSend(v7, "hitTest:withEvent:", 0);
  objc_opt_class();
  BOOL v9 = 0;
  if (v8 && v8 != v7)
  {
    while (![v8 isUserInteractionEnabled] || (objc_opt_isKindOfClass() & 1) == 0)
    {
      double v10 = [v8 superview];

      BOOL v9 = 0;
      if (v10)
      {
        uint64_t v8 = v10;
        if (v10 != v7) {
          continue;
        }
      }
      goto LABEL_10;
    }
    BOOL v9 = 1;
  }
  double v10 = v8;
LABEL_10:

  return v9;
}

- (id)_defaultTargetedPreviewForIdentifier:(id)a3
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  if (!v4)
  {
    id v11 = 0;
    goto LABEL_15;
  }
  id v5 = [(UICollectionView *)self _existingIndexPathForIdentityTrackerIdentifier:v4];
  if (v5)
  {
    uint64_t v6 = [(UICollectionView *)self indexPathsForVisibleItems];
    int v7 = [v6 containsObject:v5];

    if (v7)
    {
      uint64_t v8 = [(UICollectionView *)self cellForItemAtIndexPath:v5];
      BOOL v9 = v8;
      if (v8)
      {
        double v10 = [v8 window];

        if (v10)
        {
          id v11 = _UITargetedPreviewForContextMenuFromCell(v9);
LABEL_13:

          goto LABEL_14;
        }
        if (os_variant_has_internal_diagnostics())
        {
          long long v16 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
          {
            int v17 = 138412802;
            int64_t v18 = v9;
            __int16 v19 = 2112;
            uint64_t v20 = v5;
            __int16 v21 = 2112;
            id v22 = v4;
            _os_log_fault_impl(&dword_1853B0000, v16, OS_LOG_TYPE_FAULT, "Cell (%@) at indexPath (%@) with identifier (%@) is not in a window. Was the collection view removed from its window?", (uint8_t *)&v17, 0x20u);
          }
        }
        else
        {
          id v12 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_defaultTargetedPreviewForIdentifier____s_category)+ 8);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          {
            int v17 = 138412802;
            int64_t v18 = v9;
            __int16 v19 = 2112;
            uint64_t v20 = v5;
            __int16 v21 = 2112;
            id v22 = v4;
            _os_log_impl(&dword_1853B0000, v12, OS_LOG_TYPE_ERROR, "Cell (%@) at indexPath (%@) with identifier (%@) is not in a window. Was the collection view removed from its window?", (uint8_t *)&v17, 0x20u);
          }
        }
      }
      id v11 = 0;
      goto LABEL_13;
    }
  }
  id v11 = 0;
LABEL_14:

LABEL_15:
  char v13 = +[UIColor clearColor];
  uint64_t v14 = [v11 parameters];
  [v14 setBackgroundColor:v13];

  objc_msgSend(v11, "set_captureHierarchyBelowSourceView:", 1);
  return v11;
}

- (id)_targetedPreviewForBackgroundMenuAtPoint:(CGPoint)a3
{
  uint64_t v3 = -[UIPreviewTarget initWithContainer:center:]([UIPreviewTarget alloc], "initWithContainer:center:", self, a3.x, a3.y);
  id v4 = [UITargetedPreview alloc];
  id v5 = objc_opt_new();
  uint64_t v6 = objc_opt_new();
  int v7 = [(UITargetedPreview *)v4 initWithView:v5 parameters:v6 target:v3];

  return v7;
}

- (id)contextMenuInteraction:(id)a3 configuration:(id)a4 highlightPreviewForItemWithIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([v9 _isCollectionViewBackgroundMenu])
  {
    [v8 locationInView:self];
    id v11 = -[UICollectionView _targetedPreviewForBackgroundMenuAtPoint:](self, "_targetedPreviewForBackgroundMenuAtPoint:");
    goto LABEL_14;
  }
  id v12 = [(UICollectionView *)self _existingIndexPathForIdentityTrackerIdentifier:v10];
  if (v12)
  {
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    if ((collectionViewFlags & 0x200000000) != 0)
    {
      uint64_t v14 = [(UICollectionView *)self _delegateProxy];
      uint64_t v15 = [v14 collectionView:self contextMenuConfiguration:v9 highlightPreviewForItemAtIndexPath:v12];
    }
    else if ((collectionViewFlags & 0x200000000000) != 0)
    {
      uint64_t v14 = [(UICollectionView *)self _delegateProxy];
      uint64_t v15 = objc_msgSend(v14, "_dci_collectionView:contextMenuConfiguration:previewForHighlightingItemAtIndexPath:", self, v9, v12);
    }
    else
    {
      if ((collectionViewFlags & 0x1000000000) == 0)
      {
LABEL_12:
        id v11 = [(UICollectionView *)self _defaultTargetedPreviewForIdentifier:v10];
        goto LABEL_13;
      }
      uint64_t v14 = [(UICollectionView *)self _delegateProxy];
      uint64_t v15 = [v14 collectionView:self previewForHighlightingContextMenuWithConfiguration:v9];
    }
    id v11 = (void *)v15;

    if (!v11) {
      goto LABEL_12;
    }
  }
  else
  {
    id v11 = 0;
  }
LABEL_13:

LABEL_14:
  return v11;
}

- (id)contextMenuInteraction:(id)a3 configuration:(id)a4 dismissalPreviewForItemWithIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ([v9 _isCollectionViewBackgroundMenu])
  {
    [v8 locationInView:self];
    id v11 = -[UICollectionView _targetedPreviewForBackgroundMenuAtPoint:](self, "_targetedPreviewForBackgroundMenuAtPoint:");
    goto LABEL_15;
  }
  id v12 = [(UICollectionView *)self _existingIndexPathForIdentityTrackerIdentifier:v10];
  if (!v12
    || ([(UICollectionView *)self indexPathsForVisibleItems],
        char v13 = objc_claimAutoreleasedReturnValue(),
        int v14 = [v13 containsObject:v12],
        v13,
        !v14))
  {
LABEL_13:
    id v11 = 0;
    goto LABEL_14;
  }
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  if ((collectionViewFlags & 0x400000000) != 0)
  {
    long long v16 = [(UICollectionView *)self _delegateProxy];
    uint64_t v17 = [v16 collectionView:self contextMenuConfiguration:v9 dismissalPreviewForItemAtIndexPath:v12];
  }
  else if ((collectionViewFlags & 0x400000000000) != 0)
  {
    long long v16 = [(UICollectionView *)self _delegateProxy];
    uint64_t v17 = objc_msgSend(v16, "_dci_collectionView:contextMenuConfiguration:previewForDismissingToItemAtIndexPath:", self, v9, v12);
  }
  else
  {
    if ((collectionViewFlags & 0x2000000000) == 0) {
      goto LABEL_12;
    }
    long long v16 = [(UICollectionView *)self _delegateProxy];
    uint64_t v17 = [v16 collectionView:self previewForDismissingContextMenuWithConfiguration:v9];
  }
  id v11 = (void *)v17;

  if (!v11)
  {
LABEL_12:
    if (![(UICollectionView *)self _isReordering])
    {
      id v11 = [(UICollectionView *)self _defaultTargetedPreviewForIdentifier:v10];
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_14:

LABEL_15:
  return v11;
}

- (void)contextMenuInteraction:(id)a3 willPerformPreviewActionForMenuWithConfiguration:(id)a4 animator:(id)a5
{
  if ((*(void *)&self->_collectionViewFlags & 0x4000000000) != 0)
  {
    id v7 = a5;
    id v8 = a4;
    id v9 = [(UICollectionView *)self _delegateProxy];
    [v9 collectionView:self willPerformPreviewActionForMenuWithConfiguration:v8 animator:v7];
  }
}

- (void)contextMenuInteraction:(id)a3 willDisplayMenuForConfiguration:(id)a4 animator:(id)a5
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  if ((*(void *)&self->_collectionViewFlags & 0x8000000000) != 0)
  {
    id v11 = [(UICollectionView *)self _delegateProxy];
    [v11 collectionView:self willDisplayContextMenuWithConfiguration:v9 animator:v10];
  }
  id v12 = [v9 _internalSecondaryItemIdentifiers];
  uint64_t v13 = [v12 count];

  if (v13)
  {
    id v26 = v8;
    int v14 = objc_opt_new();
    uint64_t v15 = [v9 _internalIdentifier];
    long long v16 = [(UICollectionView *)self _existingIndexPathForIdentityTrackerIdentifier:v15];

    if (v16) {
      [v14 addObject:v16];
    }
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v17 = [v9 _internalSecondaryItemIdentifiers];
    uint64_t v18 = [v17 countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v30;
      do
      {
        for (uint64_t i = 0; i != v19; ++i)
        {
          if (*(void *)v30 != v20) {
            objc_enumerationMutation(v17);
          }
          id v22 = [(UICollectionView *)self _existingIndexPathForIdentityTrackerIdentifier:*(void *)(*((void *)&v29 + 1) + 8 * i)];
          if (v22) {
            [v14 addObject:v22];
          }
        }
        uint64_t v19 = [v17 countByEnumeratingWithState:&v29 objects:v33 count:16];
      }
      while (v19);
    }

    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __84__UICollectionView_contextMenuInteraction_willDisplayMenuForConfiguration_animator___block_invoke;
    aBlock[3] = &unk_1E52D9F98;
    void aBlock[4] = self;
    id v28 = v14;
    id v23 = v14;
    CGFloat v24 = _Block_copy(aBlock);
    CGFloat v25 = v24;
    if (v10) {
      [v10 addAnimations:v24];
    }
    else {
      (*((void (**)(void *))v24 + 2))(v24);
    }
    id v8 = v26;
  }
}

void __84__UICollectionView_contextMenuInteraction_willDisplayMenuForConfiguration_animator___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _focusSystem];
  [v2 setNeedsFocusUpdate];
  [v2 updateFocusIfNeeded];
  [*(id *)(a1 + 32) _updateContextMenuStateForVisibleCells:*(void *)(a1 + 40)];
}

- (void)contextMenuInteraction:(id)a3 willEndForConfiguration:(id)a4 animator:(id)a5
{
  id v7 = a4;
  id v8 = a5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __76__UICollectionView_contextMenuInteraction_willEndForConfiguration_animator___block_invoke;
  aBlock[3] = &unk_1E52D9F70;
  void aBlock[4] = self;
  id v9 = _Block_copy(aBlock);
  id v10 = v9;
  if (v8) {
    [v8 addAnimations:v9];
  }
  else {
    (*((void (**)(void *))v9 + 2))(v9);
  }
  if ((*(void *)&self->_collectionViewFlags & 0x10000000000) != 0)
  {
    id v11 = [(UICollectionView *)self _delegateProxy];
    [v11 collectionView:self willEndContextMenuInteractionWithConfiguration:v7 animator:v8];
  }
}

void __76__UICollectionView_contextMenuInteraction_willEndForConfiguration_animator___block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _focusSystem];
  [v2 setNeedsFocusUpdate];
  [v2 updateFocusIfNeeded];
  [*(id *)(a1 + 32) _updateContextMenuStateForVisibleCells:0];
}

- (void)_updateContextMenuStateForVisibleCells:(id)a3
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke;
  aBlock[3] = &unk_1E52E5D18;
  void aBlock[4] = self;
  id v5 = _Block_copy(aBlock);
  if ([v4 count])
  {
    uint64_t v6 = objc_opt_new();
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v7 = v4;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v28 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v22;
      do
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v22 != v10) {
            objc_enumerationMutation(v7);
          }
          objc_msgSend(v6, "addIndex:", -[UICollectionViewData globalIndexForItemAtIndexPath:]((uint64_t)self->_collectionViewData, *(void **)(*((void *)&v21 + 1) + 8 * v11++)));
        }
        while (v9 != v11);
        uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v28 count:16];
      }
      while (v9);
    }

    subviewManager = self->_subviewManager;
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    v18[2] = __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke_3;
    v18[3] = &unk_1E52E5D40;
    v18[4] = self;
    id v19 = v6;
    uint64_t v20 = v5;
    id v13 = v5;
    id v14 = v6;
    uint64_t v15 = v13;
    if (subviewManager)
    {
      -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)subviewManager->_visibleViews, (uint64_t)v18);
      uint64_t v15 = v20;
    }
  }
  else
  {
    long long v16 = self->_subviewManager;
    v25[0] = MEMORY[0x1E4F143A8];
    v25[1] = 3221225472;
    v25[2] = __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke_2;
    v25[3] = &unk_1E52E5EE0;
    id v26 = v5;
    id v17 = v5;
    id v14 = v17;
    if (v16)
    {
      -[_UICollectionViewSubviewCollection enumerateCellsWithEnumerator:]((uint64_t)v16->_visibleViews, (uint64_t)v25);
      id v13 = v26;
    }
    else
    {
      id v13 = v17;
    }
  }
}

void __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (_UICollectionViewCellContextMenuSuppressesSelectionState())
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 2888);
    if (v6) {
      uint64_t v7 = [*(id *)(v6 + 8) containsObject:v8];
    }
    else {
      uint64_t v7 = 0;
    }
    [v5 _setSelected:v7 animated:0];
  }
}

void __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  [v5 _setContextMenuGroupLocation:0];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void __59__UICollectionView__updateContextMenuStateForVisibleCells___block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v24 = a3;
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 2184);
  id v6 = a2;
  uint64_t v7 = -[UICollectionViewData globalIndexForItemAtIndexPath:](v5, v6);
  if ([*(id *)(a1 + 40) containsIndex:v7])
  {
    id v8 = [v24 _layoutAttributes];
    uint64_t v9 = -[UICollectionViewLayoutAttributes _existingListAttributes](v8);

    if (v9)
    {
      if (v7 >= 1 && [*(id *)(a1 + 40) containsIndex:v7 - 1])
      {
        uint64_t v10 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](*(unsigned char **)(*(void *)(a1 + 32) + 2184), v7 - 1);
        -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), v10);
        uint64_t v11 = (id *)objc_claimAutoreleasedReturnValue();
        id v12 = -[UICollectionViewLayoutAttributes _existingListAttributes](v11);
        if (v12)
        {
          [v11 frame];
          double MaxY = CGRectGetMaxY(v26);
          [v8 frame];
          BOOL v14 = MaxY - CGRectGetMinY(v27) + 0.0001 >= 0.0;
        }
        else
        {
          BOOL v14 = 0;
        }
      }
      else
      {
        BOOL v14 = 0;
      }
      uint64_t v16 = v7 + 1;
      if ([*(id *)(a1 + 40) containsIndex:v16])
      {
        id v17 = -[UICollectionViewData indexPathForItemAtGlobalIndex:](*(unsigned char **)(*(void *)(a1 + 32) + 2184), v16);
        -[UICollectionViewData layoutAttributesForItemAtIndexPath:](*(void *)(*(void *)(a1 + 32) + 2184), v17);
        uint64_t v18 = (id *)objc_claimAutoreleasedReturnValue();
        id v19 = -[UICollectionViewLayoutAttributes _existingListAttributes](v18);
        if (v19)
        {
          [v8 frame];
          double v20 = CGRectGetMaxY(v28);
          [v18 frame];
          BOOL v21 = v20 - CGRectGetMinY(v29) + 0.0001 >= 0.0;
        }
        else
        {
          BOOL v21 = 0;
        }

        uint64_t v23 = 3;
        if (v21 && v14) {
          uint64_t v23 = 1;
        }
        uint64_t v22 = 4;
        if (v21) {
          uint64_t v22 = 2;
        }
      }
      else
      {
        uint64_t v22 = 4;
        uint64_t v23 = 3;
      }
      if (v14) {
        uint64_t v15 = v23;
      }
      else {
        uint64_t v15 = v22;
      }
    }
    else
    {
      uint64_t v15 = 4;
    }
    [v24 _setContextMenuGroupLocation:v15];
  }
  else
  {
    [v24 _setContextMenuGroupLocation:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

- (id)_contextMenuInteraction:(id)a3 styleForMenuWithConfiguration:(id)a4
{
  uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
  id v6 = a4;
  uint64_t v7 = v6;
  if ((collectionViewFlags & 0x20000000000) != 0)
  {
    uint64_t v10 = [(UICollectionView *)self _delegateProxy];
    uint64_t v9 = [v10 _collectionView:self styleForContextMenuWithConfiguration:v7];
  }
  else
  {
    int v8 = [v6 _isCollectionViewBackgroundMenu];

    if (v8)
    {
      uint64_t v9 = +[_UIContextMenuStyle defaultStyle];
      [v9 setPreferredLayout:3];
    }
    else
    {
      uint64_t v9 = 0;
    }
  }
  return v9;
}

- (id)_contextMenuInteraction:(id)a3 accessoriesForMenuWithConfiguration:(id)a4
{
  if ((*(void *)&self->_collectionViewFlags & 0x40000000000) != 0)
  {
    id v6 = a4;
    uint64_t v7 = [(UICollectionView *)self _delegateProxy];
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    id v4 = [v7 _collectionView:self accessoriesForContextMenuWithConfiguration:v6 layoutAnchor:v9];
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

- (id)_existingIndexPathForIdentityTrackerIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = [(UICollectionView *)self _identityTracker:0];
  id v6 = -[_UIIndexPathIdentityTracker currentIndexPathForIdentifier:]((uint64_t)v5, (uint64_t)v4);

  return v6;
}

id __64__UICollectionView__configureSceneActivationInteractionIfNeeded__block_invoke(uint64_t a1, double a2, double a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = objc_msgSend(WeakRetained, "_sceneActivationConfigurationForLocation:", a2, a3);

  return v6;
}

- (id)_sceneActivationConfigurationForLocation:(CGPoint)a3
{
  double y = a3.y;
  double x = a3.x;
  if (![(UICollectionViewLayout *)self->_layout _allowsItemInteractionsToBegin])
  {
    uint64_t v9 = 0;
    goto LABEL_17;
  }
  id v6 = -[UICollectionView indexPathForItemAtPoint:](self, "indexPathForItemAtPoint:", x, y);
  if (v6)
  {
    uint64_t collectionViewFlags = (uint64_t)self->_collectionViewFlags;
    if ((collectionViewFlags & 0x800000000000) != 0)
    {
      uint64_t v10 = [(UICollectionView *)self _delegateProxy];
      uint64_t v11 = objc_msgSend(v10, "collectionView:sceneActivationConfigurationForItemAtIndexPath:point:", self, v6, x, y);
    }
    else
    {
      if ((collectionViewFlags & 0x1000000000000) == 0)
      {
        id v8 = 0;
        goto LABEL_14;
      }
      uint64_t v10 = [(UICollectionView *)self _delegateProxy];
      uint64_t v11 = objc_msgSend(v10, "_collectionView:sceneActivationConfigurationForItemAtIndexPath:point:", self, v6, x, y);
    }
    id v8 = (id)v11;

    if (v8)
    {
      id v12 = [v8 preview];

      if (!v12)
      {
        id v13 = [(UICollectionView *)self cellForItemAtIndexPath:v6];
        BOOL v14 = [v13 window];

        if (!v14)
        {

          uint64_t v9 = 0;
          goto LABEL_15;
        }
        uint64_t v15 = _UITargetedPreviewForContextMenuFromCell(v13);
        [v8 setPreview:v15];
      }
    }
LABEL_14:
    id v8 = v8;
    uint64_t v9 = v8;
LABEL_15:

    goto LABEL_16;
  }
  uint64_t v9 = 0;
LABEL_16:

LABEL_17:
  return v9;
}

- (id)valueForUndefinedKey:(id)a3
{
  id v4 = a3;
  if ([v4 isEqualToString:@"_cellReuseQueues"])
  {
    UIKVCAccessProhibited((uint64_t)v4, @"UICollectionView");

    uint64_t v5 = (void *)MEMORY[0x1E4F1CC08];
  }
  else
  {
    v7.receiver = self;
    v7.super_class = (Class)UICollectionView;
    uint64_t v5 = [(UICollectionView *)&v7 valueForUndefinedKey:v4];
  }
  return v5;
}

- (UITouch)_currentTouch
{
  return self->_currentTouch;
}

- (void)_setCurrentTouch:(id)a3
{
}

- (UICollectionViewReorderingCadence)reorderingCadence
{
  return self->_reorderingCadence;
}

- (void)setReorderingCadence:(UICollectionViewReorderingCadence)reorderingCadence
{
  self->_reorderingCadence = reorderingCadence;
}

- (_UICollectionViewFocusedItemState)_rememberedFocusedItemState
{
  return self->_rememberedFocusedItemState;
}

- (_UIFocusFastScrollingIndexBarEntry)selectedIndexTitleEntry
{
  return self->_selectedIndexTitleEntry;
}

- (void)setSelectedIndexTitleEntry:(id)a3
{
}

- (BOOL)_searchFullPageOnFocusUpdate
{
  return self->_searchFullPageOnFocusUpdate;
}

- (void)_setSearchFullPageOnFocusUpdate:(BOOL)a3
{
  self->_searchFullPageOnFocusUpdate = a3;
}

- (UIEdgeInsets)_defaultLayoutMargins
{
  double top = self->_defaultLayoutMargins.top;
  double left = self->_defaultLayoutMargins.left;
  bottouint64_t m = self->_defaultLayoutMargins.bottom;
  double right = self->_defaultLayoutMargins.right;
  result.double right = right;
  result.bottouint64_t m = bottom;
  result.double left = left;
  result.double top = top;
  return result;
}

- (void)_setHorizontalIndexTitleBar:(id)a3
{
}

- (NSIndexPath)indexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar
{
  return self->_indexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar;
}

- (void)setIndexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar:(id)a3
{
}

- (BOOL)isMovingFocusFromHorizontalIndexTitleBarToContent
{
  return self->_isMovingFocusFromHorizontalIndexTitleBarToContent;
}

- (void)setIsMovingFocusFromHorizontalIndexTitleBarToContent:(BOOL)a3
{
  self->_isMovingFocusFromHorizontalIndexTitleBarToContent = a3;
}

- (_UIDragDestinationIndicatorView)_reorderDestinationView
{
  return self->_reorderDestinationView;
}

- (void)_setReorderDestinationView:(id)a3
{
}

- (void)_setIndexOverlayManager:(id)a3
{
}

- (id)_navigationCompletion
{
  return self->_navigationCompletion;
}

- (void)_setNavigationCompletion:(id)a3
{
}

- (UIFocusContainerGuide)_endOfContentFocusContainerGuide
{
  return self->_endOfContentFocusContainerGuide;
}

- (void)_setCurrentPromiseFulfillmentCell:(id)a3
{
}

- (void)setExpectedDiffableUpdateItem:(id)a3
{
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_debugger, 0);
  objc_storeStrong((id *)&self->_expectedDiffableUpdateItem, 0);
  objc_storeStrong((id *)&self->_currentPromiseFulfillmentCell, 0);
  objc_storeStrong((id *)&self->_endOfContentFocusContainerGuide, 0);
  objc_storeStrong(&self->_navigationCompletion, 0);
  objc_storeStrong((id *)&self->_indexOverlayManager, 0);
  objc_storeStrong((id *)&self->_reorderDestinationView, 0);
  objc_storeStrong((id *)&self->_indexPathOfFocusedCellBeforeFocusingOnHorizontalIndexTitleBar, 0);
  objc_storeStrong((id *)&self->_horizontalIndexTitleBar, 0);
  objc_storeStrong((id *)&self->_selectedIndexTitleEntry, 0);
  objc_storeStrong((id *)&self->_rememberedFocusedItemState, 0);
  objc_storeStrong((id *)&self->_focusedItemState, 0);
  objc_storeStrong(&self->_reloadDataCompletionBlock, 0);
  objc_storeStrong((id *)&self->_targetFocusedItemState, 0);
  objc_storeStrong((id *)&self->_indexBarSectionIndexTitles, 0);
  objc_storeStrong((id *)&self->_indexBar, 0);
  objc_storeStrong((id *)&self->_viewsOptedOutOfBeingParentedIntoContainers, 0);
  objc_storeStrong((id *)&self->_selectionInteraction, 0);
  objc_storeStrong((id *)&self->_sceneActivationInteraction, 0);
  objc_storeStrong((id *)&self->_contextMenuInteraction, 0);
  objc_storeStrong((id *)&self->_sectionContainersQueuedForRemoval, 0);
  objc_storeStrong((id *)&self->_sectionToContainerViewMap, 0);
  objc_storeStrong((id *)&self->_scrollingTargetIndexPath, 0);
  objc_storeStrong((id *)&self->_contentOffsetRestorationAnchor, 0);
  objc_storeStrong((id *)&self->_subviewRouter, 0);
  objc_storeStrong((id *)&self->_subviewManager, 0);
  objc_storeStrong((id *)&self->_selectionController, 0);
  objc_storeStrong((id *)&self->_multiSelectController, 0);
  objc_storeStrong((id *)&self->_sectionFocusGuideController, 0);
  objc_storeStrong((id *)&self->_orthogonalScrollerController, 0);
  objc_storeStrong((id *)&self->_highlightedSpringLoadedItem, 0);
  objc_destroyWeak((id *)&self->_dragSourceDelegate);
  objc_destroyWeak((id *)&self->_dragDestinationDelegate);
  objc_destroyWeak((id *)&self->_dropDelegate);
  objc_destroyWeak((id *)&self->_dragDelegate);
  objc_storeStrong((id *)&self->_dragAndDropController, 0);
  objc_destroyWeak((id *)&self->_containerScrollView);
  objc_destroyWeak((id *)&self->_prefetchDataSource);
  objc_storeStrong((id *)&self->_prefetchVelocityIntegrator, 0);
  objc_storeStrong((id *)&self->_prefetchCacheItems, 0);
  objc_storeStrong((id *)&self->_activeOrthogonalPrefetchingContext, 0);
  objc_storeStrong((id *)&self->_orthogonalSectionPrefetchingContexts, 0);
  objc_storeStrong((id *)&self->_mainPrefetchingContext, 0);
  objc_storeStrong((id *)&self->_intrinsicContentSizeInvalidationContext, 0);
  objc_storeStrong((id *)&self->_reconfigureAnimator, 0);
  objc_storeStrong((id *)&self->_indexPathBeingReconfigured, 0);
  objc_storeStrong((id *)&self->_cellBeingReconfigured, 0);
  objc_storeStrong((id *)&self->_cancellingToIndexPath, 0);
  objc_storeStrong((id *)&self->_contentFocusContainerGuide, 0);
  objc_storeStrong(&self->_invalidationBlock, 0);
  objc_storeStrong((id *)&self->_indexPathsRequiringPreferredAttributes, 0);
  objc_storeStrong((id *)&self->_invalidatedDecorationIndexPaths, 0);
  objc_storeStrong((id *)&self->_invalidatedSupplementaryIndexPaths, 0);
  objc_storeStrong((id *)&self->_invalidatedItemIndexPaths, 0);
  objc_storeStrong((id *)&self->_trackedValuesKeys, 0);
  objc_storeStrong((id *)&self->_interactiveTransitionValueTrackingDict, 0);
  objc_storeStrong((id *)&self->_reorderFeedbackGenerator, 0);
  objc_storeStrong((id *)&self->_nextLayoutForInteractiveTranstion, 0);
  objc_storeStrong((id *)&self->_endInteractiveTransitionAnimationGroup, 0);
  objc_storeStrong(&self->_interactiveCompletionHandler, 0);
  objc_storeStrong((id *)&self->_interactiveTransitionInfos, 0);
  objc_storeStrong((id *)&self->_transitionLayoutAttributes, 0);
  objc_storeStrong((id *)&self->_supplementaryViewRegisteredKinds, 0);
  objc_storeStrong((id *)&self->_supplementaryViewNibExternalObjectsTables, 0);
  objc_storeStrong((id *)&self->_cellNibExternalObjectsTables, 0);
  objc_storeStrong((id *)&self->_supplementaryViewNibDict, 0);
  objc_storeStrong((id *)&self->_supplementaryViewClassDict, 0);
  objc_storeStrong((id *)&self->_cellNibDict, 0);
  objc_storeStrong((id *)&self->_cellClassDict, 0);
  objc_storeStrong(&self->_postUpdateBlock, 0);
  objc_storeStrong(&self->_updateCompletionHandler, 0);
  objc_storeStrong((id *)&self->_currentTouch, 0);
  objc_storeStrong((id *)&self->_originalDeleteItems, 0);
  objc_storeStrong((id *)&self->_originalInsertItems, 0);
  objc_storeStrong((id *)&self->_moveItems, 0);
  objc_storeStrong((id *)&self->_reloadItems, 0);
  objc_storeStrong((id *)&self->_deleteItems, 0);
  objc_storeStrong((id *)&self->_insertItems, 0);
  objc_storeStrong((id *)&self->_identityTracker, 0);
  objc_storeStrong((id *)&self->_currentUpdate, 0);
  objc_storeStrong((id *)&self->_collectionViewData, 0);
  objc_storeStrong((id *)&self->_pendingDeselectionIndexPaths, 0);
  objc_storeStrong((id *)&self->_pendingSelectionIndexPath, 0);
  objc_storeStrong((id *)&self->_clonedDecorationViewsDict, 0);
  objc_storeStrong((id *)&self->_clonedSupplementaryViewsDict, 0);
  objc_storeStrong((id *)&self->_clonedCellsDict, 0);
  objc_storeStrong((id *)&self->_firstResponderIndexPath, 0);
  objc_storeStrong((id *)&self->_firstResponderViewKind, 0);
  objc_storeStrong((id *)&self->_newContentView, 0);
  objc_storeStrong((id *)&self->_firstResponderView, 0);
  objc_storeStrong((id *)&self->_backgroundView, 0);
  objc_destroyWeak((id *)&self->_dataSource);
  objc_storeStrong((id *)&self->_layout, 0);
}

@end