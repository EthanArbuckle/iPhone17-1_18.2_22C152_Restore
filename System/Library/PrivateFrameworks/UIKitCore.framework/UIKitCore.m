id getAFAnalyticsClass()
{
  void *v0;
  id v1;
  void v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAFAnalyticsClass_softClass;
  v7 = getAFAnalyticsClass_softClass;
  if (!getAFAnalyticsClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAFAnalyticsClass_block_invoke_0;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getAFAnalyticsClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B3F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAFDictationConnectionClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getAFDictationConnectionClass_softClass;
  uint64_t v7 = getAFDictationConnectionClass_softClass;
  if (!getAFDictationConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAFDictationConnectionClass_block_invoke;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getAFDictationConnectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B4074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAFPreferencesClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getAFPreferencesClass_softClass;
  uint64_t v7 = getAFPreferencesClass_softClass;
  if (!getAFPreferencesClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAFPreferencesClass_block_invoke;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getAFPreferencesClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B4158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAFPreferencesClass_0()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getAFPreferencesClass_softClass_0;
  uint64_t v7 = getAFPreferencesClass_softClass_0;
  if (!getAFPreferencesClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAFPreferencesClass_block_invoke_1;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getAFPreferencesClass_block_invoke_1((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B423C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getSBSApplicationShortcutServiceClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getSBSApplicationShortcutServiceClass_softClass;
  uint64_t v7 = getSBSApplicationShortcutServiceClass_softClass;
  if (!getSBSApplicationShortcutServiceClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getSBSApplicationShortcutServiceClass_block_invoke;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getSBSApplicationShortcutServiceClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B4320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getTUIKeyboardLayoutFactoryClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_1EB2616C8;
  uint64_t v7 = qword_1EB2616C8;
  if (!qword_1EB2616C8)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getTUIKeyboardLayoutFactoryClass_block_invoke;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getTUIKeyboardLayoutFactoryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B4404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getTUIKeyboardLayoutFactoryClass_0()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_1EB261730;
  uint64_t v7 = qword_1EB261730;
  if (!qword_1EB261730)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getTUIKeyboardLayoutFactoryClass_block_invoke_0;
    v3[3] = &unk_1E52D9900;
    v3[4] = &v4;
    __getTUIKeyboardLayoutFactoryClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1853B44E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t block_destroy_helper_80()
{
  return swift_release();
}

uint64_t objectdestroy_30Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1853B47D0(uint64_t a1, uint64_t a2)
{
  v3 = *(void (**)(void *))(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  float v6 = *(float *)(v2 + 44);
  char v7 = *(unsigned char *)(v2 + 52);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v9 = *(void *)(v2 + 64);
  long long v10 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v10;
  char v20 = *(unsigned char *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v11;
  long long v12 = *(_OWORD *)(a1 + 80);
  v19[4] = *(_OWORD *)(a1 + 64);
  v19[5] = v12;
  long long v13 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v13;
  long long v14 = *(_OWORD *)(a2 + 112);
  v21[6] = *(_OWORD *)(a2 + 96);
  v21[7] = v14;
  char v22 = *(unsigned char *)(a2 + 128);
  long long v15 = *(_OWORD *)(a2 + 48);
  v21[2] = *(_OWORD *)(a2 + 32);
  v21[3] = v15;
  long long v16 = *(_OWORD *)(a2 + 80);
  v21[4] = *(_OWORD *)(a2 + 64);
  v21[5] = v16;
  long long v17 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v17;
  return sub_1853B4864(v6, (uint64_t)v19, (uint64_t)v21, v3, v4, v5, v7, v8, v9);
}

id sub_1853B4864(float a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  sub_1853B4A74(v37);
  long long v25 = v37[1];
  long long v26 = v37[0];
  long long v23 = v37[3];
  long long v24 = v37[2];
  long long v21 = v37[5];
  long long v22 = v37[4];
  long long v20 = v37[6];
  uint64_t v12 = v38;
  uint64_t v13 = v39;
  long long v14 = self;
  long long v40 = v26;
  long long v41 = v25;
  long long v42 = v24;
  long long v43 = v23;
  long long v44 = v22;
  long long v45 = v21;
  long long v46 = v20;
  *(void *)&long long v47 = v12;
  *((void *)&v47 + 1) = v13;
  id v15 = objc_msgSend(v14, sel_valueWithCATransform3D_, &v40);
  uint64_t v16 = sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
  v36[3] = v16;
  v36[0] = v15;
  if (a4) {
    a4(v36);
  }
  sub_1853B76BC((uint64_t)v36, (uint64_t)v35);
  sub_1853B4A74(&v40);
  long long v27 = v40;
  long long v28 = v41;
  long long v29 = v42;
  long long v30 = v43;
  long long v31 = v44;
  long long v32 = v45;
  long long v33 = v46;
  long long v34 = v47;
  id result = objc_msgSend(v14, sel_valueWithCATransform3D_, &v27);
  *((void *)&v28 + 1) = v16;
  *(void *)&long long v27 = result;
  if ((~LODWORD(a1) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a1 <= -9.2234e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a1 < 9.2234e18)
  {
    sub_1853B7874((uint64_t)v35, (uint64_t)&v27, (uint64_t)a1, a7 & 1, a8, a9);
    sub_1853B93B8((uint64_t)&v27, &qword_1EB256B10);
    sub_1853B93B8((uint64_t)v35, &qword_1EB256B10);
    return (id)__swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  }
LABEL_9:
  __break(1u);
  return result;
}

double sub_1853B4A74@<D0>(_OWORD *a1@<X8>)
{
  long long v10 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
  long long v11 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 80);
  long long v12 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 96);
  long long v13 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 112);
  long long v6 = *MEMORY[0x1E4F39B10];
  long long v7 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 16);
  long long v8 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
  long long v9 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_186B84160;
  uint64_t v4 = *(void *)(v1 + 16);
  *(_OWORD *)(inited + 32) = *(_OWORD *)v1;
  *(void *)(inited + 48) = v4;
  CATransform3DSetDecomposition_();
  swift_bridgeObjectRelease();
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  *a1 = v6;
  a1[1] = v7;
  double result = *(double *)&v8;
  a1[2] = v8;
  a1[3] = v9;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

UIColor __swiftcall UIColor.init(_colorLiteralRed:green:blue:alpha:)(Swift::Float _colorLiteralRed, Swift::Float green, Swift::Float blue, Swift::Float alpha)
{
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  long long v9 = (objc_class *)objc_msgSend(v8, sel_initWithRed_green_blue_alpha_, _colorLiteralRed, green, blue, alpha);
  result._cachedStyleString = v11;
  result._systemColorName = v10;
  result.super.isa = v9;
  return result;
}

uint64_t objectdestroy_34Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1853B51A8(uint64_t a1, char a2, void (*a3)(uint64_t), double a4, double a5, uint64_t a6, char a7, void (*a8)(uint64_t))
{
  uint64_t v9 = v8;
  id v15 = objc_msgSend(self, sel_currentThread);
  swift_unknownObjectWeakAssign();

  uint64_t v16 = *(void *)(a1 + 16);
  swift_getKeyPath();
  long long v17 = (os_unfair_lock_s *)(v16 + 20);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 20));
  sub_18549EE08((unsigned __int16 *)(v16 + 16), &aBlock);
  if (v9) {
    goto LABEL_66;
  }
  unint64_t v18 = 0;
  uint64_t v63 = a1;
  os_unfair_lock_unlock(v17);
  unsigned __int8 v19 = aBlock;
  uint64_t v20 = swift_release_n();
  unsigned __int8 v60 = v19;
  if ((v19 & 1) != 0 && (uint64_t v20 = pthread_main_np(), v20 != 1))
  {
    int v61 = 1;
    uint64_t v20 = (uint64_t)objc_msgSend(self, sel_activateBackground_, 1);
  }
  else
  {
    int v61 = 0;
  }
  uint64_t v21 = a1;
  if (*(unsigned char *)(a1 + 324) == 1 && (a2 & 1) == 0 && *(unsigned char *)(a1 + 325) != 1)
  {
    signpost_c2_tick_enter_end();
    goto LABEL_60;
  }
  a3(v20);
  if (a4 <= 0.0)
  {
    *(void *)(a1 + 232) = 0;
    signpost_c2_tick_enter_end();
    if (a7) {
      goto LABEL_14;
    }
LABEL_17:
    uint64_t v23 = *(unsigned __int8 *)(a1 + 325);
    goto LABEL_18;
  }
  double v22 = a4 - *(double *)(a1 + 224);
  *(double *)(a1 + 232) = v22;
  if (v22 <= 0.0)
  {
    *(void *)(a1 + 232) = 0;
    signpost_c2_tick_enter_end();
    if (a7) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  *(double *)(a1 + 224) = a4;
  signpost_c2_tick_enter_end();
  if ((a7 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v23 = 1;
LABEL_18:
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v65 = MEMORY[0x1E4FBC860];
  uint64_t v64 = 0;
  v72[0] = 0;
  signpost_c2_tick_solver_start();
  long long v25 = *(NSObject **)(a1 + 264);
  long long v26 = (void *)swift_allocObject();
  v26[2] = v72;
  v26[3] = v63;
  v26[4] = &v64;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1853C1E20;
  *(void *)(v27 + 24) = v26;
  v70 = sub_1853BE6D4;
  uint64_t v71 = v27;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v67 = 1107296256;
  v68 = sub_1853BE46C;
  v69 = &block_descriptor_58_1;
  long long v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v25, v28);
  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    goto LABEL_39;
  }
  queue = v25;
  swift_beginAccess();
  unint64_t v18 = *(void *)(v63 + 96);
  if (v18 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_186A1F67C();
    if (v29) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29)
    {
LABEL_21:
      char v58 = 0;
      unint64_t v30 = 0;
      while (1)
      {
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v24 = MEMORY[0x18C102240](v30, v18);
          unint64_t v31 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            goto LABEL_37;
          }
        }
        else
        {
          if (v30 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_38;
          }
          uint64_t v24 = *(void *)(v18 + 8 * v30 + 32);
          swift_retain();
          unint64_t v31 = v30 + 1;
          if (__OFADD__(v30, 1))
          {
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
        }
        if ((*(uint64_t (**)(uint64_t, double))(v24 + 40))(v23, *(double *)(v63 + 232)))
        {
          uint64_t v32 = swift_retain();
          MEMORY[0x18C101940](v32);
          long long v17 = *(os_unfair_lock_s **)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v17 >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_186A1EB8C();
          }
          sub_186A1EBEC();
          sub_186A1EB5C();
          swift_release();
        }
        else
        {
          char v33 = *(unsigned char *)(v24 + 33);
          swift_release();
          if (v33)
          {
            char v58 = 1;
            unint64_t v30 = v31;
            goto LABEL_34;
          }
        }
        ++v30;
LABEL_34:
        uint64_t v24 = MEMORY[0x1E4FBC860];
        if (v31 == v29) {
          goto LABEL_42;
        }
      }
    }
  }
  char v58 = 0;
LABEL_42:
  swift_bridgeObjectRelease();
  signpost_c2_tick_solver_end();
  uint64_t v34 = v65;
  swift_release();
  uint64_t v21 = v63;
  sub_1853C18E8(a4);
  signpost_c2_tick_post_start();
  v35 = (uint64_t *)(v63 + 112);
  swift_beginAccess();
  uint64_t v36 = *(void *)(v63 + 112);
  v37 = (uint64_t *)(v36 + 16);
  uint64_t v38 = *(void *)(v36 + 16);
  if (v38)
  {
    uint64_t v39 = 0;
    while (1)
    {
      BOOL v40 = __OFADD__(v39, v38);
      v39 += v38;
      if (v40) {
        break;
      }
      uint64_t *v35 = v24;
      uint64_t v41 = *v37;
      if (*v37)
      {
        long long v17 = (os_unfair_lock_s *)(v36 + 40);
        do
        {
          long long v42 = *(void (**)(uint64_t))&v17[-2]._os_unfair_lock_opaque;
          uint64_t v43 = swift_retain();
          v42(v43);
          swift_release();
          v17 += 4;
          --v41;
        }
        while (v41);
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = *v35;
      v37 = (uint64_t *)(*v35 + 16);
      uint64_t v38 = *v37;
      if (!*v37) {
        goto LABEL_50;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
LABEL_50:
  signpost_c2_tick_post_end();
  sub_1854A7AF8((v60 | v58) & 1, a5);
  v72[0] = 0;
  signpost_c2_tick_exit_start();
  long long v44 = (uint64_t *)(v63 + 120);
  swift_beginAccess();
  uint64_t v45 = *(void *)(v63 + 120);
  long long v46 = (uint64_t *)(v45 + 16);
  uint64_t v47 = *(void *)(v45 + 16);
  if (v47)
  {
    uint64_t v48 = 0;
    while (1)
    {
      BOOL v40 = __OFADD__(v48, v47);
      v48 += v47;
      if (v40) {
        break;
      }
      *long long v44 = v24;
      uint64_t v49 = *v46;
      if (*v46)
      {
        long long v17 = (os_unfair_lock_s *)(v45 + 40);
        do
        {
          v50 = *(void (**)(uint64_t))&v17[-2]._os_unfair_lock_opaque;
          uint64_t v51 = swift_retain();
          v50(v51);
          swift_release();
          v17 += 4;
          --v49;
        }
        while (v49);
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = *v44;
      long long v46 = (uint64_t *)(*v44 + 16);
      uint64_t v47 = *v46;
      if (!*v46) {
        goto LABEL_58;
      }
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_58:
  v52 = (void *)swift_allocObject();
  v52[2] = v72;
  v52[3] = v34;
  v52[4] = v63;
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = sub_1853C25C0;
  *(void *)(v53 + 24) = v52;
  v70 = sub_1853BE6D4;
  uint64_t v71 = v53;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v67 = 1107296256;
  v68 = sub_1853BE46C;
  v69 = &block_descriptor_68_0;
  v54 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(queue, v54);
  _Block_release(v54);
  LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v54)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    os_unfair_lock_unlock(v17);
    __break(1u);
    return;
  }
  signpost_c2_tick_exit_end();
  swift_release();
  uint64_t v55 = swift_bridgeObjectRelease();
  a8(v55);
LABEL_60:
  swift_beginAccess();
  uint64_t v56 = swift_bridgeObjectRetain();
  *(void *)(v21 + 344) = sub_1853C1F88(v56);
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  if (v61) {
    objc_msgSend(self, sel_flush);
  }
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1853B59A0()
{
  return sub_1853BE6AC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1853B59A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1853B59D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  return a4(a1, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], v4[8], v4[9], v4[10], a2, a3) & 1;
}

uint64_t sub_1853B5A24(uint64_t a1)
{
  return sub_1853B59D4(a1, (uint64_t)&qword_1E8FAFD90, (uint64_t)sub_1853B619C, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1853B6780);
}

uint64_t sub_1853B5A58()
{
  uint64_t v1 = *(uint64_t (**)(long long *, long long *))(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  long long v5 = v2;
  return v1(&v5, &v4);
}

uint64_t sub_1853B5A9C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1) {
    return v1();
  }
  return result;
}

id sub_1853B5AD0(double *a1, double *a2, SEL *a3)
{
  return sub_1853B9218(*(void (**)(void *))(v3 + 16), *a1, a1[1], *a2, a2[1], *(float *)(v3 + 44), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned char *)(v3 + 52), *(void *)(v3 + 56), *(void *)(v3 + 64), a3);
}

id sub_1853B5B10(double *a1, double *a2)
{
  return sub_1853B5AD0(a1, a2, (SEL *)&selRef_valueWithCGPoint_);
}

uint64_t sub_1853B5B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t *a12, void (*a13)(unsigned char *, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = a6 + 16;
  v29[0] = 0;
  double v17 = a9 / UIAnimationDragCoefficient();
  signpost_c2_removePresentationModifier_end(v18, v19);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v20);
  signpost_c2_removePresentationModifier_end(v21, v22);
  swift_beginAccess();
  sub_1853B7020(a2 + 24, (uint64_t)v28, a12);
  a13(v28, a2, a1, v29, a3, a4, a5, v16, v17, a7, a8, a10, a11);
  sub_1853B93B8((uint64_t)v28, a12);
  os_unfair_lock_unlock(v20);
  return v29[0];
}

uint64_t sub_1853B5C2C()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *, _OWORD *))(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 48);
  v6[0] = *(_OWORD *)(v0 + 32);
  v6[1] = v2;
  long long v3 = *(_OWORD *)(v0 + 80);
  v5[0] = *(_OWORD *)(v0 + 64);
  v5[1] = v3;
  return v1(v6, v5);
}

id sub_1853B5C7C(double *a1, double *a2)
{
  return sub_1853B9050(*(void (**)(void *))(v2 + 16), *a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3], *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 52), *(void *)(v2 + 56), *(void *)(v2 + 64), *(float *)(v2 + 44));
}

uint64_t sub_1853B5CD0(double a1, uint64_t a2, uint64_t a3, char a4, unsigned char *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*(unsigned char *)(a3 + 384) & 1) != 0 || (a4 & 1) != 0 || (uint64_t v22 = a6(), v21 = &unk_1E8FB0000, (v22))
  {
    *a5 = 1;
    *(unsigned char *)(v20 + 16) = 1;
LABEL_5:
    if (v21[32] != -1) {
      swift_once();
    }
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a12;
    v24[4] = a13;
    v24[5] = a8;
    v24[6] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853C3938, (uint64_t)v24);
    swift_release();
    return swift_release();
  }
  signpost_c2_removePresentationModifier_end(v22, v23);
  double v26 = sub_1853B8E24(&qword_1E8FAFD08, &qword_1E8FB2D30, &qword_1E8FB2D38, a1);
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  *(double *)&long long v48 = v26;
  *(void *)&long long v49 = v31;
  *(double *)uint64_t v64 = v26;
  *(double *)&v64[1] = v27;
  v64[2] = v31;
  *(double *)&v64[3] = v29;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t)&v33[4];
  v35 = v33 + 20;
  os_unfair_lock_lock(v33 + 20);
  sub_1853B9028(v34);
  os_unfair_lock_unlock(v35);
  signpost_c2_removePresentationModifier_end(v36, v37);
  char v38 = sub_1853BA530();
  if (v38)
  {
    swift_beginAccess();
    sub_1853B7020(a3 + 24, (uint64_t)v64, &qword_1E8FAFD08);
    sub_1853B7020((uint64_t)v64, (uint64_t)&v51, &qword_1E8FAFD08);
    switch(v63)
    {
      case 1:
        long long v49 = v59;
        long long v39 = v58;
        goto LABEL_16;
      case 2:
        v50[6] = v57;
        v50[7] = v58;
        v50[8] = v59;
        v50[9] = v60;
        v50[2] = v53;
        v50[3] = v54;
        v50[4] = v55;
        v50[5] = v56;
        v50[0] = v51;
        v50[1] = v52;
        long long v48 = v58;
        long long v49 = v59;
        sub_1853B93B8((uint64_t)v50, &qword_1E8FB2DE0);
        goto LABEL_17;
      case 3:
        long long v49 = v52;
        long long v39 = v51;
        goto LABEL_16;
      default:
        long long v49 = v62;
        long long v39 = v61;
LABEL_16:
        long long v48 = v39;
LABEL_17:
        sub_1853B93B8((uint64_t)v64, &qword_1E8FAFD08);
        CGFloat v28 = *((double *)&v48 + 1);
        CGFloat v30 = *((double *)&v49 + 1);
        double v40 = 0.0;
        uint64_t v42 = 0;
        uint64_t v44 = 0;
        uint64_t v46 = 0;
        break;
    }
  }
  else
  {
    double v40 = sub_1853BA3FC(&qword_1E8FAFD08, &qword_1E8FB2D30, &qword_1E8FB2D38, &qword_1E8FB2DE0);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
  }
  *a5 = v38 & 1;
  swift_beginAccess();
  if ((*(unsigned char *)(a9 + 32) & 1) != 0
    || (*(void *)&v65.origin.x = v48,
        *(void *)&v65.size.width = v49,
        v65.origin.y = v28,
        v65.size.height = v30,
        !CGRectEqualToRect(*(CGRect *)a9, v65)))
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    uint64_t v47 = (CGFloat *)swift_allocObject();
    *((void *)v47 + 2) = a10;
    *((void *)v47 + 3) = a11;
    *((void *)v47 + 4) = v48;
    v47[5] = v28;
    *((void *)v47 + 6) = v49;
    v47[7] = v30;
    v47[8] = v40;
    *((void *)v47 + 9) = v42;
    *((void *)v47 + 10) = v44;
    *((void *)v47 + 11) = v46;
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853B5C78, (uint64_t)v47);
    swift_release();
  }
  swift_beginAccess();
  *(void *)a9 = v48;
  *(CGFloat *)(a9 + 8) = v28;
  *(void *)(a9 + 16) = v49;
  *(CGFloat *)(a9 + 24) = v30;
  *(unsigned char *)(a9 + 32) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*a5) {
    goto LABEL_5;
  }
  return swift_release();
}

uint64_t sub_1853B619C(double a1, uint64_t a2, uint64_t a3, char a4, BOOL *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*(unsigned char *)(a3 + 288) & 1) != 0 || (a4 & 1) != 0 || (uint64_t v22 = a6(), v21 = &unk_1E8FB0000, (v22))
  {
    *a5 = 1;
    *(unsigned char *)(v20 + 16) = 1;
LABEL_5:
    if (v21[32] != -1) {
      swift_once();
    }
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a12;
    v24[4] = a13;
    v24[5] = a8;
    v24[6] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853C3754, (uint64_t)v24);
    swift_release();
    return swift_release();
  }
  signpost_c2_removePresentationModifier_end(v22, v23);
  swift_beginAccess();
  *(void *)&long long v41 = sub_1853B7EEC(a1);
  double v27 = v26;
  uint64_t v28 = swift_endAccess();
  v49[0] = v41;
  *(double *)&v49[1] = v27;
  MEMORY[0x1F4188790](v28);
  CGFloat v30 = (__n128 *)&v29[4];
  uint64_t v31 = v29 + 12;
  os_unfair_lock_lock(v29 + 12);
  sub_1853B7EC4(v30);
  os_unfair_lock_unlock(v31);
  signpost_c2_removePresentationModifier_end(v32, v33);
  BOOL v34 = sub_1853B7CFC();
  if (v34)
  {
    sub_1853B7020(a3 + 24, (uint64_t)v49, &qword_1E8FAFD90);
    sub_1853B7020((uint64_t)v49, (uint64_t)v43, &qword_1E8FAFD90);
    v35 = a5;
    switch(v48)
    {
      case 1:
        long long v36 = v44;
        goto LABEL_16;
      case 2:
        v42[4] = v44;
        v42[5] = v45;
        v42[6] = v46;
        v42[0] = v43[0];
        v42[1] = v43[1];
        v42[2] = v43[2];
        v42[3] = v43[3];
        long long v41 = v45;
        sub_1853B93B8((uint64_t)v42, &qword_1E8FB2DF8);
        goto LABEL_17;
      case 3:
        long long v36 = v43[0];
        goto LABEL_16;
      default:
        long long v36 = v47;
LABEL_16:
        long long v41 = v36;
LABEL_17:
        sub_1853B93B8((uint64_t)v49, &qword_1E8FAFD90);
        double v27 = *((double *)&v41 + 1);
        double v37 = 0.0;
        uint64_t v39 = 0;
        break;
    }
  }
  else
  {
    double v37 = sub_1853B8C78(&qword_1E8FAFD90, &qword_1E8FB2D68, &qword_1E8FB2D70, &qword_1E8FB2DF8);
    uint64_t v39 = v38;
    v35 = a5;
  }
  BOOL *v35 = v34;
  swift_beginAccess();
  if ((*(unsigned char *)(a9 + 16) & 1) != 0 || *(double *)a9 != *(double *)&v41 || *(double *)(a9 + 8) != v27)
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = a10;
    *(void *)(v40 + 24) = a11;
    *(void *)(v40 + 32) = v41;
    *(double *)(v40 + 40) = v27;
    *(double *)(v40 + 48) = v37;
    *(void *)(v40 + 56) = v39;
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853B5ACC, v40);
    swift_release();
    v35 = a5;
  }
  swift_beginAccess();
  *(void *)a9 = v41;
  *(double *)(a9 + 8) = v27;
  *(unsigned char *)(a9 + 16) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*v35) {
    goto LABEL_5;
  }
  return swift_release();
}

uint64_t sub_1853B65C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  long long v6 = (void *)(v2 + 112);
  swift_beginAccess();
  long long v7 = *(void **)(v2 + 112);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 112) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v7 = sub_1853BFC18(0, v7[2] + 1, 1, v7);
    *long long v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    long long v7 = sub_1853BFC18((void *)(v9 > 1), v10 + 1, 1, v7);
    *long long v6 = v7;
  }
  v7[2] = v10 + 1;
  long long v11 = &v7[2 * v10];
  v11[4] = sub_1853B59D0;
  v11[5] = v5;
  swift_endAccess();
  uint64_t v12 = MEMORY[0x18C109380](v2 + 208);
  uint64_t result = swift_unknownObjectRelease();
  if (!v12)
  {
    if (qword_1E8FD5AD8)
    {
      long long v14 = (_UNKNOWN **)qword_1E8FD5AE0;
    }
    else
    {
      swift_unknownObjectRetain();
      long long v14 = &off_1ED0B87F0;
    }
    *(void *)(v2 + 216) = v14;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRetain();
    uint64_t result = swift_unknownObjectRelease();
    *(unsigned char *)(v2 + 297) = 1;
  }
  return result;
}

uint64_t sub_1853B673C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1() & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1853B6778()
{
  return 0;
}

uint64_t sub_1853B6780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t *a12, void (*a13)(unsigned char *, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = a6 + 16;
  v29[0] = 0;
  double v17 = a9 / UIAnimationDragCoefficient();
  signpost_c2_removePresentationModifier_end(v18, v19);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v20);
  signpost_c2_removePresentationModifier_end(v21, v22);
  swift_beginAccess();
  sub_1853B7020(a2 + 24, (uint64_t)v28, a12);
  a13(v28, a2, a1, v29, a3, a4, a5, v16, v17, a7, a8, a10, a11);
  sub_1853B93B8((uint64_t)v28, a12);
  os_unfair_lock_unlock(v20);
  return v29[0];
}

void *sub_1853B6890(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  LODWORD(v12) = a4;
  long long v62 = a1;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a7 + 56);
  if (!*(void *)(v15 + 16))
  {
    swift_endAccess();
LABEL_7:
    long long v61 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1853B7718(a5, a6);
  if ((v17 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v18 = *(void **)(*(void *)(v15 + 56) + 8 * v16);
  uint64_t v60 = a2;
  long long v61 = v18;
  id v19 = v18;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1853B76BC((uint64_t)v62, (uint64_t)&v78);
  id v59 = v19;
  if (v12)
  {
    id v20 = v19;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v78);
  }
  else
  {
    __swift_project_boxed_opaque_existential_0Tm(&v78, *((uint64_t *)&v79 + 1));
    v58[1] = v12;
    id v21 = v19;
    uint64_t v22 = (void *)sub_186A1F83C();
    BOOL v23 = -[CAPresentationModifier supportsNewValue:]((BOOL)v21, v22);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v78);
    if (v23)
    {

      id v24 = v21;
      signpost_c2_removePresentationModifier_end(v24, v25);
      __swift_project_boxed_opaque_existential_0Tm(v62, v62[3]);
      uint64_t v26 = sub_186A1F83C();
      sub_1853B7020(v60, (uint64_t)&v78, &qword_1EB256B10);
      uint64_t v27 = *((void *)&v79 + 1);
      if (*((void *)&v79 + 1))
      {
        uint64_t v28 = __swift_project_boxed_opaque_existential_0Tm(&v78, *((uint64_t *)&v79 + 1));
        uint64_t v29 = *(void *)(v27 - 8);
        MEMORY[0x1F4188790](v28);
        uint64_t v31 = (char *)v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v29 + 16))(v31);
        uint64_t v32 = sub_186A1F83C();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v78);
      }
      else
      {
        uint64_t v32 = 0;
      }
      objc_msgSend(v24, sel_setValue_velocity_, v26, v32);
      swift_unknownObjectRelease();
      uint64_t v56 = swift_unknownObjectRelease();
      signpost_c2_removePresentationModifier_end(v56, v57);

      return 0;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v33 = (void *)sub_1854A8D54(a5, a6);
  swift_endAccess();
  swift_bridgeObjectRelease();

  sub_1854A966C();
  a2 = v60;
LABEL_12:
  swift_beginAccess();
  uint64_t v34 = *(void *)(a7 + 64);
  if (*(void *)(v34 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_1853B7718(a5, a6);
    if (v36)
    {
      uint64_t v60 = a5;
      double v37 = v8;
      uint64_t v38 = a3;
      uint64_t v39 = a2;
      char v40 = v12;
      unint64_t v12 = *(void *)(*(void *)(v34 + 56) + 8 * v35);
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (qword_1E8FB0100 != -1) {
        swift_once();
      }
      sub_1853C4C40(v12);
      LOBYTE(v12) = v40;
      a2 = v39;
      a3 = v38;
      uint64_t v8 = v37;
      a5 = v60;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  sub_1853B76BC((uint64_t)v62, (uint64_t)&v78);
  sub_1853B7020(a2, (uint64_t)&v73, &qword_1EB256B10);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v8;
  sub_1853B7BB0(&v78, (_OWORD *)(v41 + 24));
  sub_1853B8150((uint64_t)&v73, v41 + 56, &qword_1EB256B10);
  *(void *)(v41 + 88) = a3;
  *(unsigned char *)(v41 + 96) = v12 & 1;
  *(void *)(v41 + 104) = a5;
  *(void *)(v41 + 112) = a6;
  *(void *)(v41 + 120) = a7;
  uint64_t v42 = qword_1E8FB0100;
  swift_bridgeObjectRetain();
  id v43 = v8;
  swift_retain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1853C10C8((uint64_t)sub_1854A7E34, v41);
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v73 = *(void *)(a7 + 64);
  *(void *)(a7 + 64) = 0x8000000000000000;
  sub_1854A9BB8(v44, a5, a6, isUniquelyReferenced_nonNull_native);
  *(void *)(a7 + 64) = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1854A966C();
  uint64_t v46 = sub_1854AFE94();
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v83 = v46;
    *(void *)&long long v70 = 0;
    long long v68 = 0u;
    long long v69 = 0u;
    *(void *)&long long v65 = 0;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v73 = 0u;
    sub_1856A97C0((uint64_t)&v68, (uint64_t)&v73, &qword_1E8FAFBE0);
    sub_1856A97C0((uint64_t)&v63, (uint64_t)&v75 + 8, &qword_1E8FAFBE0);
    long long v80 = v75;
    long long v81 = v76;
    long long v82 = v77;
    long long v78 = v73;
    long long v79 = v74;
    sub_1854B15E0((uint64_t)&v78, (uint64_t)&v73);
    sub_1853B7020((uint64_t)&v73, (uint64_t)&v68, (uint64_t *)&unk_1E8FAFBF0);
    if (*((void *)&v69 + 1) == 1)
    {
      swift_bridgeObjectRetain();
      id v48 = v43;
      sub_1853B93B8((uint64_t)&v68, (uint64_t *)&unk_1E8FAFBF0);
      sub_185A020A0((uint64_t)v48, a5, a6, (uint64_t)&v63);
      swift_bridgeObjectRelease();

      sub_1853B93B8((uint64_t)&v63, (uint64_t *)&unk_1E8FAFBF0);
      uint64_t v49 = v83;
    }
    else
    {
      long long v65 = v70;
      long long v66 = v71;
      long long v67 = v72;
      long long v63 = v68;
      long long v64 = v69;
      swift_bridgeObjectRetain();
      id v50 = v43;
      char v51 = swift_isUniquelyReferenced_nonNull_native();
      sub_1854B7348(&v63, v50, a5, a6, v51);
      uint64_t v49 = v47;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    sub_1853B93B8((uint64_t)&v73, (uint64_t *)&unk_1E8FAFBF0);
    id v52 = objc_msgSend(self, sel_currentThread);
    id v53 = objc_msgSend(v52, sel_threadDictionary);

    *(void *)&long long v73 = v49;
    uint64_t v54 = sub_186A1F90C();
    if (qword_1E8FB0130 != -1) {
      swift_once();
    }
    objc_msgSend(v53, sel_setObject_forKey_, v54, qword_1E8FB0120);

    swift_unknownObjectRelease();
    sub_1854B170C((uint64_t)&v78);
  }
  return v61;
}

uint64_t sub_1853B7020(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1853B7084(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v7 | 7;
  uint64_t v9 = (v7 | 7) + 57;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = v10 + 7;
  unint64_t v12 = ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 + (v9 & ~(v7 | 7)) + 3;
  uint64_t v13 = v7 + 8;
  uint64_t v14 = v10 + v7;
  unint64_t v15 = ((v10
        + v7
        + ((v10
          + v7
          + ((v10
            + v7
            + ((v10 + v7 + ((v7 + 8 + ((v12 + ((v7 + 48) & ~(v7 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)) & ~v7)) & ~v7)
      + v10;
  unint64_t v16 = ((v10 + v7) & ~v7) + v10;
  if (((v7 + 8 + ((((v10 + 7 + ((v16 + v7) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v10 > v15) {
    unint64_t v15 = ((v7 + 8 + ((((v10 + 7 + ((v16 + v7) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)
  }
        + v10;
  if (((v10 + ((v14 + ((v14 + ((v7 + 48) & ~v7)) & ~v7)) & ~v7) + 9) & 0xFFFFFFFFFFFFFFF8) + 8 > v15) {
    unint64_t v15 = ((v10 + ((v14 + ((v14 + ((v7 + 48) & ~v7)) & ~v7)) & ~v7) + 9) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v16 <= v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = ((v10 + v7) & ~v7) + v10;
  }
  unsigned int v18 = a2[v17];
  unsigned int v19 = v18 - 4;
  if (v18 >= 4)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        if (v17 < 4) {
          goto LABEL_18;
        }
        goto LABEL_20;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_20;
        }
        goto LABEL_18;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 < 4) {
          goto LABEL_18;
        }
        goto LABEL_20;
      case 4:
        int v21 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_18:
        }
          unsigned int v18 = (v21 | (v19 << (8 * v17))) + 4;
        else {
LABEL_20:
        }
          unsigned int v18 = v21 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v22 = ~v8;
  uint64_t v23 = ~v7;
  unint64_t v77 = v17;
  switch(v18)
  {
    case 1u:
      uint64_t v49 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16);
      uint64_t v50 = *(void *)(a3 + 16);
      v49(a1, a2, v5);
      unint64_t v51 = (unint64_t)&a2[v14] & v23;
      v49((v14 + v4) & v23, (unsigned __int8 *)v51, v50);
      unint64_t v52 = (v14 + v51) & v23;
      v49((v14 + ((v14 + v4) & v23)) & v23, (unsigned __int8 *)v52, v50);
      id v53 = (void *)((v11 + ((v14 + ((v14 + v4) & v23)) & v23)) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = (void *)((v11 + v52) & 0xFFFFFFFFFFFFFFF8);
      *id v53 = *v54;
      long long v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v55 = *v56;
      v49(((unint64_t)v55 + v13) & v23, (unsigned __int8 *)(((unint64_t)v56 + v13) & v23), v50);
      char v57 = 1;
      goto LABEL_26;
    case 2u:
      *(void *)a1 = *(void *)a2;
      unint64_t v58 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v59 = (unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v60 = v5;
      uint64_t v61 = *(void *)(v59 + 24);
      *(void *)(v58 + 24) = v61;
      *(void *)(v58 + 32) = *(void *)(v59 + 32);
      (**(void (***)(unint64_t, unint64_t))(v61 - 8))(v58, v59);
      uint64_t v62 = v59 + v7;
      uint64_t v63 = (v58 + v7 + 40) & v23;
      uint64_t v64 = (v62 + 40) & v23;
      long long v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v65(v63, v64, v60);
      uint64_t v66 = (v14 + v63) & v23;
      uint64_t v67 = (v14 + v64) & v23;
      v65(v66, v67, v60);
      uint64_t v68 = (v14 + v66) & v23;
      uint64_t v69 = (v14 + v67) & v23;
      v65(v68, v69, v60);
      long long v70 = (unsigned char *)(v68 + v10);
      *long long v70 = *(unsigned char *)(v69 + v10);
      v70[1] = *(unsigned char *)(v69 + v10 + 1);
      *(void *)((v68 + v10 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v69 + v10 + 9) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v4 + v77) = 2;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      long long v71 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16);
      uint64_t v72 = *(void *)(a3 + 16);
      v71(a1, a2, v5);
      v71((v14 + v4) & v23, (unsigned __int8 *)((unint64_t)&a2[v14] & v23), v72);
      char v57 = 3;
LABEL_26:
      *(unsigned char *)(v4 + v77) = v57;
      break;
    default:
      long long v24 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v24;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      uint64_t v25 = (a1 + v8 + 48) & v22;
      uint64_t v75 = v5;
      uint64_t v26 = (unint64_t)&a2[v8 + 48] & v22;
      long long v27 = *(_OWORD *)v26;
      *(_OWORD *)(v25 + 9) = *(_OWORD *)(v26 + 9);
      *(_OWORD *)uint64_t v25 = v27;
      long long v28 = *(_OWORD *)(v26 + 0x20);
      *(_OWORD *)(v25 + 41) = *(_OWORD *)(v26 + 0x29);
      *(_OWORD *)(v25 + 32) = v28;
      uint64_t v29 = (v9 + v25) & v22;
      uint64_t v30 = (v9 + v26) & v22;
      unint64_t v74 = v12;
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      unint64_t v32 = ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
      v31(v29, v30, v5);
      uint64_t v33 = (void *)((v11 + v29) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v34 = (void *)((v11 + v30) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v33 = *v34;
      unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v36 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v35 = *(void *)v36;
      *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
      double v37 = (unsigned char *)(v29 + v32);
      unsigned char *v37 = *(unsigned char *)(v30 + v32);
      v37[1] = *(unsigned char *)(v30 + v32 + 1);
      *(unsigned char *)((v29 + v32) | 2) = *(unsigned char *)((v30 + v32) | 2);
      uint64_t v38 = (void *)(((v25 | 4) + v74) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v39 = v26 | 4;
      uint64_t v4 = a1;
      char v40 = (void *)((v39 + v74) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v38 = *v40;
      unint64_t v41 = ((unint64_t)v38 + v13) & v23;
      unint64_t v42 = ((unint64_t)v40 + v13) & v23;
      v31(v41, v42, v75);
      unint64_t v43 = (v14 + v41) & v23;
      unint64_t v44 = (v14 + v42) & v23;
      v31(v43, v44, v75);
      unint64_t v45 = (v14 + v43) & v23;
      unint64_t v46 = (v14 + v44) & v23;
      v31(v45, v46, v75);
      uint64_t v47 = (v14 + v45) & v23;
      uint64_t v48 = (v14 + v46) & v23;
      v31(v47, v48, v75);
      v31((v14 + v47) & v23, (v14 + v48) & v23, v75);
      *(unsigned char *)(a1 + v77) = 0;
      break;
  }
  return v4;
}

uint64_t sub_1853B76BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1853B7718(uint64_t a1, uint64_t a2)
{
  sub_186A1F9EC();
  sub_186A1E9BC();
  uint64_t v4 = sub_186A1FA4C();
  return sub_1853B7790(a1, a2, v4);
}

unint64_t sub_1853B7790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_186A1F85C() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_186A1F85C() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1853B7874(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  void (*v39)(long long *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  ValueMetadata *v43;
  uint64_t v44;
  long long v45;
  uint64_t v46;
  long long v47;
  long long v48;

  uint64_t v7 = v6;
  uint64_t v14 = sub_1853B7BC0();
  if (v14)
  {
    unint64_t v15 = (void *)v14;
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _s13AnimationInfoCMa();
    swift_allocObject();
    uint64_t v17 = a3;
    id v18 = v6;
    unint64_t v15 = sub_1854AE0CC(v18, (uint64_t)sub_1854AA548, v16);
    uint64_t v19 = (uint64_t)v18;
    a3 = v17;
    -[UIView set__swiftAnimationInfo:](v19, v15);
  }
  sub_1853B7020(a1, (uint64_t)&v45, &qword_1EB256B10);
  if (!v46)
  {
    swift_bridgeObjectRetain();
    char v32 = sub_1854C3530(a5, a6);
    if (v32 == 13)
    {
      uint64_t v47 = 0u;
      uint64_t v48 = 0u;
    }
    else
    {
      unint64_t v36 = sub_1854ABD04(v32);
      unint64_t v41 = a3;
      uint64_t v38 = v37;
      unint64_t v43 = v36;
      unint64_t v44 = v37;
      __swift_allocate_boxed_opaque_existential_0(v42);
      sub_186A1F66C();
      uint64_t v39 = *(void (**)(long long *__return_ptr, ValueMetadata *, uint64_t))(v38 + 72);
      char v40 = v38;
      a3 = v41;
      v39(&v47, v36, v40);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
    }
    sub_1853B93B8((uint64_t)&v45, &qword_1EB256B10);
    if (*((void *)&v48 + 1)) {
      goto LABEL_6;
    }
LABEL_18:
    swift_release();
    return sub_1853B93B8((uint64_t)&v47, &qword_1EB256B10);
  }
  sub_1853B7BB0(&v45, &v47);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v20 = sub_1853B7BB0(&v47, v42);
  signpost_c2_removePresentationModifier_end(v20, v21);
  uint64_t v22 = (os_unfair_lock_s *)(v15[2] + 16);
  os_unfair_lock_lock(v22);
  signpost_c2_removePresentationModifier_end(v23, v24);
  uint64_t v25 = sub_1853B6890(v42, a2, a3, a4 & 1, a5, a6, (uint64_t)v15);
  os_unfair_lock_unlock(v22);
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = pthread_main_np();
    if (v27 == 1)
    {
      signpost_c2_removePresentationModifier_end(v27, v28);
      id v29 = objc_msgSend(v7, sel_layer);
      objc_msgSend(v29, sel_removePresentationModifier_, v26);

      signpost_c2_removePresentationModifier_end(v30, v31);
    }
    else
    {
      if (qword_1E8FB0100 != -1) {
        swift_once();
      }
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v15;
      *(void *)(v33 + 24) = v26;
      id v34 = v26;
      swift_retain();
      sub_1854A85B0((uint64_t)sub_1853C2A18, v33);

      swift_release();
    }
  }
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
}

_OWORD *sub_1853B7BB0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1853B7BC0()
{
  if (-[UIView __swiftAnimationInfo](v0))
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1853B7C70((uint64_t)v3, (uint64_t)&v4);
  if (v5)
  {
    sub_1853B7BB0(&v4, &v6);
    _s13AnimationInfoCMa();
    swift_dynamicCast();
    return v2;
  }
  else
  {
    sub_1853BFC80((uint64_t)&v4);
    return 0;
  }
}

uint64_t sub_1853B7C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s13AnimationInfoCMa()
{
  return self;
}

BOOL sub_1853B7CFC()
{
  swift_beginAccess();
  sub_1853B7020(v0 + 24, (uint64_t)v28, &qword_1E8FAFD90);
  sub_1853B7020((uint64_t)v28, (uint64_t)&v12, &qword_1E8FAFD90);
  BOOL v1 = 1;
  switch(v27)
  {
    case 1:
      double v2 = *((double *)&v14 + 1);
      double v3 = *(double *)&v14;
      double v4 = *((double *)&v16 + 1);
      double v5 = *(double *)&v16;
      if (qword_1E8FAFD68 != -1)
      {
        double v10 = *((double *)&v16 + 1);
        double v11 = *((double *)&v14 + 1);
        double v8 = *(double *)&v16;
        double v9 = *(double *)&v14;
        swift_once();
        double v5 = v8;
        double v3 = v9;
        double v4 = v10;
        double v2 = v11;
      }
      BOOL v6 = vabdd_f64(v5, v3) <= *(double *)&qword_1E8FD5820;
      BOOL v1 = vabdd_f64(v4, v2) <= *(double *)&qword_1E8FD5820 && v6;
      break;
    case 2:
      long long v34 = v17;
      long long v35 = v18;
      long long v29 = v12;
      long long v30 = v13;
      long long v32 = v15;
      long long v33 = v16;
      long long v31 = v14;
      BOOL v1 = v18;
      sub_1853B93B8((uint64_t)&v29, &qword_1E8FB2DF8);
      break;
    case 3:
      break;
    default:
      long long v41 = v24;
      long long v42 = v25;
      long long v43 = v26;
      long long v37 = v20;
      long long v38 = v21;
      long long v39 = v22;
      long long v40 = v23;
      long long v33 = v16;
      long long v34 = v17;
      long long v35 = v18;
      long long v36 = v19;
      long long v29 = v12;
      long long v30 = v13;
      long long v31 = v14;
      long long v32 = v15;
      BOOL v1 = sub_1853B81B4();
      break;
  }
  sub_1853B93B8((uint64_t)v28, &qword_1E8FAFD90);
  return v1;
}

double sub_1853B7EC4(__n128 *a1)
{
  *(void *)&double result = sub_1853B7EDC(a1).n128_u64[0];
  return result;
}

__n128 sub_1853B7EDC(__n128 *a1)
{
  double v2 = *(__n128 **)(v1 + 16);
  __n128 result = *v2;
  a1[1] = *v2;
  return result;
}

double sub_1853B7EEC(double a1)
{
  return sub_1853B7F20(&qword_1E8FAFD90, (double (*)(uint64_t, double))sub_1853B8C74, (double (*)(uint64_t, double))sub_18594BB78, a1);
}

double sub_1853B7F20(uint64_t *a1, double (*a2)(uint64_t, double), double (*a3)(uint64_t, double), double a4)
{
  uint64_t v8 = sub_1853B8150(v4, (uint64_t)v41, a1);
  switch(v55)
  {
    case 1:
      long long v15 = *(_OWORD *)v41;
      double v17 = *(double *)&v41[24];
      double v16 = *(double *)&v41[16];
      double v18 = *((double *)&v42 + 1);
      double v9 = *(double *)&v42;
      long long v19 = __x;
      long long v20 = v44;
      if (a4 > 0.0)
      {
        long long v24 = *(_OWORD *)v41;
        double v25 = *((double *)&v42 + 1);
        long long v23 = __x;
        long double v21 = 1.0 - pow(*(long double *)&__x, a4 * 1000.0);
        double v16 = v16 + (*(double *)&v20 - v16) * v21;
        double v17 = v17 + (*((double *)&v20 + 1) - v17) * v21;
        double v9 = v9 + v21 * (v16 - v9);
        double v18 = v25 + v21 * (v17 - v25);
        long long v19 = v23;
        long long v15 = v24;
      }
      *(_OWORD *)uint64_t v4 = v15;
      *(double *)(v4 + 16) = v16;
      *(double *)(v4 + 24) = v17;
      *(double *)(v4 + 32) = v9;
      *(double *)(v4 + 40) = v18;
      *(_OWORD *)(v4 + 48) = v19;
      *(_OWORD *)(v4 + 64) = v20;
      char v13 = 1;
      goto LABEL_8;
    case 2:
      long long v10 = v45;
      *(_OWORD *)(v4 + 64) = v44;
      *(_OWORD *)(v4 + 80) = v10;
      *(_OWORD *)(v4 + 96) = v46;
      long long v11 = *(_OWORD *)&v41[16];
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v41;
      *(_OWORD *)(v4 + 16) = v11;
      long long v12 = __x;
      *(_OWORD *)(v4 + 32) = v42;
      *(_OWORD *)(v4 + 48) = v12;
      double v9 = a3(v8, a4);
      char v13 = 2;
      goto LABEL_8;
    case 3:
      double v9 = *(double *)v41;
      uint64_t v14 = *(void *)&v41[24];
      *(void *)uint64_t v4 = *(void *)v41;
      *(_OWORD *)(v4 + 8) = *(_OWORD *)&v41[8];
      *(void *)(v4 + 24) = v14;
      char v13 = 3;
LABEL_8:
      *(unsigned char *)(v4 + 240) = v13;
      break;
    default:
      long long v38 = v52;
      long long v39 = v53;
      long long v40 = v54;
      long long v34 = v48;
      long long v35 = v49;
      long long v36 = v50;
      long long v37 = v51;
      long long v30 = v44;
      long long v31 = v45;
      long long v32 = v46;
      long long v33 = v47;
      long long v26 = *(_OWORD *)v41;
      long long v27 = *(_OWORD *)&v41[16];
      long long v28 = v42;
      long long v29 = __x;
      double v9 = a2(v8, a4);
      *(_OWORD *)(v4 + 192) = v38;
      *(_OWORD *)(v4 + 208) = v39;
      *(_OWORD *)(v4 + 224) = v40;
      *(_OWORD *)(v4 + 128) = v34;
      *(_OWORD *)(v4 + 144) = v35;
      *(_OWORD *)(v4 + 160) = v36;
      *(_OWORD *)(v4 + 176) = v37;
      *(_OWORD *)(v4 + 64) = v30;
      *(_OWORD *)(v4 + 80) = v31;
      *(_OWORD *)(v4 + 96) = v32;
      *(_OWORD *)(v4 + 112) = v33;
      *(_OWORD *)uint64_t v4 = v26;
      *(_OWORD *)(v4 + 16) = v27;
      *(_OWORD *)(v4 + 32) = v28;
      *(_OWORD *)(v4 + 48) = v29;
      *(unsigned char *)(v4 + 240) = 0;
      break;
  }
  return v9;
}

uint64_t sub_1853B8150(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1853B81B4()
{
  if ((~*(void *)(v0 + 192) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 200) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 176) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 184) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v1 = *(double *)(v0 + 152);
  double v2 = (*(double *)(v0 + 160) - *(double *)(v0 + 192)) * (*(double *)(v0 + 160) - *(double *)(v0 + 192))
     + *(double *)(v0 + 176) * v1 * (*(double *)(v0 + 176) * v1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v3 = *(double *)(v0 + 168);
  double v4 = *(double *)(v0 + 184) * v1 * (*(double *)(v0 + 184) * v1);
  double v5 = (v3 - *(double *)(v0 + 200)) * (v3 - *(double *)(v0 + 200)) + v4;
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if (qword_1E8FAFD60 != -1)
  {
    double v7 = (v3 - *(double *)(v0 + 200)) * (v3 - *(double *)(v0 + 200)) + v4;
    double v8 = (*(double *)(v0 + 160) - *(double *)(v0 + 192)) * (*(double *)(v0 + 160) - *(double *)(v0 + 192))
       + *(double *)(v0 + 176) * v1 * (*(double *)(v0 + 176) * v1);
    swift_once();
    double v5 = v7;
    double v2 = v8;
  }
  return fabs(v2) <= *(double *)&qword_1E8FD5818 && fabs(v5) <= *(double *)&qword_1E8FD5818;
}

double sub_1853B82C4(double a1)
{
  if (a1 <= 0.0) {
    return *(double *)(v1 + 192);
  }
  double v2 = a1;
  double v4 = *(double *)(v1 + 160);
  double v3 = *(double *)(v1 + 168);
  char v5 = *(unsigned char *)(v1 + 147);
  if (v5)
  {
    *(double *)(v1 + 208) = v4;
    *(double *)(v1 + 216) = v3;
    *(void *)(v1 + 224) = 0;
    *(void *)(v1 + 232) = 0;
  }
  double v7 = *(double *)(v1 + 80);
  double v6 = *(double *)(v1 + 88);
  double v8 = *(double *)(v1 + 96);
  int v9 = *(unsigned __int8 *)(v1 + 104);
  int v10 = *(unsigned __int8 *)(v1 + 145);
  char v11 = *(unsigned char *)(v1 + 146);
  if (v10)
  {
    if ((*(unsigned char *)(v1 + 146) & 1) == 0) {
      goto LABEL_32;
    }
  }
  else
  {
    double v14 = *(double *)(v1 + 48);
    double v13 = *(double *)(v1 + 56);
    double v15 = *(double *)(v1 + 64);
    int v16 = *(unsigned __int8 *)(v1 + 72);
    if (*(double *)v1 == v14 && *(double *)(v1 + 8) == 0.0)
    {
      if ((*(unsigned char *)(v1 + 146) & 1) == 0)
      {
LABEL_32:
        double v44 = *(double *)(v1 + 16);
        if (v44 != v7 || *(double *)(v1 + 24) != 0.0)
        {
          double v48 = v44 - v7;
          if ((v9 - 1) <= 2)
          {
            double v49 = v8;
            double v50 = v6;
            __double2 v51 = __sincos_stret(v44 - v7);
            double v52 = atan2(v51.__sinval, v51.__cosval);
            double v6 = v50;
            double v8 = v49;
            if (v52 > 0.0 && v9 == 2) {
              double v52 = v52 + -6.28318531;
            }
            if (v52 < 0.0 && v9 == 3) {
              double v48 = v52 + 6.28318531;
            }
            else {
              double v48 = v52;
            }
          }
          double v55 = *(double *)(v1 + 24);
          double v56 = sqrt(v6);
          double v57 = v8 * 0.5;
          if (v8 * 0.5 >= v56)
          {
            if (v56 >= v57)
            {
              double v76 = v57 * v48 + v55;
              double v77 = v48 + v76 * v2;
              double v62 = exp(-(v57 * v2));
              double v63 = v62 * v77;
              double v67 = v62 * v76;
              double v68 = v77 * v57;
            }
            else
            {
              double v183 = v3;
              double v69 = sqrt(v57 * v57 - v56 * v56);
              double v169 = v7;
              double v178 = v4;
              double v70 = cosh(v69 * v2);
              double v71 = 1.0 / v69 * (v57 * v48 + v55);
              double v72 = sinh(v69 * v2);
              double v73 = v48 * v70 + v71 * v72;
              double v62 = exp(-(v57 * v2));
              double v63 = v62 * v73;
              double v74 = v69 * (v48 * v72);
              double v75 = v69 * (v71 * v70);
              double v3 = v183;
              double v67 = v62 * (v75 + v74);
              double v68 = v73 * v57;
              double v7 = v169;
              double v4 = v178;
            }
          }
          else
          {
            double v182 = v3;
            double v58 = sqrt(v56 * v56 - v57 * v57);
            __double2 v59 = __sincos_stret(v58 * v2);
            double v177 = v4;
            double v60 = 1.0 / v58 * (v57 * v48 + v55);
            double v61 = v59.__cosval * v48 + v59.__sinval * v60;
            double v62 = exp(-(v57 * v2));
            double v63 = v62 * v61;
            double v64 = v58 * (v48 * v59.__sinval);
            double v65 = v59.__cosval * v60;
            double v4 = v177;
            double v66 = v58 * v65;
            double v3 = v182;
            double v67 = v62 * (v66 - v64);
            double v68 = v61 * v57;
          }
          double v78 = v67 - v62 * v68;
          double v44 = v7 + v63;
          *(double *)(v1 + 16) = v7 + v63;
          *(double *)(v1 + 24) = v78;
        }
        goto LABEL_52;
      }
    }
    else
    {
      double v19 = *(double *)v1 - v14;
      double v181 = v3;
      double v158 = *(double *)(v1 + 88);
      double v163 = *(double *)(v1 + 96);
      if ((v16 - 1) <= 2)
      {
        __double2 v20 = __sincos_stret(*(double *)v1 - v14);
        double v21 = atan2(v20.__sinval, v20.__cosval);
        if (v21 > 0.0 && v16 == 2) {
          double v21 = v21 + -6.28318531;
        }
        if (v21 < 0.0 && v16 == 3) {
          double v19 = v21 + 6.28318531;
        }
        else {
          double v19 = v21;
        }
      }
      double v24 = *(double *)(v1 + 8);
      double v25 = sqrt(v13);
      double v26 = v15 * 0.5;
      if (v26 >= v25)
      {
        if (v25 >= v26)
        {
          double v45 = v26 * v19 + v24;
          double v46 = v19 + v45 * v2;
          double v31 = exp(-(v26 * v2));
          double v32 = v31 * v46;
          double v35 = v31 * v45;
          double v36 = v46 * v26;
        }
        else
        {
          double v37 = sqrt(v26 * v26 - v25 * v25);
          double v168 = v7;
          double v176 = v4;
          double v38 = cosh(v37 * a1);
          double v39 = 1.0 / v37 * (v26 * v19 + v24);
          double v40 = sinh(v37 * a1);
          double v41 = v19 * v38 + v39 * v40;
          double v31 = exp(-(v26 * a1));
          double v32 = v31 * v41;
          double v42 = v37 * (v19 * v40);
          double v43 = v37 * (v39 * v38);
          double v2 = a1;
          double v35 = v31 * (v43 + v42);
          double v36 = v41 * v26;
          double v7 = v168;
          double v4 = v176;
        }
      }
      else
      {
        double v175 = v4;
        double v27 = sqrt(v25 * v25 - v26 * v26);
        __double2 v28 = __sincos_stret(v27 * v2);
        double v29 = 1.0 / v27 * (v26 * v19 + v24);
        double v30 = v28.__cosval * v19 + v28.__sinval * v29;
        double v31 = exp(-(v26 * a1));
        double v32 = v31 * v30;
        double v33 = v27 * (v19 * v28.__sinval);
        double v34 = v27 * (v28.__cosval * v29);
        double v4 = v175;
        double v35 = v31 * (v34 - v33);
        double v36 = v30 * v26;
        double v2 = a1;
      }
      double v47 = v35 - v31 * v36;
      double v3 = v181;
      double v6 = v158;
      double v8 = v163;
      *(double *)uint64_t v1 = v14 + v32;
      *(double *)(v1 + 8) = v47;
      if ((v11 & 1) == 0) {
        goto LABEL_32;
      }
    }
    if (!v10)
    {
      double v44 = *(double *)(v1 + 16);
LABEL_52:
      double v18 = 6.28318531 / v44 * (6.28318531 / v44);
      double v79 = sqrt(v18);
      double v17 = *(double *)v1 * (v79 + v79);
      *(double *)(v1 + 32) = v18;
      *(double *)(v1 + 40) = v17;
      goto LABEL_53;
    }
  }
  double v18 = *(double *)(v1 + 32);
  double v17 = *(double *)(v1 + 40);
LABEL_53:
  *(double *)(v1 + 112) = v4;
  *(double *)(v1 + 120) = v3;
  double v80 = *(double *)(v1 + 208);
  double v81 = *(double *)(v1 + 216);
  double v82 = *(double *)(v1 + 224);
  double v83 = *(double *)(v1 + 232);
  double v12 = *(double *)(v1 + 192);
  double v84 = *(double *)(v1 + 200);
  double v86 = *(double *)(v1 + 176);
  double v85 = *(double *)(v1 + 184);
  if (v5) {
    goto LABEL_65;
  }
  double v87 = *(double *)(v1 + 136);
  if (v80 == v4 && v81 == v3 && v82 == 0.0 && v83 == 0.0) {
    goto LABEL_65;
  }
  double v149 = v17;
  double v154 = *(double *)(v1 + 176);
  double v159 = *(double *)(v1 + 184);
  double v88 = v80 - v4;
  double v89 = v81 - v3;
  double v90 = sqrt(*(double *)(v1 + 128));
  double v91 = v87 * 0.5;
  double v179 = v4;
  double v184 = v3;
  if (v87 * 0.5 >= v90)
  {
    if (v90 >= v91)
    {
      double v111 = v82 + v88 * v91;
      double v112 = v83 + v89 * v91;
      double v113 = v88 + v111 * a1;
      double v114 = v89 + v112 * a1;
      double v95 = exp(-(v91 * a1));
      double v98 = v95 * v113;
      double v99 = v95 * v114;
      double v107 = v111 * v95;
      double v108 = v112 * v95;
      double v109 = v113 * v91;
      double v110 = v114 * v91;
      goto LABEL_64;
    }
    double v102 = sqrt(v91 * v91 - v90 * v90);
    double v166 = *(double *)(v1 + 232);
    double v172 = *(double *)(v1 + 224);
    double v152 = v89;
    double v103 = v80 - v4;
    double v104 = cosh(v102 * a1);
    double v148 = v103 * v104;
    double v147 = v103;
    double v173 = (v172 + v103 * v91) * (1.0 / v102);
    double v105 = sinh(v102 * a1);
    double v106 = (v166 + v152 * v91) * (1.0 / v102);
    double v95 = exp(-(v91 * a1));
    double v96 = v148 + v173 * v105;
    double v98 = v95 * v96;
    double v97 = v152 * v104 + v106 * v105;
    double v99 = v95 * v97;
    double v100 = v102 * (v173 * v104) + v102 * (v147 * v105);
    double v101 = v102 * (v106 * v104) + v102 * (v152 * v105);
  }
  else
  {
    double v92 = sqrt(v90 * v90 - v91 * v91);
    double v164 = *(double *)(v1 + 232);
    double v170 = *(double *)(v1 + 224);
    double v151 = v89;
    double v93 = v80 - v4;
    __double2 v94 = __sincos_stret(v92 * a1);
    double v165 = (v164 + v151 * v91) * (1.0 / v92);
    double v171 = (v170 + v93 * v91) * (1.0 / v92);
    double v95 = exp(-(v91 * a1));
    double v97 = v151 * v94.__cosval + v165 * v94.__sinval;
    double v96 = v93 * v94.__cosval + v171 * v94.__sinval;
    double v98 = v95 * v96;
    double v99 = v95 * v97;
    double v100 = v92 * (v171 * v94.__cosval) - v92 * (v93 * v94.__sinval);
    double v101 = v92 * (v165 * v94.__cosval) - v92 * (v151 * v94.__sinval);
  }
  double v107 = v95 * v100;
  double v108 = v95 * v101;
  double v109 = v96 * v91;
  double v110 = v97 * v91;
LABEL_64:
  double v82 = v107 - v95 * v109;
  double v83 = v108 - v95 * v110;
  double v80 = v179 + v98;
  double v81 = v184 + v99;
  double v86 = v154;
  double v85 = v159;
  double v17 = v149;
LABEL_65:
  if (v12 != v80 || v84 != v81 || v86 != 0.0 || v85 != 0.0)
  {
    double v167 = v83;
    double v174 = v82;
    double v115 = v12 - v80;
    double v116 = v84 - v81;
    double v117 = sqrt(v18);
    double v118 = v17 * 0.5;
    if (v17 * 0.5 >= v117)
    {
      if (v117 >= v118)
      {
        double v142 = v86 + v118 * v115;
        double v143 = v85 + v118 * v116;
        double v144 = v115 + v142 * a1;
        double v145 = v116 + v143 * a1;
        double v122 = exp(-(v118 * a1));
        double v123 = v122 * v144;
        double v124 = v122 * v145;
        double v125 = v122 * v142;
        double v126 = v122 * v143;
        double v127 = v144 * v118;
        double v128 = v145 * v118;
      }
      else
      {
        double v156 = v86;
        double v129 = sqrt(v118 * v118 - v117 * v117);
        double v130 = v85;
        double v131 = v84 - v81;
        double v185 = v81;
        double v132 = v12 - v80;
        double v133 = cosh(v129 * a1);
        double v150 = v131 * v133;
        double v153 = v131;
        double v134 = v130 + v118 * v131;
        double v135 = 1.0 / v129 * (v156 + v118 * (v12 - v80));
        double v136 = 1.0 / v129 * v134;
        double v157 = v136;
        double v162 = v135;
        double v137 = sinh(v129 * a1);
        double v138 = v136 * v137;
        double v139 = v132 * v133 + v135 * v137;
        double v140 = v150 + v138;
        double v122 = exp(-(v118 * a1));
        double v123 = v122 * v139;
        double v124 = v122 * v140;
        double v141 = v132 * v137;
        double v81 = v185;
        double v125 = v122 * (v129 * (v162 * v133) + v129 * v141);
        double v126 = v122 * (v129 * (v157 * v133) + v129 * (v153 * v137));
        double v127 = v139 * v118;
        double v128 = v140 * v118;
      }
    }
    else
    {
      double v119 = sqrt(v117 * v117 - v118 * v118);
      double v160 = v85;
      __double2 v120 = __sincos_stret(v119 * a1);
      double v121 = 1.0 / v119 * (v86 + v118 * (v12 - v80));
      double v180 = 1.0 / v119 * (v160 + v118 * (v84 - v81));
      double v155 = v120.__cosval * (v84 - v81) + v120.__sinval * v180;
      double v161 = v120.__cosval * (v12 - v80) + v120.__sinval * v121;
      double v122 = exp(-(v118 * a1));
      double v123 = v122 * v161;
      double v124 = v122 * v155;
      double v125 = v122 * (v119 * (v120.__cosval * v121) - v119 * ((v12 - v80) * v120.__sinval));
      double v126 = v122 * (v119 * (v120.__cosval * v180) - v119 * ((v84 - v81) * v120.__sinval));
      double v127 = v161 * v118;
      double v128 = v155 * v118;
    }
    double v86 = v125 - v122 * v127;
    double v85 = v126 - v122 * v128;
    double v12 = v80 + v123;
    double v84 = v81 + v124;
    double v83 = v167;
    double v82 = v174;
  }
  *(double *)(v1 + 192) = v12;
  *(double *)(v1 + 200) = v84;
  *(double *)(v1 + 176) = v86;
  *(double *)(v1 + 184) = v85;
  *(double *)(v1 + 208) = v80;
  *(double *)(v1 + 216) = v81;
  *(double *)(v1 + 224) = v82;
  *(double *)(v1 + 232) = v83;
  return v12;
}

double sub_1853B8C78(uint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  void (*v11)(double *__return_ptr, float64x2_t *, uint64_t *, uint64_t, uint64_t, void, void, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  float64x2_t v16;
  double v17;
  char v18;
  _OWORD v19[3];
  float64x2_t v20;
  long long v21;
  float64x2_t v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  float64x2_t v27;
  long long v28;
  float64x2_t v29;
  long long v30;
  double v31;
  char v32;

  swift_beginAccess();
  sub_1853B7020(v4 + 24, (uint64_t)&v24, a1);
  double v9 = 0.0;
  switch(v32)
  {
    case 1:
      break;
    case 2:
      v19[2] = v26;
      __double2 v20 = v27;
      double v21 = v28;
      long long v22 = v29;
      long long v23 = v30;
      v19[0] = v24;
      v19[1] = v25;
      long long v10 = v26;
      __swift_project_boxed_opaque_existential_0Tm((void *)v19 + 1, v26);
      int v16 = vsubq_f64(v22, v20);
      double v15 = *((void *)&v23 + 1);
      char v11 = *(void (**)(double *__return_ptr, float64x2_t *, uint64_t *, uint64_t, uint64_t, void, void, double))(*((void *)&v10 + 1) + 32);
      double v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
      double v13 = sub_1854B2C88(a3, a2);
      v11(&v17, &v16, &v15, v12, v13, v10, *((void *)&v10 + 1), *(double *)v19);
      if (v18) {
        double v9 = 0.0;
      }
      else {
        double v9 = v17;
      }
      sub_1853B93B8((uint64_t)v19, a4);
      break;
    case 3:
      double v9 = *(double *)&v25;
      break;
    default:
      double v9 = v31;
      break;
  }
  swift_endAccess();
  return v9;
}

double sub_1853B8E24(uint64_t *a1, uint64_t *a2, unint64_t *a3, double a4)
{
  double v9 = (_OWORD *)(v4 + 24);
  swift_beginAccess();
  sub_1853B8150(v4 + 24, (uint64_t)__src, a1);
  switch(v28)
  {
    case 1:
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[0] = __src[0];
      __dst[1] = __src[1];
      *(void *)&double v10 = *(_OWORD *)&sub_18594AAC4(a4);
      long long v21 = __dst[7];
      *(_OWORD *)(v4 + 120) = __dst[6];
      *(_OWORD *)(v4 + 136) = v21;
      *(_OWORD *)(v4 + 152) = __dst[8];
      long long v22 = __dst[3];
      *(_OWORD *)(v4 + 56) = __dst[2];
      *(_OWORD *)(v4 + 72) = v22;
      long long v23 = __dst[5];
      *(_OWORD *)(v4 + 88) = __dst[4];
      *(_OWORD *)(v4 + 104) = v23;
      long long v24 = __dst[1];
      *double v9 = __dst[0];
      *(_OWORD *)(v4 + 40) = v24;
      char v16 = 1;
      goto LABEL_6;
    case 2:
      long long v11 = __src[7];
      *(_OWORD *)(v4 + 120) = __src[6];
      *(_OWORD *)(v4 + 136) = v11;
      long long v12 = __src[9];
      *(_OWORD *)(v4 + 152) = __src[8];
      *(_OWORD *)(v4 + 168) = v12;
      long long v13 = __src[3];
      *(_OWORD *)(v4 + 56) = __src[2];
      *(_OWORD *)(v4 + 72) = v13;
      long long v14 = __src[5];
      *(_OWORD *)(v4 + 88) = __src[4];
      *(_OWORD *)(v4 + 104) = v14;
      long long v15 = __src[1];
      *double v9 = __src[0];
      *(_OWORD *)(v4 + 40) = v15;
      double v10 = sub_18594B6A0(a2, a3, a4);
      char v16 = 2;
      goto LABEL_6;
    case 3:
      uint64_t v17 = *((void *)&__src[0] + 1);
      double v10 = *(double *)__src;
      uint64_t v18 = *(void *)&__src[1];
      uint64_t v19 = *((void *)&__src[3] + 1);
      *(void *)(v4 + 24) = *(void *)&__src[0];
      *(void *)(v4 + 32) = v17;
      *(void *)(v4 + 40) = v18;
      long long v20 = *(_OWORD *)((char *)&__src[2] + 8);
      *(_OWORD *)(v4 + 48) = *(_OWORD *)((char *)&__src[1] + 8);
      *(_OWORD *)(v4 + 64) = v20;
      *(void *)(v4 + 80) = v19;
      char v16 = 3;
LABEL_6:
      *(unsigned char *)(v4 + 360) = v16;
      break;
    default:
      memcpy(__dst, __src, sizeof(__dst));
      double v10 = sub_1853B9898(a4);
      memcpy((void *)(v4 + 24), __dst, 0x150uLL);
      *(unsigned char *)(v4 + 360) = 0;
      break;
  }
  swift_endAccess();
  return v10;
}

double sub_1853B9028(uint64_t a1)
{
  *(void *)&double result = sub_1853B9040(a1).n128_u64[0];
  return result;
}

__n128 sub_1853B9040(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

id sub_1853B9050(void (*a1)(void *), double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, float a15)
{
  char v28 = self;
  id v29 = objc_msgSend(v28, sel_valueWithCGRect_, a2, a3, a4, a5);
  uint64_t v30 = sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
  v35[3] = v30;
  v35[0] = v29;
  if (a1) {
    a1(v35);
  }
  sub_1853B76BC((uint64_t)v35, (uint64_t)v34);
  id result = objc_msgSend(v28, sel_valueWithCGRect_, a6, a7, a8, a9);
  v33[3] = v30;
  v33[0] = result;
  if ((~LODWORD(a15) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a15 <= -9.2234e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a15 < 9.2234e18)
  {
    sub_1853B7874((uint64_t)v34, (uint64_t)v33, (uint64_t)a15, a12 & 1, a13, a14);
    sub_1853B93B8((uint64_t)v33, &qword_1EB256B10);
    sub_1853B93B8((uint64_t)v34, &qword_1EB256B10);
    return (id)__swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v35);
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_1853B9218(void (*a1)(void *), double a2, double a3, double a4, double a5, float a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, SEL *a12)
{
  long long v22 = self;
  id v23 = objc_msgSend(v22, *a12, a2, a3);
  uint64_t v24 = sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
  v28[3] = v24;
  v28[0] = v23;
  if (a1) {
    a1(v28);
  }
  sub_1853B76BC((uint64_t)v28, (uint64_t)v27);
  id result = objc_msgSend(v22, *a12, a4, a5);
  v26[3] = v24;
  v26[0] = result;
  if ((~LODWORD(a6) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a6 <= -9.2234e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a6 < 9.2234e18)
  {
    sub_1853B7874((uint64_t)v27, (uint64_t)v26, (uint64_t)a6, a9 & 1, a10, a11);
    sub_1853B93B8((uint64_t)v26, &qword_1EB256B10);
    sub_1853B93B8((uint64_t)v27, &qword_1EB256B10);
    return (id)__swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1853B93B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1853B9414(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = (v5 | 7) + 57;
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t v9 = v8 + 7;
  unint64_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + (v7 & ~(v5 | 7)) + 12;
  uint64_t v11 = v5 + 8;
  uint64_t v12 = v8 + v5;
  unint64_t v13 = ((v8
        + v5
        + ((v8
          + v5
          + ((v8
            + v5
            + ((v8 + v5 + ((v5 + 8 + ((v10 + ((v5 + 48) & ~(v5 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & ~v5)) & ~v5)) & ~v5)) & ~v5)
      + v8;
  unint64_t v14 = ((v8 + v5) & ~v5) + v8;
  if (((v5 + 8 + ((((v8 + 7 + ((v14 + v5) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v5) + v8 > v13) {
    unint64_t v13 = ((v5 + 8 + ((((v8 + 7 + ((v14 + v5) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v5) + v8;
  }
  unint64_t v15 = ((v8 + 9 + ((v12 + ((v12 + ((v5 + 48) & ~v5)) & ~v5)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 <= v13) {
    unint64_t v15 = v13;
  }
  if (v14 > v15) {
    unint64_t v15 = v14;
  }
  unsigned int v16 = a1[v15];
  unsigned int v17 = v16 - 4;
  if (v16 >= 4)
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a1;
        if (v15 < 4) {
          goto LABEL_17;
        }
        goto LABEL_19;
      case 2:
        int v19 = *(unsigned __int16 *)a1;
        if (v15 >= 4) {
          goto LABEL_19;
        }
        goto LABEL_17;
      case 3:
        int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v15 < 4) {
          goto LABEL_17;
        }
        goto LABEL_19;
      case 4:
        int v19 = *(_DWORD *)a1;
        if (v15 < 4) {
LABEL_17:
        }
          unsigned int v16 = (v19 | (v17 << (8 * v15))) + 4;
        else {
LABEL_19:
        }
          unsigned int v16 = v19 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v20 = ~v6;
  uint64_t v21 = ~v5;
  switch(v16)
  {
    case 1u:
      double v34 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v34(a1, v3);
      unint64_t v26 = (unint64_t)&v2[v12] & v21;
      v34((unsigned __int8 *)v26, v3);
      unint64_t v27 = (v12 + v26) & v21;
      v34((unsigned __int8 *)v27, v3);
      char v28 = (unsigned __int8 *)(v11 + ((((v9 + v27) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
      goto LABEL_28;
    case 2u:
      unint64_t v29 = (unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v35 = *(void *)(v3 - 8);
      __swift_destroy_boxed_opaque_existential_0Tm(v29);
      uint64_t v30 = (v29 + v5 + 40) & v21;
      double v31 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v31(v30, v3);
      uint64_t v32 = (v12 + v30) & v21;
      v31(v32, v3);
      v31((v12 + v32) & v21, v3);
      return swift_bridgeObjectRelease();
    case 3u:
      double v34 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      goto LABEL_27;
    default:
      uint64_t v22 = (unint64_t)&a1[v6 + 48] & v20;
      double v34 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v34((unsigned __int8 *)((v7 + v22) & v20), v3);
      uint64_t v23 = (v11 + (v22 | 4) + v10) & v21;
      v34((unsigned __int8 *)v23, v3);
      uint64_t v24 = (v12 + v23) & v21;
      v34((unsigned __int8 *)v24, v3);
      uint64_t v25 = (v12 + v24) & v21;
      v34((unsigned __int8 *)v25, v3);
      uint64_t v2 = (unsigned __int8 *)((v12 + v25) & v21);
LABEL_27:
      v34(v2, v3);
      char v28 = &v2[v12];
LABEL_28:
      return ((uint64_t (*)(unint64_t, uint64_t))v34)((unint64_t)v28 & v21, v3);
  }
}

uint64_t sub_1853B985C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_1853B9898(double a1)
{
  if (a1 > 0.0)
  {
    float64x2_t v2 = *(float64x2_t *)(v1 + 176);
    float64x2_t v3 = *(float64x2_t *)(v1 + 192);
    char v4 = *(unsigned char *)(v1 + 163);
    if (v4)
    {
      *(float64x2_t *)(v1 + 272) = v2;
      *(float64x2_t *)(v1 + 288) = v3;
      *(_OWORD *)(v1 + 304) = 0u;
      *(_OWORD *)(v1 + 320) = 0u;
    }
    double v5 = *(double *)(v1 + 80);
    double v6 = *(double *)(v1 + 88);
    double v7 = *(double *)(v1 + 96);
    int v8 = *(unsigned __int8 *)(v1 + 104);
    int v9 = *(unsigned __int8 *)(v1 + 161);
    char v10 = *(unsigned char *)(v1 + 162);
    float64x2_t v152 = v2;
    float64x2_t v153 = v3;
    if (v9)
    {
      if ((*(unsigned char *)(v1 + 162) & 1) == 0) {
        goto LABEL_32;
      }
LABEL_12:
      double v16 = *(double *)(v1 + 32);
      double v17 = *(double *)(v1 + 40);
      goto LABEL_54;
    }
    double v13 = *(double *)(v1 + 48);
    double v12 = *(double *)(v1 + 56);
    double v14 = *(double *)(v1 + 64);
    int v15 = *(unsigned __int8 *)(v1 + 72);
    if (*(double *)v1 == v13 && *(double *)(v1 + 8) == 0.0)
    {
      if (*(unsigned char *)(v1 + 162)) {
        goto LABEL_11;
      }
    }
    else
    {
      double v18 = *(double *)v1 - v13;
      double v169 = *(double *)(v1 + 88);
      if ((v15 - 1) <= 2)
      {
        __double2 v19 = __sincos_stret(*(double *)v1 - v13);
        double v20 = atan2(v19.__sinval, v19.__cosval);
        if (v20 > 0.0 && v15 == 2) {
          double v20 = v20 + -6.28318531;
        }
        if (v20 < 0.0 && v15 == 3) {
          double v18 = v20 + 6.28318531;
        }
        else {
          double v18 = v20;
        }
      }
      double v23 = *(double *)(v1 + 8);
      double v24 = sqrt(v12);
      double v25 = v14 * 0.5;
      if (v14 * 0.5 >= v24)
      {
        if (v24 >= v25)
        {
          double v44 = v25 * v18 + v23;
          double v45 = v18 + v44 * a1;
          double v30 = exp(-(v25 * a1));
          double v31 = v30 * v45;
          double v34 = v30 * v44;
          double v35 = v45 * v25;
        }
        else
        {
          double v165 = v5;
          double v36 = sqrt(v25 * v25 - v24 * v24);
          double v37 = cosh(v36 * a1);
          double v162 = v7;
          double v38 = 1.0 / v36 * (v25 * v18 + v23);
          double v39 = sinh(v36 * a1);
          double v40 = v18 * v37 + v38 * v39;
          double v30 = exp(-(v25 * a1));
          double v31 = v30 * v40;
          double v41 = v36 * (v18 * v39);
          double v42 = v36 * (v38 * v37);
          double v5 = v165;
          double v34 = v30 * (v42 + v41);
          double v35 = v40 * v25;
          double v7 = v162;
        }
      }
      else
      {
        double v161 = v7;
        double v26 = sqrt(v24 * v24 - v25 * v25);
        __double2 v27 = __sincos_stret(v26 * a1);
        double v28 = 1.0 / v26 * (v25 * v18 + v23);
        double v164 = v5;
        double v29 = v27.__cosval * v18 + v27.__sinval * v28;
        double v30 = exp(-(v25 * a1));
        double v31 = v30 * v29;
        double v32 = v26 * (v18 * v27.__sinval);
        double v33 = v26 * (v27.__cosval * v28);
        double v7 = v161;
        double v34 = v30 * (v33 - v32);
        double v35 = v29 * v25;
        double v5 = v164;
      }
      *(double *)uint64_t v1 = v13 + v31;
      *(double *)(v1 + 8) = v34 - v30 * v35;
      float64x2_t v2 = v152;
      float64x2_t v3 = v153;
      double v6 = v169;
      if (v10)
      {
LABEL_11:
        if (!v9)
        {
          double v43 = *(double *)(v1 + 16);
LABEL_53:
          double v16 = 6.28318531 / v43 * (6.28318531 / v43);
          double v70 = sqrt(v16);
          double v17 = *(double *)v1 * (v70 + v70);
          *(double *)(v1 + 32) = v16;
          *(double *)(v1 + 40) = v17;
LABEL_54:
          *(float64x2_t *)(v1 + 112) = v2;
          *(float64x2_t *)(v1 + 128) = v3;
          CGSize v71 = *(CGSize *)(v1 + 288);
          float64x2_t v160 = *(float64x2_t *)(v1 + 304);
          float64x2_t v163 = *(float64x2_t *)(v1 + 320);
          CGPoint v72 = *(CGPoint *)(v1 + 272);
          float64x2_t v74 = *(float64x2_t *)(v1 + 240);
          float64x2_t v73 = *(float64x2_t *)(v1 + 256);
          rect1.float64x2_t size = *(CGSize *)(v1 + 224);
          float64x2_t v157 = v74;
          rect1.float64x2_t origin = *(CGPoint *)(v1 + 208);
          float64x2_t v155 = v73;
          if (v4)
          {
LABEL_65:
            double v103 = v74.f64[1];
            double v104 = v73.f64[1];
            double y = v72.y;
            double height = v71.height;
            float64_t v108 = v74.f64[1];
            float64_t v107 = v74.f64[0];
            float64_t v109 = v73.f64[1];
            float64x2_t v168 = (float64x2_t)v72;
            float64x2_t v172 = (float64x2_t)v71;
            v176.float64x2_t origin = v72;
            v176.float64x2_t size = v71;
            if (CGRectEqualToRect(*(CGRect *)(&v73 - 1), v176))
            {
              v177.origin.x = 0.0;
              v177.origin.double y = 0.0;
              v177.size.width = 0.0;
              v177.size.double height = 0.0;
              if (CGRectEqualToRect(rect1, v177))
              {
                float64x2_t size = (float64x2_t)rect1.size;
                double v11 = v157.f64[0];
                float64x2_t origin = (float64x2_t)rect1.origin;
                double v112 = v155.f64[0];
                double v114 = v168.f64[0];
                double v113 = v172.f64[0];
LABEL_75:
                *(double *)(v1 + 240) = v11;
                *(double *)(v1 + 248) = v103;
                *(double *)(v1 + 256) = v112;
                *(double *)(v1 + 264) = v104;
                *(float64x2_t *)(v1 + 208) = origin;
                *(float64x2_t *)(v1 + 224) = size;
                *(double *)(v1 + 272) = v114;
                *(double *)(v1 + 280) = y;
                *(double *)(v1 + 288) = v113;
                *(double *)(v1 + 296) = height;
                *(float64x2_t *)(v1 + 304) = v160;
                *(float64x2_t *)(v1 + 320) = v163;
                return v11;
              }
            }
            float64x2_t v115 = vsubq_f64(v157, v168);
            float64x2_t v116 = vsubq_f64(v155, v172);
            double v117 = sqrt(v16);
            double v118 = v17 * 0.5;
            float64x2_t v156 = v116;
            float64x2_t v158 = v115;
            if (v17 * 0.5 >= v117)
            {
              if (v117 < v118)
              {
                double v150 = sqrt(v118 * v118 - v117 * v117);
                double v146 = cosh(v150 * a1);
                double v140 = sinh(v150 * a1);
                double v130 = exp(-(v17 * 0.5 * a1));
                float64x2_t v131 = vmulq_n_f64(vaddq_f64((float64x2_t)rect1.origin, vmulq_n_f64(v158, v17 * 0.5)), 1.0 / v150);
                float64x2_t v132 = vmulq_n_f64(vaddq_f64((float64x2_t)rect1.size, vmulq_n_f64(v156, v17 * 0.5)), 1.0 / v150);
                float64x2_t v123 = vaddq_f64(vmulq_n_f64(v158, v146), vmulq_n_f64(v131, v140));
                float64x2_t v124 = vaddq_f64(vmulq_n_f64(v156, v146), vmulq_n_f64(v132, v140));
                float64x2_t v125 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v130, 0);
                float64x2_t v126 = vmulq_n_f64(v124, v130);
                float64x2_t v127 = vmulq_n_f64(v123, v130);
                float64x2_t v133 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v131, v146), v150), vmulq_n_f64(vmulq_n_f64(v158, v140), v150));
                float64x2_t v134 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v132, v146), v150), vmulq_n_f64(vmulq_n_f64(v156, v140), v150));
                double v135 = -(v17 * 0.5);
                float64x2_t v136 = vmulq_n_f64(v134, v130);
                float64x2_t v137 = vmulq_n_f64(v133, v130);
                double v114 = v168.f64[0];
                double v113 = v172.f64[0];
LABEL_74:
                float64x2_t size = vaddq_f64(v136, vmulq_f64(v125, vmulq_n_f64(v124, v135)));
                float64x2_t origin = vaddq_f64(v137, vmulq_f64(v125, vmulq_n_f64(v123, v135)));
                double v11 = v114 + v127.f64[0];
                double v103 = y + v127.f64[1];
                double v112 = v113 + v126.f64[0];
                double v104 = height + v126.f64[1];
                goto LABEL_75;
              }
              float64x2_t v147 = vmulq_n_f64(v115, v118);
              float64x2_t v151 = vmulq_n_f64(v116, v118);
              double v154 = -v118;
              double v120 = exp(-(v118 * a1));
              double v114 = v168.f64[0];
              double v113 = v172.f64[0];
              float64x2_t v128 = vaddq_f64((float64x2_t)rect1.origin, v147);
              float64x2_t v129 = vaddq_f64((float64x2_t)rect1.size, v151);
              float64x2_t v123 = vaddq_f64(v158, vmulq_n_f64(v128, a1));
              float64x2_t v124 = vaddq_f64(v156, vmulq_n_f64(v129, a1));
              float64x2_t v125 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v120, 0);
              float64x2_t v126 = vmulq_n_f64(v124, v120);
              float64x2_t v127 = vmulq_n_f64(v123, v120);
            }
            else
            {
              double v149 = sqrt(v117 * v117 - v118 * v118);
              __double2 v119 = __sincos_stret(v149 * a1);
              double v154 = -(v17 * 0.5);
              double v120 = exp(-(v17 * 0.5 * a1));
              float64x2_t v121 = vmulq_n_f64(vaddq_f64((float64x2_t)rect1.origin, vmulq_n_f64(v158, v17 * 0.5)), 1.0 / v149);
              float64x2_t v122 = vmulq_n_f64(vaddq_f64((float64x2_t)rect1.size, vmulq_n_f64(v156, v17 * 0.5)), 1.0 / v149);
              float64x2_t v123 = vaddq_f64(vmulq_n_f64(v158, v119.__cosval), vmulq_n_f64(v121, v119.__sinval));
              float64x2_t v124 = vaddq_f64(vmulq_n_f64(v156, v119.__cosval), vmulq_n_f64(v122, v119.__sinval));
              float64x2_t v125 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v120, 0);
              float64x2_t v126 = vmulq_n_f64(v124, v120);
              float64x2_t v127 = vmulq_n_f64(v123, v120);
              float64x2_t v128 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v158, -v119.__sinval), v149), vmulq_n_f64(vmulq_n_f64(v121, v119.__cosval), v149));
              float64x2_t v129 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v156, -v119.__sinval), v149), vmulq_n_f64(vmulq_n_f64(v122, v119.__cosval), v149));
              double v114 = v168.f64[0];
              double v113 = v172.f64[0];
            }
            float64x2_t v136 = vmulq_n_f64(v129, v120);
            float64x2_t v137 = vmulq_n_f64(v128, v120);
            double v135 = v154;
            goto LABEL_74;
          }
          double v76 = *(double *)(v1 + 144);
          double v75 = *(double *)(v1 + 152);
          float64_t v77 = v2.f64[1];
          float64_t v78 = v3.f64[1];
          float64x2_t v166 = *(float64x2_t *)(v1 + 272);
          float64x2_t v170 = *(float64x2_t *)(v1 + 288);
          if (CGRectEqualToRect(*(CGRect *)(v1 + 272), *(CGRect *)v2.f64))
          {
            v174.origin.x = v160.f64[0];
            v174.size.width = v163.f64[0];
            v174.origin.double y = v160.f64[1];
            v174.size.double height = v163.f64[1];
            v175.origin.x = 0.0;
            v175.origin.double y = 0.0;
            v175.size.width = 0.0;
            v175.size.double height = 0.0;
            if (CGRectEqualToRect(v174, v175))
            {
              float64x2_t v73 = v155;
              float64x2_t v74 = v157;
              CGPoint v72 = (CGPoint)v166;
              CGSize v71 = (CGSize)v170;
              goto LABEL_65;
            }
          }
          float64x2_t v79 = vsubq_f64(v166, v152);
          float64x2_t v80 = vsubq_f64(v170, v153);
          double v81 = sqrt(v76);
          double v82 = v75 * 0.5;
          float64x2_t v167 = v79;
          float64x2_t v171 = v80;
          if (v75 * 0.5 >= v81)
          {
            if (v81 < v82)
            {
              double v144 = sqrt(v82 * v82 - v81 * v81);
              double v141 = cosh(v144 * a1);
              double v139 = sinh(v144 * a1);
              double v97 = exp(-(v75 * 0.5 * a1));
              double v86 = -(v75 * 0.5);
              float64x2_t v85 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v97, 0);
              float64x2_t v98 = vmulq_n_f64(vaddq_f64(v160, vmulq_n_f64(v167, v75 * 0.5)), 1.0 / v144);
              float64x2_t v99 = vmulq_n_f64(vaddq_f64(v163, vmulq_n_f64(v171, v75 * 0.5)), 1.0 / v144);
              float64x2_t v89 = vaddq_f64(vmulq_n_f64(v167, v141), vmulq_n_f64(v98, v139));
              float64x2_t v90 = vaddq_f64(vmulq_n_f64(v171, v141), vmulq_n_f64(v99, v139));
              float64x2_t v91 = vmulq_n_f64(v90, v97);
              float64x2_t v92 = vmulq_n_f64(v89, v97);
              float64x2_t v100 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v98, v141), v144), vmulq_n_f64(vmulq_n_f64(v167, v139), v144));
              float64x2_t v101 = vmulq_n_f64(vaddq_f64(vmulq_n_f64(vmulq_n_f64(v99, v141), v144), vmulq_n_f64(vmulq_n_f64(v171, v139), v144)), v97);
              float64x2_t v102 = vmulq_n_f64(v100, v97);
              float64x2_t v96 = v152;
              float64x2_t v95 = v153;
LABEL_64:
              float64x2_t v73 = v155;
              float64x2_t v74 = v157;
              float64x2_t v160 = vaddq_f64(v102, vmulq_f64(v85, vmulq_n_f64(v89, v86)));
              float64x2_t v163 = vaddq_f64(v101, vmulq_f64(v85, vmulq_n_f64(v90, v86)));
              CGPoint v72 = (CGPoint)vaddq_f64(v96, v92);
              CGSize v71 = (CGSize)vaddq_f64(v95, v91);
              goto LABEL_65;
            }
            float64x2_t v142 = vmulq_n_f64(v79, v82);
            float64x2_t v145 = vmulq_n_f64(v80, v82);
            double v148 = -v82;
            double v84 = exp(-(v82 * a1));
            double v86 = v148;
            float64x2_t v96 = v152;
            float64x2_t v95 = v153;
            float64x2_t v85 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v84, 0);
            float64x2_t v93 = vaddq_f64(v160, v142);
            float64x2_t v94 = vaddq_f64(v163, v145);
            float64x2_t v89 = vaddq_f64(v167, vmulq_n_f64(v93, a1));
            float64x2_t v90 = vaddq_f64(v171, vmulq_n_f64(v94, a1));
            float64x2_t v91 = vmulq_n_f64(v90, v84);
            float64x2_t v92 = vmulq_n_f64(v89, v84);
          }
          else
          {
            double v143 = sqrt(v81 * v81 - v82 * v82);
            __double2 v83 = __sincos_stret(v143 * a1);
            double v84 = exp(-(v75 * 0.5 * a1));
            float64x2_t v85 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v84, 0);
            double v86 = -(v75 * 0.5);
            float64x2_t v87 = vmulq_n_f64(vaddq_f64(v160, vmulq_n_f64(v167, v75 * 0.5)), 1.0 / v143);
            float64x2_t v88 = vmulq_n_f64(vaddq_f64(v163, vmulq_n_f64(v171, v75 * 0.5)), 1.0 / v143);
            float64x2_t v89 = vaddq_f64(vmulq_n_f64(v167, v83.__cosval), vmulq_n_f64(v87, v83.__sinval));
            float64x2_t v90 = vaddq_f64(vmulq_n_f64(v171, v83.__cosval), vmulq_n_f64(v88, v83.__sinval));
            float64x2_t v91 = vmulq_n_f64(v90, v84);
            float64x2_t v92 = vmulq_n_f64(v89, v84);
            float64x2_t v93 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v167, -v83.__sinval), v143), vmulq_n_f64(vmulq_n_f64(v87, v83.__cosval), v143));
            float64x2_t v94 = vaddq_f64(vmulq_n_f64(vmulq_n_f64(v171, -v83.__sinval), v143), vmulq_n_f64(vmulq_n_f64(v88, v83.__cosval), v143));
            float64x2_t v96 = v152;
            float64x2_t v95 = v153;
          }
          float64x2_t v101 = vmulq_n_f64(v94, v84);
          float64x2_t v102 = vmulq_n_f64(v93, v84);
          goto LABEL_64;
        }
        goto LABEL_12;
      }
    }
LABEL_32:
    double v43 = *(double *)(v1 + 16);
    if (v43 == v5 && *(double *)(v1 + 24) == 0.0) {
      goto LABEL_53;
    }
    double v46 = v43 - v5;
    if ((v8 - 1) <= 2)
    {
      __double2 v47 = __sincos_stret(v43 - v5);
      double v48 = atan2(v47.__sinval, v47.__cosval);
      if (v48 > 0.0 && v8 == 2) {
        double v48 = v48 + -6.28318531;
      }
      if (v48 < 0.0 && v8 == 3) {
        double v46 = v48 + 6.28318531;
      }
      else {
        double v46 = v48;
      }
    }
    double v51 = *(double *)(v1 + 24);
    double v52 = sqrt(v6);
    double v53 = v7 * 0.5;
    if (v7 * 0.5 >= v52)
    {
      if (v52 >= v53)
      {
        double v67 = v53 * v46 + v51;
        double v68 = v46 + v67 * a1;
        double v58 = exp(-(v53 * a1));
        double v59 = v58 * v68;
        double v65 = v58 * v67;
        double v66 = v68 * v53;
        goto LABEL_52;
      }
      double v61 = sqrt(v53 * v53 - v52 * v52);
      double v62 = cosh(v61 * a1);
      double v63 = 1.0 / v61 * (v53 * v46 + v51);
      double v64 = sinh(v61 * a1);
      double v57 = v46 * v62 + v63 * v64;
      double v58 = exp(-(v53 * a1));
      double v59 = v58 * v57;
      double v60 = v61 * (v63 * v62) + v61 * (v46 * v64);
    }
    else
    {
      double v54 = sqrt(v52 * v52 - v53 * v53);
      __double2 v55 = __sincos_stret(v54 * a1);
      double v56 = 1.0 / v54 * (v53 * v46 + v51);
      double v57 = v55.__cosval * v46 + v55.__sinval * v56;
      double v58 = exp(-(v53 * a1));
      double v59 = v58 * v57;
      double v60 = v54 * (v55.__cosval * v56) - v54 * (v46 * v55.__sinval);
    }
    double v65 = v58 * v60;
    double v66 = v57 * v53;
LABEL_52:
    double v69 = v65 - v58 * v66;
    double v43 = v5 + v59;
    *(double *)(v1 + 16) = v5 + v59;
    *(double *)(v1 + 24) = v69;
    float64x2_t v2 = v152;
    float64x2_t v3 = v153;
    goto LABEL_53;
  }
  return *(double *)(v1 + 240);
}

double sub_1853BA3FC(uint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  swift_beginAccess();
  sub_1853B7020(v4 + 24, (uint64_t)v13, a1);
  double v9 = 0.0;
  switch(v23)
  {
    case 1:
      break;
    case 2:
      v12[6] = v18;
      v12[7] = v19;
      v12[8] = v20;
      v12[9] = v21;
      v12[2] = v14;
      v12[3] = v15;
      v12[4] = v16;
      v12[5] = v17;
      v12[0] = v13[0];
      v12[1] = v13[1];
      sub_18594C260(a2, a3);
      double v9 = v10;
      sub_1853B93B8((uint64_t)v12, a4);
      break;
    case 3:
      double v9 = *(double *)&v14;
      break;
    default:
      double v9 = v22;
      break;
  }
  swift_endAccess();
  return v9;
}

uint64_t sub_1853BA530()
{
  swift_beginAccess();
  sub_1853B7020(v0 + 24, (uint64_t)v19, &qword_1E8FAFD08);
  sub_1853B7020((uint64_t)v19, (uint64_t)__src, &qword_1E8FAFD08);
  char v1 = 1;
  switch(v18)
  {
    case 1:
      double v2 = *((double *)&__src[4] + 1);
      double v3 = *(double *)&__src[4];
      double v4 = *((double *)&__src[5] + 1);
      double v5 = *(double *)&__src[5];
      double v6 = *((double *)&__src[7] + 1);
      double v7 = *(double *)&__src[7];
      double v8 = *((double *)&__src[8] + 1);
      double v9 = *(double *)&__src[8];
      if (qword_1E8FAFCE0 != -1)
      {
        double v16 = *((double *)&__src[5] + 1);
        double v13 = *(double *)&__src[5];
        double v14 = *((double *)&__src[7] + 1);
        long long v15 = __src[8];
        double v11 = *(double *)&__src[7];
        long long v12 = __src[4];
        swift_once();
        double v7 = v11;
        double v3 = *(double *)&v12;
        double v6 = v14;
        double v9 = *(double *)&v15;
        double v2 = *((double *)&v12 + 1);
        double v5 = v13;
        double v8 = *((double *)&v15 + 1);
        double v4 = v16;
      }
      char v1 = vabdd_f64(v7, v3) <= *(double *)&xmmword_1E8FD5800
        && vabdd_f64(v6, v2) <= *(double *)&xmmword_1E8FD5800
        && vabdd_f64(v9, v5) <= *((double *)&xmmword_1E8FD5800 + 1)
        && vabdd_f64(v8, v4) <= *((double *)&xmmword_1E8FD5800 + 1);
      break;
    case 2:
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[0] = __src[0];
      __dst[1] = __src[1];
      char v1 = __src[9];
      sub_1853B93B8((uint64_t)__dst, &qword_1E8FB2DE0);
      break;
    case 3:
      break;
    default:
      memcpy(__dst, __src, sizeof(__dst));
      char v1 = sub_1853BA72C();
      break;
  }
  sub_1853B93B8((uint64_t)v19, &qword_1E8FAFD08);
  return v1 & 1;
}

uint64_t sub_1853BA6F8(uint64_t a1)
{
  return sub_1853B59D4(a1, (uint64_t)&qword_1E8FAFD08, (uint64_t)sub_1853B5CD0, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1853B5B1C);
}

BOOL sub_1853BA72C()
{
  if ((~*(void *)(v0 + 240) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 248) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 256) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 264) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 208) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 216) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 224) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 232) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v1 = *(double *)(v0 + 168);
  double v2 = (*(double *)(v0 + 176) - *(double *)(v0 + 240)) * (*(double *)(v0 + 176) - *(double *)(v0 + 240))
     + *(double *)(v0 + 208) * v1 * (*(double *)(v0 + 208) * v1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v3 = (*(double *)(v0 + 184) - *(double *)(v0 + 248)) * (*(double *)(v0 + 184) - *(double *)(v0 + 248))
     + *(double *)(v0 + 216) * v1 * (*(double *)(v0 + 216) * v1);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v4 = (*(double *)(v0 + 192) - *(double *)(v0 + 256)) * (*(double *)(v0 + 192) - *(double *)(v0 + 256))
     + *(double *)(v0 + 224) * v1 * (*(double *)(v0 + 224) * v1);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v5 = (*(double *)(v0 + 200) - *(double *)(v0 + 264)) * (*(double *)(v0 + 200) - *(double *)(v0 + 264))
     + *(double *)(v0 + 232) * v1 * (*(double *)(v0 + 232) * v1);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if (qword_1E8FAFCE0 != -1)
  {
    double v15 = (*(double *)(v0 + 176) - *(double *)(v0 + 240)) * (*(double *)(v0 + 176) - *(double *)(v0 + 240))
        + *(double *)(v0 + 208) * v1 * (*(double *)(v0 + 208) * v1);
    double v13 = (*(double *)(v0 + 184) - *(double *)(v0 + 248)) * (*(double *)(v0 + 184) - *(double *)(v0 + 248))
        + *(double *)(v0 + 216) * v1 * (*(double *)(v0 + 216) * v1);
    double v14 = (*(double *)(v0 + 192) - *(double *)(v0 + 256)) * (*(double *)(v0 + 192) - *(double *)(v0 + 256))
        + *(double *)(v0 + 224) * v1 * (*(double *)(v0 + 224) * v1);
    double v12 = (*(double *)(v0 + 200) - *(double *)(v0 + 264)) * (*(double *)(v0 + 200) - *(double *)(v0 + 264))
        + *(double *)(v0 + 232) * v1 * (*(double *)(v0 + 232) * v1);
    swift_once();
    double v5 = v12;
    double v3 = v13;
    double v4 = v14;
    double v2 = v15;
  }
  double v7 = *((double *)&xmmword_1E8FD5800 + 1) * *((double *)&xmmword_1E8FD5800 + 1);
  double v8 = fabs(v3);
  double v9 = fabs(v4);
  return fabs(v2) <= *(double *)&xmmword_1E8FD5800 * *(double *)&xmmword_1E8FD5800
      && v8 <= *(double *)&xmmword_1E8FD5800 * *(double *)&xmmword_1E8FD5800
      && v9 <= v7
      && fabs(v5) <= v7;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_0Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

float UIAnimationDragCoefficient()
{
  int v0 = _UIInternalPreferenceUsesDefault(&dword_1EB257820, @"UIAnimationDragCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  float v1 = *(double *)&qword_1EB257828;
  if (v0) {
    float v1 = 1.0;
  }
  if (v1 <= 0.0) {
    float v2 = 1.0;
  }
  else {
    float v2 = v1;
  }
  int v3 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257830, @"UIAnimationShiftKeySlowAnimationDragCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  float v4 = *(double *)&qword_1EB257838;
  if (v3) {
    float v4 = 1.0;
  }
  if (v4 <= 0.0) {
    float v5 = 1.0;
  }
  else {
    float v5 = v4;
  }
  if (v5 != 1.0)
  {
    double v6 = [(id)UIApp _event];
    int v7 = [v6 _modifierFlags];

    if ((*(void *)&v7 & 0x20000) != 0) {
      return v5;
    }
  }
  return v2;
}

void _UITraitTokenSetInsert(uint64_t *a1, unint64_t a2, __n128 a3)
{
  uint64_t v4 = *a1;
  if (v4)
  {
    [(_UIMutableFastIndexSet *)v4 addIndex:a3];
  }
  else if (a2 < 0x100)
  {
    unint64_t v12 = a2 >> 6;
    unint64_t v13 = 255;
    if (a2 + 1 < 0xFF) {
      unint64_t v13 = a2 + 1;
    }
    if (v12 <= v13 >> 6)
    {
      uint64_t v14 = (v13 >> 6) - v12 + 1;
      double v15 = &a1[v12 + 1];
      unint64_t v16 = v12 << 6;
      unint64_t v17 = (v12 << 6) + 64;
      char v18 = v17 + a2;
      uint64_t v19 = -64 * v12;
      do
      {
        unint64_t v20 = a2 - v16;
        if (a2 >= v16) {
          char v21 = v16;
        }
        else {
          char v21 = a2;
        }
        if (a2 < v16) {
          unint64_t v20 = 0;
        }
        char v22 = v18 - v21;
        if (v17 >= a2 + 1) {
          unint64_t v23 = a2 + 1;
        }
        else {
          unint64_t v23 = v17;
        }
        unint64_t v24 = 0xFFFFFFFFFFFFFFFFLL >> (v22 - v23) << v20;
        if (v20 >= v23 + v19) {
          unint64_t v25 = 0;
        }
        else {
          unint64_t v25 = v24;
        }
        *v15++ |= v25;
        v18 += 64;
        v16 += 64;
        v17 += 64;
        v19 -= 64;
        --v14;
      }
      while (v14);
    }
  }
  else
  {
    uint64_t v5 = 0;
    *a1 = (uint64_t)-[_UIFastIndexSet initWithIndex:]((unsigned int *)[_UIMutableFastIndexSet alloc], a2);
    uint64_t v26 = 0;
    v27[0] = MEMORY[0x1E4F143A8];
    v27[1] = 3221225472;
    double v28 = ___UITraitTokenSetInsert_block_invoke;
    double v29 = &__block_descriptor_40_e12_v24__0Q8_B16l;
    double v30 = a1;
    char v31 = 0;
    while (2)
    {
      LOBYTE(v6) = 0;
      uint64_t v7 = a1[v26 + 1];
      do
      {
        if (((-1 << v6) & v7) == 0) {
          break;
        }
        unint64_t v8 = __clz(__rbit64((-1 << v6) & v7));
        unint64_t v9 = (-1 << v8) & ~v7;
        unint64_t v6 = __clz(__rbit64(v9));
        unint64_t v10 = v6 - v8;
        if (v6 != v8)
        {
          uint64_t v11 = v5 + v8;
          do
          {
            ((void (*)(void *, uint64_t, char *))v28)(v27, v11, &v31);
            if (v31) {
              return;
            }
            ++v11;
          }
          while (--v10);
        }
      }
      while (v9);
      v5 += 64;
      if (++v26 != 4) {
        continue;
      }
      break;
    }
  }
}

void _UITraitTokenSetEnumerate(uint64_t *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = *a1;
  if (v4)
  {
    -[_UIFastIndexSet enumerateIndexesUsingBlock:](v4, a2);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v12 = a1 + 1;
    uint64_t v13 = 0;
    char v14 = 0;
    while (2)
    {
      LOBYTE(v6) = 0;
      uint64_t v7 = v12[v13];
      do
      {
        if (((-1 << v6) & v7) == 0) {
          break;
        }
        unint64_t v8 = __clz(__rbit64((-1 << v6) & v7));
        unint64_t v9 = (-1 << v8) & ~v7;
        unint64_t v6 = __clz(__rbit64(v9));
        unint64_t v10 = v6 - v8;
        if (v6 != v8)
        {
          uint64_t v11 = v5 + v8;
          do
          {
            ((void (**)(void, uint64_t, char *))a2)[2](a2, v11, &v14);
            if (v14) {
              return;
            }
            ++v11;
          }
          while (--v10);
        }
      }
      while (v9);
      v5 += 64;
      if (++v13 != 4) {
        continue;
      }
      break;
    }
  }
}

unint64_t _UITraitTokenSetContains(uint16x8_t **a1, unint64_t a2)
{
  if (*a1) {
    return -[_UIFastIndexSet containsIndex:](*a1, a2);
  }
  if (a2 <= 0xFF) {
    return ((unint64_t)a1[(a2 >> 6) + 1] >> a2) & 1;
  }
  return 0;
}

uint64_t ___colorAppearanceTraitChanged_block_invoke_2(void *a1, unint64_t a2, unsigned char *a3)
{
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v14 = 0u;
  _UIGetTraitMetadataWithTraitTokenValueAcquireLock(0, a2, 0, (uint64_t)&v14);
  unint64_t v5 = a1[4];
  long long v10 = v14;
  long long v11 = v15;
  long long v12 = v16;
  uint64_t v13 = v17;
  unint64_t v6 = -[UITraitCollection _valueForTraitWithMetadata:](v5, (uint64_t)&v10);
  unint64_t v7 = a1[5];
  long long v10 = v14;
  long long v11 = v15;
  long long v12 = v16;
  uint64_t v13 = v17;
  uint64_t result = (uint64_t)-[UITraitCollection _valueForTraitWithMetadata:](v7, (uint64_t)&v10);
  if (v6 != (__CFString *)result)
  {
    if (*((void *)&v14 + 1) != 1) {
      goto LABEL_9;
    }
    uint64_t v9 = result;
    uint64_t result = v16;
    if ((void)v16)
    {
      uint64_t result = (*(uint64_t (**)(void))(v16 + 16))();
      if (result) {
        return result;
      }
LABEL_9:
      *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
      *a3 = 1;
      return result;
    }
    if (!v6) {
      goto LABEL_9;
    }
    if (!v9) {
      goto LABEL_9;
    }
    uint64_t result = -[__CFString isEqual:](v6, "isEqual:");
    if ((result & 1) == 0) {
      goto LABEL_9;
    }
  }
  return result;
}

void _UIRecordTraitUsage(unint64_t a1, unint64_t a2)
{
  if (_UITraitUsageTrackingEnabled())
  {
    TraitCollectionTSD = (uint64_t *)GetTraitCollectionTSD();
    if (!*((unsigned char *)TraitCollectionTSD + 9))
    {
      unint64_t v5 = TraitCollectionTSD;
      if (TraitCollectionTSD[18] && _UIInlinePointerSetContainsElement(TraitCollectionTSD + 2, a1))
      {
        unint64_t v7 = v5 + 19;
      }
      else
      {
        if (!v5[40] || !_UIInlinePointerSetContainsElement(v5 + 24, a1)) {
          return;
        }
        unint64_t v7 = v5 + 41;
      }
      _UITraitTokenSetInsert(v7, a2, v6);
    }
  }
}

void *GetTraitCollectionTSD()
{
  if (qword_1EB261370 != -1) {
    dispatch_once(&qword_1EB261370, &__block_literal_global_763);
  }
  int v0 = pthread_getspecific(qword_1EB261368);
  if (!v0)
  {
    int v0 = malloc_type_calloc(0x170uLL, 1uLL, 0xE74C6F93uLL);
    pthread_setspecific(qword_1EB261368, v0);
  }
  return v0;
}

uint64_t _UITraitUsageTrackingEnabled()
{
  int v0 = _UIInternalPreferenceUsesDefault_2((int *)&_UIInternalPreference_TraitUsageTrackingMode, @"TraitUsageTrackingMode");
  uint64_t v1 = qword_1EB257600;
  if (v0) {
    uint64_t v1 = 1;
  }
  if (v1 == -1) {
    return 0;
  }
  if (v1 == 1) {
    return 1;
  }
  return dyld_program_sdk_at_least();
}

uint64_t _UIInternalPreferenceUsesDefault(int *a1, uint64_t a2, uint64_t (*a3)(_DWORD *))
{
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  if (_UIInternalPreferencesRevisionVar < 1) {
    return 1;
  }
  int v7 = *a1;
  if (_UIInternalPreferencesRevisionVar == *a1) {
    return 1;
  }
  int v10 = _UIInternalPreferencesRevisionVar;
  int v8 = _UIInternalPreferencesRevisionVar;
  while (1)
  {
    BOOL v9 = v10 >= v7;
    if (v10 < v7) {
      break;
    }
    _UIInternalPreferenceSync(v8, a1, a2, a3);
    int v7 = *a1;
    uint64_t result = v9;
    if (v8 == *a1) {
      return result;
    }
  }
  return 0;
}

uint64_t _UIInternalPreferenceUsesDefault_0(int *a1, uint64_t a2)
{
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  if (_UIInternalPreferencesRevisionVar < 1) {
    return 1;
  }
  int v5 = *a1;
  if (_UIInternalPreferencesRevisionVar == *a1) {
    return 1;
  }
  int v8 = _UIInternalPreferencesRevisionVar;
  int v6 = _UIInternalPreferencesRevisionVar;
  while (1)
  {
    BOOL v7 = v8 >= v5;
    if (v8 < v5) {
      break;
    }
    _UIInternalPreferenceSync(v6, a1, a2, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
    int v5 = *a1;
    uint64_t result = v7;
    if (v6 == *a1) {
      return result;
    }
  }
  return 0;
}

uint64_t _UIInternalPreferenceUsesDefault_1(int *a1, uint64_t a2)
{
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  if (_UIInternalPreferencesRevisionVar < 1) {
    return 1;
  }
  int v5 = *a1;
  if (_UIInternalPreferencesRevisionVar == *a1) {
    return 1;
  }
  int v8 = _UIInternalPreferencesRevisionVar;
  int v6 = _UIInternalPreferencesRevisionVar;
  while (1)
  {
    BOOL v7 = v8 >= v5;
    if (v8 < v5) {
      break;
    }
    _UIInternalPreferenceSync(v6, a1, a2, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
    int v5 = *a1;
    uint64_t result = v7;
    if (v6 == *a1) {
      return result;
    }
  }
  return 0;
}

uint64_t _UIInternalPreferenceUsesDefault_2(int *a1, uint64_t a2)
{
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  if (_UIInternalPreferencesRevisionVar < 1) {
    return 1;
  }
  int v5 = *a1;
  if (_UIInternalPreferencesRevisionVar == *a1) {
    return 1;
  }
  int v8 = _UIInternalPreferencesRevisionVar;
  int v6 = _UIInternalPreferencesRevisionVar;
  while (1)
  {
    BOOL v7 = v8 >= v5;
    if (v8 < v5) {
      break;
    }
    _UIInternalPreferenceSync(v6, a1, a2, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateInteger);
    int v5 = *a1;
    uint64_t result = v7;
    if (v6 == *a1) {
      return result;
    }
  }
  return 0;
}

void _UIGetTraitMetadataWithTraitTokenValueAcquireLock(unint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 48) = 0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  if (a2 <= 0x1A)
  {
    BOOL v7 = (char *)&_UIBuiltInTraitMetadata + 56 * a2;
    long long v8 = *((_OWORD *)v7 + 1);
    *(_OWORD *)a4 = *(_OWORD *)v7;
    *(_OWORD *)(a4 + 16) = v8;
    *(_OWORD *)(a4 + 32) = *((_OWORD *)v7 + 2);
    *(void *)(a4 + 48) = *((void *)v7 + 6);
    goto LABEL_10;
  }
  if (a3) {
    os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  }
  unint64_t v10 = a2 - 27;
  unint64_t v11 = _MergedGlobals_1194;
  if (_MergedGlobals_1194 > (unint64_t)qword_1EB2623D8)
  {
    char v18 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "_UITraitMetadata _UIGetTraitMetadataWithTraitTokenValueAcquireLock(const _UITraitDataType, const NSUInteger, const BOOL)"), @"UITrait_NonARC.m", 115, @"UIKit internal inconsistency: more dynamic traits than metadata");
  }
  if (v10 < v11)
  {
    uint64_t v12 = qword_1EB2623C0 + 56 * v10;
    long long v13 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a4 = *(_OWORD *)v12;
    *(_OWORD *)(a4 + 16) = v13;
    *(_OWORD *)(a4 + 32) = *(_OWORD *)(v12 + 32);
    *(void *)(a4 + 48) = *(void *)(v12 + 48);
    if (!a3) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v19 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
  objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "_UITraitMetadata _UIGetTraitMetadataWithTraitTokenValueAcquireLock(const _UITraitDataType, const NSUInteger, const BOOL)"), @"UITrait_NonARC.m", 119, @"Invalid trait token value: %lu", a2);
  if (a3) {
LABEL_9:
  }
    os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
LABEL_10:
  if (a1)
  {
    unint64_t v14 = *(void *)(a4 + 8);
    if (v14 != a1)
    {
      long long v15 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v16 = objc_msgSend(NSString, "stringWithUTF8String:", "_UITraitMetadata _UIGetTraitMetadataWithTraitTokenValueAcquireLock(const _UITraitDataType, const NSUInteger, const BOOL)");
      uint64_t v17 = _UITraitDataTypeToString(v14);
      [v15 handleFailureInFunction:v16, @"UITrait_NonARC.m", 124, @"Data type (%@) for trait with name '%@' does not match expected data type (%@)", v17, *(void *)(a4 + 16), _UITraitDataTypeToString(a1) file lineNumber description];
    }
  }
}

BOOL _UIInlinePointerSetContainsElement(uint64_t *a1, unint64_t a2)
{
  uint64_t v2 = *a1;
  if (!*a1) {
    return 0;
  }
  uint64_t v3 = v2 - 1;
  if (v2 == 1) {
    return a1[3] == a2;
  }
  if ((((1 << (a2 >> 4)) | (1 << (a2 >> 10)) | (1 << SBYTE2(a2))) & ~a1[1]) != 0) {
    return 0;
  }
  if (a1[2]) {
    return NSHashGet((NSHashTable *)a1[2], (const void *)a2) != 0;
  }
  int v5 = (const void **)(a1 + 3);
  do
  {
    int v6 = *v5++;
    BOOL result = v6 == (const void *)a2;
  }
  while (v6 != (const void *)a2 && v3-- != 0);
  return result;
}

void _UIGetTraitMetadata(CFNumberRef number@<X1>, unint64_t a2@<X0>, uint64_t a3@<X8>)
{
  unint64_t valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberNSIntegerType, &valuePtr))
  {
    int v6 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v6 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSUInteger _getTraitTokenValue(_UITraitToken)"), @"UITrait_NonARC.m", 95, @"Invalid trait token: %@", number file lineNumber description];
  }
  _UIGetTraitMetadataWithTraitTokenValueAcquireLock(a2, valuePtr, 1, a3);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

__CFString *_NSStringFromUIContentSizeCategory(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  BOOL result = @"UICTContentSizeCategoryXS";
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      BOOL result = @"UICTContentSizeCategoryS";
      break;
    case 2:
      BOOL result = @"UICTContentSizeCategoryM";
      break;
    case 3:
      BOOL result = @"UICTContentSizeCategoryL";
      break;
    case 4:
      BOOL result = @"UICTContentSizeCategoryXL";
      break;
    case 5:
      BOOL result = @"UICTContentSizeCategoryXXL";
      break;
    case 6:
      BOOL result = @"UICTContentSizeCategoryXXXL";
      break;
    default:
      switch((unint64_t)@"UICTContentSizeCategoryXS")
      {
        case 0x10000uLL:
          BOOL result = @"UICTContentSizeCategoryAccessibilityM";
          break;
        case 0x10001uLL:
          BOOL result = @"UICTContentSizeCategoryAccessibilityL";
          break;
        case 0x10002uLL:
          BOOL result = @"UICTContentSizeCategoryAccessibilityXL";
          break;
        case 0x10003uLL:
          BOOL result = @"UICTContentSizeCategoryAccessibilityXXL";
          break;
        case 0x10004uLL:
          BOOL result = @"UICTContentSizeCategoryAccessibilityXXXL";
          break;
        default:
          BOOL result = @"_UICTContentSizeCategoryUnspecified";
          break;
      }
      break;
  }
  return result;
}

void sub_1853BC8E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

id UIColorPlaceholder()
{
  int v0 = (void *)UIColorPlaceholder___placeholder;
  if (!UIColorPlaceholder___placeholder)
  {
    uint64_t v1 = objc_opt_new();
    uint64_t v2 = (void *)UIColorPlaceholder___placeholder;
    UIColorPlaceholder___placeholder = v1;

    int v0 = (void *)UIColorPlaceholder___placeholder;
  }
  return v0;
}

void _getNSValueBytes(void *a1, void *a2, size_t a3, uint64_t a4)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  NSUInteger sizep = 0;
  NSGetSizeAndAlignment((const char *)[v7 objCType], &sizep, 0);
  uint64_t v8 = dyld_program_sdk_at_least();
  if (v8) {
    goto LABEL_10;
  }
  if (sizep > a3)
  {
    MEMORY[0x1F4188790](v8);
    unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    [v7 getValue:v10];
    memcpy(a2, v10, a3);
    unint64_t v11 = *(NSObject **)(__UILogGetCategoryCachedImpl("UIKit", &qword_1EB260E00) + 8);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v18 = a4;
      __int16 v19 = 2112;
      uint64_t v20 = (uint64_t)v7;
      _os_log_impl(&dword_1853B0000, v11, OS_LOG_TYPE_ERROR, "Getting %s from NSValue containing %@ is deprecated. In future versions this will throw an exception.", buf, 0x16u);
    }
    goto LABEL_11;
  }
  if (sizep >= a3)
  {
LABEL_10:
    [v7 getValue:a2 size:a3];
    goto LABEL_11;
  }
  uint64_t v12 = *(NSObject **)(__UILogGetCategoryCachedImpl("UIKit", &qword_1EB260E08) + 8);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    long long v13 = v12;
    uint64_t v14 = [v7 objCType];
    *(_DWORD *)buf = 136315650;
    uint64_t v18 = a4;
    __int16 v19 = 2080;
    uint64_t v20 = v14;
    __int16 v21 = 2112;
    id v22 = v7;
    _os_log_impl(&dword_1853B0000, v13, OS_LOG_TYPE_ERROR, "Attempt to obtain %s from NSValue containing %s: %@. In future versions this will throw an exception. Returning empty values.", buf, 0x20u);
  }
  bzero(a2, a3);
LABEL_11:
}

uint64_t __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  long long v3 = lhs;
  long long v4 = rhs;
  __int16 v12 = 0;
  uint64_t v5 = _UIContentSizeCategoryFromStringInternal(v3, (unsigned char *)&v12 + 1);
  uint64_t v6 = _UIContentSizeCategoryFromStringInternal(v4, &v12);
  if (HIBYTE(v12) | v12)
  {
    unint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v11 = objc_msgSend(NSString, "stringWithUTF8String:", "NSComparisonResult UIContentSizeCategoryCompareToCategory(__strong UIContentSizeCategory _Nonnull, __strong UIContentSizeCategory _Nonnull)");
    [v10 handleFailureInFunction:v11, @"UIContentSizeCategory.m", 194, @"UIContentSizeCategoryCompareToCategory cannot be used to order arbitrary strings, only UIContentSizeCategory objects (comparing %@ to %@).", v3, v4 file lineNumber description];
  }
  if (v5 >= v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = -1;
  }
  if (v5 > v6) {
    NSComparisonResult v8 = NSOrderedDescending;
  }
  else {
    NSComparisonResult v8 = v7;
  }

  return v8;
}

uint64_t _UIContentSizeCategoryFromStringInternal(void *a1, unsigned char *a2)
{
  long long v3 = a1;
  long long v4 = v3;
  uint64_t v5 = 0;
  if (v3 && v3 != @"_UICTContentSizeCategoryUnspecified")
  {
    if (v3 == @"UICTContentSizeCategoryL")
    {
      uint64_t v5 = 4;
    }
    else if (v3 == @"UICTContentSizeCategoryXS")
    {
      uint64_t v5 = 1;
    }
    else if (v3 == @"UICTContentSizeCategoryS")
    {
      uint64_t v5 = 2;
    }
    else if (v3 == @"UICTContentSizeCategoryM")
    {
      uint64_t v5 = 3;
    }
    else if (v3 == @"UICTContentSizeCategoryXL")
    {
      uint64_t v5 = 5;
    }
    else if (v3 == @"UICTContentSizeCategoryXXL")
    {
      uint64_t v5 = 6;
    }
    else if (v3 == @"UICTContentSizeCategoryXXXL")
    {
      uint64_t v5 = 7;
    }
    else if (v3 == @"UICTContentSizeCategoryAccessibilityM")
    {
      uint64_t v5 = 0x10000;
    }
    else
    {
      uint64_t v5 = 65537;
      if (v3 != @"UICTContentSizeCategoryAccessibilityL")
      {
        if (v3 == @"UICTContentSizeCategoryAccessibilityXL")
        {
          uint64_t v5 = 65538;
        }
        else if (v3 == @"UICTContentSizeCategoryAccessibilityXXL")
        {
          uint64_t v5 = 65539;
        }
        else if (v3 == @"UICTContentSizeCategoryAccessibilityXXXL")
        {
          uint64_t v5 = 65540;
        }
        else
        {
          if (_MergedGlobals_1258 != -1) {
            dispatch_once(&_MergedGlobals_1258, &__block_literal_global_545);
          }
          unint64_t v6 = [(id)qword_1EB2646A8 indexOfObject:v4];
          if (v6 == 0x7FFFFFFFFFFFFFFFLL)
          {
            uint64_t v5 = 0;
            if (a2) {
              *a2 = 1;
            }
          }
          else if (v6 >= 8)
          {
            uint64_t v5 = v6 + 65528;
          }
          else
          {
            uint64_t v5 = v6;
          }
        }
      }
    }
  }

  return v5;
}

uint64_t sub_1853BE46C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1853BE4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t *a12, void (*a13)(unsigned char *, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = a6 + 16;
  v29[0] = 0;
  double v17 = a9 / UIAnimationDragCoefficient();
  signpost_c2_removePresentationModifier_end(v18, v19);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v20);
  signpost_c2_removePresentationModifier_end(v21, v22);
  swift_beginAccess();
  sub_1853B7020(a2 + 24, (uint64_t)v28, a12);
  a13(v28, a2, a1, v29, a3, a4, a5, v16, v17, a7, a8, a10, a11);
  sub_1853B93B8((uint64_t)v28, a12);
  os_unfair_lock_unlock(v20);
  return v29[0];
}

uint64_t sub_1853BE5F8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t *, uint64_t *))v0[2];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v2;
  return v1(&v5, &v4);
}

uint64_t sub_1853BE6AC(uint64_t (*a1)(void))
{
  return a1();
}

id sub_1853BE6E0(double *a1, double *a2)
{
  return sub_1853BE71C(*(void (**)(void *))(v2 + 16), *a1, *a2, *(float *)(v2 + 44), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 52), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

id sub_1853BE71C(void (*a1)(void *), double a2, double a3, float a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  uint64_t v16 = sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
  v20[3] = v16;
  v20[0] = v15;
  if (a1) {
    a1(v20);
  }
  sub_1853B76BC((uint64_t)v20, (uint64_t)v19);
  id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a3);
  v18[3] = v16;
  v18[0] = result;
  if ((~LODWORD(a4) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a4 <= -9.2234e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a4 < 9.2234e18)
  {
    sub_1853B7874((uint64_t)v19, (uint64_t)v18, (uint64_t)a4, a7 & 1, a8, a9);
    sub_1853B93B8((uint64_t)v18, &qword_1EB256B10);
    sub_1853B93B8((uint64_t)v19, &qword_1EB256B10);
    return (id)__swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1853BE928(double a1, uint64_t a2, uint64_t a3, char a4, unsigned char *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*(unsigned char *)(a3 + 240) & 1) != 0 || (a4 & 1) != 0 || (uint64_t v22 = a6(), v21 = &unk_1E8FB0000, (v22))
  {
    *a5 = 1;
    *(unsigned char *)(v20 + 16) = 1;
LABEL_5:
    if (v21[32] != -1) {
      swift_once();
    }
    unint64_t v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a12;
    v24[4] = a13;
    v24[5] = a8;
    v24[6] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853C45A0, (uint64_t)v24);
    swift_release();
    return swift_release();
  }
  signpost_c2_removePresentationModifier_end(v22, v23);
  swift_beginAccess();
  double v26 = sub_1853BF9E8(a1);
  uint64_t v27 = swift_endAccess();
  *(double *)double v46 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (uint64_t)&v28[4];
  double v30 = v28 + 8;
  os_unfair_lock_lock(v28 + 8);
  sub_1853BED14(v29);
  os_unfair_lock_unlock(v30);
  signpost_c2_removePresentationModifier_end(v31, v32);
  char v33 = sub_1853BF7DC();
  if (v33)
  {
    sub_1853B7020(a3 + 24, (uint64_t)v46, &qword_1E8FAFB28);
    sub_1853B7020((uint64_t)v46, (uint64_t)v39, &qword_1E8FAFB28);
    double v34 = a5;
    switch(v45)
    {
      case 1:
        double v26 = *((double *)&v40 + 1);
        break;
      case 2:
        v37[3] = v41;
        v37[4] = v42;
        uint64_t v38 = v43;
        v37[0] = v39[0];
        v37[1] = v39[1];
        v37[2] = v40;
        double v26 = *(double *)&v42;
        sub_1853B93B8((uint64_t)v37, &qword_1E8FB2DD8);
        break;
      case 3:
        double v26 = *(double *)v39;
        break;
      default:
        double v26 = v44;
        break;
    }
    sub_1853B93B8((uint64_t)v46, &qword_1E8FAFB28);
    double v35 = 0.0;
  }
  else
  {
    double v35 = sub_1853BF640(&qword_1E8FAFB28, &qword_1E8FB2D20, &qword_1E8FB2D28, &qword_1E8FB2DD8);
    double v34 = a5;
  }
  *double v34 = v33 & 1;
  swift_beginAccess();
  if ((*(unsigned char *)(a9 + 8) & 1) != 0 || *(double *)a9 != v26)
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a10;
    *(void *)(v36 + 24) = a11;
    *(double *)(v36 + 32) = v26;
    *(double *)(v36 + 40) = v35;
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853BE63C, v36);
    swift_release();
    double v34 = a5;
  }
  swift_beginAccess();
  *(double *)a9 = v26;
  *(unsigned char *)(a9 + 8) = 0;
  uint64_t v21 = (void *)&unk_1E8FB0000;
  if (*v34) {
    goto LABEL_5;
  }
  return swift_release();
}

double sub_1853BED14(uint64_t a1)
{
  uint64_t v2 = *(double **)(v1 + 16);
  double result = *v2;
  *(double *)(a1 + 8) = *v2;
  return result;
}

double sub_1853BED24(uint64_t *a1, double (*a2)(uint64_t, double), double (*a3)(uint64_t, double), double a4)
{
  uint64_t v8 = sub_1853B8150(v4, (uint64_t)&v34, a1);
  switch(v45)
  {
    case 1:
      double v14 = *((double *)&v34 + 1);
      uint64_t v13 = v34;
      double v9 = *(double *)v35;
      long long v15 = *(_OWORD *)&v35[8];
      double v16 = *(double *)&v35[24];
      if (a4 > 0.0)
      {
        long long v20 = *(_OWORD *)&v35[8];
        double v21 = *(double *)v35;
        long double v17 = pow(*(long double *)&v35[8], a4 * 1000.0);
        long long v15 = v20;
        long double v18 = 1.0 - v17;
        double v14 = v14 + (v16 - v14) * v18;
        double v9 = v21 + v18 * (v14 - v21);
      }
      *(void *)uint64_t v4 = v13;
      *(double *)(v4 + 8) = v14;
      *(double *)(v4 + 16) = v9;
      *(_OWORD *)(v4 + 24) = v15;
      *(double *)(v4 + 40) = v16;
      char v12 = 1;
      goto LABEL_8;
    case 2:
      long long v10 = v36;
      *(_OWORD *)(v4 + 32) = *(_OWORD *)&v35[16];
      *(_OWORD *)(v4 + 48) = v10;
      *(_OWORD *)(v4 + 64) = v37;
      *(void *)(v4 + 80) = v38;
      long long v11 = *(_OWORD *)v35;
      *(_OWORD *)uint64_t v4 = v34;
      *(_OWORD *)(v4 + 16) = v11;
      double v9 = a3(v8, a4);
      char v12 = 2;
      goto LABEL_8;
    case 3:
      double v9 = *(double *)&v34;
      *(_OWORD *)uint64_t v4 = v34;
      char v12 = 3;
LABEL_8:
      *(unsigned char *)(v4 + 192) = v12;
      break;
    default:
      long long v30 = v41;
      long long v31 = v42;
      long long v32 = v43;
      long long v33 = v44;
      long long v26 = v37;
      long long v27 = v38;
      long long v28 = v39;
      long long v29 = v40;
      long long v22 = v34;
      long long v23 = *(_OWORD *)v35;
      long long v24 = *(_OWORD *)&v35[16];
      long long v25 = v36;
      double v9 = a2(v8, a4);
      *(_OWORD *)(v4 + 128) = v30;
      *(_OWORD *)(v4 + 144) = v31;
      *(_OWORD *)(v4 + 160) = v32;
      *(_OWORD *)(v4 + 176) = v33;
      *(_OWORD *)(v4 + 64) = v26;
      *(_OWORD *)(v4 + 80) = v27;
      *(_OWORD *)(v4 + 96) = v28;
      *(_OWORD *)(v4 + 112) = v29;
      *(_OWORD *)uint64_t v4 = v22;
      *(_OWORD *)(v4 + 16) = v23;
      *(_OWORD *)(v4 + 32) = v24;
      *(_OWORD *)(v4 + 48) = v25;
      *(unsigned char *)(v4 + 192) = 0;
      break;
  }
  return v9;
}

double sub_1853BEEE8(double a1)
{
  if (a1 <= 0.0) {
    return *(double *)(v1 + 168);
  }
  double v2 = a1;
  double v3 = *(double *)(v1 + 152);
  char v4 = *(unsigned char *)(v1 + 139);
  if (v4)
  {
    *(double *)(v1 + 176) = v3;
    *(void *)(v1 + 184) = 0;
  }
  double v5 = *(double *)(v1 + 80);
  double v6 = *(double *)(v1 + 88);
  double v7 = *(double *)(v1 + 96);
  int v8 = *(unsigned __int8 *)(v1 + 104);
  int v9 = *(unsigned __int8 *)(v1 + 137);
  char v10 = *(unsigned char *)(v1 + 138);
  if (v9)
  {
    if ((*(unsigned char *)(v1 + 138) & 1) == 0) {
      goto LABEL_33;
    }
LABEL_12:
    double v17 = *(double *)(v1 + 32);
    double v16 = *(double *)(v1 + 40);
    goto LABEL_55;
  }
  double v13 = *(double *)(v1 + 48);
  double v12 = *(double *)(v1 + 56);
  double v14 = *(double *)(v1 + 64);
  int v15 = *(unsigned __int8 *)(v1 + 72);
  if (*(double *)v1 == v13 && *(double *)(v1 + 8) == 0.0)
  {
    if (*(unsigned char *)(v1 + 138)) {
      goto LABEL_11;
    }
LABEL_33:
    double v40 = *(double *)(v1 + 16);
    if (v40 == v5 && *(double *)(v1 + 24) == 0.0) {
      goto LABEL_54;
    }
    double v44 = v40 - v5;
    double v119 = v3;
    if ((v8 - 1) <= 2)
    {
      __double2 v45 = __sincos_stret(v40 - v5);
      double v46 = atan2(v45.__sinval, v45.__cosval);
      if (v46 > 0.0 && v8 == 2) {
        double v46 = v46 + -6.28318531;
      }
      if (v46 < 0.0 && v8 == 3) {
        double v44 = v46 + 6.28318531;
      }
      else {
        double v44 = v46;
      }
    }
    double v49 = *(double *)(v1 + 24);
    double v50 = sqrt(v6);
    double v51 = v7 * 0.5;
    if (v51 >= v50)
    {
      if (v50 >= v51)
      {
        double v66 = v51 * v44 + v49;
        double v67 = v44 + v66 * v2;
        double v56 = exp(-(v51 * v2));
        double v57 = v56 * v67;
        double v64 = v56 * v66;
        double v65 = v67 * v51;
        goto LABEL_53;
      }
      double v59 = sqrt(v51 * v51 - v50 * v50);
      double v115 = v5;
      double v60 = cosh(v59 * v2);
      double v61 = 1.0 / v59 * (v51 * v44 + v49);
      double v62 = sinh(v59 * v2);
      double v55 = v44 * v60 + v61 * v62;
      double v56 = exp(-(v51 * v2));
      double v57 = v56 * v55;
      double v63 = v61 * v60;
      double v5 = v115;
      double v58 = v59 * v63 + v59 * (v44 * v62);
    }
    else
    {
      double v52 = sqrt(v50 * v50 - v51 * v51);
      __double2 v53 = __sincos_stret(v52 * v2);
      double v54 = 1.0 / v52 * (v51 * v44 + v49);
      double v55 = v53.__cosval * v44 + v53.__sinval * v54;
      double v56 = exp(-(v51 * v2));
      double v57 = v56 * v55;
      double v58 = v52 * (v53.__cosval * v54) - v52 * (v44 * v53.__sinval);
    }
    double v64 = v56 * v58;
    double v65 = v55 * v51;
LABEL_53:
    double v68 = v64 - v56 * v65;
    double v3 = v119;
    double v40 = v5 + v57;
    *(double *)(v1 + 16) = v5 + v57;
    *(double *)(v1 + 24) = v68;
    goto LABEL_54;
  }
  double v18 = *(double *)v1 - v13;
  double v118 = v3;
  double v110 = *(double *)(v1 + 88);
  double v113 = *(double *)(v1 + 96);
  if ((v15 - 1) <= 2)
  {
    __double2 v19 = __sincos_stret(*(double *)v1 - v13);
    double v20 = atan2(v19.__sinval, v19.__cosval);
    if (v20 > 0.0 && v15 == 2) {
      double v20 = v20 + -6.28318531;
    }
    if (v20 < 0.0 && v15 == 3) {
      double v18 = v20 + 6.28318531;
    }
    else {
      double v18 = v20;
    }
  }
  double v23 = *(double *)(v1 + 8);
  double v24 = sqrt(v12);
  double v25 = v14 * 0.5;
  if (v14 * 0.5 < v24)
  {
    double v26 = sqrt(v24 * v24 - v25 * v25);
    __double2 v27 = __sincos_stret(v26 * v2);
    double v28 = 1.0 / v26 * (v25 * v18 + v23);
    double v29 = v27.__cosval * v18 + v27.__sinval * v28;
    double v30 = exp(-(v25 * a1));
    double v31 = v30 * v29;
    double v32 = v26 * (v27.__cosval * v28) - v26 * (v18 * v27.__sinval);
LABEL_29:
    double v38 = v30 * v32;
    double v39 = v29 * v25;
    double v2 = a1;
    goto LABEL_32;
  }
  if (v24 < v25)
  {
    double v33 = sqrt(v25 * v25 - v24 * v24);
    double v114 = v5;
    double v34 = cosh(v33 * v2);
    double v35 = 1.0 / v33 * (v25 * v18 + v23);
    double v36 = sinh(v33 * v2);
    double v29 = v18 * v34 + v35 * v36;
    double v30 = exp(-(v25 * a1));
    double v31 = v30 * v29;
    double v37 = v35 * v34;
    double v5 = v114;
    double v32 = v33 * v37 + v33 * (v18 * v36);
    goto LABEL_29;
  }
  double v41 = v25 * v18 + v23;
  double v42 = v18 + v41 * v2;
  double v30 = exp(-(v25 * v2));
  double v31 = v30 * v42;
  double v38 = v30 * v41;
  double v39 = v42 * v25;
LABEL_32:
  double v43 = v38 - v30 * v39;
  double v3 = v118;
  double v6 = v110;
  double v7 = v113;
  *(double *)uint64_t v1 = v13 + v31;
  *(double *)(v1 + 8) = v43;
  if ((v10 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_11:
  if (v9) {
    goto LABEL_12;
  }
  double v40 = *(double *)(v1 + 16);
LABEL_54:
  double v17 = 6.28318531 / v40 * (6.28318531 / v40);
  double v69 = sqrt(v17);
  double v16 = *(double *)v1 * (v69 + v69);
  *(double *)(v1 + 32) = v17;
  *(double *)(v1 + 40) = v16;
LABEL_55:
  *(double *)(v1 + 112) = v3;
  double v71 = *(double *)(v1 + 176);
  double v70 = *(double *)(v1 + 184);
  double v72 = *(double *)(v1 + 160);
  double v11 = *(double *)(v1 + 168);
  if ((v4 & 1) == 0)
  {
    double v73 = *(double *)(v1 + 128);
    if (v71 != v3 || v70 != 0.0)
    {
      double v74 = v71 - v3;
      double v75 = sqrt(*(double *)(v1 + 120));
      double v76 = v73 * 0.5;
      double v120 = v3;
      if (v73 * 0.5 >= v75)
      {
        if (v75 >= v76)
        {
          double v88 = v70 + v74 * v76;
          double v89 = v74 + v88 * v2;
          double v81 = exp(-(v76 * v2));
          double v82 = v81 * v89;
          double v83 = v88 * v81;
          double v84 = v89 * v76;
        }
        else
        {
          double v85 = v2;
          double v86 = sqrt(v76 * v76 - v75 * v75);
          long double __x = v86 * v85;
          double v116 = cosh(v86 * v85);
          double v112 = (v70 + v74 * v76) * (1.0 / v86);
          double __xa = sinh(__x);
          double v87 = v74 * v116 + v112 * __xa;
          double v81 = exp(-(v76 * a1));
          double v82 = v81 * v87;
          double v83 = v81 * (v86 * (v112 * v116) + v86 * (v74 * __xa));
          double v84 = v87 * v76;
        }
      }
      else
      {
        double v77 = v2;
        double v78 = sqrt(v75 * v75 - v76 * v76);
        __double2 v79 = __sincos_stret(v78 * v77);
        double v80 = (v70 + v74 * v76) * (1.0 / v78);
        double v111 = v74 * v79.__cosval + v80 * v79.__sinval;
        double v81 = exp(-(v76 * a1));
        double v82 = v81 * v111;
        double v83 = v81 * (v78 * (v80 * v79.__cosval) - v78 * (v74 * v79.__sinval));
        double v84 = v111 * v76;
      }
      double v70 = v83 - v81 * v84;
      double v71 = v120 + v82;
    }
  }
  if (v11 != v71 || v72 != 0.0)
  {
    double v90 = v11 - v71;
    double v91 = sqrt(v17);
    double v92 = v16 * 0.5;
    if (v92 >= v91)
    {
      if (v91 >= v92)
      {
        double v105 = v72 + v92 * v90;
        double v106 = v90 + v105 * a1;
        double v97 = exp(-(v92 * a1));
        double v98 = v97 * v106;
        double v99 = v97 * v105;
        double v100 = v106 * v92;
      }
      else
      {
        double v101 = sqrt(v92 * v92 - v91 * v91);
        double v117 = cosh(v101 * a1);
        double v102 = 1.0 / v101 * (v72 + v92 * v90);
        double v103 = sinh(v101 * a1);
        double v104 = v90 * v117 + v102 * v103;
        double v97 = exp(-(v92 * a1));
        double v98 = v97 * v104;
        double v99 = v97 * (v101 * (v102 * v117) + v101 * (v90 * v103));
        double v100 = v104 * v92;
      }
    }
    else
    {
      double v93 = sqrt(v91 * v91 - v92 * v92);
      __double2 v94 = __sincos_stret(v93 * a1);
      double v95 = 1.0 / v93 * (v72 + v92 * v90);
      double v96 = v94.__cosval * v90 + v94.__sinval * v95;
      double v97 = exp(-(v92 * a1));
      double v98 = v97 * v96;
      double v99 = v97 * (v93 * (v94.__cosval * v95) - v93 * (v90 * v94.__sinval));
      double v100 = v96 * v92;
    }
    double v72 = v99 - v97 * v100;
    double v11 = v71 + v98;
  }
  *(double *)(v1 + 160) = v72;
  *(double *)(v1 + 168) = v11;
  *(double *)(v1 + 176) = v71;
  *(double *)(v1 + 184) = v70;
  return v11;
}

double sub_1853BF640(uint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  void (*v11)(double *__return_ptr, double *, uint64_t *, uint64_t, uint64_t, void, void, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  double v16;
  double v17;
  char v18;
  _OWORD v19[3];
  long long v20;
  long long v21;
  uint64_t v22;
  _OWORD v23[2];
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  double v28;
  char v29;

  swift_beginAccess();
  sub_1853B7020(v4 + 24, (uint64_t)v23, a1);
  double v9 = 0.0;
  switch(v29)
  {
    case 1:
      break;
    case 2:
      v19[2] = v24;
      double v20 = v25;
      double v21 = v26;
      long long v22 = v27;
      v19[0] = v23[0];
      v19[1] = v23[1];
      long long v10 = v24;
      __swift_project_boxed_opaque_existential_0Tm((void *)v19 + 1, v24);
      double v16 = *(double *)&v21 - *(double *)&v20;
      int v15 = v22;
      double v11 = *(void (**)(double *__return_ptr, double *, uint64_t *, uint64_t, uint64_t, void, void, double))(*((void *)&v10 + 1) + 32);
      double v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
      double v13 = sub_1854B2C88(a3, a2);
      v11(&v17, &v16, &v15, v12, v13, v10, *((void *)&v10 + 1), *(double *)v19);
      if (v18) {
        double v9 = 0.0;
      }
      else {
        double v9 = v17;
      }
      sub_1853B93B8((uint64_t)v19, a4);
      break;
    case 3:
      double v9 = *((double *)v23 + 1);
      break;
    default:
      double v9 = v28;
      break;
  }
  swift_endAccess();
  return v9;
}

uint64_t sub_1853BF7DC()
{
  swift_beginAccess();
  sub_1853B7020(v0 + 24, (uint64_t)v22, &qword_1E8FAFB28);
  sub_1853B7020((uint64_t)v22, (uint64_t)&v11, &qword_1E8FAFB28);
  uint64_t v1 = 1;
  switch(v21)
  {
    case 1:
      double v3 = *(double *)&v12;
      double v4 = *((double *)&v13 + 1);
      if (qword_1E8FAFB58 != -1)
      {
        double v6 = *((double *)&v13 + 1);
        double v7 = *(double *)&v12;
        swift_once();
        double v4 = v6;
        double v3 = v7;
      }
      uint64_t v1 = vabdd_f64(v4, v3) <= *(double *)&qword_1E8FD57C0;
      break;
    case 2:
      v9[3] = v14;
      v9[4] = v15;
      uint64_t v10 = v16;
      v9[0] = v11;
      v9[1] = v12;
      v9[2] = v13;
      uint64_t v1 = BYTE8(v15);
      sub_1853B93B8((uint64_t)v9, &qword_1E8FB2DD8);
      break;
    case 3:
      break;
    default:
      if ((~*(void *)&v20 & 0x7FF0000000000000) != 0 && (~*(void *)&v19 & 0x7FF0000000000000) != 0)
      {
        double v2 = v17 * v19 * (v17 * v19) + (v18 - v20) * (v18 - v20);
        if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
        {
          if (qword_1E8FAFB50 != -1)
          {
            double v8 = v17 * v19 * (v17 * v19) + (v18 - v20) * (v18 - v20);
            swift_once();
            double v2 = v8;
          }
          uint64_t v1 = fabs(v2) <= *(double *)&qword_1E8FD57B8;
        }
      }
      break;
  }
  sub_1853B93B8((uint64_t)v22, &qword_1E8FAFB28);
  return v1;
}

uint64_t sub_1853BF9B4(uint64_t a1)
{
  return sub_1853B59D4(a1, (uint64_t)&qword_1E8FAFB28, (uint64_t)sub_1853BE928, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1853BE4E8);
}

double sub_1853BF9E8(double a1)
{
  return sub_1853BED24(&qword_1E8FAFB28, (double (*)(uint64_t, double))sub_1853BF63C, (double (*)(uint64_t, double))sub_18594B4FC, a1);
}

uint64_t signpost_c2_tick_solver_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_enter_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_enter_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_solver_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_post_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_exit_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_exit_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_post_start()
{
  return kdebug_trace();
}

void *sub_1853BFAFC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      long long v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      _OWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1853C0F64(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1853BFC18(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1853BFAFC(a1, a2, a3, a4, &qword_1E8FB0108, &qword_1E8FB0170);
}

uint64_t signpost_c2_animatorFired()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_flush_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_flush_start()
{
  return kdebug_trace();
}

uint64_t sub_1853BFC80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void __UIInlinePointerSetInsertElement(uint64_t *a1, unint64_t pointer, int a3)
{
  unint64_t v6 = pointer >> 4;
  unint64_t v7 = *a1;
  unint64_t v8 = pointer >> 10;
  unint64_t v9 = pointer >> 16;
  if (!*a1) {
    goto LABEL_12;
  }
  if (v7 == 1)
  {
    if (a1[3] == pointer) {
      return;
    }
    goto LABEL_12;
  }
  if ((((1 << v6) | (1 << v8) | (1 << SBYTE2(pointer))) & ~a1[1]) != 0)
  {
LABEL_12:
    if (a3) {
      id v12 = (id)pointer;
    }
    unint64_t v13 = *a1;
    if ((unint64_t)*a1 > 0xC)
    {
      int64_t v14 = (NSHashTable *)a1[2];
      if (!v14)
      {
        uint64_t v15 = __UIInlinePointerSetCreateHashTableWithCapacity(26);
        a1[2] = (uint64_t)v15;

        uint64_t v16 = (const void **)(a1 + 3);
        do
        {
          double v17 = *v16++;
          NSHashInsert((NSHashTable *)a1[2], v17);
          --v13;
        }
        while (v13);
        int64_t v14 = (NSHashTable *)a1[2];
      }
      NSHashInsert(v14, (const void *)pointer);
      unint64_t v13 = *a1;
    }
    else
    {
      a1[v13 + 3] = pointer;
    }
    uint64_t v18 = (1 << v6) | (1 << v8) | (1 << v9) | a1[1];
    *a1 = v13 + 1;
    a1[1] = v18;
    return;
  }
  uint64_t v10 = (NSHashTable *)a1[2];
  if (v10)
  {
    if (NSHashGet(v10, (const void *)pointer)) {
      return;
    }
    goto LABEL_12;
  }
  uint64_t v11 = (void **)(a1 + 3);
  while (*v11 != (void *)pointer)
  {
    ++v11;
    if (!--v7) {
      goto LABEL_12;
    }
  }
}

void sub_1853BFE84(char a1)
{
  uint64_t v2 = sub_1853B7BC0();
  if (v2)
  {
    uint64_t v3 = v2;
    char v44 = a1;
    double v4 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
    os_unfair_lock_lock(v4);
    swift_beginAccess();
    uint64_t v5 = *(void *)(v3 + 48);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v4);
    uint64_t v45 = v5 + 64;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    uint64_t v48 = v3;
    swift_bridgeObjectRetain();
    uint64_t v49 = v3 + 72;
    swift_beginAccess();
    uint64_t v9 = 0;
    int64_t v46 = (unint64_t)(v6 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v8)
        {
          unint64_t v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          unint64_t v11 = v10 | (v9 << 6);
        }
        else
        {
          int64_t v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_59;
          }
          if (v12 >= v46) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v45 + 8 * v12);
          ++v9;
          if (!v13)
          {
            uint64_t v9 = v12 + 1;
            if (v12 + 1 >= v46) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v45 + 8 * v9);
            if (!v13)
            {
              int64_t v14 = v12 + 2;
              if (v14 >= v46)
              {
LABEL_47:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                a1 = v44;
                goto LABEL_48;
              }
              unint64_t v13 = *(void *)(v45 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  uint64_t v9 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    break;
                  }
                  if (v9 >= v46) {
                    goto LABEL_47;
                  }
                  unint64_t v13 = *(void *)(v45 + 8 * v9);
                  ++v14;
                  if (v13) {
                    goto LABEL_20;
                  }
                }
LABEL_59:
                __break(1u);
LABEL_60:
                swift_bridgeObjectRetain();
                uint64_t v40 = sub_186A1F67C();
                swift_bridgeObjectRelease();
                if (!v40) {
                  goto LABEL_61;
                }
LABEL_52:
                if (v40 >= 1)
                {
                  for (uint64_t i = 0; i != v40; ++i)
                  {
                    if ((v9 & 0xC000000000000001) != 0) {
                      id v42 = (id)MEMORY[0x18C102240](i, v9);
                    }
                    else {
                      id v42 = *(id *)(v9 + 8 * i + 32);
                    }
                    double v43 = v42;
                    objc_msgSend(v42, sel___swift_removeAllRetargetableAnimations_, 1);
                  }
                  goto LABEL_61;
                }
                __break(1u);
LABEL_64:
                __break(1u);
                return;
              }
              uint64_t v9 = v14;
            }
          }
LABEL_20:
          unint64_t v8 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
        }
        uint64_t v15 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v11);
        uint64_t v17 = *v15;
        uint64_t v16 = v15[1];
        uint64_t v18 = *(void *)v49;
        if (!*(void *)(*(void *)v49 + 16))
        {
          swift_bridgeObjectRetain();
          goto LABEL_38;
        }
        sub_186A1F9EC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_186A1E9BC();
        uint64_t v19 = sub_186A1FA4C();
        uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
        unint64_t v21 = v19 & ~v20;
        if ((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
          break;
        }
LABEL_37:
        swift_bridgeObjectRelease();
LABEL_38:
        double v28 = (os_unfair_lock_s *)(*(void *)(v48 + 16) + 16);
        os_unfair_lock_lock(v28);
        swift_beginAccess();
        uint64_t v29 = *(void *)(v48 + 48);
        if (*(void *)(v29 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v30 = sub_1853B7718(v17, v16);
          if (v31)
          {
            double v32 = (uint64_t *)(*(void *)(v29 + 56) + 16 * v30);
            uint64_t v33 = *v32;
            uint64_t v34 = v32[1];
            swift_unknownObjectRetain();
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v34 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = 0;
          uint64_t v34 = 0;
        }
        swift_endAccess();
        os_unfair_lock_unlock(v28);
        if (v33)
        {
          uint64_t ObjectType = swift_getObjectType();
          double v36 = (void *)swift_allocObject();
          v36[2] = v47;
          v36[3] = v17;
          void v36[4] = v16;
          id v37 = v47;
          sub_1853C54C4((uint64_t)sub_1854AB1C4, (uint64_t)v36, ObjectType, v34);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v22 = *(void *)(v18 + 48);
      double v23 = (void *)(v22 + 16 * v21);
      BOOL v24 = *v23 == v17 && v23[1] == v16;
      if (!v24 && (sub_186A1F85C() & 1) == 0)
      {
        uint64_t v25 = ~v20;
        do
        {
          unint64_t v21 = (v21 + 1) & v25;
          if (((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            goto LABEL_37;
          }
          double v26 = (void *)(v22 + 16 * v21);
          BOOL v27 = *v26 == v17 && v26[1] == v16;
        }
        while (!v27 && (sub_186A1F85C() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_48:
  if (a1)
  {
    id v38 = objc_msgSend(v47, sel__allSubviews);
    if (!v38) {
      goto LABEL_64;
    }
    double v39 = v38;
    sub_1853B985C(0, (unint64_t *)&qword_1E8FAFDD0);
    uint64_t v9 = sub_186A1EB3C();

    if ((unint64_t)v9 >> 62) {
      goto LABEL_60;
    }
    uint64_t v40 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v40) {
      goto LABEL_52;
    }
LABEL_61:
    swift_bridgeObjectRelease();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1853C0534(uint64_t a1)
{
  return sub_1854C1464(a1, sub_1854C14A8);
}

uint64_t sub_1853C054C()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *, _OWORD *))(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 144);
  v13[6] = *(_OWORD *)(v0 + 128);
  v13[7] = v2;
  char v14 = *(unsigned char *)(v0 + 160);
  long long v3 = *(_OWORD *)(v0 + 80);
  _OWORD v13[2] = *(_OWORD *)(v0 + 64);
  v13[3] = v3;
  long long v4 = *(_OWORD *)(v0 + 112);
  v13[4] = *(_OWORD *)(v0 + 96);
  v13[5] = v4;
  long long v5 = *(_OWORD *)(v0 + 48);
  v13[0] = *(_OWORD *)(v0 + 32);
  v13[1] = v5;
  long long v6 = *(_OWORD *)(v0 + 248);
  long long v7 = *(_OWORD *)(v0 + 280);
  v11[6] = *(_OWORD *)(v0 + 264);
  v11[7] = v7;
  char v12 = *(unsigned char *)(v0 + 296);
  long long v8 = *(_OWORD *)(v0 + 184);
  long long v9 = *(_OWORD *)(v0 + 216);
  v11[2] = *(_OWORD *)(v0 + 200);
  v11[3] = v9;
  v11[4] = *(_OWORD *)(v0 + 232);
  v11[5] = v6;
  v11[0] = *(_OWORD *)(v0 + 168);
  v11[1] = v8;
  return v1(v13, v11);
}

uint64_t sub_1853C05E8(double a1, uint64_t a2, uint64_t a3, char a4, unsigned char *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  unint64_t v21 = (void *)&unk_1E8FB0000;
  if (*(unsigned char *)(a3 + 240) & 1) != 0 || (a4 & 1) != 0 || (uint64_t v22 = a6(), v21 = &unk_1E8FB0000, (v22))
  {
    *a5 = 1;
    *(unsigned char *)(v20 + 16) = 1;
LABEL_5:
    if (v21[32] != -1) {
      swift_once();
    }
    BOOL v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a12;
    v24[4] = a13;
    v24[5] = a8;
    v24[6] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853C3E20, (uint64_t)v24);
    swift_release();
    return swift_release();
  }
  signpost_c2_removePresentationModifier_end(v22, v23);
  swift_beginAccess();
  double v26 = sub_1853C0E28(a1);
  uint64_t v27 = swift_endAccess();
  *(double *)int64_t v46 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (uint64_t)&v28[4];
  unint64_t v30 = v28 + 8;
  os_unfair_lock_lock(v28 + 8);
  sub_1853C0E10(v29);
  os_unfair_lock_unlock(v30);
  signpost_c2_removePresentationModifier_end(v31, v32);
  char v33 = sub_1853C0CB0();
  if (v33)
  {
    sub_1853B7020(a3 + 24, (uint64_t)v46, &qword_1E8FB00C0);
    sub_1853B7020((uint64_t)v46, (uint64_t)v39, &qword_1E8FB00C0);
    uint64_t v34 = a5;
    switch(v45)
    {
      case 1:
        double v26 = *((double *)&v40 + 1);
        break;
      case 2:
        v37[3] = v41;
        v37[4] = v42;
        uint64_t v38 = v43;
        v37[0] = v39[0];
        v37[1] = v39[1];
        v37[2] = v40;
        double v26 = *(double *)&v42;
        sub_1853B93B8((uint64_t)v37, &qword_1E8FB2DC0);
        break;
      case 3:
        double v26 = *(double *)v39;
        break;
      default:
        double v26 = v44;
        break;
    }
    sub_1853B93B8((uint64_t)v46, &qword_1E8FB00C0);
    double v35 = 0.0;
  }
  else
  {
    double v35 = sub_1853BF640(&qword_1E8FB00C0, &qword_1E8FB2CF0, &qword_1E8FB2CF8, &qword_1E8FB2DC0);
    uint64_t v34 = a5;
  }
  *uint64_t v34 = v33 & 1;
  swift_beginAccess();
  if ((*(unsigned char *)(a9 + 8) & 1) != 0 || *(double *)a9 != v26)
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a10;
    *(void *)(v36 + 24) = a11;
    *(double *)(v36 + 32) = v26;
    *(double *)(v36 + 40) = v35;
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853BE63C, v36);
    swift_release();
    uint64_t v34 = a5;
  }
  swift_beginAccess();
  *(double *)a9 = v26;
  *(unsigned char *)(a9 + 8) = 0;
  unint64_t v21 = (void *)&unk_1E8FB0000;
  if (*v34) {
    goto LABEL_5;
  }
  return swift_release();
}

uint64_t sub_1853C09D4(uint64_t a1)
{
  return sub_1853B59D4(a1, (uint64_t)&qword_1E8FB00C0, (uint64_t)sub_1853C05E8, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1853BE4E8);
}

uint64_t sub_1853C0A08()
{
  return sub_1853C0A14(v0[2], v0[3], v0[4]);
}

uint64_t sub_1853C0A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E8FB0118 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_beginAccess();
  long long v7 = (void *)qword_1E8FD58A8;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  qword_1E8FD58A8 = (uint64_t)v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v7 = sub_1853BFC18(0, v7[2] + 1, 1, v7);
    qword_1E8FD58A8 = (uint64_t)v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    long long v7 = sub_1853BFC18((void *)(v9 > 1), v10 + 1, 1, v7);
    qword_1E8FD58A8 = (uint64_t)v7;
  }
  v7[2] = v10 + 1;
  unint64_t v11 = &v7[2 * v10];
  v11[4] = sub_1853B59D0;
  v11[5] = v6;
  uint64_t result = swift_endAccess();
  if (byte_1E8FAFC61 == 1)
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1E8FD58B0;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1853C3C88;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = (void *)(v13 + 120);
    swift_beginAccess();
    uint64_t v17 = *(void **)(v13 + 120);
    swift_retain();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v13 + 120) = v17;
    if ((v18 & 1) == 0)
    {
      uint64_t v17 = sub_1853BFC18(0, v17[2] + 1, 1, v17);
      *uint64_t v16 = v17;
    }
    unint64_t v20 = v17[2];
    unint64_t v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      uint64_t v17 = sub_1853BFC18((void *)(v19 > 1), v20 + 1, 1, v17);
      *uint64_t v16 = v17;
    }
    v17[2] = v20 + 1;
    unint64_t v21 = &v17[2 * v20];
    v21[4] = sub_1853B59D0;
    v21[5] = v15;
    swift_endAccess();
    uint64_t result = swift_release();
    byte_1E8FAFC61 = 0;
  }
  return result;
}

uint64_t sub_1853C0CB0()
{
  swift_beginAccess();
  sub_1853B7020(v0 + 24, (uint64_t)v19, &qword_1E8FB00C0);
  sub_1853B7020((uint64_t)v19, (uint64_t)&v8, &qword_1E8FB00C0);
  uint64_t v1 = 1;
  switch(v18)
  {
    case 1:
      double v3 = vabdd_f64(*((double *)&v10 + 1), *(double *)&v9);
      double v4 = 0.001;
      goto LABEL_7;
    case 2:
      v6[3] = v11;
      v6[4] = v12;
      uint64_t v7 = v13;
      v6[0] = v8;
      v6[1] = v9;
      _OWORD v6[2] = v10;
      uint64_t v1 = BYTE8(v12);
      sub_1853B93B8((uint64_t)v6, &qword_1E8FB2DC0);
      break;
    case 3:
      break;
    default:
      if ((~*(void *)&v17 & 0x7FF0000000000000) != 0 && (~*(void *)&v16 & 0x7FF0000000000000) != 0)
      {
        double v2 = v14 * v16 * (v14 * v16) + (v15 - v17) * (v15 - v17);
        if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
        {
          double v3 = fabs(v2);
          double v4 = 0.000001;
LABEL_7:
          uint64_t v1 = v3 <= v4;
        }
      }
      break;
  }
  sub_1853B93B8((uint64_t)v19, &qword_1E8FB00C0);
  return v1;
}

double sub_1853C0E10(uint64_t a1)
{
  return sub_1853BED14(a1);
}

double sub_1853C0E28(double a1)
{
  return sub_1853BED24(&qword_1E8FB00C0, (double (*)(uint64_t, double))sub_1853BF63C, (double (*)(uint64_t, double))sub_18594B19C, a1);
}

uint64_t sub_1853C0F64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_186A1F6DC();
  __break(1u);
  return result;
}

uint64_t sub_1853C10B0()
{
  return sub_1854AA750();
}

uint64_t sub_1853C10C0()
{
  return sub_1854A0A58(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1853C10C8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v3 + 336);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 336) = v9;
    uint64_t v5 = (void *)(v3 + 128);
    swift_beginAccess();
    uint64_t v2 = *(void *)(*(void *)(v3 + 128) + 16);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    swift_beginAccess();
    unint64_t v6 = *(void **)(v3 + 128);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v3 + 128) = v6;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  unint64_t v6 = sub_1853C46D0(0, v6[2] + 1, 1, v6);
  void *v5 = v6;
LABEL_3:
  unint64_t v14 = v6[2];
  unint64_t v13 = v6[3];
  if (v14 >= v13 >> 1)
  {
    unint64_t v6 = sub_1853C46D0((void *)(v13 > 1), v14 + 1, 1, v6);
    void *v5 = v6;
  }
  _OWORD v6[2] = v14 + 1;
  double v15 = &v6[2 * v14];
  v15[4] = sub_1854A7E08;
  v15[5] = v4;
  swift_endAccess();
  return v2;
}

id sub_1853C1204()
{
  return objc_msgSend(*(id *)(v0 + 16), sel__animationDidStopWithNilAnimationFinished_, *(unsigned __int8 *)(v0 + 24));
}

void sub_1853C13A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, double a9, double a10)
{
  long long v12 = a7;
  if (a5)
  {
    double v26 = a5;
    uint64_t v27 = a6;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v23 = 1107296256;
    BOOL v24 = sub_1856A95EC;
    uint64_t v25 = &block_descriptor_772;
    char v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    if (!v12) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  char v18 = 0;
  if (a7)
  {
LABEL_3:
    double v26 = v12;
    uint64_t v27 = a8;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v23 = 1107296256;
    BOOL v24 = sub_18544192C;
    uint64_t v25 = &block_descriptor_769;
    long long v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
LABEL_4:
  unint64_t v19 = (objc_class *)_s23InProcessAnimationStateCMa();
  v30.receiver = v10;
  v30.super_class = v19;
  objc_msgSendSuper2(&v30, sel_setupWithDuration_delay_view_options_factory_parentState_start_completion_, a1, a2, a3, a4, v18, v12, a9, a10);
  _Block_release(v12);
  _Block_release(v18);
  if (objc_msgSend(v10, sel_delegate))
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v29, 0, sizeof(v29));
  }
  sub_1853B8150((uint64_t)v29, (uint64_t)&aBlock, &qword_1EB256B10);
  if (v25)
  {
    sub_1853B985C(0, &qword_1EB255C20);
    if (swift_dynamicCast())
    {
      id v20 = v28;
      objc_msgSend(v28, sel__setForcingImmediateCompletion_, 1);
    }
  }
  else
  {
    sub_1853B93B8((uint64_t)&aBlock, &qword_1EB256B10);
  }
}

uint64_t sub_1853C1608(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, uint64_t, uint64_t))
{
  return a3(v3[2], v3[3], v3[4], v3[5], v3[6], a1, a2);
}

void sub_1853C18E8(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_186A1E6BC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_186A1E72C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v42 - v13;
  if (pthread_main_np() != 1)
  {
    double v15 = CACurrentMediaTime();
    double v16 = *(void **)(v2 + 288);
    if (v16)
    {
      double v17 = v15 - a1;
      double v18 = *(double *)(v2 + 240);
      uint64_t v42 = v9;
      id v43 = v16;
      if (v18 == 0.0)
      {
        unint64_t v19 = self;
        id v20 = v43;
        id v21 = objc_msgSend(v19, sel_mainScreen);
        id v22 = objc_msgSend(v21, sel_maximumFramesPerSecond);

        if ((uint64_t)v22 <= 0)
        {
          double v25 = 60.06;
        }
        else
        {
          id v23 = objc_msgSend(v19, sel_mainScreen);
          id v24 = objc_msgSend(v23, sel_maximumFramesPerSecond);

          double v25 = (double)(uint64_t)v24 * 1.001;
        }
        double v18 = 1.0 / v25;
        *(double *)(v2 + 240) = 1.0 / v25;
        uint64_t v9 = v42;
      }
      else
      {
        id v26 = v16;
      }
      double v27 = v18 * 0.4;
      if (v17 < v18 * 0.4)
      {
        if (v18 == 0.0)
        {
          id v28 = self;
          id v29 = objc_msgSend(v28, sel_mainScreen);
          uint64_t v30 = (uint64_t)objc_msgSend(v29, sel_maximumFramesPerSecond);

          if (v30 < 1)
          {
            double v33 = 60.06;
          }
          else
          {
            id v31 = objc_msgSend(v28, sel_mainScreen);
            id v32 = objc_msgSend(v31, sel_maximumFramesPerSecond);

            double v33 = (double)(uint64_t)v32 * 1.001;
          }
          double v35 = 1.0 / v33;
          *(double *)(v2 + 240) = v35;
          double v27 = v35 * 0.4;
          uint64_t v9 = v42;
        }
        double v36 = (v27 - v17) * 1000000000.0;
        sub_186A1E70C();
        if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
        {
          if (v36 > -9.22337204e18)
          {
            if (v36 < 9.22337204e18)
            {
              *uint64_t v7 = (uint64_t)v36;
              (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCAA8], v4);
              sub_186A1E71C();
              (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
              id v37 = *(void (**)(char *, uint64_t))(v9 + 8);
              v37(v12, v8);
              sub_186A1F01C();
              uint64_t v38 = *(NSObject **)(v2 + 248);
              uint64_t v39 = swift_allocObject();
              *(void *)(v39 + 16) = sub_1853C2A08;
              *(void *)(v39 + 24) = v2;
              aBlock[4] = sub_1853BE6D4;
              aBlock[5] = v39;
              aBlock[0] = MEMORY[0x1E4F143A8];
              aBlock[1] = 1107296256;
              aBlock[2] = sub_1853BE46C;
              aBlock[3] = &block_descriptor_94_0;
              long long v40 = _Block_copy(aBlock);
              swift_retain();
              swift_retain();
              swift_release();
              dispatch_sync(v38, v40);
              _Block_release(v40);

              v37(v14, v8);
              char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
              swift_release();
              swift_release();
              if ((isEscapingClosureAtFileLocation & 1) == 0) {
                return;
              }
LABEL_26:
              __break(1u);
              return;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_25;
      }
      id v34 = v43;
    }
  }
}

uint64_t sub_1853C1E20()
{
  return sub_18549CE60(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

void sub_1853C1E2C()
{
  sub_1853C1E34(v0);
}

void sub_1853C1E34(uint64_t a1)
{
  if (pthread_main_np() == 1)
  {
    uint64_t v2 = *(void **)(a1 + 288);
    if (!v2) {
      return;
    }
    id v5 = v2;
    sub_186A1F03C();
    uint64_t v3 = v5;
  }
  else
  {
    dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
    uint64_t v3 = *(void **)(a1 + 288);
    *(void *)(a1 + 288) = v4;
  }
}

uint64_t sub_1853C1EB8()
{
  return sub_1853C1ED8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 56), *(void (**)(uint64_t))(v0 + 72), *(double *)(v0 + 48), *(double *)(v0 + 64));
}

uint64_t sub_1853C1ED8(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, char a5, void (*a6)(uint64_t), double a7, double a8)
{
  uint64_t v16 = MEMORY[0x18C1074C0]();
  sub_1853B51A8(a1, a2, a3, a7, a8, a4, a5, a6);
  return MEMORY[0x1F41813D0](v16);
}

uint64_t sub_1853C1F88(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1853C20E0((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1853C20E0((uint64_t)v7, v4, v2);
    MEMORY[0x18C109220](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1853C20E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  double v18 = (unint64_t *)result;
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v20 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(a3 + 48) + 8 * v10);
    sub_1853B7020(*(void *)(a3 + 56) + 8 * v10, (uint64_t)v24, &qword_1E8FAFFA0);
    uint64_t v22 = v11;
    sub_1853B7020((uint64_t)v24, (uint64_t)&v23, &qword_1E8FAFFA0);
    sub_1853B7020((uint64_t)&v23, (uint64_t)&v21, &qword_1E8FAFFA0);
    long long v12 = (void *)MEMORY[0x18C109380](&v21);
    sub_1853B93B8((uint64_t)&v22, &qword_1E8FAFFA8);
    sub_1853B93B8((uint64_t)&v21, &qword_1E8FAFFA0);
    if (v12)
    {

      uint64_t result = sub_1853B93B8((uint64_t)v24, &qword_1E8FAFFA0);
      *(unint64_t *)((char *)v18 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
        return sub_1853C2320(v18, a2, v19, a3);
      }
    }
    else
    {
      uint64_t result = sub_1853B93B8((uint64_t)v24, &qword_1E8FAFFA0);
    }
  }
  int64_t v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= v20) {
    return sub_1853C2320(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v5 + 8 * v13);
  ++v4;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 1;
  if (v13 + 1 >= v20) {
    return sub_1853C2320(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v5 + 8 * v4);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 2;
  if (v13 + 2 >= v20) {
    return sub_1853C2320(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v5 + 8 * v4);
  if (v14)
  {
LABEL_21:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_5;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v20) {
    return sub_1853C2320(v18, a2, v19, a3);
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v20) {
      return sub_1853C2320(v18, a2, v19, a3);
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1853C2320(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFFD0);
  uint64_t result = sub_186A1F6CC();
  uint64_t v9 = result;
  uint64_t v30 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v30[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v30[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v30[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v30[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    sub_1853B7020(*(void *)(v4 + 56) + v18, (uint64_t)v32, &qword_1E8FAFFA0);
    sub_1853B8150((uint64_t)v32, (uint64_t)v31, &qword_1E8FAFFA0);
    uint64_t result = sub_186A1F9DC();
    uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = 8 * v23;
    *(void *)(*(void *)(v9 + 48) + v28) = v19;
    uint64_t result = sub_1853B8150((uint64_t)v31, *(void *)(v9 + 56) + v28, &qword_1E8FAFFA0);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1853C25C0()
{
  sub_1854A0F80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1853C263C()
{
  sub_1853C2648(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char **)(v0 + 32));
}

void sub_1853C2648(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v6 = sub_186A1E6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_186A1E6FC();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 327) == 1)
  {
    objc_msgSend(a2, sel_invalidate, v12);
    uint64_t v15 = *(void **)(a1 + 312);
    *(void *)(a1 + 312) = 0;

    *a3 = 1;
    if (qword_1E8FB0070 != -1) {
      swift_once();
    }
    uint64_t v23 = v7;
    uint64_t v16 = sub_186A1E5CC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1E8FB0050);
    uint64_t v17 = sub_186A1E5AC();
    os_log_type_t v18 = sub_186A1EEAC();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1853B0000, v17, v18, "CADisplayLink was invalidated", v19, 2u);
      MEMORY[0x18C109220](v19, -1, -1);
    }

    sub_1853B985C(0, (unint64_t *)&qword_1EB256300);
    uint64_t v20 = (void *)sub_186A1EF9C();
    aBlock[4] = sub_1858B9928;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1856A95EC;
    aBlock[3] = &block_descriptor_177;
    unint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_186A1E6DC();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1854A2CAC((unint64_t *)&qword_1E8FB0138, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB0140);
    sub_1854B2C88((unint64_t *)&qword_1E8FB0148, &qword_1E8FB0140);
    sub_186A1F21C();
    MEMORY[0x18C101DF0](0, v14, v9, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

void sub_1853C2A08()
{
  uint64_t v1 = *(void **)(v0 + 288);
  *(void *)(v0 + 288) = 0;
}

void sub_1853C2A18()
{
  sub_1853C2A20(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1853C2A20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x18C109380](a1 + 24);
  if (v3)
  {
    id v8 = (id)v3;
    signpost_c2_removePresentationModifier_end(v3, v4);
    id v5 = objc_msgSend(v8, sel_layer);
    objc_msgSend(v5, sel_removePresentationModifier_, a2);

    signpost_c2_removePresentationModifier_end(v6, v7);
  }
}

id sub_1853C2AD8(uint64_t a1)
{
  sub_1853B7BB0((_OWORD *)a1, &v7);
  uint64_t v2 = sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
  swift_dynamicCast();
  objc_msgSend(v6, sel_doubleValue);
  double v4 = v3;

  if (v4 <= 0.0) {
    double v4 = 0.0;
  }
  id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v4);
  *(void *)(a1 + 24) = v2;
  *(void *)a1 = result;
  return result;
}

uint64_t sub_1853C2BA0(double a1, uint64_t a2, uint64_t a3, char a4, unsigned char *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  unint64_t v21 = (void *)&unk_1E8FB0000;
  if (*(unsigned char *)(a3 + 384) & 1) != 0 || (a4 & 1) != 0 || (uint64_t v22 = a6(), v21 = &unk_1E8FB0000, (v22))
  {
    *a5 = 1;
    *(unsigned char *)(v20 + 16) = 1;
LABEL_5:
    if (v21[32] != -1) {
      swift_once();
    }
    char v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a12;
    v24[4] = a13;
    v24[5] = a8;
    v24[6] = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1858BA75C, (uint64_t)v24);
    swift_release();
    return swift_release();
  }
  signpost_c2_removePresentationModifier_end(v22, v23);
  double v26 = sub_1853B8E24(&qword_1E8FAED88, &qword_1E8FB2D40, &qword_1E8FB2D48, a1);
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  *(double *)&long long v48 = v26;
  *(void *)&long long v49 = v31;
  *(double *)double v64 = v26;
  *(double *)&v64[1] = v27;
  v64[2] = v31;
  *(double *)&v64[3] = v29;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t)&v33[4];
  double v35 = v33 + 20;
  os_unfair_lock_lock(v33 + 20);
  sub_1853B9028(v34);
  os_unfair_lock_unlock(v35);
  signpost_c2_removePresentationModifier_end(v36, v37);
  char v38 = sub_1853C306C();
  if (v38)
  {
    swift_beginAccess();
    sub_1853B7020(a3 + 24, (uint64_t)v64, &qword_1E8FAED88);
    sub_1853B7020((uint64_t)v64, (uint64_t)&v51, &qword_1E8FAED88);
    switch(v63)
    {
      case 1:
        long long v49 = v59;
        long long v39 = v58;
        goto LABEL_16;
      case 2:
        v50[6] = v57;
        v50[7] = v58;
        v50[8] = v59;
        v50[9] = v60;
        v50[2] = v53;
        v50[3] = v54;
        v50[4] = v55;
        v50[5] = v56;
        v50[0] = v51;
        v50[1] = v52;
        long long v48 = v58;
        long long v49 = v59;
        sub_1853B93B8((uint64_t)v50, &qword_1E8FB2DE8);
        goto LABEL_17;
      case 3:
        long long v49 = v52;
        long long v39 = v51;
        goto LABEL_16;
      default:
        long long v49 = v62;
        long long v39 = v61;
LABEL_16:
        long long v48 = v39;
LABEL_17:
        sub_1853B93B8((uint64_t)v64, &qword_1E8FAED88);
        CGFloat v28 = *((double *)&v48 + 1);
        CGFloat v30 = *((double *)&v49 + 1);
        double v40 = 0.0;
        uint64_t v42 = 0;
        uint64_t v44 = 0;
        uint64_t v46 = 0;
        break;
    }
  }
  else
  {
    double v40 = sub_1853BA3FC(&qword_1E8FAED88, &qword_1E8FB2D40, &qword_1E8FB2D48, &qword_1E8FB2DE8);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
  }
  *a5 = v38 & 1;
  swift_beginAccess();
  if ((*(unsigned char *)(a9 + 32) & 1) != 0
    || (*(void *)&v65.origin.x = v48,
        *(void *)&v65.size.width = v49,
        v65.origin.double y = v28,
        v65.size.double height = v30,
        !CGRectEqualToRect(*(CGRect *)a9, v65)))
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    id v47 = (CGFloat *)swift_allocObject();
    *((void *)v47 + 2) = a10;
    *((void *)v47 + 3) = a11;
    *((void *)v47 + 4) = v48;
    v47[5] = v28;
    *((void *)v47 + 6) = v49;
    v47[7] = v30;
    v47[8] = v40;
    *((void *)v47 + 9) = v42;
    *((void *)v47 + 10) = v44;
    *((void *)v47 + 11) = v46;
    swift_retain();
    sub_1853B65C4((uint64_t)sub_1853B5C78, (uint64_t)v47);
    swift_release();
  }
  swift_beginAccess();
  *(void *)a9 = v48;
  *(CGFloat *)(a9 + 8) = v28;
  *(void *)(a9 + 16) = v49;
  *(CGFloat *)(a9 + 24) = v30;
  *(unsigned char *)(a9 + 32) = 0;
  unint64_t v21 = (void *)&unk_1E8FB0000;
  if (*a5) {
    goto LABEL_5;
  }
  return swift_release();
}

uint64_t sub_1853C306C()
{
  swift_beginAccess();
  sub_1853B7020(v0 + 24, (uint64_t)v5, &qword_1E8FAED88);
  sub_1853B7020((uint64_t)v5, (uint64_t)__src, &qword_1E8FAED88);
  char v1 = 1;
  switch(v4)
  {
    case 1:
      char v1 = vabdd_f64(*(double *)&__src[7], *(double *)&__src[4]) <= 0.001
        && vabdd_f64(*((double *)&__src[7] + 1), *((double *)&__src[4] + 1)) <= 0.001
        && vabdd_f64(*(double *)&__src[8], *(double *)&__src[5]) <= 0.001
        && vabdd_f64(*((double *)&__src[8] + 1), *((double *)&__src[5] + 1)) <= 0.001;
      break;
    case 2:
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[0] = __src[0];
      __dst[1] = __src[1];
      char v1 = __src[9];
      sub_1853B93B8((uint64_t)__dst, &qword_1E8FB2DE8);
      break;
    case 3:
      break;
    default:
      memcpy(__dst, __src, sizeof(__dst));
      char v1 = sub_1853C3220();
      break;
  }
  sub_1853B93B8((uint64_t)v5, &qword_1E8FAED88);
  return v1 & 1;
}

uint64_t sub_1853C31EC(uint64_t a1)
{
  return sub_1853B59D4(a1, (uint64_t)&qword_1E8FAED88, (uint64_t)sub_1853C2BA0, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1853B5B1C);
}

BOOL sub_1853C3220()
{
  if ((~*(void *)(v0 + 240) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 248) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 256) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 264) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 208) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 216) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 224) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  if ((~*(void *)(v0 + 232) & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v1 = *(double *)(v0 + 168);
  double v2 = (*(double *)(v0 + 176) - *(double *)(v0 + 240)) * (*(double *)(v0 + 176) - *(double *)(v0 + 240))
     + *(double *)(v0 + 208) * v1 * (*(double *)(v0 + 208) * v1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v3 = (*(double *)(v0 + 184) - *(double *)(v0 + 248)) * (*(double *)(v0 + 184) - *(double *)(v0 + 248))
     + *(double *)(v0 + 216) * v1 * (*(double *)(v0 + 216) * v1);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v4 = (*(double *)(v0 + 192) - *(double *)(v0 + 256)) * (*(double *)(v0 + 192) - *(double *)(v0 + 256))
     + *(double *)(v0 + 224) * v1 * (*(double *)(v0 + 224) * v1);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  double v5 = (*(double *)(v0 + 200) - *(double *)(v0 + 264)) * (*(double *)(v0 + 200) - *(double *)(v0 + 264))
     + *(double *)(v0 + 232) * v1 * (*(double *)(v0 + 232) * v1);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  BOOL result = 0;
  if (fabs(v2) <= 0.000001 && fabs(v3) <= 0.000001 && fabs(v4) <= 0.000001) {
    return fabs(v5) <= 0.000001;
  }
  return result;
}

uint64_t sub_1853C3668()
{
  return sub_1853C3680((uint64_t (*)(void, void, uint64_t, void, void, void, void, void, double, double, double, double, float, float, float, void, char, void, void))sub_1854AE4E8);
}

uint64_t sub_1853C3680(uint64_t (*a1)(void, void, uint64_t, void, void, void, void, void, double, double, double, double, float, float, float, void, char, void, void))
{
  int v4 = *(_DWORD *)(v1 + 156);
  char v3 = *(unsigned char *)(v1 + 152);
  return a1(*(void *)(v1 + 24), *(unsigned __int8 *)(*(void *)(v1 + 24)+ OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive), v1 + 64, *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(float *)(v1 + 160), *(float *)(v1 + 164), *(float *)(v1 + 168), *(void *)(v1 + 144), v3, *(void *)(v1 + 176),
           *(void *)(v1 + 184));
}

uint64_t sub_1853C3704()
{
  return sub_1853C370C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1853C370C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1853C3734()
{
  return sub_1854A5E7C((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double, uint64_t, char, unint64_t, _DWORD, uint64_t, uint64_t))sub_1854AD06C);
}

uint64_t sub_1853C374C()
{
  return sub_1854A8F2C(v0);
}

uint64_t sub_1853C3754()
{
  return sub_1853C1608((uint64_t)&qword_1E8FAFD90, (uint64_t)sub_1854A8378, (uint64_t (*)(void, void, void, void, void, uint64_t, uint64_t))sub_1853C3788);
}

void sub_1853C3788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = a5 + 16;
  signpost_c2_removePresentationModifier_end(a1, a2);
  unint64_t v14 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v14);
  signpost_c2_removePresentationModifier_end(v15, v16);
  swift_beginAccess();
  sub_1853B7020(a1 + 24, (uint64_t)v17, a6);
  a7(v17, a1, a2, a3, a4, v13);
  sub_1853B93B8((uint64_t)v17, a6);
  os_unfair_lock_unlock(v14);
}

uint64_t sub_1853C385C()
{
  return sub_1854A8E6C(v0);
}

void sub_1853C3864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = a5 + 16;
  signpost_c2_removePresentationModifier_end(a1, a2);
  unint64_t v14 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v14);
  signpost_c2_removePresentationModifier_end(v15, v16);
  swift_beginAccess();
  sub_1853B7020(a1 + 24, (uint64_t)v17, a6);
  a7(v17, a1, a2, a3, a4, v13);
  sub_1853B93B8((uint64_t)v17, a6);
  os_unfair_lock_unlock(v14);
}

uint64_t sub_1853C3938()
{
  return sub_1853C1608((uint64_t)&qword_1E8FAFD08, (uint64_t)sub_1854A8208, (uint64_t (*)(void, void, void, void, void, uint64_t, uint64_t))sub_1853C3864);
}

uint64_t sub_1853C39E4(uint64_t (*a1)(void, void, uint64_t, void, void, void, void, void, double, double, float, float, float, void, char, void, void))
{
  int v4 = *(_DWORD *)(v1 + 140);
  char v3 = *(unsigned char *)(v1 + 136);
  return a1(*(void *)(v1 + 24), *(unsigned __int8 *)(*(void *)(v1 + 24)+ OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive), v1 + 48, *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(double *)(v1 + 32), *(double *)(v1 + 40), *(float *)(v1 + 144), *(float *)(v1 + 148), *(float *)(v1 + 152), *(void *)(v1 + 128), v3, *(void *)(v1 + 160), *(void *)(v1 + 168));
}

void sub_1853C3A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = a5 + 16;
  signpost_c2_removePresentationModifier_end(a1, a2);
  unint64_t v14 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v14);
  signpost_c2_removePresentationModifier_end(v15, v16);
  swift_beginAccess();
  sub_1853B7020(a1 + 24, (uint64_t)v17, a6);
  a7(v17, a1, a2, a3, a4, v13);
  sub_1853B93B8((uint64_t)v17, a6);
  os_unfair_lock_unlock(v14);
}

uint64_t sub_1853C3B34()
{
  return sub_1853C3B3C(v0);
}

uint64_t sub_1853C3B3C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 152);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    *(void *)(result + 152) = v3;
    if (!v3)
    {
      double v5 = *(os_unfair_lock_s **)(result + 32);
      id v6 = v5 + 4;
      long long v7 = v5 + 6;
      os_unfair_lock_lock(v5 + 6);
      sub_1854AEC24(v6, v11);
      os_unfair_lock_unlock(v7);
      uint64_t v8 = v11[0];
      BOOL result = swift_release();
      if (!v8)
      {
        BOOL result = swift_beginAccess();
        if ((*(unsigned char *)(v4 + 113) & 1) == 0)
        {
          uint64_t v9 = *(void (**)(uint64_t))(v4 + 168);
          uint64_t v10 = swift_retain();
          v9(v10);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1853C3C88()
{
  return sub_1854A29D4(*(void *)(v0 + 16));
}

uint64_t sub_1853C3C90()
{
  return sub_1853C39E4((uint64_t (*)(void, void, uint64_t, void, void, void, void, void, double, double, float, float, float, void, char, void, void))sub_1854B67F0);
}

uint64_t sub_1853C3CA8()
{
  return sub_1853C3CB0(*(void *)(v0 + 16));
}

uint64_t sub_1853C3CB0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback);
  if (v1)
  {
    uint64_t v2 = *(void *)(result
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback
                   + 8);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    v5[4] = sub_1853BE6D4;
    v5[5] = v3;
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 1107296256;
    _OWORD v5[2] = sub_1853BE46C;
    v5[3] = &block_descriptor_31;
    uint64_t v4 = (uint64_t)_Block_copy(v5);
    sub_1854B0A60(v1);
    sub_1854B0A60(v1);
    swift_retain();
    swift_release();
    __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v4);
    _Block_release((const void *)v4);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    sub_1854AFD40(v1);
    BOOL result = sub_1854AFD40(v1);
    if (v4) {
      __break(1u);
    }
  }
  return result;
}

__n128 __swift_memcpy80_4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1853C3E20()
{
  return sub_1853C1608((uint64_t)&qword_1E8FB00C0, (uint64_t)sub_1854A8098, (uint64_t (*)(void, void, void, void, void, uint64_t, uint64_t))sub_1853C3A60);
}

uint64_t sub_1853C3E54()
{
  return sub_1853C39E4((uint64_t (*)(void, void, uint64_t, void, void, void, void, void, double, double, float, float, float, void, char, void, void))sub_1853C3E6C);
}

uint64_t sub_1853C3E6C(double a1, double a2, float a3, float a4, float a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  void (*v29)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  BOOL v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v49;
  NSObject *v53;
  uint64_t v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  unsigned __int8 v71;
  void v72[24];
  char v73;
  void v74[11];
  double v75;
  double v76[2];

  double v75 = a2;
  v76[0] = a1;
  uint64_t v22 = a8[3];
  uint64_t v23 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v22);
  swift_beginAccess();
  uint64_t v24 = *(unsigned __int8 *)(v18 + 113);
  long long v56 = v18;
  unint64_t v25 = *(os_unfair_lock_s **)(v18 + 32);
  double v26 = v25 + 4;
  double v27 = v25 + 6;
  os_unfair_lock_lock(v25 + 6);
  long long v57 = v26;
  sub_1854AEC24(v26, v72);
  long long v58 = v27;
  os_unfair_lock_unlock(v27);
  uint64_t v28 = v72[0];
  if (v72[0])
  {
    swift_beginAccess();
    sub_1853B7020(v28 + 24, (uint64_t)v72, &qword_1E8FAFB28);
    swift_release();
  }
  else
  {
    memset(v72, 0, sizeof(v72));
    double v73 = -1;
  }
  double v29 = *(void (**)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v23 + 16);
  CGFloat v30 = sub_1854B62C0();
  v29(v74, v24, v72, v76, &v75, &type metadata for UIAnimatableScaledFloat, v30, v22, v23);
  sub_1853B93B8((uint64_t)v72, &qword_1E8FAFB30);
  os_unfair_lock_lock(v27);
  sub_1854AEC24(v57, v72);
  os_unfair_lock_unlock(v27);
  uint64_t v31 = v72[0];
  if (v72[0])
  {
    swift_beginAccess();
    sub_1853B7020(v31 + 24, (uint64_t)&v59, &qword_1E8FAFB28);
    swift_release();
  }
  else
  {
    double v69 = 0u;
    double v70 = 0u;
    double v67 = 0u;
    double v68 = 0u;
    CGRect v65 = 0u;
    double v66 = 0u;
    char v63 = 0u;
    double v64 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    double v71 = -1;
  }
  swift_beginAccess();
  sub_1854B36BC((uint64_t)&v59, (uint64_t)v74, a7 & 1, &qword_1E8FAFB30, &qword_1E8FB2D20, &qword_1E8FB2D28, &qword_1E8FAFB28, (uint64_t)v72, v76[0], v75, &qword_1E8FB2DD8);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v59, &qword_1E8FAFB30);
  os_unfair_lock_lock(v27);
  sub_1854AEC24(v57, &v59);
  os_unfair_lock_unlock(v27);
  uint64_t v32 = v59;
  if ((void)v59)
  {
    double v33 = *(void (**)(void))(v59 + 224);
    if (v33)
    {
      *(void *)(v59 + 224) = 0;
      *(void *)(v32 + 232) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v33);
      v33(0);
      sub_1854AFD40((uint64_t)v33);
    }
    *(unsigned char *)(v32 + 240) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v72, (uint64_t)&v59, &qword_1E8FAFB28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFB38);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 224) = 0;
  *(void *)(v34 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v59, v34 + 24, &qword_1E8FAFB28);
  *(_WORD *)(v34 + 240) = 0;
  double v35 = *(void *)(v34 + 224);
  *(void *)(v34 + 224) = a17;
  *(void *)(v34 + 232) = a18;
  swift_retain();
  sub_1854AFD40(v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(void *)(v34 + 16) = v36;
  if (a15) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v56 + 72) & 1) == 0) {
    sub_185952CF4(&qword_1E8FAFB28, *(double *)(v56 + 64));
  }
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(unsigned char *)(v37 + 24) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  long long v49 = qword_1E8FD58B0;
  char v38 = *(unsigned char *)(v56 + 144);
  sub_1853B7020((uint64_t)v72, (uint64_t)&v59, &qword_1E8FAFB28);
  long long v39 = v71;
  if (v71 == 2) {
    sub_1853B93B8((uint64_t)&v59, &qword_1E8FAFB28);
  }
  double v40 = v39 == 2;
  uint64_t v41 = (void *)swift_allocObject();
  v41[2] = v34;
  v41[3] = a9;
  v41[4] = a10;
  v41[5] = v56;
  v41[6] = v37;
  v41[7] = a11;
  v41[8] = a12;
  v41[9] = a13;
  v41[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  uint64_t v42 = swift_allocObject();
  *(float *)(v42 + 16) = a3;
  *(float *)(v42 + 20) = a4;
  *(float *)(v42 + 24) = a5;
  *(_DWORD *)(v42 + 28) = a16;
  *(unsigned char *)(v42 + 32) = v38;
  *(unsigned char *)(v42 + 33) = v40;
  *(void *)(v42 + 40) = sub_1853BF9B4;
  *(void *)(v42 + 48) = v41;
  long long v53 = *(NSObject **)(v49 + 264);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v49;
  *(void *)(v43 + 24) = v42;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1853C10BC;
  *(void *)(v44 + 24) = v43;
  *(void *)&long long v61 = sub_1853BE6D4;
  *((void *)&v61 + 1) = v44;
  *(void *)&long long v59 = MEMORY[0x1E4F143A8];
  *((void *)&v59 + 1) = 1107296256;
  *(void *)&long long v60 = sub_1853BE46C;
  *((void *)&v60 + 1) = &block_descriptor_621;
  uint64_t v45 = _Block_copy(&v59);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v53, v45);
  _Block_release(v45);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  __n128 result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v58);
    sub_1854AEC5C(v57);
    os_unfair_lock_unlock(v58);
    swift_release_n();
    sub_1853B93B8((uint64_t)v72, &qword_1E8FAFB28);
    sub_1854AECBC((uint64_t)v74);
    return swift_release();
  }
  return result;
}

void sub_1853C4594()
{
  sub_18549FE88(*(os_unfair_lock_s **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1853C45A0()
{
  return sub_1853C1608((uint64_t)&qword_1E8FAFB28, (uint64_t)sub_1854A8098, (uint64_t (*)(void, void, void, void, void, uint64_t, uint64_t))sub_1853C3A60);
}

void *sub_1853C46D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1853BFAFC(a1, a2, a3, a4, &qword_1E8FAFFF0, &qword_1E8FB0170);
}

void sub_1853C46E8()
{
  sub_1853C46FC(*(void *)(v0 + 16), *(void *)(v0 + 40), *(float *)(v0 + 24), *(float *)(v0 + 28), *(float *)(v0 + 32));
}

void sub_1853C46FC(uint64_t a1, uint64_t a2, float a3, float a4, float a5)
{
  double v5 = *(void **)(a1 + 312);
  if (v5)
  {
    id v13 = v5;
    *(float *)&double v10 = a3;
    *(float *)&double v11 = a4;
    *(float *)&double v12 = a5;
    objc_msgSend(v13, sel_setPreferredFrameRateRange_, v10, v11, v12);
    sub_185826818(v13, a2);
  }
}

uint64_t sub_1853C4AC4()
{
  return sub_1853C4ADC((uint64_t (*)(void, void, void, void, void))sub_1854A3E7C);
}

uint64_t sub_1853C4ADC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1853C4AF8()
{
  return sub_1853C4B00(v0);
}

uint64_t sub_1853C4B00(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 752);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    *(void *)(result + 752) = v3;
    if (!v3)
    {
      double v5 = *(os_unfair_lock_s **)(result + 32);
      id v6 = v5 + 4;
      long long v7 = v5 + 6;
      os_unfair_lock_lock(v5 + 6);
      sub_1854AEC24(v6, v11);
      os_unfair_lock_unlock(v7);
      uint64_t v8 = v11[0];
      __n128 result = swift_release();
      if (!v8)
      {
        __n128 result = swift_beginAccess();
        if ((*(unsigned char *)(v4 + 593) & 1) == 0)
        {
          uint64_t v9 = *(void (**)(uint64_t))(v4 + 768);
          uint64_t v10 = swift_retain();
          v9(v10);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1853C4C40(unint64_t a1)
{
  uint64_t v5 = *(void *)(v2 + 336);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    unint64_t v1 = a1;
    *(void *)(v2 + 336) = v7;
    uint64_t v4 = (uint64_t *)(v2 + 128);
    swift_beginAccess();
    uint64_t v3 = *(void **)(v2 + 128);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 128) = v3;
    if (result)
    {
      if ((v1 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  uint64_t result = (uint64_t)sub_185AFA238(v3);
  uint64_t v3 = (void *)result;
  *uint64_t v4 = result;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v3[2] > v1)
  {
    uint64_t v9 = &v3[2 * v1];
    v9[4] = signpost_c2_removePresentationModifier_end;
    _OWORD v9[5] = 0;
    swift_endAccess();
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  uint64_t v7 = principalClassName;
  uint64_t v8 = delegateClassName;
  uint64_t v9 = getenv("ActivePrewarm");
  if (v9 && *v9 == 49)
  {
    uint64_t v16 = 0;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x2050000000;
    uint64_t v10 = (void *)qword_1EB25B910;
    uint64_t v19 = qword_1EB25B910;
    if (!qword_1EB25B910)
    {
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 3221225472;
      v15[2] = __get_OSPrewarmSchedulerClass_block_invoke;
      v15[3] = &unk_1E52D9900;
      v15[4] = &v16;
      __get_OSPrewarmSchedulerClass_block_invoke((uint64_t)v15);
      uint64_t v10 = (void *)v17[3];
    }
    id v11 = v10;
    _Block_object_dispose(&v16, 8);
    [v11 prewarmSuspend];
  }
  kdebug_trace();
  uint64_t v12 = entr_act_begin();
  id v13 = (void *)MEMORY[0x18C108260](v12);
  _UIApplicationMainPreparations(argc, (uint64_t)argv, v7, v8);
  [(id)UIApp _run];
  unint64_t v14 = (_Unwind_Exception *)abort_report_np();
  _Block_object_dispose(&v16, 8);
  _Unwind_Resume(v14);
}

uint64_t _UIUpdateRequestDeactivate(_DWORD *a1, unsigned int a2)
{
  return _UIUpdateRequestRegistryRemoveRecord((uint64_t)&mainRegistry, a1, a2);
}

void sub_1853C51C8()
{
  if (*((unsigned char *)v0 + 297) == 1)
  {
    uint64_t v1 = *v0;
    *((unsigned char *)v0 + 297) = 0;
    double v2 = CACurrentMediaTime();
    double v3 = *((double *)v0 + 30);
    if (v3 == 0.0)
    {
      uint64_t v4 = self;
      id v5 = objc_msgSend(v4, sel_mainScreen);
      uint64_t v6 = (uint64_t)objc_msgSend(v5, sel_maximumFramesPerSecond);

      if (v6 < 1)
      {
        double v9 = 60.06;
      }
      else
      {
        id v7 = objc_msgSend(v4, sel_mainScreen);
        id v8 = objc_msgSend(v7, sel_maximumFramesPerSecond);

        double v9 = (double)(uint64_t)v8 * 1.001;
      }
      double v3 = 1.0 / v9;
      *((double *)v0 + 30) = v3;
    }
    *((double *)v0 + 28) = v2 + v3 * -0.4;
    v0[29] = 0;
    if (MEMORY[0x18C109380](v0 + 26))
    {
      uint64_t v10 = v0[27];
      uint64_t ObjectType = swift_getObjectType();
      v13[3] = v1;
      v13[4] = &off_1ED0B87E0;
      v13[0] = v0;
      uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 8);
      swift_retain();
      v12(v13, ObjectType, v10);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    }
  }
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1853C54C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(uint64_t, uint64_t))(a4 + 136))(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 88))(a3, a4);
  (*(void (**)(char *, char *, uint64_t (*)(), void, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 192))(v14, v12, sub_1853C5688, 0, 0, 0, a1, a2, a3, a4);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, AssociatedTypeWitness);
}

uint64_t sub_1853C5688()
{
  return 1;
}

uint64_t sub_1853C588C()
{
  return sub_1853C5894(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1853C5894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a1 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) != 1) {
    return 0;
  }
  uint64_t v5 = a2 + 16;
  uint64_t v6 = 1;
  swift_beginAccess();
  *uint64_t v4 = 0;
  swift_beginAccess();
  id v7 = (void *)MEMORY[0x18C109380](v5);
  if (v7)
  {

    return 0;
  }
  return v6;
}

uint64_t sub_1853C598C()
{
  return sub_18549E784(v0);
}

uint64_t sub_1853C5994()
{
  return sub_1853C59A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1853C59A0(uint64_t a1, uint64_t a2, void *a3)
{
  *(float *)a1 = sub_1854A2CF4();
  *(_DWORD *)(a1 + 4) = v6;
  *(_DWORD *)(a1 + 8) = v7;
  if ((*(unsigned char *)(a2 + 369) & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    *(void *)(a2 + 80) = sub_1854A303C(v8);
    swift_bridgeObjectRelease();
    *(unsigned char *)(a2 + 369) = 1;
  }
  *a3 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1853C5A3C()
{
  sub_185826490(*(void *)(v0 + 16), *(float **)(v0 + 24), *(uint64_t **)(v0 + 32));
}

void inProcessAnimationManagerSetFixedPriority(int a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  double v2 = pthread_self();
  int v14 = 0;
  sched_param v13 = 0;
  pthread_getschedparam(v2, &v14, &v13);
  v13.sched_prioritdouble y = a1;
  int v3 = pthread_setschedparam(v2, v14, &v13);
  if (v3)
  {
    int v4 = v3;
    uint64_t v5 = _InProcessAnimationLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = [MEMORY[0x1E4F29060] currentThread];
      uint64_t v11 = [v10 name];
      *(_DWORD *)buf = 136315906;
      uint64_t v16 = "inProcessAnimationManagerSetFixedPriority";
      __int16 v17 = 1024;
      int v18 = v4;
      __int16 v19 = 1024;
      int v20 = a1;
      __int16 v21 = 2114;
      uint64_t v22 = v11;
      _os_log_error_impl(&dword_1853B0000, v5, OS_LOG_TYPE_ERROR, "%s Error %d setting priority %d for thread: %{public}@", buf, 0x22u);
    }
  }
  integer_t policy_info = 0;
  mach_port_t v6 = pthread_mach_thread_np(v2);
  thread_policy_set(v6, 1u, &policy_info, 1u);
  int v7 = proc_setthread_cpupercent();
  if (v7)
  {
    int v8 = v7;
    uint64_t v9 = _InProcessAnimationLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v16 = "inProcessAnimationManagerSetFixedPriority";
      __int16 v17 = 1024;
      int v18 = v8;
      _os_log_error_impl(&dword_1853B0000, v9, OS_LOG_TYPE_ERROR, "%s Error %d setting thread CPU percent", buf, 0x12u);
    }
  }
}

id _InProcessAnimationLog()
{
  if (qword_1EB25F0A8 != -1) {
    dispatch_once(&qword_1EB25F0A8, &__block_literal_global_36);
  }
  uint64_t v0 = (void *)_MergedGlobals_950;
  return v0;
}

uint64_t sub_1853C5F24()
{
  uint64_t result = sub_186A1F12C();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s14descr1ED0B3901V8ComposerVMa();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1853C604C()
{
  sub_1853C60A4();
  return swift_deallocClassInstance();
}

id *sub_1853C60A4()
{
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = (char *)v0 + *((void *)*v0 + 16);
  uint64_t v2 = sub_186A1F12C();
  int v3 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3((char *)v0 + *((void *)*v0 + 17), v2);
  int v4 = (char *)v0 + *((void *)*v0 + 18);
  uint64_t v5 = _s14descr1ED0B3901V8ComposerVMa();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t _s14descr1ED0B3901V8ComposerVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1853C6274(void (**a1)(void, double))
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  if (off_1E8FAEFD0)
  {
    int v3 = (void *)*((void *)off_1E8FAEFD0 + 2);
    v6[4] = sub_18557A3E4;
    _OWORD v6[5] = v2;
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_185A3AEBC;
    v6[3] = &block_descriptor_26_2;
    int v4 = _Block_copy(v6);
    _Block_copy(a1);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_addInProcessProgressAnimations_, v4);
    _Block_release(v4);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a1);
    a1[2](a1, 1.0);
    return swift_release();
  }
}

uint64_t isDescendantOfContainer(void *a1, id a2, void *a3)
{
  uint64_t v3 = 0;
  if (a1 && a2)
  {
    id v6 = a1;
    int v7 = 0;
    while (v6 != a2)
    {
      id v8 = (id)[v6 _actingParentGestureRecognizerContainer];
      if (v8)
      {
        id v9 = v8;
        if (!v7)
        {
          int v7 = [MEMORY[0x1E4F1CA48] array];
        }
        [v7 addObject:v9];
      }
      id v10 = (id)[v6 _parentGestureRecognizerContainer];
      id v6 = v10;
      if (a3 && v10) {
        [a3 addObject:v10];
      }
      if (!v6)
      {
        while (1)
        {
          if (![v7 count])
          {
            uint64_t v3 = 0;
            goto LABEL_25;
          }
          uint64_t v11 = [v7 lastObject];
          [v7 removeLastObject];
          if (v11) {
            break;
          }
LABEL_20:
        }
        id v12 = v11;
        while (v12 != a2)
        {
          id v13 = (id)[v12 _actingParentGestureRecognizerContainer];
          if (v13) {
            [v7 addObject:v13];
          }
          id v12 = (id)[v12 _parentGestureRecognizerContainer];
          if (!v12) {
            goto LABEL_20;
          }
        }

        break;
      }
    }
    uint64_t v3 = 1;
LABEL_25:
  }
  return v3;
}

double _UIViewAdjustedLayoutMarginsForLayoutMargins(uint64_t a1, void *a2, char a3, double a4, double a5, double a6, double a7)
{
  double v14 = _UIViewResolvedMargins((id *)a1, a4, a5, a6, a7);
  double v95 = v15;
  double v97 = v14;
  double v99 = v16;
  double v93 = v17;
  if ((*(unsigned char *)(a1 + 120) & 0x10) != 0)
  {
    __int16 v19 = [a2 superview];
    int v20 = -[UIView __viewDelegate]((id *)a2);
    if (v20) {
      __int16 v21 = a2;
    }
    else {
      __int16 v21 = v19;
    }
    int v18 = v21;
  }
  else
  {
    int v18 = a2;
    __int16 v19 = v18;
  }
  [(id)a1 _safeAreaInsetsInSuperview:v18];
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  if ([(id)a1 layoutMarginsFollowReadableWidth])
  {
    _UIViewHorizontalLayoutMarginsAdjustedForReadableWidth((void *)a1, a3, v23, v25, v27, v29, a4, a5, a6, a7);
    char v32 = a3 & 5;
    double v33 = v97;
    double v34 = v99;
    double v35 = v23;
  }
  else
  {
    double v30 = v95;
    double v33 = v97;
    double v34 = v99;
    double v31 = v93;
    double v35 = v23;
    char v32 = a3;
  }
  double v36 = UIEdgeInsetsAdd(v32, v33, v30, v34, v31, v35);
  double v38 = v37;
  double v40 = v39;
  double v42 = v41;
  if (v19)
  {
    *((void *)&v43 + 1) = *(unsigned int *)(a1 + 112);
    *(void *)&long long v43 = *(void *)(a1 + 104);
    char v44 = (v43 >> 53) & 0xF;
    if (v44)
    {
      [v19 layoutMargins];
      double v46 = v45;
      double v48 = v47;
      double v50 = v49;
      double v52 = v51;
      uint64_t v53 = [v19 _edgesPropagatingSafeAreaInsetsToSubviews];
      double v98 = v38;
      double v100 = v36;
      if (v53 != 15)
      {
        long long v54 = -[UIView __viewDelegate](v18);
        long long v55 = v54;
        if (v54 && (v19[13] & 0x4000000000000000) == 0) {
          [v54 _updateContentOverlayInsetsFromParentIfNecessary];
        }
        long long v56 = [v19 superview];
        [v19 _rawLayoutMargins];
        double v46 = _UIViewAdjustedLayoutMarginsForLayoutMargins(v19, v56, [v19 edgesInsettingLayoutMarginsFromSafeArea] & v53, v57, v58, v59, v60);
        double v48 = v61;
        double v50 = v62;
        double v52 = v63;
      }
      [v19 bounds];
      double v65 = v64;
      double v67 = v66;
      double v94 = v48;
      double v96 = v46;
      double v91 = v52;
      double v92 = v50;
      double v89 = v42;
      double v90 = v40;
      CGFloat v69 = v68;
      CGFloat v71 = v70;
      if ((~*(void *)(a1 + 96) & 0x420000000000000) == 0)
      {
        double v72 = [(id)a1 _layoutEngine];

        if (v72)
        {
          objc_msgSend(v19, "_nsis_bounds");
          CGFloat v71 = v73;
          CGFloat v69 = v74;
        }
      }
      if ((v53 & 2) != 0) {
        double v75 = v65;
      }
      else {
        double v75 = 0.0;
      }
      if (v53) {
        double v76 = v67;
      }
      else {
        double v76 = 0.0;
      }
      [(id)a1 frame];
      double v78 = v77;
      CGFloat v80 = v79;
      double v82 = v81;
      CGFloat v84 = v83;
      double v85 = [v19 layer];
      int v86 = [v85 flipsHorizontalAxis];

      if (v86)
      {
        [v19 bounds];
        double v78 = CGRectGetMaxX(v101) - v82 - v78;
      }
      double v87 = _UIEdgeInsetsPropagatedToChildRectOnEdges(v44, v96, v94, v92, v91, v75, v76, v71, v69, v78, v80, v82, v84);
      double v36 = UIEdgeInsetsMax(v44, v100, v98, v90, v89, v87);
    }
  }

  return v36;
}

double _UIViewResolvedMargins(id *a1, double a2, double a3, double a4, double a5)
{
  int v7 = -[UIView __viewDelegate](a1);
  char v8 = [v7 viewRespectsSystemMinimumLayoutMargins];
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 3221225472;
  double v30 = ___UIViewResolvedMargins_block_invoke;
  double v31 = &__block_descriptor_33_e14_d32__0d8d16d24l;
  char v32 = v8;
  [v7 _minimumLayoutMarginsForView];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  [a1 _concreteDefaultLayoutMargins];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = ((double (*)(void *, double, double, double))___UIViewResolvedMargins_block_invoke)(v29, a2, v10, v23);
  ((void (*)(void *, double, double, double))v30)(v29, a3, v12, v18);
  ((void (*)(void *, double, double, double))v30)(v29, a4, v14, v20);
  ((void (*)(void *, double, double, double))v30)(v29, a5, v16, v22);

  return v24;
}

double _UIEdgeInsetsPropagatedToChildRectOnEdgesAndIncludingOutset(char a1, int a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13, CGFloat a14)
{
  CGFloat v27 = a12;
  CGFloat v26 = a13;
  CGFloat v28 = a11;
  double v29 = 0.0;
  if (a1)
  {
    v40.origin.x = a11;
    double v37 = a3;
    v40.origin.double y = a12;
    v40.size.width = a13;
    v40.size.double height = a14;
    double MinY = CGRectGetMinY(v40);
    v41.origin.x = a7;
    v41.origin.double y = a8;
    v41.size.width = a9;
    v41.size.double height = a10;
    double v31 = MinY - CGRectGetMinY(v41);
    CGFloat v26 = a13;
    CGFloat v27 = a12;
    CGFloat v28 = a11;
    double v32 = fmax(v31, 0.0);
    if (!a2) {
      double v31 = v32;
    }
    double v29 = fmax(v37 - v31, 0.0);
  }
  double v38 = v29;
  if ((a1 & 2) != 0)
  {
    v42.origin.x = v28;
    v42.origin.double y = v27;
    v42.size.width = v26;
    v42.size.double height = a14;
    double MinX = CGRectGetMinX(v42);
    v43.origin.x = a7;
    v43.origin.double y = a8;
    v43.size.width = a9;
    v43.size.double height = a10;
    fmax(MinX - CGRectGetMinX(v43), 0.0);
  }
  if ((a1 & 4) != 0)
  {
    v44.origin.x = a7;
    v44.origin.double y = a8;
    v44.size.width = a9;
    v44.size.double height = a10;
    double MaxY = CGRectGetMaxY(v44);
    v45.origin.x = v28;
    v45.origin.double y = v27;
    v45.size.width = v26;
    v45.size.double height = a14;
    fmax(MaxY - CGRectGetMaxY(v45), 0.0);
  }
  if ((a1 & 8) != 0)
  {
    v46.origin.x = a7;
    v46.origin.double y = a8;
    v46.size.width = a9;
    v46.size.double height = a10;
    double MaxX = CGRectGetMaxX(v46);
    v47.origin.x = v28;
    v47.origin.double y = v27;
    v47.size.width = v26;
    v47.size.double height = a14;
    fmax(MaxX - CGRectGetMaxX(v47), 0.0);
  }
  return v38;
}

double _UIEdgeInsetsPropagatedToChildRectOnEdges(char a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  return _UIEdgeInsetsPropagatedToChildRectOnEdgesAndIncludingOutset(a1, 0, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

double UIEdgeInsetsAdd(char a1, double a2, double a3, double a4, double a5, double a6)
{
  if ((a1 & 1) == 0) {
    a6 = -0.0;
  }
  return a2 + a6;
}

void sub_1853C9150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
}

double _UIScopedSignpostIntervalInit(uint64_t a1, int a2, uint64_t a3)
{
  if (a2)
  {
    memset(v6, 0, sizeof(v6));
    (*(void (**)(_OWORD *__return_ptr, uint64_t))(a3 + 16))(v6, a3);
    if (LODWORD(v6[0])) {
      kdebug_trace();
    }
    double result = *((double *)&v6[2] + 1);
    long long v5 = *(_OWORD *)((char *)&v6[3] + 8);
    *(_OWORD *)a1 = *(_OWORD *)((char *)&v6[2] + 8);
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *((void *)&v6[4] + 1);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

BOOL _UIAppUseModernRotationAndPresentationBehaviors()
{
  return +[UIWindow _transformLayerRotationsAreEnabled];
}

uint64_t _UIViewEnumerateViewsForWhichConstraintIsVulnerableToScrollViewBoundsOrigin(void *a1, int a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t result = objc_msgSend(a4, "_uili_isFocusGuide");
  if (result) {
    double v13 = a4;
  }
  else {
    double v13 = a3;
  }
  if (v13) {
    BOOL v14 = v13 == a1;
  }
  else {
    BOOL v14 = 1;
  }
  if (v14 || (a2 - 1) >= 6 && (a2 - 9) > 1) {
    return result;
  }
  if ([a1 _isFloatingLayoutItem]
    && [a3 _supportsContentDimensionVariables]
    && (void *)[a1 superview] == a4)
  {
    goto LABEL_19;
  }
  uint64_t result = [a3 _supportsContentDimensionVariables];
  if (a3 != a4)
  {
    if (result)
    {
      uint64_t result = [a3 _contentLayoutGuideIfExists];
      if ((void *)result != a4)
      {
        uint64_t result = [a3 isDescendantOfView:a1];
        if (result) {
          return result;
        }
LABEL_19:
        double v15 = *(uint64_t (**)(uint64_t, void *))(a6 + 16);
        return v15(a6, a3);
      }
    }
  }
  if (a1 != a5)
  {
    uint64_t result = [a1 superview];
    if (result)
    {
      for (uint64_t i = (void *)result; (void *)result != a5; uint64_t i = (void *)result)
      {
        if ([i _supportsContentDimensionVariables]) {
          (*(void (**)(uint64_t, void *))(a6 + 16))(a6, i);
        }
        uint64_t result = [i superview];
        if (!result) {
          break;
        }
      }
    }
  }
  return result;
}

double UIEdgeInsetsMax(char a1, double result, double a3, double a4, double a5, double a6)
{
  double v6 = fmax(result, a6);
  if (a1) {
    return v6;
  }
  return result;
}

uint64_t sub_1853CA6C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeakReferenceTable.WeakReference();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v6 = MEMORY[0x18C109380](v8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v6;
  return result;
}

uint64_t type metadata accessor for WeakReferenceTable.WeakReference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s15PropertyChangesV3KeyVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void destroy for UICellConfigurationState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

double UIRectGetCenter(double a1, double a2, double a3)
{
  return a1 + a3 * 0.5;
}

void __trackRunLoopTimes(uint64_t a1, uint64_t a2)
{
  if (a2 == 32)
  {
    if ((byte_1EB25B50C & 1) == 0)
    {
      HTSuspendHangTracing();
      byte_1EB25B50C = 1;
    }
  }
  else
  {
    uint64_t v2 = qword_1EB25B6C8;
    if (byte_1EB25B50C)
    {
      HTResumeHangTracing();
      byte_1EB25B50C = 0;
    }
    else
    {
      MEMORY[0x1F411CC78](v2);
    }
  }
}

uint64_t sub_1853CAB08()
{
  swift_release();
  return swift_deallocClassInstance();
}

void UIViewCommonInitWithFrame(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  double v9 = a1;
  if (!qword_1EB25C208)
  {
    qword_1EB25C208 = +[UIView instanceMethodForSelector:sel_drawRect_];
    qword_1EB25C210 = +[UIView instanceMethodForSelector:sel_intrinsicContentSize];
    qword_1EB25C218 = +[UIView instanceMethodForSelector:sel__intrinsicSizeWithinSize_];
    qword_1EB25C2E0 = +[UIView instanceMethodForSelector:sel__didScroll];
    qword_1EB25C2E8 = +[UIResponder instanceMethodForSelector:sel_touchesBegan_withEvent_];
    qword_1EB25C2F0 = +[UIResponder instanceMethodForSelector:sel_touchesMoved_withEvent_];
    qword_1EB25C2F8 = +[UIResponder instanceMethodForSelector:sel_touchesEnded_withEvent_];
    qword_1EB25C300 = +[UIView instanceMethodForSelector:sel__shouldDelayTouchForSystemGestures_];
    qword_1EB25C220 = +[UIView instanceMethodForSelector:sel_viewForBaselineLayout];
    qword_1EB25C308 = +[UIView instanceMethodForSelector:sel_traitCollectionDidChange_];
    qword_1EB25C310 = +[UIView instanceMethodForSelector:sel__traitCollectionForChildEnvironment_];
    qword_1EB25C318 = +[UIView instanceMethodForSelector:sel__baselineOffsetsAtSize_];
    qword_1EB25C240 = +[UIView instanceMethodForSelector:sel_layoutSubviews];
    qword_1EB25C228 = +[UIView instanceMethodForSelector:sel_focusItemsInRect_];
  }
  uint64_t v10 = *((void *)v9 + 20);
  [(id)objc_opt_class() _registerClassForIdiomInitializationIfNeccessary];
  *((double *)v9 + 39) = _UIViewGetDefaultLayoutMargins();
  *((void *)v9 + 40) = v11;
  *((void *)v9 + 41) = v12;
  *((void *)v9 + 42) = v13;
  long long v14 = *(_OWORD *)(v9 + 328);
  *(_OWORD *)(v9 + 344) = *(_OWORD *)(v9 + 312);
  *(_OWORD *)(v9 + 360) = v14;
  int v15 = dyld_program_sdk_at_least();
  uint64_t v16 = 0x1E00000000000000;
  if (!v15) {
    uint64_t v16 = 0;
  }
  *((void *)v9 + 13) = *((void *)v9 + 13) & 0xE1FFFFFFFFFFFFFFLL | v16;
  if (dyld_program_sdk_at_least())
  {
    double v17 = +[UITraitCollection _fallbackTraitCollection]();
    [v9 _populateInitialTraitCollection:v17];
  }
  *((void *)v9 + 12) |= 0x600000000uLL;
  int v18 = [v9 _subclassImplementsDrawRect];
  uint64_t v19 = 4;
  if (!v18) {
    uint64_t v19 = 0;
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFFFFFFFFFFBLL | v19;
  uint64_t v20 = [v9 methodForSelector:sel_intrinsicContentSize];
  unsigned int v21 = 32;
  if (!v20 || v20 == qword_1EB25C210)
  {
    uint64_t v22 = [v9 methodForSelector:sel__intrinsicSizeWithinSize_];
    if (v22 == qword_1EB25C218 || v22 == 0) {
      unsigned int v21 = 0;
    }
    else {
      unsigned int v21 = 32;
    }
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFFFFFFFFFDFLL | v21;
  uint64_t v24 = [v9 methodForSelector:sel_viewForBaselineLayout];
  if (v24 == qword_1EB25C220 || v24 == 0) {
    int v26 = 0;
  }
  else {
    int v26 = 2048;
  }
  *((_DWORD *)v9 + 28) = *((_DWORD *)v9 + 28) & 0xFFFFF7FF | v26;
  uint64_t v27 = [v9 methodForSelector:sel_focusItemsInRect_];
  if (v27) {
    BOOL v28 = v27 == qword_1EB25C228;
  }
  else {
    BOOL v28 = 1;
  }
  uint64_t v29 = 0x800000000;
  if (v28) {
    uint64_t v29 = 0;
  }
  *(void *)(v9 + 116) = *(void *)(v9 + 116) & 0xFFFFFFF7FFFFFFFFLL | v29;
  if (!v28 && ([(id)objc_opt_class() _supportsInvalidatingFocusCache] & 1) == 0)
  {
    double v30 = *(NSObject **)(__UILogGetCategoryCachedImpl("UIFocus", &qword_1EB25C320) + 8);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      double v31 = v30;
      double v32 = (objc_class *)objc_opt_class();
      double v33 = NSStringFromClass(v32);
      int v60 = 138412290;
      double v61 = v33;
      _os_log_impl(&dword_1853B0000, v31, OS_LOG_TYPE_ERROR, "%@ implements focusItemsInRect: - caching for linear focus movement is limited as long as this view is on screen.", (uint8_t *)&v60, 0xCu);
    }
  }
  if ([(id)objc_opt_class() _wantsDeepColorByDefault]) {
    int v34 = 0x20000000;
  }
  else {
    int v34 = 0;
  }
  *((_DWORD *)v9 + 28) = *((_DWORD *)v9 + 28) & 0xDFFFFFFF | v34;
  double v35 = (void *)*((void *)v9 + 20);
  if (v35)
  {
    id v36 = v35;
  }
  else
  {
    id v36 = [(id)objc_opt_class() layerClass];
  }
  double v37 = v36;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v39 = 0x4000000000;
  if ((isKindOfClass & 1) == 0) {
    uint64_t v39 = 0;
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFBFFFFFFFFFLL | v39;
  char v40 = [MEMORY[0x1E4F39CF8] disableActions];
  [MEMORY[0x1E4F39CF8] setDisableActions:1];
  if ((v40 & 1) == 0) {
    [MEMORY[0x1E4F39CF8] setDisableActions:0];
  }
  _UIViewSetLayer((uint64_t)v9, v37);
  -[UIView _updateAutogeneratedNameForLayerIfNeeded]((uint64_t)v9);
  if (!v35)
  {
    objc_msgSend(*((id *)v9 + 20), "setBounds:", 0.0, 0.0, a4, a5);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v41 = *((id *)v9 + 20);
      objc_msgSend(v41, "setOpaque:", objc_msgSend(v9, "isOpaque"));
    }
    [v9 setContentScaleFactor:0.0];
    [v9 _setNeedsContentsFormatUpdate];
  }

  uint64_t v42 = [v9 methodForSelector:sel__didScroll];
  BOOL v43 = v42 == qword_1EB25C2E0 || v42 == 0;
  uint64_t v44 = 8;
  if (v43) {
    uint64_t v44 = 0;
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFFFFFFFFFF7 | v44;
  uint64_t v45 = [v9 methodForSelector:sel_touchesBegan_withEvent_];
  if (v45 == qword_1EB25C2E8
    && (uint64_t v46 = [v9 methodForSelector:sel_touchesMoved_withEvent_], v46 == qword_1EB25C2F0))
  {
    uint64_t v59 = [v9 methodForSelector:sel_touchesEnded_withEvent_];
    unsigned int v47 = 16 * (v59 != qword_1EB25C2F8);
  }
  else
  {
    unsigned int v47 = 16;
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFFFFFFFFFEFLL | v47;
  uint64_t v48 = [v9 methodForSelector:sel__shouldDelayTouchForSystemGestures_];
  *((void *)v9 + 13) = *((void *)v9 + 13) & 0xFFFFFFFF7FFFFFFFLL | ((unint64_t)(v48 != qword_1EB25C300) << 31);
  id v49 = *((id *)v9 + 20);
  int v50 = [v49 needsDisplayOnBoundsChange];
  uint64_t v51 = 0x2000000000;
  if (!v50) {
    uint64_t v51 = 0;
  }
  *((void *)v9 + 12) = *((void *)v9 + 12) & 0xFFFFFFDFFFFFFFFFLL | v51;

  uint64_t v52 = [v9 methodForSelector:sel__traitCollectionForChildEnvironment_];
  *((void *)v9 + 13) = *((void *)v9 + 13) & 0xFFFDFFFFFFFFFFFFLL | ((unint64_t)(v52 != qword_1EB25C310) << 49);
  uint64_t v53 = [v9 methodForSelector:sel__baselineOffsetsAtSize_];
  int v54 = *((_DWORD *)v9 + 28);
  uint64_t v55 = *((void *)v9 + 12);
  unint64_t v56 = *((void *)v9 + 13) & 0xFFFBFFFFFFFFFFFFLL | ((unint64_t)(v53 != qword_1EB25C318) << 50);
  *((void *)v9 + 13) = v56;
  if (!v10)
  {
    *((void *)v9 + 12) = v55;
    *((void *)v9 + 13) = v56 | 0x2000000000000000;
    *((_DWORD *)v9 + 28) = v54 | 0x200;
    objc_msgSend(v9, "setFrame:", a2, a3, a4, a5);
    unint64_t v57 = *((void *)v9 + 13) & 0xDFFFFFFFFFFFFFFFLL;
    *((_DWORD *)v9 + 28) &= ~0x200u;
    *((void *)v9 + 13) = v57;
    if ((dyld_program_sdk_at_least() & 1) == 0) {
      *((_DWORD *)v9 + 28) &= ~0x80u;
    }
  }
  uint64_t v58 = [v9 methodForSelector:sel_layoutSubviews];
  *(void *)(v9 + 116) = *(void *)(v9 + 116) & 0xFFFFFFFFBFFFFFFFLL | ((unint64_t)(v58 == qword_1EB25C240) << 30);
  if (dyld_program_sdk_at_least()
    && [(id)objc_opt_class() requiresConstraintBasedLayout])
  {
    *((void *)v9 + 12) |= 0x400000000000000uLL;
  }
  if (qword_1EB25C328 != -1) {
    dispatch_once(&qword_1EB25C328, &__block_literal_global_3708);
  }
  *(void *)(v9 + 116) &= 0xFFFFFFFFFFFE3FFFLL;
  *((_DWORD *)v9 + 28) = *((_DWORD *)v9 + 28) & 0xFFF7FFFF | ((+[UIView userInterfaceLayoutDirectionForSemanticContentAttribute:0] == UIUserInterfaceLayoutDirectionRightToLeft) << 19);
  *(void *)(v9 + 116) |= 0x2000000000uLL;
}

double _UIViewGetDefaultLayoutMargins()
{
  if (_UIViewGetDefaultLayoutMargins_onceToken != -1) {
    dispatch_once(&_UIViewGetDefaultLayoutMargins_onceToken, &__block_literal_global_3710);
  }
  return *(double *)&_MergedGlobals_321;
}

void sub_1853CC040(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void _UITraitEnvironmentGeneratedTraitCollection(uint64_t a1, unint64_t a2)
{
  TraitCollectionTSD = (uint64_t *)GetTraitCollectionTSD();
  uint64_t v5 = TraitCollectionTSD;
  if (TraitCollectionTSD[18] == a1)
  {
    char v8 = TraitCollectionTSD + 2;
    if (_UIInlinePointerSetContainsElement(TraitCollectionTSD + 2, a2)) {
      return;
    }
    uint64_t v9 = *v8;
    if ((unint64_t)*v8 > 0xC)
    {
      uint64_t v10 = (NSHashTable *)v5[4];
      if (!v10)
      {
        v5[4] = __UIInlinePointerSetCreateHashTableWithCapacity(26);
        uint64_t v11 = (const void **)(v5 + 5);
        do
        {
          uint64_t v12 = *v11++;
          NSHashInsert((NSHashTable *)v5[4], v12);
          --v9;
        }
        while (v9);
        uint64_t v10 = (NSHashTable *)v5[4];
      }
      NSHashInsert(v10, (const void *)a2);
      uint64_t v9 = *v8;
    }
    else
    {
      v8[v9 + 3] = a2;
    }
    _OWORD v5[2] = v9 + 1;
    uint64_t v13 = (1 << (a2 >> 4)) | (1 << (a2 >> 10)) | (1 << SBYTE2(a2));
    long long v14 = v5 + 3;
    goto LABEL_21;
  }
  if (TraitCollectionTSD[40] == a1)
  {
    uint64_t v6 = TraitCollectionTSD + 24;
    if (!_UIInlinePointerSetContainsElement(TraitCollectionTSD + 24, a2))
    {
      uint64_t v7 = *v6;
      if ((unint64_t)*v6 > 0xC)
      {
        int v15 = (NSHashTable *)v5[26];
        if (!v15)
        {
          v5[26] = __UIInlinePointerSetCreateHashTableWithCapacity(26);
          uint64_t v16 = (const void **)(v5 + 27);
          do
          {
            double v17 = *v16++;
            NSHashInsert((NSHashTable *)v5[26], v17);
            --v7;
          }
          while (v7);
          int v15 = (NSHashTable *)v5[26];
        }
        NSHashInsert(v15, (const void *)a2);
        uint64_t v7 = *v6;
      }
      else
      {
        v6[v7 + 3] = a2;
      }
      v5[24] = v7 + 1;
      uint64_t v13 = (1 << (a2 >> 4)) | (1 << (a2 >> 10)) | (1 << SBYTE2(a2));
      long long v14 = v5 + 25;
LABEL_21:
      *v14 |= v13;
    }
  }
}

void _UIViewInvalidateTraitCollectionAndSchedulePropagation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (id *)a1;
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a1 + 104) | 0x800000000000;
  *(_DWORD *)(a1 + 112) &= ~0x80u;
  *(void *)(a1 + 104) = v4;
  if (qword_1EB25C330 != -1) {
    dispatch_once(&qword_1EB25C330, &__block_literal_global_3712);
  }
  if (!byte_1EB25C0B5)
  {
    unint64_t v7 = (unint64_t)v3[11];
    uint64_t v8 = [v3 _presentationControllerToNotifyOnLayoutSubviews];
    if (v7 | v8
      || (id v9 = (id)[v3 window]) != 0
      && ((uint64_t v10 = v9, dyld_program_sdk_at_least())
       && ([v3 superview],
           uint64_t v11 = objc_claimAutoreleasedReturnValue(),
           v11,
           v11 == v10)
       || ([v10 _shouldForceTraitPropagationThroughHierarchy] & 1) != 0
       || ((unint64_t)v3[13] & 0x1000000000000) != 0))
    {
    }
    else if (dyld_program_sdk_at_least())
    {
LABEL_26:
      -[UIView _invalidateAppearanceIfNeeded](v3);
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      uint64_t v12 = objc_msgSend(v3, "_allSubviews", 0);
      uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)v18;
        do
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if (*(void *)v18 != v15) {
              objc_enumerationMutation(v12);
            }
            _UIViewInvalidateTraitCollectionAndSchedulePropagation(*(void *)(*((void *)&v17 + 1) + 8 * i), a2);
          }
          uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v21 count:16];
        }
        while (v14);
      }

      return;
    }
    if (!*((_WORD *)v3 + 106) || (dyld_program_sdk_at_least() & 1) == 0) {
      [v3 setNeedsLayout];
    }
    goto LABEL_26;
  }
  if (a2)
  {
    id v5 = (id)[v3 _window];
    if (v5)
    {
      uint64_t v6 = v5;
      while (1)
      {
        v3[13] = (id)((unint64_t)v3[13] | 0x800000000000);
        if (([v3[20] needsLayout] & 1) != 0 || ((unint64_t)v3[13] & 0x30000) != 0) {
          break;
        }
        if (*((_WORD *)v3 + 106))
        {
          -[UIView _updateTraitsIfNeededWithBehavior:]((uint64_t)v3, 0);
          return;
        }
        uint64_t v3 = (id *)(id)[v3 superview];
        if (!v3)
        {
          [v6 setNeedsLayout];
          return;
        }
      }
    }
  }
}

double _UIScreenForcedMainScreenScale(uint64_t a1)
{
  uint64_t v2 = +[UIScreen mainScreen];
  [v2 _scale];
  double v4 = v3;

  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___UIScreenForcedMainScreenScale_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  *(double *)&block[4] = v4;
  if (qword_1EB25C5C8 != -1) {
    dispatch_once(&qword_1EB25C5C8, block);
  }
  if (*(double *)&qword_1EB25C5E0 <= 0.0) {
    return v4;
  }
  if (a1 == 2)
  {
    id v5 = (void *)*vars0;
LABEL_8:
    uint64_t v6 = v5[1];
    uint64_t v7 = dyld_image_path_containing_address();
    uint64_t v8 = (const char *)v7;
    if (v6) {
      BOOL v9 = v7 == qword_1EB25C5D0;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9 || !v7) {
      return *(double *)&qword_1EB25C5E0;
    }
    goto LABEL_16;
  }
  if (a1 == 1)
  {
    id v5 = vars0;
    goto LABEL_8;
  }
  uint64_t v10 = dyld_image_path_containing_address();
  if (!a1) {
    return *(double *)&qword_1EB25C5E0;
  }
  uint64_t v8 = (const char *)v10;
  if (!v10) {
    return *(double *)&qword_1EB25C5E0;
  }
LABEL_16:
  if (qword_1EB25C5D8)
  {
    if (strncmp("/usr/lib/", v8, 9uLL))
    {
      if (strncmp("/System/Library/", v8, 0x10uLL))
      {
        uint64_t v11 = [MEMORY[0x1E4F1CB10] fileURLWithFileSystemRepresentation:v8 isDirectory:0 relativeToURL:0];
        uint64_t v12 = [v11 URLByResolvingSymlinksInPath];
        uint64_t v13 = [v12 absoluteString];

        LODWORD(v11) = [v13 hasPrefix:qword_1EB25C5D8];
        if (v11) {
          return *(double *)&qword_1EB25C5E0;
        }
      }
    }
  }
  return v4;
}

void sub_1853CD130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIViewGetInteractionTintColor(void *a1)
{
  uint64_t v1 = a1;
  if (![v1 _overrideTintColorAutomaticallyOverridesTintColor]
    || ([v1 _overrideTintColor], (uint64_t v2 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    uint64_t v2 = _UIViewGetInteractionTintColorBypassingOverride(v1);
  }

  return v2;
}

id _UIViewGetInteractionTintColorBypassingOverride(void *a1)
{
  if ((a1[12] & 0x100) != 0)
  {
    uint64_t v1 = objc_getAssociatedObject(a1, &_UIViewInteractionTintColorKey);
  }
  else
  {
    uint64_t v1 = 0;
  }
  return v1;
}

uint64_t _UIGetCurrentFallbackTraitCollection()
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (pthread_main_np() != 1)
  {
    uint64_t v6 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "UITraitCollection * _Nonnull _UIGetCurrentFallbackTraitCollection(void)"), @"_UIFallbackEnvironment_NonARC.m", 103, @"The current fallback environment can only be used from the main thread.");
  }
  if (!dyld_program_sdk_at_least()) {
    goto LABEL_11;
  }
  uint64_t v0 = (UIScreen *)qword_1EB261428;
  if (qword_1EB261428) {
    goto LABEL_12;
  }
  if (!dyld_program_sdk_at_least()) {
    goto LABEL_11;
  }
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  int v1 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar >= 1)
  {
    int v9 = _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment;
    if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment)
    {
      while (v1 >= v9)
      {
        _UIInternalPreferenceSync(v1, &_UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment, @"UseMostActiveWindowSceneAsBaseFallbackEnvironment", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        int v9 = _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment;
        if (v1 == _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment) {
          goto LABEL_9;
        }
      }
      if (!byte_1EB25761C) {
        goto LABEL_11;
      }
    }
  }
LABEL_9:
  uint64_t v0 = (UIScreen *)__cachedMostActiveWindowScene;
  if (!__cachedMostActiveWindowScene)
  {
    uint64_t v0 = +[_UISceneLifecycleMultiplexer mostActiveSceneWithTest:&__block_literal_global_296];
    __cachedMostActiveWindowScene = (uint64_t)v0;
    if (!v0) {
LABEL_11:
    }
      uint64_t v0 = +[UIScreen mainScreen];
  }
LABEL_12:
  uint64_t v2 = [(UIScreen *)v0 _fallbackTraitCollection];
  if (!dyld_program_sdk_at_least()) {
    return v2;
  }
  if (!v2)
  {
    uint64_t v7 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v7 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "UITraitCollection * _Nonnull _UIGetCurrentFallbackTraitCollection(void)"), @"_UIFallbackEnvironment_NonARC.m", 109, @"%@ returned nil from -traitCollection, which is not allowed.", _UIGetDescriptionForFallbackEnvironmentWithInvalidTraitCollection(v0) file lineNumber description];
    if (dyld_program_sdk_at_least())
    {
LABEL_26:
      uint64_t v10 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "UITraitCollection * _Nonnull _UIGetCurrentFallbackTraitCollection(void)"), @"_UIFallbackEnvironment_NonARC.m", 117, @"A trait environment returned a trait collection with unspecified values for traits that are not allowed to be unspecified. This is a serious application bug and will cause undefined behavior. This issue may be caused by your class overriding the traitCollection property getter, which is not supported. Make sure to use the appropriate API if you are trying to override traits. Trait Environment: %@; Trait Collection: %@",
        _UIGetDescriptionForFallbackEnvironmentWithInvalidTraitCollection(v0),
        v2);
      return v2;
    }
LABEL_20:
    uint64_t v8 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_MergedGlobals_1102) + 8);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      uint64_t v12 = _UIGetDescriptionForFallbackEnvironmentWithInvalidTraitCollection(v0);
      __int16 v13 = 2112;
      uint64_t v14 = v2;
      _os_log_impl(&dword_1853B0000, v8, OS_LOG_TYPE_ERROR, "A trait environment returned a trait collection with unspecified values for traits that are not allowed to be unspecified. This is a serious application bug and will cause undefined behavior. This issue may be caused by your class overriding the traitCollection property getter, which is not supported. Make sure to use the appropriate API if you are trying to override traits. Trait Environment: %@; Trait Collection: %@",
        buf,
        0x16u);
    }
    return v2;
  }
  char v3 = dyld_program_sdk_at_least();
  double v4 = *(double *)(v2 + 16);
  if ((v3 & 1) == 0)
  {
    if (v4 > 0.0) {
      return v2;
    }
    goto LABEL_20;
  }
  if (v4 <= 0.0) {
    goto LABEL_26;
  }
  return v2;
}

void _makeSubTreePerformSelector(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = [a1 viewTraversalMark];
  id v11 = (id)[a1 _maskView];
  if (v11)
  {
    uint64_t v12 = v11;
    [v11 setViewTraversalMark:v10];
    if (dyld_program_sdk_at_least()) {
      objc_msgSend(v12, a2, a3, a4);
    }
    else {
      objc_msgSend(v12, sel_performSelector_withObject_withObject_, a2, a3, a4);
    }
    _makeSubTreePerformSelector(v12, a2, a3, a4, a5);
    [v12 setViewTraversalMark:0];
  }
  __int16 v13 = -[UIView _backing_sublayers]((uint64_t)a1);
  uint64_t v14 = v13;
  unsigned int v24 = a5;
  if (a5)
  {
    id v15 = (id)[v13 copy];

    double v23 = v15;
    uint64_t v14 = v15;
  }
  else
  {
    double v23 = 0;
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v16 = v14;
  uint64_t v17 = [v16 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v26;
    do
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)v26 != v19) {
          objc_enumerationMutation(v16);
        }
        id v21 = (id)objc_msgSend(*(id *)(*((void *)&v25 + 1) + 8 * i), "unsafeUnretainedDelegate", v23);
        uint64_t v22 = v21;
        if (v21 && !_IsKindOfUIView((uint64_t)v21)) {
          uint64_t v22 = 0;
        }
        [v22 setViewTraversalMark:v10];
        if (!dyld_program_sdk_at_least())
        {
          objc_msgSend(v22, sel_performSelector_withObject_withObject_, a2, a3, a4);
          if (!v22) {
            goto LABEL_22;
          }
LABEL_21:
          _makeSubTreePerformSelector(v22, a2, a3, a4, v24);
          goto LABEL_22;
        }
        objc_msgSend(v22, a2, a3, a4);
        if (v22) {
          goto LABEL_21;
        }
LABEL_22:
        [v22 setViewTraversalMark:0];
      }
      uint64_t v18 = [v16 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }
    while (v18);
  }
}

uint64_t _IsKindOfUIView(uint64_t a1)
{
  if (!a1) {
    return a1 & 1;
  }
  uint64_t v1 = a1;
  MethodImplementation = (uint64_t (*)(uint64_t, char *))object_getMethodImplementation();
  if (MethodImplementation == (uint64_t (*)(uint64_t, char *))MEMORY[0x1E4FBA8C8])
  {
    objc_opt_class();
    LOBYTE(a1) = objc_opt_isKindOfClass();
    return a1 & 1;
  }
  return MethodImplementation(v1, sel___isKindOfUIView);
}

void _UITraitCollectionWasCopied(unint64_t a1, unint64_t a2)
{
  TraitCollectionTSD = (uint64_t *)GetTraitCollectionTSD();
  id v5 = TraitCollectionTSD;
  if (TraitCollectionTSD[18])
  {
    uint64_t v6 = TraitCollectionTSD + 2;
    if (_UIInlinePointerSetContainsElement(TraitCollectionTSD + 2, a1))
    {
      if (_UIInlinePointerSetContainsElement(v5 + 2, a2)) {
        return;
      }
      uint64_t v7 = *v6;
      if ((unint64_t)*v6 > 0xC)
      {
        uint64_t v10 = (NSHashTable *)v5[4];
        if (!v10)
        {
          v5[4] = __UIInlinePointerSetCreateHashTableWithCapacity(26);
          id v11 = (const void **)(v5 + 5);
          do
          {
            uint64_t v12 = *v11++;
            NSHashInsert((NSHashTable *)v5[4], v12);
            --v7;
          }
          while (v7);
          uint64_t v10 = (NSHashTable *)v5[4];
        }
        NSHashInsert(v10, (const void *)a2);
        uint64_t v7 = *v6;
      }
      else
      {
        v6[v7 + 3] = a2;
      }
      _OWORD v5[2] = v7 + 1;
      uint64_t v13 = (1 << (a2 >> 4)) | (1 << (a2 >> 10)) | (1 << SBYTE2(a2));
      uint64_t v14 = v5 + 3;
      goto LABEL_23;
    }
  }
  if (v5[40])
  {
    uint64_t v8 = v5 + 24;
    if (_UIInlinePointerSetContainsElement(v5 + 24, a1) && !_UIInlinePointerSetContainsElement(v5 + 24, a2))
    {
      uint64_t v9 = *v8;
      if ((unint64_t)*v8 > 0xC)
      {
        id v15 = (NSHashTable *)v5[26];
        if (!v15)
        {
          v5[26] = __UIInlinePointerSetCreateHashTableWithCapacity(26);
          id v16 = (const void **)(v5 + 27);
          do
          {
            uint64_t v17 = *v16++;
            NSHashInsert((NSHashTable *)v5[26], v17);
            --v9;
          }
          while (v9);
          id v15 = (NSHashTable *)v5[26];
        }
        NSHashInsert(v15, (const void *)a2);
        uint64_t v9 = *v8;
      }
      else
      {
        v8[v9 + 3] = a2;
      }
      v5[24] = v9 + 1;
      uint64_t v13 = (1 << (a2 >> 4)) | (1 << (a2 >> 10)) | (1 << SBYTE2(a2));
      uint64_t v14 = v5 + 25;
LABEL_23:
      *v14 |= v13;
    }
  }
}

void sub_1853CEA50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __UIInlinePointerSetCreateHashTableWithCapacity(uint64_t a1)
{
  id v2 = objc_alloc(MEMORY[0x1E4F28D30]);
  return [v2 initWithOptions:258 capacity:a1];
}

uint64_t sub_1853D0454@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(*(id *)(v2 + *a1), sel_snapshot);
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v4;
  *a2 = result;
  return result;
}

uint64_t static NSDiffableDataSourceSnapshot._unconditionallyBridgeFromObjectiveC(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    id v3 = objc_msgSend(a1, sel_impl);
    objc_msgSend(v3, sel_copy);

    __CVCForceCastToSnapshotImpl();
  }
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
  uint64_t result = sub_1853D0A74();
  *a2 = result;
  return result;
}

uint64_t NSDiffableDataSourceSnapshot.init()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
  uint64_t result = sub_1853D0A74();
  *a1 = result;
  return result;
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = sub_186A1F12C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - v7;
  id v9 = (id)sub_1853D0974();
  sub_186A1F52C();
  uint64_t v10 = (void *)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v4) != 1)
  {
    uint64_t v12 = sub_186A1F83C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v4);
  }
  objc_msgSend(v9, sel_appendItemsWithIdentifiers_intoSectionWithIdentifier_, v10, v12);

  return swift_unknownObjectRelease();
}

void sub_1853D0814(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = (id)sub_1853D0974();
  sub_186A1F52C();
  id v5 = (id)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, *a3, v5);
}

void sub_1853D08C4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = (id)sub_1853D0974();
  sub_186A1F52C();
  id v5 = (id)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, *a3, v5);
}

uint64_t sub_1853D0974()
{
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
  char v1 = sub_186A1F80C();
  uint64_t v2 = *v0;
  if (v1) {
    return *(void *)(v2 + 16);
  }
  objc_msgSend(*(id *)(v2 + 16), sel_copy);
  sub_186A1F1CC();
  swift_unknownObjectRelease();
  sub_1853B985C(0, &qword_1E8FAF2B8);
  swift_dynamicCast();
  uint64_t v3 = v6;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v6;
  swift_release();
  uint64_t *v0 = v4;
  return v3;
}

uint64_t type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1853D0A74()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)off_1E52D64D8), sel_init);
  return v0;
}

uint64_t UIBackgroundConfiguration.updated(for:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void **)(*(void *)v2 + 16);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v5);
  id v7 = v4;
  id v8 = objc_msgSend(v7, sel_updatedConfigurationForState_, sub_1853D0C20(v5, v6));

  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255AC8);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v8;
  *a2 = result;
  return result;
}

id sub_1853D0C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v23 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13((char *)&v23 - v14, v3, a1);
  if (swift_dynamicCast())
  {
    id v15 = v24;
    id v16 = v26;
    swift_bridgeObjectRelease();

    v13(v12, v3, a1);
    uint64_t v17 = (unint64_t *)&unk_1E8FAFC80;
  }
  else
  {
    v13(v9, v3, a1);
    if (!swift_dynamicCast())
    {
      id v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
      id v20 = objc_msgSend(objc_allocWithZone((Class)UICellConfigurationState), sel_initWithTraitCollection_, v21);

      return v20;
    }
    uint64_t v18 = v24;
    uint64_t v19 = v25;
    swift_bridgeObjectRelease();

    v13(v12, v3, a1);
    uint64_t v17 = (unint64_t *)&unk_1E8FB84A8;
  }
  sub_1853B985C(0, v17);
  swift_dynamicCast();
  return v24;
}

uint64_t initializeWithCopy for UICellConfigurationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v5 = v3;
  swift_bridgeObjectRetain();
  id v6 = v4;
  return a1;
}

void runloopTimerCallback(uint64_t a1, uint64_t a2)
{
}

uint64_t runloopCallback(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 24))(a4, *(void *)(a4 + 32));
}

uint64_t UIEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 == v4)
  {
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = 0;
    if (v3 && v4) {
      uint64_t v6 = [v3 isEqual:v4];
    }
  }

  return v6;
}

uint64_t UIEqual_0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3 == v4)
  {
    uint64_t v5 = 1;
  }
  else if (v3)
  {
    uint64_t v5 = [v3 isEqual:v4];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_1853D416C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UICurrentImageTraitCollection()
{
  +[UITraitCollection _currentTraitCollectionWithUnmarkedFallback]();
  uint64_t v0 = (char *)objc_claimAutoreleasedReturnValue();
  char v1 = -[UITraitCollection _traitCollectionRelevantForImageConfiguration](v0);

  return v1;
}

uint64_t _UITraitTokenSetIsEqualToSet(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void *)a2;
  if (v4)
  {
    if (v5)
    {
      if (v4 != (void *)v5)
      {
        return objc_msgSend(v4, "isEqual:");
      }
      char v7 = 1;
      return v7 & 1;
    }
  }
  else if (!v5)
  {
    char v7 = vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 8), *(int64x2_t *)(a2 + 8)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 24), *(int64x2_t *)(a2 + 24)))))) ^ 1;
    return v7 & 1;
  }
  if (!_UITraitTokenSetIsSubsetOfSet((uint64_t *)a1, (uint64_t *)a2))
  {
    char v7 = 0;
    return v7 & 1;
  }
  return _UITraitTokenSetIsSubsetOfSet((uint64_t *)a2, (uint64_t *)a1);
}

void runloopObserverCallback(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 1)
  {
    *a3 = 2;
    signalChanges((uint64_t)a3, 1);
  }
}

ValueMetadata *type metadata accessor for UICellConfigurationState()
{
  return &type metadata for UICellConfigurationState;
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return _AXSVoiceOverTouchEnabled() != 0;
}

uint64_t _s15PropertyChangesV4InfoVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _UIIsPrivateMainBundle()
{
  if (qword_1EB264BA0 != -1) {
    dispatch_once(&qword_1EB264BA0, &__block_literal_global_10_13);
  }
  return _MergedGlobals_1293;
}

void _UIViewRecursivelyApplyBlockToSubtreesWithMotionEffects(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a2;
  if (a1 && [a1 _countOfMotionEffectsInSubtree] && ((a1[13] & 0x100000000) == 0 || v3[2](v3, a1)))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    int v4 = objc_msgSend(a1, "subviews", 0);
    uint64_t v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v10;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v10 != v7) {
            objc_enumerationMutation(v4);
          }
          _UIViewRecursivelyApplyBlockToSubtreesWithMotionEffects(*(void *)(*((void *)&v9 + 1) + 8 * v8++), v3);
        }
        while (v6 != v8);
        uint64_t v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v6);
    }

    _UIViewRecursivelyApplyBlockToSubtreesWithMotionEffects([a1 _maskView], v3);
  }
}

uint64_t _UIViewNotifiesFocusEngineForAlphaAndHiddenChanges()
{
  if ((_UIInternalPreferenceUsesDefault((int *)&_UIInternalPreference_ViewNotifiesFocusEngineForAlphaAndHiddenChanges, @"ViewNotifiesFocusEngineForAlphaAndHiddenChanges", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateInteger) & 1) == 0&& qword_1EB257AC8)
  {
    return qword_1EB257AC8 >= 0;
  }
  return dyld_program_sdk_at_least();
}

void sub_1853D7D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _CASupportsAnimationForKey(void *a1)
{
  uint64_t v1 = qword_1EB25C160;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&qword_1EB25C160, &__block_literal_global_988);
  }
  uint64_t v3 = [(id)qword_1EB25C158 containsObject:v2];

  return v3;
}

id __UISceneEffectiveSettings(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 176));

  if (WeakRetained)
  {
    __UISceneEffectiveSettings(WeakRetained);
    return (id)[(id)a1 _fixupInheritedSettings:(id)objc_claimAutoreleasedReturnValue()];
  }
  else
  {
    id result = *(id *)(a1 + 160);
    if (!result)
    {
      id result = (id)[*(id *)(a1 + 64) settings];
      if (!result)
      {
        [(id)a1 _synthesizedSettings];
        return (id)objc_claimAutoreleasedReturnValue();
      }
    }
  }
  return result;
}

uint64_t _UISceneLifecycleStateIsSEO(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 deactivationReasons];
  if (![v1 isForeground]) {
    goto LABEL_6;
  }
  if ((v2 & 0xFFFFFFFFFFFFFEFFLL) == 0)
  {
    if ((*(unsigned char *)(UIApp + 185) & 0x80) == 0)
    {
      uint64_t v3 = [v1 underLock];
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v3 = 0;
    goto LABEL_7;
  }
  uint64_t v3 = 1;
LABEL_7:

  return v3;
}

void *__windowForView(uint64_t a1)
{
  id v1 = *(void **)(a1 + 160);
  if (v1)
  {
    [MEMORY[0x1E4F39CF8] lock];
    id v2 = (id)CALayerGetContext();
    [MEMORY[0x1E4F39CF8] unlock];
    id result = _UIWindowFromRootLayer((id)[v2 layer]);
    if (!result)
    {
      do
      {
        int v4 = v1;
        id v1 = (void *)[v1 superlayer];
      }
      while (v1);
      return _UIWindowFromRootLayer(v4);
    }
  }
  else
  {
    uint64_t v5 = [NSString stringWithFormat:@"Requesting the window of a view (%@) with a nil layer. This view probably hasn't received initWithFrame: or initWithCoder:.", a1];
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3B8], @"%@", v5 format];

    return 0;
  }
  return result;
}

void *_UIWindowFromRootLayer(void *result)
{
  if (result)
  {
    id v1 = result;
    if (!_UIWindowFromRootLayer_windowLayerClass) {
      _UIWindowFromRootLayer_windowLayerClass = objc_opt_class();
    }
    if (object_getClass(v1) == (Class)_UIWindowFromRootLayer_windowLayerClass)
    {
      id result = (void *)v1[4];
      if (!result) {
        return (id)[v1 delegate];
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

id CLIENT_LAYER(uint64_t a1)
{
  return *(id *)(a1 + 160);
}

void sub_1853D9584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __CreateScrollIndicator_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:*(double *)(a1 + 40)];
}

uint64_t sub_1853DB908(uint64_t a1, SEL *a2)
{
  id v3 = [*(id *)(*(void *)v2 + 16) *a2];
  sub_186A1EB3C();

  uint64_t v4 = sub_186A1F52C();
  swift_bridgeObjectRelease();
  return v4;
}

BOOL UIAccessibilityIsBoldTextEnabled(void)
{
  return _AXSEnhanceTextLegibilityEnabled() != 0;
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(uint64_t a1)
{
  return sub_1853DB908(a1, (SEL *)&selRef_sectionIdentifiers);
}

void _UIViewVisitorEntertainAscendingTrackingVisitors(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (_MergedGlobals_15_7)
  {
    uint64_t v8 = [(id)_MergedGlobals_15_7 count];
    if (a1)
    {
      if (v8)
      {
        uint64_t v9 = [(id)_MergedGlobals_15_7 count];
        MEMORY[0x1F4188790](v9);
        uint64_t v13 = (char *)&v24 - v12;
        if (v11 <= 0x1FFFFFFFFFFFFFFELL) {
          uint64_t v14 = (char *)&v24 - v12;
        }
        else {
          uint64_t v14 = 0;
        }
        if (v11 - 0x1FFFFFFFFFFFFFFFLL >= 0xE000000000000042) {
          uint64_t v14 = (char *)malloc_type_malloc(8 * v10, 0x777B0C52uLL);
        }
        if (v14)
        {
          long long v25 = v13;
          long long v26 = &v24;
          if ([(id)_MergedGlobals_15_7 count])
          {
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            do
            {
              uint64_t v17 = (void *)[(id)_MergedGlobals_15_7 objectAtIndexedSubscript:v16];
              if (([v17 _currentlyVisitingHierarchy] & 1) == 0
                && [v17 _prepareToVisitView:a1 changedSubview:a2 previousWindow:a3 previousSuperview:a4])
              {
                *(void *)&v14[8 * v15] = v17;
                objc_msgSend(v17, "set_currentlyVisitingHierarchy:", 1);
                ++v15;
              }
              ++v16;
              unint64_t v18 = [(id)_MergedGlobals_15_7 count];
            }
            while (v16 < v18);
            if (v15)
            {
              *(void *)&v14[8 * v15] = 0;
              MEMORY[0x1F4188790](v18);
              id v21 = (char *)&v24 - v20;
              if (v19 <= 0x1FFFFFFFFFFFFFFELL) {
                uint64_t v22 = (char *)&v24 - v20;
              }
              else {
                uint64_t v22 = 0;
              }
              if (v19 - 0x1FFFFFFFFFFFFFFFLL >= 0xE000000000000042) {
                uint64_t v22 = (char *)malloc_type_malloc(8 * v15, 0x33DE3AEDuLL);
              }
              memcpy(v22, v14, 8 * v15);
              _UIViewVisitorEntertainAscendingVisitors((uint64_t)v14, v15, a1);
              for (uint64_t i = 0; i != v15; ++i)
                objc_msgSend(*(id *)&v22[8 * i], "set_currentlyVisitingHierarchy:", 0);
              if (v22 != v21) {
                free(v22);
              }
            }
          }
          if (v14 != v25) {
            free(v14);
          }
        }
        else
        {
          objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1CA00], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E4F1C4A0], @"failed to alloc memory for array", 0), "raise");
        }
      }
    }
  }
}

void _UIViewVisitorEntertainDescendingTrackingVisitors(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if (qword_1EB25EA98)
  {
    uint64_t v8 = [(id)qword_1EB25EA98 count];
    if (a1)
    {
      if (v8)
      {
        uint64_t v9 = [(id)qword_1EB25EA98 count];
        MEMORY[0x1F4188790](v9);
        uint64_t v13 = (char *)&v24 - v12;
        if (v11 <= 0x1FFFFFFFFFFFFFFELL) {
          uint64_t v14 = (char *)&v24 - v12;
        }
        else {
          uint64_t v14 = 0;
        }
        if (v11 - 0x1FFFFFFFFFFFFFFFLL >= 0xE000000000000042) {
          uint64_t v14 = (char *)malloc_type_malloc(8 * v10, 0xFAF0F4E9uLL);
        }
        if (v14)
        {
          long long v25 = v13;
          long long v26 = &v24;
          if ([(id)qword_1EB25EA98 count])
          {
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            do
            {
              uint64_t v17 = (void *)[(id)qword_1EB25EA98 objectAtIndexedSubscript:v16];
              if (([v17 _currentlyVisitingHierarchy] & 1) == 0
                && [v17 _prepareToVisitView:a1 changedSubview:a2 previousWindow:a3 previousSuperview:a4])
              {
                *(void *)&v14[8 * v15] = v17;
                objc_msgSend(v17, "set_currentlyVisitingHierarchy:", 1);
                ++v15;
              }
              ++v16;
              unint64_t v18 = [(id)qword_1EB25EA98 count];
            }
            while (v16 < v18);
            if (v15)
            {
              *(void *)&v14[8 * v15] = 0;
              MEMORY[0x1F4188790](v18);
              id v21 = (char *)&v24 - v20;
              if (v19 <= 0x1FFFFFFFFFFFFFFELL) {
                uint64_t v22 = (char *)&v24 - v20;
              }
              else {
                uint64_t v22 = 0;
              }
              if (v19 - 0x1FFFFFFFFFFFFFFFLL >= 0xE000000000000042) {
                uint64_t v22 = (char *)malloc_type_malloc(8 * v15, 0xD118AAA3uLL);
              }
              memcpy(v22, v14, 8 * v15);
              _UIViewVisitorRecursivelyEntertainDescendingVisitors((void **)v14, v15, a1, 0);
              for (uint64_t i = 0; i != v15; ++i)
                objc_msgSend(*(id *)&v22[8 * i], "set_currentlyVisitingHierarchy:", 0);
              if (v22 != v21) {
                free(v22);
              }
            }
          }
          if (v14 != v25) {
            free(v14);
          }
        }
        else
        {
          objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F1CA00], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E4F1C4A0], @"failed to alloc memory for array", 0), "raise");
        }
      }
    }
  }
}

void _UIViewVisitorRecursivelyEntertainDescendingVisitors(void **a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  MEMORY[0x1F4188790](a1);
  unint64_t v11 = (char *)&v20 - v10;
  if (v9 <= 0x1FFFFFFFFFFFFFFELL) {
    uint64_t v12 = (char *)&v20 - v10;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9 - 0x1FFFFFFFFFFFFFFFLL >= 0xE000000000000042) {
    uint64_t v12 = (char *)malloc_type_malloc(8 * v8, 0xE1464841uLL);
  }
  uint64_t v13 = _UIViewVisitorEntertainVisitors(a1, (uint64_t)v12, (uint64_t)a3, a4);
  if (v13)
  {
    uint64_t v14 = v13;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v21 = 0u;
    long long v20 = 0u;
    uint64_t v15 = objc_msgSend(a3, "subviews", 0);
    uint64_t v16 = [v15 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)v21;
      do
      {
        for (uint64_t i = 0; i != v17; ++i)
        {
          if (*(void *)v21 != v18) {
            objc_enumerationMutation(v15);
          }
          _UIViewVisitorRecursivelyEntertainDescendingVisitors(v12, v14, *(void *)(*((void *)&v20 + 1) + 8 * i), 0);
        }
        uint64_t v17 = [v15 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }
      while (v17);
    }
  }
  if ([a3 _maskView]) {
    _UIViewVisitorRecursivelyEntertainDescendingVisitors(a1, a2, [a3 _maskView], 1);
  }
  if (v12 != v11) {
    free(v12);
  }
}

uint64_t _UIViewVisitorEntertainVisitors(void **a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = *a1;
  if (!*a1)
  {
    uint64_t v8 = 0;
    if (!a2) {
      return v8;
    }
    goto LABEL_10;
  }
  uint64_t v8 = 0;
  unint64_t v9 = a1 + 1;
  do
  {
    if (!a4 || [v5 visitMaskViews])
    {
      uint64_t v10 = (void *)MEMORY[0x18C108260]();
      int v11 = [v5 _visitView:a3];
      if (a2 && v11) {
        *(void *)(a2 + 8 * v8++) = v5;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v5 = v12;
  }
  while (v12);
  if (a2) {
LABEL_10:
  }
    *(void *)(a2 + 8 * v8) = 0;
  return v8;
}

void sub_1853DD088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Block_object_dispose((const void *)(v13 - 64), 8);
  _Unwind_Resume(a1);
}

BOOL _UIBarStyleWithTintColorIsTranslucentOnScreen(unint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if ([v5 _userInterfaceIdiom] == 3) {
    goto LABEL_2;
  }
  if (v5)
  {
    uint64_t v7 = [v5 _userInterfaceIdiom];
    if (a1 > 2 || v7 == 3) {
      goto LABEL_8;
    }
LABEL_2:
    BOOL v6 = 1;
    goto LABEL_11;
  }
  if (a1 < 3) {
    goto LABEL_2;
  }
LABEL_8:
  if (a2) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
  }
LABEL_11:

  return v6;
}

void sub_1853DE428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *UIAccessibilityUpdateInvertColorsFilters(void *a1, int a2, uint64_t a3)
{
  int v6 = _AXSInvertColorsEnabled();
  if (a3 == 1 && !v6) {
    return 0;
  }
  uint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
  if (a1 && !a3)
  {
    do
    {
      uint64_t v8 = (void *)[a1 filters];
      uint64_t v9 = [v8 indexOfObjectPassingTest:&__block_literal_global_454];
      uint64_t v7 = v9;
      if (v8) {
        BOOL v10 = v9 == 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10) {
        int v11 = a2 ^ 1;
      }
      else {
        int v11 = 1;
      }
      if (v11 == 1) {
        break;
      }
      a1 = (void *)[a1 superlayer];
    }
    while (a1);
  }
  if (a3)
  {
    if (a3 != 1) {
      return 0;
    }
    uint64_t v12 = objc_msgSend((id)objc_msgSend(a1, "filters"), "indexOfObjectPassingTest:", &__block_literal_global_454);
    if ([a1 filters])
    {
      if (v12 != 0x7FFFFFFFFFFFFFFFLL) {
        return 0;
      }
    }
    if ([a1 filters]) {
      id v16 = (id)objc_msgSend((id)objc_msgSend(a1, "filters"), "mutableCopy");
    }
    else {
      id v16 = (id)[MEMORY[0x1E4F1CA48] array];
    }
    id v15 = v16;
    uint64_t v17 = (void *)[MEMORY[0x1E4F39BC0] filterWithType:*MEMORY[0x1E4F3A028]];
    [v17 setName:@"InvertColorsDoubleInvert"];
    [v17 setAccessibility:1];
    [v15 addObject:v17];
LABEL_26:
    [a1 setFilters:v15];
    return a1;
  }
  uint64_t v14 = [a1 filters];
  id result = 0;
  if (v14 && v7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    id v15 = (id)objc_msgSend((id)objc_msgSend(a1, "filters"), "mutableCopy");
    [v15 removeObjectAtIndex:v7];
    goto LABEL_26;
  }
  return result;
}

uint64_t _UIGestureRecognizerContainerCompare(unsigned char *a1, unsigned char *a2, int a3)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  if (os_variant_has_internal_diagnostics())
  {
    if (!a1)
    {
      uint64_t v46 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_fault_impl(&dword_1853B0000, v46, OS_LOG_TYPE_FAULT, "Unexpected nil gesture container", buf, 2u);
      }
    }
  }
  else if (!a1)
  {
    uint64_t v48 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_MergedGlobals_1106) + 8);
    if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1853B0000, v48, OS_LOG_TYPE_ERROR, "Unexpected nil gesture container", buf, 2u);
    }
  }
  if (os_variant_has_internal_diagnostics())
  {
    if (!a2)
    {
      unsigned int v47 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_fault_impl(&dword_1853B0000, v47, OS_LOG_TYPE_FAULT, "Unexpected nil other container", buf, 2u);
      }
    }
  }
  else if (!a2)
  {
    id v49 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB261508) + 8);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1853B0000, v49, OS_LOG_TYPE_ERROR, "Unexpected nil other container", buf, 2u);
    }
  }
  if (a1 == a2) {
    return 0;
  }
  id v6 = (id)[a1 _eventReceivingWindow];
  id v7 = (id)[a2 _eventReceivingWindow];
  if (v6 == v7)
  {
    long long v22 = objc_opt_new();
    long long v23 = objc_opt_new();
    if (isDescendantOfContainer(a1, a2, v22)) {
      goto LABEL_15;
    }
    if ((isDescendantOfContainer(a2, a1, v23) & 1) == 0)
    {
      if ([v23 count])
      {
        uint64_t v30 = a1;
        while (1)
        {
          a1 = v30;
          double v31 = (id)[v30 _parentGestureRecognizerContainer];
          if (!v31) {
            break;
          }
          uint64_t v30 = v31;
          if ([v23 containsObject:v31]) {
            goto LABEL_38;
          }
        }
        uint64_t v21 = 0;
        goto LABEL_67;
      }
      double v32 = [v22 lastObject];

      uint64_t v21 = 0;
      if (!a2 || (uint64_t v30 = a2, v32 != a2))
      {
LABEL_67:

        return v21;
      }
      do
      {
LABEL_38:
        double v33 = a2;
        int v34 = (id)[a2 _parentGestureRecognizerContainer];
        if (!v34) {
          break;
        }
        a2 = v34;
      }
      while (v34 != v30);
      if (_IsKindOfUIView((uint64_t)a1))
      {
        if (_IsKindOfUIView((uint64_t)v33))
        {
          if ((a1[120] & 0x10) != 0)
          {
            double v35 = [a1 superview];

            if (v35 == v33)
            {
LABEL_15:
              uint64_t v21 = 1;
              goto LABEL_67;
            }
          }
        }
      }
      if (!_IsKindOfUIView((uint64_t)v33)
        || !_IsKindOfUIView((uint64_t)a1)
        || (v33[120] & 0x10) == 0
        || ([v33 superview],
            id v36 = (unsigned char *)objc_claimAutoreleasedReturnValue(),
            v36,
            v36 != a1))
      {
        double v37 = [v30 _childGestureRecognizerContainers];
        unint64_t v38 = [v37 indexOfObject:a1];
        unint64_t v39 = [v37 indexOfObject:v33];
        int has_internal_diagnostics = os_variant_has_internal_diagnostics();
        BOOL v42 = v38 == 0x7FFFFFFFFFFFFFFFLL || v39 == 0x7FFFFFFFFFFFFFFFLL;
        if (has_internal_diagnostics)
        {
          if (v42)
          {
            int v50 = __UIFaultDebugAssertLog();
            if (os_log_type_enabled(v50, OS_LOG_TYPE_FAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_fault_impl(&dword_1853B0000, v50, OS_LOG_TYPE_FAULT, "Failed to lookup child index from the common ancestor", buf, 2u);
            }
          }
        }
        else if (v42)
        {
          uint64_t v52 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB261510) + 8);
          if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1853B0000, v52, OS_LOG_TYPE_ERROR, "Failed to lookup child index from the common ancestor", buf, 2u);
          }
        }
        if (os_variant_has_internal_diagnostics())
        {
          if (v38 == v39)
          {
            uint64_t v51 = __UIFaultDebugAssertLog();
            if (os_log_type_enabled(v51, OS_LOG_TYPE_FAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_fault_impl(&dword_1853B0000, v51, OS_LOG_TYPE_FAULT, "Unexpected equal node indexes", buf, 2u);
            }
          }
        }
        else if (v38 == v39)
        {
          uint64_t v53 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB261518) + 8);
          if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1853B0000, v53, OS_LOG_TYPE_ERROR, "Unexpected equal node indexes", buf, 2u);
          }
        }
        uint64_t v43 = -1;
        if (!a3) {
          uint64_t v43 = 1;
        }
        uint64_t v44 = 1;
        if (!a3) {
          uint64_t v44 = -1;
        }
        if (v38 >= v39) {
          uint64_t v21 = v44;
        }
        else {
          uint64_t v21 = v43;
        }

        goto LABEL_67;
      }
    }
    uint64_t v21 = -1;
    goto LABEL_67;
  }
  id v8 = v7;
  id v9 = (id)[v6 windowScene];
  id v10 = (id)[v8 windowScene];
  if (v9 == v10)
  {
    long long v56 = 0u;
    long long v57 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v24 = objc_msgSend(v9, "_allWindows", 0);
    uint64_t v25 = [v24 countByEnumeratingWithState:&v54 objects:v59 count:16];
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = *(void *)v55;
      uint64_t v21 = 1;
      while (2)
      {
        uint64_t v28 = 0;
        do
        {
          if (*(void *)v55 != v27) {
            objc_enumerationMutation(v24);
          }
          id v29 = *(id *)(*((void *)&v54 + 1) + 8 * v28);
          if (v29 == v6) {
            goto LABEL_35;
          }
          if (v29 == v8)
          {
            uint64_t v21 = -1;
LABEL_35:

            return v21;
          }
          ++v28;
        }
        while (v26 != v28);
        uint64_t v26 = [v24 countByEnumeratingWithState:&v54 objects:v59 count:16];
        if (v26) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  int v11 = v10;
  uint64_t v12 = [v9 _FBSScene];
  uint64_t v13 = [v12 settings];
  [v13 level];
  double v15 = v14;

  id v16 = [v11 _FBSScene];
  uint64_t v17 = [v16 settings];
  [v17 level];
  double v19 = v18;

  if (v15 >= v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = -1;
  }
  if (v15 > v19) {
    return 1;
  }
  else {
    return v20;
  }
}

uint64_t _UIViewRemoveConstraintsMadeDanglyByChangingSuperview(uint64_t result, void *a2, void *a3)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    id v5 = (void *)result;
    if (os_variant_has_internal_diagnostics())
    {
      if (a2 == a3)
      {
        int v34 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_1853B0000, v34, OS_LOG_TYPE_FAULT, "If we're changing superview, the old and new superview should not be the same", buf, 2u);
        }
      }
    }
    else if (a2 == a3)
    {
      double v35 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIViewRemoveConstraintsMadeDanglyByChangingSuperview___s_category)+ 8);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1853B0000, v35, OS_LOG_TYPE_ERROR, "If we're changing superview, the old and new superview should not be the same", buf, 2u);
      }
    }
    id result = [v5 _wantsAutolayout];
    if (result)
    {
      if (a3 && (dyld_program_sdk_at_least() & 1) == 0)
      {
        id v7 = a2;
        do
        {
          id v8 = objc_msgSend((id)objc_msgSend(v7, "_layoutEngine"), "delegate");
          if ((dyld_program_sdk_at_least() & 1) == 0
            && (!v8 || ([v8 _forceLayoutEngineSolutionInRationalEdges] & 1) == 0)
            && [a3 isDescendantOfView:v7])
          {
            uint64_t v9 = [v7 _layoutEngine];
            if (v7 == a3) {
              break;
            }
            uint64_t v10 = v9;
            uint64_t v11 = [v7 _window];
            if (v11)
            {
              uint64_t v12 = v11;
              if (v11 == [a3 _window])
              {
                objc_msgSend(v7, "convertPoint:toView:", v12, 0.0, 0.0);
                double v14 = v13;
                double v16 = v15;
                objc_msgSend(v7, "convertPoint:toView:", v12, 1.0, 0.0);
                double v18 = v17;
                double v20 = v19 - v14;
                objc_msgSend(a3, "convertPoint:toView:", v12, 0.0, 0.0);
                double v22 = v21;
                double v24 = v23;
                objc_msgSend(a3, "convertPoint:toView:", v12, 1.0, 0.0);
                if (v20 == v26 - v22)
                {
                  double v6 = v18 - v16;
                  if (v18 - v16 == v25 - v24) {
                    break;
                  }
                }
              }
            }
            uint64_t v27 = (void *)[v7 _constraintsExceptingSubviewAutoresizingConstraints];
            long long v36 = 0u;
            long long v37 = 0u;
            long long v38 = 0u;
            long long v39 = 0u;
            uint64_t v28 = [v27 countByEnumeratingWithState:&v36 objects:v41 count:16];
            if (v28)
            {
              uint64_t v29 = v28;
              uint64_t v30 = *(void *)v37;
              do
              {
                uint64_t v31 = 0;
                do
                {
                  if (*(void *)v37 != v30) {
                    objc_enumerationMutation(v27);
                  }
                  double v32 = *(void **)(*((void *)&v36 + 1) + 8 * v31);
                  if (NSLayoutConstraintIsDanglyInContainer())
                  {
                    [v32 _removeFromEngine:v10];
                    [v32 _addToEngine:v10];
                  }
                  ++v31;
                }
                while (v29 != v31);
                uint64_t v29 = [v27 countByEnumeratingWithState:&v36 objects:v41 count:16];
              }
              while (v29);
            }
          }
          id v7 = (void *)[v7 superview];
        }
        while (v7);
      }
      objc_msgSend(a2, "_snipDangliesWithForce:repairIfPossibleForViewThatMoved:newSuperview:oldSuperview:", 1, v5, a3, a2, v6);
      id result = [a2 superview];
      if (result)
      {
        double v33 = (void *)result;
        do
        {
          [v33 _snipDangliesWithForce:0 repairIfPossibleForViewThatMoved:v5 newSuperview:a3 oldSuperview:a2];
          id result = [v33 superview];
          double v33 = (void *)result;
        }
        while (result);
      }
    }
  }
  return result;
}

void sub_1853E0AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_1853E1CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UITableConstantsForTraitCollection(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 userInterfaceIdiom];
  if (v2 == -1)
  {
    id v3 = +[UIDevice currentDevice];
    uint64_t v2 = [v3 userInterfaceIdiom];
  }
  switch(v2)
  {
    case 0:
      uint64_t v4 = UITableConstants_Phone;
      goto LABEL_10;
    case 1:
    case 5:
      uint64_t v4 = UITableConstants_Pad;
      goto LABEL_10;
    case 2:
    case 8:
      uint64_t v4 = UITableConstants_TV;
      goto LABEL_10;
    case 3:
      uint64_t v4 = UITableConstants_CarPlay;
      goto LABEL_10;
    case 4:
      uint64_t v4 = UITableConstants_Watch;
LABEL_10:
      id v7 = [(__objc2_class *)v4 sharedConstants];
      break;
    default:
      id v5 = [MEMORY[0x1E4F28B00] currentHandler];
      double v6 = [NSString stringWithUTF8String:"id<UITableConstants> _UITableConstantsForTraitCollection(UITraitCollection *__strong)"];
      objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"UITableConstants.m", 70, @"UIUserInterfaceIdiom (%ld) is not supported by _UITableConstants", v2);

      id v7 = 0;
      break;
  }
  if (v1)
  {
    _UIRecordTraitUsage((unint64_t)v1, 0x13uLL);
    if (v1[16] == 2)
    {
      uint64_t v8 = [v7 sidebarVariant];

      id v7 = (void *)v8;
    }
  }
  uint64_t v9 = objc_msgSend(v7, "variantForActive:", objc_msgSend(v1, "activeAppearance") != 0);

  return v9;
}

id _insetCoordinatableContentScrollViewForEdgePotentiallyIgnoringSearch(void *a1, void *a2, uint64_t a3, char a4)
{
  id v7 = a2;
  if ([a1 _isNestedNavigationController])
  {
    uint64_t v8 = 0;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v9 = [v7 topViewController];
    }
    else
    {
      id v9 = v7;
    }
    uint64_t v10 = v9;
    if ((a4 & 1) == 0)
    {
      uint64_t v11 = _viewControllerForObservableScrollViewForViewController(v9);

      uint64_t v10 = (void *)v11;
    }
    uint64_t v8 = [v10 _contentOrObservableScrollViewForEdge:a3];
  }
  return v8;
}

uint64_t _UIBarsApplyChromelessEverywhere()
{
  if (qword_1EB25C840 != -1) {
    dispatch_once(&qword_1EB25C840, &__block_literal_global_91);
  }
  return byte_1EB25C81A;
}

id _viewControllerForObservableScrollViewForViewController(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 navigationItem];
  id v3 = [v2 _searchControllerIfAllowed];
  uint64_t v4 = [v3 _currentActiveChildViewController];
  id v5 = (void *)v4;
  if (v4) {
    double v6 = (void *)v4;
  }
  else {
    double v6 = v1;
  }
  id v7 = v6;

  return v7;
}

BOOL _UINavigationItemUseInlineSearchLayoutForTraits(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (!v4)
  {
    uint64_t v8 = +[UITraitCollection _fallbackTraitCollection]();
    BOOL v9 = _UIBarsUseDesktopNavigationBar(v8);

    if (v9) {
      goto LABEL_3;
    }
LABEL_7:
    BOOL v7 = 0;
    goto LABEL_8;
  }
  if (!_UIBarsUseDesktopNavigationBar(v4)) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v6 = [v3 preferredSearchBarPlacement];
  if (v6 <= 4 && ((1 << v6) & 0x1A) != 0)
  {
    BOOL v7 = 1;
  }
  else
  {
    BOOL v7 = 0;
    if (v5 && !v6) {
      BOOL v7 = [v5 horizontalSizeClass] == 2;
    }
  }
LABEL_8:

  return v7;
}

BOOL _UIBarsUseDesktopNavigationBar(void *a1)
{
  unint64_t v1 = [a1 userInterfaceIdiom];
  BOOL result = 0;
  if (v1 <= 6 && ((1 << v1) & 0x63) != 0)
  {
    if (qword_1EB25C848 != -1) {
      dispatch_once(&qword_1EB25C848, &__block_literal_global_96_0);
    }
    return byte_1EB25C81B != 0;
  }
  return result;
}

BOOL _colorAppearanceTraitChanged(uint64_t a1, uint64_t a2)
{
  if (!(a1 | a2)) {
    return 0;
  }
  BOOL v2 = 1;
  if (a1 && a2)
  {
    uint64_t v9 = 0;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x2020000000;
    char v12 = 0;
    TraitCollectionTSD = GetTraitCollectionTSD();
    char v6 = TraitCollectionTSD[9];
    TraitCollectionTSD[9] = 1;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = ___colorAppearanceTraitChanged_block_invoke;
    v8[3] = &unk_1E52F2A98;
    v8[4] = a1;
    v8[5] = a2;
    v8[6] = &v9;
    _UIPerformWithTraitLock((uint64_t)v8);
    *((unsigned char *)GetTraitCollectionTSD() + 9) = v6;
    BOOL v2 = *((unsigned char *)v10 + 24) != 0;
    _Block_object_dispose(&v9, 8);
  }
  return v2;
}

void sub_1853E6938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIPerformWithTraitLock(uint64_t a1)
{
  if (!a1)
  {
    BOOL v2 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v2 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "void _UIPerformWithTraitLock(void (^ _Nonnull)(void))"), @"UITrait_NonARC.m", 51, @"Invalid parameter not satisfying: %@", @"block != NULL" file lineNumber description];
  }
  os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  (*(void (**)(uint64_t))(a1 + 16))(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
}

void ___colorAppearanceTraitChanged_block_invoke(uint64_t a1)
{
  v1[0] = (void (*)(void, void, void))MEMORY[0x1E4F143A8];
  v1[1] = (void (*)(void, void, void))3221225472;
  v1[2] = (void (*)(void, void, void))___colorAppearanceTraitChanged_block_invoke_2;
  v1[3] = (void (*)(void, void, void))&unk_1E52F2E10;
  long long v2 = *(_OWORD *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  _UITraitTokenSetEnumerate(_allTraitTokensAffectingColorAppearance, v1);
}

uint64_t _UIPresentationControllersInheritTraitsFromViewHierarchy()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    if (_UIInternalPreferencesRevisionOnce != -1) {
      dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
    }
    int v1 = _UIInternalPreferencesRevisionVar;
    if (_UIInternalPreferencesRevisionVar < 1
      || (int v3 = _UIInternalPreference_PresentationControllersInheritTraitsFromViewHierarchy,
          _UIInternalPreferencesRevisionVar == _UIInternalPreference_PresentationControllersInheritTraitsFromViewHierarchy))
    {
      BOOL v2 = 1;
    }
    else
    {
      do
      {
        BOOL v2 = v1 >= v3;
        if (v1 < v3) {
          break;
        }
        _UIInternalPreferenceSync(v1, &_UIInternalPreference_PresentationControllersInheritTraitsFromViewHierarchy, @"PresentationControllersInheritTraitsFromViewHierarchy", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        int v3 = _UIInternalPreference_PresentationControllersInheritTraitsFromViewHierarchy;
      }
      while (v1 != _UIInternalPreference_PresentationControllersInheritTraitsFromViewHierarchy);
    }
    return byte_1EB256F84 || v2;
  }
  return result;
}

void sub_1853E8464(_Unwind_Exception *a1)
{
}

uint64_t _UIRestorePreviousFallbackEnvironment(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t result = pthread_main_np();
  if (result == 1)
  {
    qword_1EB261428 = (uint64_t)a1;
  }
  else
  {
    uint64_t result = os_variant_has_internal_diagnostics();
    if (result)
    {
      uint64_t v3 = [NSString stringWithFormat:@"Unsupported usage of UIKit off the main queue! (Attempted to restore previous fallback environment: %@%@)", a1, _additionalDebuggingDescriptionForFallbackEnvironment(a1)];
      id v4 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB261430) + 8);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218242;
        uint64_t v7 = 4226526466;
        __int16 v8 = 2114;
        uint64_t v9 = v3;
        _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "Exception Code %llx - %{public}@", buf, 0x16u);
      }
      uint64_t v5 = getpid();
      return __UISimulateCrash_0(v5, 4226526466, v3);
    }
  }
  return result;
}

uint64_t _UISetCurrentFallbackEnvironment(void *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  if (pthread_main_np() == 1)
  {
    uint64_t result = qword_1EB261428;
    qword_1EB261428 = (uint64_t)a1;
  }
  else
  {
    if (os_variant_has_internal_diagnostics())
    {
      uint64_t v3 = [NSString stringWithFormat:@"Unsupported usage of UIKit off the main queue! (Attempted to set current fallback environment: %@%@)", a1, _additionalDebuggingDescriptionForFallbackEnvironment(a1)];
      id v4 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB261420) + 8);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218242;
        uint64_t v7 = 4226526465;
        __int16 v8 = 2114;
        uint64_t v9 = v3;
        _os_log_impl(&dword_1853B0000, v4, OS_LOG_TYPE_ERROR, "Exception Code %llx - %{public}@", buf, 0x16u);
      }
      uint64_t v5 = getpid();
      __UISimulateCrash_0(v5, 4226526465, v3);
    }
    return 0;
  }
  return result;
}

void sub_1853E9444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *std::__hash_table<std::__hash_value_type<void (*)(void),_UITrackedTraitUsageRecord>,std::__unordered_map_hasher<void (*)(void),std::__hash_value_type<void (*)(void),_UITrackedTraitUsageRecord>,std::hash<void (*)(void)>,std::equal_to<void (*)(void)>,true>,std::__unordered_map_equal<void (*)(void),std::__hash_value_type<void (*)(void),_UITrackedTraitUsageRecord>,std::equal_to<void (*)(void)>,std::hash<void (*)(void)>,true>,std::allocator<std::__hash_value_type<void (*)(void),_UITrackedTraitUsageRecord>>>::__emplace_unique_key_args<void (*)(void),std::piecewise_construct_t const&,std::tuple<void (* const&)(void)>,std::tuple<>>(float *a1, unint64_t a2, void *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *((void *)a1 + 1);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      char v12 = (char *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = *((void *)v12 + 1);
          if (v13 == v8)
          {
            if (*((void *)v12 + 2) == a2) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          char v12 = *(char **)v12;
        }
        while (v12);
      }
    }
  }
  char v12 = (char *)operator new(0x48uLL);
  *(void *)char v12 = 0;
  *((void *)v12 + 1) = v8;
  *((void *)v12 + 2) = *a3;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  float v14 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v15 = a1[8];
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      int8x8_t prime = (int8x8_t)v18;
    }
    else {
      int8x8_t prime = (int8x8_t)v17;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v9 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v9) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v9)
    {
      unint64_t v26 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        unint64_t v26 = std::__next_prime(v26);
      }
      else
      {
        uint64_t v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2) {
          unint64_t v26 = v28;
        }
      }
      if (*(void *)&prime <= v26) {
        int8x8_t prime = (int8x8_t)v26;
      }
      if (*(void *)&prime >= v9)
      {
        unint64_t v9 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:nn180100]();
          }
          double v20 = operator new(8 * *(void *)&prime);
          double v21 = *(void **)a1;
          *(void *)a1 = v20;
          if (v21) {
            operator delete(v21);
          }
          uint64_t v22 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v22++) = 0;
          while (*(void *)&prime != v22);
          double v23 = (void *)*((void *)a1 + 2);
          if (v23)
          {
            unint64_t v24 = v23[1];
            uint8x8_t v25 = (uint8x8_t)vcnt_s8(prime);
            v25.i16[0] = vaddlv_u8(v25);
            if (v25.u32[0] > 1uLL)
            {
              if (v24 >= *(void *)&prime) {
                v24 %= *(void *)&prime;
              }
            }
            else
            {
              v24 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v24) = a1 + 4;
            uint64_t v29 = (void *)*v23;
            if (*v23)
            {
              do
              {
                unint64_t v30 = v29[1];
                if (v25.u32[0] > 1uLL)
                {
                  if (v30 >= *(void *)&prime) {
                    v30 %= *(void *)&prime;
                  }
                }
                else
                {
                  v30 &= *(void *)&prime - 1;
                }
                if (v30 != v24)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v30))
                  {
                    *(void *)(*(void *)a1 + 8 * v30) = v23;
                    goto LABEL_55;
                  }
                  *double v23 = *v29;
                  *uint64_t v29 = **(void **)(*(void *)a1 + 8 * v30);
                  **(void **)(*(void *)a1 + 8 * v30) = v29;
                  uint64_t v29 = v23;
                }
                unint64_t v30 = v24;
LABEL_55:
                double v23 = v29;
                uint64_t v29 = (void *)*v29;
                unint64_t v24 = v30;
              }
              while (v29);
            }
          }
          unint64_t v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        double v35 = *(void **)a1;
        *(void *)a1 = 0;
        if (v35) {
          operator delete(v35);
        }
        unint64_t v9 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v31 = *(void **)a1;
  double v32 = *(void **)(*(void *)a1 + 8 * v3);
  if (v32)
  {
    *(void *)char v12 = *v32;
LABEL_72:
    *double v32 = v12;
    goto LABEL_73;
  }
  *(void *)char v12 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v12;
  v31[v3] = a1 + 4;
  if (*(void *)v12)
  {
    unint64_t v33 = *(void *)(*(void *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v33 >= v9) {
        v33 %= v9;
      }
    }
    else
    {
      v33 &= v9 - 1;
    }
    double v32 = (void *)(*(void *)a1 + 8 * v33);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return v12;
}

void sub_1853E98D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_UIBeginTrackingTraitUsage@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (!a1)
  {
    unint64_t v9 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v9 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "_UITraitUsageTrackingState _UIBeginTrackingTraitUsage(id<_UITraitTrackingSupporting>, id<_UITraitTrackingSupporting> _Nullable)"), @"UITraitCollection_NonARC.m", 3049, @"Invalid parameter not satisfying: %@", @"primaryTraitEnvironment != nil" file lineNumber description];
  }
  unint64_t v6 = (char *)GetTraitCollectionTSD() + 16;
  memcpy(a3, v6, 0x160uLL);
  long long v7 = 0uLL;
  memset(__src, 0, sizeof(__src));
  if (a1)
  {
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 3221225472;
    unint64_t v13 = ___UITraitCollectionInlinePointerSetForTraitEnvironment_block_invoke;
    float v14 = &__block_descriptor_40_e27_v16__0__UITraitCollection_8l;
    float v15 = __src;
    [a1 _collectExistingTraitCollectionsForTraitTracking:&v11];
    long long v7 = 0uLL;
  }
  *(_OWORD *)((char *)&__src[8] + 8) = v7;
  *(_OWORD *)((char *)&__src[9] + 8) = v7;
  *(void *)&__src[8] = a1;
  *((void *)&__src[10] + 1) = 0;
  __src[11] = v7;
  __src[12] = v7;
  __src[13] = v7;
  __src[14] = v7;
  __src[15] = v7;
  __src[16] = v7;
  __src[17] = v7;
  __src[18] = v7;
  if (a2)
  {
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 3221225472;
    unint64_t v13 = ___UITraitCollectionInlinePointerSetForTraitEnvironment_block_invoke;
    float v14 = &__block_descriptor_40_e27_v16__0__UITraitCollection_8l;
    float v15 = &__src[11];
    [a2 _collectExistingTraitCollectionsForTraitTracking:&v11];
  }
  *(_OWORD *)((char *)&__src[19] + 8) = 0u;
  *(_OWORD *)((char *)&__src[20] + 8) = 0u;
  *(void *)&__src[19] = a2;
  *((void *)&__src[21] + 1) = 0;
  return memcpy(v6, __src, 0x160uLL);
}

double _UITraitUsageTrackingResultDestroy(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 16);
  if (v2) {

  }
  unint64_t v3 = *(void **)(a1 + 136);
  if (v3) {

  }
  id v4 = *(void **)(a1 + 192);
  if (v4) {

  }
  uint64_t v5 = *(void **)(a1 + 312);
  if (v5) {

  }
  double result = 0.0;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t _UIViewShowAlignmentRects()
{
  if (qword_1EB25A618 != -1) {
    dispatch_once(&qword_1EB25A618, &__block_literal_global_75_2);
  }
  return byte_1EB25A5AE;
}

uint64_t _UIObservationTrackingEnabled()
{
  if (qword_1EB261CA8 != -1) {
    dispatch_once(&qword_1EB261CA8, &__block_literal_global_368);
  }
  return _MergedGlobals_1149;
}

uint64_t _UIViewShouldProcessTraitChangeDuringLayout(void *a1, uint64_t a2, uint64_t a3)
{
  if ((a1[13] & 0x800000000000) == 0) {
    return 0;
  }
  if (qword_1EB25C330 != -1) {
    dispatch_once(&qword_1EB25C330, &__block_literal_global_3712);
  }
  if (byte_1EB25C0B5)
  {
    long long v7 = [a1 _window];

    if (!v7) {
      return 0;
    }
  }
  else
  {
    if (!(a2 | a3))
    {
      id v8 = (id)[a1 window];
      if (!v8) {
        return 0;
      }
      unint64_t v9 = v8;
      if (!dyld_program_sdk_at_least()
        || ([a1 superview],
            uint8x8_t v10 = objc_claimAutoreleasedReturnValue(),
            v10,
            v10 != v9))
      {
        if (([v9 _shouldForceTraitPropagationThroughHierarchy] & 1) == 0
          && (a1[13] & 0x1000000000000) == 0)
        {
          return 0;
        }
      }
    }
    uint64_t v11 = [a1 window];
    if (v11)
    {
    }
    else if (dyld_program_sdk_at_least())
    {
      return 0;
    }
  }
  return 1;
}

void sub_1853ECD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Block_object_dispose((const void *)(v37 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t _tagLayoutItem(void *a1, uint64_t a2)
{
  id v4 = (void *)[a1 _referenceView];
  uint64_t v5 = v4;
  if ((a2 - 11) <= 1)
  {
    unint64_t v6 = (void *)[v4 _viewForLoweringBaselineLayoutAttribute:a2];
    if (v6 != v5)
    {
LABEL_7:
      return [v6 _setWantsAutolayout];
    }
  }
  uint64_t v7 = [a1 _referenceView];
  if (!a1 || (void *)v7 == a1 || objc_msgSend(a1, "nsli_superitem") != v7)
  {
    unint64_t v6 = v5;
    goto LABEL_7;
  }
  return [v5 _setSubviewWantsAutolayoutTripWantsAutolayout:1];
}

void _UIOldConstraintsSupportUpdateDependentViewsForConstraint(void *a1, char a2)
{
  id v3 = a1;
  if ((dyld_program_sdk_at_least() & 1) == 0)
  {
    uint64_t v10 = MEMORY[0x1E4F143A8];
    uint64_t v11 = 3221225472;
    uint64_t v12 = ___UIOldConstraintsSupportUpdateDependentViewsForConstraint_block_invoke;
    unint64_t v13 = &unk_1E5304DB8;
    char v15 = a2;
    id v4 = v3;
    id v14 = v4;
    uint64_t v5 = (void (**)(void *, void *))_Block_copy(&v10);
    unint64_t v6 = objc_msgSend(v4, "firstItem", v10, v11, v12, v13);
    if ([v4 firstAttribute] == 11 || objc_msgSend(v4, "firstAttribute") == 12)
    {
      uint64_t v7 = [v6 viewForBaselineLayout];

      unint64_t v6 = (void *)v7;
    }
    v5[2](v5, v6);
    id v8 = [v4 secondItem];

    if ([v4 secondAttribute] == 11 || objc_msgSend(v4, "secondAttribute") == 12)
    {
      uint64_t v9 = [v8 viewForBaselineLayout];

      id v8 = (void *)v9;
    }
    v5[2](v5, v8);
  }
}

uint64_t _UIViewEnumerateConstraints(void *a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  char v32 = 0;
  if ([a1 _constraintsExceptingSubviewAutoresizingConstraints]
    && (long long v30 = 0u,
        long long v31 = 0u,
        long long v28 = 0u,
        long long v29 = 0u,
        id v4 = (void *)[a1 _constraintsExceptingSubviewAutoresizingConstraints],
        (uint64_t v5 = [v4 countByEnumeratingWithState:&v28 objects:v35 count:16]) != 0))
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v29;
LABEL_4:
    uint64_t v8 = 0;
    while (1)
    {
      if (*(void *)v29 != v7) {
        objc_enumerationMutation(v4);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, void, char *))(a2 + 16))(a2, *(void *)(*((void *)&v28 + 1) + 8 * v8), &v32);
      if (v32) {
        break;
      }
      if (v6 == ++v8)
      {
        uint64_t v6 = [v4 countByEnumeratingWithState:&v28 objects:v35 count:16];
        if (v6) {
          goto LABEL_4;
        }
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    uint64_t v10 = (void *)[a1 _allSubviews];
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t result = [v10 countByEnumeratingWithState:&v24 objects:v34 count:16];
    if (result)
    {
      uint64_t v11 = result;
      uint64_t v12 = *(void *)v25;
      while (2)
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v25 != v12) {
            objc_enumerationMutation(v10);
          }
          id v14 = *(void **)(*((void *)&v24 + 1) + 8 * v13);
          if (-[UIView _usesAutoresizingConstraints]((uint64_t)v14))
          {
            long long v22 = 0u;
            long long v23 = 0u;
            long long v20 = 0u;
            long long v21 = 0u;
            char v15 = (void *)-[UIView _autoresizingConstraints](v14);
            uint64_t v16 = [v15 countByEnumeratingWithState:&v20 objects:v33 count:16];
            if (v16)
            {
              uint64_t v17 = v16;
              uint64_t v18 = *(void *)v21;
LABEL_18:
              uint64_t v19 = 0;
              while (1)
              {
                if (*(void *)v21 != v18) {
                  objc_enumerationMutation(v15);
                }
                uint64_t result = (*(uint64_t (**)(uint64_t, void, char *))(a2 + 16))(a2, *(void *)(*((void *)&v20 + 1) + 8 * v19), &v32);
                if (v32) {
                  return result;
                }
                if (v17 == ++v19)
                {
                  uint64_t v17 = [v15 countByEnumeratingWithState:&v20 objects:v33 count:16];
                  if (v17) {
                    goto LABEL_18;
                  }
                  break;
                }
              }
            }
          }
          ++v13;
        }
        while (v13 != v11);
        uint64_t result = [v10 countByEnumeratingWithState:&v24 objects:v34 count:16];
        uint64_t v11 = result;
        if (result) {
          continue;
        }
        break;
      }
    }
  }
  return result;
}

BOOL _UILayoutAttributeIsBaselineAttribute(int a1)
{
  return (a1 - 11) < 2;
}

id _UITraitCollectionReplacingStyleForBackgroundColorIfNeccessary(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 accessibilityContrast] == 1)
  {
    uint64_t v5 = self;
    if ([v3 valueForNSIntegerTrait:v5] == 1
      && ([v4 _systemColorName], (uint64_t v6 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = [&unk_1ED3F77F8 objectForKey:v6];

      if (v8)
      {
        id v9 = [v3 _traitCollectionByReplacingNSIntegerValue:1 forTraitToken:0x1ED3F5A48];
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  id v9 = v3;
LABEL_8:
  uint64_t v10 = v9;

  return v10;
}

double LayerContentModeTransform@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>, double result@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>)
{
  uint64_t v8 = MEMORY[0x1E4F1DAB8];
  long long v9 = *(_OWORD *)(MEMORY[0x1E4F1DAB8] + 16);
  *(_OWORD *)a2 = *MEMORY[0x1E4F1DAB8];
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v8 + 32);
  switch(a1)
  {
    case 0uLL:
      *(double *)(a2 + 32) = result;
      *(double *)(a2 + 40) = a4;
      if (a5 != a7)
      {
        uint64_t result = a5 / a7;
        *(double *)a2 = a5 / a7;
      }
      if (a6 != a8)
      {
        uint64_t result = a6 / a8;
        *(double *)(a2 + 24) = a6 / a8;
      }
      return result;
    case 1uLL:
      double v10 = a5 / a7;
      if (a5 / a7 >= a6 / a8) {
        double v10 = a6 / a8;
      }
      goto LABEL_23;
    case 2uLL:
      double v10 = a5 / a7;
      if (a5 / a7 < a6 / a8) {
        double v10 = a6 / a8;
      }
LABEL_23:
      *(double *)a2 = v10;
      *(double *)(a2 + 24) = v10;
      *(double *)(a2 + 32) = result + (a5 - a7 * v10) * 0.5;
      uint64_t result = a4 + (a6 - a8 * v10) * 0.5;
      *(double *)(a2 + 40) = result;
      goto LABEL_5;
    case 4uLL:
    case 5uLL:
    case 6uLL:
      uint64_t result = result + a5 * 0.5 - a7 * 0.5;
      goto LABEL_4;
    case 7uLL:
    case 9uLL:
    case 0xBuLL:
      goto LABEL_4;
    case 8uLL:
    case 0xAuLL:
    case 0xCuLL:
      uint64_t result = result + a5 - a7;
LABEL_4:
      *(double *)(a2 + 32) = result;
LABEL_5:
      if (a1 > 0xC) {
        return result;
      }
      if (((1 << a1) & 0x190) != 0)
      {
        uint64_t result = a4 + a6 * 0.5 - a8 * 0.5;
LABEL_11:
        *(double *)(a2 + 40) = result;
        return result;
      }
      if (((1 << a1) & 0x620) == 0)
      {
        if (((1 << a1) & 0x1840) == 0) {
          return result;
        }
        uint64_t result = a4 + a6 - a8;
        goto LABEL_11;
      }
      *(double *)(a2 + 40) = a4;
      return result;
    default:
      return result;
  }
}

void sub_1853F3EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id a44,id a45)
{
  _Unwind_Resume(a1);
}

void UIRoundToScale(double a1, double a2)
{
  if (a2 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

void __copy_assignment_8_8_s0_s8_t16w8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
}

void _UIViewSetBackgroundColorSystemColorName(void *a1, void *a2)
{
  id object = a1;
  id v3 = a2;
  id v4 = object;
  uint64_t v6 = *((void *)object + 12);
  int v7 = *((_DWORD *)object + 28);
  if (v3)
  {
    uint64_t v8 = 128;
  }
  else
  {
    if ((v6 & 0x80) == 0) {
      goto LABEL_6;
    }
    uint64_t v8 = 0;
    id v4 = object;
  }
  uint64_t v5 = *((void *)object + 13);
  *((void *)object + 12) = v8 | v6 & 0xFFFFFFFFFFFFFF7FLL;
  *((void *)object + 13) = v5;
  *((_DWORD *)object + 28) = v7;
  objc_setAssociatedObject(v4, &unk_1EB25C0B9, v3, (void *)1);
LABEL_6:
}

id NSDiffableDataSourceSnapshot.numberOfSections.getter()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_numberOfSections);
}

uint64_t sub_1853F50A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1853F50C4(a1);
}

uint64_t sub_1853F50C4@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1E8FB0118 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v3 = qword_1E8FD58A8;
  qword_1E8FD58A8 = MEMORY[0x1E4FBC860];
  byte_1E8FAFC61 = 1;
  *a1 = v3;
  return result;
}

uint64_t sub_1853F5174(uint64_t a1, id *a2)
{
  char v3 = sub_186A1E94C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t ____windowsWithContexts_block_invoke(uint64_t a1, void *a2)
{
  return [a2 _hasContext];
}

unint64_t _UIThemeKeyValueFromTraitCollection(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    uint64_t v16 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v16 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSUInteger _UIThemeKeyValueFromTraitCollection(UITraitCollection *)"), @"UITraitCollection_NonARC.m", 3406, @"Invalid parameter not satisfying: %@", @"traitCollection != nil" file lineNumber description];
  }
  v17[0] = xmmword_186B8FCC0;
  v17[1] = xmmword_186B86440;
  uint64_t v18 = 10;
  if (_UITraitUsageTrackingEnabled())
  {
    TraitCollectionTSD = (uint64_t *)GetTraitCollectionTSD();
    if (!*((unsigned char *)TraitCollectionTSD + 9))
    {
      long long v9 = TraitCollectionTSD;
      if (TraitCollectionTSD[18] && _UIInlinePointerSetContainsElement(TraitCollectionTSD + 2, (unint64_t)a1))
      {
        uint64_t v11 = 0;
        uint64_t v12 = v9 + 19;
        do
        {
          _UITraitTokenSetInsert(v12, *(void *)((char *)v17 + v11), v10);
          v11 += 8;
        }
        while (v11 != 40);
      }
      else if (v9[40] && _UIInlinePointerSetContainsElement(v9 + 24, (unint64_t)a1))
      {
        uint64_t v14 = 0;
        char v15 = v9 + 41;
        do
        {
          _UITraitTokenSetInsert(v15, *(void *)((char *)v17 + v14), v13);
          v14 += 8;
        }
        while (v14 != 40);
      }
    }
  }
  char v3 = self;
  os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  CFNumberRef v4 = _UITraitTokenForTraitLocked(3, v3);
  os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
  uint64_t v5 = [a1 _valueForNSIntegerTraitToken:v4];
  uint64_t v6 = a1[10];
  if (v6 == 2) {
    unint64_t v7 = (unint64_t)(a1[20] == 1) << 8;
  }
  else {
    unint64_t v7 = 0;
  }
  if (v6 == 1000) {
    uint64_t v6 = 2;
  }
  if (v6 != 2) {
    unint64_t v7 = 0;
  }
  return (4 * a1[1] + 4) & 0x3C | ((unint64_t)(v5 == 1) << 9) | ((unint64_t)(a1[19] == 1) << 6) | v6 & 3 | ((unint64_t)(a1[3] == 1) << 7) | v7;
}

CFNumberRef _UITraitTokenForTraitLocked(uint64_t a1, void *a2)
{
  CFNumberRef v4 = (const __CFNumber *)[(id)qword_1EB2623C8 objectForKey:a2];
  CFNumberRef v5 = v4;
  if (!a1 || v4)
  {
    if (!a1 || !v4)
    {
      CFNumberRef v8 = v4;
      if (!a1)
      {
        CFNumberRef v8 = v4;
        if (!v4)
        {
          if (sel_name && (Class = object_getClass(a2), class_respondsToSelector(Class, sel_name))) {
            __n128 v13 = (NSString *)[a2 name];
          }
          else {
            __n128 v13 = NSStringFromClass((Class)a2);
          }
          long long v25 = v13;
          if (sel_identifier && (long long v26 = object_getClass(a2), class_respondsToSelector(v26, sel_identifier))) {
            uint64_t v27 = [a2 identifier];
          }
          else {
            uint64_t v27 = 0;
          }
          long long v30 = 0uLL;
          *(void *)&long long v31 = v25;
          *((void *)&v31 + 1) = v27;
          uint64_t v33 = 0;
          long long v32 = 0uLL;
          CFNumberRef v8 = _UIDefineNewTraitLocked((uint64_t)&v30);
          goto LABEL_52;
        }
      }
      goto LABEL_44;
    }
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v30 = 0u;
    _UIGetTraitMetadataLocked(v4, 0, (uint64_t)&v30);
    if (*((void *)&v30 + 1)) {
      return v5;
    }
  }
  if (sel_name && (uint64_t v6 = object_getClass(a2), class_respondsToSelector(v6, sel_name))) {
    unint64_t v7 = (NSString *)[a2 name];
  }
  else {
    unint64_t v7 = NSStringFromClass((Class)a2);
  }
  long long v9 = v7;
  __n128 v10 = sel_identifier;
  if (sel_identifier)
  {
    uint64_t v11 = object_getClass(a2);
    if (class_respondsToSelector(v11, sel_identifier)) {
      __n128 v10 = (char *)[a2 identifier];
    }
    else {
      __n128 v10 = 0;
    }
  }
  uint64_t v14 = sel_affectsColorAppearance;
  if (sel_affectsColorAppearance)
  {
    char v15 = object_getClass(a2);
    if (class_respondsToSelector(v15, sel_affectsColorAppearance)) {
      LOBYTE(v14) = [a2 affectsColorAppearance];
    }
    else {
      LOBYTE(v14) = 0;
    }
  }
  uint64_t v16 = sel__isPrivate;
  if (sel__isPrivate)
  {
    uint64_t v17 = object_getClass(a2);
    if (class_respondsToSelector(v17, sel__isPrivate)) {
      LOBYTE(v16) = [a2 _isPrivate];
    }
    else {
      LOBYTE(v16) = 0;
    }
  }
  if (!sel_defaultValue || (uint64_t v18 = object_getClass(a2), !class_respondsToSelector(v18, sel_defaultValue)))
  {
    long long v29 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v29 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber * _Nonnull _UITraitTokenForTraitLocked(const _UITraitDataType, const UITrait _Nonnull)"), @"UITrait_NonARC.m", 296, @"Trait class '%@' does not implement the required defaultValue class property", v9 file lineNumber description];
  }
  switch(a1)
  {
    case 1:
      uint64_t v19 = [a2 defaultValue];
      BOOL v20 = v19 == 0;
      goto LABEL_35;
    case 2:
      [a2 defaultValue];
      BOOL v20 = *(double *)&v22 == 1.79769313e308;
      uint64_t v19 = v22;
      goto LABEL_35;
    case 3:
      uint64_t v19 = [a2 defaultValue];
      BOOL v20 = v19 == 0x7FFFFFFFFFFFFFFFLL;
LABEL_35:
      char v23 = v20;
      goto LABEL_40;
    case 4:
      uint64_t v19 = [a2 defaultValue];
      goto LABEL_39;
    default:
      long long v21 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      [v21 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber * _Nonnull _UITraitTokenForTraitLocked(const _UITraitDataType, const UITrait _Nonnull)"), @"UITrait_NonARC.m", 317, @"Unknown data type for trait: %@", v9 file lineNumber description];
      uint64_t v19 = 0;
LABEL_39:
      char v23 = 0;
LABEL_40:
      if (sel_defaultValueRepresentsUnspecified)
      {
        long long v24 = object_getClass(a2);
        if (class_respondsToSelector(v24, sel_defaultValueRepresentsUnspecified)) {
          char v23 = [a2 defaultValueRepresentsUnspecified];
        }
      }
      *(void *)&long long v30 = v5;
      *((void *)&v30 + 1) = a1;
      *(void *)&long long v31 = v9;
      *((void *)&v31 + 1) = v10;
      *(void *)&long long v32 = 0;
      *((void *)&v32 + 1) = v19;
      LOBYTE(v33) = v23;
      BYTE1(v33) = (_BYTE)v14;
      BYTE2(v33) = (_BYTE)v16;
      *(_DWORD *)((char *)&v33 + 3) = 0;
      HIBYTE(v33) = 0;
      CFNumberRef v8 = _UIDefineNewTraitLocked((uint64_t)&v30);
      break;
  }
LABEL_44:
  if (!v5)
  {
LABEL_52:
    [(id)qword_1EB2623C8 setObject:v8 forKey:a2];
    [(id)qword_1EB2623D0 setObject:a2 forKey:v8];
  }
  return v8;
}

void _UIGetTraitMetadataLocked(CFNumberRef number@<X1>, unint64_t a2@<X0>, uint64_t a3@<X8>)
{
  unint64_t valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberNSIntegerType, &valuePtr))
  {
    uint64_t v6 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v6 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSUInteger _getTraitTokenValue(_UITraitToken)"), @"UITrait_NonARC.m", 95, @"Invalid trait token: %@", number file lineNumber description];
  }
  _UIGetTraitMetadataWithTraitTokenValueAcquireLock(a2, valuePtr, 0, a3);
}

void sub_1853F8998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double UISizeRoundToViewScale(void *a1, double a2, double a3)
{
  [a1 _currentScreenScale];
  return UISizeRoundToScale(a2, a3, v5);
}

unsigned char *_UICreateTraitCollectionChangeDescription@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  CFNumberRef v4 = (void *)a1;
  memset(v26, 0, 40);
  if (a1 && a2)
  {
    [(UITraitCollection *)(uint64_t)a2 _createTraitTokenSetForChangesFromTraitCollection:(uint64_t)v26];
    goto LABEL_9;
  }
  if (!a1)
  {
    if (!a2) {
      goto LABEL_9;
    }
    a1 = (uint64_t)a2;
  }
  uint64_t v6 = -[UITraitCollection _specifiedTraitTokens](a1);
  uint64_t v7 = *(void *)(v6 + 32);
  long long v8 = *(_OWORD *)(v6 + 16);
  v26[0] = *(_OWORD *)v6;
  v26[1] = v8;
  *(void *)&v26[2] = v7;
  if (*(void *)&v26[0]) {
    id v9 = *(id *)&v26[0];
  }
LABEL_9:
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = a2;
  long long v10 = v26[1];
  *(_OWORD *)(a3 + 16) = v26[0];
  *(_OWORD *)(a3 + 32) = v10;
  *(void *)(a3 + 48) = *(void *)&v26[2];
  *(void *)(a3 + 56) = 0;
  if (v4 == a2)
  {
    char v11 = 1;
  }
  else
  {
    if (*(void *)&v26[0])
    {
      if (-[_UIFastIndexSet count](*(int8x16_t **)&v26[0]))
      {
LABEL_12:
        char v11 = 0;
        goto LABEL_16;
      }
    }
    else if (vaddvq_s64((int64x2_t)vpadalq_u32(vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*(int8x16_t *)((char *)v26 + 8))))), vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*(int8x16_t *)((char *)&v26[1] + 8)))))))
    {
      goto LABEL_12;
    }
    char v11 = objc_msgSend(v4, "isEqual:", a2, *(void *)&v26[0]);
  }
LABEL_16:
  *(unsigned char *)(a3 + 56) = v11;
  TraitCollectionTSD = GetTraitCollectionTSD();
  char v13 = TraitCollectionTSD[9];
  TraitCollectionTSD[9] = 1;
  if (v4) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = a2 == 0;
  }
  char v15 = v14;
  char v16 = dyld_program_sdk_at_least();
  if (v15 & 1) != 0 || (v16)
  {
    if ((v15 & 1) == 0)
    {
      uint64_t result = GetTraitCollectionTSD();
      result[9] = v13;
      __int16 v21 = 1;
      goto LABEL_30;
    }
    uint64_t v17 = v4;
  }
  else
  {
    uint64_t v17 = (void *)+[UITraitCollection _defaultTraitCollection]();
    CFNumberRef v4 = v17;
  }
  objc_msgSend(v17, "displayScale", *(void *)&v26[0]);
  double v19 = v18;
  [a2 displayScale];
  __int16 v21 = v19 != v20;
  uint64_t v22 = [v4 displayGamut];
  uint64_t v23 = [a2 displayGamut];
  uint64_t result = GetTraitCollectionTSD();
  result[9] = v13;
  if (v22 != v23)
  {
LABEL_30:
    __int16 v25 = 256;
    goto LABEL_31;
  }
  __int16 v25 = 0;
LABEL_31:
  *(_WORD *)(a3 + 57) = v25 | v21;
  return result;
}

double UISizeRoundToScale(double a1, double a2, double a3)
{
  double v5 = a3;
  if (a3 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v5 = *(double *)&AdjustToScale___s_0;
  }
  BOOL v6 = v5 == 1.0;
  double v7 = round(a1 * v5) / v5;
  double v8 = round(a1);
  if (v6) {
    double v9 = v8;
  }
  else {
    double v9 = v7;
  }
  if (a3 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v9;
}

void UIRoundToViewScale(void *a1)
{
  [a1 _currentScreenScale];
  if (v1 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

void sub_1853FF2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UIBackgroundExtensionForBarWithMaxY(void *a1, CGFloat a2)
{
  id v3 = a1;
  double v4 = 0.0;
  if (!dyld_program_sdk_at_least()) {
    goto LABEL_38;
  }
  double v5 = [v3 _screen];
  BOOL v6 = v5;
  if (v5)
  {
    id v7 = v5;
  }
  else
  {
    id v7 = +[UIScreen mainScreen];
  }
  double v8 = v7;

  double v9 = 0.0;
  if ([v8 _isEmbeddedScreen]
    && UIApplicationSceneClassicModeWantsSafeAreaInsets(+[UIApplication _classicMode]))
  {
    long long v10 = [v8 _displayInfoProvider];
    [v10 safeAreaInsetsPortrait];
    double v4 = v11;
  }
  else
  {
    long long v10 = 0;
  }
  uint64_t v12 = +[UIDevice currentDevice];
  uint64_t v13 = [v12 userInterfaceIdiom];

  if ((v13 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    BOOL v14 = [v3 delegate];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
    }
    else
    {
      char v15 = [v3 delegate];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if ((isKindOfClass & 1) == 0) {
        goto LABEL_14;
      }
    }
    [v10 homeAffordanceOverlayAllowance];
    double v9 = v17 - v4;
  }
LABEL_14:
  double v18 = [v3 window];
  if ([v18 _isHostedInAnotherProcess])
  {

LABEL_16:
    if (objc_opt_respondsToSelector()) {
      [v3 _externalViewForSafeAreaInsets];
    }
    else {
    long long v24 = [v3 superview];
    }
    objc_msgSend(v24, "safeAreaInsets", *(_OWORD *)&v57.a, *(_OWORD *)&v57.c, *(_OWORD *)&v57.tx);
    double v26 = v25;
    goto LABEL_30;
  }
  if (dyld_program_sdk_at_least())
  {
    id v19 = v3;
    if (qword_1EB25C850 != -1) {
      dispatch_once(&qword_1EB25C850, &__block_literal_global_203);
    }
    double v20 = [v19 window];
    __int16 v21 = [v20 _rootPresentationController];
    uint64_t v22 = [v21 presentedView];
    uint64_t v23 = v22;
    if (v22) {
      [v22 transform];
    }
    else {
      memset(&v57, 0, sizeof(v57));
    }
    IsIdentitdouble y = CGAffineTransformIsIdentity(&v57);

    int v28 = byte_1EB25C81C;
    if (!v28 || !IsIdentity) {
      goto LABEL_16;
    }
  }
  else
  {
  }
  long long v29 = objc_msgSend(v3, "superview", *(_OWORD *)&v57.a, *(_OWORD *)&v57.c, *(_OWORD *)&v57.tx);
  long long v30 = [v29 superview];
  long long v31 = [v3 superview];
  [v31 frame];
  double v33 = v32;
  double v35 = v34;
  double v37 = v36;
  double v39 = v38;
  char v40 = [v3 window];
  objc_msgSend(v30, "convertRect:toView:", v40, v33, v35, v37, v39);
  double v42 = v41;
  double v44 = v43;
  double v46 = v45;
  double v48 = v47;

  long long v24 = [v3 window];
  id v49 = [v3 window];
  objc_msgSend(v24, "_safeAreaInsetsForFrame:inSuperview:", v49, v42, v44, v46, v48);
  double v26 = v50;

LABEL_30:
  double v51 = v9 + v26;
  BOOL v52 = v9 + v26 < 0.0;
  double v4 = 0.0;
  if (v52) {
    double v53 = 0.0;
  }
  else {
    double v53 = v51;
  }
  if ([v3 barPosition] == 4
    || [v3 barPosition] == 1
    && ([v3 superview],
        long long v54 = objc_claimAutoreleasedReturnValue(),
        [v54 bounds],
        CGFloat v55 = CGRectGetMaxY(v58) - v53,
        v54,
        v55 <= a2))
  {
    double v4 = v53;
  }

LABEL_38:
  return v4;
}

void sub_1853FFC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIKitBundle()
{
  uint64_t v0 = (void *)_UIKitBundle_kitBundle;
  if (!_UIKitBundle_kitBundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    BOOL v2 = (void *)_UIKitBundle_kitBundle;
    _UIKitBundle_kitBundle = v1;

    uint64_t v0 = (void *)_UIKitBundle_kitBundle;
  }
  return v0;
}

uint64_t _UIBarsUseNewPadHeights()
{
  uint64_t v0 = +[UIDevice currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  if (v1 != 1) {
    return 0;
  }
  return dyld_program_sdk_at_least();
}

id _UIMainBundleIdentifier()
{
  if (qword_1EB264B90 != -1) {
    dispatch_once(&qword_1EB264B90, &__block_literal_global_608);
  }
  id v0 = (id)qword_1EB264B98;
  return v0;
}

uint64_t _UIApplicationIsKeyboardExtension()
{
  if (qword_1EB25B5F8 != -1) {
    dispatch_once(&qword_1EB25B5F8, &__block_literal_global_1261_0);
  }
  return byte_1EB25B4E8;
}

uint64_t _UIApplicationIsApplicationWidgetExtension()
{
  if (qword_1EB25B5E0 != -1) {
    dispatch_once(&qword_1EB25B5E0, &__block_literal_global_1254);
  }
  return byte_1EB25B4E5;
}

uint64_t _UIApplicationIsWidgetServer()
{
  if (qword_1EB25B5F0 != -1) {
    dispatch_once(&qword_1EB25B5F0, &__block_literal_global_1259);
  }
  return byte_1EB25B4E7;
}

uint64_t _UIApplicationIsUniversalControl()
{
  if (qword_1EB25B610 != -1) {
    dispatch_once(&qword_1EB25B610, &__block_literal_global_1270_0);
  }
  return byte_1EB25B4EB;
}

id __UIStatusBarManagerForWindow(void *a1)
{
  uint64_t v1 = [a1 windowScene];
  BOOL v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 statusBarManager];
  }
  else
  {
    if ((_UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_RaiseWithNilSceneForStatusBar, @"RaiseWithNilSceneForStatusBar") & 1) == 0&& byte_1EB256EBC)
    {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"Asking for the status bar manager without a window scene or window."];
    }
    uint64_t v3 = _UIStatusBarManagerForNoWindow();
  }
  double v4 = (void *)v3;

  return v4;
}

uint64_t _UIViewControllersInheritTraitsFromViewHierarchy()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_ViewControllersInheritTraitsFromViewHierarchy, @"ViewControllersInheritTraitsFromViewHierarchy", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
    if (byte_1EB2570CC) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

void sub_185402828(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t _UIViewDirtiesDelegateContentInsetsForGeometryChange()
{
  if (qword_1EB25C1B0 != -1) {
    dispatch_once(&qword_1EB25C1B0, &__block_literal_global_1200_0);
  }
  return byte_1EB25C0AC;
}

BOOL _transformIsSupportedForSimpleContainment(double *a1)
{
  double v1 = a1[1];
  double v2 = a1[2];
  double v3 = fabs(*a1);
  BOOL v5 = v1 == *(double *)(MEMORY[0x1E4F1DAB8] + 8)
    && v2 == *(double *)(MEMORY[0x1E4F1DAB8] + 16)
    && v3 == *MEMORY[0x1E4F1DAB8];
  if (v5 && fabs(a1[3]) == *(double *)(MEMORY[0x1E4F1DAB8] + 24)) {
    return 1;
  }
  double v7 = fabs(v1);
  if (v3 < 0.00000011920929)
  {
    BOOL v8 = fabs(a1[3]) < 0.00000011920929 && v7 + -1.0 < 0.00000011920929;
    double v9 = fabs(v2) + -1.0;
    if (v8 && v9 < 0.00000011920929) {
      return 1;
    }
  }
  if (v7 < 0.00000011920929)
  {
    double v11 = fabs(v2);
    if (v3 + -1.0 < 0.00000011920929 && v11 < 0.00000011920929) {
      return fabs(a1[3]) + -1.0 < 0.00000011920929;
    }
  }
  return 0;
}

uint64_t _UIApplicationSupportsGlobalEdgeSwipeTouches()
{
  if (qword_1EB25B588 != -1) {
    dispatch_once(&qword_1EB25B588, &__block_literal_global_1138_1);
  }
  uint64_t result = _UIDeviceSupportsGlobalEdgeSwipeTouches();
  if (result)
  {
    LODWORD(result) = [(id)UIApp _isSpringBoard];
    if (byte_1EB25B4E0) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t _UIDeviceSupportsGlobalEdgeSwipeTouches()
{
  if (qword_1EB260FE8 != -1) {
    dispatch_once(&qword_1EB260FE8, &__block_literal_global_370);
  }
  return byte_1EB260ED8;
}

double UIEdgeInsetsFromApplicationSupportDisplayEdgeInsetsWrapper(void *a1)
{
  if (!a1) {
    return 0.0;
  }
  id v1 = a1;
  [v1 topInset];
  double v3 = v2;
  [v1 leftInset];
  [v1 bottomInset];
  [v1 rightInset];

  return v3;
}

BOOL UIApplicationSceneClassicModeWantsSafeAreaInsets(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) > 0xB || ((1 << (a1 + 1)) & 0xF3D) == 0) && a1 != 100;
}

uint64_t UICellConfigurationState.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return [(NSString *)category hasPrefix:@"UICTContentSizeCategoryAccessibility"];
}

double _UIAccessibilityContentSizeCategorySizeForImage(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    [v3 size];
    double v6 = v5;
    if ([v4 adjustsImageSizeForAccessibilityContentSizeCategory]
      && ([v3 _isSymbolImage] & 1) == 0)
    {
      [v4 _scaleFactorForImage];
      double v8 = v7;
      if (v7 != 1.0)
      {
        double v9 = [v3 content];
        int v10 = [v9 canScaleImageToTargetResolution];

        if (v10)
        {
          double v11 = [v3 content];
          [v11 size];
          double v6 = v12;
        }
      }
      double v6 = v8 * v6;
    }
  }
  else
  {
    double v6 = *MEMORY[0x1E4F1DB30];
  }

  return v6;
}

uint64_t _UIImageDummyImageContentRendering()
{
  if (qword_1EB25B118 != -1) {
    dispatch_once(&qword_1EB25B118, &__block_literal_global_283);
  }
  return _MergedGlobals_63;
}

uint64_t _UITableViewCellUsesLayoutMarginBasedContentPadding()
{
  if (qword_1EB25C788 != -1) {
    dispatch_once(&qword_1EB25C788, &__block_literal_global_520);
  }
  return _MergedGlobals_47_1;
}

id sub_185407D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v20 = a1;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v10 = (char *)&v18 - v9;
  id v19 = self;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, v6);
  double v11 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(a3, v6);
  double v12 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a3, v6);
  (*(void (**)(double *__return_ptr, char *, uint64_t, uint64_t))(v4 + 24))(&v21, v10, a3, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  double v13 = v21;
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(a3, v6);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(a3, v6);
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(a3, v6);
  id v16 = objc_msgSend(v19, sel__defineCGFloatTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v11, v12, v14 & 1, v4 & 1, v15 & 1, v20, v13);

  return v16;
}

uint64_t sub_185407FB0(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

double UIEdgeInsetsSubtract(char a1, double a2, double a3, double a4, double a5, double a6)
{
  if ((a1 & 1) == 0) {
    a6 = 0.0;
  }
  return a2 - a6;
}

_WORD *_getCustomAttributes(_WORD *a1)
{
  if (a1)
  {
    if ((a1[144] & 0x1000) != 0)
    {
      objc_getAssociatedObject(a1, &_UICollectionViewLayoutCustomAttributesKey);
      a1 = (_WORD *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      a1 = 0;
    }
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_18540C70C(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel__focusSystemForEnvironment_, a1);
  return v1;
}

uint64_t _s15PropertyChangesV3KeyVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

id NSDiffableDataSourceSnapshot.numberOfItems(inSection:)()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  id v2 = objc_msgSend(v1, sel_numberOfItemsInSection_, sub_186A1F83C());

  swift_unknownObjectRelease();
  return v2;
}

uint64_t _s15PropertyChangesV4InfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

BOOL UIContentSizeCategory.isAccessibilityCategory.getter(NSString *a1)
{
  return UIContentSizeCategoryIsAccessibilityCategory(a1);
}

uint64_t UICellConfigurationState.isFocused.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t UICellConfigurationState.isHighlighted.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t getEnumTagSinglePayload for UIContentUnavailableConfigurationState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__41(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__43(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__53(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__55(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__56(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__57(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__59(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__60(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__61(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__62(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void *__Block_byref_object_copy__63(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__64(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__65(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__66(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__67(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__68(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__69(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__70(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__71(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__72(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__73(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__74(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__75(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__76(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__77(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__78(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__79(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__80(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__81(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__82(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__83(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__84(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__85(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__86(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__87(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__88(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__89(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__90(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__91(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__92(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__93(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__94(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__95(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__96(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__97(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__98(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__99(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__100(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__101(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__102(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__103(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__104(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__105(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__106(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__107(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__108(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__109(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__110(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__111(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__112(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__113(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__114(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__115(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__116(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__117(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__118(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__119(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__120(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__121(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__122(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__123(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__124(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__125(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__126(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__127(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__128(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__129(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__130(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__131(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__132(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__133(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__134(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__135(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__136(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__137(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__138(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__139(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__140(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__141(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__142(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__143(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__144(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__145(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__146(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__147(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__148(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__149(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__150(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__151(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__152(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__153(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__154(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__155(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__156(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__157(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__158(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__159(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__160(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__161(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__162(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__163(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__164(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__165(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__166(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__167(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__168(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__169(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__170(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__171(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void *__Block_byref_object_copy__172(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__173(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__174(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__175(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__176(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__177(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__178(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__179(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__180(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__181(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__182(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__183(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__184(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__185(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__186(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__187(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__188(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__189(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__190(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__191(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__192(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__193(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__194(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__195(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__196(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__197(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__198(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__199(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__200(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__201(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__202(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__203(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__204(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__205(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__206(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__207(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__208(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__209(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__210(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__211(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__212(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__213(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__214(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__215(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__216(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__217(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__218(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__219(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__220(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__221(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__222(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__223(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__224(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__225(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_copy__226(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__227(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__228(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__229(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__230(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__231(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__232(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__233(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__234(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__235(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__236(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__237(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__238(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__239(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__240(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void *__Block_byref_object_copy__241(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void *__Block_byref_object_copy__242(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_copy__243(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_copy__244(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_copy__245(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__246(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__247(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__248(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_18540DA3C(SEL *a1)
{
  id v2 = [*(id *)(*(void *)v1 + 16) *a1];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  uint64_t v4 = sub_186A1E95C();

  return v4;
}

void sub_18540DEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18540EF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIBarAppearanceStorageKeyForBarPositionAndMetrics(uint64_t a1, uint64_t a2)
{
  return [NSNumber numberWithInteger:a2 + 1000 * a1];
}

double _UIViewReadableWidthForView(void *a1)
{
  id v1 = a1;
  double v2 = _UIViewHorizontalReadableContentInsetsForView(v1);
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  [v1 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  v18.origin.x = v4 + v10;
  v18.origin.double y = v2 + v12;
  v18.size.width = v14 - (v4 + v8);
  v18.size.double height = v16 - (v2 + v6);
  return fmax(CGRectGetWidth(v18), 0.0);
}

double _UIViewHorizontalReadableContentInsetsForView(void *a1)
{
  id v1 = a1;
  [v1 safeAreaInsets];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  *((void *)&v10 + 1) = v1[28];
  *(void *)&long long v10 = *((void *)v1 + 13);
  [v1 _rawLayoutMargins];
  double v15 = _UIViewHorizontalLayoutMarginsAdjustedForReadableWidth(v1, (v10 >> 57) & 0xF, v3, v5, v7, v9, v11, v12, v13, v14);

  return v15;
}

double _UIViewHorizontalLayoutMarginsAdjustedForReadableWidth(void *a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  id v19 = a1;
  double v34 = _UIViewResolvedMargins(v19, a7, a8, a9, a10);
  double v20 = UIEdgeInsetsMax(a2 & 0xA, 0.0, 0.0, 0.0, 0.0, a3);
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  if (_UIViewSafeAreaWidthExceedsReadableWidth(v19, a3, a4, a5, a6))
  {
    [v19 bounds];
    CGRectGetWidth(v35);
    __UIViewReadableWidthForFont(0);
    UIFloorToViewScale(v19);
    double v27 = UIEdgeInsetsMax(10, v20, v22, v24, v26, 0.0);
    double v31 = UIEdgeInsetsMax(10, v27, v28, v29, v30, v34);
  }
  else
  {
    double v31 = UIEdgeInsetsAdd(10, v20, v22, v24, v26, v34);
  }
  double v32 = v31;

  return v32;
}

BOOL _UIViewSafeAreaWidthExceedsReadableWidth(void *a1, double a2, double a3, double a4, double a5)
{
  [a1 bounds];
  double v7 = fmax(CGRectGetWidth(v12) - (a3 + a5), 0.0);
  double v8 = __UIViewReadableWidthForFont(0);
  int v9 = _UIInternalPreferenceUsesDefault((int *)&_UIInternalPreference_ReadableWidthMinimumInsetThreshold, @"ReadableWidthMinimumInsetThreshold", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double v10 = *(double *)&qword_1EB257AD8;
  if (v9) {
    double v10 = 88.0;
  }
  return v7 - v8 > v10;
}

double __UIViewReadableWidthForFont(void *a1)
{
  id v1 = a1;
  double v2 = [off_1E52D39B8 layoutMetrics];
  [v2 readableWidthForFont:v1];
  double v4 = v3;

  return ceil(v4 * 0.125) * 8.0;
}

id static UIFocusSystem.focusSystem(for:)(uint64_t a1)
{
  swift_getObjectType();
  return sub_18540C70C(a1);
}

uint64_t UICellConfigurationState.isEditing.getter()
{
  return *(unsigned __int8 *)(v0 + 13);
}

BOOL _s5UIKit24UICellConfigurationStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 12) ^ *(unsigned __int8 *)(a2 + 12)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 13) ^ *(unsigned __int8 *)(a2 + 13)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 14) ^ *(unsigned __int8 *)(a2 + 14)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 15) ^ *(unsigned __int8 *)(a2 + 15)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 19) ^ *(unsigned __int8 *)(a2 + 19)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) == 0
    && *(unsigned __int8 *)(a1 + 17) == *(unsigned __int8 *)(a2 + 17)
    && *(unsigned __int8 *)(a1 + 18) == *(unsigned __int8 *)(a2 + 18))
  {
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v5 = *(void *)(a2 + 24);
    sub_1853B985C(0, (unint64_t *)&qword_1E8FAFFC0);
    return (sub_186A1F0AC() & 1) != 0 && (sub_185411E3C(v4, v5) & 1) != 0;
  }
  return result;
}

uint64_t sub_185411E3C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v20 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
LABEL_8:
      double v10 = *(void **)(*(void *)(v3 + 48) + 8 * v9);
      sub_18590CE30(*(void *)(v3 + 56) + 40 * v9, (uint64_t)&v23 + 8);
      *(void *)&long long v23 = v10;
      id v11 = v10;
      goto LABEL_27;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 < v21)
    {
      unint64_t v13 = *(void *)(v20 + 8 * v12);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v4 + 2;
      ++v4;
      if (v12 + 1 < v21)
      {
        unint64_t v13 = *(void *)(v20 + 8 * v14);
        if (v13) {
          goto LABEL_15;
        }
        int64_t v4 = v12 + 1;
        if (v12 + 2 < v21)
        {
          unint64_t v13 = *(void *)(v20 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_12;
          }
          int64_t v14 = v12 + 3;
          int64_t v4 = v12 + 2;
          if (v12 + 3 < v21) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v23 = 0u;
LABEL_27:
    sub_1853B8150((uint64_t)&v23, (uint64_t)&v26, &qword_1E8FAED78);
    double v15 = v26;
    if (!v26) {
      return 1;
    }
    long long v23 = v27;
    long long v24 = v28;
    *(void *)&long long v25 = v29;
    uint64_t v16 = sub_185909644(v26);
    char v18 = v17;

    if ((v18 & 1) == 0)
    {
      sub_18590CE8C((uint64_t)&v23);
      return 0;
    }
    sub_18590CE30(*(void *)(a2 + 56) + 40 * v16, (uint64_t)v22);
    char v19 = MEMORY[0x18C102120](v22, &v23);
    sub_18590CE8C((uint64_t)v22);
    BOOL result = sub_18590CE8C((uint64_t)&v23);
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v12 = v14;
LABEL_12:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v4 = v12;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v21)
    {
      int64_t v4 = v21 - 1;
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1854120B0()
{
  return swift_deallocClassInstance();
}

id UIView.registerForTraitChanges<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1854A0744(a1, a2, a3, a4, (uint64_t)&unk_1ED0D80D8, (uint64_t)sub_1858B3B80, (uint64_t)&block_descriptor_40);
}

void sub_185413F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIBuiltinTraitStorageEnumeratePairWithBlock(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v18 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1, a2, @"_UITraitNameUserInterfaceIdiom", -1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, double))(a6 + 16))(a6, a1 + 8, a2 + 8, @"_UITraitNameDisplayScale", 0.0);
  (*v18)(a4, a1 + 16, a2 + 16, @"_UITraitNameDisplayGamut", -1);
  (*v18)(a4, a1 + 56, a2 + 56, @"_UITraitNameHorizontalSizeClass", 0);
  (*v18)(a4, a1 + 64, a2 + 64, @"_UITraitNameVerticalSizeClass", 0);
  if (a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 24, a2 + 24, @"_UITraitNameTouchLevel", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a5 + 16))(a5, a1 + 32, a2 + 32, @"_UITraitNameInteractionModel", 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a5 + 16))(a5, a1 + 40, a2 + 40, @"_UITraitNamePrimaryInteractionModel", 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 48, a2 + 48, @"_UITraitNameArtworkSubtype", 0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 72, a2 + 72, @"_UITraitNameUserInterfaceStyle", 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 80, a2 + 80, @"_UITraitNameUserInterfaceLayoutDirection", -1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 88, a2 + 88, @"_UITraitNameForceTouchCapability", 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 96, a2 + 96, @"_UITraitNamePreferredContentSizeCategory", 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 208, a2 + 208, @"_UITraitNameToolbarItemPresentationSize", -1);
  if (a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, double))(a6 + 16))(a6, a1 + 104, a2 + 104, @"_UITraitNameDisplayCornerRadius", -1.0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 112, a2 + 112, @"_UITraitNameLegibilityWeight", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 120, a2 + 120, @"_UITraitNameSemanticContext", 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 128, a2 + 128, @"_UITraitNamePresentationSemanticContext", 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 136, a2 + 136, @"_UITraitNameSplitViewControllerContext", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 144, a2 + 144, @"_UITraitNameAccessibilityContrast", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 152, a2 + 152, @"_UITraitNameUserInterfaceLevel", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 160, a2 + 160, @"_UITraitNameVibrancy", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, void))(a4 + 16))(a4, a1 + 168, a2 + 168, @"_UITraitNameUserInterfaceRenderingMode", 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 176, a2 + 176, @"_UITraitNameActiveAppearance", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 184, a2 + 184, @"_UITraitNameFocusSystemState", -1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 192, a2 + 192, @"_UITraitNameSelectionIsKey", -1);
    uint64_t v12 = a1 + 200;
    uint64_t v13 = a2 + 200;
    int64_t v14 = _UITraitNameBacklightLuminance;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16))(a4, a1 + 144, a2 + 144, @"_UITraitNameAccessibilityContrast", -1);
    uint64_t v12 = a1 + 152;
    uint64_t v13 = a2 + 152;
    int64_t v14 = _UITraitNameUserInterfaceLevel;
  }
  double v15 = *v14;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __CFString *, uint64_t))(a4 + 16);
  return v16(a4, v12, v13, v15, -1);
}

uint64_t _UIDescriptionForTraitName(void *a1)
{
  uint64_t v2 = [a1 rangeOfString:@"_UITraitName" options:8];
  if (v2 == 0x7FFFFFFFFFFFFFFFLL) {
    return (uint64_t)a1;
  }
  return [a1 substringFromIndex:v2 + v3];
}

__CFString *_UIBuiltinTraitStorageDescriptionForIntegerTraitName(unint64_t a1, void *a2)
{
  int v4 = [a2 isEqualToString:@"_UITraitNameUserInterfaceIdiom"];
  unint64_t v5 = a1 + 1;
  if (v4) {
    BOOL v6 = v5 >= 0xC;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    unint64_t v9 = off_1E5301860;
    return v9[v5];
  }
  if ([a2 isEqualToString:@"_UITraitNameUserInterfaceStyle"])
  {
    return _NSStringFromUIUserInterfaceStyle(a1);
  }
  if ([a2 isEqualToString:@"_UITraitNameUserInterfaceLayoutDirection"])
  {
    unint64_t v5 = a1 + 1;
    if (a1 + 1 < 3)
    {
      unint64_t v9 = off_1E53018C0;
      return v9[v5];
    }
  }
  if ((([a2 isEqualToString:@"_UITraitNameHorizontalSizeClass"] & 1) != 0
     || [a2 isEqualToString:@"_UITraitNameVerticalSizeClass"])
    && a1 < 3)
  {
    unint64_t v8 = off_1E53018D8;
    return v8[a1];
  }
  if ([a2 isEqualToString:@"_UITraitNameForceTouchCapability"] && a1 < 3)
  {
    unint64_t v8 = off_1E53018F0;
    return v8[a1];
  }
  if (![a2 isEqualToString:@"_UITraitNamePreferredContentSizeCategory"])
  {
    if ([a2 isEqualToString:@"_UITraitNameDisplayGamut"])
    {
      unint64_t v5 = a1 + 1;
      if (a1 + 1 < 3)
      {
        unint64_t v9 = off_1E5301908;
        return v9[v5];
      }
    }
    if ([a2 isEqualToString:@"_UITraitNameLegibilityWeight"])
    {
      unint64_t v5 = a1 + 1;
      if (a1 + 1 < 3)
      {
        unint64_t v9 = off_1E5301920;
        return v9[v5];
      }
    }
    if ([a2 isEqualToString:@"_UITraitNameAccessibilityContrast"])
    {
      unint64_t v5 = a1 + 1;
      if (a1 + 1 < 3)
      {
        unint64_t v9 = off_1E5301938;
        return v9[v5];
      }
    }
    if ([a2 isEqualToString:@"_UITraitNameUserInterfaceLevel"])
    {
      unint64_t v5 = a1 + 1;
      if (a1 + 1 < 3)
      {
        unint64_t v9 = off_1E5301950;
        return v9[v5];
      }
    }
    if ([a2 isEqualToString:@"_UITraitNameVibrancy"])
    {
      unint64_t v5 = a1 + 1;
      if (a1 + 1 < 4)
      {
        unint64_t v9 = off_1E5301968;
        return v9[v5];
      }
    }
    if ([a2 isEqualToString:@"_UITraitNameUserInterfaceRenderingMode"] && a1 < 3)
    {
      unint64_t v8 = off_1E5301988;
    }
    else if ([a2 isEqualToString:@"_UITraitNameSemanticContext"] && a1 < 3)
    {
      unint64_t v8 = off_1E53019A0;
    }
    else
    {
      if (![a2 isEqualToString:@"_UITraitNamePresentationSemanticContext"]
        || a1 >= 4)
      {
        if ([a2 isEqualToString:@"_UITraitNameSplitViewControllerContext"]
          && (unint64_t v5 = a1 + 1, a1 + 1 < 5))
        {
          unint64_t v9 = off_1E53019D8;
        }
        else if ([a2 isEqualToString:@"_UITraitNameActiveAppearance"] {
               && (unint64_t v5 = a1 + 1, a1 + 1 < 3))
        }
        {
          unint64_t v9 = off_1E5301A00;
        }
        else
        {
          if ([a2 isEqualToString:@"_UITraitNameFocusSystemState"])
          {
            switch(a1)
            {
              case 0xFFFFFFFFFFFFFFFFLL:
                return @"Unspecified";
              case 2uLL:
                return @"Enabled";
              case 1uLL:
                return @"Disabled";
            }
          }
          if ([a2 isEqualToString:@"_UITraitNameSelectionIsKey"]
            && (unint64_t v5 = a1 + 1, a1 + 1 < 3))
          {
            unint64_t v9 = off_1E5301A18;
          }
          else if ([a2 isEqualToString:@"_UITraitNameBacklightLuminance"] {
                 && (unint64_t v5 = a1 + 1, a1 + 1 < 4))
          }
          {
            unint64_t v9 = off_1E5301A30;
          }
          else
          {
            if (![a2 isEqualToString:@"_UITraitNameToolbarItemPresentationSize"]) {
              return 0;
            }
            unint64_t v5 = a1 + 1;
            if (a1 + 1 >= 5) {
              return 0;
            }
            unint64_t v9 = off_1E5301A50;
          }
        }
        return v9[v5];
      }
      unint64_t v8 = off_1E53019B8;
    }
    return v8[a1];
  }
  double v10 = _NSStringFromUIContentSizeCategory(a1);
  uint64_t v11 = [(__CFString *)v10 rangeOfString:@"UICTContentSizeCategory" options:8];
  if (v11 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v11 = [(__CFString *)v10 rangeOfString:@"_UICTContentSizeCategory" options:8];
    if (v11 == 0x7FFFFFFFFFFFFFFFLL) {
      return v10;
    }
  }
  return (__CFString *)[(__CFString *)v10 substringFromIndex:v11 + v12];
}

__CFString *_NSStringFromUIUserInterfaceStyle(uint64_t a1)
{
  id v1 = @"Unspecified";
  if (a1 == 2) {
    id v1 = @"Dark";
  }
  if (a1 == 1) {
    return @"Light";
  }
  else {
    return v1;
  }
}

uint64_t _UIApplicationWantsExtensionBehavior(void *a1)
{
  if (qword_1EB25B5B8 != -1) {
    dispatch_once(&qword_1EB25B5B8, &__block_literal_global_1234);
  }
  if (byte_1EB25B4E3) {
    return [a1 _wantsApplicationBehaviorAsExtension] ^ 1;
  }
  else {
    return 0;
  }
}

uint64_t UIMutableTraits.displayScale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 32))(&type metadata for UITraitDisplayScale, &type metadata for UITraitDisplayScale, &protocol witness table for UITraitDisplayScale, a1, a2);
}

void UIViewDidSetNeedsDisplay(void *a1)
{
  id v3 = a1;
  self;
  if (byte_1EB25C0A4 == 1
    && +[UIView _isInAnimationBlockWithAnimationsEnabled])
  {
    if (qword_1EB25C110)
    {
      [(id)qword_1EB25C110 addObject:v3];
    }
    else
    {
      uint64_t v1 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA80]), "initWithObjects:", v3, 0);
      uint64_t v2 = (void *)qword_1EB25C110;
      qword_1EB25C110 = v1;
    }
  }
}

uint64_t HasAttributeDifferenceDefaults(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  unint64_t v7 = [a2 objectForKey:v6];
  unint64_t v8 = [v5 objectForKey:v6];

  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = v10;
  if (v9 == v10)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
    if (v9 && v10) {
      uint64_t v12 = [v9 isEqual:v10] ^ 1;
    }
  }

  return v12;
}

void sub_185416900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::__unordered_map_hasher<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::hash<long>,std::equal_to<long>,true>,std::__unordered_map_equal<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::equal_to<long>,std::hash<long>,true>,std::allocator<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>>>::find<long>(void *a1, unint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8(v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (*(void *)&v2 <= a2) {
      unint64_t v4 = a2 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v4 = (*(void *)&v2 - 1) & a2;
  }
  id v5 = *(void **)(*a1 + 8 * v4);
  if (!v5) {
    return 0;
  }
  BOOL result = (void *)*v5;
  if (*v5)
  {
    do
    {
      unint64_t v7 = result[1];
      if (v7 == a2)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v3.u32[0] > 1uLL)
        {
          if (v7 >= *(void *)&v2) {
            v7 %= *(void *)&v2;
          }
        }
        else
        {
          v7 &= *(void *)&v2 - 1;
        }
        if (v7 != v4) {
          return 0;
        }
      }
      BOOL result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void sub_185416F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1854179AC(_Unwind_Exception *exception_object)
{
  uint8x8_t v3 = *(void **)(v1 - 160);
  if (v3)
  {
    *(void *)(v1 - 152) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_185417B70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_185417CA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_185418104(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1854181EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    LODWORD(result) = _UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates, @"CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates");
    if (byte_1E8FD4FB4) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t GetShadowAttributeDifferenceDefaults(void *a1, void *a2)
{
  uint64_t v3 = *(void *)off_1E52D2238;
  id v4 = a2;
  uint64_t v5 = [a1 objectForKeyedSubscript:v3];
  uint64_t v6 = [v4 objectForKeyedSubscript:v3];

  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    if (v5 | v6)
    {
      if (v5) {
        unint64_t v8 = (void *)v5;
      }
      else {
        unint64_t v8 = (void *)v6;
      }
      [v8 shadowOffset];
      if (v10 == *(double *)(MEMORY[0x1E4F1DB30] + 8) && v9 == *MEMORY[0x1E4F1DB30]) {
        uint64_t v12 = 393216;
      }
      else {
        uint64_t v12 = 409600;
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v13 = [(id)v5 shadowColor];
    int64_t v14 = [(id)v6 shadowColor];
    id v15 = v13;
    id v16 = v14;
    char v17 = v16;
    if (v15 == v16)
    {
      uint64_t v19 = 0;
    }
    else
    {
      if (v15) {
        BOOL v18 = v16 == 0;
      }
      else {
        BOOL v18 = 1;
      }
      if (v18)
      {
        uint64_t v19 = 393216;
      }
      else if ([v15 isEqual:v16])
      {
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 393216;
      }
    }

    [(id)v5 shadowOffset];
    double v22 = v21;
    double v24 = v23;
    [(id)v6 shadowOffset];
    if (v24 == v26 && v22 == v25) {
      uint64_t v12 = v19;
    }
    else {
      uint64_t v12 = v19 | 0x44000;
    }
  }

  return v12;
}

uint64_t GetAttributeDifference(uint64_t (*a1)(uint64_t, id, id), uint64_t (*a2)(id, id), void *a3, void *a4)
{
  uint64_t v7 = *(void *)off_1E52D2048;
  id v8 = a4;
  id v9 = a3;
  LODWORD(v7) = a1(v7, v9, v8);
  if (a1(*(void *)off_1E52D1F58, v9, v8) | v7) {
    uint64_t v10 = 0x20000;
  }
  else {
    uint64_t v10 = 0;
  }
  if (a1(*(void *)off_1E52D21B8, v9, v8)) {
    v10 |= 0xC000uLL;
  }
  uint64_t v11 = v10 | a2(v9, v8);
  int v12 = a1(*(void *)off_1E52D2040, v9, v8);
  int v13 = a1(*MEMORY[0x1E4F24480], v9, v8);
  int v14 = a1(*MEMORY[0x1E4F24580], v9, v8);

  if (v14 | v13 | v12) {
    uint64_t v15 = v11 | 0x14000;
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15) {
    return v15 | 0x400;
  }
  else {
    return 0;
  }
}

uint64_t HasAttributeDifferenceString(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  unint64_t v8 = [v6 length];
  unint64_t v9 = 0;
  while (1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v10 = objc_msgSend(v6, "attribute:atIndex:longestEffectiveRange:inRange:", v5, v9, &v21, 0, v8);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v11 = objc_msgSend(v7, "attribute:atIndex:longestEffectiveRange:inRange:", v5, v9, &v19, 0, v8);
    if (v21 != v19 || v22 != v20) {
      break;
    }
    id v13 = v10;
    id v14 = v11;
    uint64_t v15 = v14;
    if (v13 == v14)
    {
    }
    else
    {
      if (!v13 || !v14)
      {

        break;
      }
      char v16 = [v13 isEqual:v14];

      if ((v16 & 1) == 0) {
        break;
      }
    }
    unint64_t v9 = v22 + v21;

    if (v9 >= v8)
    {
      uint64_t v17 = 0;
      goto LABEL_17;
    }
  }

  uint64_t v17 = 1;
LABEL_17:

  return v17;
}

uint64_t GetShadowAttributeDifferenceString(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = [v3 length];
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  double v8 = *MEMORY[0x1E4F1DB30];
  double v9 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  uint64_t v10 = *(void *)off_1E52D2238;
  double v11 = v9;
  double v12 = *MEMORY[0x1E4F1DB30];
  id v34 = v4;
  do
  {
    uint64_t v37 = 0;
    unint64_t v38 = 0;
    id v13 = objc_msgSend(v3, "attribute:atIndex:longestEffectiveRange:inRange:", v10, v7, &v37, 0, v5);
    unint64_t v14 = (unint64_t)v13;
    if (v13)
    {
      [v13 shadowOffset];
      if (v15 < 0.0) {
        double v15 = -v15;
      }
      if (v12 < v15) {
        double v12 = v15;
      }
      double v17 = -v16;
      if (v16 >= 0.0) {
        double v17 = v16;
      }
      if (v11 < v17) {
        double v11 = v17;
      }
    }
    uint64_t v35 = 0;
    unint64_t v36 = 0;
    BOOL v18 = objc_msgSend(v4, "attribute:atIndex:longestEffectiveRange:inRange:", v10, v7, &v35, v37, v38);
    unint64_t v19 = (unint64_t)v18;
    if (!v18) {
      goto LABEL_44;
    }
    [v18 shadowOffset];
    if (v20 < 0.0) {
      double v20 = -v20;
    }
    if (v8 < v20) {
      double v8 = v20;
    }
    double v22 = -v21;
    if (v21 >= 0.0) {
      double v22 = v21;
    }
    if (v9 < v22) {
      double v9 = v22;
    }
    if (v14)
    {
      id v23 = v3;
      double v24 = [(id)v14 shadowColor];
      double v25 = [(id)v19 shadowColor];
      id v26 = v24;
      id v27 = v25;
      long long v28 = v27;
      if (v26 == v27)
      {
        int v29 = 1;
      }
      else
      {
        int v29 = 0;
        if (v26 && v27) {
          int v29 = [v26 isEqual:v27];
        }
      }

      if (!v29) {
        v6 |= 0x60000uLL;
      }
      id v3 = v23;
      id v4 = v34;
    }
    else
    {
LABEL_44:
      if (v14 | v19) {
        v6 |= 0x60000uLL;
      }
    }
    unint64_t v30 = v38;
    if (v38 >= v36) {
      unint64_t v30 = v36;
    }
    v7 += v30;
  }
  while (v7 < v5);
  if (v11 == v9 && v12 == v8) {
    uint64_t v32 = v6;
  }
  else {
    uint64_t v32 = v6 | 0x44000;
  }

  return v32;
}

uint64_t sub_185419EBC(uint64_t a1, SEL *a2)
{
  id v3 = [*(id *)(*(void *)v2 + 16) *a2];
  sub_186A1EB3C();

  uint64_t v4 = sub_186A1F52C();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_18541A6D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Unwind_Resume(a1);
}

void sub_18541AB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIScrollViewAdjustForOverlayInsetsChangeIfNecessary(void *a1, int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unint64_t v19 = a1;
  double v20 = v19;
  if (a8 == a4 && a7 == a3 && a10 == a6 && a9 == a5) {
    goto LABEL_35;
  }
  int v24 = [(float64x2_t *)v19 _isAutomaticContentOffsetAdjustmentEnabled];
  double v25 = a3 - a7;
  double v26 = a4 - a8;
  [(float64x2_t *)v20 contentInset];
  double v57 = v28;
  double v58 = v27;
  double v55 = v30;
  double v56 = v29;
  [(float64x2_t *)v20 scrollIndicatorInsets];
  double v59 = v32;
  double v60 = v31;
  double v61 = v34;
  double v62 = v33;
  [(float64x2_t *)v20 contentOffset];
  double v63 = v35;
  double v64 = v36;
  if ([(float64x2_t *)v20 _shouldContentOffsetMaintainRelativeDistanceFromSafeArea])
  {
    char v37 = [(float64x2_t *)v20 _edgesApplyingSafeAreaInsetsToContentInset];
    double v38 = 0.0;
    double v39 = v25 + 0.0;
    if ((v37 & 1) == 0) {
      double v39 = 0.0;
    }
    double v40 = v64 - v39;
    if ((v37 & 2) != 0) {
      int v41 = a2;
    }
    else {
      int v41 = 1;
    }
    if (!v41) {
      double v38 = v26 + 0.0;
    }
    -[float64x2_t _applyAutomaticAdjustedContentOffset:](v20, "_applyAutomaticAdjustedContentOffset:", v63 - v38, v40);
  }
  double v42 = a5 - a9;
  [(float64x2_t *)v20 _setAutomaticContentOffsetAdjustmentEnabled:0];
  if (a2)
  {
    -[float64x2_t setContentInset:](v20, "setContentInset:", v25 + v58, v26 + v57, v42 + v56, a6 - a10 + v55);
    if (!v24) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  [(float64x2_t *)v20 _updateForChangedScrollRelatedInsets];
  if (v24) {
LABEL_24:
  }
    [(float64x2_t *)v20 _setAutomaticContentOffsetAdjustmentEnabled:1];
LABEL_25:
  if (a2)
  {
    double v43 = v42 + v59;
    double v44 = v63;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v20[34], v20[36]), (int32x4_t)vceqq_f64(v20[35], v20[37]))), 0xFuLL))) & 1) == 0)
    {
      if (os_variant_has_internal_diagnostics())
      {
        long long v54 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v54, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)double v66 = 0;
          _os_log_fault_impl(&dword_1853B0000, v54, OS_LOG_TYPE_FAULT, "UIScrollView legacy code path will unexpectedly clobber _vertical/horizontalScrollIndicatorInsets. This is a UIKit bug.", v66, 2u);
        }

        double v44 = v63;
      }
      else
      {
        double v53 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIScrollViewAdjustForOverlayInsetsChangeIfNecessary___s_category)+ 8);
        if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1853B0000, v53, OS_LOG_TYPE_ERROR, "UIScrollView legacy code path will unexpectedly clobber _vertical/horizontalScrollIndicatorInsets. This is a UIKit bug.", buf, 2u);
        }
      }
    }
    -[float64x2_t setScrollIndicatorInsets:](v20, "setScrollIndicatorInsets:", v25 + v60, v62, v43, v61);
  }
  else
  {
    [(float64x2_t *)v20 _updateForChangedScrollIndicatorRelatedInsets];
    double v44 = v63;
  }
  [(float64x2_t *)v20 contentOffset];
  if (v46 == v44 && v45 == v64) {
    [(float64x2_t *)v20 _adjustContentOffsetIfNecessary];
  }
  [(float64x2_t *)v20 _effectiveContentInset];
  double v48 = v47;
  double v50 = v49;
  [(float64x2_t *)v20 contentOffset];
  if (floor(v50 + v52) != floor(a8 + v44) || floor(v48 + v51) != floor(a7 + v64)) {
    [(float64x2_t *)v20 _notifyDidScroll];
  }
LABEL_35:
}

BOOL _UIEventDeferringManagerIsAvailableForScene(void *a1)
{
  uint64_t v2 = [a1 session];
  if (v2)
  {
    id v3 = [a1 session];
    uint64_t v4 = [v3 role];
    int v5 = [v4 isEqualToString:@"UIWindowSceneSessionRoleExternalDisplayNonInteractive"];
  }
  else
  {
    int v5 = 1;
  }

  if (!a1 || (([a1 _hostsWindows] ^ 1 | v5) & 1) != 0) {
    return 0;
  }
  if (_UIEventDeferringManagerIsAvailableForScene_onceToken != -1) {
    dispatch_once(&_UIEventDeferringManagerIsAvailableForScene_onceToken, &__block_literal_global_709);
  }
  return _UIEventDeferringManagerIsAvailableForScene_allowForProcess != 0;
}

id _UIEventEnvironmentEventOfTypeForEventRoutingUIScene(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3
    && (![a3 _hasInvalidated]
     || [a3 _hasInvalidated]
     && ([*(id *)(a1 + 136) containsObject:a3] & 1) == 0))
  {
    unint64_t v7 = [*(id *)(a1 + 128) objectForKey:a3];
    if (!v7)
    {
      unint64_t v7 = objc_opt_new();
      [*(id *)(a1 + 128) setObject:v7 forKey:a3];
    }
    id v8 = 0;
    switch(a2)
    {
      case 0:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 0);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UITouchesEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 0;
          goto LABEL_31;
        }
        break;
      case 3:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 3);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIPressesEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 3;
          goto LABEL_31;
        }
        break;
      case 4:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 4);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIPhysicalKeyboardEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 4;
          goto LABEL_31;
        }
        break;
      case 5:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 5);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIMoveEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 5;
          goto LABEL_31;
        }
        break;
      case 7:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 7);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIWheelEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 7;
          goto LABEL_31;
        }
        break;
      case 8:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 8);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[_UIGameControllerEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 8;
          goto LABEL_31;
        }
        break;
      case 10:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 10);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIScrollEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 10;
          goto LABEL_31;
        }
        break;
      case 11:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 11);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UIHoverEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 11;
          goto LABEL_31;
        }
        break;
      case 13:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 13);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[_UIPencilEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 13;
          goto LABEL_31;
        }
        break;
      case 14:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 14);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[UITransformEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 14;
          goto LABEL_31;
        }
        break;
      case 16:
        -[_UISceneEventRegistry eventForType:]((uint64_t)v7, 16);
        id v8 = (id)objc_claimAutoreleasedReturnValue();
        if (!v8)
        {
          id v8 = [(UIEvent *)[_UIDynamicButtonEvent alloc] _initWithEnvironment:a1];
          uint64_t v9 = (uint64_t)v7;
          uint64_t v10 = (uint64_t)v8;
          uint64_t v11 = 16;
LABEL_31:
          -[_UISceneEventRegistry setEvent:forType:](v9, v10, v11);
        }
        break;
      default:
        break;
    }
    id v6 = v8;
  }
  else
  {
    id v6 = 0;
  }
  return v6;
}

void _UIViewNotifyPhysicalButtonArbiterOfEffectiveVisibilityChangeIfNeeded(void *a1)
{
  if (a1[9])
  {
    if (qword_1EB25C350 != -1) {
      dispatch_once(&qword_1EB25C350, &__block_literal_global_3781);
    }
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v4 = [a1 _window];
      uint64_t v2 = [v4 _eventRoutingScene];
      id v3 = [v2 _existingPhysicalButtonInteractionArbiter];

      if (v3) {
        -[_UIPhysicalButtonInteractionArbiter _setNeedsResolutionOfPhysicalButtonConfigurationsInWindow:forReason:]((uint64_t)v3, v4, 2uLL);
      }
    }
  }
}

id _UIFocusEnvironmentContainingView(void *a1)
{
  id v1 = a1;
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x3032000000;
  id v8 = __Block_byref_object_copy__84;
  uint64_t v9 = __Block_byref_object_dispose__84;
  id v10 = 0;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = ___UIFocusEnvironmentContainingView_block_invoke;
  v4[3] = &unk_1E52EDC68;
  v4[4] = &v5;
  _UIFocusEnvironmentEnumerateAncestorEnvironments(v1, v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_18541D29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIFocusEnvironmentEnumerateAncestorEnvironments(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void (**)(void, void, void))v4;
  if (v3 && v4)
  {
    char v13 = 0;
    unsigned int v6 = objc_msgSend(v3, sel_allowsWeakReference);
    id v7 = v6 ? v3 : 0;
    id v8 = v7;
    if (v6)
    {
      uint64_t v9 = v3;
      while (1)
      {
        ((void (**)(void, void *, char *))v5)[2](v5, v9, &v13);
        id v10 = _UIFocusEnvironmentParentEnvironment(v9);
        unsigned int v11 = objc_msgSend(v10, sel_allowsWeakReference);

        if (!v11) {
          break;
        }
        double v12 = _UIFocusEnvironmentParentEnvironment(v9);

        if (v12)
        {
          uint64_t v9 = v12;
          if (!v13) {
            continue;
          }
        }
        goto LABEL_13;
      }
      double v12 = v9;
LABEL_13:
    }
  }
}

id _UIFocusEnvironmentParentEnvironment(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = [v1 parentFocusEnvironment];
  id v3 = v2;
  if (v2)
  {
    _UIHostedFocusSystemsForHostEnvironment(v2);
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v13;
      while (2)
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          if (objc_msgSend(v9, "containsChildOfHostEnvironment:", v1, (void)v12))
          {
            id v10 = v9;

            id v3 = v10;
            goto LABEL_12;
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
LABEL_12:
  }
  return v3;
}

id _UIHostedFocusSystemsForHostEnvironment(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"NSHashTable<_UIHostedFocusSystem *> * _Nullable _UIHostedFocusSystemsForHostEnvironment(__strong id<UIFocusEnvironment> _Nonnull)"];
    [v4 handleFailureInFunction:v5, @"_UIHostedFocusSystem.m", 45, @"Invalid parameter not satisfying: %@", @"hostEnvironment" file lineNumber description];
  }
  id v2 = [(id)_MergedGlobals_1_11 objectForKey:v1];

  return v2;
}

uint64_t _UISceneSystemShellManagesKeyboardFocusIsPossibleForScene(void *a1)
{
  id v2 = [a1 _FBSScene];

  id v3 = [a1 _FBSScene];
  id v4 = [v3 settings];
  int v5 = [v4 isUISubclass];

  unsigned int v6 = [a1 _hostsWindows];
  if (a1) {
    BOOL v7 = v2 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    int v8 = 0;
  }
  else {
    int v8 = v5;
  }
  return v8 & v6;
}

double _CentroidOfTouches(void *a1, int a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (!v4) {
    goto LABEL_13;
  }
  uint64_t v5 = v4;
  int v6 = 0;
  uint64_t v7 = *(void *)v20;
  double v8 = 0.0;
  double v9 = 0.0;
  do
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if (*(void *)v20 != v7) {
        objc_enumerationMutation(v3);
      }
      unsigned int v11 = *(void **)(*((void *)&v19 + 1) + 8 * i);
      if (!a2 || [*(id *)(*((void *)&v19 + 1) + 8 * i) phase] <= 2)
      {
        long long v12 = [v11 window];
        [v11 locationInView:0];
        objc_msgSend(v12, "_convertPointToSceneReferenceSpace:");
        double v14 = v13;
        double v16 = v15;

        double v8 = v8 + v14;
        double v9 = v9 + v16;
        ++v6;
      }
    }
    uint64_t v5 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
  }
  while (v5);
  if (v6 >= 1) {
    double v17 = v8 / (double)v6;
  }
  else {
LABEL_13:
  }
    double v17 = 0.0;

  return v17;
}

double _UITouchConvertLocationInWindowToView(uint64_t a1, void *a2, double a3, double a4)
{
  double v6 = a3;
  if (a1)
  {
    if (a2)
    {
      objc_msgSend(a2, "convertPoint:fromView:", a1, a3, a4);
      return v7;
    }
  }
  else
  {
    double v8 = [a2 window];
    if (v8)
    {
      double v9 = v8;
      objc_msgSend(v8, "convertPoint:fromWindow:", 0, v6, a4);
      objc_msgSend(a2, "convertPoint:fromView:", 0);
      double v6 = v10;
    }
    else
    {
      return *MEMORY[0x1E4F1DAD8];
    }
  }
  return v6;
}

uint64_t _IsKindOfUITableViewHeaderFooterView(void *a1)
{
  uint64_t v1 = qword_1E8FDF488;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&qword_1E8FDF488, &__block_literal_global_3092);
  }
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _UIRTreeContainerNode<_UICollectionViewRTreeElement>::~_UIRTreeContainerNode(uint64_t a1)
{
  *(void *)a1 = &unk_1ED0BE9E0;
  id v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
  double v6 = (void **)(a1 + 64);
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&v6);
  double v6 = (void **)(a1 + 40);
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](&v6);
  id v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  return a1;
}

void std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  id v2 = (uint64_t *)*a1;
  if (*v2)
  {
    std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100]((uint64_t)v2, *v2);
    id v3 = **a1;
    operator delete(v3);
  }
}

uint64_t _UIRTreeContainerNode<unsigned long>::enumerateElementsIntersecting(void *a1, float64x2_t *a2, unsigned char *a3, uint64_t a4)
{
  float64x2_t v21 = a2[1];
  float64x2_t v22 = *a2;
  uint64_t result = _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)v24, (uint64_t)a1);
  float64x2_t v20 = vaddq_f64(v22, v21);
  int64x2_t v8 = (int64x2_t)vorrq_s8(vandq_s8((int8x16_t)vcgeq_f64(v22, vaddq_f64(v24[0], v24[1])), (int8x16_t)vcgtq_f64(v22, v24[0])), vandq_s8((int8x16_t)vcgtq_f64(v24[0], v22), (int8x16_t)vcgeq_f64(v24[0], v20)));
  if ((vorrq_s8((int8x16_t)vdupq_laneq_s64(v8, 1), (int8x16_t)v8).u64[0] & 0x8000000000000000) == 0)
  {
    uint64_t v9 = a1[12] - a1[11];
    if (v9)
    {
      uint64_t v10 = 0;
      unint64_t v11 = v9 >> 5;
      if (v11 <= 1) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = v11;
      }
      while (1)
      {
        double v13 = (float64x2_t *)(a1[11] + 32 * v10);
        int64x2_t v14 = (int64x2_t)vorrq_s8(vandq_s8((int8x16_t)vcgeq_f64(v22, vaddq_f64(*v13, v13[1])), (int8x16_t)vcgtq_f64(v22, *v13)), vandq_s8((int8x16_t)vcgtq_f64(*v13, v22), (int8x16_t)vcgeq_f64(*v13, v20)));
        if ((vorrq_s8((int8x16_t)vdupq_laneq_s64(v14, 1), (int8x16_t)v14).u64[0] & 0x8000000000000000) == 0)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, unsigned char *))(a4 + 16))(a4, *(void *)(a1[8] + 8 * v10), a3);
          if (*a3) {
            break;
          }
        }
        if (v12 == ++v10) {
          goto LABEL_9;
        }
      }
    }
    else
    {
LABEL_9:
      uint64_t v15 = a1[5];
      uint64_t v16 = a1[6];
      if (v15 != v16)
      {
        uint64_t v17 = v15 + 16;
        do
        {
          uint64_t v18 = *(void *)(v17 - 16);
          v23[0] = v22;
          v23[1] = v21;
          uint64_t result = _UIRTreeContainerNode<unsigned long>::enumerateElementsIntersecting(v18, v23, a3, a4);
          if (*a3) {
            BOOL v19 = 1;
          }
          else {
            BOOL v19 = v17 == v16;
          }
          v17 += 16;
        }
        while (!v19);
      }
    }
  }
  return result;
}

void sub_18541EE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 _UIRTreeContainerNode<unsigned long>::addChild(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, float64x2_t a5, float64x2_t a6)
{
  uint64_t v10 = *(uint64_t **)(a2 + 40);
  unint64_t v11 = *(uint64_t **)(a2 + 48);
  if (v11 != v10)
  {
LABEL_4:
    uint64_t v12 = ((char *)v11 - (char *)v10) >> 4;
    if (v12)
    {
      if (v12 == 1)
      {
        uint64_t v13 = *v10;
        goto LABEL_15;
      }
      if (v10 != v11)
      {
        uint64_t v13 = 0;
        float64x2_t v377 = vaddq_f64(a5, a6);
        double v14 = 1.79769313e308;
        do
        {
          _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)&v395, *v10);
          float64x2_t v15 = vaddq_f64(v395, v396);
          int64x2_t v16 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v15, v377), (int8x16_t)vcgeq_f64(a5, v395));
          if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v16, 1), (int8x16_t)v16).u64[0] & 0x8000000000000000) != 0)
          {
            double v18 = 0.0;
          }
          else
          {
            float64x2_t v17 = vsubq_f64(vmaxnmq_f64(v15, v377), vminnmq_f64(v395, a5));
            double v18 = vmulq_laneq_f64(v17, v17, 1).f64[0] / vmuld_lane_f64(v396.f64[0], v396, 1);
          }
          if (v18 < v14)
          {
            uint64_t v13 = *v10;
            double v14 = v18;
            if (fabs(v18) < 2.22044605e-16) {
              break;
            }
          }
          v10 += 2;
        }
        while (v10 != v11);
LABEL_15:
        if (v13)
        {
          BOOL v19 = (std::__shared_weak_count *)a4[1];
          uint64_t v383 = *a4;
          v384 = v19;
          if (v19) {
            atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          _UIRTreeContainerNode<unsigned long>::addChild(&v395, v13, a3, &v383, (__n128)a5, (__n128)a6);
          float64x2_t v20 = (std::__shared_weak_count *)a4[1];
          *(float64x2_t *)a4 = v395;
          if (v20) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v20);
          }
          float64x2_t v21 = v384;
          if (v384) {
            goto LABEL_21;
          }
          goto LABEL_41;
        }
      }
    }
    float64x2_t v395 = 0uLL;
    v396.f64[0] = 0.0;
    long long v393 = 0uLL;
    v394 = 0;
    float64x2_t v22 = (__n128 *)operator new(0x20uLL);
    *float64x2_t v22 = (__n128)a5;
    v22[1] = (__n128)a6;
    *(void *)&v395.f64[1] = v22[2].n128_f64;
    *(void *)&v396.f64[0] = v22[2].n128_f64;
    *(void *)&v395.f64[0] = v22;
    id v23 = std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)&v394, 1uLL);
    double v25 = (char *)*((void *)&v393 + 1);
    uint64_t v24 = (char *)v393;
    double v27 = &v23[v26];
    *id v23 = a3;
    double v28 = v23 + 1;
    while (v25 != v24)
    {
      uint64_t v29 = *((void *)v25 - 1);
      v25 -= 8;
      *--id v23 = v29;
    }
    *(void *)&long long v393 = v23;
    *((void *)&v393 + 1) = v28;
    v394 = v27;
    if (v24) {
      operator delete(v24);
    }
    *((void *)&v393 + 1) = v28;
    double v30 = *(std::__shared_weak_count **)(a2 + 16);
    if (v30)
    {
      uint64_t v31 = *(void *)(a2 + 8);
      double v32 = std::__shared_weak_count::lock(v30);
      if (v32)
      {
        double v33 = v32;
        _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeImENS_9allocatorIS2_EEJNS_10shared_ptrIS2_EENS_6vectorImNS3_ImEEEENS7_IDv4_dNS3_ISA_EEEEEvEENS5_IT_EERKT0_DpOT1_((uint64_t *)&v391, v31, v32, &v393, (long long *)&v395);
        std::__shared_weak_count::__release_shared[abi:nn180100](v33);
        double v34 = (std::__shared_weak_count *)*((void *)&v391 + 1);
        long long v382 = v391;
        double v35 = (std::__shared_weak_count *)a4[1];
        uint64_t v380 = *a4;
        v381 = v35;
        if (v35) {
          atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        _UIRTreeContainerNode<unsigned long>::addContainer(&v390, a2, (uint64_t *)&v382, &v380);
        double v36 = (std::__shared_weak_count *)a4[1];
        *(_OWORD *)a4 = v390;
        if (v36) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v36);
        }
        if (v381) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v381);
        }
        if (v34) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v34);
        }
        if ((void)v393)
        {
          *((void *)&v393 + 1) = v393;
          operator delete((void *)v393);
        }
        float64_t v37 = v395.f64[0];
        if (!*(void *)&v395.f64[0]) {
          goto LABEL_41;
        }
        goto LABEL_40;
      }
    }
    std::__throw_bad_weak_ptr[abi:nn180100]();
    __break(1u);
LABEL_348:
    abort();
  }
  if (_UIRTreeContainerNode<unsigned long>::isRoot(a2))
  {
    uint64_t v10 = *(uint64_t **)(a2 + 40);
    unint64_t v11 = *(uint64_t **)(a2 + 48);
    goto LABEL_4;
  }
  if (_UIRTreeContainerNode<unsigned long>::isFull(a2))
  {
    uint64_t v375 = a3;
    float64x2_t v395 = a5;
    float64x2_t v396 = a6;
    uint64_t v40 = *(void *)(a2 + 64);
    uint64_t v39 = *(void *)(a2 + 72);
    v394 = 0;
    long long v393 = 0uLL;
    size_t v41 = v39 - v40;
    unint64_t v42 = (v39 - v40) >> 3;
    if (v39 == v40)
    {
      double v45 = 0;
      double v59 = 0;
      double v44 = 0;
      unint64_t v46 = v42 >> 1;
      double v47 = (unint64_t *)(8 * (v42 >> 1));
    }
    else
    {
      std::vector<unsigned long>::__vallocate[abi:nn180100](&v393, (v39 - v40) >> 3);
      uint64_t v43 = *((void *)&v393 + 1);
      bzero(*((void **)&v393 + 1), v41);
      double v44 = (unint64_t *)(v43 + v41);
      *((void *)&v393 + 1) = v43 + v41;
      double v45 = (unint64_t *)v393;
      unint64_t v46 = v42 >> 1;
      double v47 = (unint64_t *)(v393 + 8 * (v42 >> 1));
      if ((void)v393 == v43 + v41)
      {
        double v45 = (unint64_t *)(v43 + v41);
      }
      else
      {
        unint64_t v48 = 0;
        double v49 = (unint64_t *)v393;
        do
          *v49++ = v48++;
        while (v49 != v44);
      }
      double v59 = (unint64_t *)(v43 + v41);
    }
    if (v41 >= 0x10)
    {
      unint64_t v378 = v46;
      if (v47 != v59 && v47 != v44)
      {
        double v60 = (uint64_t *)v45;
        double v61 = v59;
        v373 = v59;
        do
        {
          unint64_t v62 = ((char *)v61 - (char *)v60) >> 3;
          if (v62 < 2) {
            break;
          }
          if (v62 == 3)
          {
            _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(v60, v60 + 1, (uint64_t *)v61 - 1, &v395, *(void *)(a2 + 88));
            break;
          }
          if (v62 == 2)
          {
            uint64_t v260 = *(v61 - 1);
            uint64_t v261 = *v60;
            uint64_t v262 = *(void *)(a2 + 88);
            v263 = (float64x2_t *)(v262 + 32 * v260);
            float64x2_t v265 = *v263;
            float64x2_t v264 = v263[1];
            float64x2_t v266 = vaddq_f64(*v263, v264);
            float64x2_t v267 = vaddq_f64(v395, v396);
            int64x2_t v268 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v266, v267), (int8x16_t)vcgeq_f64(v395, *v263));
            unint64_t v269 = vandq_s8((int8x16_t)vdupq_laneq_s64(v268, 1), (int8x16_t)v268).u64[0];
            double v270 = 0.0;
            double v271 = 0.0;
            if ((v269 & 0x8000000000000000) == 0)
            {
              float64x2_t v272 = vsubq_f64(vmaxnmq_f64(v266, v267), vminnmq_f64(v265, v395));
              double v271 = vmulq_laneq_f64(v272, v272, 1).f64[0] / vmuld_lane_f64(v264.f64[0], v264, 1);
            }
            v273 = (float64x2_t *)(v262 + 32 * v261);
            float64x2_t v274 = v273[1];
            float64x2_t v275 = vaddq_f64(*v273, v274);
            int64x2_t v276 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v275, v267), (int8x16_t)vcgeq_f64(v395, *v273));
            if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v276, 1), (int8x16_t)v276).u64[0] & 0x8000000000000000) == 0)
            {
              float64x2_t v277 = vsubq_f64(vmaxnmq_f64(v275, v267), vminnmq_f64(*v273, v395));
              double v270 = vmulq_laneq_f64(v277, v277, 1).f64[0] / vmuld_lane_f64(v274.f64[0], v274, 1);
            }
            if (v271 > v270)
            {
              *double v60 = v260;
              *(v61 - 1) = v261;
            }
            break;
          }
          if ((char *)v61 - (char *)v60 <= 63)
          {
            for (; v60 != (uint64_t *)(v61 - 1); ++v60)
            {
              v278 = (uint64_t *)v61;
              if (v60 != (uint64_t *)v61)
              {
                v279 = v60 + 1;
                v278 = v60;
                if (v60 + 1 != (uint64_t *)v61)
                {
                  uint64_t v280 = *(void *)(a2 + 88);
                  float64x2_t v281 = vaddq_f64(v395, v396);
                  v278 = v60;
                  do
                  {
                    v282 = (float64x2_t *)(v280 + 32 * *v279);
                    float64x2_t v284 = *v282;
                    float64x2_t v283 = v282[1];
                    float64x2_t v285 = vaddq_f64(*v282, v283);
                    int64x2_t v286 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v285, v281), (int8x16_t)vcgeq_f64(v395, *v282));
                    unint64_t v287 = vandq_s8((int8x16_t)vdupq_laneq_s64(v286, 1), (int8x16_t)v286).u64[0];
                    double v288 = 0.0;
                    double v289 = 0.0;
                    if ((v287 & 0x8000000000000000) == 0)
                    {
                      float64x2_t v290 = vsubq_f64(vmaxnmq_f64(v285, v281), vminnmq_f64(v284, v395));
                      double v289 = vmulq_laneq_f64(v290, v290, 1).f64[0] / vmuld_lane_f64(v283.f64[0], v283, 1);
                    }
                    v291 = (float64x2_t *)(v280 + 32 * *v278);
                    float64x2_t v292 = v291[1];
                    float64x2_t v293 = vaddq_f64(*v291, v292);
                    int64x2_t v294 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v293, v281), (int8x16_t)vcgeq_f64(v395, *v291));
                    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v294, 1), (int8x16_t)v294).u64[0] & 0x8000000000000000) == 0)
                    {
                      float64x2_t v295 = vsubq_f64(vmaxnmq_f64(v293, v281), vminnmq_f64(*v291, v395));
                      double v288 = vmulq_laneq_f64(v295, v295, 1).f64[0] / vmuld_lane_f64(v292.f64[0], v292, 1);
                    }
                    if (v289 > v288) {
                      v278 = v279;
                    }
                    ++v279;
                  }
                  while (v279 != (uint64_t *)v61);
                }
              }
              if (v60 != v278)
              {
                uint64_t v296 = *v60;
                *double v60 = *v278;
                uint64_t *v278 = v296;
              }
            }
            break;
          }
          double v63 = a1;
          double v64 = &v60[v62 >> 1];
          double v65 = v61 - 1;
          int v66 = _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(v60, v64, (uint64_t *)v61 - 1, &v395, *(void *)(a2 + 88));
          uint64_t v67 = *v60;
          uint64_t v68 = *(void *)(a2 + 88);
          CGFloat v69 = (float64x2_t *)(v68 + 32 * *v60);
          float64x2_t v71 = *v69;
          float64x2_t v70 = v69[1];
          float64x2_t v72 = vaddq_f64(*v69, v70);
          float64x2_t v73 = vaddq_f64(v395, v396);
          int64x2_t v74 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v72, v73), (int8x16_t)vcgeq_f64(v395, *v69));
          uint64_t v75 = vandq_s8((int8x16_t)vdupq_laneq_s64(v74, 1), (int8x16_t)v74).u64[0];
          double v76 = 0.0;
          double v77 = 0.0;
          if ((v75 & 0x8000000000000000) == 0)
          {
            float64x2_t v78 = vsubq_f64(vmaxnmq_f64(v72, v73), vminnmq_f64(v71, v395));
            double v77 = vmulq_laneq_f64(v78, v78, 1).f64[0] / vmuld_lane_f64(v70.f64[0], v70, 1);
          }
          double v79 = (float64x2_t *)(v68 + 32 * *v64);
          float64x2_t v80 = *v79;
          float64x2_t v81 = v79[1];
          float64x2_t v82 = vaddq_f64(*v79, v81);
          int64x2_t v83 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v82, v73), (int8x16_t)vcgeq_f64(v395, *v79));
          unint64_t v84 = vandq_s8((int8x16_t)vdupq_laneq_s64(v83, 1), (int8x16_t)v83).u64[0];
          if ((v84 & 0x8000000000000000) == 0)
          {
            float64x2_t v85 = vsubq_f64(vmaxnmq_f64(v82, v73), vminnmq_f64(v80, v395));
            double v76 = vmulq_laneq_f64(v85, v85, 1).f64[0] / vmuld_lane_f64(v81.f64[0], v81, 1);
          }
          if (v77 <= v76)
          {
            double v87 = vmuld_lane_f64(v81.f64[0], v81, 1);
            int v86 = (uint64_t *)(v61 - 1);
            while (--v86 != v60)
            {
              double v88 = (float64x2_t *)(v68 + 32 * *v86);
              float64x2_t v90 = *v88;
              float64x2_t v89 = v88[1];
              float64x2_t v91 = vaddq_f64(*v88, v89);
              int64x2_t v92 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v91, v73), (int8x16_t)vcgeq_f64(v395, *v88));
              unint64_t v93 = vandq_s8((int8x16_t)vdupq_laneq_s64(v92, 1), (int8x16_t)v92).u64[0];
              double v94 = 0.0;
              double v95 = 0.0;
              if ((v93 & 0x8000000000000000) == 0)
              {
                float64x2_t v96 = vsubq_f64(vmaxnmq_f64(v91, v73), vminnmq_f64(v90, v395));
                double v95 = vmulq_laneq_f64(v96, v96, 1).f64[0] / vmuld_lane_f64(v89.f64[0], v89, 1);
              }
              if ((v84 & 0x8000000000000000) == 0)
              {
                float64x2_t v97 = vsubq_f64(vmaxnmq_f64(v82, v73), vminnmq_f64(v80, v395));
                double v94 = vmulq_laneq_f64(v97, v97, 1).f64[0] / v87;
              }
              if (v95 > v94)
              {
                *double v60 = *v86;
                *int v86 = v67;
                ++v66;
                goto LABEL_83;
              }
            }
            unint64_t v169 = *v65;
            float64x2_t v170 = vsubq_f64(vmaxnmq_f64(v72, v73), vminnmq_f64(v71, v395));
            double v171 = vmulq_laneq_f64(v170, v170, 1).f64[0];
            double v172 = v171 / vmuld_lane_f64(v70.f64[0], v70, 1);
            if (v75 < 0) {
              double v172 = 0.0;
            }
            double v173 = (float64x2_t *)(v68 + 32 * v169);
            float64x2_t v174 = v173[1];
            float64x2_t v175 = vaddq_f64(*v173, v174);
            int64x2_t v176 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v175, v73), (int8x16_t)vcgeq_f64(v395, *v173));
            if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v176, 1), (int8x16_t)v176).u64[0] & 0x8000000000000000) != 0)
            {
              double v178 = 0.0;
            }
            else
            {
              float64x2_t v177 = vsubq_f64(vmaxnmq_f64(v175, v73), vminnmq_f64(*v173, v395));
              double v178 = vmulq_laneq_f64(v177, v177, 1).f64[0] / vmuld_lane_f64(v174.f64[0], v174, 1);
            }
            a1 = v63;
            v197 = (unint64_t *)(v60 + 1);
            double v59 = v373;
            if (v172 <= v178)
            {
              if (v197 == v65) {
                break;
              }
              double v198 = vmuld_lane_f64(v70.f64[0], v70, 1);
              while (1)
              {
                double v199 = 0.0;
                double v200 = 0.0;
                if ((v75 & 0x8000000000000000) == 0) {
                  double v200 = v171 / v198;
                }
                unint64_t v201 = *v197;
                v202 = (float64x2_t *)(v68 + 32 * *v197);
                float64x2_t v203 = v202[1];
                float64x2_t v204 = vaddq_f64(*v202, v203);
                int64x2_t v205 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v204, v73), (int8x16_t)vcgeq_f64(v395, *v202));
                if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v205, 1), (int8x16_t)v205).u64[0] & 0x8000000000000000) == 0)
                {
                  float64x2_t v206 = vsubq_f64(vmaxnmq_f64(v204, v73), vminnmq_f64(*v202, v395));
                  double v199 = vmulq_laneq_f64(v206, v206, 1).f64[0] / vmuld_lane_f64(v203.f64[0], v203, 1);
                }
                if (v200 > v199) {
                  break;
                }
                if (++v197 == v65) {
                  goto LABEL_217;
                }
              }
              *v197++ = v169;
              *double v65 = v201;
            }
            if (v197 == v65) {
              break;
            }
            while (1)
            {
              v207 = (float64x2_t *)(v68 + 32 * *v60);
              float64x2_t v208 = *v207;
              float64x2_t v209 = v207[1];
              float64x2_t v210 = vaddq_f64(*v207, v209);
              float64x2_t v211 = vaddq_f64(v395, v396);
              int64x2_t v212 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v210, v211), (int8x16_t)vcgeq_f64(v395, *v207));
              unint64_t v213 = vandq_s8((int8x16_t)vdupq_laneq_s64(v212, 1), (int8x16_t)v212).u64[0];
              double v214 = vmuld_lane_f64(v209.f64[0], v209, 1);
              do
              {
                unint64_t v215 = *v197;
                double v216 = 0.0;
                double v217 = 0.0;
                if ((v213 & 0x8000000000000000) == 0)
                {
                  float64x2_t v218 = vsubq_f64(vmaxnmq_f64(v210, v211), vminnmq_f64(v208, v395));
                  double v217 = vmulq_laneq_f64(v218, v218, 1).f64[0] / v214;
                }
                v219 = (float64x2_t *)(v68 + 32 * v215);
                float64x2_t v220 = v219[1];
                float64x2_t v221 = vaddq_f64(*v219, v220);
                int64x2_t v222 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v221, v211), (int8x16_t)vcgeq_f64(v395, *v219));
                if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v222, 1), (int8x16_t)v222).u64[0] & 0x8000000000000000) == 0)
                {
                  float64x2_t v223 = vsubq_f64(vmaxnmq_f64(v221, v211), vminnmq_f64(*v219, v395));
                  double v216 = vmulq_laneq_f64(v223, v223, 1).f64[0] / vmuld_lane_f64(v220.f64[0], v220, 1);
                }
                ++v197;
              }
              while (v217 <= v216);
              v224 = v197 - 1;
              do
              {
                unint64_t v226 = *--v65;
                unint64_t v225 = v226;
                double v227 = 0.0;
                double v228 = 0.0;
                if ((v213 & 0x8000000000000000) == 0)
                {
                  float64x2_t v229 = vsubq_f64(vmaxnmq_f64(v210, v211), vminnmq_f64(v208, v395));
                  double v228 = vmulq_laneq_f64(v229, v229, 1).f64[0] / v214;
                }
                v230 = (float64x2_t *)(v68 + 32 * v225);
                float64x2_t v231 = v230[1];
                float64x2_t v232 = vaddq_f64(*v230, v231);
                int64x2_t v233 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v232, v211), (int8x16_t)vcgeq_f64(v395, *v230));
                if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v233, 1), (int8x16_t)v233).u64[0] & 0x8000000000000000) == 0)
                {
                  float64x2_t v234 = vsubq_f64(vmaxnmq_f64(v232, v211), vminnmq_f64(*v230, v395));
                  double v227 = vmulq_laneq_f64(v234, v234, 1).f64[0] / vmuld_lane_f64(v231.f64[0], v231, 1);
                }
              }
              while (v228 > v227);
              if (v224 >= v65) {
                break;
              }
              unint64_t *v224 = v225;
              *double v65 = v215;
            }
            double v60 = (uint64_t *)(v197 - 1);
            if (v224 > v47) {
              break;
            }
          }
          else
          {
            int v86 = (uint64_t *)(v61 - 1);
LABEL_83:
            double v98 = v60 + 1;
            if (v60 + 1 >= v86)
            {
              float64_t v107 = v60 + 1;
              uint64_t i = 1;
            }
            else
            {
              double v99 = v60 + 1;
              for (uint64_t i = 1; ; ++i)
              {
                CGRect v101 = (float64x2_t *)(v68 + 32 * *v64);
                float64x2_t v102 = vaddq_f64(v395, v396);
                float64x2_t v103 = *v101;
                float64x2_t v104 = v101[1];
                float64x2_t v105 = vaddq_f64(*v101, v104);
                int64x2_t v106 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v105, v102), (int8x16_t)vcgeq_f64(v395, *v101));
                float64_t v107 = v99;
                unint64_t v108 = vandq_s8((int8x16_t)vdupq_laneq_s64(v106, 1), (int8x16_t)v106).u64[0];
                double v109 = vmuld_lane_f64(v104.f64[0], v104, 1);
                double v99 = &v98[i];
                for (j = &v60[i]; ; ++j)
                {
                  uint64_t v111 = *j;
                  double v112 = (float64x2_t *)(v68 + 32 * *j);
                  float64x2_t v114 = *v112;
                  float64x2_t v113 = v112[1];
                  float64x2_t v115 = vaddq_f64(*v112, v113);
                  int64x2_t v116 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v115, v102), (int8x16_t)vcgeq_f64(v395, *v112));
                  unint64_t v117 = vandq_s8((int8x16_t)vdupq_laneq_s64(v116, 1), (int8x16_t)v116).u64[0];
                  double v118 = 0.0;
                  double v119 = 0.0;
                  if ((v117 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v120 = vsubq_f64(vmaxnmq_f64(v115, v102), vminnmq_f64(v114, v395));
                    double v119 = vmulq_laneq_f64(v120, v120, 1).f64[0] / vmuld_lane_f64(v113.f64[0], v113, 1);
                  }
                  if ((v108 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v121 = vsubq_f64(vmaxnmq_f64(v105, v102), vminnmq_f64(v103, v395));
                    double v118 = vmulq_laneq_f64(v121, v121, 1).f64[0] / v109;
                  }
                  if (v119 <= v118) {
                    break;
                  }
                  float64_t v107 = &v60[++i];
                  ++v99;
                }
                do
                {
                  uint64_t v123 = *--v86;
                  uint64_t v122 = v123;
                  float64x2_t v124 = (float64x2_t *)(v68 + 32 * v123);
                  float64x2_t v126 = *v124;
                  float64x2_t v125 = v124[1];
                  float64x2_t v127 = vaddq_f64(*v124, v125);
                  int64x2_t v128 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v127, v102), (int8x16_t)vcgeq_f64(v395, *v124));
                  unint64_t v129 = vandq_s8((int8x16_t)vdupq_laneq_s64(v128, 1), (int8x16_t)v128).u64[0];
                  double v130 = 0.0;
                  double v131 = 0.0;
                  if ((v129 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v132 = vsubq_f64(vmaxnmq_f64(v127, v102), vminnmq_f64(v126, v395));
                    double v131 = vmulq_laneq_f64(v132, v132, 1).f64[0] / vmuld_lane_f64(v125.f64[0], v125, 1);
                  }
                  if ((v108 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v133 = vsubq_f64(vmaxnmq_f64(v105, v102), vminnmq_f64(v103, v395));
                    double v130 = vmulq_laneq_f64(v133, v133, 1).f64[0] / v109;
                  }
                }
                while (v131 <= v130);
                if (j >= v86) {
                  break;
                }
                uint64_t *j = v122;
                *int v86 = v111;
                ++v66;
                if (j == v64) {
                  double v64 = v86;
                }
              }
            }
            float64x2_t v134 = &v60[i];
            if (v134 != v64)
            {
              double v135 = (float64x2_t *)(v68 + 32 * *v64);
              float64x2_t v137 = *v135;
              float64x2_t v136 = v135[1];
              float64x2_t v138 = vaddq_f64(*v135, v136);
              float64x2_t v139 = vaddq_f64(v395, v396);
              int64x2_t v140 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v138, v139), (int8x16_t)vcgeq_f64(v395, *v135));
              unint64_t v141 = vandq_s8((int8x16_t)vdupq_laneq_s64(v140, 1), (int8x16_t)v140).u64[0];
              double v142 = 0.0;
              double v143 = 0.0;
              if ((v141 & 0x8000000000000000) == 0)
              {
                float64x2_t v144 = vsubq_f64(vmaxnmq_f64(v138, v139), vminnmq_f64(v137, v395));
                double v143 = vmulq_laneq_f64(v144, v144, 1).f64[0] / vmuld_lane_f64(v136.f64[0], v136, 1);
              }
              uint64_t v145 = *v134;
              double v146 = (float64x2_t *)(v68 + 32 * *v134);
              float64x2_t v147 = v146[1];
              float64x2_t v148 = vaddq_f64(*v146, v147);
              int64x2_t v149 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v148, v139), (int8x16_t)vcgeq_f64(v395, *v146));
              if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v149, 1), (int8x16_t)v149).u64[0] & 0x8000000000000000) == 0)
              {
                float64x2_t v150 = vsubq_f64(vmaxnmq_f64(v148, v139), vminnmq_f64(*v146, v395));
                double v142 = vmulq_laneq_f64(v150, v150, 1).f64[0] / vmuld_lane_f64(v147.f64[0], v147, 1);
              }
              if (v143 > v142)
              {
                *float64x2_t v134 = *v64;
                *double v64 = v145;
                ++v66;
              }
            }
            a1 = v63;
            double v59 = v373;
            if (v134 == (uint64_t *)v47) {
              break;
            }
            if (!v66)
            {
              if (v134 <= (uint64_t *)v47)
              {
                double v179 = (unint64_t *)(v107 + 1);
                if (v107 + 1 == (uint64_t *)v61) {
                  break;
                }
                float64x2_t v180 = vaddq_f64(v395, v396);
                uint64_t v181 = *v107;
                while (1)
                {
                  unint64_t v182 = *v179;
                  double v183 = (float64x2_t *)(v68 + 32 * *v179);
                  float64x2_t v185 = *v183;
                  float64x2_t v184 = v183[1];
                  float64x2_t v186 = vaddq_f64(*v183, v184);
                  int64x2_t v187 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v186, v180), (int8x16_t)vcgeq_f64(v395, *v183));
                  unint64_t v188 = vandq_s8((int8x16_t)vdupq_laneq_s64(v187, 1), (int8x16_t)v187).u64[0];
                  double v189 = 0.0;
                  double v190 = 0.0;
                  if ((v188 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v191 = vsubq_f64(vmaxnmq_f64(v186, v180), vminnmq_f64(v185, v395));
                    double v190 = vmulq_laneq_f64(v191, v191, 1).f64[0] / vmuld_lane_f64(v184.f64[0], v184, 1);
                  }
                  v192 = (float64x2_t *)(v68 + 32 * v181);
                  float64x2_t v193 = v192[1];
                  float64x2_t v194 = vaddq_f64(*v192, v193);
                  int64x2_t v195 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v194, v180), (int8x16_t)vcgeq_f64(v395, *v192));
                  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v195, 1), (int8x16_t)v195).u64[0] & 0x8000000000000000) == 0)
                  {
                    float64x2_t v196 = vsubq_f64(vmaxnmq_f64(v194, v180), vminnmq_f64(*v192, v395));
                    double v189 = vmulq_laneq_f64(v196, v196, 1).f64[0] / vmuld_lane_f64(v193.f64[0], v193, 1);
                  }
                  if (v190 > v189) {
                    break;
                  }
                  ++v179;
                  uint64_t v181 = v182;
                  if (v179 == v61) {
                    goto LABEL_217;
                  }
                }
              }
              else
              {
                if (i == 1) {
                  break;
                }
                float64x2_t v151 = vaddq_f64(v395, v396);
                uint64_t v152 = *v60;
                uint64_t v153 = 8 * i - 8;
                while (1)
                {
                  uint64_t v154 = *v98;
                  float64x2_t v155 = (float64x2_t *)(v68 + 32 * *v98);
                  float64x2_t v157 = *v155;
                  float64x2_t v156 = v155[1];
                  float64x2_t v158 = vaddq_f64(*v155, v156);
                  int64x2_t v159 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v158, v151), (int8x16_t)vcgeq_f64(v395, *v155));
                  unint64_t v160 = vandq_s8((int8x16_t)vdupq_laneq_s64(v159, 1), (int8x16_t)v159).u64[0];
                  double v161 = 0.0;
                  double v162 = 0.0;
                  if ((v160 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v163 = vsubq_f64(vmaxnmq_f64(v158, v151), vminnmq_f64(v157, v395));
                    double v162 = vmulq_laneq_f64(v163, v163, 1).f64[0] / vmuld_lane_f64(v156.f64[0], v156, 1);
                  }
                  double v164 = (float64x2_t *)(v68 + 32 * v152);
                  float64x2_t v165 = v164[1];
                  float64x2_t v166 = vaddq_f64(*v164, v165);
                  int64x2_t v167 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v166, v151), (int8x16_t)vcgeq_f64(v395, *v164));
                  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v167, 1), (int8x16_t)v167).u64[0] & 0x8000000000000000) == 0)
                  {
                    float64x2_t v168 = vsubq_f64(vmaxnmq_f64(v166, v151), vminnmq_f64(*v164, v395));
                    double v161 = vmulq_laneq_f64(v168, v168, 1).f64[0] / vmuld_lane_f64(v165.f64[0], v165, 1);
                  }
                  if (v162 > v161) {
                    break;
                  }
                  ++v98;
                  uint64_t v152 = v154;
                  v153 -= 8;
                  if (!v153) {
                    goto LABEL_217;
                  }
                }
              }
            }
            if (v134 <= (uint64_t *)v47) {
              double v60 = v134 + 1;
            }
            else {
              double v61 = (unint64_t *)v107;
            }
          }
        }
        while (v61 != v47);
      }
LABEL_217:
      std::__introsort<std::_ClassicAlgPolicy,std::greater<void> &,unsigned long *,false>(v45, v47, 126 - 2 * __clz(v378), 1);
      double v45 = (unint64_t *)v393;
      if (v47 == v44)
      {
        double v44 = (unint64_t *)*((void *)&v393 + 1);
      }
      else
      {
        uint64_t v297 = *((void *)&v393 + 1) - (void)v59;
        if (*((unint64_t **)&v393 + 1) != v59)
        {
          memmove(v47, v59, *((void *)&v393 + 1) - (void)v59);
          double v45 = (unint64_t *)v393;
        }
        double v44 = (unint64_t *)((char *)v47 + v297);
        *((void *)&v393 + 1) = (char *)v47 + v297;
      }
    }
    unint64_t v298 = v44 - v45 + 1;
    float64x2_t v395 = 0uLL;
    v396.f64[0] = 0.0;
    long long v391 = 0uLL;
    v392 = 0;
    _ZNSt3__16vectorIDv4_dNS_9allocatorIS1_EEE7reserveEm((void **)&v395, v298);
    uint64_t v299 = v375;
    if (v44 - v45 != -1)
    {
      if (v298 >> 61) {
        goto LABEL_347;
      }
      v300 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)&v392, v298);
      *(void *)&long long v391 = &v300[*((void *)&v391 + 1) & 0xFFFFFFFFFFFFFFF8];
      *((void *)&v391 + 1) = v391;
      v392 = &v300[8 * v301];
    }
    v302 = (uint64_t *)*((void *)&v393 + 1);
    v303 = (uint64_t *)v393;
    float64_t v304 = v395.f64[0];
    if ((void)v393 == *((void *)&v393 + 1))
    {
      float64_t v306 = v395.f64[1];
    }
    else
    {
      v374 = a1;
      float64_t v306 = v395.f64[1];
      float64_t v305 = v396.f64[0];
      do
      {
        uint64_t v307 = *v303;
        v308 = (_OWORD *)(*(void *)(a2 + 88) + 32 * *v303);
        if (*(void *)&v306 >= *(void *)&v305)
        {
          uint64_t v310 = (uint64_t)(*(void *)&v306 - *(void *)&v304) >> 5;
          unint64_t v311 = v310 + 1;
          if ((unint64_t)(v310 + 1) >> 59)
          {
            v395.f64[0] = v304;
            abort();
          }
          if ((uint64_t)(*(void *)&v305 - *(void *)&v304) >> 4 > v311) {
            unint64_t v311 = (uint64_t)(*(void *)&v305 - *(void *)&v304) >> 4;
          }
          if (*(void *)&v305 - *(void *)&v304 >= 0x7FFFFFFFFFFFFFE0uLL) {
            unint64_t v312 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v312 = v311;
          }
          if (v312) {
            unint64_t v312 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v312);
          }
          else {
            uint64_t v313 = 0;
          }
          long long v314 = v308[1];
          v315 = (_OWORD *)(v312 + 32 * v310);
          _OWORD *v315 = *v308;
          v315[1] = v314;
          v316 = v315;
          while (*(void *)&v306 != *(void *)&v304)
          {
            long long v317 = *(_OWORD *)(*(void *)&v306 - 32);
            long long v318 = *(_OWORD *)(*(void *)&v306 - 16);
            *(void *)&v306 -= 32;
            *(v316 - 2) = v317;
            *(v316 - 1) = v318;
            v316 -= 2;
          }
          *(void *)&float64_t v305 = v312 + 32 * v313;
          *(void *)&float64_t v306 = v315 + 2;
          *(void *)&v395.f64[1] = v315 + 2;
          if (v304 != 0.0) {
            operator delete(*(void **)&v304);
          }
          float64_t v304 = *(double *)&v316;
        }
        else
        {
          long long v309 = v308[1];
          **(_OWORD **)&float64_t v306 = *v308;
          *(_OWORD *)(*(void *)&v306 + 16) = v309;
          *(void *)&v306 += 32;
        }
        v395.f64[1] = v306;
        v319 = *(char **)(a2 + 96);
        int64_t v320 = v319 - (char *)(v308 + 2);
        if (v319 != (char *)(v308 + 2)) {
          memmove(v308, v308 + 2, v319 - (char *)(v308 + 2));
        }
        *(void *)(a2 + 96) = (char *)v308 + v320;
        v321 = (void *)(*(void *)(a2 + 64) + 8 * v307);
        v322 = (char *)*((void *)&v391 + 1);
        if (*((void *)&v391 + 1) >= (unint64_t)v392)
        {
          v324 = (char *)v391;
          uint64_t v325 = (uint64_t)(*((void *)&v391 + 1) - v391) >> 3;
          unint64_t v326 = v325 + 1;
          if ((unint64_t)(v325 + 1) >> 61)
          {
            v395.f64[0] = v304;
            abort();
          }
          uint64_t v327 = (uint64_t)&v392[-v391];
          if ((uint64_t)&v392[-v391] >> 2 > v326) {
            unint64_t v326 = v327 >> 2;
          }
          if ((unint64_t)v327 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v328 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v328 = v326;
          }
          if (v328)
          {
            v329 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)&v392, v328);
            v322 = (char *)*((void *)&v391 + 1);
            v324 = (char *)v391;
          }
          else
          {
            v329 = 0;
          }
          v330 = &v329[8 * v325];
          *(void *)v330 = *v321;
          v323 = v330 + 8;
          while (v322 != v324)
          {
            uint64_t v331 = *((void *)v322 - 1);
            v322 -= 8;
            *((void *)v330 - 1) = v331;
            v330 -= 8;
          }
          *(void *)&long long v391 = v330;
          *((void *)&v391 + 1) = v323;
          v392 = &v329[8 * v328];
          if (v324) {
            operator delete(v324);
          }
        }
        else
        {
          **((void **)&v391 + 1) = *v321;
          v323 = v322 + 8;
        }
        *((void *)&v391 + 1) = v323;
        v332 = *(char **)(a2 + 72);
        int64_t v333 = v332 - (char *)(v321 + 1);
        if (v332 != (char *)(v321 + 1)) {
          memmove(v321, v321 + 1, v332 - (char *)(v321 + 1));
        }
        *(void *)(a2 + 72) = (char *)v321 + v333;
        ++v303;
      }
      while (v303 != v302);
      v396.f64[0] = v305;
      v395.f64[0] = v304;
      a1 = v374;
      uint64_t v299 = v375;
    }
    if (*(void *)&v304 != *(void *)&v306)
    {
      v334 = (_OWORD *)(*(void *)&v306 - 32);
      if ((unint64_t)(*(void *)&v306 - 32) > *(void *)&v304)
      {
        unint64_t v335 = *(void *)&v304 + 32;
        do
        {
          long long v336 = *(_OWORD *)(v335 - 32);
          long long v337 = *(_OWORD *)(v335 - 16);
          long long v338 = v334[1];
          *(_OWORD *)(v335 - 32) = *v334;
          *(_OWORD *)(v335 - 16) = v338;
          _OWORD *v334 = v336;
          v334[1] = v337;
          v334 -= 2;
          BOOL v339 = v335 >= (unint64_t)v334;
          v335 += 32;
        }
        while (!v339);
      }
    }
    v340 = (void *)(*((void *)&v391 + 1) - 8);
    if ((void)v391 != *((void *)&v391 + 1) && (unint64_t)v340 > (unint64_t)v391)
    {
      unint64_t v342 = v391 + 8;
      do
      {
        uint64_t v343 = *(void *)(v342 - 8);
        *(void *)(v342 - 8) = *v340;
        *v340-- = v343;
        BOOL v339 = v342 >= (unint64_t)v340;
        v342 += 8;
      }
      while (!v339);
    }
    if (*(void *)&v306 >= *(void *)&v396.f64[0])
    {
      uint64_t v345 = (uint64_t)(*(void *)&v306 - *(void *)&v304) >> 5;
      unint64_t v346 = v345 + 1;
      if ((unint64_t)(v345 + 1) >> 59) {
        goto LABEL_347;
      }
      uint64_t v347 = *(void *)&v396.f64[0] - *(void *)&v304;
      if ((uint64_t)(*(void *)&v396.f64[0] - *(void *)&v304) >> 4 > v346) {
        unint64_t v346 = v347 >> 4;
      }
      if ((unint64_t)v347 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v348 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v348 = v346;
      }
      if (v348) {
        unint64_t v348 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v348);
      }
      else {
        uint64_t v349 = 0;
      }
      v350 = (__n128 *)(v348 + 32 * v345);
      __n128 *v350 = (__n128)a5;
      v350[1] = (__n128)a6;
      *(void *)&float64_t v344 = v350[2].n128_f64;
      while (*(void *)&v306 != *(void *)&v304)
      {
        __n128 v351 = *(__n128 *)(*(void *)&v306 - 32);
        __n128 v352 = *(__n128 *)(*(void *)&v306 - 16);
        *(void *)&v306 -= 32;
        v350[-2] = v351;
        v350[-1] = v352;
        v350 -= 2;
      }
      *(void *)&v395.f64[0] = v350;
      v395.f64[1] = v344;
      *(void *)&v396.f64[0] = v348 + 32 * v349;
      if (v304 != 0.0) {
        operator delete(*(void **)&v304);
      }
    }
    else
    {
      **(_OWORD **)&float64_t v306 = a5;
      *(float64x2_t *)(*(void *)&v306 + 16) = a6;
      *(void *)&float64_t v344 = *(void *)&v306 + 32;
    }
    v395.f64[1] = v344;
    v353 = (char *)*((void *)&v391 + 1);
    if (*((void *)&v391 + 1) < (unint64_t)v392)
    {
      **((void **)&v391 + 1) = v299;
      v354 = v353 + 8;
      goto LABEL_312;
    }
    v355 = (char *)v391;
    uint64_t v356 = (uint64_t)(*((void *)&v391 + 1) - v391) >> 3;
    unint64_t v357 = v356 + 1;
    if (!((unint64_t)(v356 + 1) >> 61))
    {
      uint64_t v358 = (uint64_t)&v392[-v391];
      if ((uint64_t)&v392[-v391] >> 2 > v357) {
        unint64_t v357 = v358 >> 2;
      }
      if ((unint64_t)v358 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v359 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v359 = v357;
      }
      if (v359)
      {
        v360 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)&v392, v359);
        v353 = (char *)*((void *)&v391 + 1);
        v355 = (char *)v391;
      }
      else
      {
        v360 = 0;
      }
      v361 = &v360[8 * v356];
      v362 = &v360[8 * v359];
      *(void *)v361 = v299;
      v354 = v361 + 8;
      while (v353 != v355)
      {
        uint64_t v363 = *((void *)v353 - 1);
        v353 -= 8;
        *((void *)v361 - 1) = v363;
        v361 -= 8;
      }
      *(void *)&long long v391 = v361;
      *((void *)&v391 + 1) = v354;
      v392 = v362;
      if (v355) {
        operator delete(v355);
      }
LABEL_312:
      *((void *)&v391 + 1) = v354;
      v364 = *(std::__shared_weak_count **)(a2 + 32);
      if (v364)
      {
        v365 = std::__shared_weak_count::lock(v364);
        if (v365)
        {
          uint64_t v366 = *(void *)(a2 + 24);
          goto LABEL_317;
        }
      }
      else
      {
        v365 = 0;
      }
      uint64_t v366 = 0;
LABEL_317:
      _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeImENS_9allocatorIS2_EEJNS_10shared_ptrIS2_EENS_6vectorImNS3_ImEEEENS7_IDv4_dNS3_ISA_EEEEEvEENS5_IT_EERKT0_DpOT1_((uint64_t *)&v390, v366, v365, &v391, (long long *)&v395);
      if (v365) {
        std::__shared_weak_count::__release_shared[abi:nn180100](v365);
      }
      v367 = *(std::__shared_weak_count **)(a2 + 32);
      if (v367)
      {
        v368 = std::__shared_weak_count::lock(v367);
        if (v368)
        {
          uint64_t v369 = *(void *)(a2 + 24);
LABEL_324:
          v370 = (std::__shared_weak_count *)*((void *)&v390 + 1);
          long long v388 = v390;
          if (*((void *)&v390 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v390 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          v371 = (std::__shared_weak_count *)a4[1];
          uint64_t v386 = *a4;
          v387 = v371;
          if (v371) {
            atomic_fetch_add_explicit(&v371->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          _UIRTreeContainerNode<unsigned long>::addContainer(&v389, v369, (uint64_t *)&v388, &v386);
          v372 = (std::__shared_weak_count *)a4[1];
          *(_OWORD *)a4 = v389;
          if (v372) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v372);
          }
          if (v387) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v387);
          }
          if (v370) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v370);
          }
          if (v368) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v368);
          }
          _UIRTreeContainerNode<unsigned long>::invalidateBoundingFrameAndNotifyParents((int64x2_t *)a2);
          if (v370) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v370);
          }
          if ((void)v391)
          {
            *((void *)&v391 + 1) = v391;
            operator delete((void *)v391);
          }
          if (*(void *)&v395.f64[0]) {
            operator delete(*(void **)&v395.f64[0]);
          }
          float64_t v37 = *(double *)&v393;
          if (!(void)v393) {
            goto LABEL_41;
          }
          *((void *)&v393 + 1) = v393;
LABEL_40:
          operator delete(*(void **)&v37);
          goto LABEL_41;
        }
      }
      else
      {
        v368 = 0;
      }
      uint64_t v369 = 0;
      goto LABEL_324;
    }
LABEL_347:
    abort();
  }
  double v51 = *(__n128 **)(a2 + 96);
  unint64_t v50 = *(void *)(a2 + 104);
  if ((unint64_t)v51 >= v50)
  {
    uint64_t v53 = *(void *)(a2 + 88);
    uint64_t v54 = ((uint64_t)v51 - v53) >> 5;
    unint64_t v55 = v54 + 1;
    if ((unint64_t)(v54 + 1) >> 59) {
      goto LABEL_348;
    }
    uint64_t v56 = v50 - v53;
    if (v56 >> 4 > v55) {
      unint64_t v55 = v56 >> 4;
    }
    if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v57 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v57 = v55;
    }
    if (v57) {
      unint64_t v57 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v57);
    }
    else {
      uint64_t v58 = 0;
    }
    v235 = (__n128 *)(v57 + 32 * v54);
    unint64_t v236 = v57 + 32 * v58;
    __n128 *v235 = (__n128)a5;
    v235[1] = (__n128)a6;
    double v52 = v235 + 2;
    v238 = *(__n128 **)(a2 + 88);
    v237 = *(__n128 **)(a2 + 96);
    if (v237 != v238)
    {
      do
      {
        __n128 v239 = v237[-2];
        __n128 v240 = v237[-1];
        v237 -= 2;
        v235[-2] = v239;
        v235[-1] = v240;
        v235 -= 2;
      }
      while (v237 != v238);
      v237 = *(__n128 **)(a2 + 88);
    }
    *(void *)(a2 + 88) = v235;
    *(void *)(a2 + 96) = v52;
    *(void *)(a2 + 104) = v236;
    if (v237) {
      operator delete(v237);
    }
  }
  else
  {
    *double v51 = (__n128)a5;
    v51[1] = (__n128)a6;
    double v52 = v51 + 2;
  }
  unint64_t v241 = *(void *)(a2 + 80);
  *(void *)(a2 + 96) = v52;
  v242 = *(char **)(a2 + 72);
  if ((unint64_t)v242 >= v241)
  {
    v244 = *(char **)(a2 + 64);
    uint64_t v245 = (v242 - v244) >> 3;
    unint64_t v246 = v245 + 1;
    if ((unint64_t)(v245 + 1) >> 61) {
      goto LABEL_348;
    }
    uint64_t v247 = v241 - (void)v244;
    if (v247 >> 2 > v246) {
      unint64_t v246 = v247 >> 2;
    }
    if ((unint64_t)v247 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v248 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v248 = v246;
    }
    if (v248)
    {
      v249 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>(a2 + 80, v248);
      v244 = *(char **)(a2 + 64);
      v242 = *(char **)(a2 + 72);
    }
    else
    {
      v249 = 0;
    }
    v250 = &v249[8 * v245];
    v251 = &v249[8 * v248];
    *(void *)v250 = a3;
    v243 = v250 + 8;
    while (v242 != v244)
    {
      uint64_t v252 = *((void *)v242 - 1);
      v242 -= 8;
      *((void *)v250 - 1) = v252;
      v250 -= 8;
    }
    *(void *)(a2 + 64) = v250;
    *(void *)(a2 + 72) = v243;
    *(void *)(a2 + 80) = v251;
    if (v244) {
      operator delete(v244);
    }
  }
  else
  {
    *(void *)v242 = a3;
    v243 = v242 + 8;
  }
  *(void *)(a2 + 72) = v243;
  _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)v385, a2);
  float64x2_t v253 = vaddq_f64(a5, a6);
  int64x2_t v254 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(vaddq_f64(v385[0], v385[1]), v253), (int8x16_t)vcgeq_f64(a5, v385[0]));
  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v254, 1), (int8x16_t)v254).u64[0] & 0x8000000000000000) == 0)
  {
    float64x2_t v255 = *(float64x2_t *)(a2 + 112);
    float64x2_t v256 = vaddq_f64(v255, *(float64x2_t *)(a2 + 128));
    float64x2_t v257 = vminnmq_f64(v255, a5);
    *(float64x2_t *)(a2 + 112) = v257;
    *(float64x2_t *)(a2 + 128) = vsubq_f64(vmaxnmq_f64(v256, v253), v257);
    v258 = *(std::__shared_weak_count **)(a2 + 32);
    if (v258)
    {
      v258 = std::__shared_weak_count::lock(v258);
      v259 = v258;
      if (v258) {
        v258 = *(std::__shared_weak_count **)(a2 + 24);
      }
    }
    else
    {
      v259 = 0;
    }
    _UIRTreeContainerNode<unsigned long>::invalidateBoundingFrameAndNotifyParents((int64x2_t *)v258);
    if (v259)
    {
      float64x2_t v21 = v259;
LABEL_21:
      std::__shared_weak_count::__release_shared[abi:nn180100](v21);
    }
  }
LABEL_41:
  __n128 result = *(__n128 *)a4;
  *a1 = *(_OWORD *)a4;
  *a4 = 0;
  a4[1] = 0;
  return result;
}

void sub_185420364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  if (v28) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v28);
  }
  _Unwind_Resume(exception_object);
}

void sub_1854205D4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(std::__shared_weak_count **)(v2 - 64);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v4);
  }

  if (v1) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v1);
  }
  _Unwind_Resume(a1);
}

__n128 _UIRTreeContainerNode<_UICollectionViewRTreeElement>::addChild(_OWORD *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, __n128 a5, __n128 a6)
{
  uint64_t v10 = *(uint64_t **)(a2 + 40);
  unint64_t v11 = *(uint64_t **)(a2 + 48);
  if (v11 != v10)
  {
LABEL_4:
    uint64_t v12 = ((char *)v11 - (char *)v10) >> 4;
    if (v12)
    {
      if (v12 == 1)
      {
        uint64_t v13 = *v10;
        goto LABEL_15;
      }
      if (v10 != v11)
      {
        uint64_t v13 = 0;
        float64x2_t v413 = vaddq_f64((float64x2_t)a5, (float64x2_t)a6);
        double v14 = 1.79769313e308;
        do
        {
          _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)v434, *v10);
          float64x2_t v15 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
          int64x2_t v16 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v15, v413), (int8x16_t)vcgeq_f64((float64x2_t)a5, *(float64x2_t *)v434));
          if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v16, 1), (int8x16_t)v16).u64[0] & 0x8000000000000000) != 0)
          {
            double v18 = 0.0;
          }
          else
          {
            float64x2_t v17 = vsubq_f64(vmaxnmq_f64(v15, v413), vminnmq_f64(*(float64x2_t *)v434, (float64x2_t)a5));
            double v18 = vmulq_laneq_f64(v17, v17, 1).f64[0]
                / vmuld_lane_f64(*(double *)&v434[16], *(float64x2_t *)&v434[16], 1);
          }
          if (v18 < v14)
          {
            uint64_t v13 = *v10;
            double v14 = v18;
            if (fabs(v18) < 2.22044605e-16) {
              break;
            }
          }
          v10 += 2;
        }
        while (v10 != v11);
LABEL_15:
        if (v13)
        {
          uint64_t v19 = *a3;
          long long v20 = *(_OWORD *)(a3 + 1);
          long long v21 = *(_OWORD *)(a3 + 3);
          a3[3] = 0;
          a3[4] = 0;
          long long v421 = v20;
          long long v422 = v21;
          float64x2_t v22 = (std::__shared_weak_count *)a4[1];
          uint64_t v418 = *a4;
          v419 = v22;
          uint64_t v420 = v19;
          if (v22) {
            atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          _UIRTreeContainerNode<_UICollectionViewRTreeElement>::addChild(v434, v13, &v420, &v418, a5, a6);
          id v23 = (std::__shared_weak_count *)a4[1];
          *(_OWORD *)a4 = *(_OWORD *)v434;
          if (v23) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v23);
          }
          if (v419) {
            std::__shared_weak_count::__release_shared[abi:nn180100](v419);
          }

          goto LABEL_39;
        }
      }
    }
    int64x2_t v430 = 0uLL;
    unint64_t v431 = 0;
    uint64_t v24 = (__n128 *)operator new(0x20uLL);
    *uint64_t v24 = a5;
    v24[1] = a6;
    *((void *)&v432 + 1) = v24 + 2;
    v433 = v24 + 2;
    *(void *)&long long v432 = v24;
    v435 = &v431;
    double v25 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(1uLL);
    *(void *)&v434[8] = v25;
    *(void *)&v434[24] = &v25[40 * v26];
    *(void *)double v25 = *a3;
    *(_OWORD *)(v25 + 8) = *(_OWORD *)(a3 + 1);
    uint64_t v27 = a3[3];
    a3[3] = 0;
    *((void *)v25 + 3) = v27;
    uint64_t v28 = a3[4];
    a3[4] = 0;
    *((void *)v25 + 4) = v28;
    uint64_t v29 = v25 + 40;
    *(void *)&v434[16] = v25 + 40;
    uint64_t v30 = v430.i64[1];
    uint64_t v31 = v430.i64[0];
    uint64_t v32 = *(void *)&v434[8];
    if (v430.i64[1] == v430.i64[0])
    {
      int64x2_t v36 = vdupq_n_s64(v430.u64[1]);
    }
    else
    {
      do
      {
        uint64_t v33 = *(void *)(v30 - 40);
        v30 -= 40;
        *(void *)(v32 - 40) = v33;
        v32 -= 40;
        *(_OWORD *)(v32 + 8) = *(_OWORD *)(v30 + 8);
        uint64_t v34 = *(void *)(v30 + 24);
        *(void *)(v30 + 24) = 0;
        *(void *)(v32 + 24) = v34;
        uint64_t v35 = *(void *)(v30 + 32);
        *(void *)(v30 + 32) = 0;
        *(void *)(v32 + 32) = v35;
      }
      while (v30 != v31);
      int64x2_t v36 = v430;
      uint64_t v29 = *(char **)&v434[16];
    }
    v430.i64[0] = v32;
    v430.i64[1] = (uint64_t)v29;
    *(int64x2_t *)&v434[8] = v36;
    unint64_t v37 = v431;
    unint64_t v431 = *(void *)&v434[24];
    *(void *)&v434[24] = v37;
    *(void *)v434 = v36.i64[0];
    std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer((uint64_t)v434);
    uint64_t v39 = *(void *)(a2 + 8);
    double v38 = *(std::__shared_weak_count **)(a2 + 16);
    v430.i64[1] = (uint64_t)v29;
    if (v38)
    {
      uint64_t v40 = std::__shared_weak_count::lock(v38);
      if (v40)
      {
        size_t v41 = v40;
        _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeI29_UICollectionViewRTreeElementENS_9allocatorIS3_EEJNS_10shared_ptrIS3_EENS_6vectorIS2_NS4_IS2_EEEENS8_IDv4_dNS4_ISB_EEEEEvEENS6_IT_EERKT0_DpOT1_((uint64_t *)v434, v39, v40, (long long *)v430.i8, &v432);
        std::__shared_weak_count::__release_shared[abi:nn180100](v41);
        unint64_t v42 = *(std::__shared_weak_count **)&v434[8];
        v417[0] = *(void *)v434;
        v417[1] = *(void *)&v434[8];
        *(void *)v434 = 0;
        *(void *)&v434[8] = 0;
        uint64_t v43 = (std::__shared_weak_count *)a4[1];
        uint64_t v415 = *a4;
        v416 = v43;
        if (v43) {
          atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        _UIRTreeContainerNode<_UICollectionViewRTreeElement>::addContainer(&v428, a2, v417, &v415);
        double v44 = (std::__shared_weak_count *)a4[1];
        *(_OWORD *)a4 = v428;
        if (v44) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v44);
        }
        if (v416) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v416);
        }
        if (v42) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v42);
        }
        *(void *)v434 = &v430;
        std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100]((void ***)v434);
        double v45 = (void *)v432;
        if ((void)v432) {
          goto LABEL_38;
        }
        goto LABEL_39;
      }
    }
    std::__throw_bad_weak_ptr[abi:nn180100]();
    __break(1u);
LABEL_329:
    abort();
  }
  if (_UIRTreeContainerNode<unsigned long>::isRoot(a2))
  {
    uint64_t v10 = *(uint64_t **)(a2 + 40);
    unint64_t v11 = *(uint64_t **)(a2 + 48);
    goto LABEL_4;
  }
  if (!_UIRTreeContainerNode<_UICollectionViewRTreeElement>::isFull((void *)a2))
  {
    double v61 = *(__n128 **)(a2 + 96);
    unint64_t v60 = *(void *)(a2 + 104);
    if ((unint64_t)v61 >= v60)
    {
      uint64_t v63 = *(void *)(a2 + 88);
      uint64_t v64 = ((uint64_t)v61 - v63) >> 5;
      unint64_t v65 = v64 + 1;
      if ((unint64_t)(v64 + 1) >> 59) {
        goto LABEL_329;
      }
      uint64_t v66 = v60 - v63;
      if (v66 >> 4 > v65) {
        unint64_t v65 = v66 >> 4;
      }
      if ((unint64_t)v66 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v67 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v67 = v65;
      }
      if (v67) {
        unint64_t v67 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v67);
      }
      else {
        uint64_t v68 = 0;
      }
      v244 = (__n128 *)(v67 + 32 * v64);
      unint64_t v245 = v67 + 32 * v68;
      __n128 *v244 = a5;
      v244[1] = a6;
      unint64_t v62 = v244 + 2;
      uint64_t v247 = *(__n128 **)(a2 + 88);
      unint64_t v246 = *(__n128 **)(a2 + 96);
      if (v246 != v247)
      {
        do
        {
          __n128 v248 = v246[-2];
          __n128 v249 = v246[-1];
          v246 -= 2;
          v244[-2] = v248;
          v244[-1] = v249;
          v244 -= 2;
        }
        while (v246 != v247);
        unint64_t v246 = *(__n128 **)(a2 + 88);
      }
      *(void *)(a2 + 88) = v244;
      *(void *)(a2 + 96) = v62;
      *(void *)(a2 + 104) = v245;
      if (v246) {
        operator delete(v246);
      }
    }
    else
    {
      *double v61 = a5;
      v61[1] = a6;
      unint64_t v62 = v61 + 2;
    }
    unint64_t v250 = *(void *)(a2 + 80);
    *(void *)(a2 + 96) = v62;
    unint64_t v251 = *(void *)(a2 + 72);
    if (v251 >= v250)
    {
      uint64_t v255 = *(void *)(a2 + 64);
      unint64_t v256 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v251 - v255) >> 3);
      unint64_t v257 = v256 + 1;
      if (v256 + 1 > 0x666666666666666) {
        goto LABEL_329;
      }
      unint64_t v258 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v250 - v255) >> 3);
      if (2 * v258 > v257) {
        unint64_t v257 = 2 * v258;
      }
      if (v258 >= 0x333333333333333) {
        unint64_t v259 = 0x666666666666666;
      }
      else {
        unint64_t v259 = v257;
      }
      v435 = (unint64_t *)(a2 + 80);
      uint64_t v260 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(v259);
      uint64_t v261 = &v260[40 * v256];
      *(void *)v434 = v260;
      *(void *)&v434[8] = v261;
      *(void *)&v434[24] = &v260[40 * v262];
      *(void *)uint64_t v261 = *a3;
      *(_OWORD *)(v261 + 8) = *(_OWORD *)(a3 + 1);
      uint64_t v263 = a3[3];
      a3[3] = 0;
      *((void *)v261 + 3) = v263;
      uint64_t v264 = a3[4];
      a3[4] = 0;
      *((void *)v261 + 4) = v264;
      *(void *)&v434[16] = v261 + 40;
      std::vector<_UICollectionViewRTreeElement>::__swap_out_circular_buffer((uint64_t *)(a2 + 64), v434);
      unint64_t v254 = *(void *)(a2 + 72);
      std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer((uint64_t)v434);
    }
    else
    {
      *(void *)unint64_t v251 = *a3;
      *(_OWORD *)(v251 + 8) = *(_OWORD *)(a3 + 1);
      uint64_t v252 = a3[3];
      a3[3] = 0;
      *(void *)(v251 + 24) = v252;
      uint64_t v253 = a3[4];
      a3[4] = 0;
      *(void *)(v251 + 32) = v253;
      unint64_t v254 = v251 + 40;
    }
    *(void *)(a2 + 72) = v254;
    _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)v423, a2);
    float64x2_t v265 = vaddq_f64((float64x2_t)a5, (float64x2_t)a6);
    int64x2_t v266 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(vaddq_f64(v423[0], v423[1]), v265), (int8x16_t)vcgeq_f64((float64x2_t)a5, v423[0]));
    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v266, 1), (int8x16_t)v266).u64[0] & 0x8000000000000000) == 0)
    {
      float64x2_t v267 = *(float64x2_t *)(a2 + 112);
      float64x2_t v268 = vaddq_f64(v267, *(float64x2_t *)(a2 + 128));
      float64x2_t v269 = vminnmq_f64(v267, (float64x2_t)a5);
      *(float64x2_t *)(a2 + 112) = v269;
      *(float64x2_t *)(a2 + 128) = vsubq_f64(vmaxnmq_f64(v268, v265), v269);
      double v270 = *(std::__shared_weak_count **)(a2 + 32);
      if (v270)
      {
        double v270 = std::__shared_weak_count::lock(v270);
        double v271 = v270;
        if (v270) {
          double v270 = *(std::__shared_weak_count **)(a2 + 24);
        }
      }
      else
      {
        double v271 = 0;
      }
      _UIRTreeContainerNode<_UICollectionViewRTreeElement>::invalidateBoundingFrameAndNotifyParents((int64x2_t *)v270);
      if (v271) {
        std::__shared_weak_count::__release_shared[abi:nn180100](v271);
      }
    }
    goto LABEL_39;
  }
  v408 = a3;
  *(__n128 *)v434 = a5;
  *(__n128 *)&v434[16] = a6;
  uint64_t v47 = *(void *)(a2 + 64);
  uint64_t v48 = *(void *)(a2 + 72);
  v433 = 0;
  long long v432 = 0uLL;
  uint64_t v50 = v48 - v47;
  BOOL v49 = v50 == 0;
  uint64_t v51 = v50 >> 3;
  unint64_t v52 = 0xCCCCCCCCCCCCCCCDLL * v51;
  if (v49)
  {
    unint64_t v55 = 0;
    CGFloat v69 = 0;
    uint64_t v54 = 0;
    unint64_t v56 = v52 >> 1;
    unint64_t v57 = (unint64_t *)(8 * (v52 >> 1));
  }
  else
  {
    std::vector<unsigned long>::__vallocate[abi:nn180100](&v432, 0xCCCCCCCCCCCCCCCDLL * v51);
    uint64_t v53 = *((void *)&v432 + 1);
    bzero(*((void **)&v432 + 1), 8 * v52);
    uint64_t v54 = (unint64_t *)(v53 + 8 * v52);
    *((void *)&v432 + 1) = v54;
    unint64_t v55 = (unint64_t *)v432;
    unint64_t v56 = v52 >> 1;
    unint64_t v57 = (unint64_t *)(v432 + 8 * (v52 >> 1));
    if ((unint64_t *)v432 == v54)
    {
      unint64_t v55 = v54;
    }
    else
    {
      unint64_t v58 = 0;
      double v59 = (unint64_t *)v432;
      do
        *v59++ = v58++;
      while (v59 != v54);
    }
    CGFloat v69 = v54;
  }
  v409 = a4;
  v410 = a1;
  if (v52 >= 2)
  {
    if (v57 != v69 && v57 != v54)
    {
      float64x2_t v70 = (uint64_t *)v55;
      float64x2_t v71 = v69;
      do
      {
        unint64_t v72 = ((char *)v71 - (char *)v70) >> 3;
        if (v72 < 2) {
          break;
        }
        if (v72 == 3)
        {
          _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(v70, v70 + 1, (uint64_t *)v71 - 1, (float64x2_t *)v434, *(void *)(a2 + 88));
          break;
        }
        if (v72 == 2)
        {
          uint64_t v272 = *(v71 - 1);
          uint64_t v273 = *v70;
          uint64_t v274 = *(void *)(a2 + 88);
          float64x2_t v275 = (float64x2_t *)(v274 + 32 * v272);
          float64x2_t v277 = *v275;
          float64x2_t v276 = v275[1];
          float64x2_t v278 = vaddq_f64(*v275, v276);
          float64x2_t v279 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
          int64x2_t v280 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v278, v279), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v275));
          unint64_t v281 = vandq_s8((int8x16_t)vdupq_laneq_s64(v280, 1), (int8x16_t)v280).u64[0];
          double v282 = 0.0;
          double v283 = 0.0;
          if ((v281 & 0x8000000000000000) == 0)
          {
            float64x2_t v284 = vsubq_f64(vmaxnmq_f64(v278, v279), vminnmq_f64(v277, *(float64x2_t *)v434));
            double v283 = vmulq_laneq_f64(v284, v284, 1).f64[0] / vmuld_lane_f64(v276.f64[0], v276, 1);
          }
          float64x2_t v285 = (float64x2_t *)(v274 + 32 * v273);
          float64x2_t v286 = v285[1];
          float64x2_t v287 = vaddq_f64(*v285, v286);
          int64x2_t v288 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v287, v279), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v285));
          if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v288, 1), (int8x16_t)v288).u64[0] & 0x8000000000000000) == 0)
          {
            float64x2_t v289 = vsubq_f64(vmaxnmq_f64(v287, v279), vminnmq_f64(*v285, *(float64x2_t *)v434));
            double v282 = vmulq_laneq_f64(v289, v289, 1).f64[0] / vmuld_lane_f64(v286.f64[0], v286, 1);
          }
          if (v283 > v282)
          {
            *float64x2_t v70 = v272;
            *(v71 - 1) = v273;
          }
          break;
        }
        if ((char *)v71 - (char *)v70 <= 63)
        {
          for (; v70 != (uint64_t *)(v71 - 1); ++v70)
          {
            float64x2_t v290 = (uint64_t *)v71;
            if (v70 != (uint64_t *)v71)
            {
              v291 = v70 + 1;
              float64x2_t v290 = v70;
              if (v70 + 1 != (uint64_t *)v71)
              {
                uint64_t v292 = *(void *)(a2 + 88);
                float64x2_t v293 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
                float64x2_t v290 = v70;
                do
                {
                  int64x2_t v294 = (float64x2_t *)(v292 + 32 * *v291);
                  float64x2_t v296 = *v294;
                  float64x2_t v295 = v294[1];
                  float64x2_t v297 = vaddq_f64(*v294, v295);
                  int64x2_t v298 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v297, v293), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v294));
                  unint64_t v299 = vandq_s8((int8x16_t)vdupq_laneq_s64(v298, 1), (int8x16_t)v298).u64[0];
                  double v300 = 0.0;
                  double v301 = 0.0;
                  if ((v299 & 0x8000000000000000) == 0)
                  {
                    float64x2_t v302 = vsubq_f64(vmaxnmq_f64(v297, v293), vminnmq_f64(v296, *(float64x2_t *)v434));
                    double v301 = vmulq_laneq_f64(v302, v302, 1).f64[0] / vmuld_lane_f64(v295.f64[0], v295, 1);
                  }
                  v303 = (float64x2_t *)(v292 + 32 * *v290);
                  float64x2_t v304 = v303[1];
                  float64x2_t v305 = vaddq_f64(*v303, v304);
                  int64x2_t v306 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v305, v293), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v303));
                  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v306, 1), (int8x16_t)v306).u64[0] & 0x8000000000000000) == 0)
                  {
                    float64x2_t v307 = vsubq_f64(vmaxnmq_f64(v305, v293), vminnmq_f64(*v303, *(float64x2_t *)v434));
                    double v300 = vmulq_laneq_f64(v307, v307, 1).f64[0] / vmuld_lane_f64(v304.f64[0], v304, 1);
                  }
                  if (v301 > v300) {
                    float64x2_t v290 = v291;
                  }
                  ++v291;
                }
                while (v291 != (uint64_t *)v71);
              }
            }
            if (v70 != v290)
            {
              uint64_t v308 = *v70;
              *float64x2_t v70 = *v290;
              *float64x2_t v290 = v308;
            }
          }
          break;
        }
        float64x2_t v73 = &v70[v72 >> 1];
        int64x2_t v74 = v71 - 1;
        int v75 = _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(v70, v73, (uint64_t *)v71 - 1, (float64x2_t *)v434, *(void *)(a2 + 88));
        uint64_t v76 = *v70;
        uint64_t v77 = *(void *)(a2 + 88);
        float64x2_t v78 = (float64x2_t *)(v77 + 32 * *v70);
        float64x2_t v80 = *v78;
        float64x2_t v79 = v78[1];
        float64x2_t v81 = vaddq_f64(*v78, v79);
        float64x2_t v82 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
        int64x2_t v83 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v81, v82), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v78));
        uint64_t v84 = vandq_s8((int8x16_t)vdupq_laneq_s64(v83, 1), (int8x16_t)v83).u64[0];
        double v85 = 0.0;
        double v86 = 0.0;
        if ((v84 & 0x8000000000000000) == 0)
        {
          float64x2_t v87 = vsubq_f64(vmaxnmq_f64(v81, v82), vminnmq_f64(v80, *(float64x2_t *)v434));
          double v86 = vmulq_laneq_f64(v87, v87, 1).f64[0] / vmuld_lane_f64(v79.f64[0], v79, 1);
        }
        double v88 = (float64x2_t *)(v77 + 32 * *v73);
        float64x2_t v89 = *v88;
        float64x2_t v90 = v88[1];
        float64x2_t v91 = vaddq_f64(*v88, v90);
        int64x2_t v92 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v91, v82), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v88));
        unint64_t v93 = vandq_s8((int8x16_t)vdupq_laneq_s64(v92, 1), (int8x16_t)v92).u64[0];
        if ((v93 & 0x8000000000000000) == 0)
        {
          float64x2_t v94 = vsubq_f64(vmaxnmq_f64(v91, v82), vminnmq_f64(v89, *(float64x2_t *)v434));
          double v85 = vmulq_laneq_f64(v94, v94, 1).f64[0] / vmuld_lane_f64(v90.f64[0], v90, 1);
        }
        if (v86 <= v85)
        {
          double v96 = vmuld_lane_f64(v90.f64[0], v90, 1);
          double v95 = (uint64_t *)(v71 - 1);
          while (--v95 != v70)
          {
            float64x2_t v97 = (float64x2_t *)(v77 + 32 * *v95);
            float64x2_t v99 = *v97;
            float64x2_t v98 = v97[1];
            float64x2_t v100 = vaddq_f64(*v97, v98);
            int64x2_t v101 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v100, v82), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v97));
            unint64_t v102 = vandq_s8((int8x16_t)vdupq_laneq_s64(v101, 1), (int8x16_t)v101).u64[0];
            double v103 = 0.0;
            double v104 = 0.0;
            if ((v102 & 0x8000000000000000) == 0)
            {
              float64x2_t v105 = vsubq_f64(vmaxnmq_f64(v100, v82), vminnmq_f64(v99, *(float64x2_t *)v434));
              double v104 = vmulq_laneq_f64(v105, v105, 1).f64[0] / vmuld_lane_f64(v98.f64[0], v98, 1);
            }
            if ((v93 & 0x8000000000000000) == 0)
            {
              float64x2_t v106 = vsubq_f64(vmaxnmq_f64(v91, v82), vminnmq_f64(v89, *(float64x2_t *)v434));
              double v103 = vmulq_laneq_f64(v106, v106, 1).f64[0] / v96;
            }
            if (v104 > v103)
            {
              *float64x2_t v70 = *v95;
              *double v95 = v76;
              ++v75;
              goto LABEL_81;
            }
          }
          unint64_t v178 = *v74;
          float64x2_t v179 = vsubq_f64(vmaxnmq_f64(v81, v82), vminnmq_f64(v80, *(float64x2_t *)v434));
          double v180 = vmulq_laneq_f64(v179, v179, 1).f64[0];
          double v181 = v180 / vmuld_lane_f64(v79.f64[0], v79, 1);
          if (v84 < 0) {
            double v181 = 0.0;
          }
          unint64_t v182 = (float64x2_t *)(v77 + 32 * v178);
          float64x2_t v183 = v182[1];
          float64x2_t v184 = vaddq_f64(*v182, v183);
          int64x2_t v185 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v184, v82), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v182));
          if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v185, 1), (int8x16_t)v185).u64[0] & 0x8000000000000000) != 0)
          {
            double v187 = 0.0;
          }
          else
          {
            float64x2_t v186 = vsubq_f64(vmaxnmq_f64(v184, v82), vminnmq_f64(*v182, *(float64x2_t *)v434));
            double v187 = vmulq_laneq_f64(v186, v186, 1).f64[0] / vmuld_lane_f64(v183.f64[0], v183, 1);
          }
          float64x2_t v206 = (unint64_t *)(v70 + 1);
          if (v181 <= v187)
          {
            if (v206 == v74) {
              break;
            }
            double v207 = vmuld_lane_f64(v79.f64[0], v79, 1);
            while (1)
            {
              double v208 = 0.0;
              double v209 = 0.0;
              if ((v84 & 0x8000000000000000) == 0) {
                double v209 = v180 / v207;
              }
              unint64_t v210 = *v206;
              float64x2_t v211 = (float64x2_t *)(v77 + 32 * *v206);
              float64x2_t v212 = v211[1];
              float64x2_t v213 = vaddq_f64(*v211, v212);
              int64x2_t v214 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v213, v82), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v211));
              if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v214, 1), (int8x16_t)v214).u64[0] & 0x8000000000000000) == 0)
              {
                float64x2_t v215 = vsubq_f64(vmaxnmq_f64(v213, v82), vminnmq_f64(*v211, *(float64x2_t *)v434));
                double v208 = vmulq_laneq_f64(v215, v215, 1).f64[0] / vmuld_lane_f64(v212.f64[0], v212, 1);
              }
              if (v209 > v208) {
                break;
              }
              if (++v206 == v74) {
                goto LABEL_208;
              }
            }
            *v206++ = v178;
            *int64x2_t v74 = v210;
          }
          if (v206 == v74) {
            break;
          }
          while (1)
          {
            double v216 = (float64x2_t *)(v77 + 32 * *v70);
            float64x2_t v217 = *v216;
            float64x2_t v218 = v216[1];
            float64x2_t v219 = vaddq_f64(*v216, v218);
            float64x2_t v220 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
            int64x2_t v221 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v219, v220), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v216));
            unint64_t v222 = vandq_s8((int8x16_t)vdupq_laneq_s64(v221, 1), (int8x16_t)v221).u64[0];
            double v223 = vmuld_lane_f64(v218.f64[0], v218, 1);
            do
            {
              unint64_t v224 = *v206;
              double v225 = 0.0;
              double v226 = 0.0;
              if ((v222 & 0x8000000000000000) == 0)
              {
                float64x2_t v227 = vsubq_f64(vmaxnmq_f64(v219, v220), vminnmq_f64(v217, *(float64x2_t *)v434));
                double v226 = vmulq_laneq_f64(v227, v227, 1).f64[0] / v223;
              }
              double v228 = (float64x2_t *)(v77 + 32 * v224);
              float64x2_t v229 = v228[1];
              float64x2_t v230 = vaddq_f64(*v228, v229);
              int64x2_t v231 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v230, v220), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v228));
              if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v231, 1), (int8x16_t)v231).u64[0] & 0x8000000000000000) == 0)
              {
                float64x2_t v232 = vsubq_f64(vmaxnmq_f64(v230, v220), vminnmq_f64(*v228, *(float64x2_t *)v434));
                double v225 = vmulq_laneq_f64(v232, v232, 1).f64[0] / vmuld_lane_f64(v229.f64[0], v229, 1);
              }
              ++v206;
            }
            while (v226 <= v225);
            int64x2_t v233 = v206 - 1;
            do
            {
              unint64_t v235 = *--v74;
              unint64_t v234 = v235;
              double v236 = 0.0;
              double v237 = 0.0;
              if ((v222 & 0x8000000000000000) == 0)
              {
                float64x2_t v238 = vsubq_f64(vmaxnmq_f64(v219, v220), vminnmq_f64(v217, *(float64x2_t *)v434));
                double v237 = vmulq_laneq_f64(v238, v238, 1).f64[0] / v223;
              }
              __n128 v239 = (float64x2_t *)(v77 + 32 * v234);
              float64x2_t v240 = v239[1];
              float64x2_t v241 = vaddq_f64(*v239, v240);
              int64x2_t v242 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v241, v220), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v239));
              if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v242, 1), (int8x16_t)v242).u64[0] & 0x8000000000000000) == 0)
              {
                float64x2_t v243 = vsubq_f64(vmaxnmq_f64(v241, v220), vminnmq_f64(*v239, *(float64x2_t *)v434));
                double v236 = vmulq_laneq_f64(v243, v243, 1).f64[0] / vmuld_lane_f64(v240.f64[0], v240, 1);
              }
            }
            while (v237 > v236);
            if (v233 >= v74) {
              break;
            }
            *int64x2_t v233 = v234;
            *int64x2_t v74 = v224;
          }
          float64x2_t v70 = (uint64_t *)(v206 - 1);
          if (v233 > v57) {
            break;
          }
        }
        else
        {
          double v95 = (uint64_t *)(v71 - 1);
LABEL_81:
          float64_t v107 = v70 + 1;
          if (v70 + 1 >= v95)
          {
            int64x2_t v116 = v70 + 1;
            uint64_t i = 1;
          }
          else
          {
            unint64_t v108 = v70 + 1;
            for (uint64_t i = 1; ; ++i)
            {
              double v110 = (float64x2_t *)(v77 + 32 * *v73);
              float64x2_t v111 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
              float64x2_t v112 = *v110;
              float64x2_t v113 = v110[1];
              float64x2_t v114 = vaddq_f64(*v110, v113);
              int64x2_t v115 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v114, v111), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v110));
              int64x2_t v116 = v108;
              unint64_t v117 = vandq_s8((int8x16_t)vdupq_laneq_s64(v115, 1), (int8x16_t)v115).u64[0];
              double v118 = vmuld_lane_f64(v113.f64[0], v113, 1);
              unint64_t v108 = &v107[i];
              for (j = &v70[i]; ; ++j)
              {
                uint64_t v120 = *j;
                float64x2_t v121 = (float64x2_t *)(v77 + 32 * *j);
                float64x2_t v123 = *v121;
                float64x2_t v122 = v121[1];
                float64x2_t v124 = vaddq_f64(*v121, v122);
                int64x2_t v125 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v124, v111), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v121));
                unint64_t v126 = vandq_s8((int8x16_t)vdupq_laneq_s64(v125, 1), (int8x16_t)v125).u64[0];
                double v127 = 0.0;
                double v128 = 0.0;
                if ((v126 & 0x8000000000000000) == 0)
                {
                  float64x2_t v129 = vsubq_f64(vmaxnmq_f64(v124, v111), vminnmq_f64(v123, *(float64x2_t *)v434));
                  double v128 = vmulq_laneq_f64(v129, v129, 1).f64[0] / vmuld_lane_f64(v122.f64[0], v122, 1);
                }
                if ((v117 & 0x8000000000000000) == 0)
                {
                  float64x2_t v130 = vsubq_f64(vmaxnmq_f64(v114, v111), vminnmq_f64(v112, *(float64x2_t *)v434));
                  double v127 = vmulq_laneq_f64(v130, v130, 1).f64[0] / v118;
                }
                if (v128 <= v127) {
                  break;
                }
                int64x2_t v116 = &v70[++i];
                ++v108;
              }
              do
              {
                uint64_t v132 = *--v95;
                uint64_t v131 = v132;
                float64x2_t v133 = (float64x2_t *)(v77 + 32 * v132);
                float64x2_t v135 = *v133;
                float64x2_t v134 = v133[1];
                float64x2_t v136 = vaddq_f64(*v133, v134);
                int64x2_t v137 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v136, v111), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v133));
                unint64_t v138 = vandq_s8((int8x16_t)vdupq_laneq_s64(v137, 1), (int8x16_t)v137).u64[0];
                double v139 = 0.0;
                double v140 = 0.0;
                if ((v138 & 0x8000000000000000) == 0)
                {
                  float64x2_t v141 = vsubq_f64(vmaxnmq_f64(v136, v111), vminnmq_f64(v135, *(float64x2_t *)v434));
                  double v140 = vmulq_laneq_f64(v141, v141, 1).f64[0] / vmuld_lane_f64(v134.f64[0], v134, 1);
                }
                if ((v117 & 0x8000000000000000) == 0)
                {
                  float64x2_t v142 = vsubq_f64(vmaxnmq_f64(v114, v111), vminnmq_f64(v112, *(float64x2_t *)v434));
                  double v139 = vmulq_laneq_f64(v142, v142, 1).f64[0] / v118;
                }
              }
              while (v140 <= v139);
              if (j >= v95) {
                break;
              }
              uint64_t *j = v131;
              *double v95 = v120;
              ++v75;
              if (j == v73) {
                float64x2_t v73 = v95;
              }
            }
          }
          double v143 = &v70[i];
          if (v143 != v73)
          {
            float64x2_t v144 = (float64x2_t *)(v77 + 32 * *v73);
            float64x2_t v146 = *v144;
            float64x2_t v145 = v144[1];
            float64x2_t v147 = vaddq_f64(*v144, v145);
            float64x2_t v148 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
            int64x2_t v149 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v147, v148), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v144));
            unint64_t v150 = vandq_s8((int8x16_t)vdupq_laneq_s64(v149, 1), (int8x16_t)v149).u64[0];
            double v151 = 0.0;
            double v152 = 0.0;
            if ((v150 & 0x8000000000000000) == 0)
            {
              float64x2_t v153 = vsubq_f64(vmaxnmq_f64(v147, v148), vminnmq_f64(v146, *(float64x2_t *)v434));
              double v152 = vmulq_laneq_f64(v153, v153, 1).f64[0] / vmuld_lane_f64(v145.f64[0], v145, 1);
            }
            uint64_t v154 = *v143;
            float64x2_t v155 = (float64x2_t *)(v77 + 32 * *v143);
            float64x2_t v156 = v155[1];
            float64x2_t v157 = vaddq_f64(*v155, v156);
            int64x2_t v158 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v157, v148), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v155));
            if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v158, 1), (int8x16_t)v158).u64[0] & 0x8000000000000000) == 0)
            {
              float64x2_t v159 = vsubq_f64(vmaxnmq_f64(v157, v148), vminnmq_f64(*v155, *(float64x2_t *)v434));
              double v151 = vmulq_laneq_f64(v159, v159, 1).f64[0] / vmuld_lane_f64(v156.f64[0], v156, 1);
            }
            if (v152 > v151)
            {
              *double v143 = *v73;
              *float64x2_t v73 = v154;
              ++v75;
            }
          }
          if (v143 == (uint64_t *)v57) {
            break;
          }
          if (!v75)
          {
            if (v143 <= (uint64_t *)v57)
            {
              unint64_t v188 = (unint64_t *)(v116 + 1);
              if (v116 + 1 == (uint64_t *)v71) {
                break;
              }
              float64x2_t v189 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
              uint64_t v190 = *v116;
              while (1)
              {
                unint64_t v191 = *v188;
                v192 = (float64x2_t *)(v77 + 32 * *v188);
                float64x2_t v194 = *v192;
                float64x2_t v193 = v192[1];
                float64x2_t v195 = vaddq_f64(*v192, v193);
                int64x2_t v196 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v195, v189), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v192));
                unint64_t v197 = vandq_s8((int8x16_t)vdupq_laneq_s64(v196, 1), (int8x16_t)v196).u64[0];
                double v198 = 0.0;
                double v199 = 0.0;
                if ((v197 & 0x8000000000000000) == 0)
                {
                  float64x2_t v200 = vsubq_f64(vmaxnmq_f64(v195, v189), vminnmq_f64(v194, *(float64x2_t *)v434));
                  double v199 = vmulq_laneq_f64(v200, v200, 1).f64[0] / vmuld_lane_f64(v193.f64[0], v193, 1);
                }
                unint64_t v201 = (float64x2_t *)(v77 + 32 * v190);
                float64x2_t v202 = v201[1];
                float64x2_t v203 = vaddq_f64(*v201, v202);
                int64x2_t v204 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v203, v189), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v201));
                if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v204, 1), (int8x16_t)v204).u64[0] & 0x8000000000000000) == 0)
                {
                  float64x2_t v205 = vsubq_f64(vmaxnmq_f64(v203, v189), vminnmq_f64(*v201, *(float64x2_t *)v434));
                  double v198 = vmulq_laneq_f64(v205, v205, 1).f64[0] / vmuld_lane_f64(v202.f64[0], v202, 1);
                }
                if (v199 > v198) {
                  break;
                }
                ++v188;
                uint64_t v190 = v191;
                if (v188 == v71) {
                  goto LABEL_208;
                }
              }
            }
            else
            {
              if (i == 1) {
                break;
              }
              float64x2_t v160 = vaddq_f64(*(float64x2_t *)v434, *(float64x2_t *)&v434[16]);
              uint64_t v161 = *v70;
              uint64_t v162 = 8 * i - 8;
              while (1)
              {
                uint64_t v163 = *v107;
                double v164 = (float64x2_t *)(v77 + 32 * *v107);
                float64x2_t v166 = *v164;
                float64x2_t v165 = v164[1];
                float64x2_t v167 = vaddq_f64(*v164, v165);
                int64x2_t v168 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v167, v160), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v164));
                unint64_t v169 = vandq_s8((int8x16_t)vdupq_laneq_s64(v168, 1), (int8x16_t)v168).u64[0];
                double v170 = 0.0;
                double v171 = 0.0;
                if ((v169 & 0x8000000000000000) == 0)
                {
                  float64x2_t v172 = vsubq_f64(vmaxnmq_f64(v167, v160), vminnmq_f64(v166, *(float64x2_t *)v434));
                  double v171 = vmulq_laneq_f64(v172, v172, 1).f64[0] / vmuld_lane_f64(v165.f64[0], v165, 1);
                }
                double v173 = (float64x2_t *)(v77 + 32 * v161);
                float64x2_t v174 = v173[1];
                float64x2_t v175 = vaddq_f64(*v173, v174);
                int64x2_t v176 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v175, v160), (int8x16_t)vcgeq_f64(*(float64x2_t *)v434, *v173));
                if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v176, 1), (int8x16_t)v176).u64[0] & 0x8000000000000000) == 0)
                {
                  float64x2_t v177 = vsubq_f64(vmaxnmq_f64(v175, v160), vminnmq_f64(*v173, *(float64x2_t *)v434));
                  double v170 = vmulq_laneq_f64(v177, v177, 1).f64[0] / vmuld_lane_f64(v174.f64[0], v174, 1);
                }
                if (v171 > v170) {
                  break;
                }
                ++v107;
                uint64_t v161 = v163;
                v162 -= 8;
                if (!v162) {
                  goto LABEL_208;
                }
              }
            }
          }
          if (v143 <= (uint64_t *)v57) {
            float64x2_t v70 = v143 + 1;
          }
          else {
            float64x2_t v71 = (unint64_t *)v116;
          }
        }
      }
      while (v71 != v57);
    }
LABEL_208:
    std::__introsort<std::_ClassicAlgPolicy,std::greater<void> &,unsigned long *,false>(v55, v57, 126 - 2 * __clz(v56), 1);
    unint64_t v55 = (unint64_t *)v432;
    if (v57 == v54)
    {
      uint64_t v54 = (unint64_t *)*((void *)&v432 + 1);
    }
    else
    {
      uint64_t v309 = *((void *)&v432 + 1) - (void)v69;
      if (*((unint64_t **)&v432 + 1) != v69)
      {
        memmove(v57, v69, *((void *)&v432 + 1) - (void)v69);
        unint64_t v55 = (unint64_t *)v432;
      }
      uint64_t v54 = (unint64_t *)((char *)v57 + v309);
      *((void *)&v432 + 1) = (char *)v57 + v309;
    }
    a1 = v410;
  }
  unint64_t v310 = v54 - v55 + 1;
  int64x2_t v430 = 0uLL;
  unint64_t v431 = 0;
  long long v428 = 0uLL;
  v429[0] = 0;
  _ZNSt3__16vectorIDv4_dNS_9allocatorIS1_EEE7reserveEm((void **)&v430, v310);
  if (v310)
  {
    if (v310 > 0x666666666666666) {
      goto LABEL_328;
    }
    v435 = v429;
    unint64_t v311 = std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(v310);
    int64x2_t v313 = vdupq_n_s64(*((unint64_t *)&v428 + 1));
    *(void *)&long long v428 = (char *)v311 + *((void *)&v428 + 1);
    *((void *)&v428 + 1) += v311;
    *(int64x2_t *)&v434[8] = v313;
    uint64_t v314 = v429[0];
    v429[0] = (char *)v311 + 40 * v312;
    *(void *)&v434[24] = v314;
    *(void *)v434 = v313.i64[0];
    std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer((uint64_t)v434);
  }
  v315 = (uint64_t *)v432;
  v316 = (char *)v430.i64[0];
  v411 = (uint64_t *)*((void *)&v432 + 1);
  if ((void)v432 == *((void *)&v432 + 1))
  {
    long long v318 = (char *)v430.i64[1];
  }
  else
  {
    long long v318 = (char *)v430.i64[1];
    unint64_t v317 = v431;
    do
    {
      uint64_t v319 = *v315;
      int64_t v320 = (_OWORD *)(*(void *)(a2 + 88) + 32 * *v315);
      if ((unint64_t)v318 >= v317)
      {
        uint64_t v322 = (v318 - v316) >> 5;
        unint64_t v323 = v322 + 1;
        if ((unint64_t)(v322 + 1) >> 59)
        {
          unint64_t v431 = v317;
          v430.i64[0] = (uint64_t)v316;
          abort();
        }
        if ((uint64_t)(v317 - (void)v316) >> 4 > v323) {
          unint64_t v323 = (uint64_t)(v317 - (void)v316) >> 4;
        }
        if (v317 - (unint64_t)v316 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v324 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v324 = v323;
        }
        if (v324) {
          unint64_t v324 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v324);
        }
        else {
          uint64_t v325 = 0;
        }
        long long v326 = v320[1];
        uint64_t v327 = (char *)(v324 + 32 * v322);
        *(_OWORD *)uint64_t v327 = *v320;
        *((_OWORD *)v327 + 1) = v326;
        unint64_t v328 = v327;
        while (v318 != v316)
        {
          long long v329 = *((_OWORD *)v318 - 2);
          long long v330 = *((_OWORD *)v318 - 1);
          v318 -= 32;
          *((_OWORD *)v328 - 2) = v329;
          *((_OWORD *)v328 - 1) = v330;
          v328 -= 32;
        }
        unint64_t v317 = v324 + 32 * v325;
        long long v318 = v327 + 32;
        if (v316) {
          operator delete(v316);
        }
        v316 = v328;
      }
      else
      {
        long long v321 = v320[1];
        *(_OWORD *)long long v318 = *v320;
        *((_OWORD *)v318 + 1) = v321;
        v318 += 32;
      }
      uint64_t v331 = *(char **)(a2 + 96);
      int64_t v332 = v331 - (char *)(v320 + 2);
      if (v331 != (char *)(v320 + 2)) {
        memmove(v320, v320 + 2, v331 - (char *)(v320 + 2));
      }
      *(void *)(a2 + 96) = (char *)v320 + v332;
      uint64_t v333 = *(void *)(a2 + 64);
      v334 = (void *)(v333 + 40 * v319);
      uint64_t v335 = *((void *)&v428 + 1);
      if (*((void *)&v428 + 1) >= v429[0])
      {
        unint64_t v340 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)&v428 + 1) - v428) >> 3) + 1;
        if (v340 > 0x666666666666666)
        {
          unint64_t v431 = v317;
          v430.i64[0] = (uint64_t)v316;
          abort();
        }
        if (0x999999999999999ALL * ((uint64_t)(v429[0] - v428) >> 3) > v340) {
          unint64_t v340 = 0x999999999999999ALL * ((uint64_t)(v429[0] - v428) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v429[0] - v428) >> 3) >= 0x333333333333333) {
          unint64_t v341 = 0x666666666666666;
        }
        else {
          unint64_t v341 = v340;
        }
        v435 = v429;
        unint64_t v342 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(v341);
        uint64_t v343 = &v342[8 * ((uint64_t)(*((void *)&v428 + 1) - v428) >> 3)];
        *(void *)v434 = v342;
        *(void *)&v434[8] = v343;
        *(void *)&v434[24] = &v342[40 * v344];
        *(void *)uint64_t v343 = *v334;
        uint64_t v345 = v333 + 40 * v319;
        *(_OWORD *)(v343 + 8) = *(_OWORD *)(v345 + 8);
        uint64_t v346 = *(void *)(v345 + 24);
        *(void *)(v345 + 24) = 0;
        *((void *)v343 + 3) = v346;
        uint64_t v347 = *(void *)(v345 + 32);
        *(void *)(v345 + 32) = 0;
        *((void *)v343 + 4) = v347;
        BOOL v339 = v343 + 40;
        *(void *)&v434[16] = v343 + 40;
        uint64_t v348 = *((void *)&v428 + 1);
        uint64_t v349 = v428;
        uint64_t v350 = *(void *)&v434[8];
        if (*((void *)&v428 + 1) == (void)v428)
        {
          int64x2_t v354 = vdupq_n_s64(*((unint64_t *)&v428 + 1));
          a1 = v410;
        }
        else
        {
          a1 = v410;
          do
          {
            uint64_t v351 = *(void *)(v348 - 40);
            v348 -= 40;
            *(void *)(v350 - 40) = v351;
            v350 -= 40;
            *(_OWORD *)(v350 + 8) = *(_OWORD *)(v348 + 8);
            uint64_t v352 = *(void *)(v348 + 24);
            *(void *)(v348 + 24) = 0;
            *(void *)(v350 + 24) = v352;
            uint64_t v353 = *(void *)(v348 + 32);
            *(void *)(v348 + 32) = 0;
            *(void *)(v350 + 32) = v353;
          }
          while (v348 != v349);
          int64x2_t v354 = (int64x2_t)v428;
          BOOL v339 = *(char **)&v434[16];
        }
        *(void *)&long long v428 = v350;
        *((void *)&v428 + 1) = v339;
        *(int64x2_t *)&v434[8] = v354;
        uint64_t v355 = v429[0];
        v429[0] = *(void *)&v434[24];
        *(void *)&v434[24] = v355;
        *(void *)v434 = v354.i64[0];
        std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer((uint64_t)v434);
      }
      else
      {
        **((void **)&v428 + 1) = *v334;
        uint64_t v336 = v333 + 40 * v319;
        *(_OWORD *)(v335 + 8) = *(_OWORD *)(v336 + 8);
        uint64_t v337 = *(void *)(v336 + 24);
        *(void *)(v336 + 24) = 0;
        *(void *)(v335 + 24) = v337;
        uint64_t v338 = *(void *)(v336 + 32);
        *(void *)(v336 + 32) = 0;
        *(void *)(v335 + 32) = v338;
        BOOL v339 = (char *)(v335 + 40);
      }
      *((void *)&v428 + 1) = v339;
      uint64_t v356 = std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,0>((uint64_t)(v334 + 5), *(void *)(a2 + 72), (uint64_t)v334);
      std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100](a2 + 64, v356);
      ++v315;
    }
    while (v315 != v411);
    v430.i64[1] = (uint64_t)v318;
    unint64_t v431 = v317;
    v430.i64[0] = (uint64_t)v316;
  }
  if (v316 != v318)
  {
    unint64_t v357 = v318 - 32;
    if (v318 - 32 > v316)
    {
      uint64_t v358 = v316 + 32;
      do
      {
        long long v359 = *((_OWORD *)v358 - 2);
        long long v360 = *((_OWORD *)v358 - 1);
        long long v361 = *((_OWORD *)v357 + 1);
        *((_OWORD *)v358 - 2) = *(_OWORD *)v357;
        *((_OWORD *)v358 - 1) = v361;
        *(_OWORD *)unint64_t v357 = v359;
        *((_OWORD *)v357 + 1) = v360;
        v357 -= 32;
        BOOL v362 = v358 >= v357;
        v358 += 32;
      }
      while (!v362);
    }
  }
  unint64_t v363 = v428;
  unint64_t v364 = *((void *)&v428 + 1) - 40;
  if ((void)v428 != *((void *)&v428 + 1) && v364 > (unint64_t)v428)
  {
    do
    {
      uint64_t v366 = *(void *)v363;
      *(_OWORD *)v434 = *(_OWORD *)(v363 + 8);
      uint64_t v367 = *(void *)(v363 + 24);
      uint64_t v368 = *(void *)(v363 + 32);
      *(void *)(v363 + 24) = 0;
      *(void *)(v363 + 32) = 0;
      _UICollectionViewRTreeElement::operator=(v363, v364);
      *(void *)unint64_t v364 = v366;
      *(void *)(v364 + 8) = *(void *)v434;
      *(unsigned char *)(v364 + 16) = v434[8];
      uint64_t v369 = *(void **)(v364 + 24);
      *(void *)(v364 + 24) = v367;

      v370 = *(void **)(v364 + 32);
      *(void *)(v364 + 32) = v368;

      v363 += 40;
      v364 -= 40;
    }
    while (v363 < v364);
  }
  if ((unint64_t)v318 >= v431)
  {
    uint64_t v372 = (v318 - v316) >> 5;
    unint64_t v373 = v372 + 1;
    a4 = v409;
    if ((unint64_t)(v372 + 1) >> 59) {
      goto LABEL_328;
    }
    uint64_t v374 = v431 - (void)v316;
    if ((uint64_t)(v431 - (void)v316) >> 4 > v373) {
      unint64_t v373 = v374 >> 4;
    }
    if ((unint64_t)v374 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v375 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v375 = v373;
    }
    if (v375) {
      unint64_t v375 = (unint64_t)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(v375);
    }
    else {
      uint64_t v376 = 0;
    }
    float64x2_t v377 = (__n128 *)(v375 + 32 * v372);
    *float64x2_t v377 = a5;
    v377[1] = a6;
    v371 = v377 + 2;
    while (v318 != v316)
    {
      __n128 v378 = *((__n128 *)v318 - 2);
      __n128 v379 = *((__n128 *)v318 - 1);
      v318 -= 32;
      v377[-2] = v378;
      v377[-1] = v379;
      v377 -= 2;
    }
    v430.i64[0] = (uint64_t)v377;
    v430.i64[1] = (uint64_t)v371;
    unint64_t v431 = v375 + 32 * v376;
    if (v316) {
      operator delete(v316);
    }
  }
  else
  {
    *(__n128 *)long long v318 = a5;
    *((__n128 *)v318 + 1) = a6;
    v371 = (__n128 *)(v318 + 32);
    a4 = v409;
  }
  v430.i64[1] = (uint64_t)v371;
  uint64_t v380 = *((void *)&v428 + 1);
  if (*((void *)&v428 + 1) < v429[0])
  {
    **((void **)&v428 + 1) = *v408;
    *(_OWORD *)(v380 + 8) = *(_OWORD *)(v408 + 1);
    uint64_t v381 = v408[3];
    v408[3] = 0;
    *(void *)(v380 + 24) = v381;
    uint64_t v382 = v408[4];
    v408[4] = 0;
    *(void *)(v380 + 32) = v382;
    uint64_t v383 = (char *)(v380 + 40);
    goto LABEL_295;
  }
  unint64_t v384 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)&v428 + 1) - v428) >> 3) + 1;
  if (v384 > 0x666666666666666) {
LABEL_328:
  }
    abort();
  if (0x999999999999999ALL * ((uint64_t)(v429[0] - v428) >> 3) > v384) {
    unint64_t v384 = 0x999999999999999ALL * ((uint64_t)(v429[0] - v428) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v429[0] - v428) >> 3) >= 0x333333333333333) {
    unint64_t v385 = 0x666666666666666;
  }
  else {
    unint64_t v385 = v384;
  }
  v435 = v429;
  uint64_t v386 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(v385);
  v387 = &v386[8 * ((uint64_t)(*((void *)&v428 + 1) - v428) >> 3)];
  *(void *)v434 = v386;
  *(void *)&v434[8] = v387;
  *(void *)&v434[24] = &v386[40 * v388];
  *(void *)v387 = *v408;
  *(_OWORD *)(v387 + 8) = *(_OWORD *)(v408 + 1);
  uint64_t v389 = v408[3];
  v408[3] = 0;
  *((void *)v387 + 3) = v389;
  uint64_t v390 = v408[4];
  v408[4] = 0;
  *((void *)v387 + 4) = v390;
  uint64_t v383 = v387 + 40;
  *(void *)&v434[16] = v387 + 40;
  uint64_t v391 = *((void *)&v428 + 1);
  uint64_t v392 = v428;
  uint64_t v393 = *(void *)&v434[8];
  if (*((void *)&v428 + 1) == (void)v428)
  {
    int64x2_t v397 = vdupq_n_s64(*((unint64_t *)&v428 + 1));
  }
  else
  {
    do
    {
      uint64_t v394 = *(void *)(v391 - 40);
      v391 -= 40;
      *(void *)(v393 - 40) = v394;
      v393 -= 40;
      *(_OWORD *)(v393 + 8) = *(_OWORD *)(v391 + 8);
      uint64_t v395 = *(void *)(v391 + 24);
      *(void *)(v391 + 24) = 0;
      *(void *)(v393 + 24) = v395;
      uint64_t v396 = *(void *)(v391 + 32);
      *(void *)(v391 + 32) = 0;
      *(void *)(v393 + 32) = v396;
    }
    while (v391 != v392);
    int64x2_t v397 = (int64x2_t)v428;
    uint64_t v383 = *(char **)&v434[16];
  }
  *(void *)&long long v428 = v393;
  *((void *)&v428 + 1) = v383;
  *(int64x2_t *)&v434[8] = v397;
  uint64_t v398 = v429[0];
  v429[0] = *(void *)&v434[24];
  *(void *)&v434[24] = v398;
  *(void *)v434 = v397.i64[0];
  std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer((uint64_t)v434);
LABEL_295:
  *((void *)&v428 + 1) = v383;
  v399 = *(std::__shared_weak_count **)(a2 + 32);
  if (v399)
  {
    v400 = std::__shared_weak_count::lock(v399);
    if (v400)
    {
      uint64_t v401 = *(void *)(a2 + 24);
      goto LABEL_300;
    }
  }
  else
  {
    v400 = 0;
  }
  uint64_t v401 = 0;
LABEL_300:
  _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeI29_UICollectionViewRTreeElementENS_9allocatorIS3_EEJNS_10shared_ptrIS3_EENS_6vectorIS2_NS4_IS2_EEEENS8_IDv4_dNS4_ISB_EEEEEvEENS6_IT_EERKT0_DpOT1_((uint64_t *)v434, v401, v400, &v428, (long long *)v430.i8);
  if (v400) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v400);
  }
  v402 = *(std::__shared_weak_count **)(a2 + 32);
  if (v402)
  {
    v403 = std::__shared_weak_count::lock(v402);
    if (v403)
    {
      uint64_t v404 = *(void *)(a2 + 24);
      goto LABEL_307;
    }
  }
  else
  {
    v403 = 0;
  }
  uint64_t v404 = 0;
LABEL_307:
  v405 = *(std::__shared_weak_count **)&v434[8];
  v426[0] = *(void *)v434;
  v426[1] = *(void *)&v434[8];
  if (*(void *)&v434[8]) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v434[8] + 8), 1uLL, memory_order_relaxed);
  }
  v406 = (std::__shared_weak_count *)a4[1];
  uint64_t v424 = *a4;
  v425 = v406;
  if (v406) {
    atomic_fetch_add_explicit(&v406->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  _UIRTreeContainerNode<_UICollectionViewRTreeElement>::addContainer(&v427, v404, v426, &v424);
  v407 = (std::__shared_weak_count *)a4[1];
  *(_OWORD *)a4 = v427;
  if (v407) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v407);
  }
  if (v425) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v425);
  }
  if (v405) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v405);
  }
  if (v403) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v403);
  }
  _UIRTreeContainerNode<_UICollectionViewRTreeElement>::invalidateBoundingFrameAndNotifyParents((int64x2_t *)a2);
  if (v405) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v405);
  }
  *(void *)v434 = &v428;
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100]((void ***)v434);
  if (v430.i64[0]) {
    operator delete((void *)v430.i64[0]);
  }
  double v45 = (void *)v432;
  if ((void)v432)
  {
    *((void *)&v432 + 1) = v432;
LABEL_38:
    operator delete(v45);
  }
LABEL_39:
  __n128 result = *(__n128 *)a4;
  *a1 = *(_OWORD *)a4;
  *a4 = 0;
  a4[1] = 0;
  return result;
}

void sub_185421E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  if (v41) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v41);
  }
  _Unwind_Resume(exception_object);
}

uint64_t _UIRTreeContainerNode<unsigned long>::boundingFrame(uint64_t result, uint64_t a2)
{
  uint64_t v2 = (_OWORD *)result;
  float64x2_t v3 = *(float64x2_t *)(a2 + 112);
  float64x2_t v4 = *(float64x2_t *)(a2 + 128);
  int64x2_t v5 = (int64x2_t)vornq_s8(vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f64(v3), (int8x16_t)vcgezq_f64(v3))), vorrq_s8((int8x16_t)vcltzq_f64(v4), (int8x16_t)vcgezq_f64(v4)));
  if ((vorrq_s8((int8x16_t)v5, (int8x16_t)vdupq_laneq_s64(v5, 1)).u64[0] & 0x8000000000000000) != 0)
  {
    double v7 = *(float64x2_t **)(a2 + 88);
    float64x2_t v3 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
    float64x2_t v4 = 0uLL;
    while (v7 != *(float64x2_t **)(a2 + 96))
    {
      float64x2_t v9 = *v7;
      float64x2_t v8 = v7[1];
      v7 += 2;
      float64x2_t v10 = vaddq_f64(v3, v4);
      float64x2_t v3 = vminnmq_f64(v3, v9);
      float64x2_t v4 = vsubq_f64(vmaxnmq_f64(v10, vaddq_f64(v9, v8)), v3);
    }
    unint64_t v11 = *(uint64_t **)(a2 + 40);
    uint64_t v12 = *(uint64_t **)(a2 + 48);
    while (v11 != v12)
    {
      float64x2_t v14 = v4;
      float64x2_t v15 = v3;
      uint64_t v13 = *v11;
      v11 += 2;
      __n128 result = _UIRTreeContainerNode<unsigned long>::boundingFrame(v16, v13);
      float64x2_t v3 = vminnmq_f64(v15, v16[0]);
      float64x2_t v4 = vsubq_f64(vmaxnmq_f64(vaddq_f64(v15, v14), vaddq_f64(v16[0], v16[1])), v3);
    }
    *(float64x2_t *)(a2 + 112) = v3;
    *(float64x2_t *)(a2 + 128) = v4;
  }
  *uint64_t v2 = v3;
  v2[1] = v4;
  return result;
}

uint64_t _UIRTreeContainerNode<unsigned long>::isRoot(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (!v2) {
    return 1;
  }
  float64x2_t v3 = std::__shared_weak_count::lock(v2);
  if (!v3) {
    return 1;
  }
  BOOL v4 = *(void *)(a1 + 24) == 0;
  std::__shared_weak_count::__release_shared[abi:nn180100](v3);
  return v4;
}

void std::__shared_weak_count::__release_shared[abi:nn180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

BOOL _UIRTreeContainerNode<_UICollectionViewRTreeElement>::isFull(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v1 = a1[6];
  if (v1 == v2)
  {
    if (!_UIRTreeContainerNode<unsigned long>::isRoot((uint64_t)a1))
    {
      unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[9] - a1[8]) >> 3);
      return v4 > 0xFF;
    }
    uint64_t v2 = a1[5];
    uint64_t v1 = a1[6];
  }
  unint64_t v4 = (v1 - v2) >> 4;
  return v4 > 0xFF;
}

void _UIRTreeContainerNode<_UICollectionViewRTreeElement>::invalidateBoundingFrameAndNotifyParents(int64x2_t *a1)
{
  a1[8].i64[0] = 0;
  a1[8].i64[1] = 0;
  a1[7] = vdupq_n_s64(0x7FF8000000000000uLL);
  uint64_t v2 = (std::__shared_weak_count *)a1[2].i64[0];
  if (v2)
  {
    float64x2_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = a1[1].i64[1];
      std::__shared_weak_count::__release_shared[abi:nn180100](v3);
      if (v4)
      {
        int64x2_t v5 = (std::__shared_weak_count *)a1[2].i64[0];
        if (v5)
        {
          int64x2_t v5 = std::__shared_weak_count::lock(v5);
          double v6 = v5;
          if (v5) {
            int64x2_t v5 = (std::__shared_weak_count *)a1[1].i64[1];
          }
        }
        else
        {
          double v6 = 0;
        }
        _UIRTreeContainerNode<_UICollectionViewRTreeElement>::invalidateBoundingFrameAndNotifyParents(v5);
        if (v6)
        {
          std::__shared_weak_count::__release_shared[abi:nn180100](v6);
        }
      }
    }
  }
}

void sub_18542223C(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 40)
  {
  }
  *(void *)(a1 + 8) = a2;
}

uint64_t std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      _UICollectionViewRTreeElement::operator=(a3, v5);
      v5 += 40;
      a3 += 40;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t _UICollectionViewRTreeElement::operator=(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  double v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v5;

  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  float64x2_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;

  return a1;
}

void std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      uint64_t v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        uint64_t v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      if (v5)
      {
        std::__shared_weak_count::__release_shared[abi:nn180100](v5);
      }
    }
  }
}

BOOL _UIRTreeContainerNode<unsigned long>::isFull(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1 == v2)
  {
    int isRoot = _UIRTreeContainerNode<unsigned long>::isRoot(a1);
    uint64_t v6 = 72;
    if (isRoot) {
      uint64_t v6 = 48;
    }
    uint64_t v7 = 64;
    if (isRoot) {
      uint64_t v7 = 40;
    }
    char v3 = 3;
    if (isRoot) {
      char v3 = 4;
    }
    uint64_t v1 = *(void *)(a1 + v6);
    uint64_t v2 = *(void *)(a1 + v7);
  }
  else
  {
    char v3 = 4;
  }
  return (unint64_t)((v1 - v2) >> v3) > 0xFF;
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(8 * a2);
}

uint64_t _UIRTreeContainerNode<unsigned long>::~_UIRTreeContainerNode(uint64_t a1)
{
  *(void *)a1 = &unk_1ED0BEA00;
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
  char v3 = *(void **)(a1 + 64);
  if (v3)
  {
    *(void *)(a1 + 72) = v3;
    operator delete(v3);
  }
  uint64_t v7 = (void **)(a1 + 40);
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](&v7);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 32);
  if (v4) {
    std::__shared_weak_count::__release_weak(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    std::__shared_weak_count::__release_weak(v5);
  }
  return a1;
}

void std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:nn180100](v6);
        }
        v4 -= 16;
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__shared_ptr_emplace<_UIRTreeContainerNode<unsigned long>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 32))();
}

void *_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(unint64_t a1)
{
  if (a1 >> 59) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(32 * a1);
}

void _UIRTreeContainerNode<unsigned long>::invalidateBoundingFrameAndNotifyParents(int64x2_t *a1)
{
  a1[8].i64[0] = 0;
  a1[8].i64[1] = 0;
  a1[7] = vdupq_n_s64(0x7FF8000000000000uLL);
  uint64_t v2 = (std::__shared_weak_count *)a1[2].i64[0];
  if (v2)
  {
    char v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      uint64_t v4 = a1[1].i64[1];
      std::__shared_weak_count::__release_shared[abi:nn180100](v3);
      if (v4)
      {
        uint64_t v5 = (std::__shared_weak_count *)a1[2].i64[0];
        if (v5)
        {
          uint64_t v5 = std::__shared_weak_count::lock(v5);
          uint64_t v6 = v5;
          if (v5) {
            uint64_t v5 = (std::__shared_weak_count *)a1[1].i64[1];
          }
        }
        else
        {
          uint64_t v6 = 0;
        }
        _UIRTreeContainerNode<unsigned long>::invalidateBoundingFrameAndNotifyParents(v5);
        if (v6)
        {
          std::__shared_weak_count::__release_shared[abi:nn180100](v6);
        }
      }
    }
  }
}

void sub_1854226F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:nn180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(unint64_t a1)
{
  if (a1 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(40 * a1);
}

uint64_t std::__split_buffer<_UICollectionViewRTreeElement>::~__split_buffer(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__shared_ptr_emplace<_UIRTreeContainerNode<_UICollectionViewRTreeElement>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 32))();
}

uint64_t *std::vector<_UICollectionViewRTreeElement>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 40);
    v2 -= 40;
    *(void *)(v4 - 40) = v5;
    v4 -= 40;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v2 + 8);
    uint64_t v6 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0;
    *(void *)(v4 + 24) = v6;
    uint64_t v7 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = 0;
    *(void *)(v4 + 32) = v7;
  }
  a2[1] = v4;
  uint64_t v8 = *result;
  *__n128 result = v4;
  a2[1] = v8;
  uint64_t v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void std::__shared_ptr_emplace<_UIOrderedRangeIndexerImpl>::__on_zero_shared(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

void _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeI29_UICollectionViewRTreeElementENS_9allocatorIS3_EEJNS_10shared_ptrIS3_EENS_6vectorIS2_NS4_IS2_EEEENS8_IDv4_dNS4_ISB_EEEEEvEENS6_IT_EERKT0_DpOT1_(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3, long long *a4, long long *a5)
{
  uint64_t v10 = (char *)operator new(0xB0uLL);
  unint64_t v11 = v10;
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0;
  *(void *)uint64_t v10 = &unk_1ED0BEA20;
  uint64_t v12 = (uint64_t)(v10 + 32);
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  long long v13 = *a4;
  uint64_t v14 = *((void *)a4 + 2);
  *((void *)a4 + 1) = 0;
  *((void *)a4 + 2) = 0;
  *(void *)a4 = 0;
  long long v15 = *a5;
  uint64_t v16 = *((void *)a5 + 2);
  *((void *)a5 + 1) = 0;
  *((void *)a5 + 2) = 0;
  *(void *)a5 = 0;
  *((void *)v10 + 5) = 0;
  *((void *)v10 + 6) = 0;
  *((void *)v10 + 4) = &unk_1ED0BE9E0;
  *((void *)v10 + 7) = a2;
  *((void *)v10 + 8) = a3;
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  *((_OWORD *)v10 + 6) = v13;
  *((void *)v10 + 9) = 0;
  *((void *)v10 + 10) = 0;
  *((void *)v10 + 11) = 0;
  *((void *)v10 + 14) = v14;
  memset(v17, 0, sizeof(v17));
  *(_OWORD *)(v10 + 120) = v15;
  *((void *)v10 + 17) = v16;
  _UIRTreeContainerNode<_UICollectionViewRTreeElement>::commonInit((int64x2_t *)v10 + 2);
  double v18 = (void **)v17;
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&v18);
  if (a3) {
    std::__shared_weak_count::__release_weak(a3);
  }
  *a1 = v12;
  a1[1] = (uint64_t)v11;
  std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>((uint64_t)a1, (void *)v11 + 5, v12);
}

void sub_185422C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  long long v15 = v12[5].__vftable;
  if (v15)
  {
    v12[5].__shared_owners_ = (uint64_t)v15;
    operator delete(v15);
  }
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&a12);
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](&a12);
  shared_weak_owners = (std::__shared_weak_count *)v12[2].__shared_weak_owners_;
  if (shared_weak_owners) {
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  }
  float64x2_t v17 = (std::__shared_weak_count *)v12[2].__vftable;
  if (v17) {
    std::__shared_weak_count::__release_weak(v17);
  }
  a12 = (void **)&a9;
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&a12);
  if (v13) {
    std::__shared_weak_count::__release_weak(v13);
  }
  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v18);
  _Unwind_Resume(a1);
}

uint64_t _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(uint64_t *a1, uint64_t *a2, uint64_t *a3, float64x2_t *a4, uint64_t a5)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a1;
  uint64_t v7 = (float64x2_t *)(a5 + 32 * *a2);
  float64x2_t v9 = *v7;
  float64x2_t v8 = v7[1];
  float64x2_t v10 = *a4;
  float64x2_t v11 = vaddq_f64(*v7, v8);
  float64x2_t v12 = vaddq_f64(*a4, a4[1]);
  int64x2_t v13 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v11, v12), (int8x16_t)vcgeq_f64(*a4, *v7));
  unint64_t v14 = vandq_s8((int8x16_t)vdupq_laneq_s64(v13, 1), (int8x16_t)v13).u64[0];
  double v15 = 0.0;
  double v16 = 0.0;
  if ((v14 & 0x8000000000000000) == 0)
  {
    float64x2_t v17 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
    double v16 = vmulq_laneq_f64(v17, v17, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
  }
  double v18 = (float64x2_t *)(a5 + 32 * v6);
  float64x2_t v19 = v18[1];
  float64x2_t v20 = vaddq_f64(*v18, v19);
  int64x2_t v21 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v20, v12), (int8x16_t)vcgeq_f64(v10, *v18));
  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v21, 1), (int8x16_t)v21).u64[0] & 0x8000000000000000) == 0)
  {
    float64x2_t v22 = vsubq_f64(vmaxnmq_f64(v20, v12), vminnmq_f64(*v18, v10));
    double v15 = vmulq_laneq_f64(v22, v22, 1).f64[0] / vmuld_lane_f64(v19.f64[0], v19, 1);
  }
  uint64_t v23 = *a3;
  uint64_t v24 = (float64x2_t *)(a5 + 32 * *a3);
  float64x2_t v26 = *v24;
  float64x2_t v25 = v24[1];
  float64x2_t v27 = vaddq_f64(*v24, v25);
  int64x2_t v28 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v27, v12), (int8x16_t)vcgeq_f64(v10, *v24));
  unint64_t v29 = vandq_s8((int8x16_t)vdupq_laneq_s64(v28, 1), (int8x16_t)v28).u64[0];
  if (v16 > v15)
  {
    double v30 = 0.0;
    double v31 = 0.0;
    if ((v29 & 0x8000000000000000) == 0)
    {
      float64x2_t v32 = vsubq_f64(vmaxnmq_f64(v27, v12), vminnmq_f64(v26, v10));
      double v31 = vmulq_laneq_f64(v32, v32, 1).f64[0] / vmuld_lane_f64(v25.f64[0], v25, 1);
    }
    if ((v14 & 0x8000000000000000) == 0)
    {
      float64x2_t v33 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
      double v30 = vmulq_laneq_f64(v33, v33, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
    }
    if (v31 > v30)
    {
      *a1 = v23;
      *a3 = v6;
      return 1;
    }
    *a1 = v5;
    *a2 = v6;
    unint64_t v55 = (float64x2_t *)(a5 + 32 * *a3);
    float64x2_t v57 = *v55;
    float64x2_t v56 = v55[1];
    float64x2_t v58 = *a4;
    float64x2_t v59 = vaddq_f64(*v55, v56);
    float64x2_t v60 = vaddq_f64(*a4, a4[1]);
    int64x2_t v61 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v59, v60), (int8x16_t)vcgeq_f64(*a4, *v55));
    unint64_t v62 = vandq_s8((int8x16_t)vdupq_laneq_s64(v61, 1), (int8x16_t)v61).u64[0];
    double v63 = 0.0;
    double v64 = 0.0;
    if ((v62 & 0x8000000000000000) == 0)
    {
      float64x2_t v65 = vsubq_f64(vmaxnmq_f64(v59, v60), vminnmq_f64(v57, v58));
      double v64 = vmulq_laneq_f64(v65, v65, 1).f64[0] / vmuld_lane_f64(v56.f64[0], v56, 1);
    }
    uint64_t v66 = (float64x2_t *)(a5 + 32 * v6);
    float64x2_t v67 = v66[1];
    float64x2_t v68 = vaddq_f64(*v66, v67);
    int64x2_t v69 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v68, v60), (int8x16_t)vcgeq_f64(v58, *v66));
    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v69, 1), (int8x16_t)v69).u64[0] & 0x8000000000000000) == 0)
    {
      float64x2_t v70 = vsubq_f64(vmaxnmq_f64(v68, v60), vminnmq_f64(*v66, v58));
      double v63 = vmulq_laneq_f64(v70, v70, 1).f64[0] / vmuld_lane_f64(v67.f64[0], v67, 1);
    }
    if (v64 <= v63) {
      return 1;
    }
    *a2 = *a3;
    *a3 = v6;
    return 2;
  }
  double v34 = 0.0;
  double v35 = 0.0;
  if ((v29 & 0x8000000000000000) == 0)
  {
    float64x2_t v36 = vsubq_f64(vmaxnmq_f64(v27, v12), vminnmq_f64(v26, v10));
    double v35 = vmulq_laneq_f64(v36, v36, 1).f64[0] / vmuld_lane_f64(v25.f64[0], v25, 1);
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    float64x2_t v37 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
    double v34 = vmulq_laneq_f64(v37, v37, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
  }
  if (v35 > v34)
  {
    *a2 = v23;
    *a3 = v5;
    uint64_t v38 = *a1;
    uint64_t v39 = (float64x2_t *)(a5 + 32 * *a2);
    float64x2_t v41 = *v39;
    float64x2_t v40 = v39[1];
    float64x2_t v42 = *a4;
    float64x2_t v43 = vaddq_f64(*v39, v40);
    float64x2_t v44 = vaddq_f64(*a4, a4[1]);
    int64x2_t v45 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v43, v44), (int8x16_t)vcgeq_f64(*a4, *v39));
    unint64_t v46 = vandq_s8((int8x16_t)vdupq_laneq_s64(v45, 1), (int8x16_t)v45).u64[0];
    double v47 = 0.0;
    double v48 = 0.0;
    if ((v46 & 0x8000000000000000) == 0)
    {
      float64x2_t v49 = vsubq_f64(vmaxnmq_f64(v43, v44), vminnmq_f64(v41, v42));
      double v48 = vmulq_laneq_f64(v49, v49, 1).f64[0] / vmuld_lane_f64(v40.f64[0], v40, 1);
    }
    uint64_t v50 = (float64x2_t *)(a5 + 32 * v38);
    float64x2_t v51 = v50[1];
    float64x2_t v52 = vaddq_f64(*v50, v51);
    int64x2_t v53 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v52, v44), (int8x16_t)vcgeq_f64(v42, *v50));
    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v53, 1), (int8x16_t)v53).u64[0] & 0x8000000000000000) == 0)
    {
      float64x2_t v54 = vsubq_f64(vmaxnmq_f64(v52, v44), vminnmq_f64(*v50, v42));
      double v47 = vmulq_laneq_f64(v54, v54, 1).f64[0] / vmuld_lane_f64(v51.f64[0], v51, 1);
    }
    if (v48 <= v47) {
      return 1;
    }
    *a1 = *a2;
    *a2 = v38;
    return 2;
  }
  return 0;
}

char *std::vector<unsigned long>::__vallocate[abi:nn180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    abort();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void _ZNSt3__16vectorIDv4_dNS_9allocatorIS1_EEE7reserveEm(void **a1, unint64_t a2)
{
  if (a2 > ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5)
  {
    if (a2 >> 59) {
      abort();
    }
    int64_t v3 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v4 = (char *)_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(a2);
    uint64_t v5 = &v4[v3 & 0xFFFFFFFFFFFFFFE0];
    uint64_t v7 = &v4[32 * v6];
    float64x2_t v9 = (char *)*a1;
    float64x2_t v8 = (char *)a1[1];
    float64x2_t v10 = v5;
    if (v8 != *a1)
    {
      do
      {
        long long v11 = *((_OWORD *)v8 - 2);
        long long v12 = *((_OWORD *)v8 - 1);
        v8 -= 32;
        *((_OWORD *)v10 - 2) = v11;
        *((_OWORD *)v10 - 1) = v12;
        v10 -= 32;
      }
      while (v8 != v9);
      float64x2_t v8 = (char *)*a1;
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

uint64_t IndexPath.section.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_186A1D7CC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v6 = sub_186A1D7AC();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 >= 1) {
    return sub_186A1D7DC();
  }
  __break(1u);
  return result;
}

void _UIGestureRecognizerUpdateObserver(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id UIListContentConfiguration.TextProperties.font.getter()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_font);
  return v1;
}

void UIRectCenteredAboutPointScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  if (a7 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  if (a7 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

uint64_t _UIViewEnumerateLayoutConstraintsAndAdjustForConstantChangeForSelectedAttributes(void *a1, uint64_t a2)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  _OWORD v3[2] = ___UIViewEnumerateLayoutConstraintsAndAdjustForConstantChangeForSelectedAttributes_block_invoke;
  v3[3] = &unk_1E530E698;
  v3[4] = a1;
  void v3[5] = a2;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = ___UIViewEnumerateLayoutConstraintsAndAdjustForSelectedLayoutVariables_block_invoke;
  v4[3] = &unk_1E530E670;
  v4[4] = a1;
  void v4[5] = v3;
  v4[6] = &__block_literal_global_120_2;
  return [a1 _withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:v4];
}

void sub_185427724(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t _calculateVisibleIndicators(void *a1, uint64_t a2, double *a3, double *a4, double a5)
{
  id v9 = a1;
  float64x2_t v10 = [v9 store];
  long long v11 = [v10 objectAtIndex:a2];

  unint64_t v12 = [v9 direction];
  [v9 _indicatorSizeForObject:v11];
  double v14 = v13;
  double v16 = v15;

  if (v12 >= 2) {
    double v17 = v16;
  }
  else {
    double v17 = v14;
  }
  double v18 = *a4;
  if (a3)
  {
    double v19 = fmax(*a3, v17);
    *a3 = v19;
    double v18 = v18 - (v19 + a5);
  }
  double v20 = v17 + a5;
  uint64_t v21 = [v11 endIndex];
  uint64_t v22 = [v11 startIndex];
  int64_t v23 = llround(v18 / v20);
  if (v21 - v22 >= v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = v21 - v22;
  }
  *a4 = *a4 - v20 * (double)v24;

  return v24;
}

id NSDiffableDataSourceSnapshot.indexOfSection(_:)()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  id v2 = objc_msgSend(v1, sel_indexOfSectionIdentifier_, sub_186A1F83C());

  swift_unknownObjectRelease();
  if (v2 == (id)sub_186A1D1CC()) {
    return 0;
  }
  else {
    return v2;
  }
}

void sub_185428740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

void sub_185429C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _isHeightOfTopViewsCoordinatedToMatchViewControllerOffsets(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = _insetCoordinatableContentScrollViewForEdgePotentiallyIgnoringSearch(v3, a2, 1, 0);
  uint64_t isHeightOfTopViewsCoordinatedToMatchContentScrollViewOffsets = _isHeightOfTopViewsCoordinatedToMatchContentScrollViewOffsets(v3, v4);

  return isHeightOfTopViewsCoordinatedToMatchContentScrollViewOffsets;
}

void _UIViewTopDownSubtreeTraversal(uint64_t a1, void *a2, void *a3)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  uint64_t v6 = a3;
  if (!a1) {
    goto LABEL_44;
  }
  double v30 = (void *)[MEMORY[0x1E4F1CBF0] mutableCopy];
  uint64_t v7 = (void *)[&unk_1ED3F1888 mutableCopy];
  double v31 = (void *)[&unk_1ED3F18A0 mutableCopy];
  v34[0] = a1;
  float64x2_t v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:v34 count:1];
  id v8 = 0;
  uint64_t v9 = 0;
  id v29 = v5;
  while (1)
  {
    float64x2_t v10 = [v7 lastObject];
    uint64_t v11 = [v10 unsignedIntegerValue];

    unint64_t v12 = [v31 lastObject];
    unint64_t v13 = [v12 unsignedIntegerValue];

    double v14 = [v32 objectAtIndexedSubscript:v11];
    double v15 = v14;
    if (v9 >= 1)
    {
      if ((v14[12] & 0x8000000) == 0)
      {
        UIViewReportBrokenSuperviewChain(v14, v8, 1);
        v15[12] |= 0x8000000uLL;
      }
      double v16 = [v15 superview];

      if (!v16) {
        UIViewReportBrokenSuperviewChain(v15, v8, 0);
      }
    }
    __int16 v33 = 0;
    (*((void (**)(id, void *, __int16 *, char *))v5 + 2))(v5, v15, &v33, (char *)&v33 + 1);
    if (HIBYTE(v33)) {
      break;
    }
    if ((_BYTE)v33)
    {
      double v17 = 0;
    }
    else
    {
      double v17 = [v15 _allSubviews];
    }
    if ([v17 count])
    {
      id v18 = v17;

      [v30 addObject:v15];
      id v8 = (id)[v30 lastObject];
      uint64_t v19 = v9 + 1;
      [v7 addObject:&unk_1ED3F74E8];
      double v20 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v18, "count"));
      [v31 addObject:v20];

      float64x2_t v32 = v18;
LABEL_14:
      uint64_t v21 = v15;
      goto LABEL_15;
    }
    unint64_t v22 = v11 + 1;
    if (v11 + 1 >= v13)
    {
      if (v9 < 1)
      {
        uint64_t v19 = v9;
        uint64_t v21 = v15;
      }
      else
      {
        uint64_t v19 = v9;
        uint64_t v21 = v15;
        while (v22 == v13)
        {
          if (v6)
          {
            v6[2](v6, v15, (char *)&v33 + 1);
            if (HIBYTE(v33))
            {
              uint64_t v21 = v15;
              goto LABEL_41;
            }
          }
          uint64_t v21 = v8;

          [v30 removeLastObject];
          id v8 = (id)[v30 lastObject];
          [v7 removeLastObject];
          [v31 removeLastObject];
          uint64_t v24 = [v7 lastObject];
          uint64_t v25 = [v24 unsignedIntegerValue];

          float64x2_t v26 = [v31 lastObject];
          unint64_t v13 = [v26 unsignedIntegerValue];

          unint64_t v22 = v25 + 1;
          if (v22 < v13)
          {
            [v7 removeLastObject];
            float64x2_t v27 = [NSNumber numberWithUnsignedInteger:v22];
            [v7 addObject:v27];

            uint64_t v28 = [v8 _allSubviews];

            float64x2_t v32 = (void *)v28;
          }
          if (v6)
          {
            if ((unint64_t)v9 >= 2)
            {
              v6[2](v6, v21, (char *)&v33 + 1);
              if (HIBYTE(v33)) {
                goto LABEL_41;
              }
            }
          }
          uint64_t v19 = v9 - 1;
          if ((unint64_t)v9 < 2) {
            break;
          }
          double v15 = v21;
          --v9;
        }
      }
      if (v6 && !v19) {
        v6[2](v6, v21, (char *)&v33 + 1);
      }
      if (HIBYTE(v33))
      {
LABEL_41:

        double v15 = v21;
        id v5 = v29;
        break;
      }
    }
    else
    {
      [v7 removeLastObject];
      int64_t v23 = [NSNumber numberWithUnsignedInteger:v11 + 1];
      [v7 addObject:v23];

      if (!v6)
      {
        uint64_t v19 = v9;
        goto LABEL_14;
      }
      v6[2](v6, v15, (char *)&v33 + 1);
      uint64_t v21 = v15;
      uint64_t v19 = v9;
      if (HIBYTE(v33)) {
        goto LABEL_41;
      }
    }
LABEL_15:

    uint64_t v9 = v19;
    id v5 = v29;
    if (!v19) {
      goto LABEL_43;
    }
  }

LABEL_43:
LABEL_44:
}

uint64_t _UIBarsGetBottomBarBackgroundTransitionProgressForScrollView(void *a1, void *a2, double *a3)
{
  id v5 = a1;
  id v6 = a2;
  if (qword_1EB25C840 != -1) {
    dispatch_once(&qword_1EB25C840, &__block_literal_global_91);
  }
  if (!byte_1EB25C81A) {
    goto LABEL_7;
  }
  uint64_t v7 = [v6 superview];
  if (!v7 || ([v6 isHidden] & 1) != 0)
  {

    goto LABEL_7;
  }
  if (v5)
  {
    [v5 contentSize];
    double v11 = v10;
    double v13 = v12;
    double v14 = *MEMORY[0x1E4F1DB30];
    double v15 = *(double *)(MEMORY[0x1E4F1DB30] + 8);

    if (v11 == v14 && v13 == v15) {
      goto LABEL_7;
    }
    [v5 _contentBottomForScrollObservation];
    double v18 = v17;
    uint64_t v19 = [v6 superview];
    objc_msgSend(v19, "convertPoint:fromView:", v5, 0.0, v18);
    double v21 = v20;
    [v6 frame];
    double v22 = fmax(fmin(v21 - CGRectGetMinY(v24), 4.0), 0.0);

    double v23 = v22 * -0.25 + 1.0;
  }
  else
  {

    double v23 = 1.0;
  }
  if ([v5 _isTransientScrollView] && v23 > 0.0)
  {
LABEL_7:
    uint64_t v8 = 0;
    goto LABEL_8;
  }
  if (a3) {
    *a3 = v23;
  }
  uint64_t v8 = 1;
LABEL_8:

  return v8;
}

void sub_18542C050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t assignWithCopy for UICellConfigurationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(unsigned char *)(a1 + 15) = *(unsigned char *)(a2 + 15);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v10;
  return a1;
}

void _s10Foundation9IndexPathV5UIKitE3row7sectionACSi_SitcfC_0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255AA8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_186B84140;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a1;
  JUMPOUT(0x18C1005F0);
}

ValueMetadata *type metadata accessor for UITraitPreferredContentSizeCategory()
{
  return &type metadata for UITraitPreferredContentSizeCategory;
}

BOOL _UIAccessibilityFullKeyboardAccessEnabled()
{
  return _AXSFullKeyboardAccessEnabled() != 0;
}

id CreateWidthMinimizingConstraint(void *a1)
{
  id v1 = [a1 constraintEqualToConstant:0.0];
  LODWORD(v2) = 1112014848;
  [v1 setPriority:v2];
  return v1;
}

id _UILayoutItemCreateAndObserveVariableWithValueRestriction(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)MEMORY[0x1E4F5B260];
  id v6 = a1;
  uint64_t v7 = [v5 variableWithDelegate:v6 valueRestriction:a2 shouldBeMinimized:0];
  _UILayoutItemSetUpVariableObservation(v6, v7, a3);

  return v7;
}

void _UILayoutItemSetUpVariableObservation(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v6 && objc_msgSend(v5, "_uili_requiresObservationForVariable:", v6))
  {
    uint64_t v7 = objc_msgSend(v5, "_uili_observableLayoutEngineForBaseFrameVariables:", a3);
    if (_UIViewAutoLayoutShouldAbandonKVO2())
    {
      [v7 startObservingChangesForVariable:v6];
    }
    else if (v7)
    {
      objc_initWeak(&location, v5);
      objc_initWeak(&from, v7);
      uint64_t v8 = [v7 observableForVariable:v6];
      v11[0] = MEMORY[0x1E4F143A8];
      v11[1] = 3221225472;
      v11[2] = ___UILayoutItemSetUpVariableObservation_block_invoke;
      v11[3] = &unk_1E530FC98;
      objc_copyWeak(&v13, &location);
      id v9 = v6;
      id v12 = v9;
      objc_copyWeak(&v14, &from);
      uint64_t v10 = [v8 addObserverBlock:v11];

      objc_msgSend(v5, "_uili_stashLayoutVariableObservation:forVariable:", v10, v9);
      objc_destroyWeak(&v14);

      objc_destroyWeak(&v13);
      objc_destroyWeak(&from);
      objc_destroyWeak(&location);
    }
  }
}

void sub_18542E6F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

uint64_t _UIViewAutoLayoutShouldAbandonKVO2()
{
  if (qword_1EB25A5B8 != -1) {
    dispatch_once(&qword_1EB25A5B8, &__block_literal_global_634);
  }
  return _MergedGlobals_62;
}

void sub_18542F1A0(_Unwind_Exception *a1)
{
}

uint64_t _layoutSizeInfo(uint64_t a1)
{
  double v2 = (void *)MEMORY[0x1E4F1C9E8];
  id v3 = (void *)MEMORY[0x1E4F1C978];
  uint64_t v4 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithCGSize:");
  uint64_t v5 = objc_msgSend(v3, "arrayWithObjects:", v4, objc_msgSend(NSNumber, "numberWithBool:", a1), 0);
  uint64_t v6 = objc_msgSend(MEMORY[0x1E4F1C978], "arrayWithObjects:", @"layoutSize", @"intentionallyCollapsedHeight", 0);
  return [v2 dictionaryWithObjects:v5 forKeys:v6];
}

uint64_t _UILayoutAnchorsDeferTrippingWantsAutolayoutFlagUntilUsed()
{
  if (qword_1EB25A6C8 != -1) {
    dispatch_once(&qword_1EB25A6C8, &__block_literal_global_860);
  }
  return byte_1EB25A5B3;
}

void _UIGestureEnvironmentUpdate(uint64_t a1)
{
  uint64_t v150 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(a1 + 82)) {
    goto LABEL_2;
  }
  *(unsigned char *)(a1 + 82) = 1;
  -[UIGestureEnvironment _runPreUpdateActions](a1);
  if (![*(id *)(a1 + 16) count]) {
    goto LABEL_68;
  }
  double v2 = [*(id *)(a1 + 16) allObjects];
  if (_UIApplicationProcessIsCarousel())
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC60);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      float64x2_t v91 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR))
      {
        int64x2_t v92 = v91;
        *(_DWORD *)float64x2_t v148 = 134217984;
        uint64_t v149 = [v2 count];
        _os_log_impl(&dword_1853B0000, v92, OS_LOG_TYPE_ERROR, "Querying dynamic failure requirements for dirty gestures: %li", v148, 0xCu);
      }
    }
  }
  long long v142 = 0u;
  long long v143 = 0u;
  long long v140 = 0u;
  long long v141 = 0u;
  obuint64_t j = v2;
  id v108 = (id)[obj countByEnumeratingWithState:&v140 objects:v148 count:16];
  if (v108)
  {
    uint64_t v107 = *(void *)v141;
    *(void *)&long long v4 = 138412290;
    long long v93 = v4;
    do
    {
      id v110 = 0;
      do
      {
        if (*(void *)v141 != v107) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = *(void *)(*((void *)&v140 + 1) + 8 * (void)v110);
        if (_UIApplicationProcessIsCarousel())
        {
          unint64_t v6 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC68);
          if (*(unsigned char *)v6)
          {
            uint64_t v38 = *(NSObject **)(v6 + 8);
            if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
            {
              uint64_t v39 = v38;
              float64x2_t v40 = [(id)v5 _briefDescription];
              *(_DWORD *)buf = v93;
              *(void *)&uint8_t buf[4] = v40;
              _os_log_impl(&dword_1853B0000, v39, OS_LOG_TYPE_ERROR, "Querying dynamic failure requirements: beginning gestureRecognizerToQuery: %@", buf, 0xCu);
            }
          }
        }
        if (v5)
        {
          uint64_t v7 = *(void *)(v5 + 8);
          if ((v7 & 0x10000000) != 0)
          {
            if (_UIApplicationProcessIsCarousel())
            {
              unint64_t v33 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC70);
              if (*(unsigned char *)v33)
              {
                double v34 = *(NSObject **)(v33 + 8);
                if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
                {
                  double v35 = v34;
                  float64x2_t v36 = [(id)v5 _briefDescription];
                  *(_DWORD *)buf = v93;
                  *(void *)&uint8_t buf[4] = v36;
                  _os_log_impl(&dword_1853B0000, v35, OS_LOG_TYPE_ERROR, "Early exit from querying dynamic failure requirements: already queried: gestureRecognizerToQuery: %@", buf, 0xCu);
                }
              }
            }
            goto LABEL_60;
          }
          char v8 = *(unsigned char *)(v5 + 16);
          *(void *)(v5 + 8) = v7 | 0x10000000;
          *(unsigned char *)(v5 + 16) = v8;
        }
        uint64_t v9 = objc_msgSend((id)v5, "state", v93);
        if (v5) {
          BOOL v10 = v9 == 5;
        }
        else {
          BOOL v10 = 1;
        }
        if (!v10 && (*(void *)(v5 + 8) & 0x3000000) != 0)
        {
          long long v126 = 0u;
          long long v127 = 0u;
          long long v124 = 0u;
          long long v125 = 0u;
          id v11 = *(id *)(a1 + 40);
          uint64_t v12 = [v11 countByEnumeratingWithState:&v124 objects:v147 count:16];
          if (!v12) {
            goto LABEL_53;
          }
          uint64_t v13 = *(void *)v125;
          while (1)
          {
            uint64_t v14 = 0;
            do
            {
              if (*(void *)v125 != v13) {
                objc_enumerationMutation(v11);
              }
              double v15 = *(void **)(*((void *)&v124 + 1) + 8 * v14);
              if (_UIApplicationProcessIsCarousel())
              {
                unint64_t v16 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC80);
                if (*(unsigned char *)v16)
                {
                  CGRect v24 = *(NSObject **)(v16 + 8);
                  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
                  {
                    loga = v24;
                    uint64_t v25 = [v15 _briefDescription];
                    *(_DWORD *)buf = v93;
                    *(void *)&uint8_t buf[4] = v25;
                    _os_log_impl(&dword_1853B0000, loga, OS_LOG_TYPE_ERROR, "Querying dynamic failure requirements: beginning otherGestureRecognizer: %@", buf, 0xCu);
                  }
                }
              }
              if ((void *)v5 == v15
                || (-[UIGestureEnvironment gestureRecognizer:requiresGestureRecognizerToFail:](a1, v5, (uint64_t)v15) & 1) != 0
                || (-[UIGestureEnvironment gestureRecognizer:requiresGestureRecognizerToFail:](a1, (uint64_t)v15, v5) & 1) != 0
                || ![(id)v5 _affectedByGesture:v15]
                || ([v15 _affectedByGesture:v5] & 1) == 0)
              {
                if (_UIApplicationProcessIsCarousel())
                {
                  unint64_t v19 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC88);
                  if (*(unsigned char *)v19)
                  {
                    float64x2_t v26 = *(NSObject **)(v19 + 8);
                    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
                    {
                      logb = v26;
                      float64x2_t v97 = [(id)v5 _briefDescription];
                      uint64_t v27 = [v15 _briefDescription];
                      *(_DWORD *)buf = 138412546;
                      *(void *)&uint8_t buf[4] = v97;
                      *(_WORD *)&buf[12] = 2112;
                      *(void *)&buf[14] = v27;
                      float64x2_t v94 = (void *)v27;
                      _os_log_impl(&dword_1853B0000, logb, OS_LOG_TYPE_ERROR, "Early exit from querying dynamic failure requirements: already requires failure or can't be affected: gestureRecognizerToQuery: %@; otherGestureRecognizer: %@",
                        buf,
                        0x16u);
                    }
                  }
                }
              }
              else
              {
                if ([(id)v5 _needsDynamicFailureRequirementForGestureRecognizer:v15])
                {
                  unint64_t v17 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC90);
                  if (*(unsigned char *)v17)
                  {
                    uint64_t v28 = *(NSObject **)(v17 + 8);
                    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                    {
                      logc = v28;
                      float64x2_t v98 = [(id)v5 _briefDescription];
                      uint64_t v29 = [v15 _briefDescription];
                      *(_DWORD *)buf = 138412546;
                      *(void *)&uint8_t buf[4] = v98;
                      *(_WORD *)&buf[12] = 2112;
                      *(void *)&buf[14] = v29;
                      double v95 = (void *)v29;
                      _os_log_impl(&dword_1853B0000, logc, OS_LOG_TYPE_ERROR, "Dynamic Failure Requirement: %@ requires %@ to fail", buf, 0x16u);
                    }
                  }
                  double v18 = (void *)v5;
                }
                else
                {
                  if (![(id)v5 _needsDynamicDependentRequirementForGestureRecognizer:v15])goto LABEL_38; {
                  unint64_t v20 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC98);
                  }
                  if (*(unsigned char *)v20)
                  {
                    double v30 = *(NSObject **)(v20 + 8);
                    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
                    {
                      logd = v30;
                      float64x2_t v99 = [v15 _briefDescription];
                      uint64_t v31 = [(id)v5 _briefDescription];
                      *(_DWORD *)buf = 138412546;
                      *(void *)&uint8_t buf[4] = v99;
                      *(_WORD *)&buf[12] = 2112;
                      *(void *)&buf[14] = v31;
                      double v96 = (void *)v31;
                      _os_log_impl(&dword_1853B0000, logd, OS_LOG_TYPE_ERROR, "Dynamic Failure Requirement: %@ requires %@ to fail", buf, 0x16u);
                    }
                  }
                  double v18 = v15;
                  double v15 = (void *)v5;
                }
                double v21 = [*(id *)(a1 + 96) objectForKey:v15];
                double v22 = [*(id *)(a1 + 96) objectForKey:v18];
                id v23 = (id)[*(id *)(a1 + 88) addUniqueEdgeWithLabel:@"dynamicFailureRequirement" sourceNode:v21 targetNode:v22 directed:1 properties:0];
              }
LABEL_38:
              ++v14;
            }
            while (v12 != v14);
            uint64_t v32 = [v11 countByEnumeratingWithState:&v124 objects:v147 count:16];
            uint64_t v12 = v32;
            if (!v32)
            {
LABEL_53:

              goto LABEL_60;
            }
          }
        }
        if (_UIApplicationProcessIsCarousel())
        {
          unint64_t v37 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC78);
          if (*(unsigned char *)v37)
          {
            float64x2_t v41 = *(NSObject **)(v37 + 8);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            {
              float64x2_t v42 = v41;
              float64x2_t v43 = [(id)v5 _briefDescription];
              float64x2_t v44 = _UIGestureRecognizerStateString([(id)v5 state]);
              *(_DWORD *)buf = 138412546;
              *(void *)&uint8_t buf[4] = v43;
              *(_WORD *)&buf[12] = 2112;
              *(void *)&buf[14] = v44;
              _os_log_impl(&dword_1853B0000, v42, OS_LOG_TYPE_ERROR, "Early exit from querying dynamic failure requirements: state or subclass requirements: gestureRecognizerToQuery: %@; state: %@",
                buf,
                0x16u);
            }
          }
        }
LABEL_60:
        id v110 = (char *)v110 + 1;
      }
      while (v110 != v108);
      uint64_t v45 = [obj countByEnumeratingWithState:&v140 objects:v148 count:16];
      id v108 = (id)v45;
    }
    while (v45);
  }

  while (1)
  {
LABEL_68:
    if (objc_msgSend(*(id *)(a1 + 16), "count", v93))
    {
      if (!*(unsigned char *)(a1 + 81)) {
        goto LABEL_76;
      }
      goto LABEL_72;
    }
    if (!*(unsigned char *)(a1 + 81)) {
      break;
    }
LABEL_72:
    *(unsigned char *)(a1 + 81) = 0;
    if ([*(id *)(a1 + 40) count] >= 2)
    {
      if (*(unsigned char *)(a1 + 80))
      {
        [*(id *)(a1 + 40) sortUsingSelector:sel__depthFirstCompare_];
        *(unsigned char *)(a1 + 80) = 0;
      }
      unint64_t v46 = (void *)[objc_alloc(MEMORY[0x1E4F1C978]) initWithArray:*(void *)(a1 + 40)];
      _UIExclusionMatrixPerformExclusion(v46);
    }
LABEL_76:
    double v47 = objc_opt_new();
    while ([*(id *)(a1 + 16) count])
    {
      double v48 = [*(id *)(a1 + 16) allObjects];
      float64x2_t v49 = [v48 sortedArrayUsingSelector:sel__depthFirstCompare_];

      [*(id *)(a1 + 16) removeAllObjects];
      long long v118 = 0u;
      long long v119 = 0u;
      long long v116 = 0u;
      long long v117 = 0u;
      id v50 = v49;
      uint64_t v51 = [v50 countByEnumeratingWithState:&v116 objects:v135 count:16];
      if (v51)
      {
        uint64_t v52 = *(void *)v117;
        do
        {
          uint64_t v53 = 0;
          do
          {
            if (*(void *)v117 != v52) {
              objc_enumerationMutation(v50);
            }
            uint64_t v54 = *(void *)(*((void *)&v116 + 1) + 8 * v53);
            if (v54)
            {
              id WeakRetained = objc_loadWeakRetained((id *)(v54 + 48));

              if (WeakRetained) {
                [v47 addObject:v54];
              }
            }
            -[UIGestureEnvironment _clearGestureNeedsUpdate:](a1, v54);
            if ([(id)v54 state] >= 3) {
              -[UIGestureEnvironment _notifyDependentsGestureRecognizerHasCompleted:](a1, (void *)v54);
            }
            ++v53;
          }
          while (v51 != v53);
          uint64_t v56 = [v50 countByEnumeratingWithState:&v116 objects:v135 count:16];
          uint64_t v51 = v56;
        }
        while (v56);
      }

      -[UIGestureEnvironment _queueGestureRecognizersForResetIfFinished:](a1, v50);
    }
    long long v114 = 0u;
    long long v115 = 0u;
    long long v112 = 0u;
    long long v113 = 0u;
    id v57 = v47;
    uint64_t v58 = [v57 countByEnumeratingWithState:&v112 objects:v134 count:16];
    if (v58)
    {
      uint64_t v59 = *(void *)v113;
      do
      {
        for (uint64_t i = 0; i != v58; ++i)
        {
          if (*(void *)v113 != v59) {
            objc_enumerationMutation(v57);
          }
          -[UIGestureRecognizer _updateGestureForActiveEvents](*(void **)(*((void *)&v112 + 1) + 8 * i));
        }
        uint64_t v58 = [v57 countByEnumeratingWithState:&v112 objects:v134 count:16];
      }
      while (v58);
    }
  }
  if ([*(id *)(a1 + 24) count])
  {
    int64x2_t v61 = [*(id *)(a1 + 24) allObjects];
    [*(id *)(a1 + 24) removeAllObjects];
    id v62 = *(id *)(a1 + 88);
    double v63 = objc_opt_new();
    id v64 = *(id *)(a1 + 32);
    v128[0] = MEMORY[0x1E4F143A8];
    v128[1] = 3221225472;
    float64x2_t v129 = ___UIGestureEnvironmentUpdateGestureGraph_block_invoke;
    float64x2_t v130 = &unk_1E52F0F20;
    uint64_t v131 = a1;
    os_log_t log = (os_log_t)v62;
    os_log_t v132 = log;
    id obja = v64;
    id v133 = obja;
    long long v124 = 0u;
    long long v125 = 0u;
    long long v126 = 0u;
    long long v127 = 0u;
    id v111 = v61;
    uint64_t v65 = [v111 countByEnumeratingWithState:&v124 objects:v147 count:16];
    if (v65)
    {
      uint64_t v66 = *(void *)v125;
      do
      {
        for (uint64_t j = 0; j != v65; ++j)
        {
          if (*(void *)v125 != v66) {
            objc_enumerationMutation(v111);
          }
          float64x2_t v68 = *(void **)(*((void *)&v124 + 1) + 8 * j);
          long long v140 = 0u;
          long long v141 = 0u;
          long long v142 = 0u;
          long long v143 = 0u;
          id v69 = v63;
          uint64_t v70 = [v69 countByEnumeratingWithState:&v140 objects:v148 count:16];
          if (v70)
          {
            uint64_t v71 = *(void *)v141;
            while (2)
            {
              for (uint64_t k = 0; k != v70; ++k)
              {
                if (*(void *)v141 != v71) {
                  objc_enumerationMutation(v69);
                }
                if ([*(id *)(*((void *)&v140 + 1) + 8 * k) containsObject:v68])
                {

                  goto LABEL_117;
                }
              }
              uint64_t v70 = [v69 countByEnumeratingWithState:&v140 objects:v148 count:16];
              if (v70) {
                continue;
              }
              break;
            }
          }

          float64x2_t v73 = _UIGestureEnvironmentSubgraphForGestureRecognizer(a1, v68);
          [v69 addObject:v73];

LABEL_117:
          ;
        }
        uint64_t v65 = [v111 countByEnumeratingWithState:&v124 objects:v147 count:16];
      }
      while (v65);
    }

    long long v145 = 0u;
    long long v146 = 0u;
    memset(buf, 0, sizeof(buf));
    id v109 = v63;
    uint64_t v74 = [v109 countByEnumeratingWithState:buf objects:v148 count:16];
    if (v74)
    {
      uint64_t v75 = **(void **)&buf[16];
      do
      {
        uint64_t v76 = 0;
        do
        {
          if (**(void **)&buf[16] != v75) {
            objc_enumerationMutation(v109);
          }
          uint64_t v77 = *(void **)(*(void *)&buf[8] + 8 * v76);
          long long v120 = 0u;
          long long v121 = 0u;
          long long v122 = 0u;
          long long v123 = 0u;
          id v78 = v77;
          id v79 = (id)[v78 countByEnumeratingWithState:&v120 objects:&v140 count:16];
          if (v79)
          {
            uint64_t v80 = *(void *)v121;
            while (2)
            {
              for (m = 0; m != v79; m = (char *)m + 1)
              {
                if (*(void *)v121 != v80) {
                  objc_enumerationMutation(v78);
                }
                float64x2_t v82 = *(void **)(*((void *)&v120 + 1) + 8 * (void)m);
                if (-[UIGestureRecognizer _isActive]((uint64_t *)v82))
                {
                  id v79 = v82;
                  goto LABEL_134;
                }
              }
              id v79 = (id)[v78 countByEnumeratingWithState:&v120 objects:&v140 count:16];
              if (v79) {
                continue;
              }
              break;
            }

            v129((uint64_t)v128, v78);
            id v79 = 0;
          }
          else
          {
LABEL_134:

            unint64_t v83 = __UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25ACA0);
            if (*(unsigned char *)v83)
            {
              uint64_t v84 = *(NSObject **)(v83 + 8);
              if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
              {
                double v85 = v84;
                double v86 = [v79 debugDescription];
                float64x2_t v87 = [v78 valueForKeyPath:@"_briefDescription"];
                *(_DWORD *)float64x2_t v136 = 138412546;
                int64x2_t v137 = v86;
                __int16 v138 = 2112;
                double v139 = v87;
                _os_log_impl(&dword_1853B0000, v85, OS_LOG_TYPE_ERROR, "subgraph NOT ready for reset \nblocking gesture: %@\ngraph: %@", v136, 0x16u);
              }
            }
          }

          ++v76;
        }
        while (v76 != v74);
        uint64_t v88 = [v109 countByEnumeratingWithState:buf objects:v148 count:16];
        uint64_t v74 = v88;
      }
      while (v88);
    }
  }
  if (*(unsigned char *)__UILogGetCategoryCachedImpl("GestureEnvironment", &qword_1EB25AC58)) {
    _UIGestureEnvironmentLogSubgraphsBlockedFromResetIfNeeded(a1);
  }
  float64x2_t v89 = [(id)UIApp _gestureDelayedEventComponentDispatcher];
  -[UIGestureDelayedEventComponentDispatcher sendDelayedTouches](v89);

  float64x2_t v90 = [(id)UIApp _gestureDelayedEventComponentDispatcher];
  -[UIGestureDelayedEventComponentDispatcher sendDelayedPresses](v90);

LABEL_2:
  *(unsigned char *)(a1 + 82) = 0;
}

void sub_185431F84(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    *(unsigned char *)(v2 + 82) = 0;
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

unint64_t __UILogGetCategoryCachedImpl(unsigned char *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (!*a2)
  {
    unint64_t v2 = __UILogCategoryGetNode(a1, (uint64_t)&g_UILogCategories, (uint64_t (*)(unsigned char *))__UILogCategoryNewNode)- 16;
    atomic_store(v2, a2);
  }
  return v2;
}

uint64_t _UIApplicationProcessIsCarousel()
{
  if (qword_1EB25B660 != -1) {
    dispatch_once(&qword_1EB25B660, &__block_literal_global_1320);
  }
  return byte_1EB25B4F5;
}

unint64_t __UILogCategoryGetNode(unsigned char *__s2, uint64_t a2, uint64_t (*a3)(unsigned char *))
{
  uint64_t v4 = a2;
  int v6 = *__s2;
  if (*__s2)
  {
    uint64_t v7 = 0;
    int v8 = 0;
    LOBYTE(v9) = *__s2;
    do
    {
      int v8 = 257 * v8 + (char)v9;
      int v9 = __s2[++v7];
    }
    while (v9);
    int v10 = 257 * v8;
  }
  else
  {
    LODWORD(v7) = 0;
    int v10 = 0;
  }
  unsigned int v11 = v10 + v7;
  uint64_t v12 = *(void *)(a2 + 8 * (v11 & 0x1F));
  if (v12)
  {
    int v13 = 0;
    unsigned int v14 = v11;
    do
    {
      if (*(_DWORD *)v12 == v11)
      {
        if (!memcmp(*(const void **)(v12 + 264), __s2, v7)) {
          return v12;
        }
        ++v13;
        if (v6)
        {
          uint64_t v7 = 0;
          LOBYTE(v15) = v6;
          int v16 = v13;
          do
          {
            int v16 = 257 * v16 + (char)v15;
            int v15 = __s2[++v7];
          }
          while (v15);
        }
        else
        {
          LODWORD(v7) = 0;
          int v16 = v13;
        }
        unsigned int v11 = 257 * v16 + v7;
        unsigned int v14 = v11;
      }
      else
      {
        v14 >>= 5;
      }
      uint64_t v12 = *(void *)(v12 + 8 * (v14 & 0x1F) + 8);
    }
    while (v12);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&_MergedGlobals_1284);
  int v17 = *__s2;
  if (*__s2)
  {
    uint64_t v18 = 0;
    int v19 = 0;
    LOBYTE(v20) = *__s2;
    do
    {
      int v19 = 257 * v19 + (char)v20;
      int v20 = __s2[++v18];
    }
    while (v20);
    int v21 = 257 * v19;
  }
  else
  {
    uint64_t v18 = 0;
    int v21 = 0;
  }
  uint64_t v22 = (v21 + v18);
  uint64_t v23 = v22 | (v18 << 32);
  uint64_t v24 = v22 & 0x1F;
  uint64_t v25 = *(void *)(v4 + 8 * v24);
  if (v25)
  {
    int v26 = 0;
    LODWORD(v27) = v22;
    do
    {
      if (*(_DWORD *)v25 == v27)
      {
        if (!memcmp(*(const void **)(v25 + 264), __s2, v18))
        {
          double v30 = (unint64_t *)(v4 + 8 * v24);
          goto LABEL_46;
        }
        ++v26;
        if (v17)
        {
          uint64_t v18 = 0;
          LOBYTE(v28) = v17;
          int v29 = v26;
          do
          {
            int v29 = 257 * v29 + (char)v28;
            int v28 = __s2[++v18];
          }
          while (v28);
        }
        else
        {
          uint64_t v18 = 0;
          int v29 = v26;
        }
        uint64_t v27 = (257 * v29 + v18);
        uint64_t v23 = v27 | (v18 << 32);
        LODWORD(v22) = 257 * v29 + v18;
      }
      else
      {
        LODWORD(v22) = v22 >> 5;
      }
      uint64_t v4 = v25 + 8;
      uint64_t v24 = v22 & 0x1F;
      uint64_t v25 = *(void *)(v25 + 8 + 8 * v24);
    }
    while (v25);
  }
  double v30 = (unint64_t *)(v4 + 8 * v24);
  size_t v31 = strlen(__s2);
  size_t v32 = v31;
  if (v31 < 0x2801)
  {
    unint64_t v34 = (g_UILogCategoriesAllocator_1 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    if (v34 < g_UILogCategoriesAllocator_1 || v34 > 10240 - v31)
    {
      float64x2_t v36 = (char *)malloc_type_malloc(0x2800uLL, 0x67DDC7D9uLL);
      unint64_t v34 = 0;
      qword_1EB264A40 = (uint64_t)v36;
    }
    else
    {
      float64x2_t v36 = (char *)qword_1EB264A40;
    }
    g_UILogCategoriesAllocator_1 = v34 + v32;
    unint64_t v33 = &v36[v34];
  }
  else
  {
    unint64_t v33 = (char *)malloc_type_malloc(v31, 0xB2BD9910uLL);
  }
  memcpy(v33, __s2, v32);
  unint64_t v37 = a3(__s2);
  *(void *)unint64_t v37 = v23;
  *(void *)(v37 + 264) = v33;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(_OWORD *)(v37 + 40) = 0u;
  *(_OWORD *)(v37 + 56) = 0u;
  *(_OWORD *)(v37 + 72) = 0u;
  *(_OWORD *)(v37 + 88) = 0u;
  *(_OWORD *)(v37 + 104) = 0u;
  *(_OWORD *)(v37 + 120) = 0u;
  *(_OWORD *)(v37 + 136) = 0u;
  *(_OWORD *)(v37 + 152) = 0u;
  *(_OWORD *)(v37 + 168) = 0u;
  *(_OWORD *)(v37 + 184) = 0u;
  *(_OWORD *)(v37 + 200) = 0u;
  *(_OWORD *)(v37 + 216) = 0u;
  *(_OWORD *)(v37 + 232) = 0u;
  *(_OWORD *)(v37 + 248) = 0u;
  atomic_store(v37, v30);
LABEL_46:
  os_unfair_lock_unlock((os_unfair_lock_t)&_MergedGlobals_1284);
  return *v30;
}

void sub_1854349B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UIGestureEnvironmentLogSubgraphsBlockedFromResetIfNeeded(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = mach_absolute_time();
  if (_UIInternalPreferenceUsesDefault_1((int *)&_MergedGlobals_912, @"LogSubgraphsBlockedFromResetInterval"))double v3 = 60.0; {
  else
  }
    double v3 = *(double *)&qword_1EB257560;
  if (_UIMediaTimeForMachTime(v2 - *(void *)(a1 + 56)) > v3)
  {
    *(void *)(a1 + 56) = mach_absolute_time();
    int v4 = _UIInternalPreferenceUsesDefault_1((int *)&unk_1EB257568, @"GestureBlockedFromResetLogTimeout");
    double v5 = *(double *)&qword_1EB257570;
    if (v4) {
      double v5 = 5.0;
    }
    if (_UIGestureEnvironmentHasBlockedGestureRecognizerSurpassingTimeout(*(void **)(a1 + 48), v2, v5))
    {
      int v6 = _UIGestureEnvironmentSubgraphsBlockedFromResetDescription(a1, 0);
      unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("GestureEnvironment", &_UIGestureEnvironmentLogSubgraphsBlockedFromResetIfNeeded___s_category);
      if (*(unsigned char *)CategoryCachedImpl)
      {
        int v8 = *(NSObject **)(CategoryCachedImpl + 8);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          int v9 = v8;
          int v10 = [v6 description];
          int v11 = 138412290;
          uint64_t v12 = v10;
          _os_log_impl(&dword_1853B0000, v9, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v11, 0xCu);
        }
      }
    }
  }
}

void _UISharedImageDealloc(void *a1)
{
  kedouble y = a1;
  if ([key _isNamed])
  {
    id v1 = [key _primitiveImageAsset];

    if (!v1)
    {
      os_unfair_lock_lock((os_unfair_lock_t)&__tableLock);
      if (__imageTable)
      {
        uint64_t v2 = (id)CFDictionaryGetValue((CFDictionaryRef)__imageTable, key);
        if (v2)
        {
          CFDictionaryRemoveValue((CFMutableDictionaryRef)__nameTable, v2);
          CFDictionaryRemoveValue((CFMutableDictionaryRef)__imageTable, key);
        }
      }
      else
      {
        uint64_t v2 = 0;
      }
      os_unfair_lock_unlock((os_unfair_lock_t)&__tableLock);
    }
  }
}

double UIRectIntegralWithScale(double a1, double a2, double a3, double a4, double a5)
{
  if (CGRectIsNull(*(CGRect *)&a1)) {
    return a1;
  }
  double v8 = a5;
  if (a5 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v8 = *(double *)&AdjustToScale___s_0;
  }
  if (v8 == 1.0)
  {
    double v9 = ceil(a1);
    double v10 = floor(a1);
    if (v9 - a1 >= 0.0001) {
      double v7 = v10;
    }
    else {
      double v7 = v9;
    }
  }
  else
  {
    double v11 = ceil(a1 * v8);
    double v12 = floor(a1 * v8);
    if (v11 - a1 * v8 < 0.0001) {
      double v12 = v11;
    }
    double v7 = v12 / v8;
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v7;
}

BOOL UIButtonTypeIsModernCircleButton(uint64_t a1)
{
  return (unint64_t)(a1 - 118) < 6 || (unint64_t)(a1 - 2) < 4;
}

void sub_185438428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _UIEmitSignpostEvent((int *)va);
  _Unwind_Resume(a1);
}

void UICeilToViewScale(void *a1)
{
  [a1 _currentScreenScale];
  if (v1 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

void sub_185439154(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<ui_size_cache_value>>(unint64_t a1)
{
  if (a1 >= 0x222222222222223) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(120 * a1);
}

void *appearancesNodeInNodeForClassCreateIfNecessary(void *a1, uint64_t a2)
{
  int v4 = (void *)[a1 objectForKey:a2];
  if (!v4)
  {
    int v4 = (void *)[objc_alloc(MEMORY[0x1E4F28E10]) initWithKeyOptions:0 valueOptions:0 capacity:0];
    [a1 setObject:v4 forKey:a2];
  }
  return v4;
}

uint64_t existingAppearancesNodesInNodeForClassAndSuperclasses(uint64_t a1, void *a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3052000000;
  int v15 = __Block_byref_object_copy__106;
  int v16 = __Block_byref_object_dispose__106;
  uint64_t v17 = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  double v8 = __existingAppearancesNodesInNodeForClassAndSuperclasses_block_invoke;
  double v9 = &unk_1E52F13E8;
  uint64_t v10 = a1;
  double v11 = &v12;
  __existingAppearancesNodesInNodeForClassAndSuperclasses_block_invoke((uint64_t)v7, a2);
  uint64_t v3 = [a2 _guideClass];
  if (v3 != [a2 _customizableViewClass])
  {
    id v4 = +[_UIAppearanceCustomizableClassInfo _customizableClassInfoForViewClass:withGuideClass:](_UIAppearanceCustomizableClassInfo, "_customizableClassInfoForViewClass:withGuideClass:", [a2 _customizableViewClass], 0);
    v8((uint64_t)v7, v4);
  }
  uint64_t v5 = v13[5];
  _Block_object_dispose(&v12, 8);
  return v5;
}

void sub_18543B6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t existingAppearancesNodeInNodeForClass(void *a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = [a1 objectForKey:a2];
  if (v4) {
    goto LABEL_6;
  }
  uint64_t v5 = [v2 _guideClass];
  if (v5 == [v2 _customizableViewClass])
  {
    uint64_t v4 = 0;
    goto LABEL_6;
  }
  id v6 = +[_UIAppearanceCustomizableClassInfo _customizableClassInfoForViewClass:withGuideClass:](_UIAppearanceCustomizableClassInfo, "_customizableClassInfoForViewClass:withGuideClass:", [v2 _customizableViewClass], 0);
  double v7 = a1;
  while (1)
  {
    uint64_t v4 = [v7 objectForKey:v6];
LABEL_6:
    uint64_t v8 = [v2 _superClassInfo];
    if (v4) {
      break;
    }
    uint64_t v2 = (void *)v8;
    if (!v8) {
      break;
    }
    double v7 = a1;
    id v6 = v2;
  }
  return v4;
}

uint64_t __existingAppearancesNodesInNodeForClassAndSuperclasses_block_invoke(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = [*(id *)(v3 + 32) objectForKey:v2];
      if (v4)
      {
        uint64_t v5 = v4;
        id v6 = *(void **)(*(void *)(*(void *)(v3 + 40) + 8) + 40);
        if (!v6)
        {
          *(void *)(*(void *)(*(void *)(v3 + 40) + 8) + 40) = [MEMORY[0x1E4F1CA48] array];
          id v6 = *(void **)(*(void *)(*(void *)(v3 + 40) + 8) + 40);
        }
        [v6 insertObject:v5 atIndex:0];
      }
      uint64_t result = [v2 _superClassInfo];
      uint64_t v2 = (void *)result;
    }
    while (result);
  }
  return result;
}

uint64_t applyInvocationsToTarget(void *a1, id object)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id AssociatedObject = objc_getAssociatedObject(object, &_UIAppearanceCustomizedSelectorsAssociationKey);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  obuint64_t j = a1;
  uint64_t result = [a1 countByEnumeratingWithState:&v25 objects:v31 count:16];
  uint64_t v23 = result;
  if (result)
  {
    uint64_t v22 = *(void *)v26;
    uint64_t v18 = *MEMORY[0x1E4F1C3C8];
    id v20 = AssociatedObject;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v26 != v22) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v25 + 1) + 8 * v5);
        if (!AssociatedObject) {
          goto LABEL_11;
        }
        double v7 = (const char *)[*(id *)(*((void *)&v25 + 1) + 8 * v5) selector];
        id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        unint64_t v9 = objc_msgSend((id)objc_msgSend(v6, "methodSignature"), "numberOfArguments");
        if (v9 >= 4)
        {
          unint64_t v10 = v9;
          for (uint64_t i = 3; i != v10; ++i)
          {
            v29[0] = 0;
            [v6 getArgument:v29 atIndex:i];
            objc_msgSend(v8, "addObject:", objc_msgSend(NSNumber, "numberWithInteger:", v29[0]));
          }
        }
        if ((objc_msgSend(AssociatedObject, "containsObject:", TagForSelectorWithAxes(v7, v8)) & 1) == 0)
        {
LABEL_11:
          uint64_t v12 = (void *)[v6 methodSignature];
          uint64_t v13 = (void *)[MEMORY[0x1E4F1CA18] invocationWithMethodSignature:v12];
          uint64_t v24 = [v6 selector];
          objc_msgSend(v13, "setSelector:");
          unint64_t v14 = [v12 numberOfArguments];
          if (v14 >= 3)
          {
            unint64_t v15 = v14;
            uint64_t v16 = 2;
            while (1)
            {
              uint64_t v17 = (const char *)[v12 getArgumentTypeAtIndex:v16];
              if (!strcmp(v17, "@")) {
                goto LABEL_30;
              }
              if (!strcmp(v17, "{CGPoint=dd}") || !strcmp(v17, "{CGSize=dd}") || !strcmp(v17, "{UIOffset=dd}")) {
                break;
              }
              if (!strcmp(v17, "{CGRect={CGPoint=dd}{CGSize=dd}}") || !strcmp(v17, "{UIEdgeInsets=dddd}"))
              {
                memset(v30, 0, sizeof(v30));
                goto LABEL_31;
              }
              if (!strcmp(v17, "d")) {
                goto LABEL_30;
              }
              if (!strcmp(v17, "f"))
              {
LABEL_35:
                LODWORD(v30[0]) = 0;
                goto LABEL_31;
              }
              if (!strcmp(v17, "Q") || !strcmp(v17, "q")) {
                goto LABEL_30;
              }
              if (!strcmp(v17, "I") || !strcmp(v17, "i")) {
                goto LABEL_35;
              }
              if (!strcmp(v17, "B") || !strcmp(v17, "c"))
              {
                LOBYTE(v30[0]) = 0;
                goto LABEL_31;
              }
              if (!strcmp(v17, "#")) {
                goto LABEL_30;
              }
              [MEMORY[0x1E4F1CA00] raise:v18, @"*** Illegal property type, %s in invocation selector, %@", v17, NSStringFromSelector((SEL)objc_msgSend(v6, "selector")) format];
LABEL_32:
              if (v15 == ++v16) {
                goto LABEL_37;
              }
            }
            *((void *)&v30[0] + 1) = 0;
LABEL_30:
            *(void *)&v30[0] = 0;
LABEL_31:
            [v6 getArgument:v30 atIndex:v16];
            [v13 setArgument:v30 atIndex:v16];
            goto LABEL_32;
          }
LABEL_37:
          v29[0] = MEMORY[0x1E4F143A8];
          v29[1] = 3221225472;
          void v29[2] = __workaround10030904InvokeWithTarget_block_invoke;
          v29[3] = &unk_1E52F1410;
          v29[5] = v13;
          v29[6] = v24;
          v29[4] = object;
          +[UIView _performSystemAppearanceModifications:v29];
          id AssociatedObject = v20;
        }
        ++v5;
      }
      while (v5 != v23);
      uint64_t result = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
      uint64_t v23 = result;
    }
    while (result);
  }
  return result;
}

uint64_t _UIAppearanceContainerForUserInterfaceIdiom()
{
  return objc_opt_class();
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  id v2 = objc_msgSend(v1, sel_itemIdentifiersInSectionWithIdentifier_, sub_186A1F83C());

  swift_unknownObjectRelease();
  sub_186A1EB3C();

  uint64_t v3 = sub_186A1F52C();
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
  sub_1853D08C4((uint64_t)a1._rawValue, v1, (SEL *)&selRef_appendSectionsWithIdentifiers_);
}

uint64_t objectdestroy_18Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

double UIRectInset(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a1 + a8;
}

uint64_t sub_18543DED0()
{
  uint64_t v0 = sub_186A1E95C();
  uint64_t v2 = v1;
  if (v0 == sub_186A1E95C() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_186A1F85C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _UIBarsUseDynamicType()
{
  if (qword_1EB25C820 != -1) {
    dispatch_once(&qword_1EB25C820, &__block_literal_global_55);
  }
  return _MergedGlobals_5_2;
}

void UILabelCommonInit(void *a1)
{
  uint64_t v13 = a1;
  if (!_UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_LabelDisableDefaultClipping, @"LabelDisableDefaultClipping"))
  {
    if (!byte_1EB256E6C) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (dyld_program_sdk_at_least()) {
LABEL_5:
  }
    [v13 setClipsToBounds:0];
LABEL_6:
  uint64_t v1 = v13;
  if (qword_1EB25ADE0 != -1)
  {
    dispatch_once(&qword_1EB25ADE0, &__block_literal_global_165_1);
    uint64_t v1 = v13;
  }
  [v1 _setDrawsDebugGlyphPathBoundsClipping:_MergedGlobals_54];
  uint64_t v2 = [MEMORY[0x1E4F28EB8] defaultCenter];
  v13[86] = [v2 _addObserver:v13 selector:sel__accessibilityButtonShapesChangedNotification_ name:@"UIAccessibilityButtonShapesEnabledStatusDidChangeNotification" object:0 options:0];

  uint64_t v3 = [v13 _visualStyle];
  [v3 actionsForInitializationOfLabel:v13];

  uint64_t v4 = [v13 layer];
  [v4 setContentsMultiplyColor:0];
  char v5 = (void *)[(id)objc_opt_class() layerClass];
  int v6 = [v5 instancesRespondToSelector:sel_invalidateContentInsets];
  uint64_t v7 = 0;
  if (v6)
  {
    int v8 = [v5 instancesRespondToSelector:sel__clearContents];
    uint64_t v7 = 0x10000000;
    if (!v8) {
      uint64_t v7 = 0;
    }
  }
  v13[92] = v13[92] & 0xFFFFFFFFEFFFFFFFLL | v7;
  v13[91] = 0x4044000000000000;
  if (dyld_program_sdk_at_least())
  {
    id v9 = objc_alloc_init(MEMORY[0x1E4F5E088]);
    unint64_t v10 = [v13 traitCollection];
    double v11 = -[UITraitCollection _styleEffectAppearanceName](v10);
    [v9 setAppearanceName:v11];

    uint64_t v12 = (void *)v13[82];
    v13[82] = v9;
  }
}

void sub_1854412A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __UIVIEW_IS_EXECUTING_ANIMATION_COMPLETION_BLOCK__(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_18544192C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_185441AD0(char a1)
{
  sub_185441ADC(a1, *(void *)(v1 + 16), *(void (**)(void, uint64_t))(v1 + 24));
}

void sub_185441ADC(char a1, uint64_t a2, void (*a3)(void, uint64_t))
{
  swift_beginAccess();
  int v6 = *(unsigned __int8 **)(a2 + 16);
  if (v6) {
    BOOL v7 = a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    uint64_t v8 = v6[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted];
    id v9 = v6;
    a3(a1 & 1, v8);
  }
}

uint64_t sub_185441B70(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_18544222C(char a1, char a2)
{
  return sub_185922A00(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_185442234(char a1, char a2)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2 & 1);
}

void sub_185442D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_185442FAC()
{
  sub_186A1E95C();
  sub_186A1F9EC();
  sub_186A1E9BC();
  uint64_t v0 = sub_186A1FA4C();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return _AXSEnhanceBackgroundContrastEnabled() != 0;
}

void _UIDataSourceGenerateUpdateMaps(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  BOOL v7 = a6;
  if (!a4)
  {
    uint64_t v162 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v163 = objc_msgSend(NSString, "stringWithUTF8String:", "_UIDataSourceUpdateMaps _UIDataSourceGenerateUpdateMaps(const _UIDataSourceModel, const _UIDataSourceModel, const NSUInteger, const __strong _UIDataSourceUpdateProvider _Nonnull, const _UIDataSourceUpdateProcessingCallbacks, NSString * _Nullable __autoreleasing * _Nullable)");
    [v162 handleFailureInFunction:v163, @"_UIDataSourceBatchUpdateMap.m", 584, @"Invalid parameter not satisfying: %@", @"updateProvider != NULL" file lineNumber description];

    BOOL v7 = a6;
  }
  double v198 = objc_alloc_init(_UIMutableFastIndexSet);
  double v170 = v7;
  uint64_t v8 = objc_alloc_init(_UIMutableFastIndexSet);
  id v9 = (const void *)*((void *)a1 + 1);
  uint64_t v215 = *(void *)a1;
  double v216 = _Block_copy(v9);
  float64x2_t v217 = _Block_copy(*((const void **)a1 + 2));
  unint64_t v11 = *(void *)a2;
  unint64_t v10 = (const void *)*((void *)a2 + 1);
  v214[0] = *(void *)a2;
  uint64_t v12 = (uint64_t (**)(void *, void))_Block_copy(v10);
  v214[1] = v12;
  double v207 = (unsigned int (**)(void *, void))_Block_copy(*((const void **)a2 + 2));
  v214[2] = v207;
  double v199 = v217;
  unint64_t v201 = v216;
  if (!a4)
  {
    double v164 = [MEMORY[0x1E4F28B00] currentHandler];
    float64x2_t v165 = objc_msgSend(NSString, "stringWithUTF8String:", "void _computeGlobalIndexesOfItemUpdates(const _UIDataSourceModel, const _UIDataSourceModel, const NSUInteger, const __strong _UIDataSourceUpdateProvider, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, NSString *__autoreleasing *)");
    [v164 handleFailureInFunction:v165, @"_UIDataSourceBatchUpdateMap.m", 106, @"Invalid parameter not satisfying: %@", @"updateProvider != NULL" file lineNumber description];
  }
  if (v198)
  {
    if (v8) {
      goto LABEL_7;
    }
  }
  else
  {
    float64x2_t v166 = [MEMORY[0x1E4F28B00] currentHandler];
    float64x2_t v167 = objc_msgSend(NSString, "stringWithUTF8String:", "void _computeGlobalIndexesOfItemUpdates(const _UIDataSourceModel, const _UIDataSourceModel, const NSUInteger, const __strong _UIDataSourceUpdateProvider, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, NSString *__autoreleasing *)");
    [v166 handleFailureInFunction:v167, @"_UIDataSourceBatchUpdateMap.m", 107, @"Invalid parameter not satisfying: %@", @"deleteItemUpdatesIncludingMoves != nil" file lineNumber description];

    if (v8) {
      goto LABEL_7;
    }
  }
  int64x2_t v168 = [MEMORY[0x1E4F28B00] currentHandler];
  unint64_t v169 = objc_msgSend(NSString, "stringWithUTF8String:", "void _computeGlobalIndexesOfItemUpdates(const _UIDataSourceModel, const _UIDataSourceModel, const NSUInteger, const __strong _UIDataSourceUpdateProvider, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, NSString *__autoreleasing *)");
  [v168 handleFailureInFunction:v169, @"_UIDataSourceBatchUpdateMap.m", 108, @"Invalid parameter not satisfying: %@", @"insertItemUpdatesIncludingMoves != nil" file lineNumber description];

LABEL_7:
  float64x2_t v193 = (uint16x8_t *)v8;
  if (a3)
  {
    id v13 = 0;
    uint64_t v14 = 0;
    while (1)
    {
      long long aBlock = 0u;
      long long v223 = 0u;
      (*(void (**)(long long *__return_ptr))(a4 + 16))(&aBlock);
      if (!BYTE8(v223)) {
        break;
      }
LABEL_25:
      if (a3 == ++v14) {
        goto LABEL_43;
      }
    }
    long long v218 = 0uLL;
    *(void *)&long long v219 = 0;
    if ((void)aBlock == 2)
    {
      unint64_t v15 = v214;
    }
    else
    {
      if ((aBlock & 0xFFFFFFFFFFFFFFFDLL) != 1) {
        goto LABEL_24;
      }
      unint64_t v15 = &v215;
    }
    __copy_assignment_8_8_t0w8_sb8_sb16(&v218, (uint64_t)v15);
    uint64_t v16 = DWORD2(aBlock);
    uint64_t v17 = v218;
    if (DWORD2(aBlock) >= v218)
    {
      if (v13) {
        goto LABEL_24;
      }
      double v30 = NSString;
      size_t v31 = _UIDataSourceUpdateActionDescription(aBlock);
      uint64_t v32 = [v30 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu), but there are only %lu sections.", v31, v16, HIDWORD(aBlock), v17];
    }
    else
    {
      int v18 = (*(uint64_t (**)(void, void))(*((void *)&v218 + 1) + 16))(*((void *)&v218 + 1), DWORD2(aBlock));
      unsigned int v20 = HIDWORD(aBlock);
      unint64_t v21 = (HIDWORD(aBlock) + v18);
      uint64_t v22 = DWORD1(v218);
      if (v21 >= DWORD1(v218))
      {
        uint64_t v187 = v219;
        if (v20 < (*(unsigned int (**)(void, uint64_t))(v219 + 16))(v219, v16))
        {
          if (!v13)
          {
            unint64_t v33 = NSString;
            unint64_t v34 = _UIDataSourceUpdateActionDescription(aBlock);
            id v13 = [v33 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu) (global item index %lu), but there are only %lu total items.", v34, v16, HIDWORD(aBlock), v21, v22];
          }
          goto LABEL_24;
        }
        if (v13) {
          goto LABEL_24;
        }
        double v35 = NSString;
        size_t v31 = _UIDataSourceUpdateActionDescription(aBlock);
        uint64_t v32 = [v35 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu), but there are only %lu items in the section.", v31, v16, HIDWORD(aBlock), (*(unsigned int (**)(uint64_t, uint64_t))(v187 + 16))(v187, v16)];
      }
      else
      {
        uint64_t v23 = (uint64_t)v198;
        if ((void)aBlock == 1)
        {
LABEL_20:
          [(_UIMutableFastIndexSet *)v23 addIndex:v19];
          goto LABEL_24;
        }
        if ((void)aBlock != 3)
        {
          if ((void)aBlock == 2)
          {
            uint64_t v23 = (uint64_t)v8;
            goto LABEL_20;
          }
LABEL_24:

          goto LABEL_25;
        }
        uint64_t v24 = v223;
        if (v223 >= v11)
        {
          if (!v13)
          {
            id v13 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu), but there are only %lu sections.", @"move", v223, DWORD1(v223), v11];
          }
          goto LABEL_24;
        }
        int v25 = v12[2](v12, v223);
        unsigned int v27 = DWORD1(v223);
        unint64_t v28 = (DWORD1(v223) + v25);
        if (v28 < HIDWORD(v11))
        {
          [(_UIMutableFastIndexSet *)(uint64_t)v198 addIndex:v26];
          [(_UIMutableFastIndexSet *)(uint64_t)v8 addIndex:v29];
          goto LABEL_24;
        }
        if (v27 >= v207[2](v207, v24))
        {
          if (v13) {
            goto LABEL_24;
          }
          unint64_t v37 = NSString;
          size_t v31 = _UIDataSourceUpdateActionDescription(aBlock);
          uint64_t v32 = [v37 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu), but there are only %lu items in the section.", v31, v24, DWORD1(v223), v207[2](v207, v24)];
        }
        else
        {
          if (v13) {
            goto LABEL_24;
          }
          float64x2_t v36 = NSString;
          size_t v31 = _UIDataSourceUpdateActionDescription(aBlock);
          uint64_t v32 = [v36 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu) (global item index %lu), but there are only %lu total items.", v31, v24, DWORD1(v223), v28, HIDWORD(v11)];
        }
      }
    }
    id v13 = v32;

    goto LABEL_24;
  }
  id v13 = 0;
LABEL_43:

  id v38 = v13;
  uint64_t v39 = *a1;
  MapWithCapacitdouble y = _allocateMapWithCapacity(*a1);
  float64x2_t v41 = v8;
  if (v39)
  {
    for (uint64_t i = 0; i != v39; ++i)
      MapWithCapacity[i] = i;
  }
  uint64_t v173 = (uint64_t)MapWithCapacity;
  uint64_t v43 = a1[1];
  float64x2_t v44 = _allocateMapWithCapacity(a1[1]);
  if (v43)
  {
    for (uint64_t j = 0; j != v43; ++j)
      v44[j] = j;
  }
  uint64_t v172 = (uint64_t)v44;
  uint64_t v46 = *a1;
  __b = _allocateMapWithCapacity(*a1);
  if (v46) {
    memset(__b, 255, 4 * v46);
  }
  uint64_t v47 = a1[1];
  float64x2_t v189 = _allocateMapWithCapacity(a1[1]);
  if (v47) {
    memset(v189, 255, 4 * v47);
  }
  double v180 = objc_alloc_init(_UIMutableFastIndexSet);
  double v48 = objc_alloc_init(_UIMutableFastIndexSet);
  float64x2_t v202 = objc_alloc_init(_UIMutableFastIndexSet);
  float64x2_t v200 = objc_alloc_init(_UIMutableFastIndexSet);
  float64x2_t v179 = (uint16x8_t *)v48;
  if (a3)
  {
    uint64_t v49 = 0;
    while (1)
    {
      long long aBlock = 0u;
      long long v223 = 0u;
      (*(void (**)(long long *__return_ptr))(a4 + 16))(&aBlock);
      long long v218 = 0uLL;
      *(void *)&long long v219 = 0;
      uint64_t v50 = (uint64_t)a2;
      if ((void)aBlock == 2) {
        break;
      }
      uint64_t v50 = (uint64_t)a1;
      if ((aBlock & 0xFFFFFFFFFFFFFFFDLL) == 1) {
        break;
      }
      uint64_t v71 = 0;
      unint64_t v72 = 0;
LABEL_165:

      if (++v49 == a3) {
        goto LABEL_181;
      }
    }
    uint64_t v203 = v49;
    __copy_assignment_8_8_t0w8_sb8_sb16(&v218, v50);
    if (BYTE8(v223))
    {
      unsigned int v52 = *a1;
      uint64_t v53 = *a2;
      uint64_t v54 = aBlock;
      unint64_t v55 = DWORD2(aBlock);
      unint64_t v56 = v223;
      if (!__b)
      {
        float64x2_t v106 = [MEMORY[0x1E4F28B00] currentHandler];
        uint64_t v107 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v106 handleFailureInFunction:v107, @"_UIDataSourceBatchUpdateMap.m", 223, @"Invalid parameter not satisfying: %@", @"sectionMoveSourceToDestMap != NULL" file lineNumber description];
      }
      if (!v180)
      {
        id v108 = [MEMORY[0x1E4F28B00] currentHandler];
        id v109 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v108 handleFailureInFunction:v109, @"_UIDataSourceBatchUpdateMap.m", 224, @"Invalid parameter not satisfying: %@", @"deletedSectionsIncludingMoves != nil" file lineNumber description];
      }
      if (!v179)
      {
        id v110 = [MEMORY[0x1E4F28B00] currentHandler];
        id v111 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v110 handleFailureInFunction:v111, @"_UIDataSourceBatchUpdateMap.m", 225, @"Invalid parameter not satisfying: %@", @"insertedSectionsIncludingMoves != nil" file lineNumber description];
      }
      if (!a5)
      {
        long long v112 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v113 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v112 handleFailureInFunction:v113, @"_UIDataSourceBatchUpdateMap.m", 226, @"Invalid parameter not satisfying: %@", @"callbacksPtr != NULL" file lineNumber description];
      }
      if (v54 == 2) {
        uint64_t v57 = v53;
      }
      else {
        uint64_t v57 = v52;
      }
      if (v55 >= v57)
      {
        id v58 = v38;
        if (!v38)
        {
          long long v114 = NSString;
          long long v115 = _UIDataSourceUpdateActionDescription(v54);
          id v58 = [v114 stringWithFormat:@"Invalid batch updates detected: attempt to %@ section %lu, but there are only %lu sections.", v115, v55, v57];
        }
      }
      else if (v54 == 3)
      {
        if (v56 >= v53)
        {
          id v58 = v38;
          if (!v38)
          {
            id v58 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ to destination section %lu, but there are only %lu sections.", @"move", v56, v53];
          }
        }
        else
        {
          [(_UIMutableFastIndexSet *)(uint64_t)v180 addIndex:v51];
          [(_UIMutableFastIndexSet *)(uint64_t)v179 addIndex:v73];
          *((_DWORD *)__b + v55) = v56;
          uint64_t v74 = a5[2];
          id v58 = v38;
          if (v74)
          {
            (*(void (**)(uint64_t, uint64_t, unint64_t, unint64_t))(v74 + 16))(v74, v203, v55, v56);
            id v58 = v38;
          }
        }
      }
      else
      {
        if (v54 == 2)
        {
          [(_UIMutableFastIndexSet *)(uint64_t)v179 addIndex:v51];
          uint64_t v59 = a5[1];
        }
        else
        {
          id v58 = v38;
          if (v54 != 1) {
            goto LABEL_96;
          }
          [(_UIMutableFastIndexSet *)(uint64_t)v180 addIndex:v51];
          uint64_t v59 = *a5;
        }
        id v58 = v38;
        if (v59)
        {
          (*(void (**)(uint64_t, uint64_t, unint64_t))(v59 + 16))(v59, v203, v55);
          id v58 = v38;
        }
      }
LABEL_96:
      id v75 = v58;

      unint64_t v76 = v218;
      unint64_t v191 = (uint64_t (**)(void *, void))_Block_copy(*((const void **)&v218 + 1));
      uint64_t v77 = (uint64_t (**)(void *, void))_Block_copy((const void *)v219);
      unint64_t v186 = *(void *)a2;
      unint64_t v188 = v77;
      unint64_t v197 = (uint64_t (**)(void *, void))_Block_copy(*((const void **)a2 + 1));
      id v78 = (unsigned int (**)(void *, void))_Block_copy(*((const void **)a2 + 2));
      uint64_t v79 = aBlock;
      uint64_t v80 = DWORD2(aBlock);
      uint64_t v182 = v223;
      uint64_t v49 = v203;
      float64x2_t v183 = v78;
      if (!v189)
      {
        long long v116 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v117 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v116 handleFailureInFunction:v117, @"_UIDataSourceBatchUpdateMap.m", 287, @"Invalid parameter not satisfying: %@", @"itemMoveSourceToDestMap != NULL" file lineNumber description];
      }
      if (!v202)
      {
        long long v118 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v119 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v118 handleFailureInFunction:v119, @"_UIDataSourceBatchUpdateMap.m", 288, @"Invalid parameter not satisfying: %@", @"deletedItemsIncludingMoves != nil" file lineNumber description];
      }
      if (!v200)
      {
        long long v120 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v121 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v120 handleFailureInFunction:v121, @"_UIDataSourceBatchUpdateMap.m", 289, @"Invalid parameter not satisfying: %@", @"insertedItemsIncludingMoves != nil" file lineNumber description];
      }
      if (v198)
      {
        if (v41)
        {
LABEL_104:
          if (!a5)
          {
            long long v126 = [MEMORY[0x1E4F28B00] currentHandler];
            long long v127 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
            [v126 handleFailureInFunction:v127, @"_UIDataSourceBatchUpdateMap.m", 292, @"Invalid parameter not satisfying: %@", @"callbacksPtr != NULL" file lineNumber description];
          }
          if (v80 < v76)
          {
            unsigned int v81 = v188[2](v188, v80);
            uint64_t v174 = v80;
            int v185 = v191[2](v191, v80);
            if (v81)
            {
              uint64_t v83 = 0;
              int v84 = 0;
              int v85 = 0;
              id v175 = v75;
              id v176 = v75;
              unint64_t v205 = v81;
              double v208 = (void *)HIDWORD(v76);
              uint64_t v86 = v182;
              int v87 = v185;
              while (1)
              {
                unint64_t v88 = (v87 + v83);
                if (v88 >= v208)
                {
                  if (!v176)
                  {
                    double v96 = NSString;
                    _UIDataSourceUpdateActionDescription(v79);
                    float64x2_t v97 = (__CFString *)objc_claimAutoreleasedReturnValue();
                    float64x2_t v98 = _UIDataSourceUpdateActionDescription(v79);
                    id v176 = [v96 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu) (global item index %lu) as part of an update to %@ section %lu, but there are only %lu total items.", v97, v174, v83, (v87 + v83), v98, v174, v208];

LABEL_130:
                  }
                }
                else
                {
                  switch(v79)
                  {
                    case 3:
                      if (!-[_UIFastIndexSet containsIndex:]((uint16x8_t *)v198, (v87 + v83)))
                      {
                        if (v86 >= v186)
                        {
                          if (v176) {
                            break;
                          }
                          float64x2_t v97 = @"move";
                          id v176 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination section %lu as part of a section %@ update, but there are only %lu sections.", @"move", v86, @"move", v186];
                        }
                        else
                        {
                          int v90 = v197[2](v197, v86);
                          uint64_t v181 = (v84 - v85 + v83);
                          unint64_t v91 = (v90 + v181);
                          unint64_t v92 = v91;
                          if (-[_UIFastIndexSet containsIndex:](v193, v91))
                          {
                            do
                              unint64_t v91 = (++v84 + v90 + v83 - v85);
                            while ((-[_UIFastIndexSet containsIndex:](v193, v91) & 1) != 0);
                            unint64_t v92 = (v90 + v83 - v85 + v84);
                            uint64_t v86 = v182;
                          }
                          int v87 = v185;
                          if (v92 < HIDWORD(v186))
                          {
                            [(_UIMutableFastIndexSet *)(uint64_t)v202 addIndex:v93];
                            [(_UIMutableFastIndexSet *)(uint64_t)v200 addIndex:v94];
                            *((_DWORD *)v189 + v88) = v92;
                            uint64_t v95 = a5[5];
                            if (v95) {
                              (*(void (**)(uint64_t, uint64_t, unint64_t, unint64_t))(v95 + 16))(v95, v203, v88, v92);
                            }
                            break;
                          }
                          if (v181 >= v183[2](v183, v86))
                          {
                            if (v176) {
                              break;
                            }
                            float64x2_t v99 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu) as part of a section %@ update, but there are only %lu items in the section.", @"move", v86, v181, @"move", v183[2](v183, v86)];
                          }
                          else
                          {
                            if (v176) {
                              break;
                            }
                            float64x2_t v99 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu) (global item index %lu) as part of a section %@ update, but there are only %lu total items.", @"move", v86, v181, v91, @"move", HIDWORD(v186)];
                          }
                          id v176 = v99;
                          float64x2_t v97 = @"move";
                        }

                        goto LABEL_130;
                      }
                      ++v85;
                      break;
                    case 2:
                      [(_UIMutableFastIndexSet *)(uint64_t)v200 addIndex:v82];
                      uint64_t v89 = a5[4];
                      if (v89) {
                        goto LABEL_116;
                      }
                      break;
                    case 1:
                      [(_UIMutableFastIndexSet *)(uint64_t)v202 addIndex:v82];
                      uint64_t v89 = a5[3];
                      if (!v89) {
                        break;
                      }
LABEL_116:
                      (*(void (**)(uint64_t, uint64_t, void))(v89 + 16))(v89, v203, (v87 + v83));
                      break;
                    default:
                      break;
                  }
                }
                if (++v83 == v205)
                {
                  float64x2_t v41 = v193;
                  float64x2_t v100 = v175;
                  id v75 = v176;
                  goto LABEL_163;
                }
              }
            }
            goto LABEL_152;
          }
          if (v75)
          {
LABEL_152:
            float64x2_t v100 = v75;
LABEL_164:

            id v38 = v75;
            unint64_t v72 = (void *)*((void *)&v218 + 1);
            uint64_t v71 = (void *)v219;
            goto LABEL_165;
          }
          float64x2_t v135 = NSString;
          id v133 = _UIDataSourceUpdateActionDescription(v79);
          float64x2_t v134 = [v135 stringWithFormat:@"Invalid batch updates detected: attempt to %@ section %lu, but there are only %lu sections.", v133, v80, v76];
LABEL_159:
          id v75 = v134;

          float64x2_t v100 = 0;
          goto LABEL_164;
        }
      }
      else
      {
        long long v122 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v123 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
        [v122 handleFailureInFunction:v123, @"_UIDataSourceBatchUpdateMap.m", 290, @"Invalid parameter not satisfying: %@", @"deleteItemUpdatesIncludingMoves != nil" file lineNumber description];

        if (v41) {
          goto LABEL_104;
        }
      }
      long long v124 = [MEMORY[0x1E4F28B00] currentHandler];
      long long v125 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemsInSectionUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, _UIFastIndexSet *const __strong, _UIFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
      [v124 handleFailureInFunction:v125, @"_UIDataSourceBatchUpdateMap.m", 291, @"Invalid parameter not satisfying: %@", @"insertItemUpdatesIncludingMoves != nil" file lineNumber description];

      goto LABEL_104;
    }
    unint64_t v60 = v218;
    unint64_t v191 = (uint64_t (**)(void *, void))_Block_copy(*((const void **)&v218 + 1));
    unint64_t v188 = (uint64_t (**)(void *, void))_Block_copy((const void *)v219);
    unint64_t v61 = *(void *)a2;
    unint64_t v197 = (uint64_t (**)(void *, void))_Block_copy(*((const void **)a2 + 1));
    float64x2_t v183 = (unsigned int (**)(void *, void))_Block_copy(*((const void **)a2 + 2));
    uint64_t v62 = aBlock;
    uint64_t v63 = DWORD2(aBlock);
    uint64_t v64 = HIDWORD(aBlock);
    uint64_t v65 = v223;
    uint64_t v66 = DWORD1(v223);
    if (!v189)
    {
      double v209 = [MEMORY[0x1E4F28B00] currentHandler];
      double v128 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
      [v209 handleFailureInFunction:v128, @"_UIDataSourceBatchUpdateMap.m", 389, @"Invalid parameter not satisfying: %@", @"itemMoveSourceToDestMap != NULL" file lineNumber description];
    }
    if (!v202)
    {
      unint64_t v210 = [MEMORY[0x1E4F28B00] currentHandler];
      float64x2_t v129 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
      [v210 handleFailureInFunction:v129, @"_UIDataSourceBatchUpdateMap.m", 390, @"Invalid parameter not satisfying: %@", @"deletedItemsIncludingMoves != nil" file lineNumber description];
    }
    if (!v200)
    {
      float64x2_t v211 = [MEMORY[0x1E4F28B00] currentHandler];
      float64x2_t v130 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
      [v211 handleFailureInFunction:v130, @"_UIDataSourceBatchUpdateMap.m", 391, @"Invalid parameter not satisfying: %@", @"insertedItemsIncludingMoves != nil" file lineNumber description];
    }
    if (!a5)
    {
      float64x2_t v212 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v131 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processItemUpdate(const NSUInteger, const _UIDataSourceUpdate, const _UIMapIndex, const _UIDataSourceModel, const _UIDataSourceModel, _UIMapIndex *, _UIMutableFastIndexSet *const __strong, _UIMutableFastIndexSet *const __strong, const _UIDataSourceUpdateProcessingCallbacks *, NSString *__autoreleasing *)");
      [v212 handleFailureInFunction:v131, @"_UIDataSourceBatchUpdateMap.m", 392, @"Invalid parameter not satisfying: %@", @"callbacksPtr != NULL" file lineNumber description];
    }
    if (v63 < v60)
    {
      unint64_t v67 = HIDWORD(v60);
      unint64_t v68 = v191[2](v191, v63) + v64;
      if (v68 < v67)
      {
        if (v62 != 3)
        {
          if (v62 == 2)
          {
            [(_UIMutableFastIndexSet *)(uint64_t)v200 addIndex:v69];
            uint64_t v70 = a5[4];
            if (!v70)
            {
LABEL_142:
              id v75 = v38;
              float64x2_t v100 = v38;
LABEL_163:
              uint64_t v49 = v203;
              goto LABEL_164;
            }
LABEL_141:
            (*(void (**)(uint64_t, uint64_t, unint64_t))(v70 + 16))(v70, v203, v68);
            goto LABEL_142;
          }
          if (v62 == 1)
          {
            [(_UIMutableFastIndexSet *)(uint64_t)v202 addIndex:v69];
            uint64_t v70 = a5[3];
            if (!v70) {
              goto LABEL_142;
            }
            goto LABEL_141;
          }
          goto LABEL_161;
        }
        id v75 = v38;
        if (v65 >= v61)
        {
          if (v38) {
            goto LABEL_162;
          }
          id v75 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu), but there are only %lu sections.", @"move", v65, v66, v61];
        }
        else
        {
          unint64_t v101 = HIDWORD(v61);
          unint64_t v102 = v197[2](v197, v65) + v66;
          if (v102 < v101)
          {
            [(_UIMutableFastIndexSet *)(uint64_t)v202 addIndex:v103];
            [(_UIMutableFastIndexSet *)(uint64_t)v200 addIndex:v104];
            *((_DWORD *)v189 + v68) = v102;
            uint64_t v105 = a5[5];
            if (v105) {
              (*(void (**)(uint64_t, uint64_t, unint64_t, unint64_t))(v105 + 16))(v105, v203, v68, v102);
            }
            goto LABEL_162;
          }
          if (v66 >= v183[2](v183, v65))
          {
            if (v38) {
              goto LABEL_162;
            }
            float64x2_t v136 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu), but there are only %lu items in the section.", @"move", v65, v66, v183[2](v183, v65)];
          }
          else
          {
            if (v38) {
              goto LABEL_162;
            }
            float64x2_t v136 = [NSString stringWithFormat:@"Invalid batch updates detected: attempt to %@ item to destination index path (%lu - %lu) (global item index %lu), but there are only %lu total items.", @"move", v65, v66, v102, v101];
          }
          id v75 = v136;
        }
LABEL_177:
        float64x2_t v100 = 0;
        goto LABEL_163;
      }
      if (v64 >= v188[2](v188, v63))
      {
        if (v38)
        {
LABEL_161:
          id v75 = v38;
LABEL_162:
          float64x2_t v100 = v75;
          goto LABEL_163;
        }
        long long v140 = NSString;
        __int16 v138 = _UIDataSourceUpdateActionDescription(v62);
        double v139 = [v140 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu), but there are only %lu items in the section.", v138, v63, v64, v188[2](v188, v63)];
      }
      else
      {
        if (v38)
        {
LABEL_157:
          float64x2_t v100 = v38;
          id v75 = v38;
          goto LABEL_163;
        }
        int64x2_t v137 = NSString;
        __int16 v138 = _UIDataSourceUpdateActionDescription(v62);
        double v139 = [v137 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu) (global item index %lu), but there are only %lu total items.", v138, v63, v64, v68, v67];
      }
      id v75 = v139;

      goto LABEL_177;
    }
    if (!v38)
    {
      os_log_t v132 = NSString;
      _UIDataSourceUpdateActionDescription(v62);
      v133 = uint64_t v49 = v203;
      float64x2_t v134 = [v132 stringWithFormat:@"Invalid batch updates detected: attempt to %@ item at index path (%lu - %lu), but there are only %lu sections.", v133, v63, v64, v60];
      goto LABEL_159;
    }
    goto LABEL_157;
  }
LABEL_181:
  long long v141 = _allocateMapWithCapacity(*a2);
  long long v142 = _allocateMapWithCapacity(a2[1]);
  int v143 = v38 != 0;
  if (-[_UIFastIndexSet count]((int8x16_t *)v180)) {
    _processDeletedIndexes(*a1, (uint16x8_t *)v180, v173);
  }
  if (-[_UIFastIndexSet count]((int8x16_t *)v179))
  {
    int v144 = _processInsertedIndexes(*a1, *a2, v179, (uint64_t)__b, v173, (uint64_t)v141);
    if (v38) {
      int v143 = 1;
    }
    else {
      int v143 = v144;
    }
  }
  if (-[_UIFastIndexSet count]((int8x16_t *)v202)) {
    _processDeletedIndexes(a1[1], (uint16x8_t *)v202, v172);
  }
  if (-[_UIFastIndexSet count]((int8x16_t *)v200))
  {
    long long v145 = v189;
    v143 |= _processInsertedIndexes(a1[1], a2[1], (uint16x8_t *)v200, (uint64_t)v189, v172, (uint64_t)v142);
    long long v146 = __b;
    if (!__b) {
      goto LABEL_192;
    }
    goto LABEL_191;
  }
  long long v146 = __b;
  long long v145 = v189;
  if (__b) {
LABEL_191:
  }
    free(v146);
LABEL_192:
  if (v145) {
    free(v145);
  }
  int v147 = _populateNewIndexMap(*a1, *a2, v173, v141);
  int v148 = v143 | v147 | _populateNewIndexMap(a1[1], a2[1], v172, v142);
  if (v148 == 1)
  {
    if (!v38)
    {
      id v38 = [NSString stringWithFormat:@"Invalid batch updates detected: the number of sections and/or items returned by the data source before and after performing the batch updates are inconsistent with the updates."];
    }
    uint64_t v149 = *(void *)a1;
    uint64_t v150 = _Block_copy(*((const void **)a1 + 1));
    double v151 = _Block_copy(*((const void **)a1 + 2));
    uint64_t v152 = *(void *)a2;
    float64x2_t v206 = _Block_copy(*((const void **)a2 + 1));
    float64x2_t v213 = _Block_copy(*((const void **)a2 + 2));
    float64x2_t v153 = [MEMORY[0x1E4F28E78] string];
    uint64_t v190 = v142;
    v192 = v141;
    float64x2_t v177 = v38;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 3221225472;
    *(void *)&long long v223 = ___UIDataSourceBatchUpdateDescription_block_invoke;
    *((void *)&v223 + 1) = &unk_1E52F19A8;
    id v154 = v153;
    id v224 = v154;
    float64x2_t v155 = (void (**)(void *, __CFString *, void *))_Block_copy(&aBlock);
    v221[0] = v149;
    v221[1] = _Block_copy(v150);
    v221[2] = _Block_copy(v151);
    v155[2](v155, @"before", v221);
    v220[0] = v152;
    v220[1] = _Block_copy(v206);
    v220[2] = _Block_copy(v213);
    v155[2](v155, @"after", v220);
    [v154 appendString:@"Updates = [\n"];
    if (a3)
    {
      unint64_t v156 = 0;
      do
      {
        long long v218 = 0u;
        long long v219 = 0u;
        (*(void (**)(long long *__return_ptr))(a4 + 16))(&v218);
        if ((void)v218)
        {
          if (BYTE8(v219))
          {
            float64x2_t v157 = _UIDataSourceUpdateActionDescription(v218);
            int64x2_t v158 = [v157 capitalizedString];
            [v154 appendFormat:@"\t%@ section %lu", v158, DWORD2(v218)];
          }
          else
          {
            float64x2_t v157 = _UIDataSourceUpdateActionDescription(v218);
            int64x2_t v158 = [v157 capitalizedString];
            [v154 appendFormat:@"\t%@ item (%lu - %lu)", v158, DWORD2(v218), HIDWORD(v218)];
          }

          if ((void)v218 == 3)
          {
            if (BYTE8(v219)) {
              objc_msgSend(v154, "appendFormat:", @" to %lu", v219);
            }
            else {
              objc_msgSend(v154, "appendFormat:", @" to (%lu - %lu)", v219, DWORD1(v219));
            }
          }
          if (v156 < a3 - 1) {
            [v154 appendString:@",\n"];
          }
        }
        ++v156;
      }
      while (a3 != v156);
    }
    [v154 appendString:@"\n]"];
    id v159 = v154;

    [v38 stringByAppendingFormat:@"\n%@", v159];
    long long v141 = v192;
    float64x2_t v41 = v193;
    long long v142 = v190;
    id v38 = (id)objc_claimAutoreleasedReturnValue();
  }
  if (v170) {
    *double v170 = v38;
  }
  v225.val[0] = *(float32x2_t *)a1;
  v225.val[1] = *(float32x2_t *)a2;
  float64x2_t v160 = (float *)a7;
  vst2_f32(v160, v225);
  v160 += 4;
  *(void *)float64x2_t v160 = v173;
  *(void *)(a7 + 24) = v141;
  *(void *)(a7 + 32) = v172;
  *(void *)(a7 + 40) = v142;
  *(unsigned char *)(a7 + 48) = v148;

  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40((uint64_t)a5);
}

void sub_185444C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(a52);
  __destructor_8_sb8_sb16(a44);
  __destructor_8_sb8_sb16(a37);
  _Unwind_Resume(a1);
}

void sub_185445854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void __copy_assignment_8_8_t0w8_sb8_sb16(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  uint64_t v4 = _Block_copy(*(const void **)(a2 + 8));
  char v5 = (void *)a1[1];
  a1[1] = v4;

  int v6 = _Block_copy(*(const void **)(a2 + 16));
  BOOL v7 = (void *)a1[2];
  a1[2] = v6;
}

void _UIDataSourceUpdateFromCollectionViewUpdateItem(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1)
  {
    LODWORD(v8) = 0;
    *(void *)a2 = 2;
    *(_DWORD *)(a2 + 8) = 0;
    unint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_16;
  }
  uint64_t v4 = a1[10];
  if (v4)
  {
    if (v4 != 1)
    {
      if (v4 == 3)
      {
        unint64_t v6 = a1[3];
        unint64_t v5 = a1[4];
        goto LABEL_10;
      }
      uint64_t v4 = 0;
    }
    unint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v4 = 2;
  }
  unint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_10:
  *(void *)a2 = v4;
  unint64_t v7 = a1[5];
  if (v7 != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (!HIDWORD(v7)) {
      goto LABEL_13;
    }
    unint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v11 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v7);
  }
  LODWORD(v7) = -1;
LABEL_13:
  *(_DWORD *)(a2 + 8) = v7;
  unint64_t v8 = a1[6];
  if (v8 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_14:
    LODWORD(v8) = -1;
    goto LABEL_16;
  }
  if (HIDWORD(v8))
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v8);

    goto LABEL_14;
  }
LABEL_16:
  *(_DWORD *)(a2 + 12) = v8;
  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_17:
    LODWORD(v6) = -1;
    goto LABEL_19;
  }
  if (HIDWORD(v6))
  {
    uint64_t v14 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v15 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v6);

    goto LABEL_17;
  }
LABEL_19:
  *(_DWORD *)(a2 + 16) = v6;
  if (v5 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_20:
    LODWORD(v5) = -1;
    goto LABEL_22;
  }
  if (HIDWORD(v5))
  {
    uint64_t v16 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v17 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v5);

    goto LABEL_20;
  }
LABEL_22:
  *(_DWORD *)(a2 + 20) = v5;
  if (a1) {
    BOOL v9 = a1[6] == 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    BOOL v9 = 0;
  }
  *(unsigned char *)(a2 + 24) = v9;
}

void sub_185445D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *_allocateMapWithCapacity(unsigned int a1)
{
  uint64_t v2 = malloc_type_malloc(4 * a1, 0xB5E5AF82uLL);
  if (!v2)
  {
    uint64_t v4 = a1;
    unint64_t v5 = [MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v6 = [NSString stringWithUTF8String:"_UIMapIndex *_allocateMapWithCapacity(const _UIMapIndex)"];
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, @"_UIDataSourceBatchUpdateMap.m", 189, @"Failed to allocate index map with capacity: %lu", v4);
  }
  return v2;
}

uint64_t _populateNewIndexMap(int a1, unsigned int a2, uint64_t a3, void *__b)
{
  if (a3)
  {
    if (__b) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _populateNewIndexMap(const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMapIndex *)");
    [v12 handleFailureInFunction:v13, @"_UIDataSourceBatchUpdateMap.m", 553, @"Invalid parameter not satisfying: %@", @"oldIndexMap != NULL" file lineNumber description];

    if (__b)
    {
LABEL_3:
      if (!a2) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  uint64_t v14 = [MEMORY[0x1E4F28B00] currentHandler];
  unint64_t v15 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _populateNewIndexMap(const _UIMapIndex, const _UIMapIndex, _UIMapIndex *, _UIMapIndex *)");
  [v14 handleFailureInFunction:v15, @"_UIDataSourceBatchUpdateMap.m", 554, @"Invalid parameter not satisfying: %@", @"newIndexMap != NULL" file lineNumber description];

  if (a2) {
LABEL_4:
  }
    memset(__b, 255, 4 * a2);
LABEL_5:
  if (a1)
  {
    uint64_t v8 = 0;
    char v9 = 0;
    do
    {
      uint64_t v10 = *(unsigned int *)(a3 + 4 * v8);
      if (v10 != -1)
      {
        if (v10 >= a2) {
          char v9 = 1;
        }
        else {
          *((_DWORD *)__b + v10) = v8;
        }
      }
      ++v8;
    }
    while (a1 != v8);
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

void __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

void _UIExclusionMatrixPerformExclusion(void *a1)
{
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  id v59 = a1;
  uint64_t v1 = [v59 count];
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v68 = 0;
  unint64_t v2 = (v1 * v1);
  if (v1 * v1)
  {
    uint64_t v3 = std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)&v68, ((v2 - 1) >> 6) + 1);
    uint64_t v4 = v3;
    uint64_t v67 = (v1 * v1);
    uint64_t v68 = v5;
    uint64_t v66 = v3;
    if (v2 >= 0x41) {
      unint64_t v6 = (v2 - 1) >> 6;
    }
    else {
      unint64_t v6 = 0;
    }
    v3[v6] = 0;
    unint64_t v7 = v2 >> 6;
    if (v2 >= 0x40) {
      bzero(v3, 8 * v7);
    }
    if ((((_BYTE)v1 * (_BYTE)v1) & 0x3F) != 0) {
      v4[v7] &= ~(0xFFFFFFFFFFFFFFFFLL >> -((v1 * v1) & 0x3F));
    }
  }
  unint64_t v8 = (int)v1;
  __p = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v53 = v1 << 32;
  if (v1 << 32)
  {
    if (v1 << 32 < 0) {
      abort();
    }
    char v9 = (char *)operator new((4 * v1) & 0x3FFFFFFFFLL);
    uint64_t v10 = &v9[4 * (int)v1];
    __p = v9;
    uint64_t v65 = v10;
    bzero(v9, (4 * v1) & 0x3FFFFFFFFLL);
    uint64_t v11 = 0;
    uint64_t v64 = v10;
    if ((unint64_t)(int)v1 <= 1) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = (int)v1;
    }
    uint64_t v60 = (int)v1;
    unint64_t v61 = &v66;
    p_p = &__p;
    uint64_t log = -1;
    do
    {
      id v13 = [v59 objectAtIndexedSubscript:v11];
      int v57 = [v13 _canExcludeOtherExcludables];

      if ((v57 & 1) == 0) {
        *((_DWORD *)__p + (int)v11) = -1;
      }
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      do
      {
        uint64_t v16 = [v59 objectAtIndexedSubscript:v11];
        uint64_t v17 = [v59 objectAtIndexedSubscript:v15];
        int v18 = [v16 _isExcludedByExcludable:v17];

        if (v18)
        {
          *(void *)((char *)v66
                    + (((unint64_t)((int)v11 * (uint64_t)(int)v8 + (v14 >> 32)) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << (v11 * v8 + BYTE4(v14));
          if (v57) {
            ++*((_DWORD *)__p + (int)v11);
          }
        }
        ++v15;
        v14 += 0x100000000;
      }
      while (v12 != v15);
      uint64_t v19 = log;
      if (!*((_DWORD *)__p + (int)v11)) {
        uint64_t v19 = v11;
      }
      uint64_t log = v19;
      ++v11;
    }
    while (v11 != v12);
  }
  else
  {
    uint64_t v60 = (int)v1;
    unint64_t v61 = &v66;
    p_p = &__p;
    uint64_t log = -1;
  }
  if (*(unsigned char *)__UILogGetCategoryCachedImpl("GestureExclusion", &_MergedGlobals_1081)) {
    _UIExclusionMatrixLog((uint64_t)&v60, v59);
  }
  unsigned int v20 = (char *)__p;
  unint64_t v21 = log;
  if ((log & 0x8000000000000000) == 0)
  {
    if (v8 <= 1) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = v8;
    }
    uint64_t v23 = log;
    do
    {
      if (!*(_DWORD *)&v20[4 * (int)v21])
      {
        unint64_t v24 = v21;
        uint64_t v25 = (int)v21;
        if (v53)
        {
          for (uint64_t i = 0; i != v22; ++i)
          {
            if (((*(void *)((char *)v66
                             + (((unint64_t)(v25 + (int)i * (uint64_t)(int)v8) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v25 + i * v8)) & 1) != 0)
            {
              unsigned int v27 = [v59 objectAtIndexedSubscript:i];
              [v27 _exclude];
              unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("GestureExclusion", &qword_1EB260CA8);
              if (*(unsigned char *)CategoryCachedImpl)
              {
                loga = *(id *)(CategoryCachedImpl + 8);
                if (os_log_type_enabled(loga, OS_LOG_TYPE_ERROR))
                {
                  id v51 = [v27 _excludableDescription];
                  uint64_t v49 = [v59 objectAtIndexedSubscript:v24];
                  uint64_t v34 = [v49 _excludableDescription];
                  *(_DWORD *)buf = 138412546;
                  id v70 = v51;
                  __int16 v71 = 2112;
                  uint64_t v47 = (void *)v34;
                  uint64_t v72 = v34;
                  _os_log_impl(&dword_1853B0000, loga, OS_LOG_TYPE_ERROR, "%@: is excluded by %@", buf, 0x16u);
                }
              }
              uint64_t v29 = 0;
              double v30 = (char *)v66;
              size_t v31 = __p;
              uint64_t v32 = v22;
              do
              {
                unint64_t v33 = (int)i + SHIDWORD(v29) * (uint64_t)(int)v8;
                if ((*(void *)&v30[(v33 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v33)) {
                  --v31[v29 >> 32];
                }
                v29 += 0x100000000;
                --v32;
              }
              while (v32);
              v31[(int)i] = -1;
            }
          }
        }
        unsigned int v20 = (char *)__p;
        *((_DWORD *)__p + v25) = -1;
        unint64_t v21 = v24;
        uint64_t v23 = v24;
      }
      unint64_t v21 = (v21 + 1) % v8;
    }
    while (v21 != v23);
    unsigned int v20 = (char *)__p;
  }
  uint64_t v35 = v53 - 0x100000000;
  if (v53 - 0x100000000 >= (uint64_t)0xFFFFFFFF00000001)
  {
    uint64_t v36 = v35 >> 32;
    uint64_t v37 = (v35 >> 32) + 1;
    unint64_t v38 = (v35 & 0xFFFFFFFF00000000) - 0x100000000;
    do
    {
      os_log_t logb = (os_log_t)(v36 - 1);
      uint64_t v58 = v36;
      if (v36 >= 1 && *(int *)&v20[4 * (int)v36] >= 1)
      {
        uint64_t v39 = (int)v36;
        uint64_t v40 = v38;
        unint64_t v41 = v37;
        do
        {
          if (((*(void *)((char *)v66
                           + (((unint64_t)(v39 + SHIDWORD(v40) * (uint64_t)(int)v8) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v39 + BYTE4(v40) * v8)) & 1) != 0)
          {
            float64x2_t v42 = [v59 objectAtIndexedSubscript:v41 - 2];
            [v42 _exclude];

            unint64_t v43 = __UILogGetCategoryCachedImpl("GestureExclusion", &qword_1EB260CB0);
            if (*(unsigned char *)v43)
            {
              float64x2_t v44 = *(id *)(v43 + 8);
              if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
              {
                uint64_t v50 = v44;
                double v48 = [v59 objectAtIndexedSubscript:v41 - 2];
                id v52 = [v48 _excludableDescription];
                uint64_t v45 = [v59 objectAtIndexedSubscript:v58];
                uint64_t v46 = [v45 _excludableDescription];
                *(_DWORD *)buf = 138412546;
                id v70 = v52;
                __int16 v71 = 2112;
                uint64_t v72 = (uint64_t)v46;
                _os_log_impl(&dword_1853B0000, v50, OS_LOG_TYPE_ERROR, "%@: is excluded by %@", buf, 0x16u);

                float64x2_t v44 = v50;
              }
            }
            unsigned int v20 = (char *)__p;
            *((_DWORD *)__p + (v40 >> 32)) = -1;
          }
          --v41;
          v40 -= 0x100000000;
        }
        while (v41 > 1);
      }
      --v37;
      v38 -= 0x100000000;
      uint64_t v36 = (uint64_t)logb;
    }
    while (v58 > 0);
  }
  if (v20)
  {
    uint64_t v64 = v20;
    operator delete(v20);
  }
  if (v66) {
    operator delete(v66);
  }
}

void sub_1854466E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,void *a26)
{
  if (__p) {
    operator delete(__p);
  }
  if (a26) {
    operator delete(a26);
  }

  _Unwind_Resume(a1);
}

void _UIDataSourceUpdateFromUpdateItem(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      int v4 = 0;
      uint64_t v5 = *(unsigned int *)(a1 + 20);
      switch(v5)
      {
        case 0:
          uint64_t v5 = 2;
          goto LABEL_8;
        case 1:
LABEL_8:
          unint64_t v6 = *(void **)(a1 + 24);
          goto LABEL_9;
        case 3:
          int v4 = 1;
          uint64_t v5 = 3;
          goto LABEL_8;
      }
    }
    int v4 = 0;
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  int v4 = 0;
  unint64_t v6 = 0;
  uint64_t v5 = 2;
LABEL_9:
  id v21 = v6;
  unint64_t v7 = [v21 section];
  unint64_t v8 = [v21 item];
  unint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
  if (v4)
  {
    uint64_t v11 = -[UIRowMoveUpdateItem newIndexPath]((id *)a1);
    unint64_t v9 = [v11 section];
    unint64_t v10 = [v11 item];
  }
  *(void *)a2 = v5;
  if (v7 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_12;
  }
  if (HIDWORD(v7))
  {
    id v13 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v14 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v7);

LABEL_12:
    LODWORD(v7) = -1;
  }
  *(_DWORD *)(a2 + 8) = v7;
  if (v8 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_15:
    LODWORD(v8) = -1;
    goto LABEL_17;
  }
  if (HIDWORD(v8))
  {
    uint64_t v15 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v16 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v15, "handleFailureInFunction:file:lineNumber:description:", v16, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v8);

    goto LABEL_15;
  }
LABEL_17:
  *(_DWORD *)(a2 + 12) = v8;
  if (v9 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_18:
    LODWORD(v9) = -1;
    goto LABEL_20;
  }
  if (HIDWORD(v9))
  {
    uint64_t v17 = [MEMORY[0x1E4F28B00] currentHandler];
    int v18 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v9);

    goto LABEL_18;
  }
LABEL_20:
  *(_DWORD *)(a2 + 16) = v9;
  if (v10 == 0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_21:
    LODWORD(v10) = -1;
    goto LABEL_23;
  }
  if (HIDWORD(v10))
  {
    uint64_t v19 = [MEMORY[0x1E4F28B00] currentHandler];
    unsigned int v20 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v10);

    goto LABEL_21;
  }
LABEL_23:
  *(_DWORD *)(a2 + 20) = v10;
  if (a1) {
    char v12 = *(unsigned char *)(a1 + 16) & 1;
  }
  else {
    char v12 = 0;
  }
  *(unsigned char *)(a2 + 24) = v12;
}

unint64_t *std::uninitialized_copy[abi:nn180100]<_UIBitSetIterator<unsigned long,256ul>,unsigned long *>(uint64_t *a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3 = a1[1];
  if (v3 != a2)
  {
    uint64_t v4 = *a1;
    char v5 = *((unsigned char *)a1 + 16);
    do
    {
      *a3 = v3;
      unint64_t v6 = v3 >> 6;
      if (v3 >> 6 == 4)
      {
LABEL_7:
        unint64_t v3 = 256;
      }
      else
      {
        char v7 = v3 & 0x3F;
        uint64_t v8 = -64 * v6;
        while (1)
        {
          unint64_t v9 = __clz(__rbit64((*(void *)(v4 + 8 * v6) ^ (char)(v5 - 1)) & (-1 << v7)));
          if (v9 < 0x40) {
            break;
          }
          char v7 = 0;
          ++v6;
          v8 -= 64;
          if (v6 == 4) {
            goto LABEL_7;
          }
        }
        unint64_t v3 = v9 - v8;
      }
      v5 ^= 1u;
      ++a3;
    }
    while (v3 != a2);
  }
  return a3;
}

void _UIGestureRecognizerUnregisterFromContainer(uint64_t a1, id a2)
{
  if (a1) {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  }
  else {
    id WeakRetained = 0;
  }

  if (WeakRetained == a2)
  {
    -[UIGestureRecognizer setContainer:](a1, 0);
    char v5 = [(id)UIApp _gestureEnvironment];
    [v5 removeGestureRecognizer:a1];

    -[UIGestureRecognizer setDelayedEventComponentDispatcher:](a1, 0);
  }
}

void _UIContextMenuRegisterDefaultPlatformMetricsIfNecessary()
{
  if (_UIContextMenuRegisterDefaultPlatformMetricsIfNecessary_onceToken != -1) {
    dispatch_once(&_UIContextMenuRegisterDefaultPlatformMetricsIfNecessary_onceToken, &__block_literal_global_690);
  }
}

void _UIViewSetLayer(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v4 = *(id *)(a1 + 160);
    if (v4)
    {
      [*(id *)(a1 + 160) setUnsafeUnretainedDelegate:0];
      if ((dyld_program_sdk_at_least() & 1) == 0) {
        [v4 setDelegate:0];
      }
      id v5 = -[UIView _backing_outermostLayer]((void *)a1);
      if (v4 != v5)
      {
        unint64_t v6 = v5;
        [v5 setUnsafeUnretainedDelegate:0];
        if ((dyld_program_sdk_at_least() & 1) == 0) {
          [v6 setDelegate:0];
        }
      }
      objc_setAssociatedObject(v4, &unk_1EB25C0B4, 0, (void *)1);
    }
    *(void *)(a1 + 160) = a2;
    if (a2)
    {
      char v7 = [a2 superlayer];

      uint64_t v8 = (id *)(a1 + 56);
      if (v7)
      {
        id v9 = *v8;
        *uint64_t v8 = 0;

        unint64_t v10 = a2;
        uint64_t v11 = (void *)a1;
      }
      else
      {
        objc_storeStrong(v8, a2);
        unint64_t v10 = a2;
        uint64_t v11 = 0;
      }
      objc_setAssociatedObject(v10, &unk_1EB25C0B4, v11, (void *)1);
      [a2 setUnsafeUnretainedDelegate:a1];
      if ((dyld_program_sdk_at_least() & 1) == 0)
      {
        [a2 setDelegate:a1];
      }
    }
    else
    {
      char v12 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = 0;

      uint64_t v13 = *(void *)(a1 + 168);
      -[UIBackgroundConfiguration _setCustomView:](v13, 0);
    }
  }
}

void __UIViewWasRemovedFromSuperview(void *a1, void *a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  -[UIView _synchronizeAutoLayoutWithCALayoutForHierarchyChangeIfApplicable]((uint64_t)a2);
  if (a2 && (a1[12] & 0x1000000000) == 0)
  {
    [a1 _makeSubtreePerformSelector:sel__unsubscribeToScrollNotificationsIfNecessary_ withObject:a2];
    [a1 _unsubscribeToScrollNotificationsIfNecessary:a2];
    -[UIView _postMovedFromSuperview:](a1, a2);
    [a2 _didRemoveSubview:a1];
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = v5;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * v10++), "_monitoredView:didMoveFromSuperview:toSuperview:", a1, a2, 0, (void)v11);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v8);
  }
}

void __UIViewWillBeRemovedFromSuperview(uint64_t a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if ((*(void *)(a1 + 96) & 0x10000) != 0)
  {
    id v4 = [(id)a1 _responderWindow];
    id v5 = [v4 firstResponder];
    if ([(id)a1 _containsResponder:v5]
      && [(id)a1 _canResignIfContainsFirstResponder])
    {
      if ([v4 _isSettingFirstResponder])
      {
        [(id)a1 _setFirstResponder:0];
      }
      else
      {
        [v4 _setIsSettingFirstResponder:1];
        [v5 resignFirstResponder];
        [v4 _setIsSettingFirstResponder:0];
        id v6 = [(id)a1 nextFirstResponder];
        if (v6 && ([(id)a1 _containsResponder:v6] & 1) == 0) {
          [v6 becomeFirstResponder];
        }
      }
    }
  }
  uint64_t v7 = [(id)a1 _focusSystem];
  uint64_t v8 = v7;
  if (v7)
  {
    [v7 _focusEnvironmentWillDisappear:a1];
    if ((*(_DWORD *)(a1 + 96) & 0x80000000) != 0) {
      [v8 _focusEnvironmentWillDisappear:*(void *)(a1 + 88)];
    }
  }
  uint64_t v9 = (id)[(id)a1 superview];
  if (!v9)
  {
    if ((*(void *)(a1 + 96) & 0x1000000000) != 0) {
      goto LABEL_32;
    }
    goto LABEL_22;
  }
  id v10 = *(id *)(a1 + 160);
  long long v11 = (id) a1;
  long long v12 = (void *)v11[7];
  v11[7] = v10;
  id v13 = v10;

  long long v14 = (void *)v11[21];
  if (v14) {
    long long v14 = (void *)v14[1];
  }
  uint64_t v15 = v14;
  -[UIBackgroundConfiguration _setCustomView:](v11[21], v15);

  objc_setAssociatedObject(v13, &unk_1EB25C0B4, 0, (void *)1);
  if ((v11[12] & 0x1000000000) == 0)
  {
    [v9 _willRemoveSubview:v11];
    [v11 willMoveToSuperview:0];
    if ((dyld_program_sdk_at_least() & 1) == 0 && (v11[12] & 0x400000000000000) != 0)
    {
      objc_msgSend(v9, "_constraints_subviewWillChangeSuperview:", v11);
      -[UIView _willRemoveSubviewWantingAutolayout:](v9, v11);
    }
LABEL_22:
    if (qword_1EB25C350 != -1) {
      dispatch_once(&qword_1EB25C350, &__block_literal_global_3781);
    }
    uint64_t v16 = v9;
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v16 = [v9 window];
    }
    if (v16)
    {
      [(id)a1 setViewTraversalMark:1];
      [(id)a1 _willMoveToWindow:0];
      [(id)a1 _makeSubtreePerformSelector:sel__willMoveToWindow_ withObject:0 withObject:0 copySublayers:1];
      [(id)a1 setViewTraversalMark:0];
    }
    int v17 = dyld_program_sdk_at_least();
    if (v9 && v17 && (*(void *)(a1 + 96) & 0x400000000000000) != 0)
    {
      objc_msgSend(v9, "_constraints_subviewWillChangeSuperview:", a1);
      -[UIView _willRemoveSubviewWantingAutolayout:](v9, (void *)a1);
    }
  }
LABEL_32:
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v18 = a2;
  uint64_t v19 = [v18 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v20; ++i)
      {
        if (*(void *)v24 != v21) {
          objc_enumerationMutation(v18);
        }
        objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * i), "_monitoredView:willMoveFromSuperview:toSuperview:", a1, v9, 0, (void)v23);
      }
      uint64_t v20 = [v18 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v20);
  }

  -[UIView _removeParentGeometryObservers]((void *)a1);
  [v9 _invalidateSubviewCache];
}

id viewFromContainer(id a1)
{
  if (a1)
  {
    unint64_t v2 = a1;
    if (_IsKindOfUIView((uint64_t)a1))
    {
      a1 = v2;
    }
    else if (objc_opt_respondsToSelector())
    {
      a1 = [v2 _proxyView];
    }
    else
    {
      a1 = 0;
    }
    uint64_t v1 = vars8;
  }
  return a1;
}

void _UIGestureRecognizerRegisterInContainer(uint64_t a1, id a2)
{
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));

    if (WeakRetained == a2) {
      return;
    }
    id v8 = objc_loadWeakRetained((id *)(a1 + 48));
  }
  else
  {
    id v8 = 0;
    if (!a2) {
      return;
    }
  }
  -[UIGestureRecognizer setContainer:](a1, a2);
  id v5 = v8;
  if (!v8)
  {
    id v6 = [(id)UIApp _gestureEnvironment];
    [v6 addGestureRecognizer:a1];

    uint64_t v7 = [(id)UIApp _gestureDelayedEventComponentDispatcher];
    -[UIGestureRecognizer setDelayedEventComponentDispatcher:](a1, v7);

    id v5 = 0;
  }
}

id _UIContextMenuGetPlatformMetrics(uint64_t a1)
{
  unint64_t v2 = (void *)_UIContextMenuGetPlatformMetrics_metricsByIdiom;
  unint64_t v3 = [NSNumber numberWithInteger:a1];
  id v4 = [v2 objectForKey:v3];

  if (!v4)
  {
    if (!_UIContextMenuGetPlatformMetrics_metricsByIdiom)
    {
      uint64_t v5 = [MEMORY[0x1E4F1CA60] dictionary];
      id v6 = (void *)_UIContextMenuGetPlatformMetrics_metricsByIdiom;
      _UIContextMenuGetPlatformMetrics_metricsByIdiom = v5;
    }
    uint64_t v7 = +[_UIVisualStyleRegistry registryForIdiom:a1];
    id v4 = (void *)[v7 visualStyleClassForStylableClass:objc_opt_class()];

    if (v4)
    {
      id v4 = objc_opt_new();
      id v8 = (void *)_UIContextMenuGetPlatformMetrics_metricsByIdiom;
      uint64_t v9 = [NSNumber numberWithInteger:a1];
      [v8 setObject:v4 forKey:v9];
    }
  }
  return v4;
}

uint64_t objectdestroy_21Tm()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t NSDiffableDataSourceSnapshot.reloadedItemIdentifiers.getter(uint64_t a1)
{
  return sub_185419EBC(a1, (SEL *)&selRef_reloadedItemIdentifiers);
}

uint64_t getEnumTagSinglePayload for HoverStyleHost(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for UITraitLayoutDirection()
{
  return &type metadata for UITraitLayoutDirection;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __setupCA_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (pthread_main_np() == 1)
  {
    *(_DWORD *)(v1 + 448) = 2;
    _UIUpdateInputSetInputChanged(*(_DWORD **)(v1 + 496), v1 + 448);
  }
  else
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __displayLinksWillFire_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = v1;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  return 0;
}

uint64_t (*schedulerStepScheduledWaitingLowLatencyInputs(uint64_t a1, uint64_t *a2))()
{
  applyRequestRegistryChanges(a1);
  long long v4 = schedulerStepScheduledDone;
  if (*(unsigned char *)(a1 + 760))
  {
    mainGroup &= ~1u;
    if (!*(unsigned char *)(a1 + 680))
    {
      uint64_t v5 = *(void *)(a1 + 568) + *(void *)(a1 + 616);
      *(void *)(a1 + 616) = v5;
      *(void *)(a1 + 648) = v5;
      *(unsigned char *)(a1 + 680) = 1;
      _UIUpdateSetCurrentTiming((unint64_t *)(a1 + 616), 0);
    }
    uint64_t v13 = 0;
    int v6 = *(_DWORD *)(a1 + 232);
    long long v4 = schedulerStepScheduledLowLatencySection;
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 648);
      int v8 = *(_DWORD *)(a1 + 684);
      uint64_t v9 = 8 * (v6 - 1) + 240;
      char v10 = 1;
      do
      {
        --v6;
        char v10 = _UIUpdateInputSetReadyForModelTimeCombine(*(void *)(a1 + v9), v7, v8 != 0, 1u, v10 & 1, &v13);
        v9 -= 8;
      }
      while (v6);
      long long v4 = schedulerStepScheduledLowLatencySection;
      if ((v10 & 1) == 0)
      {
        uint64_t v11 = mach_absolute_time();
        long long v4 = schedulerStepScheduledLowLatencySection;
        if (v11 < v13)
        {
          *a2 = v13;
          **(_DWORD **)a1 = 4;
          return schedulerStepIdleWork;
        }
      }
    }
  }
  return (uint64_t (*)())v4;
}

void _UIUpdateSequenceRun(uint64_t **a1, uint64_t a2, double a3)
{
  long long v3 = *a1;
  if (*a1)
  {
    do
    {
      uint64_t v6 = v3[5];
      if (v6)
      {
        *((_DWORD *)v3 + 6) |= 1u;
        (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v6 + 16))(v6, v3[4], a2, a3);
        int v7 = *((_DWORD *)v3 + 6);
        *((_DWORD *)v3 + 6) = v7 & 0xFFFFFFFE;
        int v8 = (uint64_t *)*v3;
        if ((v7 & 2) != 0) {
          _removeItem((_UIUpdateSequenceItemInternal *)v3);
        }
      }
      else
      {
        int v8 = (uint64_t *)*v3;
      }
      long long v3 = v8;
    }
    while (v8);
  }
}

uint64_t __setupUpdateSequence_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if ([MEMORY[0x1E4F39CF8] currentState])
  {
    unint64_t v3 = *(void *)(a2 + 656);
    if (v3) {
      [MEMORY[0x1E4F39CF8] setUpdateDeadline:_UIMediaTimeForMachTime(v3)];
    }
    unint64_t v4 = *(void *)(a2 + 704);
    if (v4) {
      [MEMORY[0x1E4F39CF8] setCommitTime:_UIMediaTimeForMachTime(v4)];
    }
    if (*(unsigned char *)(a2 + 761) && !*(unsigned char *)(a2 + 760) && !*(unsigned char *)(a2 + 762)) {
      [MEMORY[0x1E4F39CF8] setLowLatency:1];
    }
    _UIQOSMarkIntervalRelevant();
  }
  if ((void)xmmword_1EB265718) {
    [MEMORY[0x1E4F39CF8] setFrameInputTime:*(unsigned int *)(a2 + 584) withToken:_UIMediaTimeForMachTime(xmmword_1EB265718)];
  }
  if (*((void *)&xmmword_1EB265718 + 1))
  {
    uint64_t v5 = *(NSObject **)(__UILogGetCategoryCachedImpl("RemoteTimestamp", &performCATransactionCommitAction___s_category)
                      + 8);
    if (os_signpost_enabled(v5))
    {
      int v7 = 134217984;
      uint64_t v8 = *((void *)&xmmword_1EB265718 + 1);
      _os_signpost_emit_with_name_impl(&dword_1853B0000, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "SetRemoteTimestamp", "remoteTime=%llu", (uint8_t *)&v7, 0xCu);
    }
    [MEMORY[0x1E4F39CF8] setRemoteInputMachTime:*((void *)&xmmword_1EB265718 + 1)];
  }
  *(_DWORD *)(a2 + 352) = 0;
  _UIUpdateInputSetInputChanged(*(_DWORD **)(a2 + 400), a2 + 352);
  return _UIApplicationFlushCATransaction(1);
}

double frameSourceGetTiming(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8 = *(void *)(a2 + 560);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 761);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v13 = 0u;
  [(_UIUpdateTarget *)*(void *)(a2 + 552) requestPresentaionForMode:a3 - 1000000000000000 + v8 earliestReferenceDeadlineTime:a4 - 1000000000000000 earliestCommitDeadlineTime:(unint64_t *)&v13];
  uint64_t v10 = *((void *)&v13 + 1);
  *a1 = v13 - v8;
  a1[1] = v10;
  a1[2] = *((void *)&v14 + 1);
  if (_UIUpdateCycleDebugTracingCheck && _UIUpdateCycleDebugTracingCheck()) {
    kdebug_trace();
  }
  long long v11 = v14;
  *a5 = v13;
  a5[1] = v11;
  double result = *(double *)&v15;
  a5[2] = v15;
  return result;
}

uint64_t inputDisplayLinksReadyForModelTimeCallback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  if ([MEMORY[0x1E4F39B68] supportsExpectedWakeupBeforeCommitDeadline])
  {
    [MEMORY[0x1E4F39B68] expectedWakeupBeforeCommitDeadline:_UIMediaTimeForMachTime(a2[83])];
    unint64_t v9 = _UIMachTimeForMediaTime(v8);
    uint64_t v10 = a3;
    if (v9) {
      uint64_t v10 = a2[78];
    }
    *a5 = v10;
    if (_UIUpdateCycleDebugTracingCheck && _UIUpdateCycleDebugTracingCheck()) {
      kdebug_trace();
    }
  }
  else
  {
    *a5 = a2[94] + a3;
  }
  return 0;
}

unint64_t _UIMachTimeForMediaTime(double a1)
{
  if (qword_1EB2621B8 != -1) {
    dispatch_once(&qword_1EB2621B8, &__block_literal_global_46_4);
  }
  return (unint64_t)(*(double *)&qword_1EB2621C0 * a1 + 0.5);
}

uint64_t runloopSourceCallback(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2 != -1 && v2 <= mach_absolute_time()) {
    *(void *)(a1 + 72) = -1;
  }
  uint64_t v7 = -1;
  unint64_t v3 = schedulerStepDispatchState;
  do
  {
    uint64_t result = (uint64_t)v3((int **)a1, (uint64_t *)&v7);
    unint64_t v3 = (uint64_t (*(*)(int **, uint64_t *))())result;
  }
  while (result);
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5 != v7)
  {
    if (v7 == -1)
    {
      if (v5 != -1) {
        uint64_t result = _UIMachTimerCancel((mach_port_t *)(a1 + 32), 1);
      }
    }
    else
    {
      uint64_t result = mk_timer_arm_leeway();
    }
    *(void *)(a1 + 72) = v7;
  }
  int v6 = *(_DWORD *)(*(void *)a1 + 4);
  if (v6) {
    *(_DWORD *)(*(void *)a1 + 4) = v6 & 0xFFFFFFFE;
  }
  return result;
}

uint64_t (*schedulerStepScheduling(uint64_t a1, unint64_t *a2))()
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  int v4 = *(_DWORD *)(*(void *)a1 + 4);
  if ((v4 & 4) == 0) {
    goto LABEL_2;
  }
  *(_DWORD *)(*(void *)a1 + 4) = v4 & 0xFFFFFFFB;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  unsigned int v27 = +[UIScene _unsafeScenesIncludingInternal];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v67 objects:&v77 count:16];
  if (!v28)
  {
    char v30 = 0;
    goto LABEL_62;
  }
  uint64_t v29 = v28;
  char v30 = 0;
  uint64_t v31 = *(void *)v68;
  uint64_t v66 = (uint64_t *)(a1 + 544);
  do
  {
    for (uint64_t i = 0; i != v29; ++i)
    {
      if (*(void *)v68 != v31) {
        objc_enumerationMutation(v27);
      }
      unint64_t v33 = *(void **)(*((void *)&v67 + 1) + 8 * i);
      if ([v33 _hostsWindows])
      {
        uint64_t v34 = [v33 _visibleWindows];
        uint64_t v35 = [v34 count];

        if (v35)
        {
          uint64_t v36 = [v33 _effectiveSettings];
          if ([v33 _hasLifecycle] && !objc_msgSend(v36, "isForeground"))
          {
            uint64_t v37 = v36;
          }
          else
          {
            uint64_t v37 = [v36 displayConfiguration];

            if (!v37) {
              continue;
            }
            unint64_t v38 = [v37 identity];
            int v39 = [v38 displayID];

            uint64_t v40 = (_DWORD *)(a1 + 544);
            while (1)
            {
              uint64_t v40 = *(_DWORD **)v40;
              if (!v40) {
                break;
              }
              if (v40[6] == v39) {
                goto LABEL_56;
              }
            }
            uint64_t v41 = [v37 CADisplay];
            uint64_t v40 = malloc_type_calloc(1uLL, 0x20uLL, 0x10A00405421CD5EuLL);
            float64x2_t v42 = (void *)*((void *)v40 + 2);
            *((void *)v40 + 2) = v41;

            v40[6] = v39;
            uint64_t v43 = *v66;
            *(void *)uint64_t v40 = *v66;
            if (v43) {
              *(void *)(v43 + 8) = v40;
            }
            *uint64_t v66 = (uint64_t)v40;
            *((void *)v40 + 1) = v66;
            char v30 = 1;
LABEL_56:
            v40[7] = 1;
          }
        }
      }
    }
    uint64_t v29 = [v27 countByEnumeratingWithState:&v67 objects:&v77 count:16];
  }
  while (v29);
LABEL_62:

  float64x2_t v44 = *(_DWORD **)(a1 + 544);
  if (v44)
  {
    do
    {
      uint64_t v45 = *(void *)v44;
      if (v44[7])
      {
        v44[7] = 0;
      }
      else
      {
        if (v45) {
          *(void *)(v45 + 8) = *((void *)v44 + 1);
        }
        **((void **)v44 + 1) = v45;
        uint64_t v46 = (void *)*((void *)v44 + 2);
        *((void *)v44 + 2) = 0;

        free(v44);
        char v30 = 1;
      }
      float64x2_t v44 = (_DWORD *)v45;
    }
    while (v45);
  }
  if (v30)
  {
    uint64_t v47 = *(id *)(__UILogGetCategoryCachedImpl("UpdateScheduler", &qword_1EB262098) + 8);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      id v48 = objc_alloc_init(MEMORY[0x1E4F28E78]);
      uint64_t v49 = *(void **)(a1 + 544);
      if (v49)
      {
        int v50 = 0;
        do
        {
          if (v50) {
            id v51 = ", ";
          }
          else {
            id v51 = "";
          }
          [v48 appendFormat:@"%s%@", v51, v49[2]];
          uint64_t v49 = (void *)*v49;
          --v50;
        }
        while (v49);
      }
      *(_DWORD *)buf = 138412290;
      uint64_t v72 = (uint64_t)v48;
      _os_log_impl(&dword_1853B0000, v47, OS_LOG_TYPE_DEFAULT, "Target list changed: %@", buf, 0xCu);
    }
LABEL_80:
    uint64_t v52 = *(void *)(a1 + 544);
    if (v52 && !*(void *)v52)
    {
      id v53 = *(id *)(v52 + 16);
    }
    else
    {
      id v53 = [MEMORY[0x1E4F39B60] mainDisplay];
    }
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)(a1 + 552);
    if (v55) {
      int v56 = *(_DWORD *)(v55 + 24);
    }
    else {
      int v56 = 0;
    }
    if (v56 != [v53 displayId])
    {
      if (v54)
      {
        uint64_t v57 = +[_UIUpdateTarget targetWithCADisplay:]((uint64_t)_UIUpdateTarget, v54);
      }
      else
      {
        uint64_t v57 = 0;
      }
      uint64_t v58 = *(void **)(a1 + 552);
      *(void *)(a1 + 552) = v57;

      id v59 = *(NSObject **)(__UILogGetCategoryCachedImpl("UpdateScheduler", &qword_1EB2620A0) + 8);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v60 = v59;
        id v61 = [v54 name];
        uint64_t v62 = [v61 UTF8String];
        id v63 = [v54 deviceName];
        uint64_t v64 = [v63 UTF8String];
        int v65 = [v54 displayId];
        *(_DWORD *)buf = 136315650;
        uint64_t v72 = v62;
        __int16 v73 = 2080;
        uint64_t v74 = v64;
        __int16 v75 = 1024;
        int v76 = v65;
        _os_log_impl(&dword_1853B0000, v60, OS_LOG_TYPE_DEFAULT, "Selected display: name=%s (%s), id=%x", buf, 0x1Cu);
      }
    }
  }
  else if (!*(void *)(a1 + 552))
  {
    goto LABEL_80;
  }
LABEL_2:
  applyRequestRegistryChanges(a1);
  mainGroup &= ~1u;
  uint64_t result = (uint64_t (*)())_UIUpdateInputScopeAggregate(a1 + 176, *(_DWORD *)(a1 + 684));
  int v6 = *(_DWORD *)result;
  if (*(_DWORD *)result == 2)
  {
    uint64_t v10 = result;
    applyTimingChanges((uint64_t *)a1);
    uint64_t v11 = mach_absolute_time() + 1000000000000000;
    unint64_t v12 = *((void *)v10 + 1);
    if (*(unsigned char *)(a1 + 760))
    {
      unint64_t v13 = *((void *)v10 + 3);
      unint64_t v14 = *(void *)(a1 + 568);
      if (v13 >= v14) {
        unint64_t v14 = 0;
      }
      unint64_t v15 = v13 - v14;
      if (v12 >= v15) {
        unint64_t v12 = v15;
      }
    }
    unint64_t v16 = v12 + 1000000000000000;
    unint64_t v17 = v12 + 1000000000000000 + *(void *)(a1 + 560) - *(void *)(a1 + 712);
    if (v11 >= v17)
    {
      uint64_t v19 = *(void *)(a1 + 552);
      if (!v19 || !*(unsigned char *)(v19 + 28)) {
        -[_UIUpdateTarget start](v19);
      }
      if (*(void *)(a1 + 592) && v16 <= *(void *)(a1 + 600) + 1000000000000000 + *(void *)(a1 + 744)) {
        unint64_t v16 = *(void *)(a1 + 600) + 1000000000000000 + *(void *)(a1 + 744);
      }
      uint64_t v20 = *(void *)(a1 + 576) + v11;
      long long v78 = 0u;
      long long v79 = 0u;
      long long v77 = 0u;
      long long v67 = 0uLL;
      *(void *)&long long v68 = 0;
      frameSourceGetTiming(&v67, a1, v16, v20, &v77);
      uint64_t v21 = v77;
      if (v11 >= (uint64_t)v77 + 1000000000000000 - *(void *)(a1 + 712))
      {
        *(_OWORD *)(a1 + 616) = v67;
        *(void *)(a1 + 632) = v68;
        *(_DWORD *)(a1 + 640) = 1;
        uint64_t v22 = v78;
        *(void *)(a1 + 696) = *((void *)&v79 + 1);
        *(void *)(a1 + 704) = v22;
        *(void *)(a1 + 648) = *(void *)(a1 + 616);
        *(_OWORD *)(a1 + 664) = *(_OWORD *)(a1 + 624);
        *(void *)(a1 + 656) = v21;
        *(_WORD *)(a1 + 680) = 0;
        *(void *)(a1 + 688) = *(void *)(a1 + 592);
        _UIUpdateSetCurrentTiming((unint64_t *)(a1 + 616), 1);
        unint64_t v23 = *(void *)(a1 + 664);
        double v24 = _UIMediaTimeForMachTime(*(void *)(a1 + 648));
        *(_DWORD *)(a1 + 584) = [MEMORY[0x1E4F39CF8] startFrameWithReason:35 beginTime:v24 commitDeadline:_UIMediaTimeForMachTime(v23)];
        return (uint64_t (*)())schedulerStepScheduledBegin;
      }
      unint64_t v18 = v77 - *(void *)(a1 + 712);
    }
    else
    {
      unint64_t v18 = v17 - 1000000000000000;
    }
    if (v18 < *a2) {
      *a2 = v18;
    }
    goto LABEL_34;
  }
  if (v6 == 1)
  {
    uint64_t v9 = *(void *)(a1 + 552);
    if (!v9 || !*(unsigned char *)(v9 + 28)) {
      -[_UIUpdateTarget start](v9);
    }
    goto LABEL_33;
  }
  if (!v6)
  {
    uint64_t v7 = *(void *)(a1 + 552);
    if (v7 && *(unsigned char *)(v7 + 28))
    {
      uint64_t v8 = *(void *)(a1 + 696);
      if (v8)
      {
        if (mach_absolute_time() < v8)
        {
          *a2 = v8;
          goto LABEL_33;
        }
        uint64_t v7 = *(void *)(a1 + 552);
      }
      -[_UIUpdateTarget stop](v7);
      *(_DWORD *)(a1 + 640) = 0;
      *(void *)(a1 + 696) = 0;
    }
LABEL_33:
    uint64_t v26 = mach_absolute_time();
    unint64_t v18 = *(void *)(a1 + 608);
    if (v26 < v18) {
LABEL_34:
    }
      _UIUpdateMainStats = v18;
    **(_DWORD **)a1 = 2;
    return schedulerStepIdleWork;
  }
  return result;
}

double _UIMediaTimeForMachTime(unint64_t a1)
{
  if (qword_1EB2621B8 != -1) {
    dispatch_once(&qword_1EB2621B8, &__block_literal_global_46_4);
  }
  return (double)a1 / *(double *)&qword_1EB2621C0;
}

uint64_t applyRequestRegistryChanges(uint64_t result)
{
  int v1 = *(_DWORD *)(*(void *)result + 4);
  if ((v1 & 2) == 0) {
    return result;
  }
  uint64_t v2 = result;
  *(_DWORD *)(*(void *)result + 4) = v1 & 0xFFFFFFFD;
  int v3 = mainRegistry;
  if ((mainRegistry & 2) != 0)
  {
    mainRegistry &= ~2u;
    *(_DWORD *)(result + 256) = 2 * (dword_1EB2656EC != 0);
    _UIUpdateInputSetInputChanged(*(_DWORD **)(result + 304), result + 256);
    int v3 = mainRegistry;
    if ((mainRegistry & 4) == 0)
    {
LABEL_5:
      if ((v3 & 0x10) == 0) {
        goto LABEL_6;
      }
      goto LABEL_33;
    }
  }
  else if ((mainRegistry & 4) == 0)
  {
    goto LABEL_5;
  }
  v3 &= ~4u;
  mainRegistrdouble y = v3;
  BOOL v18 = dword_1EB2656F0 != 0;
  *(unsigned char *)(v2 + 760) = v18;
  *(_DWORD *)(v2 + 684) = v18;
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x80) == 0) {
      goto LABEL_7;
    }
LABEL_34:
    v3 &= ~0x80u;
    mainRegistrdouble y = v3;
    *(unsigned char *)(v2 + 762) = dword_1EB2656F8 != 0;
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_35:
    mainRegistrdouble y = v3 & 0xFFFFFFDF;
    if (qword_1EB2656D0) {
      uint64_t v19 = (_DWORD *)qword_1EB2656D0;
    }
    else {
      uint64_t v19 = &unk_1EB2656D8;
    }
    unint64_t v20 = (unsigned __int16)word_1EB2656DE;
    if (_UIUpdateCycleDebugTracingCheck && _UIUpdateCycleDebugTracingCheck())
    {
      unint64_t v24 = 0;
      memset(v28, 0, sizeof(v28));
      unsigned __int8 v25 = emitUpdateReasonsTracepoint_serial++;
      LODWORD(v28[0]) = v25;
      uint64_t v26 = 1;
      while (1)
      {
        if (v24 >= v20) {
          int v27 = 0;
        }
        else {
          int v27 = v19[v24++];
        }
        *((_DWORD *)v28 + v26++) = v27;
        if (v26 == 8)
        {
          kdebug_trace();
          uint64_t v26 = 1;
          if (v24 >= v20) {
            break;
          }
        }
      }
    }
    uint64_t v21 = *(void *)(v2 + 552);
    if (v21) {
      [*(id *)(v21 + 16) setHighFrameRateReasons:v19 count:v20];
    }
    goto LABEL_8;
  }
LABEL_33:
  v3 &= ~0x10u;
  mainRegistrdouble y = v3;
  *(unsigned char *)(v2 + 761) = dword_1EB2656F4 != 0;
  if ((v3 & 0x80) != 0) {
    goto LABEL_34;
  }
LABEL_7:
  if ((v3 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_8:
  uint64_t result = _UIVariableFrameDurationEnabled();
  if (result && (mainRegistry & 0x40) != 0)
  {
    mainRegistry &= ~0x40u;
    uint64_t result = _UIUpdateRequestRegistryArbitratedRateRange((uint64_t)&mainRegistry);
    float v7 = *(float *)&v4;
    float v8 = v5;
    if (v5 == 0.0) {
      float v9 = 120.0;
    }
    else {
      float v9 = v5;
    }
    if (v9 < *(float *)&v6) {
      float v10 = v9;
    }
    else {
      float v10 = *(float *)&v6;
    }
    float v11 = 60.0;
    if (v9 <= 60.0) {
      float v11 = v9;
    }
    if (*(float *)&v6 == 0.0) {
      float v12 = v11;
    }
    else {
      float v12 = v10;
    }
    float v13 = 30.0;
    if (v12 <= 30.0) {
      float v13 = v12;
    }
    HIDWORD(v14) = 0;
    if (v12 < v7 || v7 == 0.0) {
      float v16 = v13;
    }
    else {
      float v16 = v7;
    }
    if (v7 <= 0.0)
    {
      uint64_t v17 = -1;
    }
    else
    {
      uint64_t result = _UIMachDurationForMediaDuration(1.0 / v7);
      uint64_t v17 = result;
    }
    if (v8 <= 0.0)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t result = _UIMachDurationForMediaDuration(1.0 / v8);
      uint64_t v22 = result;
    }
    if (_UIUpdateCycleDebugTracingCheck)
    {
      uint64_t result = _UIUpdateCycleDebugTracingCheck();
      if (result) {
        uint64_t result = kdebug_trace();
      }
    }
    uint64_t v23 = *(void *)(v2 + 552);
    if (v23)
    {
      *(float *)&double v4 = v16;
      *(float *)&double v14 = v9;
      *(float *)&double v6 = v12;
      uint64_t result = objc_msgSend(*(id *)(v23 + 16), "setPreferredFrameRateRange:", v4, v14, v6);
    }
    *(void *)(v2 + 720) = v17;
    *(void *)(v2 + 728) = v22;
  }
  return result;
}

uint64_t _UIUpdateInputScopeAggregate(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 16);
  if (v4 == *(void *)a1)
  {
    if (*(_DWORD *)(a1 + 48) == a2) {
      return a1 + 16;
    }
  }
  else
  {
    *(void *)a1 = v4;
  }
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 48) = a2;
  *(_DWORD *)(a1 + 32) = 0;
  int v5 = *(_DWORD *)(a1 + 56);
  if (v5)
  {
    unsigned int v6 = v5 - 1;
    do
    {
      uint64_t v7 = v6;
      float v8 = *(int **)(a1 + 8 * v6 + 64);
      _UIUpdateInputSetSyncAggregate(v8, a2);
      _UIUpdateInputAggregateCombine((int *)(a1 + 16), (uint64_t)(v8 + 2));
      --v6;
    }
    while (v7);
  }
  return a1 + 16;
}

int *_UIUpdateInputSetSyncAggregate(int *result, unsigned int a2)
{
  if (result[10] != a2)
  {
    int v3 = result + 2;
    result[10] = a2;
    result[2] = 0;
    result[6] = 0;
    for (uint64_t i = *((void *)result + 9); i; uint64_t i = *(void *)(i + 56))
      _UIUpdateInputAggregateInput((uint64_t)v3, (int *)i, a2);
    return _UIUpdateInputAggregateComplete(v3);
  }
  return result;
}

uint64_t _UIUpdateInputAggregateInput(uint64_t result, int *a2, unsigned int a3)
{
  int v3 = *a2;
  if (*a2)
  {
    if (v3 == 2)
    {
      unint64_t v4 = *((void *)a2 + 1) + *(void *)&a2[2 * a3 + 8];
      if (a2[6]) {
        uint64_t v5 = result + 16;
      }
      else {
        uint64_t v5 = result;
      }
      int v6 = *(_DWORD *)(result + 16 * (a2[6] & 1));
      goto LABEL_14;
    }
    if (a2[6]) {
      uint64_t v5 = result + 16;
    }
    else {
      uint64_t v5 = result;
    }
    int v6 = *(_DWORD *)(result + 16 * (a2[6] & 1));
    if (v3 != 1)
    {
      unint64_t v4 = 0;
LABEL_14:
      if (v6 == 2)
      {
        if (v4 < *(void *)(v5 + 8)) {
          *(void *)(v5 + 8) = v4;
        }
      }
      else
      {
        *(void *)(v5 + 8) = v4;
        *(_DWORD *)uint64_t v5 = 2;
      }
      return result;
    }
    if (!v6) {
      *(_DWORD *)(result + 16 * (a2[6] & 1)) = 1;
    }
  }
  return result;
}

int *_UIUpdateInputAggregateCombine(int *result, uint64_t a2)
{
  if (*(_DWORD *)a2)
  {
    int v2 = *result;
    if (*(_DWORD *)a2 == 1)
    {
      if (v2) {
        goto LABEL_10;
      }
      int v3 = 1;
      goto LABEL_9;
    }
    unint64_t v4 = *(void *)(a2 + 8);
    if (v2 != 2)
    {
      *((void *)result + 1) = v4;
      int v3 = 2;
LABEL_9:
      *uint64_t result = v3;
      goto LABEL_10;
    }
    if (v4 < *((void *)result + 1)) {
      *((void *)result + 1) = v4;
    }
  }
LABEL_10:
  if (!*(_DWORD *)(a2 + 16)) {
    return result;
  }
  int v5 = result[4];
  if (*(_DWORD *)(a2 + 16) == 1)
  {
    if (v5) {
      return result;
    }
    int v7 = 1;
LABEL_19:
    result[4] = v7;
    return result;
  }
  unint64_t v6 = *(void *)(a2 + 24);
  if (v5 != 2)
  {
    *((void *)result + 3) = v6;
    int v7 = 2;
    goto LABEL_19;
  }
  if (v6 < *((void *)result + 3)) {
    *((void *)result + 3) = v6;
  }
  return result;
}

uint64_t (*schedulerStepDispatchState(int **a1, uint64_t *a2))()
{
  *a2 = -1;
  int v2 = **a1;
  switch(v2)
  {
    case 4:
      return schedulerStepScheduledWaitingLowLatencyInputs((uint64_t)a1, a2);
    case 3:
      return schedulerStepScheduledWaitingMainInputs((uint64_t)a1, a2);
    case 2:
      return schedulerStepScheduling((uint64_t)a1, a2);
  }
  return 0;
}

uint64_t schedulerStepIdleWork()
{
  return 0;
}

uint64_t (*schedulerStepScheduledWaitingMainInputs(uint64_t a1, uint64_t *a2))()
{
  applyRequestRegistryChanges(a1);
  mainGroup &= ~1u;
  if (*(_DWORD *)(a1 + 764))
  {
    **(_DWORD **)a1 = 3;
    _UIUpdateMainStats = mach_absolute_time();
    return schedulerStepIdleWork;
  }
  else
  {
    uint64_t v13 = 0;
    int v5 = *(_DWORD *)(a1 + 232);
    unint64_t v4 = schedulerStepScheduledMainSection;
    if (!v5) {
      goto LABEL_9;
    }
    uint64_t v6 = *(void *)(a1 + 648);
    unsigned int v7 = *(_DWORD *)(a1 + 684);
    uint64_t v8 = 8 * (v5 - 1) + 240;
    char v9 = 1;
    do
    {
      --v5;
      char v9 = _UIUpdateInputSetReadyForModelTimeCombine(*(void *)(a1 + v8), v6, 0, v7, v9 & 1, &v13);
      v8 -= 8;
    }
    while (v5);
    unint64_t v4 = schedulerStepScheduledMainSection;
    if ((v9 & 1) != 0 || (v10 = mach_absolute_time(), v11 = v13, unint64_t v4 = schedulerStepScheduledMainSection, v10 >= v13))
    {
LABEL_9:
      uint64_t v11 = 0;
    }
    else
    {
      *a2 = v13;
      **(_DWORD **)a1 = 3;
      unint64_t v4 = schedulerStepIdleWork;
    }
    _UIUpdateMainStats = v11;
  }
  return (uint64_t (*)())v4;
}

uint64_t _UIUpdateInputSetReadyForModelTimeCombine(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, unint64_t *a6)
{
  if (*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 0;
    unsigned int v10 = *(_DWORD *)(a1 + 68) + 1;
    uint64_t v11 = malloc_type_realloc(*(void **)(a1 + 48), 16 * v10, 0x2004093837F09uLL);
    float v12 = &v11[v10];
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    for (uint64_t i = *(void *)(a1 + 72); i; uint64_t i = *(void *)(i + 56))
    {
      if (*(void *)(i + 72))
      {
        *v11++ = i;
        if (*(unsigned char *)(i + 24)) {
          *v12++ = i;
        }
      }
    }
    *uint64_t v11 = 0;
    *float v12 = 0;
  }
  double v14 = *(uint64_t **)(a1 + 48);
  if (v14)
  {
    if (a3) {
      double v14 = *(uint64_t **)(a1 + 56);
    }
    uint64_t v15 = *v14;
    if (*v14)
    {
      float v16 = v14 + 1;
      do
      {
        unint64_t v25 = 0;
        uint64_t v17 = *(void *)(v15 + 8 * a4 + 32);
        if ((unint64_t)(a2 - v17) <= *(void *)(v15 + 16)) {
          char v18 = 1;
        }
        else {
          char v18 = (*(uint64_t (**)(uint64_t, void, uint64_t, void, unint64_t *))(v15 + 72))(v15, *(void *)(v15 + 80), a2 - v17, a4, &v25);
        }
        if (_UIUpdateCycleDebugTracingCheck)
        {
          int v20 = _UIUpdateCycleDebugTracingCheck();
          if (v20)
          {
            int v22 = v20;
            strncpy(__dst, *(const char **)(v15 + 88), 8uLL);
            kdebug_trace();
            if (v22 != 1) {
              getppid();
            }
          }
        }
        if ((v18 & 1) == 0 && ((a5 & 1) != 0 || *a6 < v25))
        {
          LOBYTE(a5) = 0;
          *a6 = v25;
        }
        uint64_t v19 = *v16++;
        uint64_t v15 = v19;
      }
      while (v19);
    }
    return a5 & 1;
  }
  return a5;
}

uint64_t _UIUpdateHIDDigitizerReadyForModelTime(uint64_t a1, uint64_t a2, unint64_t a3, int a4, unint64_t *a5)
{
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  if (!a2) {
    return 0;
  }
  unsigned int v7 = *(void **)(a2 + 104);
  uint64_t v8 = 10;
  if (!*(unsigned char *)(a2 + 160)) {
    uint64_t v8 = 9;
  }
  uint64_t v9 = v7[v8];
  if (v9)
  {
    if (*(unsigned char *)(v9 + 8))
    {
      uint64_t v11 = *(void *)(a2 + 152);
      unint64_t v12 = v7[7];
      unint64_t v13 = a3 - (*(void *)(a2 + 136) + v11);
      if ((v13 & 0x8000000000000000) != 0)
      {
        unint64_t v14 = -(uint64_t)((*(void *)(a2 + 136) + v11 - a3) / v12);
      }
      else if (v13 % v12)
      {
        unint64_t v14 = v13 / v12 + 1;
      }
      else
      {
        unint64_t v14 = v13 / v12;
      }
      unint64_t v25 = v7[8];
      unint64_t v26 = v25 / v12;
      if ((v14 & 0x8000000000000000) != 0)
      {
        uint64_t v27 = -(uint64_t)(-(uint64_t)v14 / v26);
      }
      else if (v14 % v26)
      {
        uint64_t v27 = v14 / v26 + 1;
      }
      else
      {
        uint64_t v27 = v14 / v26;
      }
      unint64_t v28 = v11 + v27 * v25;
      *a5 = v28 + *(void *)(a2 + 144);
      if (!_UIUpdateCycleDebugTracingCheck) {
        return 0;
      }
      uint64_t result = _UIUpdateCycleDebugTracingCheck();
      if (result)
      {
        uint64_t v29 = mach_absolute_time();
        char v30 = *(NSObject **)(__UILogGetCategoryCachedImpl("EventBus", &qword_1EB262EE8) + 8);
        uint64_t result = os_signpost_enabled(v30);
        if (result)
        {
          *(_OWORD *)uint64_t v45 = 0u;
          long long v46 = 0u;
          long long v47 = 0u;
          uint64_t v31 = v30;
          uint64_t v32 = _UIMachTimeDebugDescriptionCopyCStr(a3, v29, (char *)v45, 0x30uLL);
          unint64_t v33 = *a5;
          memset(buf, 0, sizeof(buf));
          uint64_t v34 = _UIMachTimeDebugDescriptionCopyCStr(v33, v29, (char *)buf, 0x30uLL);
          unint64_t v35 = *(void *)(a2 + 152);
          memset(v43, 0, sizeof(v43));
          uint64_t v36 = _UIMachTimeDebugDescriptionCopyCStr(v35, v29, (char *)v43, 0x30uLL);
          memset(v42, 0, sizeof(v42));
          uint64_t v37 = _UIMachTimeDebugDescriptionCopyCStr(v28, v29, (char *)v42, 0x30uLL);
          double v38 = _UIMediaDurationForMachDuration(*(void *)(a2 + 144));
          *(_DWORD *)id v48 = 136316162;
          *(void *)&v48[4] = v32;
          *(_WORD *)&v48[12] = 2080;
          *(void *)&v48[14] = v34;
          *(_WORD *)&v48[22] = 2080;
          *(void *)&v48[24] = v36;
          *(_WORD *)uint64_t v49 = 2080;
          *(void *)&v49[2] = v37;
          *(_WORD *)&v49[10] = 2048;
          *(double *)&v49[12] = v38;
          _os_signpost_emit_with_name_impl(&dword_1853B0000, v31, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "HIDDigitizerInputReady", "modelTime=%s, readyTime=%s, eventPhaseTime=%s, nextEventTime=%s, deadline=%.06f", v48, 0x34u);

          return 0;
        }
      }
    }
    else
    {
      uint64_t v16 = *(void *)v9 - *v7;
      if (a4 == 1) {
        v16 += v7[5];
      }
      *a5 = v16 + a3;
      if (!_UIUpdateCycleDebugTracingCheck) {
        return 0;
      }
      uint64_t result = _UIUpdateCycleDebugTracingCheck();
      if (result)
      {
        uint64_t v17 = mach_absolute_time();
        char v18 = *(NSObject **)(__UILogGetCategoryCachedImpl("EventBus", &qword_1EB262EF0) + 8);
        uint64_t result = os_signpost_enabled(v18);
        if (result)
        {
          memset(v48, 0, sizeof(v48));
          *(_OWORD *)uint64_t v49 = 0u;
          uint64_t v19 = v18;
          int v20 = _UIMachTimeDebugDescriptionCopyCStr(a3, v17, (char *)v48, 0x30uLL);
          unint64_t v21 = *a5;
          *(_OWORD *)uint64_t v45 = 0u;
          long long v46 = 0u;
          long long v47 = 0u;
          int v22 = _UIMachTimeDebugDescriptionCopyCStr(v21, v17, (char *)v45, 0x30uLL);
          int v23 = *(unsigned __int8 *)(a2 + 160);
          double v24 = _UIMediaDurationForMachDuration(*(void *)v9);
          *(_DWORD *)buf = 136315906;
          *(void *)&uint8_t buf[4] = v20;
          *(_WORD *)&buf[12] = 2080;
          *(void *)&buf[14] = v22;
          *(_WORD *)&buf[22] = 1024;
          *(_DWORD *)&buf[24] = v23;
          *(_WORD *)&buf[28] = 2048;
          *(double *)&buf[30] = v24;
          _os_signpost_emit_with_name_impl(&dword_1853B0000, v19, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "HIDDigitizerInputReady", "modelTime=%s, ready=0, readyTime=%s, expecting=%u, deadline=%.06f", buf, 0x26u);

          return 0;
        }
      }
    }
  }
  else
  {
    if (_UIUpdateCycleDebugTracingCheck)
    {
      if (_UIUpdateCycleDebugTracingCheck())
      {
        uint64_t v39 = mach_absolute_time();
        uint64_t v40 = *(NSObject **)(__UILogGetCategoryCachedImpl("EventBus", &_MergedGlobals_1224) + 8);
        if (os_signpost_enabled(v40))
        {
          memset(v48, 0, sizeof(v48));
          *(_OWORD *)uint64_t v49 = 0u;
          uint64_t v41 = v40;
          *(_DWORD *)uint64_t v45 = 136315138;
          *(void *)&v45[4] = _UIMachTimeDebugDescriptionCopyCStr(a3, v39, (char *)v48, 0x30uLL);
          _os_signpost_emit_with_name_impl(&dword_1853B0000, v41, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "HIDDigitizerInputReady", "modelTime=%s, ready=1", v45, 0xCu);
        }
      }
    }
    return 1;
  }
  return result;
}

double applyTimingChanges(uint64_t *a1)
{
  -[_UIUpdateTarget sync](a1[69]);
  uint64_t v2 = a1[69];
  if (v2) {
    unint64_t v3 = *(void *)(v2 + 40);
  }
  else {
    unint64_t v3 = 0;
  }
  if (_UIVariableFrameDurationEnabled() && !word_1EB2656DE)
  {
    unint64_t v4 = -[_UIUpdateTarget syncedRequestedMaxFrameDuration](a1[69]);
    unint64_t v5 = a1[90];
    if (v4 < v5) {
      unint64_t v5 = v4;
    }
    if (v5 >= a1[92]) {
      unint64_t v5 = a1[92];
    }
    if (v5 > v3) {
      unint64_t v3 = v5;
    }
  }
  a1[70] = v3;
  a1[71] = v3 >> 1;
  if (qword_1EB2620B8 != -1) {
    dispatch_once(&qword_1EB2620B8, &__block_literal_global_35_1);
  }
  a1[72] = qword_1EB2620B0;
  double result = (double)v3 * 1.75;
  a1[89] = (unint64_t)result;
  return result;
}

uint64_t _UIVariableFrameDurationEnabled()
{
  if (qword_1EB2621A0 != -1) {
    dispatch_once(&qword_1EB2621A0, &__block_literal_global_2_14);
  }
  return byte_1EB262189;
}

int *_UIUpdateInputAggregateComplete(int *result)
{
  if (result[4])
  {
    int v1 = *result;
    if (result[4] == 1)
    {
      if (v1) {
        return result;
      }
      int v3 = 1;
LABEL_10:
      *double result = v3;
      return result;
    }
    unint64_t v2 = *((void *)result + 3);
    if (v1 != 2)
    {
      *((void *)result + 1) = v2;
      int v3 = 2;
      goto LABEL_10;
    }
    if (v2 < *((void *)result + 1)) {
      *((void *)result + 1) = v2;
    }
  }
  return result;
}

uint64_t (*(*schedulerStepScheduledBegin(uint64_t a1))(uint64_t a1, uint64_t *a2))()
{
  if ((uint64_t *)_UIUpdateScheduledSequence != &_UIUpdateSequenceScheduledItemInternal
    || _UIUpdateSequenceScheduledItemInternal != 0)
  {
    double v3 = _UIMediaTimeForMachTime(*(void *)(a1 + 648));
    if (_UIUpdateCycleDebugTracingCheck && _UIUpdateCycleDebugTracingCheck())
    {
      kdebug_trace();
      _UIUpdateSequenceRun((uint64_t **)&_UIUpdateScheduledSequence, a1 + 616, v3);
      kdebug_trace();
    }
    else
    {
      _UIUpdateSequenceRun((uint64_t **)&_UIUpdateScheduledSequence, a1 + 616, v3);
    }
  }
  return schedulerStepScheduledWaitingMainInputs;
}

double _UIUpdateSetCurrentTiming(unint64_t *a1, int a2)
{
  if (!dword_1EB26218C || (int v3 = dword_1EB262190 - 1, a2))
  {
    if (dword_1EB26218C <= 3) {
      ++dword_1EB26218C;
    }
    int v3 = dword_1EB262190 & 3;
    dword_1EB262190 = v3 + 1;
  }
  kdebug_trace();
  unint64_t v4 = &_MergedGlobals_1183[24 * v3];
  long long v5 = *(_OWORD *)a1;
  *((void *)v4 + 16) = a1[2];
  *((_OWORD *)v4 + 7) = v5;
  unint64_t v6 = *a1;
  qword_1EB2621A8 = v6;
  if (qword_1EB2621B8 != -1) {
    dispatch_once(&qword_1EB2621B8, &__block_literal_global_46_4);
  }
  double result = (double)v6 / *(double *)&qword_1EB2621C0;
  *(double *)&_currentModelMediaTime = result;
  return result;
}

uint64_t __setupUpdateSequence_block_invoke(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 448) = 0;
  _UIUpdateInputSetInputChanged(*(_DWORD **)(a2 + 496), a2 + 448);
  unint64_t v2 = (void *)MEMORY[0x1E4F39B68];
  return [v2 dispatchDeferredDisplayLinks];
}

uint64_t _UIUpdateInputSetInputChanged(_DWORD *a1, uint64_t a2)
{
  if (_UIUpdateCycleDebugTracingCheck)
  {
    int v6 = _UIUpdateCycleDebugTracingCheck();
    if (v6)
    {
      int v7 = v6;
      strncpy(__dst, *(const char **)(a2 + 88), 8uLL);
      kdebug_trace();
      if (v7 != 1) {
        getppid();
      }
    }
  }
  a1[10] = 2;
  uint64_t result = *(void *)a1;
  *(void *)(result + 16) = *(void *)(*(void *)a1 + 16) + 1;
  int v4 = *(_DWORD *)result | 1;
  if (*(_DWORD *)result != v4)
  {
    *(_DWORD *)uint64_t result = v4;
    if (!*(_DWORD *)(result + 8)) {
      return (*(uint64_t (**)(uint64_t, void))(result + 24))(result, *(void *)(result + 32));
    }
  }
  return result;
}

void signalChanges(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = v2 | a2 | 1;
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v3 + 16));
    int v4 = *(__CFRunLoop **)(v3 + 8);
    CFRunLoopWakeUp(v4);
  }
}

void inputGroupSignaledCallback(uint64_t a1, uint64_t a2)
{
}

void updateCycleEntry(void *a1)
{
  int v2 = a1;
  int v1 = +[_UIEventBus instance]();
  -[_UIEventBus drainEvents:]((uint64_t)v1, *(void *)(v2[1] + 16));

  if ([*(id *)(v2[1] + 16) count])
  {
    [*(id *)(v2[1] + 16) count];
    kdebug_trace();
    __processEventQueue(v2[1], -1);
    [*(id *)(v2[1] + 16) count];
    kdebug_trace();
  }
}

uint64_t _UIUpdateInputGroupBatchChanges(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v3 + 1;
  if (!v3) {
    *(_DWORD *)(a1 + 4) = *(_DWORD *)a1;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
  int v5 = *(_DWORD *)(a1 + 8) - 1;
  *(_DWORD *)(a1 + 8) = v5;
  if (!v5 && (*(_DWORD *)a1 & ~*(_DWORD *)(a1 + 4)) != 0)
  {
    int v7 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 32);
    return v7(a1, v6);
  }
  return result;
}

uint64_t (*schedulerStepScheduledMainSection(uint64_t a1))()
{
  char v2 = *(unsigned char *)(a1 + 761);
  if (v2) {
    char v2 = *(unsigned char *)(a1 + 760) == 0;
  }
  *(unsigned char *)(a1 + 681) = v2;
  double v3 = _UIMediaTimeForMachTime(*(void *)(a1 + 648));
  uint64_t v4 = mach_absolute_time();
  _UIQOSProcessingBegin("UIUCMain", 0, v4, *(void *)(a1 + 664));
  kdebug_trace();
  qword_1EB265728 = v4;
  _UIUpdateSequenceRun((uint64_t **)&_UIUpdateMainSequence, a1 + 616, v3);
  kdebug_trace();
  _UIQOSProcessingEnd();
  return schedulerStepScheduledWaitingLowLatencyInputs;
}

uint64_t _UIQOSProcessingBegin(char *__src, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  _MergedGlobals_1301 = 0;
  if (qword_1EB264D98 == -1)
  {
    if (a3) {
      goto LABEL_5;
    }
  }
  else
  {
    dispatch_once(&qword_1EB264D98, &__block_literal_global_7_3);
    if (v5) {
      goto LABEL_5;
    }
  }
  uint64_t v5 = _MergedGlobals_1301;
  if (!_MergedGlobals_1301)
  {
    uint64_t v5 = mach_absolute_time();
    _MergedGlobals_1301 = v5;
  }
LABEL_5:
  if (!a4) {
    a4 = qword_1EB264DB0 + v5;
  }
  if (qword_1EB264D88 != -1) {
    dispatch_once(&qword_1EB264D88, &__block_literal_global_616);
  }
  unint64_t v8 = qword_1EB264D90 + a4;
  uint64_t v9 = ++qword_1EB264D80;
  if (!dword_1EB264DA8++)
  {
    if (!_MergedGlobals_1301) {
      _MergedGlobals_1301 = mach_absolute_time();
    }
    strncpy(__dst, __src, 8uLL);
    _tracepointArg4((uint64_t)&qword_1EB264DA0);
    kdebug_trace();
    if (!(_BYTE)word_1EB264DD8)
    {
      qword_1EB264DB8 = v5;
      qword_1EB264DC0 = v8;
      qword_1EB264DE0 |= a2;
      if (CFDictionaryGetCount((CFDictionaryRef)qword_1EB264DA0)) {
        _beginInterval();
      }
      return v9;
    }
  }
  if (qword_1EB264DB8 > v5)
  {
    uint64_t v11 = __src;
    uint64_t v12 = a2;
    qword_1EB264DB8 = v5;
    if (qword_1EB264DC0 <= v8)
    {
LABEL_19:
      unint64_t v13 = (char *)v11;
      strncpy(__dst, v11, 8uLL);
      _tracepointArg4((uint64_t)&qword_1EB264DA0);
      kdebug_trace();
      a2 = v12;
      __src = v13;
      if ((_BYTE)word_1EB264DD8)
      {
        work_interval_instance_set_start();
        work_interval_instance_set_deadline();
        _adjustOptions(v13, a2);
LABEL_22:
        work_interval_instance_update();
        return v9;
      }
      goto LABEL_21;
    }
LABEL_18:
    qword_1EB264DC0 = v8;
    goto LABEL_19;
  }
  if (qword_1EB264DC0 > v8)
  {
    uint64_t v11 = __src;
    uint64_t v12 = a2;
    goto LABEL_18;
  }
LABEL_21:
  if (_adjustOptions(__src, a2)) {
    goto LABEL_22;
  }
  return v9;
}

unint64_t _tracepointArg4(uint64_t a1)
{
  unint64_t v1 = (unsigned __int16)((*(_DWORD *)(a1 + 64) << 8) | *(unsigned __int8 *)(a1 + 56) | (unsigned __int16)(2 * *(unsigned __int8 *)(a1 + 57)) | (4 * *(unsigned __int8 *)(a1 + 12))) | ((unint64_t)*(_DWORD *)(a1 + 8) << 16);
  return v1 | (CFDictionaryGetCount(*(CFDictionaryRef *)a1) << 24);
}

uint64_t _UIApplicationFlushCATransaction(int a1)
{
  if (!UIApp)
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"void _UIApplicationFlushCATransaction(const BOOL)"];
    [v4 handleFailureInFunction:v5 file:@"UIApplication.m" lineNumber:3320 description:@"Requires UIApplication instance"];
  }
  if (a1) {
    [MEMORY[0x1E4F39CF8] flushAsRunLoopObserver];
  }
  else {
    [MEMORY[0x1E4F39CF8] flush];
  }
  uint64_t result = _cleanUpAfterCAFlushAndRunDeferredBlocks((void *)UIApp, 1);
  if (result)
  {
    [MEMORY[0x1E4F39CF8] flush];
    double v3 = (void *)UIApp;
    return _cleanUpAfterCAFlushAndRunDeferredBlocks(v3, 0);
  }
  return result;
}

uint64_t _cleanUpAfterCAFlushAndRunDeferredBlocks(void *a1, int a2)
{
  id v3 = a1;
  if (pthread_main_np() != 1)
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    int v7 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _cleanUpAfterCAFlushAndRunDeferredBlocks(UIApplication *__strong, BOOL)");
    [v6 handleFailureInFunction:v7 file:@"UIApplication.m" lineNumber:3255 description:@"Call must be made on main thread"];
  }
  __caCommitState = 0;
  +[UIWindow _checkPreCommitHandlersAfterCAFlush]();
  uint64_t v4 = 0;
  if (a2) {
    uint64_t v4 = _runAfterCACommitDeferredBlocks(v3);
  }
  __UIApplicationLastCAFlushTime = CFAbsoluteTimeGetCurrent();

  return v4;
}

uint64_t _runAfterCACommitDeferredBlocks(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = a1;
  uint64_t v2 = [v1[12] count];
  if (v2)
  {
    id v3 = (void *)[v1[12] copy];
    [v1[12] removeAllObjects];
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v4 = v3;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v13;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v13 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v8++), "run", (void)v12);
        }
        while (v6 != v8);
        uint64_t v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v6);
    }
  }
  unsigned int v9 = objc_msgSend((id)qword_1EB25B5B0, "flush", (void)v12);
  if (v2) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = v9;
  }

  return v10;
}

uint64_t (*(*schedulerStepScheduledDone(uint64_t a1))(uint64_t a1, unint64_t *a2))()
{
  [MEMORY[0x1E4F39CF8] finishFrameWithToken:*(unsigned int *)(a1 + 584)];
  if ((uint64_t *)_UIUpdateDoneSequence != &_UIUpdateSequenceDoneItemInternal || _UIUpdateSequenceDoneItemInternal != 0)
  {
    double v3 = _UIMediaTimeForMachTime(*(void *)(a1 + 648));
    if (_UIUpdateCycleDebugTracingCheck && _UIUpdateCycleDebugTracingCheck())
    {
      kdebug_trace();
      _UIUpdateSequenceRun((uint64_t **)&_UIUpdateScheduledSequence, a1 + 616, v3);
      kdebug_trace();
    }
    else
    {
      _UIUpdateSequenceRun((uint64_t **)&_UIUpdateScheduledSequence, a1 + 616, v3);
    }
  }
  *(_DWORD *)(a1 + 584) = 0;
  _UIUpdateCompletionObservationInvokeObservers(mainCompletionObservation);
  *(void *)(a1 + 600) = *(void *)(a1 + 648);
  *(void *)(a1 + 608) = *(void *)(a1 + 664);
  xmmword_1EB265718 = 0u;
  *(_OWORD *)&qword_1EB265728 = 0u;
  *(_DWORD *)(a1 + 640) = 0;
  ++*(void *)(a1 + 592);
  return schedulerStepScheduling;
}

void _UIQOSProcessingEnd()
{
  _MergedGlobals_1301 = 0;
  if (qword_1EB264D98 != -1) {
    dispatch_once(&qword_1EB264D98, &__block_literal_global_7_3);
  }
  if (!--dword_1EB264DA8)
  {
    _tracepointArg4((uint64_t)&qword_1EB264DA0);
    kdebug_trace();
    if ((_BYTE)word_1EB264DD8)
    {
      if ([MEMORY[0x1E4F39CF8] currentState])
      {
        HIBYTE(word_1EB264DD8) = 1;
        _waitCommitEnd();
      }
      else
      {
        _endInterval(&qword_1EB264DA0);
      }
    }
    else
    {
      word_1EB264DD8 = 0;
      qword_1EB264DE0 = 0;
    }
  }
}

void *_UIUpdateCompletionObservationInvokeObservers(void *result)
{
  unint64_t v1 = (void *)*result;
  if (*result && v1[3])
  {
    uint64_t v2 = result;
    *uint64_t result = result[1];
    result[1] = v1;
    uint64_t v5 = (uint64_t *)v1[2];
    double v3 = (uint64_t **)v5;
    result[2] = &v5;
    if (v3)
    {
      do
      {
        id v4 = v3[2];
        uint64_t v5 = *v3;
        [v4 _updateCompleted];

        double v3 = (uint64_t **)v5;
      }
      while (v5);
    }
    uint64_t result = std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::clear(v1);
    v2[2] = 0;
  }
  return result;
}

void sub_18544FBE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t _UIMachDurationForMediaDuration(double a1)
{
  if (qword_1EB2621B8 != -1) {
    dispatch_once(&qword_1EB2621B8, &__block_literal_global_46_4);
  }
  return llround(*(double *)&qword_1EB2621C0 * a1);
}

void _UIQOSMarkIntervalRelevant()
{
  if (qword_1EB264D98 != -1) {
    dispatch_once(&qword_1EB264D98, &__block_literal_global_7_3);
  }
  if (dword_1EB264DA8) {
    BOOL v0 = 0;
  }
  else {
    BOOL v0 = word_1EB264DD8 == 0;
  }
  if (!v0) {
    HIBYTE(word_1EB264DD8) = 1;
  }
}

uint64_t _UIUpdateRequestRegistryArbitratedRateRange(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 4);
  if (v2)
  {
    *(_DWORD *)(result + 4) = v2 & 0xFFFFFFFE;
    if (*(unsigned char *)(result + 32)) {
      uint64_t result = arbitrateRecordSet(result + 8);
    }
    if (*(unsigned char *)(v1 + 72)) {
      uint64_t result = arbitrateRecordSet(v1 + 48);
    }
    unsigned int v3 = *(float *)(v1 + 36);
    if (v3 <= *(float *)(v1 + 76)) {
      unsigned int v3 = *(float *)(v1 + 76);
    }
    float v4 = (float)v3;
    unsigned int v5 = *(float *)(v1 + 44);
    if (v5 <= *(float *)(v1 + 84)) {
      unsigned int v5 = *(float *)(v1 + 84);
    }
    float v6 = (float)v5;
    unsigned int v7 = *(float *)(v1 + 40);
    if (v7 - 1 >= *(float *)(v1 + 80) - 1) {
      unsigned int v7 = *(float *)(v1 + 80);
    }
    float v8 = (float)v7;
    unsigned int v9 = v4;
    if (v8 != 0 && v8 < v4) {
      unsigned int v9 = v8;
    }
    float v10 = (float)v9;
    unsigned int v11 = v6;
    if (v8 != 0 && v8 < v6) {
      unsigned int v11 = v8;
    }
    unsigned int v12 = (float)v11;
    if (v12 < v10 && v12 != 0) {
      unsigned int v12 = v10;
    }
    *(float *)(v1 + 104) = v10;
    *(float *)(v1 + 108) = v8;
    *(float *)(v1 + 112) = (float)v12;
  }
  return result;
}

uint64_t arbitrateRecordSet(uint64_t result)
{
  *(_DWORD *)(result + 24) &= ~1u;
  uint64_t v1 = *(void *)(result + 8);
  if (v1)
  {
    int v2 = **(int ***)result;
    float v3 = (float)v2[1];
    float v4 = (float)v2[3];
    float v5 = (float)v2[2];
    if (v1 != 1)
    {
      float v6 = (int **)(*(void *)result + 24);
      uint64_t v7 = 24 * v1 - 24;
      do
      {
        float v8 = *v6;
        v6 += 3;
        int v9 = v8[3];
        float v10 = (float)v8[2];
        unsigned int v11 = v3;
        unsigned int v12 = (float)v8[1];
        if (v3 <= v12) {
          unsigned int v11 = v12;
        }
        float v3 = (float)v11;
        unsigned int v13 = v5;
        if (v5 <= v10) {
          unsigned int v13 = v10;
        }
        float v5 = (float)v13;
        unsigned int v14 = v4;
        if (v4 - 1 >= (float)v9 - 1) {
          unsigned int v14 = (float)v9;
        }
        float v4 = (float)v14;
        v7 -= 24;
      }
      while (v7);
    }
  }
  else
  {
    float v3 = 0.0;
    float v4 = 0.0;
    float v5 = 0.0;
  }
  *(float *)(result + 28) = v3;
  *(float *)(result + 32) = v4;
  *(float *)(result + 36) = v5;
  return result;
}

void sub_185450404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIMachTimerCancel(mach_port_t *a1, int a2)
{
  uint64_t result = mk_timer_cancel();
  if (a2)
  {
    mach_port_t v5 = *a1;
    memset(v6, 0, sizeof(v6));
    v6[0].msgh_local_port = v5;
    v6[0].msgh_float64x2_t size = 48;
    return mach_msg(v6, 258, 0, 0x30u, v5, 0, 0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode()
{
  return &type metadata for UICollectionLayoutListConfiguration.HeaderMode;
}

ValueMetadata *type metadata accessor for UICollectionLayoutListConfiguration.FooterMode()
{
  return &type metadata for UICollectionLayoutListConfiguration.FooterMode;
}

uint64_t NSDiffableDataSourceSnapshot.reconfiguredItemIdentifiers.getter(uint64_t a1)
{
  return sub_185419EBC(a1, (SEL *)&selRef_reconfiguredItemIdentifiers);
}

uint64_t NSDiffableDataSourceSnapshot.reloadedSectionIdentifiers.getter(uint64_t a1)
{
  return sub_1853DB908(a1, (SEL *)&selRef_reloadedSectionIdentifiers);
}

uint64_t getEnumTagSinglePayload for HoverStyleDriverCoordinator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

id UIListContentConfiguration.TextProperties.color.getter()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_color);
  return v1;
}

void sub_185451EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _isHeightOfTopViewsCoordinatedToMatchContentScrollViewOffsets(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 _isNestedNavigationController] & 1) == 0)
  {
    id v6 = [v3 navigationBar];
    if (dyld_program_sdk_at_least())
    {
      if ((dyld_program_sdk_at_least() & 1) == 0)
      {

        goto LABEL_10;
      }
      char v7 = [v6 _hasLegacyProvider];

      if ((v7 & 1) == 0)
      {
LABEL_10:
        if ([v6 _hasVariableHeight]) {
          uint64_t v5 = 1;
        }
        else {
          uint64_t v5 = [v3 _canHostRefreshControlOwnedByScrollView:v4];
        }
        goto LABEL_13;
      }
    }
    else
    {
    }
    uint64_t v5 = 0;
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v5 = 0;
LABEL_14:

  return v5;
}

void sub_1854531D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL _isNestedNavigationControllerFullyInstalledIntoContainingNavigationController(void *a1)
{
  id v1 = a1;
  if ([v1 _isNestedNavigationController])
  {
    id v2 = [v1 _outermostNavigationController];
    BOOL v3 = v2 != v1;
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void _addContinuousCornerToPath(CGPath *a1, uint64_t a2, int a3, int a4, int a5, double a6, double a7, double a8, double a9)
{
  char v10 = a3;
  if (a8 >= a9) {
    double v14 = a9;
  }
  else {
    double v14 = a8;
  }
  double v15 = 0.980263;
  if (a5)
  {
    double v15 = 1.0;
    double v16 = v14;
  }
  else
  {
    double v16 = v14 * 0.95;
  }
  double endAngle = v15;
  double v17 = 0.0;
  if ((unint64_t)(a2 - 1) <= 3) {
    double v17 = dbl_186B96DC8[a2 - 1];
  }
  double v18 = v16 * (1.0 - v15);
  if (a3 == 2)
  {
    double v19 = -v18;
    double v85 = v17;
    double v86 = 70.0;
    double v20 = *MEMORY[0x1E4F1DAD8];
  }
  else if (a3 == 1)
  {
    double v85 = v17 + 20.0;
    double v20 = -v18;
    double v86 = 70.0;
    double v19 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  }
  else if (a3)
  {
    double v85 = v17 + 20.0;
    double v86 = 50.0;
    double v19 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
    double v20 = *MEMORY[0x1E4F1DAD8];
    double v16 = v16 / 1.528665;
  }
  else
  {
    double v19 = -v18;
    double v85 = v17;
    double v86 = 90.0;
    double v20 = -v18;
  }
  double v21 = _interiorPointForCorner(a2, v20, v19, *MEMORY[0x1E4F1DAD8]);
  CGFloat v83 = v22;
  CGFloat v84 = v21;
  double v23 = v16 * 0.33 * 0.666666667;
  double v24 = v23 * 1.05304313 + (v16 / 1.05304313 + v23 * 0.33 / 1.05304313) * 0.67;
  double v25 = v23 * 1.05304313 + v24;
  double v26 = v23 * 1.05304313 + v23 * 1.05304313 + v25;
  double v81 = _interiorPointForCorner(a2, v25, 0.0, a6);
  double v82 = v27;
  double v79 = _interiorPointForCorner(a2, v24, 0.0, a6);
  double v80 = v28;
  double v77 = _interiorPointForCorner(a2, 0.0, v24, a6);
  double v78 = v29;
  double v75 = _interiorPointForCorner(a2, 0.0, v25, a6);
  double v76 = v30;
  double v31 = _interiorPointForCorner(a2, 0.0, v26, a6);
  double v73 = v32;
  double v74 = v31;
  double v33 = _interiorPointForCorner(a2, v26, 0.0, a6);
  double v71 = v34;
  double v72 = v33;
  double v35 = _interiorPointForCorner(a2, v16, v16, a6);
  double v37 = v36;
  double v38 = _interiorPointForCorner(a2, v14, 0.0, a6);
  double v40 = v39;
  double v41 = _interiorPointForCorner(a2, 0.0, v14, a6);
  double v43 = v42;
  memset(&m, 0, sizeof(m));
  CGAffineTransformMakeTranslation(&m, v84, v83);
  double v44 = endAngle * v16;
  if (a4) {
    double v45 = v86;
  }
  else {
    double v45 = 0.0;
  }
  double v46 = (v85 + v45) * 0.0174532925;
  if (a4) {
    double v47 = 0.0;
  }
  else {
    double v47 = v86;
  }
  double endAnglea = (v85 + v47) * 0.0174532925;
  __double2 v48 = __sincos_stret(v46);
  double v49 = v44 * v48.__cosval + v35;
  double v50 = v44 * v48.__sinval + v37;
  if (a4)
  {
    if (v10)
    {
      p_CGAffineTransform m = &m;
      id v51 = a1;
      CGFloat v53 = v75;
      CGFloat v54 = v76;
      CGFloat v55 = v77;
      CGFloat v56 = v78;
    }
    else
    {
      id v51 = a1;
      p_CGAffineTransform m = 0;
      CGFloat v53 = v41;
      CGFloat v54 = v43;
      CGFloat v55 = v41;
      CGFloat v56 = v43;
      double v49 = v41;
      double v50 = v43;
    }
    CGPathAddCurveToPoint(v51, p_m, v53, v54, v55, v56, v49, v50);
    CGPathAddArc(a1, &m, v35, v37, v44, v46, endAnglea, 1);
    if ((v10 & 2) != 0)
    {
      uint64_t v64 = &m;
      id v63 = a1;
      CGFloat v65 = v79;
      CGFloat v66 = v80;
      CGFloat v67 = v81;
      CGFloat v68 = v82;
      CGFloat v70 = v71;
      CGFloat v69 = v72;
    }
    else
    {
      id v63 = a1;
      uint64_t v64 = 0;
      CGFloat v65 = v38;
      CGFloat v66 = v40;
      CGFloat v67 = v38;
      CGFloat v68 = v40;
      CGFloat v69 = v38;
      CGFloat v70 = v40;
    }
  }
  else
  {
    if (v10)
    {
      uint64_t v58 = &m;
      uint64_t v57 = a1;
      CGFloat v59 = v81;
      CGFloat v60 = v82;
      CGFloat v61 = v79;
      CGFloat v62 = v80;
    }
    else
    {
      uint64_t v57 = a1;
      uint64_t v58 = 0;
      CGFloat v59 = v38;
      CGFloat v60 = v40;
      CGFloat v61 = v38;
      CGFloat v62 = v40;
      double v49 = v38;
      double v50 = v40;
    }
    CGPathAddCurveToPoint(v57, v58, v59, v60, v61, v62, v49, v50);
    CGPathAddArc(a1, &m, v35, v37, v44, v46, endAnglea, 0);
    if ((v10 & 2) != 0)
    {
      uint64_t v64 = &m;
      id v63 = a1;
      CGFloat v65 = v77;
      CGFloat v66 = v78;
      CGFloat v67 = v75;
      CGFloat v68 = v76;
      CGFloat v70 = v73;
      CGFloat v69 = v74;
    }
    else
    {
      id v63 = a1;
      uint64_t v64 = 0;
      CGFloat v65 = v41;
      CGFloat v66 = v43;
      CGFloat v67 = v41;
      CGFloat v68 = v43;
      CGFloat v69 = v41;
      CGFloat v70 = v43;
    }
  }
  CGPathAddCurveToPoint(v63, v64, v65, v66, v67, v68, v69, v70);
}

double _interiorPointForCorner(uint64_t a1, double result, double a3, double a4)
{
  switch(a1)
  {
    case 1:
      double v4 = a3 + a4;
      goto LABEL_6;
    case 2:
      uint64_t result = a4 - result;
      break;
    case 4:
      uint64_t result = result + a4;
      break;
    case 8:
      double v4 = a4 - a3;
LABEL_6:
      uint64_t result = v4;
      break;
    default:
      return result;
  }
  return result;
}

void UIBezierPathCommonInit(void *a1, const void *a2)
{
  BOOL v3 = a1;
  v3[1] = CFRetain(a2);
  void v3[6] = 0x3FE3333333333333;
  *((_OWORD *)v3 + 2) = xmmword_186B96D80;
}

double _largeTitleRestingHeight()
{
  if (qword_1EB2599F0 != -1) {
    dispatch_once(&qword_1EB2599F0, &__block_literal_global_62);
  }
  return *(double *)&_MergedGlobals_8;
}

id _UINavigationBarLargeTitleViewLabelForMeasuring(void *a1, int a2, void *a3)
{
  BOOL v3 = (void *)_UINavigationBarLargeTitleViewLabelForMeasuring_label;
  if (!_UINavigationBarLargeTitleViewLabelForMeasuring_label)
  {
    id v6 = a1;
    char v7 = (void *)_UISetCurrentFallbackEnvironment(a3);
    uint64_t v8 = _UINavigationBarLargeTitleViewNewLabel();
    int v9 = (void *)_UINavigationBarLargeTitleViewLabelForMeasuring_label;
    _UINavigationBarLargeTitleViewLabelForMeasuring_label = v8;

    _UIRestorePreviousFallbackEnvironment(v7);
    id v10 = objc_alloc(MEMORY[0x1E4F28B18]);
    unsigned int v11 = _UINSLocalizedStringWithDefaultValue(@"Back", @"Back");
    unsigned int v12 = (void *)[v10 initWithString:v11 attributes:v6];

    [(id)_UINavigationBarLargeTitleViewLabelForMeasuring_label setAttributedText:v12];
    -[UILabel _setSupportMultiLineShrinkToFit:](_UINavigationBarLargeTitleViewLabelForMeasuring_label, a2);
    BOOL v3 = (void *)_UINavigationBarLargeTitleViewLabelForMeasuring_label;
  }
  return v3;
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
  sub_1853D0814((uint64_t)a1._rawValue, v1, (SEL *)&selRef_reconfigureItemsWithIdentifiers_);
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadSections(_:)(Swift::OpaquePointer a1)
{
  sub_1853D08C4((uint64_t)a1._rawValue, v1, (SEL *)&selRef_reloadSectionsWithIdentifiers_);
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadItems(_:)(Swift::OpaquePointer a1)
{
  sub_1853D0814((uint64_t)a1._rawValue, v1, (SEL *)&selRef_reloadItemsWithIdentifiers_);
}

void sub_185456028(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_18545682C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIImageDecorateFallbackImage(void *a1)
{
  id v17 = a1;
  if (_UIGetUIKitDecorateFallbackImagesFromScale() != 0.0)
  {
    [v17 scale];
    if (v1 != _UIGetUIKitDecorateFallbackImagesFromScale())
    {
      [v17 size];
      CGFloat v3 = v2;
      CGFloat v5 = v4;
      [v17 scale];
      _UIGraphicsBeginImageContextWithOptions(0, 0, v3, v5, v6);
      double v7 = *MEMORY[0x1E4F1DAD8];
      double v8 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
      ContextStacuint64_t k = GetContextStack(0);
      if (*(int *)ContextStack < 1) {
        id v10 = 0;
      }
      else {
        id v10 = (CGContext *)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
      }
      unsigned int v11 = +[UIColor redColor];
      unsigned int v12 = [v11 colorWithAlphaComponent:0.55];

      objc_msgSend(v17, "drawInRect:", v7, v8, v3, v5);
      CGContextBeginTransparencyLayer(v10, 0);
      [v12 set];
      v19.origin.x = v7;
      v19.origin.double y = v8;
      v19.size.width = v3;
      v19.size.double height = v5;
      UIRectFillUsingBlendMode(v19, kCGBlendModeColor);
      CGContextEndTransparencyLayer(v10);
      unsigned int v13 = _UIGraphicsGetImageFromCurrentImageContext(0);
      UIGraphicsEndImageContext();
      double v14 = [v17 content];
      id v15 = v13;
      double v16 = objc_msgSend(v14, "contentWithCGImage:", objc_msgSend(v15, "CGImage"));
      [v17 _swizzleContent:v16];
    }
  }
}

double _UIGetUIKitDecorateFallbackImagesFromScale()
{
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  int v0 = _UIInternalPreferencesRevisionVar;
  double result = 0.0;
  if (_UIInternalPreferencesRevisionVar >= 1)
  {
    int v2 = _UIInternalPreference_UIKitDecorateFallbackImagesFromScale;
    if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_UIKitDecorateFallbackImagesFromScale)
    {
      while (v0 >= v2)
      {
        _UIInternalPreferenceSync(v0, &_UIInternalPreference_UIKitDecorateFallbackImagesFromScale, @"UIKitDecorateFallbackImagesFromScale", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
        int v2 = _UIInternalPreference_UIKitDecorateFallbackImagesFromScale;
        if (v0 == _UIInternalPreference_UIKitDecorateFallbackImagesFromScale) {
          return 0.0;
        }
      }
      return *(double *)&qword_1EB257C60;
    }
  }
  return result;
}

double _UICurrentImageTraitCollectionDisplayScale()
{
  int v0 = +[UITraitCollection _currentTraitCollectionWithUnmarkedFallback]();
  [v0 displayScale];
  double v2 = v1;

  return v2;
}

void sub_185456EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIUseMiniHeightInLandscape(unsigned int a1)
{
  double v2 = +[UIDevice currentDevice];
  uint64_t v3 = [v2 userInterfaceIdiom];

  if ((v3 & 0xFFFFFFFFFFFFFFFBLL) == 1) {
    return 0;
  }
  CGFloat v5 = +[UIScreen mainScreen];
  [v5 _referenceBounds];
  double v7 = v6;

  if (v7 < 414.0) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t __preferredIdiomSubtypeForIdiom(uint64_t a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      [+[UIScreen mainScreen] _referenceBounds];
      double Height = CGRectGetHeight(v8);
      if (Height <= 667.0)
      {
        if (Height <= 568.0)
        {
          if (Height <= 480.0) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = 568;
          }
        }
        else
        {
          uint64_t result = 569;
        }
      }
      else
      {
        uint64_t result = 570;
      }
      break;
    case 1:
      [+[UIScreen mainScreen] _pointsPerInch];
      if (v6 == 163.0) {
        uint64_t result = 163;
      }
      else {
        uint64_t result = 0;
      }
      break;
    case 2:
    case 8:
      [+[UIScreen mainScreen] _referenceBounds];
      double v3 = CGRectGetHeight(v7);
      [+[UIScreen mainScreen] scale];
      if (v3 * v4 >= 1080.0) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 720;
      }
      break;
    case 4:
      if (+[UIDevice _isWatchCompanion])
      {
        objc_msgSend((id)objc_msgSend((id)getWKInterfaceDeviceClass(), "currentDevice"), "screenBounds");
        if (CGRectGetHeight(v9) <= 170.0) {
          uint64_t result = 320;
        }
        else {
          uint64_t result = 384;
        }
      }
      else
      {
        if (qword_1EB264B70 != -1) {
          dispatch_once(&qword_1EB264B70, &__block_literal_global_249);
        }
        uint64_t result = qword_1EB264B78;
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_185457D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185457FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185458178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void CommonInit(void *a1)
{
  double v1 = a1;
  id v20 = v1;
  if (!v1[143])
  {
    double v18 = [MEMORY[0x1E4F28B00] currentHandler];
    CGRect v19 = [NSString stringWithUTF8String:"void CommonInit(UISearchTextField *__strong)"];
    [v18 handleFailureInFunction:v19 file:@"UISearchTextField.m" lineNumber:285 description:@"Visual style should not be nil by now."];

    double v1 = v20;
  }
  [v1 updateForBackdropStyle:2005];
  if (UISearchBarUsesModernAppearance())
  {
    double v2 = [v20 layer];
    [v2 setAllowsGroupOpacity:0];
  }
  double v3 = [_UISearchBarTextFieldTokenCounter alloc];
  double v4 = [v20 textStorage];
  uint64_t v5 = [(_UISearchBarTextFieldTokenCounter *)v3 initWithTextStorage:v4];
  double v6 = (void *)*((void *)v20 + 141);
  *((void *)v20 + 141) = v5;

  uint64_t v7 = [MEMORY[0x1E4F28D30] weakObjectsHashTable];
  CGRect v8 = (void *)*((void *)v20 + 140);
  *((void *)v20 + 140) = v7;

  CGRect v9 = [[UITapGestureRecognizer alloc] initWithTarget:v20 action:sel__tokenTapGestureRecognized];
  id v10 = (void *)*((void *)v20 + 142);
  *((void *)v20 + 142) = v9;

  [v20 addGestureRecognizer:*((void *)v20 + 142)];
  unsigned int v11 = [[UIHoverGestureRecognizer alloc] initWithTarget:v20 action:sel__hoverGestureChanged_];
  unsigned int v12 = (void *)*((void *)v20 + 144);
  *((void *)v20 + 144) = v11;

  [v20 addGestureRecognizer:*((void *)v20 + 144)];
  if ([v20 _supportsDynamicType])
  {
    unsigned int v13 = [*((id *)v20 + 143) dynamicSearchFieldFont];
    [v20 setFont:v13];

    [v20 setAdjustsFontForContentSizeCategory:1];
  }
  [v20 _setSupportsKeyboardNavigationForSuggestions:1];
  double v14 = [v20 traitCollection];
  id v15 = +[_UIVisualStyleRegistry registryForIdiom:](_UIVisualStyleRegistry, "registryForIdiom:", [v14 userInterfaceIdiom]);
  double v16 = (objc_class *)[v15 visualStyleClassForStylableClass:objc_opt_class()];

  id v17 = (void *)[[v16 alloc] initWithSearchTextField:v20];
  [v17 setDelegate:v20];
  [v20 _setSuggestionController:v17];
}

void CommonInit_0(void *a1)
{
  double v14 = a1;
  double v1 = objc_alloc_init(UILabel);
  double v2 = +[UIColor whiteColor];
  [(UILabel *)v1 setTextColor:v2];

  [(UIView *)v1 setHidden:1];
  [(UILabel *)v1 setTextAlignment:1];
  v14[51] = v1;
  [v14 addSubview:v1];
  double v3 = objc_alloc_init(UIImageView);
  double v4 = +[UIColor whiteColor];
  [(UIView *)v3 setTintColor:v4];

  if (qword_1EB25C8F0 != -1) {
    dispatch_once(&qword_1EB25C8F0, &__block_literal_global_49);
  }
  id v5 = (id)qword_1EB25C8E8;
  double v6 = +[UIImageSymbolConfiguration configurationWithFont:v5];
  [(UIImageView *)v3 setPreferredSymbolConfiguration:v6];

  v14[52] = v3;
  [v14 addSubview:v3];
  uint64_t v7 = [v14 layer];
  [v7 setCornerRadius:12.5];

  uint64_t v8 = *MEMORY[0x1E4F39EA8];
  CGRect v9 = [v14 layer];
  [v9 setCornerCurve:v8];

  [v14 setNeedsLayout];
  id v10 = [v14 layer];
  [v10 setShadowOpacity:0.0];

  unsigned int v11 = [v14 layer];
  [v11 setShadowRadius:2.0];

  unsigned int v12 = [v14 layer];
  objc_msgSend(v12, "setShadowOffset:", 0.0, 1.0);

  unsigned int v13 = [v14 layer];
  [v13 setShadowPathIsBounds:1];
}

void CommonInit_1(void *a1, void *a2, void *a3, void *a4)
{
  double v16 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (!v7)
  {
    double v14 = [MEMORY[0x1E4F28B00] currentHandler];
    id v15 = objc_msgSend(NSString, "stringWithUTF8String:", "void CommonInit(UIImageAsset *__strong, NSString *__strong, _UIAssetManager *__strong, NSBundle *__strong)");
    [v14 handleFailureInFunction:v15 file:@"UIImageAsset.m" lineNumber:160 description:@"asset must have a name"];
  }
  objc_storeStrong(v16 + 10, a2);
  objc_storeWeak(v16 + 5, v8);
  id v10 = v16[2];
  float64x2_t v16[2] = v9;
  id v11 = v9;

  if (v8) {
    [v8 preferredTraitCollection];
  }
  else {
  uint64_t v12 = _UICurrentImageTraitCollection();
  }
  id v13 = v16[3];
  v16[3] = (id)v12;

  *((_DWORD *)v16 + 2) = 0;
}

void sub_1854596B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185459888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t objectdestroy_330Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_18545ACEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _UIEmitSignpostEvent((int *)va);
  _Unwind_Resume(a1);
}

uint64_t _NSStringIsWidthVariant(void *a1)
{
  id v1 = a1;
  if (_MergedGlobals_1_31 != -1) {
    dispatch_once(&_MergedGlobals_1_31, &__block_literal_global_641);
  }
  if (qword_1EB25BFD0) {
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

uint64_t _UIConstraintBasedLayoutEngageNonLazily()
{
  if (qword_1EB25A5D8 != -1) {
    dispatch_once(&qword_1EB25A5D8, &__block_literal_global_56_8);
  }
  return byte_1EB25A5AA;
}

uint64_t _UIResponderCrossSceneResponderChainEnabled()
{
  if (qword_1EB2624C8 != -1) {
    dispatch_once(&qword_1EB2624C8, &__block_literal_global_1007);
  }
  return byte_1EB262471;
}

void _UIImageViewCommonInit(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[_UIImageViewStorage storageForImageView:v1];
  double v3 = (void *)v1[51];
  v1[51] = v2;

  uint64_t v4 = +[_UIImageViewSymbolAnimationPresetManager managerForClient:v1];
  id v5 = (void *)v1[59];
  v1[59] = v4;

  double v6 = [v1 layer];
  if ([v6 allowsEdgeAntialiasing]) {
    __int16 v7 = 128;
  }
  else {
    __int16 v7 = 0;
  }
  *((_WORD *)v1 + 240) = v1[60] & 0xFF7F | v7;

  +[_UIHDRUsageCoordinator sharedInstance]();
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  -[_UIHDRUsageCoordinator registerForAndApplyHDRAnimationToView:]((uint64_t)v8, v1);
}

void sub_185461424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1854615DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1854617C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _UIGetTraitTokenValue(const __CFNumber *a1)
{
  uint64_t valuePtr = 0;
  if (!CFNumberGetValue(a1, kCFNumberNSIntegerType, &valuePtr))
  {
    double v3 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v3 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSUInteger _getTraitTokenValue(_UITraitToken)"), @"UITrait_NonARC.m", 95, @"Invalid trait token: %@", a1 file lineNumber description];
  }
  return valuePtr;
}

uint64_t IndexPath.item.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_186A1D7CC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  uint64_t v6 = sub_186A1D7AC();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 < 1)
  {
    __break(1u);
  }
  else if (sub_186A1D7AC() < 2)
  {
    return sub_186A1D1CC();
  }
  else
  {
    return sub_186A1D7DC();
  }
  return result;
}

uint64_t _UIListEnvironmentFromListStyle(unint64_t a1)
{
  if (a1 < 5) {
    return a1 + 2;
  }
  uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v4 = [NSString stringWithUTF8String:"UIListEnvironment _UIListEnvironmentFromListStyle(_UICollectionViewListLayoutAppearanceStyle)"];
  objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"UITraitListEnvironment.m", 126, @"Received unknown list style %ld", a1);

  return 2;
}

uint64_t _UIViewIgnoresTouchEvents(void *a1, char a2)
{
  id v3 = a1;
  if ([v3 isUserInteractionEnabled])
  {
    uint64_t v4 = [v3 isHidden];
    if ((v4 & 1) == 0 && (a2 & 1) == 0)
    {
      [v3 alpha];
      uint64_t v4 = v5 < 0.01;
    }
  }
  else
  {
    uint64_t v4 = 1;
  }

  return v4;
}

uint64_t _UIStatusBarStyleFromResolvedStyle(char a1)
{
  uint64_t v1 = a1 & 0x3F;
  switch(v1)
  {
    case 1:
      return 1;
    case 4:
      id v3 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v4 = [NSString stringWithUTF8String:"UIStatusBarStyle _UIStatusBarStyleFromResolvedStyle(_UIStatusBarResolvedStyle)"];
      [v3 handleFailureInFunction:v4 file:@"_UIStatusBarStyle.m" lineNumber:85 description:@"_UIStatusBarResolvedStyleInherited cannot be converted to a UIStatusBarStyle"];

      return 0;
    case 2:
      return 3;
    default:
      return 0;
  }
}

void sub_185466A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185466BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185466D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _tagForView(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = v1;
  if (v1 && (v1[116] & 8) != 0)
  {
    uint64_t v4 = objc_getAssociatedObject(v1, &_UIViewTagAssocObjectKey);
    uint64_t v3 = [v4 integerValue];
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void sub_185468378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_185468CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t _TextFieldScalesClearButton()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    LODWORD(result) = _UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_TextFieldScalesClearButton, @"TextFieldScalesClearButton");
    if (byte_1EB257984) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t UIKeyboardIsRightToLeftInputModeActive()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v0 = (id)UIKeyboardActiveInputModes;
  uint64_t v1 = [v0 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v1)
  {
    uint64_t v2 = *(void *)v6;
    while (2)
    {
      for (uint64_t i = 0; i != v1; ++i)
      {
        if (*(void *)v6 != v2) {
          objc_enumerationMutation(v0);
        }
        if (UIKeyboardInputModeIsDefaultRightToLeft(*(void **)(*((void *)&v5 + 1) + 8 * i)))
        {
          uint64_t v1 = 1;
          goto LABEL_11;
        }
      }
      uint64_t v1 = [v0 countByEnumeratingWithState:&v5 objects:v9 count:16];
      if (v1) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v1;
}

uint64_t UIKeyboardInputModeIsDefaultRightToLeft(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (qword_1EB2616A8 != -1) {
      dispatch_once(&qword_1EB2616A8, &__block_literal_global_365);
    }
    uint64_t v2 = [(id)qword_1EB2616A0 objectForKey:v1];
    uint64_t v3 = v2;
    if (v2)
    {
      uint64_t v4 = [v2 BOOLValue];
    }
    else
    {
      long long v5 = TIInputModeGetLanguageWithRegion();
      long long v6 = v5;
      if (v5)
      {
        [v5 UTF8String];
        uint64_t v4 = uloc_getCharacterOrientation() == 1;
        long long v7 = (void *)qword_1EB2616A0;
        long long v8 = [NSNumber numberWithBool:v4];
        [v7 setObject:v8 forKey:v1];
      }
      else
      {
        uint64_t v4 = 0;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

ValueMetadata *type metadata accessor for UIBackgroundConfiguration()
{
  return &type metadata for UIBackgroundConfiguration;
}

uint64_t _UIEventFetcherHandleHIDEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return -[UIEventFetcher _receiveHIDEventInternal:](a1, a4);
}

ValueMetadata *type metadata accessor for UITraitOverrides()
{
  return &type metadata for UITraitOverrides;
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
  if (__UIAccessibilityBroadcastCallback) {
    __UIAccessibilityBroadcastCallback(*(void *)&notification, argument);
  }
}

uint64_t sub_18546ABEC(uint64_t a1, id *a2)
{
  uint64_t result = sub_186A1E93C();
  *a2 = 0;
  return result;
}

double UIEdgeInsetsReplace(char a1, double a2, double a3, double a4, double a5, double a6)
{
  if (a1) {
    return a6;
  }
  return result;
}

void __Block_byref_object_dispose__42(uint64_t a1)
{
}

{
}

uint64_t _UIBoundingPathBitmapDataRowHitTest(unint64_t *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3 = *a1;
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v6 = a1[1];
  if (v6 && (a3 & 0x8000000000000000) == 0 && a3 <= v6)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      return 0;
    }
    if (a2 > v3) {
      return 0;
    }
    if (a2 >= v3 - 1) {
      unint64_t v7 = v3 - 1;
    }
    else {
      unint64_t v7 = a2;
    }
    if (a3 >= v6 - 1) {
      unint64_t v8 = v6 - 1;
    }
    else {
      unint64_t v8 = a3;
    }
    unint64_t v9 = a1[2];
    if (v8 >= v9)
    {
      unint64_t v10 = a1[3];
      if (v8 < v10 + v9) {
        return 1;
      }
      v8 -= v10;
    }
    unint64_t v11 = a1[5];
    if (v11)
    {
      unint64_t v12 = 0;
      unint64_t v13 = 0;
      unint64_t v14 = v11 * v8;
      while (1)
      {
        if (v14 >= a1[4])
        {
          double v21 = [MEMORY[0x1E4F28B00] currentHandler];
          id v20 = objc_msgSend(NSString, "stringWithUTF8String:", "_UIBoundingPathBitmapDataRowHitTestResult _UIBoundingPathBitmapDataRowHitTest(const _UIBoundingPathBitmapData, const _UIIntegralPoint)");
          objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v20, @"_UIBoundingPathBitmapData.h", 244, @"Bitmap data is invalid: width=%ld; height=%lu; skipRegionY=%lu; skipRegionHeight=%lu; nodeCount=%lu; maximumNodesPerRow=%lu",
            *a1,
            a1[1],
            a1[2],
            a1[3],
            a1[4],
            a1[5]);
        }
        unint64_t v15 = *(unsigned __int16 *)(a1[6] + 2 * v14);
        v13 += v15 & 0x7FFF;
        if (v13 > v7) {
          return v15 >> 15;
        }
        ++v12;
        ++v14;
        if (v12 >= a1[5]) {
          goto LABEL_26;
        }
      }
    }
    else
    {
LABEL_26:
      double v16 = [MEMORY[0x1E4F28B00] currentHandler];
      id v17 = objc_msgSend(NSString, "stringWithUTF8String:", "_UIBoundingPathBitmapDataRowHitTestResult _UIBoundingPathBitmapDataRowHitTest(const _UIBoundingPathBitmapData, const _UIIntegralPoint)");
      long long v18 = *((_OWORD *)a1 + 1);
      v22[0] = *(_OWORD *)a1;
      v22[1] = v18;
      v22[2] = *((_OWORD *)a1 + 2);
      unint64_t v23 = a1[6];
      CGRect v19 = _UIBoundingPathBitmapDataDescription(v22);
      [v16 handleFailureInFunction:v17, @"_UIBoundingPathBitmapData.h", 256, @"Bitmap is invalid: column %ld is missing for row %ld of bitmap data: %@", v7, v8, v19 file lineNumber description];

      return 0;
    }
  }
  return result;
}

unint64_t _UIRectEdgeConvertedFromOrientationToPortrait(unint64_t result, uint64_t a2)
{
  switch(a2)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t result = (result >> 2) & 3 | (4 * (result & 3));
      break;
    case 3:
      uint64_t result = (8 * (result & 1)) | (result >> 1) & 7;
      break;
    case 4:
      uint64_t result = (result >> 3) & 1 | (2 * (result & 7));
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t _UITraitTokenSetIsSubsetOfSet(uint64_t *a1, uint64_t *a2)
{
  if (a2 == a1) {
    return 1;
  }
  uint64_t v4 = _UITraitTokenSetCount((uint64_t)a1);
  if (!v4) {
    return 1;
  }
  if (v4 > _UITraitTokenSetCount((uint64_t)a2)) {
    return 0;
  }
  uint64_t v8 = 0;
  unint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  char v11 = 1;
  v7[0] = (void (*)(void, void, void))MEMORY[0x1E4F143A8];
  v7[1] = (void (*)(void, void, void))3221225472;
  void v7[2] = (void (*)(void, void, void))___UITraitTokenSetIsSubsetOfSet_block_invoke;
  v7[3] = (void (*)(void, void, void))&unk_1E52E7810;
  v7[4] = (void (*)(void, void, void))&v8;
  v7[5] = (void (*)(void, void, void))a2;
  _UITraitTokenSetEnumerate(a1, v7);
  BOOL v5 = *((unsigned char *)v9 + 24) != 0;
  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_18546F804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185470454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,void *a56)
{
  _Unwind_Resume(a1);
}

BOOL _UIShouldLogTraitCollectionChangeForInstanceAndMethod(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB261390 != -1) {
    dispatch_once(&qword_1EB261390, &__block_literal_global_770);
  }
  if (qword_1EB261388 == 2) {
    return 1;
  }
  if (qword_1EB261388 != 1) {
    return 0;
  }
  BOOL v5 = objc_opt_class();
  [a1 instanceMethodForSelector:a3];
  uint64_t v6 = dyld_image_header_containing_address();
  [v5 instanceMethodForSelector:a3];
  return v6 != dyld_image_header_containing_address();
}

uint64_t _UITraitTokenSetIntersectsSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _UITraitTokenSetCount(a1);
  if (!v4) {
    return 0;
  }
  BOOL v5 = v4;
  uint64_t v6 = _UITraitTokenSetCount(a2);
  if (!v6) {
    return 0;
  }
  if (a2 == a1) {
    return 1;
  }
  if (v5 >= v6) {
    unint64_t v7 = (void (*)(void, void, void))a1;
  }
  else {
    unint64_t v7 = (void (*)(void, void, void))a2;
  }
  if (v5 >= v6) {
    uint64_t v8 = (uint64_t *)a2;
  }
  else {
    uint64_t v8 = (uint64_t *)a1;
  }
  uint64_t v12 = 0;
  unint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  char v15 = 0;
  v11[0] = (void (*)(void, void, void))MEMORY[0x1E4F143A8];
  v11[1] = (void (*)(void, void, void))3221225472;
  v11[2] = (void (*)(void, void, void))___UITraitTokenSetIntersectsSet_block_invoke;
  v11[3] = (void (*)(void, void, void))&unk_1E52E7810;
  void v11[4] = (void (*)(void, void, void))&v12;
  v11[5] = v7;
  _UITraitTokenSetEnumerate(v8, v11);
  BOOL v9 = *((unsigned char *)v13 + 24) != 0;
  _Block_object_dispose(&v12, 8);
  return v9;
}

void sub_185470710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

int8x16_t *_UITraitTokenSetCount(uint64_t a1)
{
  if (*(void *)a1) {
    return -[_UIFastIndexSet count](*(int8x16_t **)a1);
  }
  else {
    return (int8x16_t *)vaddvq_s64((int64x2_t)vpadalq_u32(vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*(int8x16_t *)(a1 + 8))))), vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*(int8x16_t *)(a1 + 24))))));
  }
}

void _UIInlinePointerSetEnumerate(void *a1, void *a2)
{
  unint64_t v3 = a2;
  if (*a1)
  {
    uint64_t v4 = (NSHashTable *)a1[2];
    if (v4)
    {
      memset(&enumerator, 0, sizeof(enumerator));
      NSEnumerateHashTable(&enumerator, v4);
      do
      {
        BOOL v5 = NSNextHashEnumeratorItem(&enumerator);
        if (!v5) {
          break;
        }
        char v9 = 0;
        v3[2](v3, v5, &v9);
      }
      while (!v9);
      NSEndHashTableEnumeration(&enumerator);
    }
    else
    {
      uint64_t v6 = *a1 - 1;
      unint64_t v7 = (void **)(a1 + 3);
      do
      {
        LOBYTE(enumerator._pi) = 0;
        ((void (**)(id, void *, NSHashEnumerator *))v3)[2](v3, *v7, &enumerator);
        if (LOBYTE(enumerator._pi)) {
          BOOL v8 = 1;
        }
        else {
          BOOL v8 = v6 == 0;
        }
        --v6;
        ++v7;
      }
      while (!v8);
    }
  }
}

void sub_185470840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_185470994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL _UIShouldLogTraitRegistryChange()
{
  if (qword_1EB261390 != -1) {
    dispatch_once(&qword_1EB261390, &__block_literal_global_770);
  }
  return (unint64_t)(qword_1EB261388 - 1) < 2;
}

UIColor *_UIColorFromCUINamedColor(void *a1)
{
  if (![a1 substituteWithSystemColor]
    || (uint64_t result = +[UIColor _systemColorWithUnvalidatedName:](UIColor, "_systemColorWithUnvalidatedName:", [a1 systemColorName])) == 0)
  {
    uint64_t v3 = [a1 cgColor];
    return +[UIColor colorWithCGColor:v3];
  }
  return result;
}

void sub_1854712F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void _UITraitTokenSetRemove(uint16x8_t **a1, unint64_t a2, int8x16_t a3)
{
  if (*a1)
  {
    [(_UIMutableFastIndexSet *)*a1 removeIndex:a3];
  }
  else if (a2 <= 0xFF)
  {
    unint64_t v3 = a2 >> 6;
    unint64_t v4 = 255;
    if (a2 + 1 < 0xFF) {
      unint64_t v4 = a2 + 1;
    }
    if (v3 <= v4 >> 6)
    {
      uint64_t v5 = (v4 >> 6) - v3 + 1;
      uint64_t v6 = &a1[v3 + 1];
      unint64_t v7 = v3 << 6;
      unint64_t v8 = (v3 << 6) + 64;
      char v9 = v8 + a2;
      uint64_t v10 = -64 * v3;
      do
      {
        unint64_t v11 = a2 - v7;
        if (a2 >= v7) {
          char v12 = v7;
        }
        else {
          char v12 = a2;
        }
        if (a2 < v7) {
          unint64_t v11 = 0;
        }
        char v13 = v9 - v12;
        if (v8 >= a2 + 1) {
          unint64_t v14 = a2 + 1;
        }
        else {
          unint64_t v14 = v8;
        }
        unint64_t v15 = 0xFFFFFFFFFFFFFFFFLL >> (v13 - v14) << v11;
        if (v11 < v14 + v10) {
          uint64_t v16 = ~v15;
        }
        else {
          uint64_t v16 = -1;
        }
        *v6++ &= v16;
        v9 += 64;
        v7 += 64;
        v8 += 64;
        v10 -= 64;
        --v5;
      }
      while (v5);
    }
  }
}

void sub_185473528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_185473A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id touchesFromDictionaryWithKey(const __CFDictionary *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = CFDictionaryGetValue(a1, v3);
  id v5 = (id)v4;
  if (v3 && !v4)
  {
    id v5 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    CFDictionarySetValue(a1, v3, v5);
  }

  return v5;
}

void *_UIGestureDelayedTouchForUITouch(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = a2;
  id v5 = (void *)[v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v13;
    do
    {
      unint64_t v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v4);
        }
        unint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8 * (void)v7);
        if (v8) {
          id v9 = (id)v8[3];
        }
        else {
          id v9 = 0;
        }
        if (v9 == v3)
        {
          id v5 = v8;
          goto LABEL_15;
        }
        unint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      uint64_t v10 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      id v5 = (void *)v10;
    }
    while (v10);
  }
LABEL_15:

  return v5;
}

uint64_t _UIVisualEffectSubviewShouldAnimateKeyInternal(void *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v4 hasPrefix:@"filters."])
  {
    uint64_t v5 = 1;
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    id v6 = v3;
    uint64_t v5 = [v6 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      uint64_t v7 = *(void *)v11;
      while (2)
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v6);
          }
          if (objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * i), "shouldAnimateProperty:", v4, (void)v10))
          {
            uint64_t v5 = 1;
            goto LABEL_13;
          }
        }
        uint64_t v5 = [v6 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
  return v5;
}

UILabel *_UINavigationBarLargeTitleViewNewLabel()
{
  id v0 = objc_alloc_init(UILabel);
  [(UILabel *)v0 setAdjustsFontForContentSizeCategory:_UIBarsUseDynamicType()];
  [(UILabel *)v0 setAllowsDefaultTighteningForTruncation:1];
  return v0;
}

void sub_185479DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _reorderImagesToStartAtIndex(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ((unint64_t)[v3 count] < 2 || a2 == 0x7FFFFFFFFFFFFFFFLL || a2 == 0)
  {
    id v9 = v3;
  }
  else
  {
    uint64_t v7 = objc_msgSend(v3, "subarrayWithRange:", a2, objc_msgSend(v3, "count") - a2);
    unint64_t v8 = objc_msgSend(v3, "subarrayWithRange:", 0, a2);
    id v9 = [v7 arrayByAddingObjectsFromArray:v8];
  }
  return v9;
}

uint64_t sub_18547D954(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256478, &qword_1EB256468);
}

uint64_t sub_18547D97C(char a1)
{
  uint64_t v2 = OBJC_IVAR____UIDismissInteraction_isEnabled;
  *(unsigned char *)(v1 + OBJC_IVAR____UIDismissInteraction_isEnabled) = a1;
  uint64_t result = *(void *)(v1 + OBJC_IVAR____UIDismissInteraction_subInteractions);
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v6 = *v5;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(unsigned __int8 *)(v1 + v2);
      id v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
      swift_unknownObjectRetain();
      v9(v8, ObjectType, v6);
      swift_unknownObjectRelease();
      v5 += 2;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _UIViewSetLayerNameDescriptionEnabled()
{
  return (byte_1EB257AE4 != 0) & ~_UIInternalPreferenceUsesDefault(&_UIInternalPreference_UIViewSetLayerNameDescription, @"UIViewSetLayerNameDescription", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
}

id _UIDragGestureResolvedName(void *a1)
{
  id v1 = a1;
  if (dyld_program_sdk_at_least())
  {
    id v2 = [NSString stringWithFormat:@"com.apple.UIKit.%@", v1];
  }
  else
  {
    id v2 = v1;
  }
  id v3 = v2;

  return v3;
}

uint64_t _isDraggingEnabledByDefaultInNewCases()
{
  id v0 = +[UIDevice currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  if ((v1 & 0xFFFFFFFFFFFFFFFBLL) == 1) {
    return 1;
  }
  LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_DraggingEnabledPhone, @"DraggingEnabledPhone", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  if (byte_1EB25718C) {
    return 1;
  }
  else {
    return result;
  }
}

id _UIVisualEffectSubviewSetFilters(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  uint64_t v6 = (void *)MEMORY[0x1E4F1CBF0];
  if (a2) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = (void *)MEMORY[0x1E4F1CBF0];
  }
  id v8 = v7;
  id v9 = a3;
  long long v10 = v9;
  if (v9) {
    long long v11 = v9;
  }
  else {
    long long v11 = v6;
  }
  id v12 = v11;

  if ([v8 isEqualToArray:v12])
  {
    id v13 = v8;
  }
  else
  {
    long long v14 = _UIVisualEffectSubviewConvertToCAFilterArray(v12);
    uint64_t v15 = [v5 layer];
    [v15 setFilters:v14];

    id v13 = (id)[v12 copy];
  }
  uint64_t v16 = v13;

  return v16;
}

id _UIVisualEffectSubviewConvertToCAFilterArray(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 count];
  if (v2)
  {
    id v3 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:v2];
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v4 = v1;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * i), "filter", (void)v11);
          [v3 addObject:v9];
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v6);
    }
  }
  else
  {
    id v3 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v3;
}

double _UIClickPresentationAllowableMovementForDriver(void *a1, int a2)
{
  id v3 = a1;
  if (a2) {
    double v4 = 20.0;
  }
  else {
    double v4 = 10.0;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && [v3 behavior] == 2) {
    double v4 = 3.0;
  }

  return v4;
}

uint64_t AXInvertFilterSearch_block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = objc_msgSend((id)objc_msgSend(a2, "name"), "isEqualToString:", @"InvertColorsDoubleInvert");
  if (result) {
    *a4 = 1;
  }
  return result;
}

double _UIDragInteractionDefaultCompetingLongPressDelay()
{
  int v0 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257108, @"DragInteractionDefaultCompetingLongPressDelay", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double result = *(double *)&qword_1EB257110;
  if (v0) {
    return 1.0;
  }
  return result;
}

double _UIDragInteractionDefaultCancellationDelay()
{
  int v0 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB2570F8, @"DragInteractionDefaultCancellationDelay", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double result = *(double *)&qword_1EB257100;
  if (v0) {
    return 3.0;
  }
  return result;
}

double _UIDragInteractionDefaultPointerLiftDelay()
{
  int v0 = +[UIDevice currentDevice];
  uint64_t v1 = [v0 userInterfaceIdiom];

  if (v1 == 6)
  {
    int v2 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257138, @"DragInteractionDefaultPointerLiftDelayVisionIdiom", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
    double result = *(double *)&qword_1EB257140;
    BOOL v4 = v2 == 0;
    double v5 = 0.35;
  }
  else
  {
    int v6 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257128, @"DragInteractionDefaultPointerLiftDelay", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
    double result = *(double *)&qword_1EB257130;
    BOOL v4 = v6 == 0;
    double v5 = 0.325;
  }
  if (!v4) {
    return v5;
  }
  return result;
}

id _UIClickInteractionDefaultDrivers()
{
  v2[3] = *MEMORY[0x1E4F143B8];
  v2[0] = _UIClickInteractionDriverForActivationStyle();
  v2[1] = objc_opt_class();
  v2[2] = objc_opt_class();
  int v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:3];
  return v0;
}

id _UIClickInteractionDriverForActivationStyle()
{
  int v0 = objc_opt_class();
  return v0;
}

double _UIDragInteractionDefaultPointerLiftMoveHysteresis()
{
  int v0 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257148, @"DragInteractionDefaultPointerLiftMoveHysteresis", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double result = *(double *)&qword_1EB257150;
  if (v0) {
    return 3.0;
  }
  return result;
}

double _UIDragInteractionDefaultLiftMoveHysteresis()
{
  int v0 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257118, @"DragInteractionDefaultLiftMoveHysteresis", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double result = *(double *)&qword_1EB257120;
  if (v0) {
    return 10.0;
  }
  return result;
}

double _UIDragInteractionDefaultLiftDelay()
{
  int v0 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB2570E8, @"DragInteractionDefaultLiftDelay", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
  double result = *(double *)&qword_1EB2570F0;
  if (v0) {
    return 0.325;
  }
  return result;
}

id UICollectionLayoutListConfiguration.headerMode.setter(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    double v5 = *(void **)(v4 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v4 + 16), sel_copy);
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1856ACF00();
    swift_dynamicCast();
    double v5 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v8;
    swift_release();
    *uint64_t v1 = v6;
  }
  return objc_msgSend(v5, sel_setHeaderMode_, v2);
}

void targetListChangeNotificationCallback(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_185481E6C(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256448, &qword_1EB256438);
}

double _UIAddPointValueForAxisFromPoint(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v7 = _UIPointValueForAxis(a1, a4, a5);
  return a2 + _UISetPointValueForAxis(a1, *MEMORY[0x1E4F1DAD8], *(double *)(MEMORY[0x1E4F1DAD8] + 8), v7);
}

double _UISetSizeValueForAxis(uint64_t a1, double a2, double a3, double a4)
{
  if (a1 != 2)
  {
    if (a1 == 1)
    {
      return a4;
    }
    else
    {
      double v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", "CGSize _UISetSizeValueForAxis(CGSize, CGFloat, UIAxis)");
      [v5 handleFailureInFunction:v6 file:@"_UICollectionLayoutHelpers.m" lineNumber:211 description:@"Unknown layout axis."];
    }
  }
  return a2;
}

void sub_185484224(_Unwind_Exception *a1)
{
}

double _UITotalEdgeDimensionsForLayoutAxis(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if (a1 == 1) {
    return a3 + a5;
  }
  if (a1 == 2) {
    return a2 + a4;
  }
  uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
  double v7 = objc_msgSend(NSString, "stringWithUTF8String:", "CGFloat _UITotalEdgeDimensionsForLayoutAxis(NSDirectionalEdgeInsets, UIAxis)");
  [v6 handleFailureInFunction:v7 file:@"_UICollectionLayoutHelpers.m" lineNumber:478 description:@"Unknown axis."];

  return 0.0;
}

double _UISizeValueForAxis(uint64_t a1, double a2, double a3)
{
  if (a1 != 1)
  {
    if (a1 == 2)
    {
      return a3;
    }
    else
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      double v5 = objc_msgSend(NSString, "stringWithUTF8String:", "CGFloat _UISizeValueForAxis(CGSize, UIAxis)");
      [v4 handleFailureInFunction:v5 file:@"_UICollectionLayoutHelpers.m" lineNumber:199 description:@"Unknown layout axis."];

      return 0.0;
    }
  }
  return result;
}

double _UISetPointValueForAxis(uint64_t a1, double a2, double a3, double a4)
{
  if (a1 != 2)
  {
    if (a1 == 1)
    {
      return a4;
    }
    else
    {
      double v5 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v6 = objc_msgSend(NSString, "stringWithUTF8String:", "CGPoint _UISetPointValueForAxis(CGPoint, CGFloat, UIAxis)");
      [v5 handleFailureInFunction:v6 file:@"_UICollectionLayoutHelpers.m" lineNumber:169 description:@"Unknown layout axis."];
    }
  }
  return a2;
}

double _UIPointValueForAxis(uint64_t a1, double a2, double a3)
{
  if (a1 != 1)
  {
    if (a1 == 2)
    {
      return a3;
    }
    else
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      double v5 = objc_msgSend(NSString, "stringWithUTF8String:", "CGFloat _UIPointValueForAxis(CGPoint, UIAxis)");
      [v4 handleFailureInFunction:v5 file:@"_UICollectionLayoutHelpers.m" lineNumber:157 description:@"Unhandled layout axis."];

      return 0.0;
    }
  }
  return result;
}

uint64_t _UIDirectionalEdgeForPreEdgeOnLayoutAxis(uint64_t a1)
{
  if ((unint64_t)(a1 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"NSDirectionalRectEdge _UIDirectionalEdgeForPreEdgeOnLayoutAxis(UIAxis)"];
    [v3 handleFailureInFunction:v4 file:@"_UICollectionLayoutHelpers.m" lineNumber:1045 description:@"Invalid layout axis."];
  }
  if (a1 == 2) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t _UIDirectionalEdgeForPostEdgeOnLayoutAxis(uint64_t a1)
{
  if ((unint64_t)(a1 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"NSDirectionalRectEdge _UIDirectionalEdgeForPostEdgeOnLayoutAxis(UIAxis)"];
    [v3 handleFailureInFunction:v4 file:@"_UICollectionLayoutHelpers.m" lineNumber:1051 description:@"Invalid layout axis."];
  }
  if (a1 == 2) {
    return 4;
  }
  else {
    return 8;
  }
}

void __destructor_8_s64_s72_s80_s88_s96_s112(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
}

id __copy_constructor_8_8_t0w64_s64_s72_s80_s88_s96_t104w4_s112(uint64_t a1, id *a2)
{
  long long v4 = *(_OWORD *)a2;
  long long v5 = *((_OWORD *)a2 + 1);
  long long v6 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  id result = a2[14];
  *(void *)(a1 + 112) = result;
  return result;
}

NSString *__cdecl NSStringFromDirectionalEdgeInsets(NSDirectionalEdgeInsets insets)
{
  uint64_t v1 = (__CFString *)CFStringCreateWithFormat(0, 0, @"{%.*g, %.*g, %.*g, %.*g}", 17, *(void *)&insets.top, 17, *(void *)&insets.leading, 17, *(void *)&insets.bottom, 17, *(void *)&insets.trailing);
  return (NSString *)v1;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

void __Block_byref_object_dispose__21(uint64_t a1)
{
}

void __Block_byref_object_dispose__22(uint64_t a1)
{
}

void __Block_byref_object_dispose__23(uint64_t a1)
{
}

void __Block_byref_object_dispose__24(uint64_t a1)
{
}

void __Block_byref_object_dispose__25(uint64_t a1)
{
}

void __Block_byref_object_dispose__26(uint64_t a1)
{
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void __Block_byref_object_dispose__28(uint64_t a1)
{
}

void __Block_byref_object_dispose__29(uint64_t a1)
{
}

void __Block_byref_object_dispose__30(uint64_t a1)
{
}

void __Block_byref_object_dispose__31(uint64_t a1)
{
}

void __Block_byref_object_dispose__32(uint64_t a1)
{
}

void __Block_byref_object_dispose__33(uint64_t a1)
{
}

void __Block_byref_object_dispose__34(uint64_t a1)
{
}

void __Block_byref_object_dispose__35(uint64_t a1)
{
}

void __Block_byref_object_dispose__36(uint64_t a1)
{
}

void __Block_byref_object_dispose__37(uint64_t a1)
{
}

void __Block_byref_object_dispose__38(uint64_t a1)
{
}

void __Block_byref_object_dispose__39(uint64_t a1)
{
}

void __Block_byref_object_dispose__40(uint64_t a1)
{
}

void __Block_byref_object_dispose__41(uint64_t a1)
{
}

void __Block_byref_object_dispose__43(uint64_t a1)
{
}

void __Block_byref_object_dispose__44(uint64_t a1)
{
}

void __Block_byref_object_dispose__45(uint64_t a1)
{
}

void __Block_byref_object_dispose__46(uint64_t a1)
{
}

void __Block_byref_object_dispose__47(uint64_t a1)
{
}

void __Block_byref_object_dispose__48(uint64_t a1)
{
}

void __Block_byref_object_dispose__49(uint64_t a1)
{
}

void __Block_byref_object_dispose__50(uint64_t a1)
{
}

void __Block_byref_object_dispose__51(uint64_t a1)
{
}

void __Block_byref_object_dispose__52(uint64_t a1)
{
}

void __Block_byref_object_dispose__53(uint64_t a1)
{
}

void __Block_byref_object_dispose__54(uint64_t a1)
{
}

void __Block_byref_object_dispose__55(uint64_t a1)
{
}

void __Block_byref_object_dispose__56(uint64_t a1)
{
}

void __Block_byref_object_dispose__57(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__58(uint64_t a1)
{
}

void __Block_byref_object_dispose__59(uint64_t a1)
{
}

void __Block_byref_object_dispose__60(uint64_t a1)
{
}

void __Block_byref_object_dispose__61(uint64_t a1)
{
}

void __Block_byref_object_dispose__62(uint64_t a1)
{
}

void __Block_byref_object_dispose__63(uint64_t a1)
{
}

void __Block_byref_object_dispose__64(uint64_t a1)
{
}

void __Block_byref_object_dispose__65(uint64_t a1)
{
}

void __Block_byref_object_dispose__66(uint64_t a1)
{
}

void __Block_byref_object_dispose__67(uint64_t a1)
{
}

void __Block_byref_object_dispose__68(uint64_t a1)
{
}

void __Block_byref_object_dispose__69(uint64_t a1)
{
}

void __Block_byref_object_dispose__70(uint64_t a1)
{
}

void __Block_byref_object_dispose__71(uint64_t a1)
{
}

void __Block_byref_object_dispose__72(uint64_t a1)
{
}

void __Block_byref_object_dispose__73(uint64_t a1)
{
}

void __Block_byref_object_dispose__74(uint64_t a1)
{
}

void __Block_byref_object_dispose__75(uint64_t a1)
{
}

void __Block_byref_object_dispose__76(uint64_t a1)
{
}

void __Block_byref_object_dispose__77(uint64_t a1)
{
}

void __Block_byref_object_dispose__78(uint64_t a1)
{
}

void __Block_byref_object_dispose__79(uint64_t a1)
{
}

void __Block_byref_object_dispose__80(uint64_t a1)
{
}

void __Block_byref_object_dispose__81(uint64_t a1)
{
}

void __Block_byref_object_dispose__82(uint64_t a1)
{
}

void __Block_byref_object_dispose__83(uint64_t a1)
{
}

void __Block_byref_object_dispose__84(uint64_t a1)
{
}

void __Block_byref_object_dispose__85(uint64_t a1)
{
}

void __Block_byref_object_dispose__86(uint64_t a1)
{
}

void __Block_byref_object_dispose__87(uint64_t a1)
{
}

void __Block_byref_object_dispose__88(uint64_t a1)
{
}

void __Block_byref_object_dispose__89(uint64_t a1)
{
}

void __Block_byref_object_dispose__90(uint64_t a1)
{
}

void __Block_byref_object_dispose__91(uint64_t a1)
{
}

void __Block_byref_object_dispose__92(uint64_t a1)
{
}

void __Block_byref_object_dispose__93(uint64_t a1)
{
}

void __Block_byref_object_dispose__94(uint64_t a1)
{
}

void __Block_byref_object_dispose__95(uint64_t a1)
{
}

void __Block_byref_object_dispose__96(uint64_t a1)
{
}

void __Block_byref_object_dispose__97(uint64_t a1)
{
}

void __Block_byref_object_dispose__98(uint64_t a1)
{
}

void __Block_byref_object_dispose__99(uint64_t a1)
{
}

void __Block_byref_object_dispose__100(uint64_t a1)
{
}

void __Block_byref_object_dispose__101(uint64_t a1)
{
}

void __Block_byref_object_dispose__102(uint64_t a1)
{
}

void __Block_byref_object_dispose__103(uint64_t a1)
{
}

void __Block_byref_object_dispose__104(uint64_t a1)
{
}

void __Block_byref_object_dispose__105(uint64_t a1)
{
}

void __Block_byref_object_dispose__106(uint64_t a1)
{
}

void __Block_byref_object_dispose__107(uint64_t a1)
{
}

void __Block_byref_object_dispose__108(uint64_t a1)
{
}

void __Block_byref_object_dispose__109(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__110(uint64_t a1)
{
}

void __Block_byref_object_dispose__111(uint64_t a1)
{
}

void __Block_byref_object_dispose__112(uint64_t a1)
{
}

void __Block_byref_object_dispose__113(uint64_t a1)
{
}

void __Block_byref_object_dispose__114(uint64_t a1)
{
}

void __Block_byref_object_dispose__115(uint64_t a1)
{
}

void __Block_byref_object_dispose__116(uint64_t a1)
{
}

void __Block_byref_object_dispose__117(uint64_t a1)
{
}

void __Block_byref_object_dispose__118(uint64_t a1)
{
}

void __Block_byref_object_dispose__119(uint64_t a1)
{
}

void __Block_byref_object_dispose__120(uint64_t a1)
{
}

void __Block_byref_object_dispose__121(uint64_t a1)
{
}

void __Block_byref_object_dispose__122(uint64_t a1)
{
}

void __Block_byref_object_dispose__123(uint64_t a1)
{
}

void __Block_byref_object_dispose__124(uint64_t a1)
{
}

void __Block_byref_object_dispose__125(uint64_t a1)
{
}

void __Block_byref_object_dispose__126(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__127(uint64_t a1)
{
}

void __Block_byref_object_dispose__128(uint64_t a1)
{
}

void __Block_byref_object_dispose__129(uint64_t a1)
{
}

void __Block_byref_object_dispose__130(uint64_t a1)
{
}

{
  objc_destroyWeak((id *)(a1 + 40));
}

void __Block_byref_object_dispose__131(uint64_t a1)
{
}

void __Block_byref_object_dispose__132(uint64_t a1)
{
}

void __Block_byref_object_dispose__133(uint64_t a1)
{
}

void __Block_byref_object_dispose__134(uint64_t a1)
{
}

void __Block_byref_object_dispose__135(uint64_t a1)
{
}

void __Block_byref_object_dispose__136(uint64_t a1)
{
}

void __Block_byref_object_dispose__137(uint64_t a1)
{
}

void __Block_byref_object_dispose__138(uint64_t a1)
{
}

void __Block_byref_object_dispose__139(uint64_t a1)
{
}

void __Block_byref_object_dispose__140(uint64_t a1)
{
}

void __Block_byref_object_dispose__141(uint64_t a1)
{
}

void __Block_byref_object_dispose__142(uint64_t a1)
{
}

void __Block_byref_object_dispose__143(uint64_t a1)
{
}

void __Block_byref_object_dispose__144(uint64_t a1)
{
}

void __Block_byref_object_dispose__145(uint64_t a1)
{
}

void __Block_byref_object_dispose__146(uint64_t a1)
{
}

void __Block_byref_object_dispose__147(uint64_t a1)
{
}

void __Block_byref_object_dispose__148(uint64_t a1)
{
}

void __Block_byref_object_dispose__149(uint64_t a1)
{
}

void __Block_byref_object_dispose__150(uint64_t a1)
{
}

void __Block_byref_object_dispose__151(uint64_t a1)
{
}

void __Block_byref_object_dispose__152(uint64_t a1)
{
}

void __Block_byref_object_dispose__153(uint64_t a1)
{
}

void __Block_byref_object_dispose__154(uint64_t a1)
{
}

void __Block_byref_object_dispose__155(uint64_t a1)
{
}

void __Block_byref_object_dispose__156(uint64_t a1)
{
}

void __Block_byref_object_dispose__157(uint64_t a1)
{
}

void __Block_byref_object_dispose__158(uint64_t a1)
{
}

void __Block_byref_object_dispose__159(uint64_t a1)
{
}

void __Block_byref_object_dispose__160(uint64_t a1)
{
}

void __Block_byref_object_dispose__161(uint64_t a1)
{
}

void __Block_byref_object_dispose__162(uint64_t a1)
{
}

void __Block_byref_object_dispose__163(uint64_t a1)
{
}

void __Block_byref_object_dispose__164(uint64_t a1)
{
}

void __Block_byref_object_dispose__165(uint64_t a1)
{
}

void __Block_byref_object_dispose__166(uint64_t a1)
{
}

void __Block_byref_object_dispose__167(uint64_t a1)
{
}

void __Block_byref_object_dispose__168(uint64_t a1)
{
}

void __Block_byref_object_dispose__169(uint64_t a1)
{
}

void __Block_byref_object_dispose__170(uint64_t a1)
{
}

void __Block_byref_object_dispose__171(uint64_t a1)
{
}

void __Block_byref_object_dispose__172(uint64_t a1)
{
}

void __Block_byref_object_dispose__173(uint64_t a1)
{
}

void __Block_byref_object_dispose__174(uint64_t a1)
{
}

void __Block_byref_object_dispose__175(uint64_t a1)
{
}

void __Block_byref_object_dispose__176(uint64_t a1)
{
}

void __Block_byref_object_dispose__177(uint64_t a1)
{
}

void __Block_byref_object_dispose__178(uint64_t a1)
{
}

void __Block_byref_object_dispose__179(uint64_t a1)
{
}

void __Block_byref_object_dispose__180(uint64_t a1)
{
}

void __Block_byref_object_dispose__181(uint64_t a1)
{
}

void __Block_byref_object_dispose__182(uint64_t a1)
{
}

void __Block_byref_object_dispose__183(uint64_t a1)
{
}

void __Block_byref_object_dispose__184(uint64_t a1)
{
}

void __Block_byref_object_dispose__185(uint64_t a1)
{
}

void __Block_byref_object_dispose__186(uint64_t a1)
{
}

void __Block_byref_object_dispose__187(uint64_t a1)
{
}

void __Block_byref_object_dispose__188(uint64_t a1)
{
}

void __Block_byref_object_dispose__189(uint64_t a1)
{
}

void __Block_byref_object_dispose__190(uint64_t a1)
{
}

void __Block_byref_object_dispose__191(uint64_t a1)
{
}

void __Block_byref_object_dispose__192(uint64_t a1)
{
}

void __Block_byref_object_dispose__193(uint64_t a1)
{
}

void __Block_byref_object_dispose__194(uint64_t a1)
{
}

void __Block_byref_object_dispose__195(uint64_t a1)
{
}

void __Block_byref_object_dispose__196(uint64_t a1)
{
}

void __Block_byref_object_dispose__197(uint64_t a1)
{
}

void __Block_byref_object_dispose__198(uint64_t a1)
{
}

void __Block_byref_object_dispose__199(uint64_t a1)
{
}

void __Block_byref_object_dispose__200(uint64_t a1)
{
}

void __Block_byref_object_dispose__201(uint64_t a1)
{
}

void __Block_byref_object_dispose__202(uint64_t a1)
{
}

void __Block_byref_object_dispose__203(uint64_t a1)
{
}

void __Block_byref_object_dispose__204(uint64_t a1)
{
}

void __Block_byref_object_dispose__205(uint64_t a1)
{
}

void __Block_byref_object_dispose__206(uint64_t a1)
{
}

void __Block_byref_object_dispose__207(uint64_t a1)
{
}

void __Block_byref_object_dispose__208(uint64_t a1)
{
}

void __Block_byref_object_dispose__209(uint64_t a1)
{
}

void __Block_byref_object_dispose__210(uint64_t a1)
{
}

void __Block_byref_object_dispose__211(uint64_t a1)
{
}

void __Block_byref_object_dispose__212(uint64_t a1)
{
}

void __Block_byref_object_dispose__213(uint64_t a1)
{
}

void __Block_byref_object_dispose__214(uint64_t a1)
{
}

void __Block_byref_object_dispose__215(uint64_t a1)
{
}

void __Block_byref_object_dispose__216(uint64_t a1)
{
}

void __Block_byref_object_dispose__217(uint64_t a1)
{
}

void __Block_byref_object_dispose__218(uint64_t a1)
{
}

void __Block_byref_object_dispose__219(uint64_t a1)
{
}

void __Block_byref_object_dispose__220(uint64_t a1)
{
}

void __Block_byref_object_dispose__221(uint64_t a1)
{
}

void __Block_byref_object_dispose__222(uint64_t a1)
{
}

void __Block_byref_object_dispose__223(uint64_t a1)
{
}

void __Block_byref_object_dispose__224(uint64_t a1)
{
}

void __Block_byref_object_dispose__225(uint64_t a1)
{
}

void __Block_byref_object_dispose__226(uint64_t a1)
{
}

void __Block_byref_object_dispose__227(uint64_t a1)
{
}

void __Block_byref_object_dispose__228(uint64_t a1)
{
}

void __Block_byref_object_dispose__229(uint64_t a1)
{
}

void __Block_byref_object_dispose__230(uint64_t a1)
{
}

void __Block_byref_object_dispose__231(uint64_t a1)
{
}

void __Block_byref_object_dispose__232(uint64_t a1)
{
}

void __Block_byref_object_dispose__233(uint64_t a1)
{
}

void __Block_byref_object_dispose__234(uint64_t a1)
{
}

void __Block_byref_object_dispose__235(uint64_t a1)
{
}

void __Block_byref_object_dispose__236(uint64_t a1)
{
}

void __Block_byref_object_dispose__237(uint64_t a1)
{
}

void __Block_byref_object_dispose__238(uint64_t a1)
{
}

void __Block_byref_object_dispose__239(uint64_t a1)
{
}

void __Block_byref_object_dispose__240(uint64_t a1)
{
}

void __Block_byref_object_dispose__241(uint64_t a1)
{
}

void __Block_byref_object_dispose__242(uint64_t a1)
{
}

void __Block_byref_object_dispose__243(uint64_t a1)
{
}

void __Block_byref_object_dispose__244(uint64_t a1)
{
}

void __Block_byref_object_dispose__245(uint64_t a1)
{
}

void __Block_byref_object_dispose__246(uint64_t a1)
{
}

void __Block_byref_object_dispose__247(uint64_t a1)
{
}

void __Block_byref_object_dispose__248(uint64_t a1)
{
}

void UIGraphicsPopContext(void)
{
  ContextStacuint64_t k = (int *)GetContextStack(0);
  PopContextFromStack(ContextStack);
}

void sub_185487B60(_Unwind_Exception *a1)
{
  _UIEmitSignpostEvent((_DWORD *)(v1 - 144));
  _Unwind_Resume(a1);
}

void PopContextFromStack(int *a1)
{
  int v1 = *a1 - 1;
  if (*a1 >= 1)
  {
    *a1 = v1;
    id v3 = *(CGContext **)&a1[6 * v1 + 2];
    if (v3)
    {
      CGContextRelease(v3);
      int v1 = *a1;
    }
    long long v4 = *(void **)&a1[6 * v1 + 6];
    if (v4)
    {
      free(v4);
    }
  }
}

void UIGraphicsPushContext(CGContextRef context)
{
  ContextStacuint64_t k = (int *)GetContextStack(1);
  CGContextRef v3 = CGContextRetain(context);
  int v4 = *ContextStack;
  long long v5 = &ContextStack[6 * *ContextStack];
  *((void *)v5 + 1) = v3;
  v5[4] = 0;
  *((void *)v5 + 3) = 0;
  *ContextStacuint64_t k = v4 + 1;
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  ContextStacuint64_t k = GetContextStack(0);
  if (*(int *)ContextStack < 1) {
    return 0;
  }
  else {
    return (CGContextRef)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
  }
}

void *GetContextStack(int a1)
{
  pthread_once(&GetContextStack___contextThreadKeyOnce, (void (*)(void))CreateContextKey);
  uint64_t v2 = (int *)pthread_getspecific(__contextThreadKey);
  if (!v2)
  {
    CGContextRef v3 = malloc_type_malloc(0x68uLL, 0xF41D755uLL);
    *CGContextRef v3 = 0x400000000;
    goto LABEL_6;
  }
  CGContextRef v3 = v2;
  if (a1)
  {
    uint64_t v4 = *v2;
    if (v4 == v2[1])
    {
      uint64_t v5 = v4 + 4;
      v2[1] = v5;
      CGContextRef v3 = malloc_type_realloc(v2, 24 * v5 + 8, 0xB9B7A573uLL);
LABEL_6:
      pthread_setspecific(__contextThreadKey, v3);
    }
  }
  return v3;
}

void sub_185488304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIGraphicsBeginImageContextWithOptions(int a1, int a2, CGFloat a3, CGFloat a4, double a5)
{
  double v6 = a5;
  if (a5 == 0.0) {
    double v6 = _UIScreenForcedMainScreenScale(1);
  }
  int v10 = vcvtpd_s64_f64(a3 * v6);
  int v11 = vcvtpd_s64_f64(a4 * v6);
  if (a1) {
    unsigned int v12 = 8198;
  }
  else {
    unsigned int v12 = 8194;
  }
  if (a2) {
    uint64_t v13 = 7;
  }
  else {
    uint64_t v13 = v12;
  }
  int AlignedBytesPerRow = CGBitmapGetAlignedBytesPerRow();
  if (a2) {
    DeviceRGB = 0;
  }
  else {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  }
  uint64_t v16 = CGBitmapContextCreate(0, v10, v11, 8uLL, AlignedBytesPerRow, DeviceRGB, v13);
  CGColorSpaceRelease(DeviceRGB);
  if (v16)
  {
    v28.size.width = (double)v10;
    v28.origin.x = 0.0;
    v28.origin.double y = 0.0;
    v28.size.double height = (double)v11;
    CGContextClearRect(v16, v28);
    CGContextTranslateCTM(v16, 0.0, (double)v11);
    CGContextScaleCTM(v16, v6, -v6);
    CGContextGetCTM(&v25, v16);
    CGContextSetBaseCTM();
    uint64_t v17 = (double *)malloc_type_malloc(0x10uLL, 0x10000409B4BCFF8uLL);
    *uint64_t v17 = v6;
    *((unsigned char *)v17 + 8) = a1;
    ContextStacuint64_t k = (int *)GetContextStack(1);
    CGContextRef v19 = CGContextRetain(v16);
    int v20 = *ContextStack;
    double v21 = &ContextStack[6 * *ContextStack];
    *((void *)v21 + 1) = v19;
    v21[4] = 1;
    *((void *)v21 + 3) = v17;
    *ContextStacuint64_t k = v20 + 1;
    CGContextRelease(v16);
  }
  else if (dyld_program_sdk_at_least())
  {
    id v24 = [MEMORY[0x1E4F28B00] currentHandler];
    double v22 = objc_msgSend(NSString, "stringWithUTF8String:", "void _UIGraphicsBeginImageContextWithOptions(CGSize, BOOL, CGFloat, BOOL)");
    v27.width = a3;
    v27.double height = a4;
    unint64_t v23 = NSStringFromCGSize(v27);
    [v24 handleFailureInFunction:v22, @"UIGraphics.m", 410, @"UIGraphicsBeginImageContext() failed to allocate CGBitampContext: size=%@, scale=%f, bitmapInfo=0x%x. Use UIGraphicsImageRenderer to avoid this assert.", v23, *(void *)&v6, v13 file lineNumber description];
  }
}

id _UIGraphicsGetImageFromCurrentImageContext(int a1)
{
  CurrentContext = (CGContext *)GetCurrentContext(1);
  if (CurrentContext)
  {
    CGContextRef v3 = CurrentContext;
    if (a1)
    {
      size_t Width = CGBitmapContextGetWidth(CurrentContext);
      size_t Height = CGBitmapContextGetHeight(v3);
      double v6 = (void *)MEMORY[0x1E4F1C9B8];
      Data = CGBitmapContextGetData(v3);
      CFDataRef v8 = [v6 dataWithBytes:Data length:CGBitmapContextGetBytesPerRow(v3) * Height];
      id v9 = CGDataProviderCreateWithCFData(v8);
      size_t BytesPerRow = CGBitmapContextGetBytesPerRow(v3);
      Image = CGImageMaskCreate(Width, Height, 8uLL, 8uLL, BytesPerRow, v9, 0, 0);
      CGDataProviderRelease(v9);

      if (Image)
      {
LABEL_4:
        CurrentContextAuxInfo = (double *)GetCurrentContextAuxInfo(1);
        if (CurrentContextAuxInfo) {
          double v13 = *CurrentContextAuxInfo;
        }
        else {
          double v13 = 1.0;
        }
        long long v14 = +[UIImage imageWithCGImage:Image scale:0 orientation:v13];
        CGImageRelease(Image);
        goto LABEL_10;
      }
    }
    else
    {
      Image = CGBitmapContextCreateImage(CurrentContext);
      if (Image) {
        goto LABEL_4;
      }
    }
  }
  long long v14 = 0;
LABEL_10:
  return v14;
}

uint64_t GetCurrentContextAuxInfo(int a1)
{
  ContextStacuint64_t k = GetContextStack(0);
  unsigned int v3 = *(_DWORD *)ContextStack - 1;
  if (*(int *)ContextStack >= 1 && LODWORD(ContextStack[3 * v3 + 2]) == a1) {
    return ContextStack[3 * v3 + 3];
  }
  else {
    return 0;
  }
}

void _setContentStretchForImage(void *a1, void *a2)
{
  id object = a1;
  id v3 = a2;
  uint64_t v4 = objc_getAssociatedObject(object, &_setContentStretchForImage___contentStretchLastSetByUIImageViewKey);
  uint64_t v5 = v4;
  if (v4)
  {
    [v4 CGRectValue];
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
  }
  else
  {
    CGFloat v11 = 1.0;
    CGFloat v7 = 0.0;
    CGFloat v9 = 0.0;
    CGFloat v13 = 1.0;
  }
  long long v14 = [object layer];
  [v14 contentsCenter];
  v51.origin.x = v15;
  v51.origin.double y = v16;
  v51.size.width = v17;
  v51.size.double height = v18;
  v49.origin.x = v7;
  v49.origin.double y = v9;
  v49.size.width = v11;
  v49.size.double height = v13;
  BOOL v19 = CGRectEqualToRect(v49, v51);

  if (v19)
  {
    [v3 _sizeInPixels];
    double v21 = v20;
    double v23 = v22;
    if ([v3 _isSubimage])
    {
      [v3 _contentRectInPixels];
      objc_msgSend(object, "_setContentRectInPixels:forContentSize:");
    }
    [v3 _contentStretchInPixels];
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;
    double v31 = v30;
    [object bounds];
    objc_msgSend(object, "_setContentStretchInPixels:forContentSize:shouldTile:", objc_msgSend(v3, "_isTiledWhenStretchedToSize:", v32, v33), v25, v27, v29, v31, v21, v23);
    double v34 = [object layer];
    [v34 contentsCenter];
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;

    v52.origin.x = 0.0;
    v52.origin.double y = 0.0;
    v52.size.width = 1.0;
    v52.size.double height = 1.0;
    v50.origin.x = v36;
    v50.origin.double y = v38;
    v50.size.width = v40;
    v50.size.double height = v42;
    BOOL v43 = CGRectEqualToRect(v50, v52);
    if (v5 || !v43)
    {
      double v44 = (void *)MEMORY[0x1E4F29238];
      double v45 = [object layer];
      [v45 contentsCenter];
      double v46 = objc_msgSend(v44, "valueWithCGRect:");
      objc_setAssociatedObject(object, &_setContentStretchForImage___contentStretchLastSetByUIImageViewKey, v46, (void *)1);
    }
  }
}

void UIGraphicsEndImageContext(void)
{
  if (GetCurrentContext(1))
  {
    ContextStacuint64_t k = (int *)GetContextStack(0);
    PopContextFromStack(ContextStack);
  }
}

uint64_t GetCurrentContext(int a1)
{
  ContextStacuint64_t k = GetContextStack(0);
  unsigned int v3 = *(_DWORD *)ContextStack - 1;
  if (*(int *)ContextStack >= 1 && LODWORD(ContextStack[3 * v3 + 2]) == a1) {
    return ContextStack[3 * v3 + 1];
  }
  else {
    return 0;
  }
}

void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode)
{
  CGFloat height = rect.size.height;
  CGFloat width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  ContextStacuint64_t k = GetContextStack(0);
  if (*(int *)ContextStack < 1) {
    double v8 = 0;
  }
  else {
    double v8 = (CGContext *)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
  }
  CGBlendMode v9 = CGContextGetBlendMode();
  if (v9 == blendMode)
  {
    CGFloat v10 = x;
    CGFloat v11 = y;
    CGFloat v12 = width;
    CGFloat v13 = height;
    CGContextFillRect(v8, *(CGRect *)&v10);
  }
  else
  {
    CGBlendMode v14 = v9;
    CGContextSetBlendMode(v8, blendMode);
    v16.origin.CGFloat x = x;
    v16.origin.CGFloat y = y;
    v16.size.CGFloat width = width;
    v16.size.CGFloat height = height;
    CGContextFillRect(v8, v16);
    CGContextSetBlendMode(v8, v14);
  }
}

void UISetColor(CGColor *a1)
{
  ContextStacuint64_t k = GetContextStack(0);
  if (*(int *)ContextStack < 1) {
    unsigned int v3 = 0;
  }
  else {
    unsigned int v3 = (CGContext *)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
  }
  CGContextSetStrokeColorWithColor(v3, a1);
  CGContextSetFillColorWithColor(v3, a1);
}

void UIRectFill(CGRect rect)
{
}

void UIColorBreakForOutOfRangeColorComponents()
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __UIColorBreakForOutOfRangeColorComponents_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = "UIColorBreakForOutOfRangeColorComponents";
  if (UIColorBreakForOutOfRangeColorComponents_once != -1) {
    dispatch_once(&UIColorBreakForOutOfRangeColorComponents_once, block);
  }
}

uint64_t sub_18548ABC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(char *, uint64_t, uint64_t, void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v17 = a4;
  CGFloat v18 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  CGBlendMode v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_186A1F12C();
  MEMORY[0x1F4188790](v11 - 8);
  CGFloat v13 = (char *)&v17 - v12;
  sub_186A1EAEC();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18(v9, a1, AssociatedTypeWitness, *(void *)(AssociatedConformanceWitness + 8));
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  sub_186A1EAFC();
  uint64_t v15 = *(void *)(a2 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, a2);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v13, a2);
  }
  __break(1u);
  return result;
}

float sub_18548AE0C@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

_DWORD *sub_18548AE18@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_18548DD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_18548E3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18548F5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

_UIOrderedRangeIndexerImpl *_UIOrderedRangeIndexerImpl::binarySearchForLocation@<X0>(_UIOrderedRangeIndexerImpl *this@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = *((void *)this + 3);
  BOOL v5 = a2 >= v3;
  unint64_t v4 = a2 - v3;
  BOOL v5 = !v5 || v4 >= *((void *)this + 4);
  if (!v5) {
    return _UIOrderedRangeIndexerImpl::binarySearchForLocation(this, a2, 0, ((uint64_t)(*((void *)this + 1) - *(void *)this) >> 4) - 1, a3);
  }
  *(void *)(a3 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)a3 = xmmword_186B93450;
  return this;
}

_UIOrderedRangeIndexerImpl *_UIOrderedRangeIndexerImpl::binarySearchForLocation@<X0>(_UIOrderedRangeIndexerImpl *this@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_OWORD *)a5 = xmmword_186B93450;
  *(void *)(a5 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  if (a3 <= a4)
  {
    while (1)
    {
      uint64_t v5 = a4 + a3;
      if (a4 + a3 < 0 != __OFADD__(a4, a3)) {
        ++v5;
      }
      uint64_t v6 = v5 >> 1;
      uint64_t v7 = (unint64_t *)(*(void *)this + 16 * v6);
      unint64_t v8 = *v7;
      unint64_t v9 = v7[1];
      if (a2 >= v8 && a2 - v8 < v9) {
        break;
      }
      if (a3 == a4) {
        return this;
      }
      if (v9 + v8 <= a2)
      {
        a3 = v6 + 1;
        if (v6 >= a4) {
          return this;
        }
      }
      else
      {
        a4 = v6 - 1;
        if (a3 >= v6) {
          return this;
        }
      }
    }
    *(void *)a5 = v8;
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v6;
  }
  return this;
}

void sub_185493840(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_185493CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_185494B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UITableCellLineHeightCenteredViewInRect(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = [v11 viewForLastBaselineLayout];
  [v11 _baselineOffsetFromBottom];
  double v15 = v14;
  [v11 alignmentRectInsets];
  double v17 = v15 + v16;
  if (v13 && v13 != v11)
  {
    [v13 bounds];
    double Height = CGRectGetHeight(v28);
    [v13 _baselineOffsetFromBottom];
    double v20 = v19;
    [v13 alignmentRectInsets];
    objc_msgSend(v13, "convertPoint:toView:", v11, 0.0, Height - (v20 + v21));
    double v23 = v22;
    [v11 bounds];
    double v17 = CGRectGetHeight(v29) - v23;
  }
  [v11 bounds];
  double v26 = _UITableCellLineHeightCenteredSizeWithBaselineInRect(v12, v24, v25, v17, 1.0, a3, a4, a5, a6);

  return v26;
}

uint64_t extractContentSizeConstraints(uint64_t result, void *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = result;
  if (a3) {
    *a3 = 0;
  }
  if (a4) {
    *a4 = 0;
  }
  if (a2)
  {
    float result = [a2 count];
    if (result)
    {
      if (result == 2)
      {
        if (a3)
        {
          float result = [a2 objectAtIndex:0];
          *a3 = result;
        }
        if (a4)
        {
          float result = [a2 objectAtIndex:1];
          *a4 = result;
        }
      }
      else if (result == 1)
      {
        unint64_t v8 = (void *)[a2 objectAtIndex:0];
        float result = [v8 firstAttribute];
        if (result == 8)
        {
          if (a4) {
            *a4 = (uint64_t)v8;
          }
        }
        else if (result == 7)
        {
          if (a3) {
            *a3 = (uint64_t)v8;
          }
        }
        else
        {
          return [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3B8], @"Unexpected content size constraint %@ on view %@", v8, v7 format];
        }
      }
      else
      {
        return [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3B8], @"Unexpected content size constraints %@ on view %@", a2, v7 format];
      }
    }
  }
  return result;
}

void sub_1854982EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t storeEnumTagSinglePayload for HoverStyleHost(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)float result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)float result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return _AXSAssistiveTouchScannerEnabled() != 0;
}

uint64_t sub_185499004(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_185499088((unint64_t *)&unk_1E8FAFAA0, type metadata accessor for UILayoutPriority);
  uint64_t result = sub_185499088(&qword_1E8FAFB00, type metadata accessor for UILayoutPriority);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_185499088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

uint64_t sub_185499138(_OWORD *a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v13 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v13, (uint64_t)&v49, &qword_1EB255C18);
  if (v50)
  {
    sub_1854B1F20(&v49, (uint64_t)v51);
    int v14 = v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v9, sel_preferredFrameRateRange);
    int v16 = v15;
    int v18 = v17;
    int v20 = v19;
    unsigned int v42 = objc_msgSend(v9, sel_updateReason);
    if (v14 == 3)
    {
      CGRect v29 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v27 = 0;
    }
    else
    {
      objc_msgSend(v9, sel__incrementDidEndCount);
      uint64_t v21 = MEMORY[0x18C109380](a9 + 480);
      if (!v21) {
        goto LABEL_5;
      }
      double v22 = (void *)v21;
      _s23InProcessAnimationStateCMa();
      id v23 = v10;
      id v24 = v22;
      LOBYTE(v22) = sub_186A1F0AC();

      if ((v22 & 1) == 0)
      {
LABEL_5:
        CGFloat v25 = (void *)MEMORY[0x18C109380](a9 + 480);

        if (v25)
        {
          double v26 = (unsigned char *)MEMORY[0x18C109380](a9 + 480);
          if (v26)
          {
            v26[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v10;
      id v28 = v10;
      CGRect v29 = sub_1854A84E8;
    }
    uint64_t v30 = *(void *)(a9 + 496);
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a9 + 496) = v32;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v51, (uint64_t)&v49);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = a9;
        *(void *)(v33 + 24) = v10;
        long long v34 = a1[3];
        *(_OWORD *)(v33 + 64) = a1[2];
        *(_OWORD *)(v33 + 80) = v34;
        long long v35 = a1[1];
        *(_OWORD *)(v33 + 32) = *a1;
        *(_OWORD *)(v33 + 48) = v35;
        long long v36 = a2[2];
        long long v37 = a2[3];
        long long v38 = *a2;
        *(_OWORD *)(v33 + 128) = a2[1];
        *(_OWORD *)(v33 + 144) = v36;
        long long v39 = a2[4];
        *(_OWORD *)(v33 + 160) = v37;
        *(_OWORD *)(v33 + 176) = v39;
        *(_OWORD *)(v33 + 96) = a1[4];
        *(_OWORD *)(v33 + 112) = v38;
        sub_1854B1F20(&v49, v33 + 192);
        *(void *)(v33 + 232) = a3;
        *(void *)(v33 + 240) = a4;
        *(void *)(v33 + 248) = a5;
        *(void *)(v33 + 256) = a6;
        *(void *)(v33 + 264) = a7;
        *(void *)(v33 + 272) = a8;
        *(unsigned char *)(v33 + 280) = v14 != 3;
        *(_DWORD *)(v33 + 284) = v42;
        *(_DWORD *)(v33 + 288) = v16;
        *(_DWORD *)(v33 + 292) = v18;
        *(_DWORD *)(v33 + 296) = v20;
        *(void *)(v33 + 304) = v29;
        *(void *)(v33 + 312) = v27;
        id v40 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1858B3B9C, v33);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v49, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

id UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a2;
  sub_1854B0A60(a1);
  sub_1854AFD40(v7);
  if (a1)
  {
    unint64_t v8 = *(void **)v3;
    uint64_t v9 = swift_allocObject();
    long long v10 = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 32) = v10;
    *(void *)(v9 + 48) = a1;
    *(void *)(v9 + 56) = a2;
    v14[4] = sub_185A25F84;
    v14[5] = v9;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    v14[2] = sub_1858F6298;
    v14[3] = &block_descriptor_12_4;
    id v11 = _Block_copy(v14);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_setDidReorderHandler_, v11);
    _Block_release(v11);
    return (id)sub_1854AFD40(a1);
  }
  else
  {
    uint64_t v13 = *(void **)v3;
    return objc_msgSend(v13, sel_setDidReorderHandler_, 0);
  }
}

uint64_t sub_18549962C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char *a6)
{
  if ((*(unsigned char *)(a2 + 672) & 1) == 0)
  {
    uint64_t v9 = a3();
    MEMORY[0x1F4188790](v9);
    id v11 = v10 + 4;
    uint64_t v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_1854AEC5C(v11);
    os_unfair_lock_unlock(v12);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(BOOL))(a2 + 656);
    if (v13)
    {
      char v14 = *a6;
      *(void *)(a2 + 656) = 0;
      *(void *)(a2 + 664) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v13);
      v13((v14 & 1) == 0);
      sub_1854AFD40((uint64_t)v13);
    }
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1854A85B0((uint64_t)sub_1858BA68C, a5);
  return swift_release();
}

id UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 8);
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = a2;
  sub_1854B0A60(a1);
  sub_1854AFD40(v7);
  if (a1)
  {
    unint64_t v8 = *(void **)v3;
    uint64_t v9 = swift_allocObject();
    long long v10 = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 32) = v10;
    *(void *)(v9 + 48) = a1;
    *(void *)(v9 + 56) = a2;
    v14[4] = sub_185A25F74;
    v14[5] = v9;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    v14[2] = sub_1859CD644;
    v14[3] = &block_descriptor_45;
    id v11 = _Block_copy(v14);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_setCanReorderItemHandler_, v11);
    _Block_release(v11);
    return (id)sub_1854AFD40(a1);
  }
  else
  {
    uint64_t v13 = *(void **)v3;
    return objc_msgSend(v13, sel_setCanReorderItemHandler_, 0);
  }
}

uint64_t sub_1854998F4()
{
  uint64_t result = type metadata accessor for InProcessAnimation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1854999B8(float a1, float a2, float a3, uint64_t a4, float32x4_t *a5, float32x4_t *a6, char a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  void (*v33)(void *__return_ptr, uint64_t, float32x4_t *, float32x4_t *, float32x4_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  long long v41;
  long long v42;
  uint64_t v43;
  char v44;
  int v45;
  BOOL v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v55;
  NSObject *v58;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  uint64_t v62;
  void v63[78];
  unsigned __int8 v64;
  float32x4_t v65[39];
  char v66;
  void v67[11];
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  long long v78[5];
  float32x4_t v79[5];
  float32x4_t v80[6];

  float32x4_t v22 = a5[3];
  double v75 = a5[2];
  double v76 = v22;
  double v77 = a5[4];
  float32x4_t v23 = *a5;
  double v74 = a5[1];
  double v73 = v23;
  float32x4_t v24 = a6[3];
  CGFloat v70 = a6[2];
  double v71 = v24;
  double v72 = a6[4];
  float32x4_t v25 = *a6;
  CGFloat v69 = a6[1];
  CGFloat v68 = v25;
  uint64_t v26 = a8[3];
  uint64_t v27 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v26);
  swift_beginAccess();
  uint64_t v28 = *(unsigned __int8 *)(v18 + 389);
  CGFloat v62 = v18;
  CGRect v29 = *(os_unfair_lock_s **)(v18 + 32);
  uint64_t v30 = v29 + 4;
  BOOL v31 = v29 + 6;
  os_unfair_lock_lock(v29 + 6);
  CGFloat v60 = v30;
  sub_1854AEC24(v30, v65);
  CGFloat v61 = v31;
  os_unfair_lock_unlock(v31);
  uint64_t v32 = v65[0].i64[0];
  if (v65[0].i64[0])
  {
    swift_beginAccess();
    sub_1853B7020(v32 + 24, (uint64_t)v65, &qword_1E8FAE678);
    swift_release();
  }
  else
  {
    bzero(v65, 0x270uLL);
    CGFloat v66 = -1;
  }
  uint64_t v33 = *(void (**)(void *__return_ptr, uint64_t, float32x4_t *, float32x4_t *, float32x4_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v27 + 16);
  long long v34 = sub_1858B9B58();
  v33(v67, v28, v65, &v73, &v68, &type metadata for UIAnimatableColorMatrix, v34, v26, v27);
  sub_1853B93B8((uint64_t)v65, &qword_1E8FAE680);
  os_unfair_lock_lock(v31);
  sub_1854AEC24(v60, v65);
  os_unfair_lock_unlock(v31);
  long long v35 = v65[0].i64[0];
  if (v65[0].i64[0])
  {
    swift_beginAccess();
    sub_1853B7020(v35 + 24, (uint64_t)v63, &qword_1E8FAE678);
    swift_release();
  }
  else
  {
    bzero(v63, 0x270uLL);
    uint64_t v64 = -1;
  }
  swift_beginAccess();
  v79[2] = v75;
  v79[3] = v76;
  v79[4] = v77;
  v79[1] = v74;
  v79[0] = v73;
  v80[2] = v70;
  v80[3] = v71;
  v80[4] = v72;
  v80[0] = v68;
  v80[1] = v69;
  sub_18549A18C((uint64_t)v63, (uint64_t)v67, a7 & 1, v79, v80, v65);
  swift_endAccess();
  sub_1853B93B8((uint64_t)v63, &qword_1E8FAE680);
  os_unfair_lock_lock(v31);
  sub_1854AEC24(v60, v63);
  os_unfair_lock_unlock(v31);
  long long v36 = v63[0];
  if (v63[0])
  {
    long long v37 = *(void (**)(void))(v63[0] + 656);
    if (v37)
    {
      *(void *)(v63[0] + 656) = 0;
      *(void *)(v36 + 664) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v37);
      v37(0);
      sub_1854AFD40((uint64_t)v37);
    }
    *(unsigned char *)(v36 + 672) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v65, (uint64_t)v63, &qword_1E8FAE678);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAE6A8);
  long long v38 = swift_allocObject();
  *(_OWORD *)(v38 + 656) = 0u;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)v63, v38 + 24, &qword_1E8FAE678);
  *(_WORD *)(v38 + 672) = 0;
  long long v39 = *(void *)(v38 + 656);
  *(void *)(v38 + 656) = a17;
  *(void *)(v38 + 664) = a18;
  swift_retain();
  sub_1854AFD40(v39);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  id v40 = swift_allocObject();
  *(_DWORD *)(v40 + 16) = 0;
  *(void *)(v38 + 16) = v40;
  if (a15) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v62 + 212) & 1) == 0)
  {
    double v41 = *(_OWORD *)(v62 + 148);
    v78[0] = *(_OWORD *)(v62 + 132);
    v78[1] = v41;
    unsigned int v42 = *(_OWORD *)(v62 + 180);
    v78[2] = *(_OWORD *)(v62 + 164);
    v78[3] = v42;
    v78[4] = *(_OWORD *)(v62 + 196);
    sub_185951E48(v78);
  }
  BOOL v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = 0u;
  *(_OWORD *)(v43 + 32) = 0u;
  *(_OWORD *)(v43 + 48) = 0u;
  *(_OWORD *)(v43 + 64) = 0u;
  *(_OWORD *)(v43 + 80) = 0u;
  *(unsigned char *)(v43 + 96) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  CGFloat v55 = qword_1E8FD58B0;
  double v44 = *(unsigned char *)(v62 + 488);
  sub_1853B7020((uint64_t)v65, (uint64_t)v63, &qword_1E8FAE678);
  double v45 = v64;
  if (v64 == 2) {
    sub_1853B93B8((uint64_t)v63, &qword_1E8FAE678);
  }
  double v46 = v45 == 2;
  double v47 = (void *)swift_allocObject();
  v47[2] = v38;
  v47[3] = a9;
  v47[4] = a10;
  v47[5] = v62;
  v47[6] = v43;
  v47[7] = a11;
  v47[8] = a12;
  v47[9] = a13;
  v47[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  __double2 v48 = swift_allocObject();
  *(float *)(v48 + 16) = a1;
  *(float *)(v48 + 20) = a2;
  *(float *)(v48 + 24) = a3;
  *(_DWORD *)(v48 + 28) = a16;
  *(unsigned char *)(v48 + 32) = v44;
  *(unsigned char *)(v48 + 33) = v46;
  *(void *)(v48 + 40) = sub_1858BAEB4;
  *(void *)(v48 + 48) = v47;
  uint64_t v58 = *(NSObject **)(v55 + 264);
  long long v49 = swift_allocObject();
  *(void *)(v49 + 16) = v55;
  *(void *)(v49 + 24) = v48;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_1853C10C0;
  *(void *)(v50 + 24) = v49;
  v63[4] = sub_1853B59A0;
  v63[5] = v50;
  v63[0] = MEMORY[0x1E4F143A8];
  v63[1] = 1107296256;
  v63[2] = sub_1853BE46C;
  v63[3] = &block_descriptor_15;
  CGRect v51 = _Block_copy(v63);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v58, v51);
  _Block_release(v51);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v61);
    sub_1854AEC5C(v60);
    os_unfair_lock_unlock(v61);
    swift_release_n();
    sub_1853B93B8((uint64_t)v65, &qword_1E8FAE678);
    sub_1854AECBC((uint64_t)v67);
    return swift_release();
  }
  return result;
}

uint64_t sub_18549A144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_18549A18C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, float32x4_t *a4@<X3>, float32x4_t *a5@<X4>, float32x4_t *a6@<X8>)
{
  void (*v137)(float32x4_t *__return_ptr, float32x4_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t v138;
  uint64_t v139;
  float32x4_t v140;
  char v141;
  double v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  uint64_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t *v165;
  uint64_t v166;
  unsigned int v167;
  uint64_t v168;
  float32x4_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  uint64_t v173;
  float32x4_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  long long v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  float32x4_t v189;
  int v190;
  uint64_t v191;
  float32x4_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int8x16_t v196;
  float32x4_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int8x16_t v201;
  float32x4_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int8x16_t v206;
  float32x4_t v207;
  unsigned int v208;
  unsigned int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __int32 v215;
  unsigned int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int v221;
  __int32 v222;
  unsigned int v223;
  uint64_t v224;
  unsigned int v225;
  __int32 v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  float32x4_t v231;
  unsigned int v232;
  uint64_t v233;
  unsigned int v234;
  uint64_t v235;
  float32x4_t v236;
  float32x4_t v237;
  float32x4_t v238;
  float32x4_t v239;
  float32x4_t v240;
  char v241;
  _OWORD v242[19];
  _OWORD __dst[39];
  char v244;
  long long __src[39];
  unsigned __int8 v246;
  void v247[10];
  float32x4_t v248;
  float32x4_t v249;
  float32x4_t v250;
  float32x4_t v251;
  float32x4_t v252;

  uint64_t v7 = v6;
  uint64_t v11 = a2;
  unint64_t v210 = a5->i64[0];
  int64x2_t v214 = a5->i64[1];
  float64x2_t v217 = a5[1].i64[0];
  float64x2_t v220 = a5[1].i64[1];
  id v224 = a5[2].i64[0];
  double v228 = a5[2].i64[1];
  uint64_t v14 = a5[4].i64[0];
  int64x2_t v231 = a5[3];
  uint64_t v15 = a5[4].i64[1];
  unint64_t v205 = a4->i64[0];
  float64x2_t v200 = a4->i64[1];
  float64x2_t v195 = a4[1].i64[0];
  unint64_t v191 = a4[1].i64[1];
  float64x2_t v184 = a4[2].i64[1];
  unint64_t v188 = a4[2].i64[0];
  double v180 = a4[3].i64[1];
  uint64_t v181 = a4[3].i64[0];
  unint64_t v178 = a4[4].i64[1];
  float64x2_t v179 = a4[4].i64[0];
  *(unsigned char *)(v7 + 173) = a3;
  sub_1854B5564(a2, (uint64_t)__src);
  if (LOBYTE(__src[5]) == 2)
  {
    sub_1854B1F20(__src, (uint64_t)&v236);
    int v16 = &qword_1E8FAE680;
    sub_1853B7020(a1, (uint64_t)__src, &qword_1E8FAE680);
    if (v246 == 2)
    {
      memcpy(__dst, __src, 0x130uLL);
      uint64_t v50 = v238.i64[0];
      int64x2_t v233 = v237.i64[1];
      __swift_project_boxed_opaque_existential_0Tm(&v236, v237.i64[1]);
      double v51 = *(double *)__dst;
      long long v52 = __dst[13];
      unint64_t v201 = (int8x16_t)__dst[14];
      float64x2_t v206 = (int8x16_t)__dst[15];
      v242[0] = vsubq_f32((float32x4_t)__dst[13], (float32x4_t)__dst[3]);
      v242[1] = vsubq_f32((float32x4_t)__dst[14], (float32x4_t)__dst[4]);
      v242[2] = vsubq_f32((float32x4_t)__dst[15], (float32x4_t)__dst[5]);
      float32x2x2_t v225 = __dst[17];
      float64x2_t v229 = *((void *)&__dst[17] + 1);
      float64x2_t v211 = *((void *)&__dst[17] + 1);
      int64x2_t v221 = DWORD1(__dst[17]);
      int64x2_t v196 = (int8x16_t)__dst[16];
      v242[3] = vsubq_f32((float32x4_t)__dst[16], (float32x4_t)__dst[6]);
      v242[4] = vsubq_f32((float32x4_t)__dst[17], (float32x4_t)__dst[7]);
      CGFloat v53 = *(uint64_t (**)(char *, _OWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v50 + 24);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2C90);
      uint64_t v55 = sub_1854B2C88(&qword_1E8FB2C98, &qword_1E8FB2C90);
      if (v53((char *)__dst + 8, v242, (char *)&__dst[18] + 8, v54, v55, v233, v50, v51))
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 1, (uint64_t *)&v236);
        float32x4_t v56 = a5[3];
        __dst[15] = a5[2];
        __dst[16] = v56;
        __dst[17] = a5[4];
        float32x4_t v57 = a5[1];
        __dst[13] = *a5;
        __dst[14] = v57;
      }
      else
      {
        *(void *)&long long v58 = *((void *)&v52 + 1);
        *((void *)&v58 + 1) = v201.i64[0];
        *(_OWORD *)((char *)&__dst[3] + 8) = v58;
        *(int8x16_t *)((char *)&__dst[4] + 8) = vextq_s8(v201, v206, 8uLL);
        *(int8x16_t *)((char *)&__dst[5] + 8) = vextq_s8(v206, v196, 8uLL);
        *(void *)&__dst[3] = v52;
        *((void *)&__dst[6] + 1) = vextq_s8(v196, v196, 8uLL).u64[0];
        *(void *)&__dst[7] = __PAIR64__(v221, v225);
        *(void *)&long long v59 = v211;
        *((void *)&v59 + 1) = v52;
        *(_OWORD *)((char *)&__dst[7] + 8) = v59;
        *(_OWORD *)((char *)&__dst[8] + 8) = v58;
        *(_OWORD *)((char *)&__dst[9] + 8) = *(_OWORD *)((char *)&__dst[4] + 8);
        *(_OWORD *)((char *)&__dst[10] + 8) = *(_OWORD *)((char *)&__dst[5] + 8);
        *((void *)&__dst[11] + 1) = *((void *)&__dst[6] + 1);
        *(void *)&__dst[12] = __PAIR64__(v221, v225);
        *((void *)&__dst[12] + 1) = v229;
        float32x4_t v60 = *a5;
        float32x4_t v61 = a5[1];
        float32x4_t v62 = a5[2];
        float32x4_t v63 = a5[4];
        __dst[16] = a5[3];
        __dst[17] = v63;
        __dst[14] = v61;
        __dst[15] = v62;
        __dst[13] = v60;
        __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 1, (uint64_t *)&v236);
        *(void *)&__dst[0] = 0;
        unint64_t v64 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        *((void *)&__dst[18] + 1) = v64;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v236);
      memcpy(a6, __dst, 0x130uLL);
    }
    else
    {
      if (v246 != 255) {
        int v16 = &qword_1E8FAE678;
      }
      sub_1853B93B8((uint64_t)__src, v16);
      sub_1854B1F38((uint64_t)&v236, (uint64_t)&a6->i64[1]);
      a6->i64[0] = 0;
      a6[18].i16[0] = 0;
      a6[18].i64[1] = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      float32x4_t v17 = a4[2];
      float32x4_t v18 = a4[3];
      a6[5] = v17;
      a6[6] = v18;
      float32x4_t v19 = a4[4];
      float32x4_t v21 = *a4;
      float32x4_t v20 = a4[1];
      a6[3] = *a4;
      a6[4] = v20;
      a6[9] = v20;
      a6[10] = v17;
      a6[11] = v18;
      a6[12] = v19;
      a6[7] = v19;
      a6[8] = v21;
      float32x4_t v22 = a5[3];
      a6[15] = a5[2];
      a6[16] = v22;
      a6[17] = a5[4];
      float32x4_t v23 = a5[1];
      a6[13] = *a5;
      a6[14] = v23;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v236);
    }
    char v39 = 2;
    goto LABEL_19;
  }
  sub_1854B5730((uint64_t)__src);
  sub_1854B5564(v11, (uint64_t)__src);
  if (LOBYTE(__src[5]) == 1)
  {
    __dst[2] = __src[2];
    __dst[3] = __src[3];
    __dst[4] = __src[4];
    __dst[0] = __src[0];
    __dst[1] = __src[1];
    sub_1854B1F38((uint64_t)__dst, (uint64_t)&v248);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D78);
    swift_dynamicCast();
    sub_1854B1F38((uint64_t)&__dst[2] + 8, (uint64_t)v247);
    swift_dynamicCast();
    float32x4_t v24 = (float32x4_t)v242[2];
    float32x4_t v25 = (float32x4_t)v242[1];
    float32x4_t v26 = (float32x4_t)v242[2];
    a6[6] = (float32x4_t)v242[1];
    a6[7] = v24;
    float32x4_t v27 = (float32x4_t)v242[4];
    float32x4_t v28 = (float32x4_t)v242[3];
    a6[8] = (float32x4_t)v242[3];
    a6[9] = v27;
    float32x4_t v29 = v238;
    float32x4_t v30 = v239;
    float32x4_t v31 = v239;
    a6[2] = v238;
    a6[3] = v30;
    float32x4_t v32 = (float32x4_t)v242[0];
    float32x4_t v33 = (float32x4_t)v242[0];
    float32x4_t v34 = v240;
    a6[4] = v240;
    a6[5] = v32;
    float32x4_t v35 = v237;
    float32x4_t v36 = v237;
    float32x4_t v37 = v236;
    *a6 = v236;
    a6[1] = v35;
    a6[12] = v26;
    a6[13] = v28;
    a6[10] = v33;
    a6[11] = v25;
    a6[18] = v29;
    a6[19] = v31;
    a6[20] = v34;
    float32x4_t v38 = (float32x4_t)v242[4];
    a6[16] = v37;
    a6[17] = v36;
    a6[14] = v38;
    a6[15] = (float32x4_t)xmmword_186B85510;
    sub_185965DD4((uint64_t)__dst);
    char v39 = 1;
LABEL_19:
    a6[39].i8[0] = v39;
    return;
  }
  float64x2_t v177 = v14;
  sub_1854B5730((uint64_t)__src);
  if (a3)
  {
    double v40 = CACurrentMediaTime();
    double v41 = *(double *)v7;
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    double v42 = v40 - v41;
    uint64_t v43 = qword_1E8FD58B0;
    double v44 = *(double *)(qword_1E8FD58B0 + 240);
    if (v44 == 0.0)
    {
      uint64_t v173 = v15;
      id v175 = v11;
      double v45 = self;
      id v46 = objc_msgSend(v45, sel_mainScreen);
      uint64_t v47 = (uint64_t)objc_msgSend(v46, sel_maximumFramesPerSecond);

      if (v47 < 1)
      {
        uint64_t v49 = 60;
      }
      else
      {
        id v48 = objc_msgSend(v45, sel_mainScreen);
        uint64_t v49 = (uint64_t)objc_msgSend(v48, sel_maximumFramesPerSecond);
      }
      double v44 = 1.0 / ((double)v49 * 1.001);
      *(double *)(v43 + 240) = v44;
      uint64_t v11 = v175;
      uint64_t v15 = v173;
    }
    if (v44 * 0.9 < v42)
    {
      if (v41 != 0.0)
      {
        if (*(unsigned char *)(v7 + 256))
        {
          *(unsigned char *)(v7 + 256) = 0;
          *(_OWORD *)(v7 + 224) = 0u;
          *(_OWORD *)(v7 + 240) = 0u;
          *(_OWORD *)(v7 + 192) = 0u;
          *(_OWORD *)(v7 + 208) = 0u;
          *(_OWORD *)(v7 + 176) = 0u;
        }
        else
        {
          v65.i64[0] = v177;
          v66.i64[0] = v224;
          v67.i64[0] = v210;
          v68.i64[0] = v217;
          v65.i64[1] = v15;
          v66.i64[1] = v228;
          v67.i64[1] = v214;
          v68.i64[1] = v220;
          if (*(unsigned char *)(v7 + 172))
          {
            unint64_t v169 = v65;
            double v170 = v231;
            double v171 = v66;
            uint64_t v172 = v67;
            uint64_t v174 = v68;
          }
          else
          {
            uint64_t v172 = vsubq_f32(v67, *(float32x4_t *)(v7 + 92));
            uint64_t v174 = vsubq_f32(v68, *(float32x4_t *)(v7 + 108));
            double v170 = vsubq_f32(v231, *(float32x4_t *)(v7 + 140));
            double v171 = vsubq_f32(v66, *(float32x4_t *)(v7 + 124));
            unint64_t v169 = vsubq_f32(v65, *(float32x4_t *)(v7 + 156));
          }
          sub_1859A40A4(0.25);
          sub_1859A40A4(0.25);
          sub_1859A40A4(0.25);
          sub_1859A40A4(0.25);
          if ((*(unsigned char *)(v7 + 256) & 1) == 0)
          {
            __asm { FMOV            V16.4S, #0.75 }
            float32x4_t v74 = vaddq_f32(vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v174.f32), 1.0 / v42)), vmulq_n_f64(vcvt_hight_f64_f32(v174), 1.0 / v42)), _Q16), *(float32x4_t *)(v7 + 192));
            *(float32x4_t *)(v7 + 176) = vaddq_f32(vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v172.f32), 1.0 / v42)), vmulq_n_f64(vcvt_hight_f64_f32(v172), 1.0 / v42)), _Q16), *(float32x4_t *)(v7 + 176));
            *(float32x4_t *)(v7 + 192) = v74;
            float32x4_t v75 = vaddq_f32(vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v170.f32), 1.0 / v42)), vmulq_n_f64(vcvt_hight_f64_f32(v170), 1.0 / v42)), _Q16), *(float32x4_t *)(v7 + 224));
            *(float32x4_t *)(v7 + 208) = vaddq_f32(vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v171.f32), 1.0 / v42)), vmulq_n_f64(vcvt_hight_f64_f32(v171), 1.0 / v42)), _Q16), *(float32x4_t *)(v7 + 208));
            *(float32x4_t *)(v7 + 224) = v75;
            *(float32x4_t *)(v7 + 240) = vaddq_f32(vmulq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v169.f32), 1.0 / v42)), vmulq_n_f64(vcvt_hight_f64_f32(v169), 1.0 / v42)), _Q16), *(float32x4_t *)(v7 + 240));
          }
        }
      }
      *(void *)(v7 + 8) = v205;
      *(void *)(v7 + 16) = v200;
      *(void *)(v7 + 24) = v195;
      *(void *)(v7 + 32) = v191;
      *(void *)(v7 + 40) = v188;
      *(void *)(v7 + 48) = v184;
      *(void *)(v7 + 56) = v181;
      *(void *)(v7 + 64) = v180;
      *(void *)(v7 + 72) = v179;
      *(void *)(v7 + 80) = v178;
      *(unsigned char *)(v7 + 88) = 0;
      *(double *)uint64_t v7 = v40;
    }
  }
  float64x2_t v189 = *(float32x4_t *)(v7 + 92);
  v192 = *(float32x4_t *)(v7 + 108);
  unint64_t v197 = *(float32x4_t *)(v7 + 124);
  float64x2_t v202 = *(float32x4_t *)(v7 + 140);
  double v207 = *(float32x4_t *)(v7 + 156);
  char v76 = *(unsigned char *)(v7 + 172);
  *(void *)(v7 + 92) = v210;
  *(void *)(v7 + 100) = v214;
  *(void *)(v7 + 108) = v217;
  *(void *)(v7 + 116) = v220;
  *(void *)(v7 + 124) = v224;
  *(void *)(v7 + 132) = v228;
  *(float32x4_t *)(v7 + 140) = v231;
  *(void *)(v7 + 156) = v177;
  *(void *)(v7 + 164) = v15;
  *(unsigned char *)(v7 + 172) = 0;
  sub_1853B7020(a1, (uint64_t)__src, &qword_1E8FAE680);
  if (v246)
  {
    if (v246 == 255) {
      double v77 = &qword_1E8FAE680;
    }
    else {
      double v77 = &qword_1E8FAE678;
    }
    sub_1853B93B8((uint64_t)__src, v77);
LABEL_41:
    sub_1853B7020(a1, (uint64_t)__src, &qword_1E8FAE680);
    if (v246 == 3)
    {
      uint64_t v97 = v15;
      uint64_t v98 = *(void *)&__src[5];
      uint64_t v99 = v11;
      uint64_t v100 = *((void *)&__src[5] + 1);
      long long v101 = __src[6];
      int v185 = __src[7];
      long long v102 = __src[8];
      long long v103 = __src[9];
      uint64_t v104 = v99;
      sub_1854B5564(v99, (uint64_t)__dst);
      if (LOBYTE(__dst[5]) == 3
        && (int8x16_t v105 = vorrq_s8(vorrq_s8((int8x16_t)__dst[1], (int8x16_t)__dst[3]), vorrq_s8((int8x16_t)__dst[2], (int8x16_t)__dst[4])), !(*(void *)&vorr_s8(*(int8x8_t *)v105.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v105, v105, 8uLL)) | *((void *)&__dst[0] + 1) | *(void *)&__dst[0]))|| (sub_1854B5730((uint64_t)__dst), sub_1854B5564(v104, (uint64_t)__dst), LOBYTE(__dst[5]) == 3)&& *(void *)&__dst[0] == 1&& (v106 = vorrq_s8(vorrq_s8((int8x16_t)__dst[1], (int8x16_t)__dst[3]), vorrq_s8((int8x16_t)__dst[2], (int8x16_t)__dst[4])), !(*(void *)&vorr_s8(*(int8x8_t *)v106.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v106, v106, 8uLL)) | *((void *)&__dst[0] + 1))))
      {
        sub_1854B5730((uint64_t)__dst);
        a6->i64[0] = v210;
        a6->i64[1] = v214;
        a6[1].i64[0] = v217;
        a6[1].i64[1] = v220;
        a6[2].i64[0] = v224;
        a6[2].i64[1] = v228;
        a6[3] = v231;
        a6[4].i64[0] = v177;
        a6[4].i64[1] = v97;
        a6[5].i64[0] = v98;
        a6[5].i64[1] = v100;
        a6[6] = (float32x4_t)v101;
        a6[7] = (float32x4_t)v185;
        a6[8] = (float32x4_t)v102;
        a6[9] = (float32x4_t)v103;
        char v39 = 3;
        goto LABEL_19;
      }
      sub_1854B5730((uint64_t)__dst);
      sub_1854B5564(v104, (uint64_t)v242);
      if (!LOBYTE(v242[5]))
      {
        *(void *)&__dst[0] = v98;
        *((void *)&__dst[0] + 1) = v100;
        __dst[1] = v101;
        __dst[2] = v185;
        __dst[3] = v102;
        __dst[4] = v103;
        LOBYTE(__dst[5]) = 0;
        float64x2_t v165 = a6;
        float64x2_t v166 = v104;
LABEL_80:
        sub_1858B9BF4(v166, a4, (uint64_t)__dst, a5, v165);
        return;
      }
      sub_1854B5730((uint64_t)v242);
      uint64_t v11 = v104;
    }
    else
    {
      if (v246 == 255) {
        double v96 = &qword_1E8FAE680;
      }
      else {
        double v96 = &qword_1E8FAE678;
      }
      sub_1853B93B8((uint64_t)__src, v96);
    }
    sub_1853B7020(a1, (uint64_t)__src, &qword_1E8FAE680);
    int v107 = v246;
    if (v246 == 255)
    {
      sub_1853B93B8((uint64_t)__src, &qword_1E8FAE680);
      unint64_t v125 = 0;
      unint64_t v126 = 0;
      unint64_t v127 = 0;
      unint64_t v128 = 0;
      unint64_t v129 = 0;
      unint64_t v130 = 0;
      unint64_t v131 = 0;
      unint64_t v132 = 0;
      unint64_t v133 = 0;
      unint64_t v134 = 0;
    }
    else
    {
      uint64_t v190 = v246;
      id v176 = v11;
      sub_1853B7020((uint64_t)__src, (uint64_t)__dst, &qword_1E8FAE678);
      unsigned int v108 = 0;
      uint64_t v109 = 0;
      unsigned int v110 = 0;
      uint64_t v111 = 0;
      float64x2_t v232 = 0;
      unsigned int v112 = 0;
      float64x2_t v230 = 0;
      unint64_t v234 = 0;
      uint64_t v113 = 0;
      uint64_t v114 = 0;
      unsigned int v115 = 0;
      uint64_t v116 = 0;
      unsigned int v117 = 0;
      uint64_t v118 = 0;
      unsigned int v119 = 0;
      uint64_t v120 = 0;
      unsigned int v121 = 0;
      uint64_t v122 = 0;
      unsigned int v123 = 0;
      uint64_t v124 = 0;
      switch(v244)
      {
        case 1:
          break;
        case 2:
          memcpy(v242, __dst, sizeof(v242));
          uint64_t v135 = *((void *)&v242[2] + 1);
          unint64_t v235 = *(void *)&v242[2];
          __swift_project_boxed_opaque_existential_0Tm((void *)v242 + 1, *(uint64_t *)&v242[2]);
          __n128 v248 = vsubq_f32((float32x4_t)v242[13], (float32x4_t)v242[3]);
          __n128 v249 = vsubq_f32((float32x4_t)v242[14], (float32x4_t)v242[4]);
          unint64_t v250 = vsubq_f32((float32x4_t)v242[15], (float32x4_t)v242[5]);
          unint64_t v251 = vsubq_f32((float32x4_t)v242[16], (float32x4_t)v242[6]);
          uint64_t v252 = vsubq_f32((float32x4_t)v242[17], (float32x4_t)v242[7]);
          double v136 = *(double *)v242;
          v247[0] = *((void *)&v242[18] + 1);
          int64x2_t v137 = *(void (**)(float32x4_t *__return_ptr, float32x4_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v135 + 32);
          __int16 v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2C90);
          double v139 = sub_1854B2C88(&qword_1E8FB2C98, &qword_1E8FB2C90);
          v137(&v236, &v248, v247, v138, v139, v235, v135, v136);
          if (v241)
          {
            unsigned int v108 = 0;
            uint64_t v109 = 0;
            double v226 = 0;
            uint64_t v111 = 0;
            float64x2_t v232 = 0;
            float64x2_t v230 = 0;
            unint64_t v234 = 0;
            long long v218 = 0;
            unint64_t v222 = 0;
            float64x2_t v212 = 0;
            uint64_t v215 = 0;
            uint64_t v203 = 0;
            double v208 = 0;
            double v198 = 0;
            unint64_t v186 = 0;
            float64x2_t v193 = 0;
            unsigned int v121 = 0;
            uint64_t v122 = 0;
            unsigned int v123 = 0;
            uint64_t v182 = 0;
          }
          else
          {
            unsigned int v108 = v240.u32[2];
            uint64_t v109 = v240.u32[3];
            double v226 = v240.i32[0];
            uint64_t v111 = v240.u32[1];
            float64x2_t v232 = v239.u32[2];
            float64x2_t v230 = v239.u32[3];
            unint64_t v234 = v239.i32[0];
            long long v218 = v239.u32[1];
            unint64_t v222 = v238.i32[2];
            float64x2_t v212 = v238.u32[3];
            uint64_t v215 = v238.i32[0];
            uint64_t v203 = v238.u32[1];
            double v208 = v237.u32[2];
            double v198 = v237.u32[3];
            unint64_t v186 = v237.i32[0];
            float64x2_t v193 = v237.u32[1];
            unsigned int v121 = v236.u32[2];
            uint64_t v122 = v236.u32[3];
            unsigned int v123 = v236.i32[0];
            uint64_t v182 = v236.u32[1];
          }
          sub_1853B93B8((uint64_t)v242, &qword_1E8FB2C88);
          unsigned int v110 = v226;
          unsigned int v112 = v222;
          uint64_t v113 = v218;
          unsigned int v115 = v215;
          uint64_t v114 = v212;
          unsigned int v117 = v208;
          uint64_t v116 = v203;
          unsigned int v119 = v186;
          uint64_t v118 = v198;
          uint64_t v120 = v193;
          uint64_t v124 = v182;
          break;
        case 3:
          unsigned int v123 = __dst[5];
          uint64_t v124 = DWORD1(__dst[5]);
          unsigned int v121 = DWORD2(__dst[5]);
          uint64_t v122 = HIDWORD(__dst[5]);
          unsigned int v119 = __dst[6];
          uint64_t v120 = DWORD1(__dst[6]);
          unsigned int v117 = DWORD2(__dst[6]);
          uint64_t v118 = HIDWORD(__dst[6]);
          unsigned int v115 = __dst[7];
          uint64_t v116 = DWORD1(__dst[7]);
          unsigned int v112 = DWORD2(__dst[7]);
          uint64_t v114 = HIDWORD(__dst[7]);
          unint64_t v234 = __dst[8];
          uint64_t v113 = DWORD1(__dst[8]);
          float64x2_t v232 = DWORD2(__dst[8]);
          float64x2_t v230 = HIDWORD(__dst[8]);
          unsigned int v110 = __dst[9];
          uint64_t v111 = DWORD1(__dst[9]);
          unsigned int v108 = DWORD2(__dst[9]);
          uint64_t v109 = HIDWORD(__dst[9]);
          break;
        default:
          unsigned int v123 = __dst[19];
          uint64_t v124 = DWORD1(__dst[19]);
          unsigned int v121 = DWORD2(__dst[19]);
          uint64_t v122 = HIDWORD(__dst[19]);
          unsigned int v119 = __dst[20];
          uint64_t v120 = DWORD1(__dst[20]);
          unsigned int v117 = DWORD2(__dst[20]);
          uint64_t v118 = HIDWORD(__dst[20]);
          unsigned int v115 = __dst[21];
          uint64_t v116 = DWORD1(__dst[21]);
          unsigned int v112 = DWORD2(__dst[21]);
          uint64_t v114 = HIDWORD(__dst[21]);
          unint64_t v234 = __dst[22];
          uint64_t v113 = DWORD1(__dst[22]);
          float64x2_t v232 = DWORD2(__dst[22]);
          float64x2_t v230 = HIDWORD(__dst[22]);
          unsigned int v110 = __dst[23];
          uint64_t v111 = DWORD1(__dst[23]);
          unsigned int v108 = DWORD2(__dst[23]);
          uint64_t v109 = HIDWORD(__dst[23]);
          break;
      }
      double v209 = v117;
      float64x2_t v194 = v120;
      double v216 = v115;
      int64x2_t v204 = v116;
      double v199 = v118;
      long long v223 = v112;
      float64x2_t v213 = v114;
      long long v219 = v113;
      float64x2_t v227 = v110;
      float64x2_t v183 = v111;
      uint64_t v187 = v109;
      float64x2_t v167 = v119;
      int64x2_t v168 = v124;
      sub_1853B93B8((uint64_t)__src, &qword_1E8FAE678);
      unint64_t v125 = v123 | (unint64_t)(v168 << 32);
      unint64_t v126 = v121 | (unint64_t)(v122 << 32);
      unint64_t v127 = v167 | (unint64_t)(v194 << 32);
      unint64_t v128 = v209 | (unint64_t)(v199 << 32);
      unint64_t v129 = v216 | (unint64_t)(v204 << 32);
      unint64_t v130 = v223 | (unint64_t)(v213 << 32);
      unint64_t v131 = v234 | (unint64_t)(v219 << 32);
      unint64_t v132 = v232 | (unint64_t)(v230 << 32);
      unint64_t v133 = v227 | (unint64_t)(v183 << 32);
      unint64_t v134 = v108 | (unint64_t)(v187 << 32);
      uint64_t v11 = v176;
      int v107 = v190;
    }
    *(void *)&__dst[0] = v125;
    *((void *)&__dst[0] + 1) = v126;
    *(void *)&__dst[1] = v127;
    *((void *)&__dst[1] + 1) = v128;
    *(void *)&__dst[2] = v129;
    *((void *)&__dst[2] + 1) = v130;
    *(void *)&__dst[3] = v131;
    *((void *)&__dst[3] + 1) = v132;
    *(void *)&__dst[4] = v133;
    *((void *)&__dst[4] + 1) = v134;
    LOBYTE(__dst[5]) = v107 == 255;
    float64x2_t v165 = a6;
    float64x2_t v166 = v11;
    goto LABEL_80;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_1854B5564(v11, (uint64_t)v242);
  if (LOBYTE(v242[5]) == 3 && *(void *)&v242[0] == 1)
  {
    int8x16_t v78 = vorrq_s8(vorrq_s8((int8x16_t)v242[1], (int8x16_t)v242[3]), vorrq_s8((int8x16_t)v242[2], (int8x16_t)v242[4]));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v78.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)) | *((void *)&v242[0] + 1)))
    {
      sub_1854B5730((uint64_t)v242);
      float32x4_t v79 = (float32x4_t)__dst[11];
      a6[10] = (float32x4_t)__dst[10];
      a6[11] = v79;
      a6[12] = (float32x4_t)__dst[12];
      a6[13].i32[0] = __dst[13];
      float32x4_t v80 = (float32x4_t)__dst[7];
      a6[6] = (float32x4_t)__dst[6];
      a6[7] = v80;
      float32x4_t v81 = (float32x4_t)__dst[9];
      a6[8] = (float32x4_t)__dst[8];
      a6[9] = v81;
      float32x4_t v82 = (float32x4_t)__dst[5];
      a6[4] = (float32x4_t)__dst[4];
      a6[5] = v82;
      uint64_t v83 = *((void *)&__dst[13] + 1);
      float32x4_t v84 = (float32x4_t)__dst[22];
      a6[21] = (float32x4_t)__dst[21];
      a6[22] = v84;
      float32x4_t v85 = (float32x4_t)__dst[20];
      a6[19] = (float32x4_t)__dst[19];
      a6[20] = v85;
      float32x4_t v86 = (float32x4_t)__dst[26];
      a6[25] = (float32x4_t)__dst[25];
      a6[26] = v86;
      float32x4_t v87 = (float32x4_t)__dst[28];
      a6[27] = (float32x4_t)__dst[27];
      a6[28] = v87;
      float32x4_t v88 = (float32x4_t)__dst[24];
      a6[23] = (float32x4_t)__dst[23];
      a6[24] = v88;
      float32x4_t v89 = (float32x4_t)__dst[32];
      a6[31] = (float32x4_t)__dst[31];
      a6[32] = v89;
      float32x4_t v90 = (float32x4_t)__dst[30];
      a6[29] = (float32x4_t)__dst[29];
      a6[30] = v90;
      float32x4_t v91 = (float32x4_t)__dst[36];
      a6[35] = (float32x4_t)__dst[35];
      a6[36] = v91;
      float32x4_t v92 = (float32x4_t)__dst[38];
      a6[37] = (float32x4_t)__dst[37];
      a6[38] = v92;
      float32x4_t v93 = (float32x4_t)__dst[34];
      a6[33] = (float32x4_t)__dst[33];
      a6[34] = v93;
      float32x4_t v94 = (float32x4_t)__dst[1];
      *a6 = (float32x4_t)__dst[0];
      a6[1] = v94;
      float32x4_t v95 = (float32x4_t)__dst[3];
      a6[2] = (float32x4_t)__dst[2];
      a6[3] = v95;
      a6[13].i64[1] = v83;
      a6[14].i64[0] = v210;
      a6[14].i64[1] = v214;
      a6[15].i64[0] = v217;
      a6[15].i64[1] = v220;
      a6[16].i64[0] = v224;
      a6[16].i64[1] = v228;
      a6[17] = v231;
      a6[18].i64[0] = v177;
      a6[18].i64[1] = v15;
      a6[39].i8[0] = 0;
      return;
    }
  }
  sub_1854B5730((uint64_t)v242);
  sub_1854B5564(v11, (uint64_t)v242);
  if (LOBYTE(v242[5]))
  {
    sub_1854B5730((uint64_t)v242);
    goto LABEL_41;
  }
  sub_1854B5EC0((uint64_t)v242, (uint64_t)v247);
  if ((a3 & 1) == 0)
  {
    sub_1854B5EC0((uint64_t)v247, (uint64_t)&v236);
    if (v237.i64[0] < 0)
    {
      v237.i64[0] &= ~0x8000000000000000;
      if (*(double *)v240.i64 > 0.0)
      {
        memcpy(v242, (const void *)v7, 0x101uLL);
        v140.i64[0] = v240.i64[0];
        sub_185954198((float32x4_t *)&__dst[29], v140);
      }
    }
    *(_OWORD *)(v7 + 224) = 0u;
    *(_OWORD *)(v7 + 240) = 0u;
    *(_OWORD *)(v7 + 192) = 0u;
    *(_OWORD *)(v7 + 208) = 0u;
    *(_OWORD *)(v7 + 176) = 0u;
    *(unsigned char *)(v7 + 256) = 1;
    *(void *)uint64_t v7 = 0;
  }
  sub_1854B5EC0((uint64_t)v247, (uint64_t)&v248);
  if (v249.i64[0] < 0)
  {
    v249.i64[0] &= ~0x8000000000000000;
    long long v141 = *(double *)&v252.i64[1] <= 0.0 ? 1 : v76;
    if ((v141 & 1) == 0)
    {
      long long v142 = *(double *)&v252.i64[1] * (6.28318531 / *(double *)&v248.i64[1] * (6.28318531 / *(double *)&v248.i64[1]));
      int v143 = vsubq_f32(*a5, v189);
      int v144 = vsubq_f32(a5[1], v192);
      __dst[19] = vaddq_f32((float32x4_t)__dst[19], vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v143.f32), v142)), vmulq_n_f64(vcvt_hight_f64_f32(v143), v142)));
      __dst[20] = vaddq_f32((float32x4_t)__dst[20], vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v144.f32), v142)), vmulq_n_f64(vcvt_hight_f64_f32(v144), v142)));
      long long v145 = vsubq_f32(a5[2], v197);
      long long v146 = vsubq_f32(a5[3], v202);
      _OWORD __dst[21] = vaddq_f32((float32x4_t)__dst[21], vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v145.f32), v142)), vmulq_n_f64(vcvt_hight_f64_f32(v145), v142)));
      __dst[22] = vaddq_f32((float32x4_t)__dst[22], vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v146.f32), v142)), vmulq_n_f64(vcvt_hight_f64_f32(v146), v142)));
      int v147 = vsubq_f32(a5[4], v207);
      __dst[23] = vaddq_f32((float32x4_t)__dst[23], vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)v147.f32), v142)), vmulq_n_f64(vcvt_hight_f64_f32(v147), v142)));
    }
  }
  sub_18593A4D4((uint64_t)v247, 0);
  int v148 = (float32x4_t)__dst[11];
  a6[10] = (float32x4_t)__dst[10];
  a6[11] = v148;
  a6[12] = (float32x4_t)__dst[12];
  a6[13].i32[0] = __dst[13];
  uint64_t v149 = (float32x4_t)__dst[7];
  a6[6] = (float32x4_t)__dst[6];
  a6[7] = v149;
  uint64_t v150 = (float32x4_t)__dst[9];
  a6[8] = (float32x4_t)__dst[8];
  a6[9] = v150;
  double v151 = (float32x4_t)__dst[5];
  a6[4] = (float32x4_t)__dst[4];
  a6[5] = v151;
  uint64_t v152 = *((void *)&__dst[13] + 1);
  float64x2_t v153 = (float32x4_t)__dst[22];
  a6[21] = (float32x4_t)__dst[21];
  a6[22] = v153;
  id v154 = (float32x4_t)__dst[20];
  a6[19] = (float32x4_t)__dst[19];
  a6[20] = v154;
  float64x2_t v155 = (float32x4_t)__dst[26];
  a6[25] = (float32x4_t)__dst[25];
  a6[26] = v155;
  unint64_t v156 = (float32x4_t)__dst[28];
  a6[27] = (float32x4_t)__dst[27];
  a6[28] = v156;
  float64x2_t v157 = (float32x4_t)__dst[24];
  a6[23] = (float32x4_t)__dst[23];
  a6[24] = v157;
  int64x2_t v158 = (float32x4_t)__dst[32];
  a6[31] = (float32x4_t)__dst[31];
  a6[32] = v158;
  id v159 = (float32x4_t)__dst[30];
  a6[29] = (float32x4_t)__dst[29];
  a6[30] = v159;
  float64x2_t v160 = (float32x4_t)__dst[36];
  a6[35] = (float32x4_t)__dst[35];
  a6[36] = v160;
  uint64_t v161 = (float32x4_t)__dst[38];
  a6[37] = (float32x4_t)__dst[37];
  a6[38] = v161;
  uint64_t v162 = (float32x4_t)__dst[34];
  a6[33] = (float32x4_t)__dst[33];
  a6[34] = v162;
  uint64_t v163 = (float32x4_t)__dst[1];
  *a6 = (float32x4_t)__dst[0];
  a6[1] = v163;
  double v164 = (float32x4_t)__dst[3];
  a6[2] = (float32x4_t)__dst[2];
  a6[3] = v164;
  a6[13].i64[1] = v152;
  a6[14].i64[0] = v210;
  a6[14].i64[1] = v214;
  a6[15].i64[0] = v217;
  a6[15].i64[1] = v220;
  a6[16].i64[0] = v224;
  a6[16].i64[1] = v228;
  a6[17] = v231;
  a6[18].i64[0] = v177;
  a6[18].i64[1] = v15;
  a6[39].i8[0] = 0;
}

uint64_t UIContentUnavailableView.configuration.setter(uint64_t a1)
{
  sub_1854B1F38(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A78);
  if (swift_dynamicCast())
  {
    objc_msgSend(v1, sel_setConfiguration_, *(void *)(v4 + 16));
    swift_release();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

id sub_18549B6B0(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_18549BA24((unint64_t *)&qword_1E8FAFBD0, type metadata accessor for Key);
  uint64_t v2 = sub_186A1E79C();
  swift_retain();
  v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_186A1E78C();
  swift_bridgeObjectRelease();
  return v3;
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_18549B7BC(uint64_t a1)
{
  return sub_18549B7C4(a1, *(void (**)(unsigned char *))(v1 + 16));
}

uint64_t sub_18549B7C4(uint64_t a1, void (*a2)(unsigned char *))
{
  uint64_t v3 = sub_186A1D43C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v17[-v8];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = qword_1EB2558C8;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  type metadata accessor for AttributeScopes.UIKitAttributes();
  sub_18549BA24((unint64_t *)&unk_1EB2558B8, (void (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes);
  sub_186A1D45C();
  a2(v12);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
  uint64_t v14 = sub_186A1E7AC();
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v15(v9, v3);
  v15(v12, v3);
  return v14;
}

uint64_t sub_18549BA24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18549BA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18549BAB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AttributeScopes.UIKitAttributes()
{
  uint64_t result = qword_1EB256358;
  if (!qword_1EB256358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18549BB48(SEL *a1)
{
  id v1 = [(id)swift_getObjCClassFromMetadata() *a1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C00);
  unint64_t v2 = sub_186A1EB3C();

  if (v2 >> 62)
  {
    sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_186A1F61C();
    swift_bridgeObjectRelease_n();
    unint64_t v2 = v8;
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_186A1F8CC();
    sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
    if (swift_dynamicCastMetatype() || (uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = v3 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v7 += 8;
        if (!--v6) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v2 = v3 | 1;
    }
  }
  uint64_t v4 = sub_1854A5468(v2);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_18549BCB8(void ***a1, char a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (uint64_t)(*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (uint64_t)(*a1)[3];
  uint64_t v8 = (*a1)[4];
  uint64_t v7 = (uint64_t)(*a1)[5];
  uint64_t v9 = (*a1)[6];
  v14[0] = v3;
  v14[1] = v4;
  v14[2] = v6;
  v14[3] = v5;
  v14[4] = v8;
  v14[5] = v7;
  void v14[6] = v9;
  if (a2)
  {
    id v10 = v3;
    sub_1854B0A60(v4);
    sub_1854B0A60(v5);
    sub_1854B0A60(v7);
    UICollectionViewDiffableDataSource.reorderingHandlers.setter(v14);
    uint64_t v11 = (uint64_t)v2[1];
    uint64_t v12 = (uint64_t)v2[3];
    uint64_t v13 = (uint64_t)v2[5];

    sub_1854AFD40(v11);
    sub_1854AFD40(v12);
    sub_1854AFD40(v13);
  }
  else
  {
    UICollectionViewDiffableDataSource.reorderingHandlers.setter(v14);
  }
  free(v2);
}

uint64_t UICollectionViewDiffableDataSource.reorderingHandlers.setter(void *a1)
{
  unint64_t v2 = (void *)*a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[5];
  objc_msgSend(*(id *)(v1 + qword_1E8FB81B0[0]), sel_setReorderingHandlers_, *a1);

  sub_1854AFD40(v3);
  sub_1854AFD40(v4);
  return sub_1854AFD40(v5);
}

uint64_t sub_18549C040(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  float32x4_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v16;
  void v17[3] = a4;
  v17[4] = a5;
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  float32x4_t v31 = sub_1853B59D0;
  float32x4_t v32 = (void *)v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v28 = 1107296256;
  float32x4_t v29 = sub_1853BE46C;
  float32x4_t v30 = &block_descriptor_261;
  float32x4_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1854B0A60(a4);
  swift_retain();
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v16;
  *(double *)(v20 + 24) = a8;
  *(double *)(v20 + 32) = a9;
  *(unsigned char *)(v20 + 40) = a1;
  *(void *)(v20 + 48) = a6;
  *(void *)(v20 + 56) = a7;
  float32x4_t v31 = (uint64_t (*)())sub_1856AB120;
  float32x4_t v32 = (void *)v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v28 = 1107296256;
  float32x4_t v29 = sub_1856A95EC;
  float32x4_t v30 = &block_descriptor_267;
  float32x4_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  float32x4_t v31 = sub_185441ACC;
  float32x4_t v32 = v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v28 = 1107296256;
  float32x4_t v29 = sub_18544192C;
  float32x4_t v30 = &block_descriptor_270;
  float32x4_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v19, 0, v21, 0.0, 0.0, v22);
  swift_release();
  _Block_release(v22);
  _Block_release(v21);
  _Block_release(v19);
  swift_release();
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v16) {
    __break(1u);
  }
  return result;
}

uint64_t UITraitOverrides.remove(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_1855741B8();
  swift_unknownObjectRetain();
  objc_msgSend(v4, sel__removeTraitToken_, sub_1854AF474(a1, 0, 0, a1, a2));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t UIMutableTraits.preferredContentSizeCategory.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 304);
  uint64_t v6 = sub_1854A7054((unint64_t *)&unk_1EB256750, type metadata accessor for UIContentSizeCategory);
  return v5(&v8, &type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v6, a2, a3);
}

uint64_t sub_18549C464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1854A4418(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1854A45AC);
}

id sub_18549C47C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____UIMagicMorphView_lock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(void *)&v4[v9] = v10;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____UIMagicMorphView_destinations] = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)&v4[OBJC_IVAR____UIMagicMorphView_milestones] = MEMORY[0x1E4FBC868];
  *(void *)&v4[OBJC_IVAR____UIMagicMorphView_clippingViews] = v11;
  v4[OBJC_IVAR____UIMagicMorphView_contentSizeDidChange] = 0;
  uint64_t v13 = OBJC_IVAR____UIMagicMorphView_contentSize;
  id v14 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAF680));
  uint64_t v15 = v4;
  *(void *)&v4[v13] = objc_msgSend(v14, sel_init);
  uint64_t v16 = OBJC_IVAR____UIMagicMorphView_insets;
  *(void *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAF678)), sel_init);
  v15[OBJC_IVAR____UIMagicMorphView_allDestinationsAreOpaque] = 1;
  *(void *)&v15[OBJC_IVAR____UIMagicMorphView_magicMoveItems] = v12;
  v15[OBJC_IVAR____UIMagicMorphView_wantsEdgeAntialiasing] = 1;
  v15[OBJC_IVAR____UIMagicMorphView_allowsElasticMorph] = 1;
  *(void *)&v15[OBJC_IVAR____UIMagicMorphView_preferredMorphingAxis] = 0;
  float32x4_t v17 = &v15[OBJC_IVAR____UIMagicMorphView_overrideCornerRadii];
  *((_OWORD *)v17 + 2) = 0u;
  *((_OWORD *)v17 + 3) = 0u;
  *(_OWORD *)float32x4_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[64] = 1;
  uint64_t v18 = &v15[OBJC_IVAR____UIMagicMorphView_overrideBounds];
  *(_OWORD *)uint64_t v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[32] = 1;

  v23.receiver = v15;
  v23.super_class = (Class)type metadata accessor for _UIMagicMorphView();
  id v19 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v19, sel_setClipsToBounds_, 0);
  objc_msgSend(v19, sel__setSafeAreaInsetsFrozen_, 1);
  sub_1858BB1F0();
  id v20 = objc_msgSend(v19, sel_layer);
  objc_msgSend(v20, sel_setShadowPathIsBounds_, 1);

  id v21 = objc_msgSend(v19, sel_layer);
  objc_msgSend(v21, sel_setPunchoutShadow_, 1);

  return v19;
}

id sub_18549C6C4()
{
  return sub_18549C6E8();
}

id sub_18549C6E8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58) + 16))();
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_initWithLength_, v2);
}

uint64_t sub_18549C904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_186A1EF8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v13 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAF7B0);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)(v4 + 32) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00B0);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  *(void *)(v4 + 40) = v15;
  v18[1] = v4 + 56;
  *(void *)(v4 + 96) = 0;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 73) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v4 + 128) = 0;
  *(void *)(v4 + 136) = a2;
  *(void *)(v4 + 144) = a3;
  sub_1854B3328();
  swift_retain();
  sub_186A1EF5C();
  sub_186A1E6DC();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v8);
  *(void *)(v4 + 16) = sub_186A1EFCC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAF7A8);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)(v4 + 24) = v16;
  swift_beginAccess();
  *(void *)(v4 + 56) = 0;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v4 + 48) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  return v4;
}

uint64_t UIMutableTraits.userInterfaceLevel.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB2566E8, type metadata accessor for UIUserInterfaceLevel);
  return v5(&v8, &type metadata for UITraitUserInterfaceLevel, &type metadata for UITraitUserInterfaceLevel, &protocol witness table for UITraitUserInterfaceLevel, v6, a2, a3);
}

uint64_t UIMutableTraits.layoutDirection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256788, type metadata accessor for UITraitEnvironmentLayoutDirection);
  return v5(&v8, &type metadata for UITraitLayoutDirection, &type metadata for UITraitLayoutDirection, &protocol witness table for UITraitLayoutDirection, v6, a2, a3);
}

uint64_t UIMutableTraits.accessibilityContrast.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256760, type metadata accessor for UIAccessibilityContrast);
  return v5(&v8, &type metadata for UITraitAccessibilityContrast, &type metadata for UITraitAccessibilityContrast, &protocol witness table for UITraitAccessibilityContrast, v6, a2, a3);
}

uint64_t sub_18549CE60(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (void *)(a2 + 104);
  swift_beginAccess();
  unint64_t v7 = *(void *)(a2 + 104);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_186A1F67C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v8;
  swift_beginAccess();
  unint64_t v9 = swift_bridgeObjectRetain();
  sub_18549CF88(v9);
  swift_endAccess();
  unint64_t v10 = *(void *)(a2 + 96);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_186A1F67C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *a3 = v11;
  *uint64_t v6 = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

uint64_t sub_18549CF88(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_186A1F67C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
    if (v9 >= v6) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v10 <= v6) {
      uint64_t v10 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x18C102250](v5, v10, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
LABEL_15:
    uint64_t result = sub_18549D15C(v8 + 8 * *(void *)(v8 + 16) + 32, v9 - *(void *)(v8 + 16), a1);
    if (v12 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_186A1F67C();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    uint64_t v13 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v14 = __OFADD__(v13, v12);
    uint64_t v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
  }
  swift_bridgeObjectRelease();
  return sub_186A1EB5C();
}

uint64_t sub_18549D15C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1854B2C88(&qword_1E8FB8088, &qword_1E8FB8080);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB8080);
          uint64_t v12 = sub_185AF9434(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for InProcessAnimationManager.TickEntry();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_186A1F6DC();
  __break(1u);
  return result;
}

uint64_t sub_18549D37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t v16 = v15;
  uint64_t v28 = (uint64_t)&v15[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v28, (uint64_t)&v62, &qword_1EB255C18);
  if (v63)
  {
    uint64_t v60 = a3;
    uint64_t v61 = a5;
    sub_1854B1F20(&v62, (uint64_t)v64);
    int v29 = v16[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v16, sel_preferredFrameRateRange);
    int v31 = v30;
    int v33 = v32;
    int v35 = v34;
    unsigned int v55 = objc_msgSend(v16, sel_updateReason);
    if (v29 == 3)
    {
      uint64_t v47 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v45 = 0;
    }
    else
    {
      objc_msgSend(v16, sel__incrementDidEndCount);
      uint64_t v36 = MEMORY[0x18C109380](a7 + 256);
      if (!v36) {
        goto LABEL_5;
      }
      float32x4_t v37 = (void *)v36;
      _s23InProcessAnimationStateCMa();
      float32x4_t v38 = v16;
      int v54 = v29;
      uint64_t v39 = a2;
      uint64_t v40 = a4;
      uint64_t v41 = a6;
      id v42 = v37;
      LOBYTE(v37) = sub_186A1F0AC();

      a6 = v41;
      a4 = v40;
      a2 = v39;
      int v29 = v54;

      if ((v37 & 1) == 0)
      {
LABEL_5:
        uint64_t v43 = (void *)MEMORY[0x18C109380](a7 + 256);

        if (v43)
        {
          double v44 = (unsigned char *)MEMORY[0x18C109380](a7 + 256);
          if (v44)
          {
            v44[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v16;
      id v46 = v16;
      uint64_t v47 = sub_1854A84E8;
    }
    uint64_t v48 = *(void *)(a7 + 272);
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a7 + 272) = v50;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v64, (uint64_t)&v62);
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = a7;
        *(void *)(v51 + 24) = v16;
        *(double *)(v51 + 32) = a8;
        *(double *)(v51 + 40) = a9;
        *(double *)(v51 + 48) = a10;
        *(double *)(v51 + 56) = a11;
        *(double *)(v51 + 64) = a12;
        *(double *)(v51 + 72) = a13;
        *(double *)(v51 + 80) = a14;
        *(double *)(v51 + 88) = a15;
        sub_1854B1F20(&v62, v51 + 96);
        *(void *)(v51 + 136) = a1;
        *(void *)(v51 + 144) = a2;
        *(void *)(v51 + 152) = v60;
        *(void *)(v51 + 160) = a4;
        *(void *)(v51 + 168) = v61;
        *(void *)(v51 + 176) = a6;
        *(unsigned char *)(v51 + 184) = v29 != 3;
        *(_DWORD *)(v51 + 188) = v55;
        *(_DWORD *)(v51 + 192) = v31;
        *(_DWORD *)(v51 + 196) = v33;
        *(_DWORD *)(v51 + 200) = v35;
        *(void *)(v51 + 208) = v47;
        *(void *)(v51 + 216) = v45;
        long long v52 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1858B3B84, v51);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v62, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

uint64_t sub_18549D74C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, char a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  void (*v32)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  BOOL v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v52;
  NSObject *v56;
  uint64_t v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  unsigned __int8 v83;
  void v84[42];
  char v85;
  void v86[11];
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;

  float32x4_t v91 = a1;
  float32x4_t v92 = a2;
  float32x4_t v93 = a3;
  float32x4_t v94 = a4;
  float32x4_t v87 = a5;
  float32x4_t v88 = a6;
  float32x4_t v89 = a7;
  float32x4_t v90 = a8;
  uint64_t v25 = a11[3];
  uint64_t v26 = a11[4];
  __swift_project_boxed_opaque_existential_0Tm(a11, v25);
  swift_beginAccess();
  uint64_t v27 = *(unsigned __int8 *)(v24 + 209);
  long long v59 = v24;
  uint64_t v28 = *(os_unfair_lock_s **)(v24 + 32);
  int v29 = v28 + 4;
  int v30 = v28 + 6;
  os_unfair_lock_lock(v28 + 6);
  uint64_t v60 = v29;
  sub_1854AEC24(v29, v84);
  uint64_t v61 = v30;
  os_unfair_lock_unlock(v30);
  uint64_t v31 = v84[0];
  if (v84[0])
  {
    swift_beginAccess();
    sub_1853B7020(v31 + 24, (uint64_t)v84, &qword_1E8FAED88);
    swift_release();
  }
  else
  {
    memset(v84, 0, sizeof(v84));
    float32x4_t v85 = -1;
  }
  int v32 = *(void (**)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  int v33 = sub_1858B8590();
  v32(v86, v27, v84, &v91, &v87, &type metadata for UIAnimatableNormalizedRect, v33, v25, v26);
  sub_1853B93B8((uint64_t)v84, &qword_1E8FAED90);
  os_unfair_lock_lock(v30);
  sub_1854AEC24(v60, v84);
  os_unfair_lock_unlock(v30);
  int v34 = v84[0];
  if (v84[0])
  {
    swift_beginAccess();
    sub_1853B7020(v34 + 24, (uint64_t)&v62, &qword_1E8FAED88);
    swift_release();
  }
  else
  {
    float32x4_t v81 = 0u;
    float32x4_t v82 = 0u;
    float32x4_t v79 = 0u;
    float32x4_t v80 = 0u;
    double v77 = 0u;
    int8x16_t v78 = 0u;
    float32x4_t v75 = 0u;
    char v76 = 0u;
    double v73 = 0u;
    float32x4_t v74 = 0u;
    double v71 = 0u;
    double v72 = 0u;
    CGFloat v69 = 0u;
    CGFloat v70 = 0u;
    float32x4_t v67 = 0u;
    float32x4_t v68 = 0u;
    float32x4_t v65 = 0u;
    float32x4_t v66 = 0u;
    uint64_t v63 = 0u;
    unint64_t v64 = 0u;
    long long v62 = 0u;
    uint64_t v83 = -1;
  }
  swift_beginAccess();
  sub_1854B4128((uint64_t)&v62, (uint64_t)v86, a10 & 1, &qword_1E8FAED90, &qword_1E8FB2D40, &qword_1E8FB2D48, &qword_1E8FAED88, (uint64_t)v84, v91, v92, v93, v94, v87, v88, v89, v90, &qword_1E8FAEDC8, &qword_1E8FB2DE8);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v62, &qword_1E8FAED90);
  os_unfair_lock_lock(v30);
  sub_1854AEC24(v60, &v62);
  os_unfair_lock_unlock(v30);
  int v35 = v62;
  if ((void)v62)
  {
    uint64_t v36 = *(void (**)(void))(v62 + 368);
    if (v36)
    {
      *(void *)(v62 + 368) = 0;
      *(void *)(v35 + 376) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v36);
      v36(0);
      sub_1854AFD40((uint64_t)v36);
    }
    *(unsigned char *)(v35 + 384) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v84, (uint64_t)&v62, &qword_1E8FAED88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAED98);
  float32x4_t v37 = swift_allocObject();
  *(void *)(v37 + 368) = 0;
  *(void *)(v37 + 376) = 0;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v62, v37 + 24, &qword_1E8FAED88);
  *(_WORD *)(v37 + 384) = 0;
  float32x4_t v38 = *(void *)(v37 + 368);
  *(void *)(v37 + 368) = a23;
  *(void *)(v37 + 376) = a24;
  swift_retain();
  sub_1854AFD40(v38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  uint64_t v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  *(void *)(v37 + 16) = v39;
  if (a18) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v59 + 120) & 1) == 0) {
    sub_185952EA4(&qword_1E8FAED88, *(double *)(v59 + 88), *(double *)(v59 + 96), *(double *)(v59 + 104), *(double *)(v59 + 112));
  }
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(unsigned char *)(v40 + 48) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  long long v52 = qword_1E8FD58B0;
  uint64_t v41 = *(unsigned char *)(v59 + 264);
  sub_1853B7020((uint64_t)v84, (uint64_t)&v62, &qword_1E8FAED88);
  id v42 = v83;
  if (v83 == 2) {
    sub_1853B93B8((uint64_t)&v62, &qword_1E8FAED88);
  }
  uint64_t v43 = v42 == 2;
  double v44 = (void *)swift_allocObject();
  v44[2] = v37;
  v44[3] = a12;
  v44[4] = a13;
  v44[5] = v59;
  v44[6] = v40;
  v44[7] = a14;
  v44[8] = a15;
  v44[9] = a16;
  v44[10] = a17;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  uint64_t v45 = swift_allocObject();
  *(_DWORD *)(v45 + 16) = a20;
  *(_DWORD *)(v45 + 20) = a21;
  *(_DWORD *)(v45 + 24) = a22;
  *(_DWORD *)(v45 + 28) = a19;
  *(unsigned char *)(v45 + 32) = v41;
  *(unsigned char *)(v45 + 33) = v43;
  *(void *)(v45 + 40) = sub_1853C31EC;
  *(void *)(v45 + 48) = v44;
  float32x4_t v56 = *(NSObject **)(v52 + 264);
  id v46 = swift_allocObject();
  *(void *)(v46 + 16) = v52;
  *(void *)(v46 + 24) = v45;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_1853C10BC;
  *(void *)(v47 + 24) = v46;
  *(void *)&unint64_t v64 = sub_1853BE6D4;
  *((void *)&v64 + 1) = v47;
  *(void *)&long long v62 = MEMORY[0x1E4F143A8];
  *((void *)&v62 + 1) = 1107296256;
  *(void *)&uint64_t v63 = sub_1853BE46C;
  *((void *)&v63 + 1) = &block_descriptor_681;
  uint64_t v48 = _Block_copy(&v62);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v56, v48);
  _Block_release(v48);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v61);
    sub_1854AEC5C(v60);
    os_unfair_lock_unlock(v61);
    swift_release_n();
    sub_1853B93B8((uint64_t)v84, &qword_1E8FAED88);
    sub_1854AECBC((uint64_t)v86);
    return swift_release();
  }
  return result;
}

uint64_t sub_18549DF40()
{
  uint64_t v1 = v0;
  uint64_t v40 = sub_186A1EF8C();
  uint64_t v2 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  unint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v6 - 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB00F0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 16777218;
  *(void *)(v0 + 16) = v7;
  *(unsigned char *)(v0 + 24) = 1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 56) = 0;
  int v8 = *(_DWORD *)(MEMORY[0x1E4F39AF0] + 8);
  *(void *)(v0 + 64) = *MEMORY[0x1E4F39AF0];
  *(_DWORD *)(v0 + 72) = v8;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v10 = sub_18549EF04(MEMORY[0x1E4FBC860]);
  *(void *)(v1 + 80) = sub_1854A303C(v10);
  *(void *)(v1 + 88) = v9;
  *(void *)(v1 + 96) = v9;
  *(void *)(v1 + 104) = v9;
  *(void *)(v1 + 112) = v9;
  *(void *)(v1 + 120) = v9;
  *(void *)(v1 + 128) = v9;
  *(void *)(v1 + 136) = sub_18549F148((uint64_t)v9);
  *(void *)(v1 + 144) = sub_18549F148((uint64_t)v9);
  *(void *)(v1 + 152) = sub_18549F148((uint64_t)v9);
  *(void *)(v1 + 160) = sub_18549EF04((uint64_t)v9);
  *(void *)(v1 + 168) = 0;
  *(_DWORD *)(v1 + 176) = 5;
  *(void *)(v1 + 216) = 0;
  *(void *)(v1 + 180) = 0;
  *(void *)(v1 + 196) = 0;
  *(void *)(v1 + 188) = 0;
  *(_DWORD *)(v1 + 204) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v35 = sub_1853B985C(0, (unint64_t *)&qword_1EB256300);
  *(void *)(v1 + 232) = 0;
  *(void *)(v1 + 240) = 0;
  *(void *)(v1 + 224) = 0;
  sub_186A1E6DC();
  id v41 = v9;
  uint64_t v11 = sub_1854A2CAC(&qword_1EB255C70, MEMORY[0x1E4FBCC10]);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C60);
  uint64_t v34 = sub_1854B2C88(&qword_1EB255C68, &qword_1EB255C60);
  uint64_t v37 = v5;
  uint64_t v38 = v11;
  sub_186A1F21C();
  uint64_t v12 = *MEMORY[0x1E4FBCC58];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v33 = v2 + 104;
  uint64_t v36 = v13;
  uint64_t v31 = v4;
  uint64_t v14 = v40;
  v13(v4, v12, v40);
  *(void *)(v1 + 248) = sub_186A1EFCC();
  sub_186A1E6DC();
  id v41 = (id)MEMORY[0x1E4FBC860];
  sub_186A1F21C();
  uint64_t v15 = v31;
  unsigned int v32 = v12;
  v36(v31, v12, v14);
  *(void *)(v1 + 256) = sub_186A1EFCC();
  sub_186A1E6DC();
  id v41 = (id)MEMORY[0x1E4FBC860];
  sub_186A1F21C();
  uint64_t v16 = v40;
  float32x4_t v17 = v36;
  v36(v15, v12, v40);
  *(void *)(v1 + 264) = sub_186A1EFCC();
  sub_186A1E6DC();
  id v41 = (id)MEMORY[0x1E4FBC860];
  sub_186A1F21C();
  uint64_t v18 = v32;
  v17(v15, v32, v16);
  *(void *)(v1 + 272) = sub_186A1EFCC();
  sub_186A1E6DC();
  id v41 = (id)MEMORY[0x1E4FBC860];
  sub_186A1F21C();
  v17(v15, v18, v40);
  *(void *)(v1 + 280) = sub_186A1EFCC();
  *(void *)(v1 + 288) = 0;
  *(_WORD *)(v1 + 296) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 336) = 0;
  *(void *)(v1 + 312) = 0;
  *(void *)(v1 + 320) = 0;
  *(unsigned char *)(v1 + 328) = 0;
  *(void *)(v1 + 344) = sub_1858B6554(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(v1 + 352) = 0;
  *(void *)(v1 + 360) = MEMORY[0x1E4FBC870];
  *(_WORD *)(v1 + 368) = 257;
  *(void *)(v1 + 376) = 0;
  id v19 = (void *)UIApp;
  if (UIApp)
  {
    ObjCClassFromObject = (void *)swift_getObjCClassFromObject();
    id v21 = v19;
    if (objc_msgSend(ObjCClassFromObject, sel__isSystemUIService)
      && (_UIApplicationIsExtension() & 1) == 0)
    {
      float32x4_t v22 = self;
      id v23 = objc_msgSend(v22, sel_defaultCenter);
      objc_msgSend(v23, sel_addObserver_selector_name_object_, v1, sel_applicationDidEnterBackground, @"UIApplicationDidEnterBackgroundNotification", v21);

      id v24 = objc_msgSend(v22, sel_defaultCenter);
      objc_msgSend(v24, sel_addObserver_selector_name_object_, v1, sel_applicationBecameActive, @"UIApplicationDidBecomeActiveNotification", v21);

      id v25 = objc_msgSend(v22, sel_defaultCenter);
      objc_msgSend(v25, sel_addObserver_selector_name_object_, v1, sel_screenBasedSceneWillAttachWindow_, @"_UIScreenBasedWindowSceneDidAttachWindowNotification", 0);

      id v21 = v25;
    }
  }
  if (qword_1E8FB0078 != -1) {
    swift_once();
  }
  if ((byte_1E8FAF7B8 & 1) == 0) {
    sub_1858B9180();
  }
  sub_1858B9668();
  id v26 = objc_msgSend(self, sel_mainDisplay);
  if (v26)
  {
    id v41 = v26;
    swift_getKeyPath();
    swift_allocObject();
    swift_weakInit();
    uint64_t v27 = sub_186A1D5CC();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v28 = *(void **)(v1 + 376);
  *(void *)(v1 + 376) = v27;

  return v1;
}

uint64_t sub_18549E784(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int v3 = *(_DWORD *)(MEMORY[0x1E4F39AF0] + 8);
  uint64_t v42 = *MEMORY[0x1E4F39AF0];
  int v43 = v3;
  uint64_t v4 = sub_18549EF04(MEMORY[0x1E4FBC860]);
  uint64_t v41 = sub_1854A303C(v4);
  uint64_t v5 = a1[33];
  uint64_t v6 = (void *)swift_allocObject();
  mach_msg_header_t v6[2] = &v42;
  v6[3] = a1;
  v6[4] = &v41;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1853C5994;
  *(void *)(v7 + 24) = v6;
  uint64_t v39 = sub_1853BE6D4;
  uint64_t v40 = v7;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_1853BE46C;
  uint64_t v38 = &block_descriptor_130_0;
  int v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = (os_unfair_lock_s *)a1[2];
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  uint64_t v12 = (unsigned __int16 *)&v10[4];
  v10 += 5;
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_18549EE08(v12, &aBlock);
  os_unfair_lock_unlock(v10);
  int v13 = BYTE1(aBlock);
  swift_release_n();
  if (v13 == 1)
  {
    uint64_t v14 = (void *)MEMORY[0x18C109380](a1 + 5);

    if (!v14)
    {
      dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a1;
      *(void *)(v16 + 24) = v15;
      id v17 = objc_allocWithZone(MEMORY[0x1E4F29060]);
      uint64_t v39 = sub_1858B9984;
      uint64_t v40 = v16;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_1856A95EC;
      uint64_t v38 = &block_descriptor_158_0;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_retain();
      id v19 = v15;
      id v20 = objc_msgSend(v17, sel_initWithBlock_, v18);
      _Block_release(v18);
      swift_release();
      swift_unknownObjectWeakAssign();
      id v21 = objc_msgSend(self, sel_mainThread);
      objc_msgSend(v21, sel_threadPriority);
      double v23 = v22;

      objc_msgSend(v20, sel_setThreadPriority_, fmax(v23, 0.85));
      id v24 = (void *)sub_186A1E92C();
      objc_msgSend(v20, sel_setName_, v24);

      objc_msgSend(v20, sel_start);
      sub_186A1F02C();
    }
    id v25 = a1[34];
    id v26 = (void *)swift_allocObject();
    v26[2] = a1;
    _OWORD v26[3] = &v42;
    void v26[4] = &v41;
    v26[5] = v2;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = sub_1853C5A3C;
    *(void *)(v27 + 16) = sub_1853C5A3C;
    *(void *)(v27 + 24) = v26;
    uint64_t v39 = sub_1853BE6D4;
    uint64_t v40 = v27;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_1853BE46C;
    uint64_t v38 = &block_descriptor_152;
    int v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v25, v29);
    _Block_release(v29);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v25 & 1) == 0)
    {
      uint64_t v30 = 0;
LABEL_9:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1854AFD40((uint64_t)v28);
      return sub_1854AFD40((uint64_t)v30);
    }
    goto LABEL_11;
  }
  uint64_t v31 = a1[34];
  unsigned int v32 = (void *)swift_allocObject();
  v32[2] = a1;
  v32[3] = &v42;
  v32[4] = &v41;
  v32[5] = v2;
  uint64_t v33 = swift_allocObject();
  uint64_t v30 = sub_185AFB588;
  *(void *)(v33 + 16) = sub_185AFB588;
  *(void *)(v33 + 24) = v32;
  uint64_t v39 = sub_1853BE6D4;
  uint64_t v40 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v36 = 1107296256;
  uint64_t v37 = sub_1853BE46C;
  uint64_t v38 = &block_descriptor_142;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v31, v34);
  _Block_release(v34);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v31 & 1) == 0)
  {
    uint64_t v28 = 0;
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_18549EDEC@<X0>(unsigned __int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_185AF6FC8(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

uint64_t sub_18549EE08@<X0>(unsigned __int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_18549EE20(a1, a2);
}

uint64_t sub_18549EE20@<X0>(unsigned __int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  if (*((unsigned char *)a1 + 3)) {
    int v4 = 0x1000000;
  }
  else {
    int v4 = 0;
  }
  if (*((unsigned char *)a1 + 2)) {
    int v5 = 0x10000;
  }
  else {
    int v5 = 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(v5 | *a1 | v4);
  *a2 = result & 1;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_18549EE98()
{
  swift_getAtKeyPath();
  if (v3) {
    int v0 = 256;
  }
  else {
    int v0 = 0;
  }
  return v0 | v2;
}

uint64_t sub_18549EEF0()
{
  return sub_185AF6F74();
}

uint64_t sub_18549EF04(uint64_t a1)
{
  unsigned __int8 v2 = (void *)sub_18549F070(MEMORY[0x1E4FBC860]);
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  int v4 = (unsigned int *)(a1 + 32);
  while (1)
  {
    unsigned int v6 = *v4++;
    unsigned int v5 = v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v9 = sub_1854A2088(v6);
    uint64_t v10 = v2[2];
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v13 = v8;
    if (v2[3] >= v12)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1859BCBC8();
      }
    }
    else
    {
      sub_1858B34A8(v12, isUniquelyReferenced_nonNull_native);
      unint64_t v14 = sub_1854A2088(v5);
      if ((v13 & 1) != (v15 & 1)) {
        goto LABEL_18;
      }
      unint64_t v9 = v14;
    }
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      v2[(v9 >> 6) + 8] |= 1 << v9;
      *(_DWORD *)(v2[6] + 4 * v9) = v5;
      *(void *)(v2[7] + 8 * v9) = 0;
      uint64_t v16 = v2[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_17;
      }
      v2[2] = v18;
    }
    uint64_t v19 = v2[7];
    uint64_t v20 = *(void *)(v19 + 8 * v9);
    BOOL v17 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (v17) {
      goto LABEL_16;
    }
    *(void *)(v19 + 8 * v9) = v21;
    if (!--v3) {
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

unint64_t sub_18549F070(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFCC0);
    uint64_t v3 = (void *)sub_186A1F6CC();
    for (unint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned int v5 = *((_DWORD *)i - 2);
      uint64_t v6 = *i;
      unint64_t result = sub_1854A2088(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      _OWORD v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_18549F148(uint64_t a1)
{
  unsigned __int8 v2 = (void *)sub_18549F2C0(MEMORY[0x1E4FBC860]);
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (uint64_t)v2;
  }
  for (unint64_t i = (float *)(a1 + 32); ; ++i)
  {
    float v5 = *i;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v8 = sub_1854A203C(v5);
    uint64_t v9 = v2[2];
    BOOL v10 = (v7 & 1) == 0;
    uint64_t v11 = v9 + v10;
    if (__OFADD__(v9, v10)) {
      break;
    }
    char v12 = v7;
    if (v2[3] >= v11)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1859BCA34();
      }
    }
    else
    {
      sub_1854A3BD4(v11, isUniquelyReferenced_nonNull_native);
      unint64_t v13 = sub_1854A203C(v5);
      if ((v12 & 1) != (v14 & 1)) {
        goto LABEL_18;
      }
      unint64_t v8 = v13;
    }
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v2[(v8 >> 6) + 8] |= 1 << v8;
      *(float *)(v2[6] + 4 * v8) = v5;
      *(void *)(v2[7] + 8 * v8) = 0;
      uint64_t v15 = v2[2];
      BOOL v16 = __OFADD__(v15, 1);
      uint64_t v17 = v15 + 1;
      if (v16) {
        goto LABEL_17;
      }
      v2[2] = v17;
    }
    uint64_t v18 = v2[7];
    uint64_t v19 = *(void *)(v18 + 8 * v8);
    BOOL v16 = __OFADD__(v19, 1);
    uint64_t v20 = v19 + 1;
    if (v16) {
      goto LABEL_16;
    }
    *(void *)(v18 + 8 * v8) = v20;
    if (!--v3) {
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

unint64_t sub_18549F2C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFCA8);
    uint64_t v3 = (void *)sub_186A1F6CC();
    for (unint64_t i = (float *)(a1 + 40); ; i += 4)
    {
      float v5 = *(i - 2);
      uint64_t v6 = *(void *)i;
      unint64_t result = sub_1854A203C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(float *)(v3[6] + 4 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      _OWORD v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

id _sSo6UIViewC5UIKitE23registerForTraitChanges_6target6actionSo25UITraitChangeRegistration_pSayAC0I10Definition_pXpG_yp10ObjectiveC8SelectorVtF_0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_186A1F49C();
    char v8 = (uint64_t *)(a1 + 40);
    do
    {
      sub_1854AF474(*(v8 - 1), 0, 0, *(v8 - 1), *v8);
      sub_186A1F46C();
      sub_186A1F4AC();
      sub_186A1F4BC();
      sub_186A1F47C();
      v8 += 2;
      --v6;
    }
    while (v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C00);
  uint64_t v9 = (void *)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_0Tm(a2, a2[3]);
  id v10 = objc_msgSend(v3, sel__registerForTraitTokenChanges_withTarget_action_, v9, sub_186A1F83C(), a3);

  swift_unknownObjectRelease();
  return v10;
}

id _sSo6UIViewC5UIKitE23registerForTraitChanges_6actionSo25UITraitChangeRegistration_pSayAC0H10Definition_pXpG_10ObjectiveC8SelectorVtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    sub_186A1F49C();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      sub_1854AF474(*(v6 - 1), 0, 0, *(v6 - 1), *v6);
      sub_186A1F46C();
      sub_186A1F4AC();
      sub_186A1F4BC();
      sub_186A1F47C();
      v6 += 2;
      --v4;
    }
    while (v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C00);
  char v7 = (void *)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v2, sel__registerForTraitTokenChanges_withTarget_action_, v7, v2, a2);

  return v8;
}

uint64_t sub_18549F9E8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  unint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v12;
  v13[3] = a4;
  v13[4] = a5;
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  uint64_t v27 = sub_1853B59D0;
  uint64_t v28 = (void *)v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  id v25 = sub_1853BE46C;
  id v26 = &block_descriptor_147_0;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  sub_1854B0A60(a4);
  swift_retain();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(unsigned char *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a6;
  *(void *)(v16 + 40) = a7;
  uint64_t v27 = (uint64_t (*)())sub_1856AACA8;
  uint64_t v28 = (void *)v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  id v25 = sub_1856A95EC;
  id v26 = &block_descriptor_153;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v27 = sub_185441ACC;
  uint64_t v28 = v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  id v25 = sub_18544192C;
  id v26 = &block_descriptor_156;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v15, 0, v17, 0.0, 0.0, v18);
  swift_release();
  _Block_release(v18);
  _Block_release(v17);
  _Block_release(v15);
  swift_release();
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

void sub_18549FCC8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v8 = (void *)sub_18549FDC4();
  uint64_t v9 = v8;
  if (a1)
  {
    v13[4] = a1;
    void v13[5] = a2;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 1107296256;
    _OWORD v13[2] = sub_185A72460;
    v13[3] = a3;
    id v10 = _Block_copy(v13);
    id v11 = v9;
    sub_1854B0A60(a1);
    swift_release();
  }
  else
  {
    id v12 = v8;
    id v10 = 0;
  }
  objc_msgSend(v9, *a4, v10);
  sub_1854AFD40(a1);
  _Block_release(v10);
}

uint64_t sub_18549FDC4()
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *v0;
  if (isUniquelyReferenced_nonNull_native) {
    return *(void *)(v2 + 16);
  }
  objc_msgSend(*(id *)(v2 + 16), sel_copy);
  sub_186A1F1CC();
  swift_unknownObjectRelease();
  sub_1856ACF00();
  swift_dynamicCast();
  uint64_t v3 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v6;
  swift_release();
  uint64_t *v0 = v4;
  return v3;
}

void sub_18549FE88(os_unfair_lock_s *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 4;
  char v7 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_18549FFB0(v6, &v9);
  os_unfair_lock_unlock(v7);
  if (v9 == 1)
  {
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    id v8 = (void *)swift_allocObject();
    v8[2] = a1;
    v8[3] = a2;
    v8[4] = a3;
    swift_retain();
    swift_retain();
    sub_1854A85B0((uint64_t)sub_18557A374, (uint64_t)v8);
    swift_release();
  }
}

unsigned char *sub_18549FFB0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if (*result)
  {
    *a2 = 0;
  }
  else
  {
    *uint64_t result = 1;
    *a2 = 1;
  }
  return result;
}

uint64_t UIMutableTraits._typesettingLanguageAwareLineHeightRatio.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return (*(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 232))(&v5, &type metadata for UITraitTypesettingLanguageAwareLineHeightRatio, &type metadata for UITraitTypesettingLanguageAwareLineHeightRatio, &protocol witness table for UITraitTypesettingLanguageAwareLineHeightRatio, a2, a3);
}

uint64_t UIMutableTraits.typesettingLanguage.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1853B7020(a1, (uint64_t)v8, (uint64_t *)&unk_1EB256638);
  (*(void (**)(char *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 208))(v8, &type metadata for UITraitTypesettingLanguage, &type metadata for UITraitTypesettingLanguage, &protocol witness table for UITraitTypesettingLanguage, a2, a3);
  return sub_1853B93B8(a1, (uint64_t *)&unk_1EB256638);
}

uint64_t sub_1854A0108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  a7();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v9(a1, AssociatedTypeWitness);
}

uint64_t sub_1854A019C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  v8(a1, a3, a4);
  sub_1853B76BC((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  swift_dynamicCast();
  sub_1853B8150((uint64_t)v13, (uint64_t)v12, &qword_1EB256B10);
  uint64_t v9 = v12[3];
  sub_1853B93B8((uint64_t)v12, &qword_1EB256B10);
  if (v9) {
    uint64_t v10 = sub_186A1F83C();
  }
  else {
    uint64_t v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  objc_msgSend(*v4, sel__setObject_forTraitToken_, v10, sub_1854A0320(a3, a4, (uint64_t)&unk_1ED0D83C8, (uint64_t (*)(uint64_t))sub_1858DC78C));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1854A0320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v4;
  uint64_t v9 = sub_1854AF474(v4, a4, (uint64_t)v8, a1, *(void *)(a2 + 8));
  swift_release();
  return v9;
}

uint64_t sub_1854A039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1854A0108(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_1854A019C);
}

uint64_t sub_1854A03B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256628);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1853B7020(a1, (uint64_t)v4, (uint64_t *)&unk_1EB256638);
  uint64_t v8 = sub_186A1D75C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    uint64_t v10 = (uint64_t *)&unk_1EB256638;
    uint64_t v11 = (uint64_t)v4;
  }
  else
  {
    sub_186A1D74C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    uint64_t v12 = sub_186A1D72C();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
    {
      uint64_t v14 = sub_186A1D71C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
      return v14;
    }
    uint64_t v10 = (uint64_t *)&unk_1EB256628;
    uint64_t v11 = (uint64_t)v7;
  }
  sub_1853B93B8(v11, v10);
  return 0;
}

uint64_t sub_1854A05F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a1, a3, a4);
  double v6 = v9;
  uint64_t v7 = (void *)sub_1855741B8();
  swift_unknownObjectRetain();
  objc_msgSend(v7, sel__setCGFloatValue_forTraitToken_, sub_1854A0320(a3, a4, (uint64_t)&unk_1ED0D83A0, (uint64_t (*)(uint64_t))sub_1858B6678), v6);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1854A06CC@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)result;
  if (*(unsigned char *)(result + 8) == 1)
  {
    if (v3)
    {
      unint64_t v4 = 0;
      if (v3 != 1) {
        uint64_t result = CTGetDefaultLanguageAwareLineHeightRatio();
      }
    }
    else
    {
      unint64_t v4 = 0xBFF0000000000000;
    }
  }
  else
  {
    unint64_t v4 = *(void *)result;
  }
  *a2 = v4;
  return result;
}

uint64_t sub_1854A072C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1854A0108(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_1854A05F0);
}

id sub_1854A0744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_186A1F49C();
    uint64_t v14 = (uint64_t *)(a1 + 40);
    do
    {
      sub_1854AF474(*(v14 - 1), 0, 0, *(v14 - 1), *v14);
      sub_186A1F46C();
      sub_186A1F4AC();
      sub_186A1F4BC();
      sub_186A1F47C();
      v14 += 2;
      --v12;
    }
    while (v12);
    uint64_t v7 = a7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C00);
  uint64_t v15 = (void *)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)swift_allocObject();
  float64x2_t v16[2] = a4;
  v16[3] = a2;
  v16[4] = a3;
  aBlock[4] = a6;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1858B6028;
  aBlock[3] = v7;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v21, sel__registerForTraitTokenChanges_withHandler_, v15, v17);
  _Block_release(v17);

  return v18;
}

uint64_t UITraitCollection.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  id v8 = objc_msgSend(v4, sel__valueForNSIntegerTraitToken_, sub_1854AF3F4(a1, a2, a3, (uint64_t)&unk_1ED0D8260, (uint64_t (*)(uint64_t))sub_1854C9934));
  swift_unknownObjectRelease();
  id v10 = v8;
  return sub_1854A715C((uint64_t)&v10, a1, a2, a4);
}

{
  void *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  unsigned char v25[32];

  double v23 = a4;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v9 = sub_186A1F12C();
  id v21 = *(void *)(v9 - 8);
  double v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v16 = objc_msgSend(v4, sel__objectForTraitToken_, sub_1854AF3F4(a1, a2, a3, (uint64_t)&unk_1ED0D82D8, (uint64_t (*)(uint64_t))sub_1858DC6F8));
  swift_unknownObjectRelease();
  if (v16)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_1853B8150((uint64_t)v24, (uint64_t)v25, &qword_1EB256B10);
  sub_1853B7020((uint64_t)v25, (uint64_t)v24, &qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  uint64_t v17 = swift_dynamicCast();
  id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v17)
  {
    v18(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, AssociatedTypeWitness);
    sub_1854A715C((uint64_t)v15, a1, a2, v23);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
  }
  else
  {
    v18(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  return sub_1853B93B8((uint64_t)v25, &qword_1EB256B10);
}

{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(v4, sel__valueForCGFloatTraitToken_, sub_1854AF3F4(a1, a2, a3, (uint64_t)&unk_1ED0D82B0, (uint64_t (*)(uint64_t))sub_1858DC6CC));
  double v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v11 = v9;
  return sub_1854A715C((uint64_t)&v11, a1, a2, a4);
}

{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(v4, sel__valueForCGFloatTraitToken_, sub_1854AF3F4(a1, a2, a3, (uint64_t)&unk_1ED0D8288, (uint64_t (*)(uint64_t))sub_1858DC6CC));
  double v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v11 = v9;
  return sub_1854A715C((uint64_t)&v11, a1, a2, a4);
}

uint64_t sub_1854A0A58(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = swift_retain();
  MEMORY[0x18C101940](v4);
  if (*(void *)((*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_186A1EB8C();
  sub_186A1EBEC();
  sub_186A1EB5C();
  swift_endAccess();
  float v5 = *(float *)(a2 + 16);
  float v6 = *(float *)(a2 + 20);
  if (sub_186A1EEFC()) {
    goto LABEL_15;
  }
  swift_beginAccess();
  sub_1854A0CE0(v5);
  swift_endAccess();
  swift_beginAccess();
  sub_1854A0CE0(v6);
  swift_endAccess();
  uint64_t v7 = sub_186A1EF1C();
  if ((v7 & 0x100000000) == 0)
  {
    float v8 = *(float *)&v7;
    swift_beginAccess();
    sub_1854A0CE0(v8);
    swift_endAccess();
  }
  unsigned int v9 = *(_DWORD *)(a2 + 28);
  swift_beginAccess();
  sub_1854A0E34(v9);
  swift_endAccess();
  if ((*(unsigned char *)(a2 + 32) & 1) == 0)
  {
    uint64_t v10 = sub_186A1EF1C();
    uint64_t result = sub_186A1EF1C();
    if ((v10 & 0x100000000) != 0)
    {
      if ((result & 0x100000000) == 0)
      {
LABEL_12:
        uint64_t v12 = *(void *)(a1 + 168);
        BOOL v13 = __OFADD__(v12, 1);
        uint64_t v14 = v12 + 1;
        if (v13)
        {
          __break(1u);
          return result;
        }
        *(void *)(a1 + 168) = v14;
      }
    }
    else if ((result & 0x100000000) != 0 || *(float *)&v10 != *(float *)&result)
    {
      goto LABEL_12;
    }
  }
  *(_WORD *)(a1 + 368) = 0;
LABEL_15:
  uint64_t v15 = MEMORY[0x18C109380](a1 + 208);
  uint64_t result = swift_unknownObjectRelease();
  if (!v15)
  {
    if (qword_1E8FD5AD8)
    {
      uint64_t v16 = (_UNKNOWN **)qword_1E8FD5AE0;
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v16 = &off_1ED0B87F0;
    }
    *(void *)(a1 + 216) = v16;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRetain();
    uint64_t result = swift_unknownObjectRelease();
    *(unsigned char *)(a1 + 297) = 1;
  }
  return result;
}

uint64_t sub_1854A0CE0(float a1)
{
  unint64_t v3 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  uint64_t v22 = v6;
  *unint64_t v3 = 0x8000000000000000;
  unint64_t v8 = sub_1854A203C(a1);
  uint64_t v9 = *(void *)(v6 + 16);
  BOOL v10 = (v7 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v2 = v7;
  if (*(void *)(v6 + 24) < v11)
  {
    sub_1854A3BD4(v11, isUniquelyReferenced_nonNull_native);
    unint64_t v12 = sub_1854A203C(a1);
    if ((v2 & 1) == (v13 & 1))
    {
      unint64_t v8 = v12;
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_13;
  }
  while (1)
  {
LABEL_6:
    *unint64_t v3 = v6;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = (void *)*v3;
    if (v2) {
      goto LABEL_9;
    }
    v15[(v8 >> 6) + 8] |= 1 << v8;
    *(float *)(v15[6] + 4 * v8) = a1;
    *(void *)(v15[7] + 8 * v8) = 0;
    uint64_t v16 = v15[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      break;
    }
    v15[2] = v18;
LABEL_9:
    uint64_t v19 = v15[7];
    uint64_t v20 = *(void *)(v19 + 8 * v8);
    BOOL v17 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (!v17)
    {
      *(void *)(v19 + 8 * v8) = v21;
      return result;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    sub_1859BCA34();
    uint64_t v6 = v22;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

uint64_t sub_1854A0E34(unsigned int a1)
{
  unint64_t v3 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v1;
  uint64_t v22 = v6;
  *unint64_t v3 = 0x8000000000000000;
  unint64_t v8 = sub_1854A2088(a1);
  uint64_t v9 = *(void *)(v6 + 16);
  BOOL v10 = (v7 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v2 = v7;
  if (*(void *)(v6 + 24) < v11)
  {
    sub_1858B34A8(v11, isUniquelyReferenced_nonNull_native);
    unint64_t v12 = sub_1854A2088(a1);
    if ((v2 & 1) == (v13 & 1))
    {
      unint64_t v8 = v12;
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_13;
  }
  while (1)
  {
LABEL_6:
    *unint64_t v3 = v6;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = (void *)*v3;
    if (v2) {
      goto LABEL_9;
    }
    v15[(v8 >> 6) + 8] |= 1 << v8;
    *(_DWORD *)(v15[6] + 4 * v8) = a1;
    *(void *)(v15[7] + 8 * v8) = 0;
    uint64_t v16 = v15[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      break;
    }
    v15[2] = v18;
LABEL_9:
    uint64_t v19 = v15[7];
    uint64_t v20 = *(void *)(v19 + 8 * v8);
    BOOL v17 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (!v17)
    {
      *(void *)(v19 + 8 * v8) = v21;
      return result;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    sub_1859BCBC8();
    uint64_t v6 = v22;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

void sub_1854A0F80(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_186A1E6CC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_186A1E6FC();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unint64_t v13 = a2 >> 62;
  uint64_t v147 = v7;
  uint64_t v146 = v11;
  long long v145 = v9;
  uint64_t v144 = v14;
  int v143 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_118:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_186A1F67C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)a1 = v15;
  uint64_t v16 = (void *)(a3 + 96);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1854A2490((unint64_t *)(a3 + 96), a2);
  uint64_t v140 = 0;
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void *)(a3 + 96);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    if ((uint64_t)v19 >= v17) {
      goto LABEL_5;
    }
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  unint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v19 < v17) {
    goto LABEL_120;
  }
LABEL_5:
  sub_1854A2478(v17, v19);
  swift_endAccess();
  if (!*(void *)a1) {
    goto LABEL_106;
  }
  uint64_t v142 = v6;
  long long v141 = (void *)(a3 + 96);
  if (v13)
  {
    swift_bridgeObjectRetain();
    a1 = sub_186A1F67C();
    if (!a1)
    {
LABEL_105:
      swift_bridgeObjectRelease();
      uint64_t v6 = v142;
      uint64_t v16 = v141;
LABEL_106:
      if (!(*v16 >> 62))
      {
        unint64_t v19 = a3 + 297;
        if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_110;
        }
LABEL_108:
        swift_beginAccess();
        unint64_t v117 = *(void *)(a3 + 104);
        if (v117 >> 62) {
          goto LABEL_132;
        }
        if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_110:
          while (*(unsigned char *)(v19 + 71) != 1 || (*(unsigned char *)(v19 + 72) & 1) == 0)
          {
            float v118 = sub_1854A2CF4();
            int v120 = v119;
            int v122 = v121;
            if ((*(unsigned char *)(v19 + 72) & 1) == 0)
            {
              swift_beginAccess();
              uint64_t v123 = swift_bridgeObjectRetain();
              *(void *)(a3 + 80) = sub_1854A303C(v123);
              swift_bridgeObjectRelease();
              *(unsigned char *)(a3 + 369) = 1;
            }
            uint64_t v124 = *(void *)(a3 + 80);
            unint64_t v125 = *(NSObject **)(a3 + 272);
            unint64_t v19 = swift_allocObject();
            *(void *)(v19 + 16) = a3;
            *(float *)(v19 + 24) = v118;
            *(_DWORD *)(v19 + 28) = v120;
            *(_DWORD *)(v19 + 32) = v122;
            *(void *)(v19 + 40) = v124;
            uint64_t v126 = swift_allocObject();
            *(void *)(v126 + 16) = sub_1853C46E8;
            *(void *)(v126 + 24) = v19;
            int64x2_t v158 = sub_1853BE6D4;
            uint64_t v159 = v126;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v155 = 1107296256;
            unint64_t v156 = sub_1853BE46C;
            float64x2_t v157 = &block_descriptor_78_1;
            unint64_t v127 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_release();
            dispatch_sync(v125, v127);
            _Block_release(v127);
            LOBYTE(v124) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v124 & 1) == 0)
            {
              sub_1853B985C(0, (unint64_t *)&qword_1EB256300);
              unint64_t v128 = (void *)sub_186A1EF9C();
              uint64_t v129 = swift_allocObject();
              *(void *)(v129 + 16) = a3;
              *(float *)(v129 + 24) = v118;
              *(_DWORD *)(v129 + 28) = v120;
              *(_DWORD *)(v129 + 32) = v122;
              int64x2_t v158 = sub_1856AA450;
              uint64_t v159 = v129;
              uint64_t aBlock = MEMORY[0x1E4F143A8];
              uint64_t v155 = 1107296256;
              unint64_t v156 = sub_1856A95EC;
              float64x2_t v157 = &block_descriptor_84_0;
              unint64_t v130 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              unint64_t v131 = v143;
              sub_186A1E6DC();
              uint64_t aBlock = MEMORY[0x1E4FBC860];
              sub_1854A2CAC((unint64_t *)&qword_1E8FB0138, MEMORY[0x1E4FBCB00]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB0140);
              sub_1854B2C88((unint64_t *)&qword_1E8FB0148, &qword_1E8FB0140);
              unint64_t v132 = v145;
              sub_186A1F21C();
              MEMORY[0x18C101DF0](0, v131, v132, v130);
              _Block_release(v130);

              (*(void (**)(char *, uint64_t))(v147 + 8))(v132, v6);
              (*(void (**)(char *, uint64_t))(v144 + 8))(v131, v146);
              swift_release();
              return;
            }
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            swift_bridgeObjectRetain();
            uint64_t v134 = sub_186A1F67C();
            swift_bridgeObjectRelease();
            if (!v134) {
              goto LABEL_133;
            }
          }
        }
        else
        {
LABEL_133:
          swift_beginAccess();
          *(void *)(a3 + 344) = MEMORY[0x1E4FBC868];
          swift_bridgeObjectRelease();
          if ((*(unsigned char *)v19 & 1) == 0)
          {
            if (MEMORY[0x18C109380](a3 + 208))
            {
              uint64_t v135 = *(void *)(a3 + 216);
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v135 + 16))(ObjectType, v135);
              swift_unknownObjectRelease();
            }
          }
          *(void *)(a3 + 216) = 0;
          swift_unknownObjectWeakAssign();
          *(unsigned char *)(a3 + 297) = 0;
          int64x2_t v137 = *(os_unfair_lock_s **)(a3 + 16);
          __int16 v138 = (__int16 *)&v137[4];
          double v139 = v137 + 5;
          os_unfair_lock_lock(v137 + 5);
          sub_1858B961C(v138);
          os_unfair_lock_unlock(v139);
        }
        return;
      }
LABEL_121:
      swift_bridgeObjectRetain();
      uint64_t v133 = sub_186A1F67C();
      swift_bridgeObjectRelease();
      unint64_t v19 = a3 + 297;
      if (v133) {
        goto LABEL_110;
      }
      goto LABEL_108;
    }
  }
  else
  {
    a1 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!a1) {
      goto LABEL_105;
    }
  }
  if (a1 < 1) {
    goto LABEL_131;
  }
  unint64_t v13 = 0;
  uint64_t v20 = (uint64_t *)(a3 + 136);
  uint64_t v21 = (uint64_t *)(a3 + 144);
  uint64_t v150 = (uint64_t *)(a3 + 152);
  uint64_t v6 = a3 + 160;
  unint64_t v22 = a2 & 0xC000000000000001;
  unint64_t v149 = a3;
  unint64_t v151 = a2;
  uint64_t v148 = a1;
  unint64_t v152 = a2 & 0xC000000000000001;
  float64x2_t v153 = (uint64_t *)(a3 + 136);
  while (1)
  {
    if (v22)
    {
      uint64_t v23 = MEMORY[0x18C102240](v13, a2);
    }
    else
    {
      uint64_t v23 = *(void *)(a2 + 8 * v13 + 32);
      swift_retain();
    }
    float v24 = *(float *)(v23 + 16);
    float v25 = *(float *)(v23 + 20);
    if ((sub_186A1EEFC() & 1) == 0) {
      break;
    }
    swift_release();
LABEL_13:
    if (a1 == ++v13) {
      goto LABEL_105;
    }
  }
  swift_beginAccess();
  uint64_t v26 = *v20;
  if (*(void *)(*v20 + 16))
  {
    unint64_t v27 = sub_1854A203C(v24);
    if (v28)
    {
      uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
      if (v29 >= 2)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        float64x2_t v160 = (void *)*v20;
        uint64_t v31 = v160;
        *uint64_t v20 = 0x8000000000000000;
        unint64_t v19 = sub_1854A203C(v24);
        uint64_t v33 = v31[2];
        BOOL v34 = (v32 & 1) == 0;
        uint64_t v35 = v33 + v34;
        if (__OFADD__(v33, v34))
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
          goto LABEL_126;
        }
        a3 = v32;
        if (v31[3] < v35)
        {
          sub_1854A3BD4(v35, isUniquelyReferenced_nonNull_native);
          uint64_t v31 = v160;
          unint64_t v36 = sub_1854A203C(v24);
          if ((a3 & 1) != (v37 & 1)) {
            goto LABEL_138;
          }
          unint64_t v19 = v36;
          uint64_t v38 = v29 - 1;
          if ((a3 & 1) == 0) {
            goto LABEL_25;
          }
LABEL_33:
          *(void *)(v31[7] + 8 * v19) = v38;
          a2 = v151;
LABEL_34:
          *float64x2_t v153 = (uint64_t)v31;
          swift_bridgeObjectRelease();
          a3 = v149;
          goto LABEL_35;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v38 = v29 - 1;
          if (v32) {
            goto LABEL_33;
          }
        }
        else
        {
          sub_1859BCA34();
          uint64_t v31 = v160;
          uint64_t v38 = v29 - 1;
          if (a3) {
            goto LABEL_33;
          }
        }
LABEL_25:
        v31[(v19 >> 6) + 8] |= 1 << v19;
        *(float *)(v31[6] + 4 * v19) = v24;
        *(void *)(v31[7] + 8 * v19) = v38;
        uint64_t v39 = v31[2];
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        a2 = v151;
        if (v40) {
          goto LABEL_128;
        }
        v31[2] = v41;
        goto LABEL_34;
      }
      unint64_t v42 = sub_1854A203C(v24);
      a2 = v151;
      if (v43)
      {
        unint64_t v44 = v42;
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v46 = *v20;
        float64x2_t v160 = (void *)*v20;
        *uint64_t v20 = 0x8000000000000000;
        if ((v45 & 1) == 0)
        {
          sub_1859BCA34();
          uint64_t v46 = (uint64_t)v160;
        }
        sub_1854A3894(v44, v46);
        *uint64_t v20 = v46;
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_35:
  swift_endAccess();
  swift_beginAccess();
  uint64_t v47 = *v21;
  if (*(void *)(*v21 + 16))
  {
    unint64_t v48 = sub_1854A203C(v25);
    if (v49)
    {
      uint64_t v50 = *(void *)(*(void *)(v47 + 56) + 8 * v48);
      if (v50 >= 2)
      {
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        float64x2_t v160 = (void *)*v21;
        long long v52 = v160;
        *uint64_t v21 = 0x8000000000000000;
        unint64_t v19 = sub_1854A203C(v25);
        uint64_t v54 = v52[2];
        BOOL v55 = (v53 & 1) == 0;
        uint64_t v56 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_124;
        }
        a3 = v53;
        if (v52[3] < v56)
        {
          sub_1854A3BD4(v56, v51);
          long long v52 = v160;
          unint64_t v57 = sub_1854A203C(v25);
          if ((a3 & 1) != (v58 & 1)) {
            goto LABEL_138;
          }
          unint64_t v19 = v57;
          uint64_t v59 = v50 - 1;
          if ((a3 & 1) == 0) {
            goto LABEL_42;
          }
LABEL_50:
          *(void *)(v52[7] + 8 * v19) = v59;
          a2 = v151;
LABEL_51:
          *uint64_t v21 = (uint64_t)v52;
          swift_bridgeObjectRelease();
          a3 = v149;
          goto LABEL_52;
        }
        if (v51)
        {
          uint64_t v59 = v50 - 1;
          if (v53) {
            goto LABEL_50;
          }
        }
        else
        {
          sub_1859BCA34();
          long long v52 = v160;
          uint64_t v59 = v50 - 1;
          if (a3) {
            goto LABEL_50;
          }
        }
LABEL_42:
        v52[(v19 >> 6) + 8] |= 1 << v19;
        *(float *)(v52[6] + 4 * v19) = v25;
        *(void *)(v52[7] + 8 * v19) = v59;
        uint64_t v60 = v52[2];
        BOOL v40 = __OFADD__(v60, 1);
        uint64_t v61 = v60 + 1;
        a2 = v151;
        if (v40) {
          goto LABEL_129;
        }
        v52[2] = v61;
        goto LABEL_51;
      }
      unint64_t v62 = sub_1854A203C(v25);
      a2 = v151;
      if (v63)
      {
        unint64_t v64 = v62;
        char v65 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v66 = *v21;
        float64x2_t v160 = (void *)*v21;
        *uint64_t v21 = 0x8000000000000000;
        if ((v65 & 1) == 0)
        {
          sub_1859BCA34();
          uint64_t v66 = (uint64_t)v160;
        }
        sub_1854A3894(v64, v66);
        *uint64_t v21 = v66;
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_52:
  swift_endAccess();
  uint64_t v67 = sub_186A1EF1C();
  if ((v67 & 0x100000000) != 0)
  {
LABEL_73:
    unint64_t v19 = *(unsigned int *)(v23 + 28);
    swift_beginAccess();
    uint64_t v92 = *(void *)v6;
    if (*(void *)(*(void *)v6 + 16))
    {
      unint64_t v93 = sub_1854A2088(v19);
      if (v94)
      {
        uint64_t v95 = *(void *)(*(void *)(v92 + 56) + 8 * v93);
        if (v95 < 2)
        {
          unint64_t v105 = sub_1854A2088(v19);
          a1 = v148;
          if (v106)
          {
            unint64_t v107 = v105;
            char v108 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v109 = *(void *)v6;
            float64x2_t v160 = *(void **)v6;
            *(void *)uint64_t v6 = 0x8000000000000000;
            if ((v108 & 1) == 0)
            {
              sub_1859BCBC8();
              uint64_t v109 = (uint64_t)v160;
            }
            sub_1854A3A38(v107, v109);
            *(void *)uint64_t v6 = v109;
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          char v96 = swift_isUniquelyReferenced_nonNull_native();
          float64x2_t v160 = *(void **)v6;
          uint64_t v97 = v160;
          *(void *)uint64_t v6 = 0x8000000000000000;
          a3 = sub_1854A2088(v19);
          uint64_t v99 = v97[2];
          BOOL v100 = (v98 & 1) == 0;
          uint64_t v101 = v99 + v100;
          if (__OFADD__(v99, v100)) {
            goto LABEL_125;
          }
          char v102 = v98;
          if (v97[3] >= v101)
          {
            if ((v96 & 1) == 0)
            {
              sub_1859BCBC8();
              uint64_t v97 = v160;
            }
          }
          else
          {
            sub_1858B34A8(v101, v96);
            uint64_t v97 = v160;
            unint64_t v103 = sub_1854A2088(v19);
            if ((v102 & 1) != (v104 & 1)) {
              goto LABEL_139;
            }
            a3 = v103;
          }
          a2 = v151;
          uint64_t v110 = v95 - 1;
          if (v102)
          {
            *(void *)(v97[7] + 8 * a3) = v110;
            a1 = v148;
          }
          else
          {
            v97[(a3 >> 6) + 8] |= 1 << a3;
            *(_DWORD *)(v97[6] + 4 * a3) = v19;
            *(void *)(v97[7] + 8 * a3) = v110;
            uint64_t v111 = v97[2];
            BOOL v40 = __OFADD__(v111, 1);
            uint64_t v112 = v111 + 1;
            a1 = v148;
            if (v40) {
              goto LABEL_130;
            }
            v97[2] = v112;
          }
          *(void *)uint64_t v6 = v97;
          swift_bridgeObjectRelease();
          a3 = v149;
        }
      }
    }
    swift_endAccess();
    if (*(unsigned char *)(v23 + 32))
    {
      swift_release();
      uint64_t v20 = v153;
LABEL_100:
      *(_WORD *)(a3 + 368) = 0;
      unint64_t v22 = v152;
      goto LABEL_13;
    }
    uint64_t v113 = sub_186A1EF1C();
    uint64_t v114 = sub_186A1EF1C();
    swift_release();
    uint64_t v20 = v153;
    if ((v113 & 0x100000000) != 0)
    {
      if ((v114 & 0x100000000) != 0) {
        goto LABEL_100;
      }
    }
    else if ((v114 & 0x100000000) == 0 && *(float *)&v113 == *(float *)&v114)
    {
      goto LABEL_100;
    }
    uint64_t v115 = *(void *)(a3 + 168);
    BOOL v40 = __OFSUB__(v115, 1);
    uint64_t v116 = v115 - 1;
    if (v40)
    {
      __break(1u);
      goto LABEL_118;
    }
    *(void *)(a3 + 168) = v116;
    goto LABEL_100;
  }
  unint64_t v19 = v67;
  float32x4_t v68 = v150;
  swift_beginAccess();
  uint64_t v69 = *v68;
  if (!*(void *)(*v68 + 16)) {
    goto LABEL_72;
  }
  unint64_t v70 = sub_1854A203C(*(float *)&v19);
  if ((v71 & 1) == 0) {
    goto LABEL_72;
  }
  uint64_t v72 = *(void *)(*(void *)(v69 + 56) + 8 * v70);
  if (v72 < 2)
  {
    unint64_t v83 = sub_1854A203C(*(float *)&v19);
    a1 = v148;
    if (v84)
    {
      unint64_t v85 = v83;
      float32x4_t v86 = v150;
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = *v86;
      float64x2_t v160 = (void *)*v86;
      *float32x4_t v86 = 0x8000000000000000;
      if ((v87 & 1) == 0)
      {
        sub_1859BCA34();
        uint64_t v88 = (uint64_t)v160;
      }
      sub_1854A3894(v85, v88);
      *float32x4_t v86 = v88;
      goto LABEL_71;
    }
LABEL_72:
    swift_endAccess();
    goto LABEL_73;
  }
  double v73 = v150;
  char v74 = swift_isUniquelyReferenced_nonNull_native();
  float64x2_t v160 = (void *)*v73;
  float32x4_t v75 = v160;
  *double v73 = 0x8000000000000000;
  a3 = sub_1854A203C(*(float *)&v19);
  uint64_t v77 = v75[2];
  BOOL v78 = (v76 & 1) == 0;
  uint64_t v79 = v77 + v78;
  if (__OFADD__(v77, v78)) {
    goto LABEL_127;
  }
  char v80 = v76;
  if (v75[3] >= v79)
  {
    if ((v74 & 1) == 0)
    {
      sub_1859BCA34();
      float32x4_t v75 = v160;
    }
  }
  else
  {
    sub_1854A3BD4(v79, v74);
    float32x4_t v75 = v160;
    unint64_t v81 = sub_1854A203C(*(float *)&v19);
    if ((v80 & 1) != (v82 & 1)) {
      goto LABEL_138;
    }
    a3 = v81;
  }
  a2 = v151;
  uint64_t v89 = v72 - 1;
  if (v80)
  {
    *(void *)(v75[7] + 8 * a3) = v89;
    a3 = v149;
    a1 = v148;
LABEL_70:
    *uint64_t v150 = (uint64_t)v75;
LABEL_71:
    swift_bridgeObjectRelease();
    goto LABEL_72;
  }
  v75[(a3 >> 6) + 8] |= 1 << a3;
  *(_DWORD *)(v75[6] + 4 * a3) = v19;
  *(void *)(v75[7] + 8 * a3) = v89;
  uint64_t v90 = v75[2];
  BOOL v40 = __OFADD__(v90, 1);
  uint64_t v91 = v90 + 1;
  a1 = v148;
  if (!v40)
  {
    v75[2] = v91;
    a3 = v149;
    goto LABEL_70;
  }
  __break(1u);
LABEL_138:
  sub_186A1F93C();
  __break(1u);
LABEL_139:
  sub_186A1F93C();
  __break(1u);
}

unint64_t sub_1854A1FA4(uint64_t a1, float a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(float *)(v6 + 4 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(float *)(v6 + 4 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1854A203C(float a1)
{
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0) {
    uint64_t v3 = LODWORD(a1);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = MEMORY[0x18C102800](*(void *)(v1 + 40), v3, 4);
  return sub_1854A1FA4(v4, a1);
}

unint64_t sub_1854A2088(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x18C102800](*(void *)(v1 + 40), a1, 4);
  return sub_1854A20D0(a1, v3);
}

unint64_t sub_1854A20D0(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1854A216C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_186A1F67C();
  swift_bridgeObjectRelease();
  if (v21 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v9;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x18C102250](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v6(0);
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_186A1F67C();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_186A1F6DC();
          __break(1u);
          return result;
        }
        uint64_t v17 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16) {
          memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
        }
        if (!(v7 >> 62))
        {
          uint64_t v18 = *(void *)(v13 + 16);
          uint64_t v19 = v18 + v8;
          if (!__OFADD__(v18, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_186A1F67C();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v8;
        if (!__OFADD__(v23, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v3;
      if (!__OFSUB__(v15, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_186A1EB5C();
}

uint64_t type metadata accessor for InProcessAnimationManager.TickEntry()
{
  return self;
}

uint64_t sub_1854A2478(uint64_t a1, uint64_t a2)
{
  return sub_1854A216C(a1, a2, (void (*)(void))type metadata accessor for InProcessAnimationManager.TickEntry);
}

uint64_t sub_1854A2490(unint64_t *a1, unint64_t a2)
{
  unint64_t v4 = *a1;
  if (*a1 >> 62) {
    goto LABEL_88;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    unint64_t v6 = 0;
    unint64_t v7 = a2 & 0xC000000000000001;
    unint64_t v36 = a2 + 32;
    unint64_t v35 = a2 >> 62;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x18C102240](v6, v4);
        if (!v35) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 32 + 8 * v6);
        swift_retain();
        if (!v35)
        {
LABEL_6:
          uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          if (v9) {
            break;
          }
          goto LABEL_19;
        }
      }
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_186A1F67C();
      if (v9) {
        break;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      swift_release_n();
      BOOL v12 = __OFADD__(v6++, 1);
      if (v12) {
        goto LABEL_87;
      }
      if (v6 == v5) {
        goto LABEL_21;
      }
    }
    uint64_t v10 = 0;
    while (v7)
    {
      uint64_t v11 = MEMORY[0x18C102240](v10, a2);
      BOOL v12 = __OFADD__(v10++, 1);
      if (v12)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_186A1F67C();
        if (!v5) {
          goto LABEL_21;
        }
        goto LABEL_3;
      }
      uint64_t v13 = v11;
      swift_unknownObjectRelease();
      if (v8 == v13) {
        goto LABEL_24;
      }
LABEL_11:
      if (v10 == v9) {
        goto LABEL_19;
      }
    }
    if (__OFADD__(v10, 1)) {
      goto LABEL_79;
    }
    uint64_t v14 = *(void *)(v36 + 8 * v10++);
    if (v8 != v14) {
      goto LABEL_11;
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v4 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      unint64_t v15 = v6;
      while (1)
      {
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_186A1F67C();
          swift_bridgeObjectRelease();
          if (v4 == v20) {
            return v15;
          }
        }
        else if (v4 == *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          return v15;
        }
        unint64_t v17 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v18 = MEMORY[0x18C102240](v4);
          if (v35) {
            goto LABEL_40;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_76;
          }
          if (v4 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_77;
          }
          uint64_t v18 = *(void *)(v17 + 8 * v4 + 32);
          swift_retain();
          if (v35)
          {
LABEL_40:
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v19 = sub_186A1F67C();
            if (!v19) {
              goto LABEL_52;
            }
            goto LABEL_41;
          }
        }
        uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v19)
        {
LABEL_41:
          uint64_t v21 = 0;
          while (v7)
          {
            uint64_t v22 = MEMORY[0x18C102240](v21, a2);
            BOOL v12 = __OFADD__(v21++, 1);
            if (v12)
            {
              __break(1u);
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
            uint64_t v23 = v22;
            swift_unknownObjectRelease();
            if (v18 == v23) {
              goto LABEL_49;
            }
LABEL_42:
            if (v21 == v19) {
              goto LABEL_52;
            }
          }
          if (__OFADD__(v21, 1)) {
            goto LABEL_74;
          }
          uint64_t v24 = *(void *)(v36 + 8 * v21++);
          if (v18 != v24) {
            goto LABEL_42;
          }
LABEL_49:
          swift_release_n();
          swift_bridgeObjectRelease();
          BOOL v12 = __OFADD__(v4++, 1);
          if (v12) {
            goto LABEL_78;
          }
        }
        else
        {
LABEL_52:
          swift_bridgeObjectRelease();
          swift_release_n();
          if (v15 != v4)
          {
            unint64_t v25 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              uint64_t v26 = MEMORY[0x18C102240](v15, *a1);
              unint64_t v25 = *a1;
              if ((*a1 & 0xC000000000000001) == 0) {
                goto LABEL_57;
              }
            }
            else
            {
              if ((v15 & 0x8000000000000000) != 0) {
                goto LABEL_81;
              }
              if (v15 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_82;
              }
              uint64_t v26 = *(void *)(v25 + 8 * v15 + 32);
              swift_retain();
              if ((v25 & 0xC000000000000001) == 0)
              {
LABEL_57:
                if ((v4 & 0x8000000000000000) != 0) {
                  goto LABEL_83;
                }
                if (v4 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_84;
                }
                unint64_t v27 = v15;
                uint64_t v28 = *(void *)(v25 + 8 * v4 + 32);
                swift_retain();
                goto LABEL_60;
              }
            }
            unint64_t v27 = v15;
            uint64_t v28 = MEMORY[0x18C102240](v4, v25);
            unint64_t v25 = *a1;
LABEL_60:
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v25;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v25 & 0x8000000000000000) != 0
              || (v25 & 0x4000000000000000) != 0)
            {
              sub_185AFA260(v25);
              unint64_t v25 = v30;
              *a1 = v30;
            }
            *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v27 + 0x20) = v28;
            swift_release();
            sub_186A1EB5C();
            unint64_t v31 = *a1;
            int v32 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v31;
            if (!v32 || (v31 & 0x8000000000000000) != 0 || (v31 & 0x4000000000000000) != 0)
            {
              sub_185AFA260(v31);
              unint64_t v31 = v33;
              *a1 = v33;
            }
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_85;
            }
            if (v4 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_86;
            }
            *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v26;
            swift_release();
            sub_186A1EB5C();
            unint64_t v15 = v27;
          }
          BOOL v12 = __OFADD__(v15++, 1);
          if (v12) {
            goto LABEL_80;
          }
          BOOL v12 = __OFADD__(v4++, 1);
          if (v12) {
            goto LABEL_78;
          }
        }
      }
    }
    __break(1u);
    goto LABEL_91;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (*a1 >> 62)
  {
LABEL_91:
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_186A1F67C();
    swift_bridgeObjectRelease();
    return v34;
  }
  return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
}

uint64_t sub_1854A29D4(uint64_t a1)
{
  uint64_t v2 = sub_186A1E6CC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_186A1E6FC();
  uint64_t v6 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1853B985C(0, (unint64_t *)&qword_1EB256300);
  uint64_t v9 = (void *)sub_186A1EF9C();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  aBlock[4] = sub_1856A99D0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1856A95EC;
  aBlock[3] = &block_descriptor_218;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  sub_186A1E6DC();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1854A2CAC((unint64_t *)&qword_1E8FB0138, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB0140);
  sub_1854B2C88((unint64_t *)&qword_1E8FB0148, &qword_1E8FB0140);
  sub_186A1F21C();
  MEMORY[0x18C101DF0](0, v8, v5, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v14);
}

uint64_t sub_1854A2CAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

float sub_1854A2CF4()
{
  if ((*(unsigned char *)(v0 + 368) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + 168) < 1)
    {
      swift_beginAccess();
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_1854A2F14(v8, 0.0);
      float v10 = v9;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(float *)(v0 + 64) = fminf(v10, 48.0);
      swift_beginAccess();
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1854A2F14(v11, 0.0);
      int v13 = v12;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_DWORD *)(v0 + 68) = v13;
    }
    else
    {
      swift_beginAccess();
      uint64_t v1 = swift_bridgeObjectRetain();
      sub_1854A2F14(v1, 0.0);
      int v3 = v2;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_DWORD *)(v0 + 64) = v3;
      swift_beginAccess();
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1854A2F14(v4, 0.0);
      int v6 = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v0 + 68) = v6;
      swift_beginAccess();
      uint64_t v7 = swift_bridgeObjectRetain();
      sub_1854A2F14(v7, 0.0);
      swift_bridgeObjectRelease();
      swift_beginAccess();
    }
    sub_186A1EF2C();
    swift_endAccess();
    *(unsigned char *)(v0 + 368) = 1;
  }
  swift_beginAccess();
  return *(float *)(v0 + 64);
}

uint64_t sub_1854A2F14(uint64_t result, float a2)
{
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(result + 48);
    if (a2 <= *(float *)(v10 + 4 * v9)) {
      a2 = *(float *)(v10 + 4 * v9);
    }
  }
  int64_t v11 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v11);
  ++v2;
  if (v12) {
    goto LABEL_25;
  }
  int64_t v2 = v11 + 1;
  if (v11 + 1 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v2);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v2 = v11 + 2;
  if (v11 + 2 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v2);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v2 = v11 + 3;
  if (v11 + 3 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v2);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v2 = v11 + 4;
  if (v11 + 4 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v2);
  if (v12)
  {
LABEL_25:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v9 = __clz(__rbit64(v12)) + (v2 << 6);
    goto LABEL_5;
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v7) {
    return result;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v7) {
      return result;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1854A303C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v14 = MEMORY[0x1E4FBC870];
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v7) {
      goto LABEL_19;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_19;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_1854A3178(&v13, *(unsigned int *)(*(void *)(v1 + 48) + 4 * v9));
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v7)
  {
LABEL_19:
    swift_release();
    return v14;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_19;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1854A3178(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x18C102800](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1854A327C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1854A327C(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1854A360C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1859C81CC();
      goto LABEL_14;
    }
    sub_1854A33A4();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x18C102800](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_186A1F92C();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1854A33A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFCB8);
  uint64_t result = sub_186A1F32C();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t result = MEMORY[0x18C102800](*(void *)(v4 + 40), v18, 4);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1854A360C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFCB8);
  uint64_t result = sub_186A1F32C();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    unint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x18C102800](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1854A3894(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_186A1F22C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        int64_t v10 = (_DWORD *)(v9 + 4 * v6);
        if ((*v10 & 0x7FFFFFFF) != 0) {
          uint64_t v11 = *v10;
        }
        else {
          uint64_t v11 = 0;
        }
        uint64_t result = MEMORY[0x18C102800](*(void *)(a2 + 40), v11, 4);
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_19:
            int64_t v15 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v15 >= v10 + 1) {
              *int64_t v15 = *v10;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            int64_t v17 = (void *)(v16 + 8 * v3);
            unsigned int v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 1))
            {
              *int64_t v17 = *v18;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_19;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1854A3A38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_186A1F22C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        int64_t v10 = (_DWORD *)(v9 + 4 * v6);
        uint64_t result = MEMORY[0x18C102800](*(void *)(a2 + 40), *v10, 4);
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unsigned int v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unsigned int v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unsigned int v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1854A3BD4(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFCA8);
  uint64_t result = sub_186A1F6AC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    unint64_t v33 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int64_t v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v31;
              }
              int64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      unsigned int v21 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      if ((v21 & 0x7FFFFFFF) != 0) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 0;
      }
      uint64_t result = MEMORY[0x18C102800](*(void *)(v7 + 40), v23, 4);
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *int64_t v3 = v7;
  return result;
}

void sub_1854A3E7C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (char *)(a5 + 16);
  signpost_c2_removePresentationModifier_end(a1, a2);
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(a1 + 16) + 16);
  os_unfair_lock_lock(v10);
  signpost_c2_removePresentationModifier_end(v11, v12);
  swift_beginAccess();
  sub_1853B7020(a1 + 24, (uint64_t)v13, &qword_1E8FAFDE0);
  sub_1854A3F4C((uint64_t)v13, a1, a2, a3, a4, v9);
  sub_1853B93B8((uint64_t)v13, &qword_1E8FAFDE0);
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1854A3F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char *a6)
{
  if ((*(unsigned char *)(a2 + 1000) & 1) == 0)
  {
    uint64_t v9 = a3();
    MEMORY[0x1F4188790](v9);
    uint64_t v11 = v10 + 4;
    uint64_t v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_1854AEC5C(v11);
    os_unfair_lock_unlock(v12);
    swift_beginAccess();
    int64_t v13 = *(void (**)(BOOL))(a2 + 984);
    if (v13)
    {
      char v14 = *a6;
      *(void *)(a2 + 984) = 0;
      *(void *)(a2 + 992) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v13);
      v13((v14 & 1) == 0);
      sub_1854AFD40((uint64_t)v13);
    }
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1854A85B0((uint64_t)sub_1853C4AF8, a5);
  return swift_release();
}

uint64_t UIMutableTraits.horizontalSizeClass.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256770, type metadata accessor for UIUserInterfaceSizeClass);
  return v5(&v8, &type metadata for UITraitHorizontalSizeClass, &type metadata for UITraitHorizontalSizeClass, &protocol witness table for UITraitHorizontalSizeClass, v6, a2, a3);
}

uint64_t UIMutableTraits.displayGamut.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256728, type metadata accessor for UIDisplayGamut);
  return v5(&v8, &type metadata for UITraitDisplayGamut, &type metadata for UITraitDisplayGamut, &protocol witness table for UITraitDisplayGamut, v6, a2, a3);
}

uint64_t UIMutableTraits.verticalSizeClass.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256770, type metadata accessor for UIUserInterfaceSizeClass);
  return v5(&v8, &type metadata for UITraitVerticalSizeClass, &type metadata for UITraitVerticalSizeClass, &protocol witness table for UITraitVerticalSizeClass, v6, a2, a3);
}

uint64_t UIMutableTraits.userInterfaceStyle.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256740, type metadata accessor for UIUserInterfaceStyle);
  return v5(&v8, &type metadata for UITraitUserInterfaceStyle, &type metadata for UITraitUserInterfaceStyle, &protocol witness table for UITraitUserInterfaceStyle, v6, a2, a3);
}

uint64_t UIMutableTraits.activeAppearance.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  uint64_t v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  uint64_t v6 = sub_1854A7054(&qword_1EB256558, type metadata accessor for UIUserInterfaceActiveAppearance);
  return v5(&v8, &type metadata for UITraitActiveAppearance, &type metadata for UITraitActiveAppearance, &protocol witness table for UITraitActiveAppearance, v6, a2, a3);
}

uint64_t sub_1854A4418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  a8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v10(a1, AssociatedTypeWitness);
}

uint64_t sub_1854A44AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  sub_186A1EAEC();
  objc_msgSend(*v5, sel__setNSIntegerValue_forTraitToken_, v10, sub_1854AF3F4(a3, a4, a5, (uint64_t)&unk_1ED0D8260, (uint64_t (*)(uint64_t))sub_1854C9934));
  return swift_unknownObjectRelease();
}

void sub_1854A4588(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1854A4594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1854A4418(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1854A44AC);
}

uint64_t sub_1854A45AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  swift_getAssociatedTypeWitness();
  sub_186A1EAEC();
  sub_1853B76BC((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  swift_dynamicCast();
  sub_1853B8150((uint64_t)v13, (uint64_t)v12, &qword_1EB256B10);
  uint64_t v9 = v12[3];
  sub_1853B93B8((uint64_t)v12, &qword_1EB256B10);
  if (v9) {
    uint64_t v10 = sub_186A1F83C();
  }
  else {
    uint64_t v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  objc_msgSend(*v5, sel__setObject_forTraitToken_, v10, sub_1854AF3F4(a3, a4, a5, (uint64_t)&unk_1ED0D82D8, (uint64_t (*)(uint64_t))sub_1858DC6F8));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1854A4768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_186A1E95C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1854A4794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  sub_186A1EAEC();
  uint64_t v8 = (void *)sub_1855741B8();
  swift_unknownObjectRetain();
  objc_msgSend(v8, sel__setNSIntegerValue_forTraitToken_, v10, sub_1854AF3F4(a3, a4, a5, (uint64_t)&unk_1ED0D8260, (uint64_t (*)(uint64_t))sub_1854C9934));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t UITraitCollection.changedTraits(from:)(uint64_t a1)
{
  id v2 = objc_msgSend(v1, sel__changedTraitTokensArrayFromTraitCollection_, a1);
  sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
  unint64_t v3 = sub_186A1EB3C();

  uint64_t v4 = sub_1854A5468(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1854A49F8()
{
  return sub_1854A4ECC((uint64_t)&type metadata for UITraitBacklightLuminance, (uint64_t)&protocol witness table for UITraitBacklightLuminance, &unk_1ED3F5CA0);
}

uint64_t sub_1854A4ECC(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1EB2569F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = off_1EB2569E8;
  off_1EB2569E8 = (_UNKNOWN *)0x8000000000000000;
  sub_1854A5050((uint64_t)a3, a1, isUniquelyReferenced_nonNull_native, &v9);
  off_1EB2569E8 = v9;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_1EB256A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_unknownObjectRetain();
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = off_1EB2569F8;
  off_1EB2569F8 = (_UNKNOWN *)0x8000000000000000;
  sub_1854A56F4(a1, a2, a3, v7);
  off_1EB2569F8 = v9;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1854A5050(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = (void *)*a4;
  unint64_t v10 = sub_1854AF998(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1859BC884();
LABEL_7:
    unint64_t v16 = (void *)*a4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      float64x2_t v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1854A518C(result, a3 & 1);
  uint64_t result = sub_1854AF998(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*a4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

uint64_t sub_1854A518C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256A20);
  uint64_t result = sub_186A1F6AC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v32 = -1 << v30;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      sub_186A1F9EC();
      sub_186A1F9FC();
      uint64_t result = sub_186A1FA4C();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_1854A5468(unint64_t a1)
{
  if (qword_1EB2569D0 != -1) {
    swift_once();
  }
  if (qword_1EB256A10 != -1) {
    swift_once();
  }
  id v2 = (os_unfair_lock_t *)off_1EB256A08;
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1EB256A08 + 2));
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_186A1F67C();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_7;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_28:
    os_unfair_lock_unlock(v2[2]);
    return (uint64_t)v6;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_27;
  }
LABEL_7:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x18C102240](v5, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v8 = qword_1EB256A00;
      id v9 = v7;
      if (v8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = off_1EB2569F8;
      if (*((void *)off_1EB2569F8 + 2))
      {
        id v9 = v9;
        unint64_t v11 = sub_1854A5824(v9);
        if (v12)
        {
          long long v15 = *(_OWORD *)(v10[7] + 16 * v11);
          swift_endAccess();

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1854A5988(0, v6[2] + 1, 1, v6);
          }
          unint64_t v14 = v6[2];
          unint64_t v13 = v6[3];
          if (v14 >= v13 >> 1) {
            uint64_t v6 = sub_1854A5988((void *)(v13 > 1), v14 + 1, 1, v6);
          }
          mach_msg_header_t v6[2] = v14 + 1;
          *(_OWORD *)&v6[2 * v14 + 4] = v15;
          goto LABEL_11;
        }
        swift_endAccess();
      }
      else
      {
        swift_endAccess();
      }

LABEL_11:
      if (v3 == ++v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1854A56F4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1854A5824(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      *unint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1859BC6DC();
    goto LABEL_7;
  }
  sub_1854A5A98(result, a4 & 1);
  uint64_t result = sub_1854A5824(a3);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_186A1F93C();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1854A5940(v12, (uint64_t)a3, a1, a2, v18);
  return swift_unknownObjectRetain();
}

unint64_t sub_1854A5824(void *a1)
{
  sub_186A1F9EC();
  objc_msgSend(a1, sel_hash);
  sub_186A1F9FC();
  uint64_t v2 = sub_186A1FA4C();
  return sub_1854A589C((uint64_t)a1, v2);
}

unint64_t sub_1854A589C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      if (objc_msgSend(*(id *)(*(void *)(v2 + 48) + 8 * v4), sel_isEqual_, a1)) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1854A5940(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  void *v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void *sub_1854A5988(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFAC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1854A5D90(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1854A5A98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256A28);
  uint64_t v6 = sub_186A1F6AC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v31 = v2;
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v32 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v32 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v32 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    sub_186A1F9EC();
    objc_msgSend(v29, sel_hash);
    sub_186A1F9FC();
    uint64_t result = sub_186A1FA4C();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

char *sub_1854A5D90(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_186A1F6DC();
  __break(1u);
  return result;
}

uint64_t sub_1854A5E7C(uint64_t (*a1)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double, uint64_t, char, unint64_t, _DWORD, uint64_t, uint64_t))
{
  return sub_1854A5EEC(*(float *)(v1 + 192), *(float *)(v1 + 196), *(float *)(v1 + 200), *(void *)(v1 + 16), *(void *)(v1 + 24), (double *)(v1 + 32), (double *)(v1 + 64), v1 + 96, *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176), *(unsigned char *)(v1 + 184), *(_DWORD *)(v1 + 188), *(void *)(v1 + 208), *(void *)(v1 + 216), a1);
}

uint64_t sub_1854A5EEC(float a1, float a2, float a3, uint64_t a4, uint64_t a5, double *a6, double *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double, uint64_t, char, unint64_t, _DWORD, uint64_t, uint64_t))
{
  return a19(a5, *(unsigned __int8 *)(a5 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive), a8, a9, a10, a11, a12, a13, *a6, a6[1], a6[2], a6[3], *a7, a7[1], a7[2], a7[3], a14, a15, __PAIR64__(LODWORD(a2), LODWORD(a1)),
           LODWORD(a3),
           a17,
           a18);
}

uint64_t sub_1854A60C8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v12;
  v13[3] = a4;
  v13[4] = a5;
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  BOOL v27 = sub_1853B59D0;
  uint64_t v28 = (void *)v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  char v25 = sub_1853BE46C;
  unint64_t v26 = &block_descriptor_111;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  sub_1854B0A60(a4);
  swift_retain();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(unsigned char *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a6;
  *(void *)(v16 + 40) = a7;
  BOOL v27 = (uint64_t (*)())sub_1856A9630;
  uint64_t v28 = (void *)v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  char v25 = sub_1856A95EC;
  unint64_t v26 = &block_descriptor_117_0;
  unint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  BOOL v27 = sub_185441ACC;
  uint64_t v28 = v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v24 = 1107296256;
  char v25 = sub_18544192C;
  unint64_t v26 = &block_descriptor_120;
  unint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v15, 0, v17, 0.0, 0.0, v18);
  swift_release();
  _Block_release(v18);
  _Block_release(v17);
  _Block_release(v15);
  swift_release();
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1854A63A8()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_1854AFD40(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t UIMutableTraits.verticalSizeClass.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256770, type metadata accessor for UIUserInterfaceSizeClass);
  v4(&v7, &type metadata for UITraitVerticalSizeClass, &type metadata for UITraitVerticalSizeClass, &protocol witness table for UITraitVerticalSizeClass, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.displayGamut.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256728, type metadata accessor for UIDisplayGamut);
  v4(&v7, &type metadata for UITraitDisplayGamut, &type metadata for UITraitDisplayGamut, &protocol witness table for UITraitDisplayGamut, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.horizontalSizeClass.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256770, type metadata accessor for UIUserInterfaceSizeClass);
  v4(&v7, &type metadata for UITraitHorizontalSizeClass, &type metadata for UITraitHorizontalSizeClass, &protocol witness table for UITraitHorizontalSizeClass, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.layoutDirection.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256788, type metadata accessor for UITraitEnvironmentLayoutDirection);
  v4(&v7, &type metadata for UITraitLayoutDirection, &type metadata for UITraitLayoutDirection, &protocol witness table for UITraitLayoutDirection, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.preferredContentSizeCategory.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 296);
  uint64_t v5 = sub_1854A7054((unint64_t *)&unk_1EB256750, type metadata accessor for UIContentSizeCategory);
  v4(&v7, &type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v5, a1, a2);
  return v7;
}

uint64_t sub_1854A676C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v24 = a5;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_186A1F12C();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v21 - v15;
  id v17 = objc_msgSend(a1, sel__objectForTraitToken_, sub_1854AF3F4(a2, a3, a4, (uint64_t)&unk_1ED0D82D8, (uint64_t (*)(uint64_t))sub_1858DC6F8));
  swift_unknownObjectRelease();
  if (v17)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_1853B8150((uint64_t)v25, (uint64_t)v26, &qword_1EB256B10);
  sub_1853B7020((uint64_t)v26, (uint64_t)v25, &qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  int v18 = swift_dynamicCast();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v13, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, AssociatedTypeWitness);
    sub_1854A715C((uint64_t)v16, a2, a3, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  }
  else
  {
    v19(v13, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v23);
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  }
  return sub_1853B93B8((uint64_t)v26, &qword_1EB256B10);
}

uint64_t sub_1854A6A88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1854A676C(*v4, a1, a2, a3, a4);
}

uint64_t _sSo17UITraitCollectionC5UIKitE19typesettingLanguage10Foundation6LocaleV0E0VSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2564D8);
  MEMORY[0x1F4188790](v4 - 8);
  size_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB2569D0 != -1) {
    swift_once();
  }
  if (qword_1EB256A10 != -1) {
    swift_once();
  }
  uint64_t v7 = (os_unfair_lock_t *)off_1EB256A08;
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1EB256A08 + 2));
  id v8 = sub_1854AF038((uint64_t)&type metadata for UITraitTypesettingLanguage, (uint64_t (*)(uint64_t))sub_1858B691C);
  os_unfair_lock_unlock(v7[2]);
  id v9 = objc_msgSend(v2, sel__objectForTraitToken_, v8);
  swift_unknownObjectRelease();
  if (v9)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, 32);
  }
  sub_1853B8150((uint64_t)v21, (uint64_t)v22, &qword_1EB256B10);
  sub_1853B7020((uint64_t)v22, (uint64_t)v21, &qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB2564E0);
  if (swift_dynamicCast())
  {
    uint64_t v10 = v19;
    uint64_t v11 = v20;
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_186A1D73C();
      uint64_t v12 = sub_186A1D75C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    sub_1854A6E3C(v10, v11);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15) != 1)
    {
      sub_1853B93B8((uint64_t)v22, &qword_1EB256B10);
      return sub_1853B8150((uint64_t)v6, a1, (uint64_t *)&unk_1EB256638);
    }
    sub_1853B93B8((uint64_t)v6, &qword_1EB2564D8);
  }
  if (qword_1EB256688 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB256638);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EB256670);
  sub_1853B7020(v17, a1, (uint64_t *)&unk_1EB256638);
  return sub_1853B93B8((uint64_t)v22, &qword_1EB256B10);
}

uint64_t sub_1854A6E3C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t UIMutableTraits.userInterfaceStyle.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256740, type metadata accessor for UIUserInterfaceStyle);
  v4(&v7, &type metadata for UITraitUserInterfaceStyle, &type metadata for UITraitUserInterfaceStyle, &protocol witness table for UITraitUserInterfaceStyle, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.userInterfaceLevel.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB2566E8, type metadata accessor for UIUserInterfaceLevel);
  v4(&v7, &type metadata for UITraitUserInterfaceLevel, &type metadata for UITraitUserInterfaceLevel, &protocol witness table for UITraitUserInterfaceLevel, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits.accessibilityContrast.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  uint64_t v5 = sub_1854A7054(&qword_1EB256760, type metadata accessor for UIAccessibilityContrast);
  v4(&v7, &type metadata for UITraitAccessibilityContrast, &type metadata for UITraitAccessibilityContrast, &protocol witness table for UITraitAccessibilityContrast, v5, a1, a2);
  return v7;
}

uint64_t sub_1854A7054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1854A709C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  id v8 = objc_msgSend(a1, sel__valueForNSIntegerTraitToken_, sub_1854AF3F4(a2, a3, a4, (uint64_t)&unk_1ED0D8260, (uint64_t (*)(uint64_t))sub_1854C9934));
  swift_unknownObjectRelease();
  id v10 = v8;
  return sub_1854A715C((uint64_t)&v10, a2, a3, a5);
}

uint64_t sub_1854A715C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v18 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = sub_186A1F12C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_186A1EAFC();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19, v14, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(v18, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void *sub_1854A73BC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1854A73CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1854A709C(*v4, a1, a2, a3, a4);
}

uint64_t sub_1854A73E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_186A1E92C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1854A742C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

uint64_t sub_1854A77AC(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a6;
  v15[4] = a7;
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  swift_retain();
  sub_1854B0A60(a6);
  if (v16)
  {
    objc_msgSend(v16, sel_response);
    double v18 = v17;
  }
  else
  {
    double v18 = 0.0;
  }
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  char v34 = sub_1853B59D0;
  unint64_t v35 = (void *)v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1853BE46C;
  long long v33 = &block_descriptor_224;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v14;
  *(void *)(v21 + 24) = a1;
  *(unsigned char *)(v21 + 32) = a2 & 1;
  *(unsigned char *)(v21 + 33) = a3 & 1;
  *(void *)(v21 + 40) = a8;
  *(void *)(v21 + 48) = a9;
  char v34 = (uint64_t (*)())sub_1856A99BC;
  unint64_t v35 = (void *)v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1856A95EC;
  long long v33 = &block_descriptor_230;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  char v34 = sub_185441ACC;
  unint64_t v35 = v15;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_18544192C;
  long long v33 = &block_descriptor_233;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v20, 0, v22, v18, 0.0, v23);
  swift_release();
  _Block_release(v23);
  _Block_release(v22);
  _Block_release(v20);
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1854A7AF8(int a1, double a2)
{
  if ((uint64_t)v2[42] >= 1)
  {
    signpost_c2_tick_allocatedModifiers_start();
    id v5 = objc_msgSend(self, sel_groupWithCapacity_, v2[42]);
    objc_msgSend(v5, sel_setUpdatesAsynchronously_, (a1 & 1) == 0);
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakInit();
    sub_1854AB220(v6, (uint64_t)v5);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v7 = v2[16];
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v7 + 40;
      do
      {
        id v10 = *(void (**)(id *))(v9 - 8);
        v20[0] = v5;
        swift_retain();
        v10(v20);
        swift_release();
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    v2[42] = 0;
    v2[16] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    signpost_c2_tick_allocatedModifiers_end();
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(v2[43] + 16))
  {
    uint64_t v12 = signpost_c2_tick_flush_start();
    uint64_t v19 = v2 + 43;
    MEMORY[0x1F4188790](v12);
    sub_1853B985C(0, (unint64_t *)&unk_1E8FAFFB0);
    swift_getKeyPath();
    swift_retain();
    uint64_t v13 = swift_bridgeObjectRetain();
    unint64_t v14 = sub_1854A7E70(v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release_n();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_186A1F67C();
      uint64_t result = swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (id)MEMORY[0x18C102240](i, v14);
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          double v18 = v17;
          objc_msgSend(v17, sel_setUpdatesAsynchronously_, (a1 ^ 1) & 1, v19);
          if (a1) {
            objc_msgSend(v18, sel_flushWithTransactionAndTargetTime_, a2);
          }
          else {
            objc_msgSend(v18, sel_flush);
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return signpost_c2_tick_flush_end();
  }
  return result;
}

uint64_t sub_1854A7E08(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1854A7E34(void *a1)
{
  sub_1854A9394(a1, (uint64_t)(v1 + 3), (uint64_t)(v1 + 7), v1[11], v1[13], v1[14], v1[15]);
}

uint64_t sub_1854A7E70(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v13 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_22:
    sub_1853B7020(*(void *)(a1 + 56) + 8 * v9, (uint64_t)v16, &qword_1E8FAFFA0);
    sub_1853B8150((uint64_t)v16, (uint64_t)v15, &qword_1E8FAFFA0);
    swift_getAtKeyPath();
    uint64_t result = sub_1853B93B8((uint64_t)v15, &qword_1E8FAFFA0);
    if (v14)
    {
      MEMORY[0x18C101940](result);
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_186A1EB8C();
      }
      sub_186A1EBEC();
      uint64_t result = sub_186A1EB5C();
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v10 >= v5) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v13 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v5) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v13 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v5) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v13 + 8 * v7);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v5) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v13 + 8 * v7);
  if (v11)
  {
LABEL_21:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v5)
  {
LABEL_26:
    swift_release();
    return v17;
  }
  unint64_t v11 = *(void *)(v13 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v13 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1854A8098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char *a6)
{
  if ((*(unsigned char *)(a2 + 240) & 1) == 0)
  {
    uint64_t v9 = a3();
    MEMORY[0x1F4188790](v9);
    unint64_t v11 = v10 + 4;
    int64_t v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_1854AEC5C(v11);
    os_unfair_lock_unlock(v12);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(BOOL))(a2 + 224);
    if (v13)
    {
      char v14 = *a6;
      *(void *)(a2 + 224) = 0;
      *(void *)(a2 + 232) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v13);
      v13((v14 & 1) == 0);
      sub_1854AFD40((uint64_t)v13);
    }
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1854A85B0((uint64_t)sub_1853C3B34, a5);
  return swift_release();
}

uint64_t sub_1854A8208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char *a6)
{
  if ((*(unsigned char *)(a2 + 384) & 1) == 0)
  {
    uint64_t v9 = a3();
    MEMORY[0x1F4188790](v9);
    unint64_t v11 = v10 + 4;
    int64_t v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_1854AEC5C(v11);
    os_unfair_lock_unlock(v12);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(BOOL))(a2 + 368);
    if (v13)
    {
      char v14 = *a6;
      *(void *)(a2 + 368) = 0;
      *(void *)(a2 + 376) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v13);
      v13((v14 & 1) == 0);
      sub_1854AFD40((uint64_t)v13);
    }
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1854A85B0((uint64_t)sub_1853C385C, a5);
  return swift_release();
}

uint64_t sub_1854A8378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char *a6)
{
  if ((*(unsigned char *)(a2 + 288) & 1) == 0)
  {
    uint64_t v9 = a3();
    MEMORY[0x1F4188790](v9);
    unint64_t v11 = v10 + 4;
    int64_t v12 = v10 + 6;
    os_unfair_lock_lock(v10 + 6);
    sub_1854AEC5C(v11);
    os_unfair_lock_unlock(v12);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(BOOL))(a2 + 272);
    if (v13)
    {
      char v14 = *a6;
      *(void *)(a2 + 272) = 0;
      *(void *)(a2 + 280) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v13);
      v13((v14 & 1) == 0);
      sub_1854AFD40((uint64_t)v13);
    }
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1854A85B0((uint64_t)sub_1853C374C, a5);
  return swift_release();
}

uint64_t sub_1854A84EC(char a1)
{
  return sub_1854A84F4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1854A84F4(char a1, void *a2)
{
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 24) = a1 & 1;
  id v5 = a2;
  sub_1854A85B0((uint64_t)sub_1853C1204, v4);
  return swift_release();
}

uint64_t sub_1854A85B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  if (qword_1E8FB0110 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1E8FD58B8;
  int64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1853C0A08;
  *(void *)(v8 + 24) = v7;
  void v12[4] = sub_1853BE6D4;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1853BE46C;
  v12[3] = &block_descriptor_201_0;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1854A8768()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

void sub_1854A8798()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_186A1E92C();
  objc_msgSend(v1, sel___swift_stopSettingPresentationValueForKey_, v2);
}

uint64_t sub_1854A885C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t result = sub_1853B7BC0();
  if (result)
  {
    uint64_t v9 = (void *)result;
    signpost_c2_removePresentationModifier_end(result, v8);
    int64_t v10 = (os_unfair_lock_s *)(v9[2] + 16);
    os_unfair_lock_lock(v10);
    signpost_c2_removePresentationModifier_end(v11, v12);
    swift_beginAccess();
    uint64_t v13 = v9[7];
    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1853B7718(a1, a2);
      if (v15)
      {
        uint64_t v16 = *(void **)(*(void *)(v13 + 56) + 8 * v14);
        swift_endAccess();
        id v17 = v16;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        double v18 = (void *)sub_1854A8D54(a1, a2);
        swift_endAccess();
        swift_bridgeObjectRelease();

        if (sub_1854A8CA8())
        {
          uint64_t v19 = (void (*)(uint64_t))v9[4];
          if (v19)
          {
            v9[4] = 0;
            _OWORD v9[5] = 0;
            swift_retain();
            uint64_t v20 = sub_1854AFD40((uint64_t)v19);
            v19(v20);
            sub_1854AFD40((uint64_t)v19);
          }
        }
LABEL_10:
        swift_beginAccess();
        uint64_t v21 = (void *)v9[8];
        if (!v21[2])
        {
          swift_endAccess();
          goto LABEL_23;
        }
        swift_bridgeObjectRetain();
        unint64_t v22 = sub_1853B7718(a1, a2);
        if ((v23 & 1) == 0)
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        locuint64_t k = v10;
        unint64_t v24 = *(void *)(v21[7] + 8 * v22);
        swift_endAccess();
        swift_bridgeObjectRelease();
        if (qword_1E8FB0100 != -1) {
          swift_once();
        }
        char v25 = (void *)qword_1E8FD58B0;
        uint64_t v26 = *(void *)(qword_1E8FD58B0 + 336);
        BOOL v27 = __OFSUB__(v26, 1);
        uint64_t v28 = v26 - 1;
        if (v27)
        {
          __break(1u);
        }
        else
        {
          *(void *)(qword_1E8FD58B0 + 336) = v28;
          uint64_t v3 = v25 + 16;
          swift_beginAccess();
          uint64_t v21 = (void *)v25[16];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v25[16] = v21;
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v24 & 0x8000000000000000) == 0) {
              goto LABEL_17;
            }
            goto LABEL_33;
          }
        }
        uint64_t v21 = sub_185AFA238(v21);
        *uint64_t v3 = v21;
        if ((v24 & 0x8000000000000000) == 0)
        {
LABEL_17:
          if (v24 < v21[2])
          {
            uint64_t v30 = &v21[2 * v24];
            v30[4] = signpost_c2_removePresentationModifier_end;
            v30[5] = 0;
            swift_endAccess();
            swift_release();
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_1854A974C(a1, a2);
            swift_endAccess();
            swift_bridgeObjectRelease();
            int64_t v10 = lock;
            if (sub_1854A8CA8())
            {
              uint64_t v31 = (void (*)(uint64_t))v9[4];
              if (v31)
              {
                v9[4] = 0;
                _OWORD v9[5] = 0;
                swift_retain();
                uint64_t v32 = sub_1854AFD40((uint64_t)v31);
                v31(v32);
                sub_1854AFD40((uint64_t)v31);
              }
            }
LABEL_23:
            os_unfair_lock_unlock(v10);
            if (!v16) {
              return swift_release();
            }
            char v25 = v16;
            uint64_t v33 = pthread_main_np();
            if (v33 == 1)
            {
              signpost_c2_removePresentationModifier_end(v33, v34);
              id v35 = objc_msgSend(v4, sel_layer);
              objc_msgSend(v35, sel_removePresentationModifier_, v25);

              signpost_c2_removePresentationModifier_end(v36, v37);
              return swift_release();
            }
            if (qword_1E8FB0100 == -1)
            {
LABEL_28:
              uint64_t v38 = swift_allocObject();
              *(void *)(v38 + 16) = v9;
              *(void *)(v38 + 24) = v25;
              uint64_t v39 = v25;
              swift_retain();
              sub_1854A85B0((uint64_t)sub_1853C2A14, v38);

              swift_release();
              return swift_release();
            }
LABEL_35:
            swift_once();
            goto LABEL_28;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    uint64_t v16 = 0;
    goto LABEL_10;
  }
  return result;
}

BOOL sub_1854A8CA8()
{
  swift_beginAccess();
  if (*(void *)(v0[6] + 16)) {
    return 0;
  }
  swift_beginAccess();
  if (*(void *)(v0[8] + 16)) {
    return 0;
  }
  swift_beginAccess();
  if (*(void *)(v0[7] + 16)) {
    return 0;
  }
  swift_beginAccess();
  return *(void *)(v0[9] + 16) == 0;
}

uint64_t sub_1854A8D54(uint64_t a1, uint64_t a2)
{
  return sub_1854A8D80(a1, a2, (void (*)(unint64_t, uint64_t))sub_1854A8E68, (void (*)(void))sub_1859BD48C);
}

uint64_t sub_1854A8D80(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  int64_t v7 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1853B7718(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v7;
  uint64_t v16 = *v7;
  *int64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *int64_t v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1854A8E6C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 272);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    *(void *)(result + 272) = v3;
    if (!v3)
    {
      uint64_t v5 = *(os_unfair_lock_s **)(result + 32);
      uint64_t v6 = v5 + 4;
      int64_t v7 = v5 + 6;
      os_unfair_lock_lock(v5 + 6);
      sub_1854AEC24(v6, v11);
      os_unfair_lock_unlock(v7);
      uint64_t v8 = v11[0];
      uint64_t result = swift_release();
      if (!v8)
      {
        uint64_t result = swift_beginAccess();
        if ((*(unsigned char *)(v4 + 209) & 1) == 0)
        {
          uint64_t v9 = *(void (**)(uint64_t))(v4 + 288);
          uint64_t v10 = swift_retain();
          v9(v10);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1854A8F2C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 192);
  BOOL v2 = __OFSUB__(v1, 1);
  uint64_t v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    *(void *)(result + 192) = v3;
    if (!v3)
    {
      uint64_t v5 = *(os_unfair_lock_s **)(result + 32);
      uint64_t v6 = v5 + 4;
      int64_t v7 = v5 + 6;
      os_unfair_lock_lock(v5 + 6);
      sub_1854AEC24(v6, v11);
      os_unfair_lock_unlock(v7);
      uint64_t v8 = v11[0];
      uint64_t result = swift_release();
      if (!v8)
      {
        uint64_t result = swift_beginAccess();
        if ((*(unsigned char *)(v4 + 145) & 1) == 0)
        {
          uint64_t v9 = *(void (**)(uint64_t))(v4 + 208);
          uint64_t v10 = swift_retain();
          v9(v10);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1854A8FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = (os_unfair_lock_s *)(*(void *)(result + 16) + 16);
    os_unfair_lock_lock(v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1854A90C4(a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1854A966C();
    os_unfair_lock_unlock(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1854A90C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1853B7718(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1859BD118();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1854A91AC(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1854A91AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_186A1F22C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_186A1F9EC();
        swift_bridgeObjectRetain();
        sub_186A1E9BC();
        uint64_t v9 = sub_186A1FA4C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          char v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *char v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    id v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *id v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1854A9384()
{
  return sub_1854A8FEC(v0[2], v0[3], v0[4]);
}

void sub_1854A9394(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v8 = v7;
  sub_1853B76BC(a2, (uint64_t)v32);
  sub_1853B7020(a3, (uint64_t)v31, &qword_1EB256B10);
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a1)
  {
    id v15 = objc_msgSend(a1, sel_count);
    if (v15 == objc_msgSend(a1, sel_capacity)) {
      a1 = 0;
    }
    else {
      id v16 = a1;
    }
  }
  id v17 = objc_allocWithZone(MEMORY[0x1E4F39C48]);
  swift_bridgeObjectRetain();
  id v18 = sub_1854AA044(a5, a6, v32, v31, 0, a4, a1);
  signpost_c2_removePresentationModifier_end(v18, v19);
  uint64_t v20 = (os_unfair_lock_s *)(*(void *)(a7 + 16) + 16);
  os_unfair_lock_lock(v20);
  signpost_c2_removePresentationModifier_end(v21, v22);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  a1 = v18;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31[0] = *(void *)(a7 + 56);
  *(void *)(a7 + 56) = 0x8000000000000000;
  sub_1854A9A04((uint64_t)a1, a5, a6, isUniquelyReferenced_nonNull_native);
  *(void *)(a7 + 56) = v31[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1854A966C();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1854A974C(a5, a6);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1854A966C();
  os_unfair_lock_unlock(v20);
  uint64_t v24 = pthread_main_np();
  if (v24 != 1)
  {
    if (qword_1E8FB0100 == -1)
    {
LABEL_10:
      uint64_t v29 = (void *)swift_allocObject();
      void v29[2] = a7;
      v29[3] = a5;
      v29[4] = a6;
      v29[5] = a1;
      swift_bridgeObjectRetain();
      id v30 = a1;
      swift_retain();
      sub_1854A85B0((uint64_t)sub_185925810, (uint64_t)v29);
      swift_release();
      goto LABEL_11;
    }
LABEL_14:
    swift_once();
    goto LABEL_10;
  }
  signpost_c2_removePresentationModifier_end(v24, v25);
  id v26 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v26, sel_addPresentationModifier_, a1);

  signpost_c2_removePresentationModifier_end(v27, v28);
LABEL_11:
}

uint64_t sub_1854A966C()
{
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v0[6] + 16))
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(v0[8] + 16))
    {
      uint64_t result = swift_beginAccess();
      if (!*(void *)(v0[7] + 16))
      {
        uint64_t result = swift_beginAccess();
        if (!*(void *)(v0[9] + 16))
        {
          BOOL v2 = (void (*)(uint64_t))v0[4];
          if (v2)
          {
            v0[4] = 0;
            v0[5] = 0;
            swift_retain();
            uint64_t v3 = sub_1854AFD40((uint64_t)v2);
            v2(v3);
            return sub_1854AFD40((uint64_t)v2);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1854A974C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1853B7718(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1859BD2DC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1854A982C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1854A982C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_186A1F22C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_186A1F9EC();
        swift_bridgeObjectRetain();
        sub_186A1E9BC();
        uint64_t v9 = sub_186A1FA4C();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          id v15 = (void *)(v14 + 8 * v3);
          id v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *id v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    id v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *id v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1854A9A04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1854A9A44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1853B7718(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v10;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = *(void *)(v23 + 56);

      *(void *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  a6();
  unint64_t v25 = sub_1853B7718(a2, a3);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_15:
    sub_186A1F93C();
    __break(1u);
    return;
  }
  unint64_t v17 = v25;
  uint64_t v23 = *v10;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  a7(v17, a2, a3, a1, v23);
  swift_bridgeObjectRetain();
}

uint64_t sub_1854A9BB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1853B7718(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1859BD2DC();
    goto LABEL_7;
  }
  sub_1854A9D34(result, a4 & 1);
  uint64_t result = sub_1853B7718(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_186A1F93C();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1854A9CEC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1854A9CEC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1854A9D34(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFFD8);
  char v37 = a2;
  uint64_t v6 = sub_186A1F6AC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          int64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_186A1F9EC();
    sub_186A1E9BC();
    uint64_t result = sub_186A1FA4C();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

id sub_1854AA044(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  LODWORD(v11) = a5;
  uint64_t v14 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_0Tm(a3, a3[3]);
  uint64_t v15 = sub_186A1F83C();
  uint64_t v16 = a4[3];
  if (v16)
  {
    unint64_t v17 = __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    v28[1] = v28;
    uint64_t v18 = *(void *)(v16 - 8);
    int v29 = v11;
    uint64_t v11 = v18;
    MEMORY[0x1F4188790](v17);
    uint64_t v30 = v14;
    unint64_t v20 = a7;
    int64_t v21 = v8;
    uint64_t v22 = a6;
    unint64_t v23 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v23);
    uint64_t v24 = sub_186A1F83C();
    char v25 = v23;
    a6 = v22;
    uint64_t v8 = v21;
    a7 = v20;
    uint64_t v14 = v30;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v16);
    LOBYTE(v11) = v29;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a4);
  }
  else
  {
    uint64_t v24 = 0;
  }
  id v26 = objc_msgSend(v8, sel_initWithKeyPath_initialValue_initialVelocity_additive_preferredFrameRateRangeMaximum_group_, v14, v15, v24, v11 & 1, a6, a7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a3);
  return v26;
}

uint64_t sub_1854AA230(uint64_t a1, char a2)
{
  return sub_1854AA23C(a1, a2, (uint64_t *)&unk_1E8FAFFE0);
}

uint64_t sub_1854AA23C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_186A1F6AC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_186A1F9EC();
    sub_186A1E9BC();
    uint64_t result = sub_186A1FA4C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

void sub_1854AA548()
{
  sub_1854AA550(v0);
}

void sub_1854AA550(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x18C109380](v1);
  if (v2)
  {
    int64_t v3 = (void *)v2;
    -[UIView set__swiftAnimationInfo:](v2, 0);
  }
}

uint64_t signpost_c2_tick_allocatedModifiers_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_allocatedModifiers_end()
{
  return kdebug_trace();
}

uint64_t sub_1854AA5E0()
{
  return sub_1854AA5EC(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_1854AA5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    sub_1854F6F94((uint64_t)v5);
    sub_1854C6078();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
    uint64_t v8 = sub_185A560CC();
    if (v8)
    {
      uint64_t v9 = v8;
      type metadata accessor for UIAnimatableProperty();
      swift_retain();
      swift_getWitnessTable();
      sub_1854AA830(v7, (uint64_t)v9);

      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1854AA750()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_185A560CC();
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = type metadata accessor for UIAnimatableProperty();
      swift_retain();
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_1854AFA04(v1, v3, v4, WitnessTable);

      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for UIAnimatableProperty()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1854AA830(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_runningProgresses;
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectRetain();
  sub_1854AAEF0(v4);
  swift_endAccess();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  if (!*(void *)(*(void *)v3 + 16))
  {
    uint64_t v6 = *(void *)(a2
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback);
    uint64_t v7 = *(void *)(a2
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback
                   + 8);
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe) == 1)
    {
      if (v6)
      {
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = v6;
        *(void *)(v8 + 24) = v7;
        v22[1] = sub_1853B59A0;
        v22[2] = v8;
        v21[0] = MEMORY[0x1E4F143A8];
        v21[1] = 1107296256;
        v21[2] = (uint64_t)sub_1853BE46C;
        v22[0] = &block_descriptor_6;
        uint64_t v9 = (uint64_t)_Block_copy(v21);
        sub_1854B0A60(v6);
        sub_1854B0A60(v6);
        sub_1854B0A60(v6);
        swift_retain();
        swift_release();
        __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v9);
        _Block_release((const void *)v9);
        LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        uint64_t result = sub_1854AFD40(v6);
        if (v9)
        {
          __break(1u);
          return result;
        }
        uint64_t v19 = v6;
      }
      else
      {
        uint64_t v19 = 0;
      }
    }
    else
    {
      sub_1854B0A60(*(void *)(a2
                              + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback));
      sub_1854B0A60(v6);
      sub_1854AABE4(v6, v7);
      uint64_t result = sub_1854AFD40(v6);
      uint64_t v19 = 0;
    }
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
    sub_1854AAE5C((uint64_t *)(v10 + 16), v21);
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
    uint64_t v11 = v21[0];
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    uint64_t v13 = ~v12;
    uint64_t v14 = *(void *)(v11 + 64);
    uint64_t v15 = -v12;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    v22[10] = v11;
    v22[11] = v11 + 64;
    v22[12] = v13;
    v22[13] = 0;
    v22[14] = v16 & v14;
    sub_1854B0610((uint64_t)v20);
    sub_1853B8150((uint64_t)v20, (uint64_t)v21, &qword_1E8FB00A0);
    for (uint64_t i = (void *)v21[0]; v21[0]; uint64_t i = (void *)v21[0])
    {
      unint64_t v18 = (void *)sub_186A1E92C();
      swift_bridgeObjectRelease();
      objc_msgSend(i, sel_stopSettingPresentationValueForKey_, v18, v19);

      sub_1854B170C((uint64_t)v22);
      sub_1854B0610((uint64_t)v20);
      sub_1853B8150((uint64_t)v20, (uint64_t)v21, &qword_1E8FB00A0);
    }
    sub_1854B0880();
    sub_1854AFD40(v6);
    return sub_1854AFD40(v19);
  }
  return result;
}

void sub_1854AABE4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1854AFFDC(MEMORY[0x1E4FBC860]);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_currentThread);
  id v7 = objc_msgSend(v6, sel_threadDictionary);

  v14[0] = v4;
  uint64_t v8 = sub_186A1F90C();
  if (qword_1E8FB0130 != -1) {
    swift_once();
  }
  objc_msgSend(v7, sel_setObject_forKey_, v8, qword_1E8FB0120, v14[0]);

  swift_unknownObjectRelease();
  if (a1)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    uint64_t v14[4] = sub_1853B59D0;
    v14[5] = v9;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    v14[2] = sub_1853BE46C;
    v14[3] = &block_descriptor_22_1;
    uint64_t v10 = (uint64_t)_Block_copy(v14);
    sub_1854B0A60(a1);
    sub_1854B0A60(a1);
    swift_retain();
    swift_release();
    __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v10);
    _Block_release((const void *)v10);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    sub_1854AFD40(a1);
    sub_1854AFD40(a1);
    if (v10)
    {
      __break(1u);
      goto LABEL_8;
    }
  }
  uint64_t v11 = sub_1854AFE94();
  id v12 = objc_msgSend(v5, sel_currentThread);
  id v13 = objc_msgSend(v12, sel_threadDictionary);

  objc_msgSend(v13, sel_removeObjectForKey_, qword_1E8FB0120);
  if (!v11) {
LABEL_8:
  }
    __break(1u);
}

uint64_t sub_1854AAE5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1854AAE78(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1854AAE78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a2) {
    sub_1854B0140(a2, 1);
  }
  uint64_t result = *a1;
  if (*(unsigned char *)(a3
                + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_clearsCapturedPropertiesOnStabilization) == 1)
    *a1 = MEMORY[0x1E4FBC868];
  else {
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a4 = result;
  return result;
}

uint64_t sub_1854AAEF0(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_186A1F9EC();
  sub_186A1F9FC();
  uint64_t v4 = sub_186A1FA4C();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  while (*(void *)(*(void *)(v3 + 48) + 16 * v6) != a1)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v12 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1859C8364();
    uint64_t v10 = v12;
  }
  uint64_t v8 = *(void *)(*(void *)(v10 + 48) + 16 * v6);
  sub_1854AB014(v6);
  *uint64_t v1 = v12;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1854AB014(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_186A1F22C();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_186A1F9EC();
        sub_186A1F9FC();
        unint64_t v10 = sub_186A1FA4C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v2);
          id v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1854AB1C4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_186A1E92C();
  objc_msgSend(v1, sel_stopSettingPresentationValueForKey_, v2);
}

uint64_t sub_1854AB220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1853B93B8(a1, &qword_1E8FB2330);
    unint64_t v5 = sub_1854AB470(a2);
    char v7 = v6;
    if (v6)
    {
      unint64_t v8 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1859C134C();
        uint64_t v10 = v13;
      }
      sub_1854AB800(*(void *)(v10 + 56) + 8 * v8, (uint64_t)&v15);
      sub_1859BC4FC(v8, v10);
      *uint64_t v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    BOOL v16 = (v7 & 1) == 0;
    return sub_1853B93B8((uint64_t)&v15, &qword_1E8FB2330);
  }
  else
  {
    sub_1854AB800(a1, (uint64_t)&v15);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *id v2 = 0x8000000000000000;
    sub_1854AB340((uint64_t)&v15, a2, v11);
    *id v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1854AB340(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1854AB470(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1859C134C();
      goto LABEL_7;
    }
    sub_1854AB524(v13, a3 & 1);
    unint64_t v19 = sub_1854AB470(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_186A1F93C();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 8 * v10;
    return sub_18597A9FC(a1, v17);
  }
LABEL_13:
  return sub_1854AB4AC(v10, a2, a1, v16);
}

unint64_t sub_1854AB470(uint64_t a1)
{
  uint64_t v2 = sub_186A1F9DC();
  return sub_1854AF8FC(a1, v2);
}

uint64_t sub_1854AB4AC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1853B8150(a3, a4[7] + 8 * a1, &qword_1E8FAFFA0);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1854AB524(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFFD0);
  uint64_t result = sub_186A1F6AC();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v33 = v3;
    int64_t v8 = 0;
    char v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_34;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_41;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v9 = -1 << v32;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(v5 + 56) + v22;
      if (a2) {
        sub_1853B8150(v24, (uint64_t)v34, &qword_1E8FAFFA0);
      }
      else {
        sub_185A1A2B8(v24, (uint64_t)v34);
      }
      uint64_t result = sub_186A1F9DC();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      uint64_t result = sub_1853B8150((uint64_t)v34, *(void *)(v7 + 56) + v16, &qword_1E8FAFFA0);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1854AB800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1854AB960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, long long *, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v7 = sub_186A1E95C();
    uint64_t v9 = v8;
    if (a3) {
      goto LABEL_3;
    }
LABEL_7:
    long long v11 = 0u;
    long long v12 = 0u;
    if (!a4) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v7 = 0;
  uint64_t v9 = 0;
  if (!a3) {
    goto LABEL_7;
  }
LABEL_3:
  *((void *)&v12 + 1) = swift_getObjectType();
  *(void *)&long long v11 = a3;
  if (a4) {
LABEL_4:
  }
    a4 = sub_186A1E79C();
LABEL_5:
  swift_retain();
  swift_unknownObjectRetain();
  v6(v7, v9, &v11, a4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1853B93B8((uint64_t)&v11, &qword_1EB256B10);
}

uint64_t sub_1854ABA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1854ABA94(a1, a2, a3, a4, *(unsigned char *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), v4 + 48);
}

uint64_t sub_1854ABA94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  void (*v22)(_OWORD *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v23;
  ValueMetadata *v24;
  uint64_t v25;
  uint64_t v26;
  long long v27;
  long long v28;
  uint64_t v29;
  long long v30;
  long long v31;
  _OWORD v32[2];

  if (!a2) {
    return result;
  }
  uint64_t v13 = result;
  sub_1853B7020(a3, (uint64_t)&v27, &qword_1EB256B10);
  if (!*((void *)&v28 + 1))
  {
    sub_1853B93B8((uint64_t)&v27, &qword_1EB256B10);
    goto LABEL_7;
  }
  sub_1853B985C(0, &qword_1E8FAFEE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    BOOL v30 = 0u;
    uint64_t v31 = 0u;
    goto LABEL_8;
  }
  uint64_t v14 = *(void **)&v32[0];
  uint64_t v15 = v13;
  uint64_t v16 = (void *)sub_186A1E92C();
  id v17 = objc_msgSend(v14, sel_valueForKeyPath_, v16);

  if (v17)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v27 = 0u;
    char v28 = 0u;
  }
  sub_1853B8150((uint64_t)&v27, (uint64_t)&v30, &qword_1EB256B10);
  uint64_t v13 = v15;
  if (*((void *)&v31 + 1))
  {
    sub_1853B7BB0(&v30, v32);
    goto LABEL_12;
  }
LABEL_8:
  unint64_t v18 = sub_1854ABD04(a5);
  uint64_t v19 = v13;
  uint64_t v21 = v20;
  *((void *)&v28 + 1) = v18;
  unint64_t v29 = v20;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v27);
  sub_186A1F66C();
  uint64_t v22 = *(void (**)(_OWORD *__return_ptr, ValueMetadata *, uint64_t))(v21 + 72);
  uint64_t v23 = v21;
  uint64_t v13 = v19;
  v22(v32, v18, v23);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v27);
  sub_1853B93B8((uint64_t)&v30, &qword_1EB256B10);
LABEL_12:
  if ((sub_1854ABE18((uint64_t)a7, v13, a2, a8, a9, (uint64_t)v32) & 1) == 0)
  {
    uint64_t v24 = sub_1854ABD04(a5);
    sub_1854AC67C(a7, v13, a2, (uint64_t)a8, a9, (uint64_t)v32, v26, 1, v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32);
}

ValueMetadata *sub_1854ABD04(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = &type metadata for UIAnimatableScaledFloat;
      sub_1854B62C0();
      break;
    case 2:
      uint64_t v1 = &type metadata for UIAnimatablePoint;
      sub_1854AED70();
      break;
    case 3:
      uint64_t v1 = &type metadata for UIAnimatableSize;
      sub_18590DB1C();
      break;
    case 4:
      uint64_t v1 = &type metadata for UIAnimatableNormalizedPoint;
      sub_18590DA74();
      break;
    case 5:
      uint64_t v1 = &type metadata for UIAnimatableColor;
      sub_18590DB70();
      break;
    case 6:
      uint64_t v1 = &type metadata for UIAnimatableColorArray;
      sub_18590DA20();
      break;
    case 7:
      uint64_t v1 = &type metadata for UIAnimatableRect;
      sub_1854ACCF8();
      break;
    case 8:
      uint64_t v1 = &type metadata for UIAnimatableNormalizedRect;
      sub_1858B8590();
      break;
    case 9:
      uint64_t v1 = &type metadata for UIAnimatableTransform;
      sub_1854BABCC();
      break;
    case 10:
      uint64_t v1 = &type metadata for UIAnimatableColorMatrix;
      sub_1858B9B58();
      break;
    case 11:
      uint64_t v1 = &type metadata for UIAnimatableMeshTransform;
      sub_18590D9CC();
      break;
    case 12:
      uint64_t v1 = &type metadata for UIAnimatableCornerRadii;
      sub_18590DAC8();
      break;
    default:
      uint64_t v1 = &type metadata for UIAnimatableFloat;
      sub_1854B6F18();
      break;
  }
  return v1;
}

uint64_t sub_1854ABE18(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (uint64_t)objc_msgSend(v6, sel_shouldDecomposeGeometricTypes);
  if (result)
  {
    uint64_t v14 = sub_1853B7BC0();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = (os_unfair_lock_s *)(*(void *)(v14 + 16) + 16);
      os_unfair_lock_lock(v16);
      swift_beginAccess();
      uint64_t v17 = *(void *)(v15 + 48);
      if (*(void *)(v17 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_1853B7718(a2, a3);
        if (v19)
        {
          uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 16 * v18);
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v20 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = 0;
      }
      swift_endAccess();
      os_unfair_lock_unlock(v16);
      swift_release();
      if (v20)
      {
        swift_unknownObjectRelease();
        return 0;
      }
    }
    if (a2 == 0x6E6F697469736F70 && a3 == 0xE800000000000000 || (sub_186A1F85C() & 1) != 0)
    {
      sub_1853B76BC(a5, (uint64_t)v75);
      sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
      swift_dynamicCast();
      objc_msgSend(v74[0], sel_CGPointValue);
      uint64_t v22 = v21;
      uint64_t v24 = v23;

      sub_1853B76BC(a6, (uint64_t)v75);
      swift_dynamicCast();
      objc_msgSend(v74[0], sel_CGPointValue);
      uint64_t v26 = v25;
      uint64_t v28 = v27;

      uint64_t v29 = MEMORY[0x1E4FBC958];
      uint64_t v76 = MEMORY[0x1E4FBC958];
      v75[0] = v22;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v31 = v30;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v29;
      v75[0] = v26;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v33 = v32;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      sub_1854B8890(a1, 0x6E6F697469736F70, 0xEA0000000000782ELL, a4, 0, v31, v33);
      uint64_t v76 = v29;
      v75[0] = v24;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v35 = v34;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v29;
      v75[0] = v28;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v37 = v36;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v38 = 0xEA0000000000792ELL;
      uint64_t v39 = a1;
      uint64_t v40 = 0x6E6F697469736F70;
LABEL_15:
      sub_1854B8890(v39, v40, v38, a4, 0, v35, v37);
      return 1;
    }
    if (a2 == 0x73646E756F62 && a3 == 0xE600000000000000 || (v41 = sub_186A1F85C(), uint64_t result = 0, (v41 & 1) != 0))
    {
      sub_1853B76BC(a5, (uint64_t)v75);
      sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
      swift_dynamicCast();
      objc_msgSend(v74[0], sel_CGRectValue);
      uint64_t v43 = v42;
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      uint64_t v49 = v48;

      sub_1853B76BC(a6, (uint64_t)v75);
      swift_dynamicCast();
      objc_msgSend(v74[0], sel_CGRectValue);
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v57 = v56;

      uint64_t v58 = MEMORY[0x1E4FBC958];
      uint64_t v76 = MEMORY[0x1E4FBC958];
      v75[0] = v43;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v60 = v59;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v58;
      v75[0] = v51;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v62 = v61;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      sub_1854B8890(a1, 0x6F2E73646E756F62, 0xEF782E6E69676972, a4, 0, v60, v62);
      uint64_t v76 = v58;
      v75[0] = v45;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v64 = v63;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v58;
      v75[0] = v53;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v66 = v65;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      sub_1854B8890(a1, 0x6F2E73646E756F62, 0xEF792E6E69676972, a4, 0, v64, v66);
      uint64_t v76 = v58;
      v75[0] = v47;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v68 = v67;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v58;
      v75[0] = v55;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v70 = v69;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      sub_1854B8890(a1, 0xD000000000000011, 0x8000000186BA02C0, a4, 0, v68, v70);
      uint64_t v76 = v58;
      v75[0] = v49;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v35 = v71;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v76 = v58;
      v75[0] = v57;
      sub_1853B76BC((uint64_t)v75, (uint64_t)v74);
      swift_dynamicCast();
      objc_msgSend(v73, sel_doubleValue);
      double v37 = v72;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
      uint64_t v40 = 0xD000000000000012;
      uint64_t v38 = 0x8000000186BA02E0;
      uint64_t v39 = a1;
      goto LABEL_15;
    }
  }
  return result;
}

void sub_1854AC67C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, ValueMetadata *a9, uint64_t a10)
{
  Description = a9[-1].Description;
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (long long *)((char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v23 = (long long *)((char *)v56 - v22);
  if (a9 == &type metadata for UIAnimatableColorMatrix)
  {
    sub_1858B3C50((uint64_t)a1, v18, v19, v20, v21, a6, a8 & 1);
    return;
  }
  if (a9 == &type metadata for UIAnimatableSize)
  {
    sub_1854ACD4C((uint64_t)a1, v18, v19, (uint64_t)v20, v21, a6, a8 & 1, (SEL *)&selRef_CGSizeValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))sub_185939194);
    return;
  }
  if (a9 == &type metadata for UIAnimatableColorArray)
  {
    uint64_t v26 = v18;
    uint64_t v27 = v20;
    uint64_t v28 = v19;
    sub_1853B76BC(v21, (uint64_t)v65);
    uint64_t v29 = sub_185A9E7DC((uint64_t)v65);
    sub_1853B76BC(a6, (uint64_t)v65);
    uint64_t v30 = sub_185A9E7DC((uint64_t)v65);
    sub_185938CD4((uint64_t)a1, v26, v28, v27, v29, v30, a8 & 1);
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  if (a9 == &type metadata for UIAnimatableCornerRadii)
  {
    sub_18595A0A0((uint64_t)a1, v18, v19, v20, v21, a6, a8 & 1);
    return;
  }
  if (a9 == &type metadata for UIAnimatableVector)
  {
    uint64_t v31 = v18;
    double v61 = v20;
    uint64_t v32 = v19;
    sub_1853B76BC(v21, (uint64_t)v65);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAF688);
    swift_dynamicCast();
    uint64_t v33 = v64[0];
    sub_1853B76BC(a6, (uint64_t)v65);
    swift_dynamicCast();
    sub_185938408(a1, v31, v32, v61, v33, v64[0], a8 & 1);
    goto LABEL_25;
  }
  if (a9 == &type metadata for UIAnimatableMeshTransform)
  {
    sub_185959EB0(a1, v18, v19, v20, v21, a6, a8 & 1);
    return;
  }
  if (a9 == &type metadata for UIAnimatableFloat)
  {
    uint64_t v34 = a8 & 1;
    double v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))sub_1854B8890;
LABEL_30:
    sub_1854B64CC((uint64_t)a1, v18, v19, (uint64_t)v20, v21, a6, v34, v35);
    return;
  }
  if (a9 == &type metadata for UIAnimatableNormalizedPoint)
  {
    double v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))sub_185937B44;
LABEL_32:
    sub_1854ACD4C((uint64_t)a1, v18, v19, (uint64_t)v20, v21, a6, a8 & 1, (SEL *)&selRef_CGPointValue, v36);
    return;
  }
  if (a9 == &type metadata for UIAnimatableColor)
  {
    uint64_t v37 = v18;
    uint64_t v38 = v20;
    uint64_t v39 = v19;
    sub_1853B76BC(v21, (uint64_t)v65);
    double v40 = sub_185AF4370((uint64_t)v65);
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
    sub_1853B76BC(a6, (uint64_t)v65);
    double v47 = sub_185AF4370((uint64_t)v65);
    sub_185937708((uint64_t)a1, v37, v39, v38, a8 & 1, v40, v42, v44, v46, v47, v48, v49, v50);
    return;
  }
  if (a9 == &type metadata for UIAnimatableScaledFloat)
  {
    uint64_t v34 = a8 & 1;
    double v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))sub_1854B7D58;
    goto LABEL_30;
  }
  if (a9 == &type metadata for UIAnimatableRect)
  {
    uint64_t v51 = a8 & 1;
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double))sub_1854AD7DC;
LABEL_37:
    sub_1854ACEC8((uint64_t)a1, v18, v19, (uint64_t)v20, v21, a6, v51, v52);
    return;
  }
  if (a9 == &type metadata for UIAnimatableNormalizedRect)
  {
    uint64_t v51 = a8 & 1;
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double))sub_1858B4048;
    goto LABEL_37;
  }
  if (a9 != &type metadata for UIAnimatableTransform)
  {
    if (a9 != &type metadata for UIAnimatablePoint)
    {
      uint64_t v57 = v19;
      uint64_t v58 = v18;
      double v61 = v20;
      sub_1853B76BC(v21, (uint64_t)v65);
      uint64_t v24 = *(void (**)(unsigned char *, ValueMetadata *, uint64_t))(a10 + 56);
      uint64_t v59 = a10 + 56;
      double v60 = v24;
      v56[1] = v10;
      v24(v65, a9, a10);
      sub_1853B76BC(a6, (uint64_t)v65);
      v60(v65, a9, a10);
      sub_1859395FC(a1, v58, v57, v61, v23, v17, a8 & 1, a9, a10);
      uint64_t v25 = (void (*)(long long *, ValueMetadata *))Description[1];
      v25(v17, a9);
      v25(v23, a9);
      return;
    }
    double v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))sub_1854ADC70;
    goto LABEL_32;
  }
  uint64_t v53 = v18;
  uint64_t v54 = v20;
  uint64_t v55 = v19;
  sub_1853B76BC(v21, (uint64_t)v65);
  sub_1853B76BC((uint64_t)v65, (uint64_t)v63);
  sub_185AC77D4((uint64_t)v63, 0, (uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v65);
  sub_1853B76BC(a6, (uint64_t)v63);
  sub_1853B76BC((uint64_t)v63, (uint64_t)v62);
  sub_185AC77D4((uint64_t)v62, 0, (uint64_t)v65);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v63);
  sub_1854B9424(a1, v53, v55, v54, (uint64_t)v64, (uint64_t)v65, a8 & 1);
}

unint64_t sub_1854ACCF8()
{
  unint64_t result = qword_1E8FAFCF0;
  if (!qword_1E8FAFCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8FAFCF0);
  }
  return result;
}

uint64_t sub_1854ACD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))
{
  sub_1853B76BC(a5, (uint64_t)v27);
  sub_1853B76BC((uint64_t)v27, (uint64_t)v26);
  sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
  swift_dynamicCast();
  [v25 *a8];
  double v17 = v16;
  double v19 = v18;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  sub_1853B76BC(a6, (uint64_t)v27);
  sub_1853B76BC((uint64_t)v27, (uint64_t)v26);
  swift_dynamicCast();
  [v25 *a8];
  double v21 = v20;
  double v23 = v22;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  return a9(a1, a2, a3, a4, a7, v17, v19, v21, v23);
}

uint64_t sub_1854ACEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double))
{
  sub_1853B76BC(a5, (uint64_t)v34);
  sub_1853B76BC((uint64_t)v34, (uint64_t)v33);
  sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
  swift_dynamicCast();
  objc_msgSend(v32, sel_CGRectValue);
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  sub_1853B76BC(a6, (uint64_t)v34);
  sub_1853B76BC((uint64_t)v34, (uint64_t)v33);
  swift_dynamicCast();
  objc_msgSend(v32, sel_CGRectValue);
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  return a8(a1, a2, a3, a4, a7, v15, v17, v19, v21, v23, v25, v27, v29);
}

uint64_t sub_1854AD06C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, char a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  void (*v32)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  BOOL v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v52;
  NSObject *v56;
  uint64_t v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  unsigned __int8 v83;
  void v84[42];
  char v85;
  void v86[11];
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;

  uint64_t v91 = a1;
  uint64_t v92 = a2;
  unint64_t v93 = a3;
  char v94 = a4;
  char v87 = a5;
  uint64_t v88 = a6;
  uint64_t v89 = a7;
  uint64_t v90 = a8;
  uint64_t v25 = a11[3];
  uint64_t v26 = a11[4];
  __swift_project_boxed_opaque_existential_0Tm(a11, v25);
  swift_beginAccess();
  uint64_t v27 = *(unsigned __int8 *)(v24 + 209);
  uint64_t v59 = v24;
  double v28 = *(os_unfair_lock_s **)(v24 + 32);
  double v29 = v28 + 4;
  uint64_t v30 = v28 + 6;
  os_unfair_lock_lock(v28 + 6);
  double v60 = v29;
  sub_1854AEC24(v29, v84);
  double v61 = v30;
  os_unfair_lock_unlock(v30);
  uint64_t v31 = v84[0];
  if (v84[0])
  {
    swift_beginAccess();
    sub_1853B7020(v31 + 24, (uint64_t)v84, &qword_1E8FAFD08);
    swift_release();
  }
  else
  {
    memset(v84, 0, sizeof(v84));
    unint64_t v85 = -1;
  }
  id v32 = *(void (**)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  uint64_t v33 = sub_1854ACCF8();
  v32(v86, v27, v84, &v91, &v87, &type metadata for UIAnimatableRect, v33, v25, v26);
  sub_1853B93B8((uint64_t)v84, &qword_1E8FAFD10);
  os_unfair_lock_lock(v30);
  sub_1854AEC24(v60, v84);
  os_unfair_lock_unlock(v30);
  uint64_t v34 = v84[0];
  if (v84[0])
  {
    swift_beginAccess();
    sub_1853B7020(v34 + 24, (uint64_t)&v62, &qword_1E8FAFD08);
    swift_release();
  }
  else
  {
    unint64_t v81 = 0u;
    char v82 = 0u;
    uint64_t v79 = 0u;
    char v80 = 0u;
    uint64_t v77 = 0u;
    BOOL v78 = 0u;
    float32x4_t v75 = 0u;
    uint64_t v76 = 0u;
    id v73 = 0u;
    char v74 = 0u;
    double v71 = 0u;
    double v72 = 0u;
    double v69 = 0u;
    double v70 = 0u;
    double v67 = 0u;
    double v68 = 0u;
    double v65 = 0u;
    double v66 = 0u;
    double v63 = 0u;
    double v64 = 0u;
    double v62 = 0u;
    unint64_t v83 = -1;
  }
  swift_beginAccess();
  sub_1854B4128((uint64_t)&v62, (uint64_t)v86, a10 & 1, &qword_1E8FAFD10, &qword_1E8FB2D30, &qword_1E8FB2D38, &qword_1E8FAFD08, (uint64_t)v84, v91, v92, v93, v94, v87, v88, v89, v90, &qword_1E8FAFD00, &qword_1E8FB2DE0);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v62, &qword_1E8FAFD10);
  os_unfair_lock_lock(v30);
  sub_1854AEC24(v60, &v62);
  os_unfair_lock_unlock(v30);
  double v35 = v62;
  if ((void)v62)
  {
    double v36 = *(void (**)(void))(v62 + 368);
    if (v36)
    {
      *(void *)(v62 + 368) = 0;
      *(void *)(v35 + 376) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v36);
      v36(0);
      sub_1854AFD40((uint64_t)v36);
    }
    *(unsigned char *)(v35 + 384) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v84, (uint64_t)&v62, &qword_1E8FAFD08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFD18);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 368) = 0;
  *(void *)(v37 + 376) = 0;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v62, v37 + 24, &qword_1E8FAFD08);
  *(_WORD *)(v37 + 384) = 0;
  uint64_t v38 = *(void *)(v37 + 368);
  *(void *)(v37 + 368) = a23;
  *(void *)(v37 + 376) = a24;
  swift_retain();
  sub_1854AFD40(v38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  uint64_t v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  *(void *)(v37 + 16) = v39;
  if (a18) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v59 + 120) & 1) == 0) {
    sub_185952EA4(&qword_1E8FAFD08, *(double *)(v59 + 88), *(double *)(v59 + 96), *(double *)(v59 + 104), *(double *)(v59 + 112));
  }
  double v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(unsigned char *)(v40 + 48) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  uint64_t v52 = qword_1E8FD58B0;
  double v41 = *(unsigned char *)(v59 + 264);
  sub_1853B7020((uint64_t)v84, (uint64_t)&v62, &qword_1E8FAFD08);
  double v42 = v83;
  if (v83 == 2) {
    sub_1853B93B8((uint64_t)&v62, &qword_1E8FAFD08);
  }
  double v43 = v42 == 2;
  double v44 = (void *)swift_allocObject();
  v44[2] = v37;
  v44[3] = a12;
  v44[4] = a13;
  v44[5] = v59;
  v44[6] = v40;
  v44[7] = a14;
  v44[8] = a15;
  v44[9] = a16;
  v44[10] = a17;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  double v45 = swift_allocObject();
  *(_DWORD *)(v45 + 16) = a20;
  *(_DWORD *)(v45 + 20) = a21;
  *(_DWORD *)(v45 + 24) = a22;
  *(_DWORD *)(v45 + 28) = a19;
  *(unsigned char *)(v45 + 32) = v41;
  *(unsigned char *)(v45 + 33) = v43;
  *(void *)(v45 + 40) = sub_1853BA6F8;
  *(void *)(v45 + 48) = v44;
  uint64_t v56 = *(NSObject **)(v52 + 264);
  double v46 = swift_allocObject();
  *(void *)(v46 + 16) = v52;
  *(void *)(v46 + 24) = v45;
  double v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_1853C10BC;
  *(void *)(v47 + 24) = v46;
  *(void *)&double v64 = sub_1853BE6D4;
  *((void *)&v64 + 1) = v47;
  *(void *)&double v62 = MEMORY[0x1E4F143A8];
  *((void *)&v62 + 1) = 1107296256;
  *(void *)&double v63 = sub_1853BE46C;
  *((void *)&v63 + 1) = &block_descriptor_651;
  double v48 = _Block_copy(&v62);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v56, v48);
  _Block_release(v48);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  unint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v61);
    sub_1854AEC5C(v60);
    os_unfair_lock_unlock(v61);
    swift_release_n();
    sub_1853B93B8((uint64_t)v84, &qword_1E8FAFD08);
    sub_1854AECBC((uint64_t)v86);
    return swift_release();
  }
  return result;
}

uint64_t sub_1854AD7DC(uint64_t result, uint64_t a2, uint64_t a3, void *a4, char a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  double v14 = v13;
  double v18 = (void *)result;
  *(double *)uint64_t v59 = a6;
  *(double *)&v59[1] = a7;
  *(double *)&v59[2] = a8;
  *(double *)&v59[3] = a9;
  *(double *)uint64_t v58 = a10;
  *(double *)&v58[1] = a11;
  *(double *)&_DWORD v58[2] = a12;
  *(double *)&v58[3] = a13;
  if (a5) {
    goto LABEL_15;
  }
  if (qword_1E8FAFCE0 != -1) {
    unint64_t result = swift_once();
  }
  double v27 = vabdd_f64(a7, a11);
  BOOL v28 = vabdd_f64(a6, a10) > *(double *)&xmmword_1E8FD5800 || v27 > *(double *)&xmmword_1E8FD5800;
  double v29 = vabdd_f64(a8, a12);
  BOOL v30 = v28 || v29 > *((double *)&xmmword_1E8FD5800 + 1);
  double v31 = vabdd_f64(a9, a13);
  if (v30 || v31 > *((double *)&xmmword_1E8FD5800 + 1))
  {
LABEL_15:
    objc_msgSend(v13, sel_preferredFrameRateRange);
    int v34 = v33;
    int v36 = v35;
    int v38 = v37;
    if (!sub_1853B7BC0())
    {
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      id v40 = a4;
      double v41 = sub_1854AE0CC(v40, (uint64_t)sub_1854AA548, v39);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v40, v41);
    }
    sub_1854B22B4(a2, a3);
    uint64_t v43 = v42;
    swift_release();
    id v44 = objc_msgSend(v18, sel_context);

    if (v44)
    {
      uint64_t v56 = sub_1853B6778;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v46 = swift_allocObject();
      *(unsigned char *)(v46 + 16) = 1;
      uint64_t v47 = v43;
      uint64_t v48 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v46;
      *(void *)(v45 + 24) = v48;
      uint64_t v43 = v47;
      uint64_t v56 = sub_185967700;
    }
    int v49 = v14[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    if (a2 != 0xD000000000000020 || (double v50 = sub_1853C2AD8, a3 != 0x8000000186B9E920))
    {
      if (sub_186A1F85C())
      {
        double v50 = sub_1853C2AD8;
      }
      else if (a2 != 0xD000000000000021 || (double v50 = sub_18593A40C, a3 != 0x8000000186B9E950))
      {
        if (sub_186A1F85C()) {
          double v50 = sub_18593A40C;
        }
        else {
          double v50 = 0;
        }
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v50;
    *(void *)(v51 + 24) = 0;
    *(void *)(v51 + 32) = a4;
    *(_DWORD *)(v51 + 40) = v34;
    *(_DWORD *)(v51 + 44) = v36;
    *(_DWORD *)(v51 + 48) = v38;
    *(unsigned char *)(v51 + 52) = v49 == 2;
    *(void *)(v51 + 56) = a2;
    *(void *)(v51 + 64) = a3;
    uint64_t v52 = (void *)swift_allocObject();
    v52[2] = a4;
    v52[3] = a2;
    v52[4] = a3;
    uint64_t v53 = *(void (**)(void *, void *, uint64_t (*)(), uint64_t, id (*)(double *, double *), uint64_t, void (*)(), void *, uint64_t, uint64_t))(v43 + 192);
    id v54 = a4;
    swift_bridgeObjectRetain_n();
    id v55 = v54;
    swift_retain();
    sub_1854B0A60((uint64_t)v50);
    v53(v59, v58, v56, v45, sub_1853B5CCC, v51, sub_1854A8D50, v52, ObjectType, v43);
    swift_release();
    sub_1854AFD40((uint64_t)v50);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1854ADC70(uint64_t result, uint64_t a2, uint64_t a3, void *a4, char a5, double a6, double a7, double a8, double a9)
{
  uint64_t v10 = v9;
  double v14 = (void *)result;
  *(double *)uint64_t v47 = a6;
  *(double *)&v47[1] = a7;
  *(double *)uint64_t v46 = a8;
  *(double *)&v46[1] = a9;
  if (a5) {
    goto LABEL_9;
  }
  if (qword_1E8FAFD68 != -1) {
    unint64_t result = swift_once();
  }
  double v19 = vabdd_f64(a7, a9);
  if (vabdd_f64(a6, a8) > *(double *)&qword_1E8FD5820 || v19 > *(double *)&qword_1E8FD5820)
  {
LABEL_9:
    objc_msgSend(v9, sel_preferredFrameRateRange);
    int v22 = v21;
    int v24 = v23;
    int v26 = v25;
    if (!sub_1853B7BC0())
    {
      uint64_t v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      id v28 = a4;
      double v29 = sub_1854AE0CC(v28, (uint64_t)sub_1854AA548, v27);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v28, v29);
    }
    sub_1854B2698(a2, a3);
    uint64_t v31 = v30;
    swift_release();
    id v32 = objc_msgSend(v14, sel_context);

    if (v32)
    {
      id v44 = sub_1853B6778;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v34 = swift_allocObject();
      *(unsigned char *)(v34 + 16) = 1;
      uint64_t v35 = v31;
      uint64_t v36 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v34;
      *(void *)(v33 + 24) = v36;
      uint64_t v31 = v35;
      id v44 = sub_185967700;
    }
    int v37 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    if (a2 != 0xD000000000000020 || (int v38 = sub_1853C2AD8, a3 != 0x8000000186B9E920))
    {
      if (sub_186A1F85C())
      {
        int v38 = sub_1853C2AD8;
      }
      else if (a2 != 0xD000000000000021 || (int v38 = sub_18593A40C, a3 != 0x8000000186B9E950))
      {
        if (sub_186A1F85C()) {
          int v38 = sub_18593A40C;
        }
        else {
          int v38 = 0;
        }
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    *(void *)(v39 + 24) = 0;
    *(void *)(v39 + 32) = a4;
    *(_DWORD *)(v39 + 40) = v22;
    *(_DWORD *)(v39 + 44) = v24;
    *(_DWORD *)(v39 + 48) = v26;
    *(unsigned char *)(v39 + 52) = v37 == 2;
    *(void *)(v39 + 56) = a2;
    *(void *)(v39 + 64) = a3;
    id v40 = (void *)swift_allocObject();
    v40[2] = a4;
    v40[3] = a2;
    v40[4] = a3;
    double v41 = *(void (**)(void *, void *, uint64_t (*)(), uint64_t, id (*)(double *, double *), uint64_t, void (*)(), void *, uint64_t, uint64_t))(v31 + 192);
    id v42 = a4;
    swift_bridgeObjectRetain_n();
    id v43 = v42;
    swift_retain();
    sub_1854B0A60((uint64_t)v38);
    v41(v47, v46, v44, v33, sub_1853B5B10, v39, sub_1854A8D50, v40, ObjectType, v31);
    swift_release();
    sub_1854AFD40((uint64_t)v38);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_1854AE0CC(void *a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  v3[4] = 0;
  void v3[5] = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  void v3[6] = sub_1854AE2A8(MEMORY[0x1E4FBC860]);
  v3[7] = sub_1854AE18C(v7);
  unint64_t v8 = sub_1854AE3D4(v7);
  uint64_t v9 = MEMORY[0x1E4FBC870];
  v3[8] = v8;
  v3[9] = v9;
  swift_unknownObjectWeakAssign();

  uint64_t v10 = v3[4];
  v3[4] = a2;
  void v3[5] = a3;
  sub_1854AFD40(v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  _OWORD v3[2] = v11;
  return v3;
}

unint64_t sub_1854AE18C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFFE0);
  uint64_t v2 = (void *)sub_186A1F6CC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1853B7718(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1854AE2A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1E8FAFF00);
  uint64_t v2 = (void *)sub_186A1F6CC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1853B7718(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1854AE3D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFFD8);
  uint64_t v2 = (void *)sub_186A1F6CC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1853B7718(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1854AE4E8(double a1, double a2, double a3, double a4, float a5, float a6, float a7, uint64_t a8, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, uint64_t a19, uint64_t a20)
{
  void (*v31)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  BOOL v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v51;
  NSObject *v55;
  uint64_t v58;
  os_unfair_lock_s *v59;
  os_unfair_lock_s *v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  unsigned __int8 v76;
  void v77[30];
  char v78;
  void v79[11];
  double v80;
  double v81;
  double v82;
  double v83;

  char v82 = a1;
  unint64_t v83 = a2;
  char v80 = a3;
  unint64_t v81 = a4;
  uint64_t v24 = a10[3];
  uint64_t v25 = a10[4];
  __swift_project_boxed_opaque_existential_0Tm(a10, v24);
  swift_beginAccess();
  uint64_t v26 = *(unsigned __int8 *)(v20 + 145);
  uint64_t v58 = v20;
  uint64_t v27 = *(os_unfair_lock_s **)(v20 + 32);
  id v28 = v27 + 4;
  double v29 = v27 + 6;
  os_unfair_lock_lock(v27 + 6);
  uint64_t v59 = v28;
  sub_1854AEC24(v28, v77);
  double v60 = v29;
  os_unfair_lock_unlock(v29);
  uint64_t v30 = v77[0];
  if (v77[0])
  {
    swift_beginAccess();
    sub_1853B7020(v30 + 24, (uint64_t)v77, &qword_1E8FAFD90);
    swift_release();
  }
  else
  {
    memset(v77, 0, sizeof(v77));
    BOOL v78 = -1;
  }
  uint64_t v31 = *(void (**)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v25 + 16);
  id v32 = sub_1854AED70();
  v31(v79, v26, v77, &v82, &v80, &type metadata for UIAnimatablePoint, v32, v24, v25);
  sub_1853B93B8((uint64_t)v77, &qword_1E8FAFD98);
  os_unfair_lock_lock(v29);
  sub_1854AEC24(v59, v77);
  os_unfair_lock_unlock(v29);
  uint64_t v33 = v77[0];
  if (v77[0])
  {
    swift_beginAccess();
    sub_1853B7020(v33 + 24, (uint64_t)&v61, &qword_1E8FAFD90);
    swift_release();
  }
  else
  {
    char v74 = 0u;
    float32x4_t v75 = 0u;
    double v72 = 0u;
    id v73 = 0u;
    double v70 = 0u;
    double v71 = 0u;
    double v68 = 0u;
    double v69 = 0u;
    double v66 = 0u;
    double v67 = 0u;
    double v64 = 0u;
    double v65 = 0u;
    double v62 = 0u;
    double v63 = 0u;
    double v61 = 0u;
    uint64_t v76 = -1;
  }
  swift_beginAccess();
  sub_1854B4B10((uint64_t)&v61, (uint64_t)v79, a9 & 1, &qword_1E8FAFD98, &qword_1E8FB2D68, &qword_1E8FB2D70, &qword_1E8FAFD90, (uint64_t)v77, v82, v83, v80, v81, &qword_1E8FB2DF8);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v61, &qword_1E8FAFD98);
  os_unfair_lock_lock(v29);
  sub_1854AEC24(v59, &v61);
  os_unfair_lock_unlock(v29);
  uint64_t v34 = v61;
  if ((void)v61)
  {
    uint64_t v35 = *(void (**)(void))(v61 + 272);
    if (v35)
    {
      *(void *)(v61 + 272) = 0;
      *(void *)(v34 + 280) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v35);
      v35(0);
      sub_1854AFD40((uint64_t)v35);
    }
    *(unsigned char *)(v34 + 288) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v77, (uint64_t)&v61, &qword_1E8FAFD90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFDA0);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 272) = 0;
  *(void *)(v36 + 280) = 0;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v61, v36 + 24, &qword_1E8FAFD90);
  *(_WORD *)(v36 + 288) = 0;
  int v37 = *(void *)(v36 + 272);
  *(void *)(v36 + 272) = a19;
  *(void *)(v36 + 280) = a20;
  swift_retain();
  sub_1854AFD40(v37);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  int v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(void *)(v36 + 16) = v38;
  if (a17) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v58 + 88) & 1) == 0) {
    sub_185952B28(&qword_1E8FAFD90, *(double *)(v58 + 72), *(double *)(v58 + 80));
  }
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = 0;
  *(void *)(v39 + 24) = 0;
  *(unsigned char *)(v39 + 32) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  uint64_t v51 = qword_1E8FD58B0;
  id v40 = *(unsigned char *)(v58 + 184);
  sub_1853B7020((uint64_t)v77, (uint64_t)&v61, &qword_1E8FAFD90);
  double v41 = v76;
  if (v76 == 2) {
    sub_1853B93B8((uint64_t)&v61, &qword_1E8FAFD90);
  }
  id v42 = v41 == 2;
  id v43 = (void *)swift_allocObject();
  v43[2] = v36;
  _OWORD v43[3] = a11;
  _OWORD v43[4] = a12;
  v43[5] = v58;
  v43[6] = v39;
  v43[7] = a13;
  v43[8] = a14;
  v43[9] = a15;
  v43[10] = a16;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  id v44 = swift_allocObject();
  *(float *)(v44 + 16) = a5;
  *(float *)(v44 + 20) = a6;
  *(float *)(v44 + 24) = a7;
  *(_DWORD *)(v44 + 28) = a18;
  *(unsigned char *)(v44 + 32) = v40;
  *(unsigned char *)(v44 + 33) = v42;
  *(void *)(v44 + 40) = sub_1853B5A24;
  *(void *)(v44 + 48) = v43;
  id v55 = *(NSObject **)(v51 + 264);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v51;
  *(void *)(v45 + 24) = v44;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1853C10BC;
  *(void *)(v46 + 24) = v45;
  *(void *)&double v63 = sub_1853BE6D4;
  *((void *)&v63 + 1) = v46;
  *(void *)&double v61 = MEMORY[0x1E4F143A8];
  *((void *)&v61 + 1) = 1107296256;
  *(void *)&double v62 = sub_1853BE46C;
  *((void *)&v62 + 1) = &block_descriptor_743;
  uint64_t v47 = _Block_copy(&v61);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v55, v47);
  _Block_release(v47);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  unint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v60);
    sub_1854AEC5C(v59);
    os_unfair_lock_unlock(v60);
    swift_release_n();
    sub_1853B93B8((uint64_t)v77, &qword_1E8FAFD90);
    sub_1854AECBC((uint64_t)v79);
    return swift_release();
  }
  return result;
}

uint64_t sub_1854AEC24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1854AEC3C(a1, a2);
}

uint64_t sub_1854AEC3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1854AEC5C(void *a1)
{
  return sub_1854AEC74(a1);
}

uint64_t sub_1854AEC74(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_release();
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1854AECBC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for InProcessAnimationDescription(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(unsigned __int8 *)(result + 80);
  if (v2 != 2)
  {
    if (v2 != 1) {
      return result;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(result);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

unint64_t sub_1854AED70()
{
  unint64_t result = qword_1E8FAFD80;
  if (!qword_1E8FAFD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8FAFD80);
  }
  return result;
}

double sub_1854AEDC4@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1854AEDD8(*(id *)v3, a1, a2, *(unsigned char *)(v3 + 8), a3);
}

double sub_1854AEDD8@<D0>(id a1@<X4>, char a2@<W0>, uint64_t a3@<X1>, char a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v8 = 1;
  if ((a2 & 1) == 0)
  {
    uint64_t v10 = type metadata accessor for InProcessAnimation();
    uint64_t v8 = 2
       * ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a3, 1, v10) != 1);
  }
  if (a4) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = 2;
  }
  objc_msgSend(a1, sel_parametersForTransitionFromState_toState_, v8, v11);
  uint64_t v12 = 256;
  if (!v16) {
    uint64_t v12 = 0;
  }
  double result = *(double *)&v14;
  *(_OWORD *)a5 = v14;
  *(void *)(a5 + 16) = v12 | v15 | 0x8000000000000000;
  *(_OWORD *)(a5 + 24) = v17;
  *(_OWORD *)(a5 + 40) = v18;
  *(_OWORD *)(a5 + 56) = v19;
  *(void *)(a5 + 72) = v20;
  *(unsigned char *)(a5 + 80) = 0;
  return result;
}

uint64_t sub_1854AEEE0()
{
  sub_1854AEF38();
  return swift_deallocClassInstance();
}

uint64_t sub_1854AEF38()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = type metadata accessor for InProcessAnimation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1854AFD40(*(void *)(v0 + *(void *)(*(void *)v0 + 112)));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t type metadata accessor for InProcessAnimation()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1854AF038(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (qword_1EB2569F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = off_1EB2569E8;
  if (*((void *)off_1EB2569E8 + 2) && (unint64_t v5 = sub_1854AF998(a1), (v6 & 1) != 0))
  {
    id v7 = *(id *)(v4[7] + 8 * v5);
    swift_endAccess();
    if (a2)
    {
      uint64_t v8 = self;
      sub_1854B0A60((uint64_t)a2);
      swift_unknownObjectRetain();
      if (objc_msgSend(v8, sel__isPlaceholderTraitToken_, v7))
      {
        uint64_t v9 = swift_unknownObjectRetain();
        uint64_t v10 = a2(v9);
        sub_1854AFD40((uint64_t)a2);
        swift_unknownObjectRelease_n();
        return (id)v10;
      }
      else
      {
        sub_1854AFD40((uint64_t)a2);
      }
    }
    else
    {
      swift_unknownObjectRetain();
    }
  }
  else
  {
    swift_endAccess();
    if (a2)
    {
      swift_retain();
      id v7 = (id)a2(0);
      sub_1854AFD40((uint64_t)a2);
    }
    else
    {
      if (qword_1EB2566A8 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EB256660;
      swift_bridgeObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v12 = self;
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_186A1E92C();
      swift_bridgeObjectRelease();
      long long v14 = (void *)sub_186A1E92C();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v12, sel__existingTraitTokenReservingPlaceholderIfNecessaryWithName_identifier_, v13, v14);
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v19 = off_1EB2569E8;
    off_1EB2569E8 = (_UNKNOWN *)0x8000000000000000;
    swift_getObjectType();
    sub_1854A5050((uint64_t)v7, a1, isUniquelyReferenced_nonNull_native, &v19);
    off_1EB2569E8 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v16 = qword_1EB256A00;
    swift_unknownObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    long long v19 = off_1EB2569F8;
    off_1EB2569F8 = (_UNKNOWN *)0x8000000000000000;
    sub_1854A56F4((uint64_t)&type metadata for UITraitTypesettingLanguage, (uint64_t)&protocol witness table for UITraitTypesettingLanguage, v7, v17);
    off_1EB2569F8 = v19;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  return v7;
}

uint64_t sub_1854AF3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = v5;
  uint64_t v11 = sub_1854AF474(v5, a5, (uint64_t)v10, a1, a2);
  swift_release();
  return v11;
}

uint64_t sub_1854AF474(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB2569D0 != -1) {
    swift_once();
  }
  if (qword_1EB256A10 != -1) {
    swift_once();
  }
  uint64_t v9 = (os_unfair_lock_t *)off_1EB256A08;
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1EB256A08 + 2));
  sub_1854AF55C(a1, a2, a1, a4, a5, &v11);
  os_unfair_lock_unlock(v9[2]);
  return v11;
}

uint64_t sub_1854AF55C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  if (qword_1EB2569F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = off_1EB2569E8;
  if (*((void *)off_1EB2569E8 + 2) && (unint64_t v12 = sub_1854AF998(a1), (v13 & 1) != 0))
  {
    id v14 = *(id *)(v11[7] + 8 * v12);
    swift_endAccess();
    if (a2)
    {
      unsigned __int8 v15 = self;
      swift_unknownObjectRetain();
      sub_1854B0A60((uint64_t)a2);
      if (objc_msgSend(v15, sel__isPlaceholderTraitToken_, v14))
      {
        uint64_t v16 = swift_unknownObjectRetain();
        uint64_t v17 = a2(v16);
        sub_1854AFD40((uint64_t)a2);
        uint64_t result = swift_unknownObjectRelease_n();
        id v14 = (id)v17;
      }
      else
      {
        uint64_t result = sub_1854AFD40((uint64_t)a2);
      }
    }
    else
    {
      uint64_t result = swift_unknownObjectRetain();
    }
  }
  else
  {
    swift_endAccess();
    if (a2)
    {
      swift_retain();
      id v14 = (id)a2(0);
      sub_1854AFD40((uint64_t)a2);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
      (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
      long long v19 = self;
      uint64_t v20 = (void *)sub_186A1E92C();
      swift_bridgeObjectRelease();
      int v21 = (void *)sub_186A1E92C();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v19, sel__existingTraitTokenReservingPlaceholderIfNecessaryWithName_identifier_, v20, v21);
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = off_1EB2569E8;
    off_1EB2569E8 = (_UNKNOWN *)0x8000000000000000;
    swift_getObjectType();
    sub_1854A5050((uint64_t)v14, a1, isUniquelyReferenced_nonNull_native, &v26);
    off_1EB2569E8 = v26;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v23 = qword_1EB256A00;
    swift_unknownObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = off_1EB2569F8;
    off_1EB2569F8 = (_UNKNOWN *)0x8000000000000000;
    sub_1854A56F4(a3, a5, v14, v24);
    off_1EB2569F8 = v26;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = swift_unknownObjectRelease();
  }
  *a6 = v14;
  return result;
}

unint64_t sub_1854AF8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1854AF998(uint64_t a1)
{
  sub_186A1F9EC();
  sub_186A1F9FC();
  uint64_t v2 = sub_186A1FA4C();
  return sub_1854AF8FC(a1, v2);
}

uint64_t sub_1854AFA04(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1854AFD50((uint64_t)&v19, a1, a4);
  swift_unknownObjectRelease();
  uint64_t result = swift_endAccess();
  if (a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan]) {
    return result;
  }
  uint64_t v8 = *(void *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback];
  if (!v8) {
    return result;
  }
  uint64_t v9 = *(void *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback
                    + 8];
  a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan] = 1;
  if ((a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe] & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1853BE6D4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1853BE46C;
  aBlock[3] = &block_descriptor_11;
  uint64_t v11 = _Block_copy(aBlock);
  sub_1854B0A60(v8);
  sub_1854B0A60(v8);
  sub_1854B0A60(v8);
  swift_retain();
  swift_release();
  __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__((uint64_t)v11);
  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t v13 = v8;
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_1854B0A60(v8);
    sub_1854B0A60(v8);
    sub_1854B0A60(v8);
    sub_1859254C8(v8, v9);
    uint64_t v14 = sub_1854AFD40(v8);
    unsigned __int8 v15 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties];
    MEMORY[0x1F4188790](v14);
    swift_retain();
    os_unfair_lock_lock(v15 + 6);
    sub_185902670();
    os_unfair_lock_unlock(v15 + 6);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
  }
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  uint64_t v17 = a2;
  sub_1853B65C4((uint64_t)sub_1859026A8, v16);
  sub_1854AFD40(v8);
  swift_release();
  sub_1854AFD40(v8);
  return sub_1854AFD40(v13);
}

uint64_t sub_1854AFD40(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1854AFD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_186A1F9EC();
  sub_186A1F9FC();
  uint64_t v8 = sub_186A1FA4C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (*(void *)(*(void *)(v7 + 48) + 16 * v10) != a2)
    {
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_unknownObjectRelease();
    *(_OWORD *)a1 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
    swift_unknownObjectRetain();
    return 0;
  }
  else
  {
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    uint64_t v13 = swift_unknownObjectRetain();
    sub_1854C253C(v13, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    return 1;
  }
}

uint64_t sub_1854AFE94()
{
  id v0 = objc_msgSend(self, sel_currentThread);
  id v1 = objc_msgSend(v0, sel_threadDictionary);

  if (qword_1E8FB0130 != -1) {
    swift_once();
  }
  id v2 = objc_msgSend(v1, sel_objectForKey_, qword_1E8FB0120);

  if (v2)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1853B8150((uint64_t)v5, (uint64_t)&v6, &qword_1EB256B10);
  if (v7)
  {
    sub_1853B7BB0(&v6, &v8);
    swift_dynamicCast();
    return v4;
  }
  else
  {
    sub_1853B93B8((uint64_t)&v6, &qword_1EB256B10);
    return 0;
  }
}

unint64_t sub_1854AFFDC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFC00);
  id v2 = (void *)sub_186A1F6CC();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1853B7020(v4, (uint64_t)&v18, &qword_1E8FB4940);
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    uint64_t v7 = v20;
    unint64_t result = sub_1854B74B4(v18, v19, v20);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v10 = (uint64_t *)(v2[6] + 24 * result);
    *unint64_t v10 = v5;
    v10[1] = v6;
    v10[2] = v7;
    uint64_t v11 = (_OWORD *)(v2[7] + 80 * result);
    *uint64_t v11 = v21;
    long long v12 = v22;
    long long v13 = v23;
    long long v14 = v25;
    v11[3] = v24;
    void v11[4] = v14;
    v11[1] = v12;
    v11[2] = v13;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 104;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1854B0140(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = ~v4;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = -v4;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v74 = a1;
  uint64_t v75 = a1 + 64;
  uint64_t v76 = v5;
  uint64_t v77 = 0;
  uint64_t v78 = v8 & v6;
  swift_bridgeObjectRetain();
  sub_1854B0610((uint64_t)v67);
  sub_1853B8150((uint64_t)v67, (uint64_t)v68, &qword_1E8FB00A0);
  char v9 = (void *)v68[0];
  if (!v68[0]) {
    return sub_1854B0880();
  }
  while (1)
  {
    uint64_t v11 = v68[1];
    uint64_t v10 = v68[2];
    v67[2] = v71;
    v67[3] = v72;
    v67[4] = v73;
    v67[0] = v69;
    v67[1] = v70;
    uint64_t v12 = *v3;
    if (!*(void *)(*v3 + 16))
    {
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      uint64_t v63 = 1;
      long long v64 = 0u;
      long long v65 = 0u;
      long long v66 = 0u;
LABEL_16:
      sub_1853B93B8((uint64_t)&v60, (uint64_t *)&unk_1E8FAFBF0);
      goto LABEL_17;
    }
    id v13 = v9;
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1854B74B4((uint64_t)v13, v11, v10);
    if (v15)
    {
      sub_1854B15E0(*(void *)(v12 + 56) + 80 * v14, (uint64_t)&v60);
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      uint64_t v63 = 1;
      long long v64 = 0u;
      long long v65 = 0u;
      long long v66 = 0u;
    }
    swift_bridgeObjectRelease();

    if (v63 == 1) {
      goto LABEL_16;
    }
    sub_1853B93B8((uint64_t)&v60, (uint64_t *)&unk_1E8FAFBF0);
    if (a2)
    {
      sub_1854B170C((uint64_t)v67);
      swift_bridgeObjectRelease();

      goto LABEL_9;
    }
LABEL_17:
    sub_1854B15E0((uint64_t)v67, (uint64_t)&v60);
    sub_1853B7020((uint64_t)&v60, (uint64_t)&v55, (uint64_t *)&unk_1E8FAFBF0);
    if (*((void *)&v56 + 1) == 1)
    {
      sub_1853B93B8((uint64_t)&v55, (uint64_t *)&unk_1E8FAFBF0);
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1854B74B4((uint64_t)v9, v11, v10);
      char v18 = v17;
      swift_bridgeObjectRelease();
      if (v18)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = *v3;
        uint64_t v48 = *v3;
        *uint64_t v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1859BCD5C();
          uint64_t v20 = v48;
        }
        long long v21 = *(void **)(*(void *)(v20 + 48) + 24 * v16);
        swift_bridgeObjectRelease();

        long long v22 = (long long *)(*(void *)(v20 + 56) + 80 * v16);
        long long v50 = *v22;
        long long v23 = v22[3];
        long long v24 = v22[4];
        long long v25 = v22[2];
        long long v51 = v22[1];
        long long v52 = v25;
        long long v53 = v23;
        long long v54 = v24;
        sub_1859B9C3C(v16, v20);
        *uint64_t v3 = v20;
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v50 = 0uLL;
        *(void *)&long long v51 = 0;
        *((void *)&v51 + 1) = 1;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v54 = 0u;
      }
      swift_bridgeObjectRelease();

      sub_1853B93B8((uint64_t)&v50, (uint64_t *)&unk_1E8FAFBF0);
      goto LABEL_8;
    }
    long long v52 = v57;
    long long v53 = v58;
    long long v54 = v59;
    long long v50 = v55;
    long long v51 = v56;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    int v49 = (void *)*v3;
    *uint64_t v3 = 0x8000000000000000;
    unint64_t v29 = sub_1854B74B4((uint64_t)v9, v11, v10);
    uint64_t v30 = *(void *)(v27 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (*(void *)(v27 + 24) >= v32)
    {
      if (v26)
      {
        uint64_t v36 = v49;
        if ((v28 & 1) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_1859BCD5C();
        uint64_t v36 = v49;
        if ((v33 & 1) == 0) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_1854B7630(v32, v26);
      unint64_t v34 = sub_1854B74B4((uint64_t)v9, v11, v10);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_39;
      }
      unint64_t v29 = v34;
      uint64_t v36 = v49;
      if ((v33 & 1) == 0)
      {
LABEL_33:
        v36[(v29 >> 6) + 8] |= 1 << v29;
        int v37 = (void *)(v36[6] + 24 * v29);
        void *v37 = v9;
        v37[1] = v11;
        v37[2] = v10;
        int v38 = (_OWORD *)(v36[7] + 80 * v29);
        *int v38 = v50;
        long long v39 = v51;
        long long v40 = v52;
        long long v41 = v54;
        v38[3] = v53;
        v38[4] = v41;
        v38[1] = v39;
        v38[2] = v40;
        uint64_t v42 = v36[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_38;
        }
        v36[2] = v44;
        id v45 = v9;
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
    }
    sub_1854C47E4((uint64_t)&v50, v36[7] + 80 * v29);
LABEL_35:
    *uint64_t v3 = (uint64_t)v36;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_8:
    sub_1853B93B8((uint64_t)&v60, (uint64_t *)&unk_1E8FAFBF0);
    sub_1854B170C((uint64_t)v67);
LABEL_9:
    sub_1854B0610((uint64_t)v67);
    sub_1853B8150((uint64_t)v67, (uint64_t)v68, &qword_1E8FB00A0);
    char v9 = (void *)v68[0];
    if (!v68[0]) {
      return sub_1854B0880();
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_186A1F93C();
  __break(1u);
  return result;
}

uint64_t sub_1854B0610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v27 = v1[2];
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_3;
  }
  int64_t v23 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v24 = (unint64_t)(v6 + 64) >> 6;
  if (v23 < v24)
  {
    unint64_t v25 = *(void *)(v3 + 8 * v23);
    if (v25)
    {
LABEL_8:
      uint64_t v27 = v1[2];
      uint64_t v9 = (v25 - 1) & v25;
      unint64_t v10 = __clz(__rbit64(v25)) + (v23 << 6);
      int64_t v7 = v23;
LABEL_3:
      uint64_t v11 = *(void *)(v4 + 56);
      uint64_t v12 = (void *)(*(void *)(v4 + 48) + 24 * v10);
      uint64_t v13 = v12[1];
      uint64_t v15 = v12[2];
      *(void *)unint64_t v29 = *v12;
      unint64_t v14 = *(void **)v29;
      *(void *)&v29[8] = v13;
      *(void *)&v29[16] = v15;
      sub_1854B15E0(v11 + 80 * v10, (uint64_t)&v29[24]);
      uint64_t v16 = *(void *)v29;
      *id v1 = v4;
      v1[1] = v3;
      v1[2] = v27;
      v1[3] = v7;
      v1[4] = v9;
      id v17 = v14;
      swift_bridgeObjectRetain();
      if (v16)
      {
        uint64_t v18 = *(void *)&v29[8];
        uint64_t v19 = *(void *)&v29[16];
        uint64_t v30 = v16;
        uint64_t v31 = *(void *)&v29[8];
        uint64_t v32 = *(void *)&v29[16];
        long long v35 = *(_OWORD *)&v29[56];
        long long v36 = *(_OWORD *)&v29[72];
        long long v37 = *(_OWORD *)&v29[88];
        long long v33 = *(_OWORD *)&v29[24];
        long long v34 = *(_OWORD *)&v29[40];
        *(void *)unint64_t v29 = v16;
        sub_1854B15E0((uint64_t)&v33, (uint64_t)&v29[24]);
        *(void *)a1 = v16;
        sub_1854B15E0((uint64_t)&v33, (uint64_t)v28);
        *(void *)(a1 + 8) = v18;
        *(void *)(a1 + 16) = v19;
        long long v20 = v33;
        *(_OWORD *)(a1 + 40) = v34;
        long long v21 = v36;
        *(_OWORD *)(a1 + 56) = v35;
        *(_OWORD *)(a1 + 72) = v21;
        *(_OWORD *)(a1 + 88) = v37;
        *(_OWORD *)(a1 + 24) = v20;
        sub_1854B170C((uint64_t)v28);
        return sub_1854B170C((uint64_t)&v29[24]);
      }
      goto LABEL_22;
    }
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v24)
    {
      unint64_t v25 = *(void *)(v3 + 8 * (v5 + 2));
      if (v25)
      {
        int64_t v23 = v5 + 2;
        goto LABEL_8;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v24)
      {
        unint64_t v25 = *(void *)(v3 + 8 * (v5 + 3));
        if (v25)
        {
          int64_t v23 = v5 + 3;
          goto LABEL_8;
        }
        int64_t v23 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v24)
        {
          unint64_t v25 = *(void *)(v3 + 8 * v23);
          if (v25) {
            goto LABEL_8;
          }
          int64_t v7 = v24 - 1;
          int64_t v26 = v5 + 5;
          while (v24 != v26)
          {
            unint64_t v25 = *(void *)(v3 + 8 * v26++);
            if (v25)
            {
              int64_t v23 = v26 - 1;
              goto LABEL_8;
            }
          }
        }
      }
    }
  }
  memset(v29, 0, sizeof(v29));
  *id v1 = v4;
  v1[1] = v3;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = 0;
LABEL_22:
  uint64_t result = sub_1853B93B8((uint64_t)v29, &qword_1E8FB0098);
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1854B0880()
{
  return swift_release();
}

uint64_t sub_1854B0888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (void *)__currentViewAnimationState;
  if (!__currentViewAnimationState) {
    return 0;
  }
  uint64_t v12 = *v8;
  _s23InProcessAnimationStateCMa();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v24 = a2;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a4;
    uint64_t v23 = a1;
    long long v20 = (void *)swift_allocObject();
    v20[2] = *(void *)(v12 + 80);
    id v20[3] = *(void *)(v12 + 88);
    void v20[4] = a5;
    v20[5] = a6;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a7;
    *(void *)(v21 + 24) = a8;
    id v22 = v9;
    sub_1854B0A60(a3);
    sub_1854B0A60(a5);
    sub_1854B0A60(a7);
    sub_1854B0A94(v23, v24, (uint64_t)sub_1853B673C, v19, (uint64_t)sub_1853B5A9C, (uint64_t)v20, (uint64_t)sub_1854A8768, v21, (uint64_t)v8);
    swift_release();
    swift_release();
    swift_release();

    return 1;
  }
  return result;
}

uint64_t sub_1854B0A60(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t _s23InProcessAnimationStateCMa()
{
  return self;
}

uint64_t sub_1854B0A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = *(ValueMetadata **)(*(void *)a9 + 80);
  uint64_t v14 = *((void *)v13[-1].Description + 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  int64_t v26 = (char *)&v129 - v25;
  if (v13 == &type metadata for UIAnimatableColorMatrix)
  {
    long long v41 = *(_OWORD *)(a1 + 48);
    v149[1] = *(_OWORD *)(a1 + 32);
    long long v150 = v41;
    long long v151 = *(_OWORD *)(a1 + 64);
    long long v42 = *(_OWORD *)(a1 + 16);
    long long v148 = *(_OWORD *)a1;
    v149[0] = v42;
    long long v43 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v22 + 176) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v22 + 192) = v43;
    *(_OWORD *)(v22 + 208) = *(_OWORD *)(a2 + 64);
    long long v44 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v22 + 144) = *(_OWORD *)a2;
    *(_OWORD *)(v22 + 160) = v44;
    return sub_185499138(&v148, v155, a3, v17, v18, v19, (uint64_t)v20, v21, a9);
  }
  if (v13 == &type metadata for UIAnimatableSize)
  {
    double v46 = *(double *)a1;
    double v47 = *(double *)(a1 + 8);
    double v48 = *(double *)a2;
    double v49 = *(double *)(a2 + 8);
    return sub_185934080(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v46, v47, v48, v49);
  }
  else if (v13 == &type metadata for UIAnimatableColorArray)
  {
    uint64_t v50 = *(void *)a1;
    uint64_t v51 = *(void *)a2;
    return sub_185933CDC(v50, v51, a3, v17, v18, v19, (uint64_t)v20, v21, a9);
  }
  else
  {
    if (v13 == &type metadata for UIAnimatableCornerRadii)
    {
      long long v52 = *(_OWORD *)(a1 + 16);
      long long v148 = *(_OWORD *)a1;
      v149[0] = v52;
      long long v53 = *(_OWORD *)(a1 + 48);
      v149[1] = *(_OWORD *)(a1 + 32);
      long long v150 = v53;
      long long v54 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v22 + 144) = *(_OWORD *)a2;
      *(_OWORD *)(v22 + 160) = v54;
      long long v55 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v22 + 176) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v22 + 192) = v55;
      return sub_185933954(&v148, v155, a3, v17, v18, v19, (uint64_t)v20, v21, a9);
    }
    if (v13 == &type metadata for UIAnimatableVector)
    {
      uint64_t v56 = *(void *)a1;
      uint64_t v57 = *(void *)a2;
      return sub_1859335BC(v56, v57, a3, v17, v18, v19, v20, v21, a9);
    }
    else
    {
      if (v13 == &type metadata for UIAnimatableMeshTransform)
      {
        long long v58 = *(_OWORD *)(a1 + 16);
        long long v148 = *(_OWORD *)a1;
        v149[0] = v58;
        *(void *)((char *)v149 + 13) = *(void *)(a1 + 29);
        long long v59 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(v22 + 144) = *(_OWORD *)a2;
        *(_OWORD *)(v22 + 160) = v59;
        *(void *)(v22 + 173) = *(void *)(a2 + 29);
        return sub_1859331B8((uint64_t)&v148, (uint64_t)v155, a3, v17, v18, v19, (uint64_t)v20, v21, a9);
      }
      if (v13 == &type metadata for UIAnimatableFloat)
      {
        double v60 = *(double *)a1;
        double v61 = *(double *)a2;
        return sub_1854B6F6C(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v60, v61);
      }
      else if (v13 == &type metadata for UIAnimatableNormalizedPoint)
      {
        double v62 = *(double *)a1;
        double v63 = *(double *)(a1 + 8);
        double v64 = *(double *)a2;
        double v65 = *(double *)(a2 + 8);
        return sub_185932E08(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v62, v63, v64, v65);
      }
      else if (v13 == &type metadata for UIAnimatableColor)
      {
        double v66 = *(double *)a1;
        double v67 = *(double *)(a1 + 8);
        double v68 = *(double *)(a1 + 16);
        double v69 = *(double *)(a1 + 24);
        double v70 = *(double *)a2;
        double v71 = *(double *)(a2 + 8);
        double v72 = *(double *)(a2 + 16);
        double v73 = *(double *)(a2 + 24);
        return sub_185932A38(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v66, v67, v68, v69, v70, v71, v72, v73);
      }
      else if (v13 == &type metadata for UIAnimatableScaledFloat)
      {
        double v74 = *(double *)a1;
        double v75 = *(double *)a2;
        return sub_1854B79BC(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v74, v75);
      }
      else if (v13 == &type metadata for UIAnimatableRect)
      {
        double v76 = *(double *)a1;
        double v77 = *(double *)(a1 + 8);
        double v78 = *(double *)(a1 + 16);
        double v79 = *(double *)(a1 + 24);
        double v80 = *(double *)a2;
        double v81 = *(double *)(a2 + 8);
        double v82 = *(double *)(a2 + 16);
        double v83 = *(double *)(a2 + 24);
        return sub_1854B17A0(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v76, v77, v78, v79, v80, v81, v82, v83);
      }
      else if (v13 == &type metadata for UIAnimatableNormalizedRect)
      {
        double v84 = *(double *)a1;
        double v85 = *(double *)(a1 + 8);
        double v86 = *(double *)(a1 + 16);
        double v87 = *(double *)(a1 + 24);
        double v88 = *(double *)a2;
        double v89 = *(double *)(a2 + 8);
        double v90 = *(double *)(a2 + 16);
        double v91 = *(double *)(a2 + 24);
        return sub_18549D37C(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v84, v85, v86, v87, v88, v89, v90, v91);
      }
      else
      {
        if (v13 == &type metadata for UIAnimatableTransform)
        {
          long long v92 = *(_OWORD *)(a1 + 96);
          *(_OWORD *)(v22 + 112) = *(_OWORD *)(a1 + 112);
          char v154 = *(unsigned char *)(a1 + 128);
          long long v93 = *(_OWORD *)(a1 + 48);
          v149[1] = *(_OWORD *)(a1 + 32);
          long long v150 = v93;
          long long v94 = *(_OWORD *)(a1 + 64);
          long long v152 = *(_OWORD *)(a1 + 80);
          long long v153 = v92;
          long long v151 = v94;
          long long v95 = *(_OWORD *)(a1 + 16);
          long long v148 = *(_OWORD *)a1;
          v149[0] = v95;
          long long v96 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(v22 + 240) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(v22 + 256) = v96;
          char v156 = *(unsigned char *)(a2 + 128);
          long long v97 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(v22 + 176) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v22 + 192) = v97;
          long long v98 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(v22 + 208) = *(_OWORD *)(a2 + 64);
          *(_OWORD *)(v22 + 224) = v98;
          long long v99 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(v22 + 144) = *(_OWORD *)a2;
          *(_OWORD *)(v22 + 160) = v99;
          return sub_1854B9040((uint64_t)&v148, v155, a3, v17, v18, v19, (uint64_t)v20, v21, a9);
        }
        if (v13 == &type metadata for UIAnimatablePoint)
        {
          double v100 = *(double *)a1;
          double v101 = *(double *)(a1 + 8);
          double v102 = *(double *)a2;
          double v103 = *(double *)(a2 + 8);
          return sub_1854B1B70(a3, v17, v18, v19, (uint64_t)v20, v21, a9, v100, v101, v102, v103);
        }
        else
        {
          uint64_t v139 = v24;
          uint64_t v140 = v18;
          uint64_t v141 = v17;
          uint64_t v142 = v20;
          uint64_t v143 = v19;
          uint64_t v144 = v21;
          long long v145 = &v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
          uint64_t v146 = v23;
          swift_beginAccess();
          sub_1853B7020((uint64_t)v145, (uint64_t)&v148, &qword_1EB255C18);
          if (*((void *)&v149[0] + 1))
          {
            sub_1854B1F20(&v148, (uint64_t)v155);
            LODWORD(v145) = v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
            objc_msgSend(v9, sel_preferredFrameRateRange);
            int v28 = v27;
            int v30 = v29;
            int v32 = v31;
            unsigned int v138 = objc_msgSend(v9, sel_updateReason);
            id v147 = v9;
            if (v145 == 3)
            {
              long long v40 = (uint64_t (*)(char))signpost_c2_removePresentationModifier_end;
              uint64_t v137 = 0;
            }
            else
            {
              objc_msgSend(v9, sel__incrementDidEndCount);
              uint64_t v137 = a9 + *(void *)(*(void *)a9 + 152);
              uint64_t v33 = MEMORY[0x18C109380]();
              if (!v33) {
                goto LABEL_19;
              }
              long long v34 = (void *)v33;
              uint64_t v135 = _s23InProcessAnimationStateCMa();
              double v136 = (uint64_t (*)(char))v147;
              uint64_t v134 = v34;
              LODWORD(v135) = sub_186A1F0AC();
              id v35 = v134;

              if ((v135 & 1) == 0)
              {
LABEL_19:
                long long v36 = (void *)MEMORY[0x18C109380](v137);

                if (v36)
                {
                  long long v37 = (unsigned char *)MEMORY[0x18C109380](v137);
                  if (v37)
                  {
                    v37[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
                  }
                }
                swift_unknownObjectWeakAssign();
              }
              uint64_t v137 = swift_allocObject();
              id v38 = v147;
              *(void *)(v137 + 16) = v147;
              id v39 = v38;
              long long v40 = sub_1854A84EC;
            }
            uint64_t v104 = *(void *)(*(void *)a9 + 168);
            uint64_t v105 = *(void *)(a9 + v104);
            BOOL v106 = __OFADD__(v105, 1);
            uint64_t v107 = v105 + 1;
            uint64_t v108 = v146;
            if (v106)
            {
              __break(1u);
            }
            else
            {
              double v136 = v40;
              *(void *)(a9 + v104) = v107;
              if (qword_1E8FB0100 == -1)
              {
LABEL_61:
                LODWORD(v135) = v145 != 3;
                long long v145 = (unsigned __int8 *)qword_1E8FD58B0;
                uint64_t v109 = a1;
                uint64_t v110 = *(void (**)(char *, uint64_t, ValueMetadata *))(v108 + 16);
                v110(v26, v109, v13);
                v110(v15, a2, v13);
                sub_1854B1F38((uint64_t)v155, (uint64_t)&v148);
                uint64_t v111 = v146;
                uint64_t v112 = *(unsigned __int8 *)(v146 + 80);
                uint64_t v113 = (v112 + 48) & ~v112;
                uint64_t v129 = (v14 + v112 + v113) & ~v112;
                unint64_t v114 = (v14 + v129 + 7) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v130 = (v114 + 47) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v131 = (v130 + 23) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v132 = (v131 + 23) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v133 = (v132 + 27) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v134 = (char *)((v133 + 19) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v115 = swift_allocObject();
                *(void *)(v115 + 16) = v13;
                *(void *)(v115 + 24) = *(void *)(v139 + 88);
                *(void *)(v115 + 32) = a9;
                *(void *)(v115 + 40) = v147;
                uint64_t v116 = (char *)(v115 + v113);
                unint64_t v117 = *(void (**)(char *, char *, ValueMetadata *))(v111 + 32);
                v117(v116, v26, v13);
                v117((char *)(v115 + v129), v15, v13);
                sub_1854B1F20(&v148, v115 + v114);
                float v118 = (uint64_t *)(v115 + v130);
                uint64_t v119 = v140;
                uint64_t v120 = v141;
                *float v118 = a3;
                v118[1] = v120;
                int v121 = (uint64_t *)(v115 + v131);
                uint64_t v123 = v143;
                uint64_t v122 = v144;
                *int v121 = v119;
                v121[1] = v123;
                uint64_t v124 = (char *)(v115 + v132);
                *(void *)uint64_t v124 = v142;
                *((void *)v124 + 1) = v122;
                v124[16] = v135;
                *((_DWORD *)v124 + 5) = v138;
                unint64_t v125 = (_DWORD *)(v115 + v133);
                *unint64_t v125 = v28;
                v125[1] = v30;
                v125[2] = v32;
                uint64_t v126 = &v134[v115];
                uint64_t v127 = v137;
                *(void *)uint64_t v126 = v136;
                *((void *)v126 + 1) = v127;
                id v128 = v147;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1854B1FD4((uint64_t)sub_18595AF20, v115);
                swift_release();
                swift_release();
                return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v155);
              }
            }
            swift_once();
            uint64_t v108 = v146;
            goto LABEL_61;
          }
          sub_1853B93B8((uint64_t)&v148, &qword_1EB255C18);
          uint64_t result = sub_186A1F60C();
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1854B15E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s15PropertyChangesV4InfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  int64_t v7 = (_OWORD *)(a1 + 40);
  unint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *int64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  return a1;
}

uint64_t sub_1854B170C(uint64_t a1)
{
  return a1;
}

uint64_t _s15PropertyChangesV4InfoVwxx(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm(result);
  }
  if (*(void *)(v1 + 64)) {
    return __swift_destroy_boxed_opaque_existential_0Tm(v1 + 40);
  }
  return result;
}

uint64_t sub_1854B17A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t v16 = v15;
  uint64_t v28 = (uint64_t)&v15[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v28, (uint64_t)&v62, &qword_1EB255C18);
  if (v63)
  {
    uint64_t v60 = a3;
    uint64_t v61 = a5;
    sub_1854B1F20(&v62, (uint64_t)v64);
    int v29 = v16[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v16, sel_preferredFrameRateRange);
    int v31 = v30;
    int v33 = v32;
    int v35 = v34;
    unsigned int v55 = objc_msgSend(v16, sel_updateReason);
    if (v29 == 3)
    {
      double v47 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v45 = 0;
    }
    else
    {
      objc_msgSend(v16, sel__incrementDidEndCount);
      uint64_t v36 = MEMORY[0x18C109380](a7 + 256);
      if (!v36) {
        goto LABEL_5;
      }
      long long v37 = (void *)v36;
      _s23InProcessAnimationStateCMa();
      id v38 = v16;
      int v54 = v29;
      uint64_t v39 = a2;
      uint64_t v40 = a4;
      uint64_t v41 = a6;
      id v42 = v37;
      LOBYTE(v37) = sub_186A1F0AC();

      a6 = v41;
      a4 = v40;
      a2 = v39;
      int v29 = v54;

      if ((v37 & 1) == 0)
      {
LABEL_5:
        long long v43 = (void *)MEMORY[0x18C109380](a7 + 256);

        if (v43)
        {
          long long v44 = (unsigned char *)MEMORY[0x18C109380](a7 + 256);
          if (v44)
          {
            v44[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v16;
      double v46 = v16;
      double v47 = sub_1854A84E8;
    }
    uint64_t v48 = *(void *)(a7 + 272);
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a7 + 272) = v50;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v64, (uint64_t)&v62);
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = a7;
        *(void *)(v51 + 24) = v16;
        *(double *)(v51 + 32) = a8;
        *(double *)(v51 + 40) = a9;
        *(double *)(v51 + 48) = a10;
        *(double *)(v51 + 56) = a11;
        *(double *)(v51 + 64) = a12;
        *(double *)(v51 + 72) = a13;
        *(double *)(v51 + 80) = a14;
        *(double *)(v51 + 88) = a15;
        sub_1854B1F20(&v62, v51 + 96);
        *(void *)(v51 + 136) = a1;
        *(void *)(v51 + 144) = a2;
        *(void *)(v51 + 152) = v60;
        *(void *)(v51 + 160) = a4;
        *(void *)(v51 + 168) = v61;
        *(void *)(v51 + 176) = a6;
        *(unsigned char *)(v51 + 184) = v29 != 3;
        *(_DWORD *)(v51 + 188) = v55;
        *(_DWORD *)(v51 + 192) = v31;
        *(_DWORD *)(v51 + 196) = v33;
        *(_DWORD *)(v51 + 200) = v35;
        *(void *)(v51 + 208) = v47;
        *(void *)(v51 + 216) = v45;
        long long v52 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1853C3734, v51);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v62, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

uint64_t sub_1854B1B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  uint64_t v12 = v11;
  uint64_t v23 = (uint64_t)&v11[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v23, (uint64_t)&v54, &qword_1EB255C18);
  if (v55)
  {
    uint64_t v52 = a3;
    uint64_t v53 = a5;
    sub_1854B1F20(&v54, (uint64_t)v56);
    int v24 = v12[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v12, sel_preferredFrameRateRange);
    int v26 = v25;
    int v28 = v27;
    int v30 = v29;
    unsigned int v50 = objc_msgSend(v12, sel_updateReason);
    if (v24 == 3)
    {
      id v42 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v40 = 0;
    }
    else
    {
      objc_msgSend(v12, sel__incrementDidEndCount);
      uint64_t v31 = MEMORY[0x18C109380](a7 + 176);
      if (!v31) {
        goto LABEL_5;
      }
      int v32 = (void *)v31;
      _s23InProcessAnimationStateCMa();
      int v33 = v12;
      int v49 = v24;
      uint64_t v34 = a2;
      uint64_t v35 = a4;
      uint64_t v36 = a6;
      id v37 = v32;
      LOBYTE(v32) = sub_186A1F0AC();

      a6 = v36;
      a4 = v35;
      a2 = v34;
      int v24 = v49;

      if ((v32 & 1) == 0)
      {
LABEL_5:
        id v38 = (void *)MEMORY[0x18C109380](a7 + 176);

        if (v38)
        {
          uint64_t v39 = (unsigned char *)MEMORY[0x18C109380](a7 + 176);
          if (v39)
          {
            v39[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v12;
      uint64_t v41 = v12;
      id v42 = sub_1854A84E8;
    }
    uint64_t v43 = *(void *)(a7 + 192);
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a7 + 192) = v45;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v56, (uint64_t)&v54);
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = a7;
        *(void *)(v46 + 24) = v12;
        *(double *)(v46 + 32) = a8;
        *(double *)(v46 + 40) = a9;
        *(double *)(v46 + 48) = a10;
        *(double *)(v46 + 56) = a11;
        sub_1854B1F20(&v54, v46 + 64);
        *(void *)(v46 + 104) = a1;
        *(void *)(v46 + 112) = a2;
        *(void *)(v46 + 120) = v52;
        *(void *)(v46 + 128) = a4;
        *(void *)(v46 + 136) = v53;
        *(void *)(v46 + 144) = a6;
        *(unsigned char *)(v46 + 152) = v24 != 3;
        *(_DWORD *)(v46 + 156) = v50;
        *(_DWORD *)(v46 + 160) = v26;
        *(_DWORD *)(v46 + 164) = v28;
        *(_DWORD *)(v46 + 168) = v30;
        *(void *)(v46 + 176) = v42;
        *(void *)(v46 + 184) = v40;
        double v47 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1853C3668, v46);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v54, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

uint64_t sub_1854B1F20(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1854B1F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _s6GetterVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

void sub_1854B1FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  long long v6 = (void *)(v2 + 88);
  swift_beginAccess();
  int64_t v7 = *(void **)(v2 + 88);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 88) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    int64_t v7 = sub_1853BFC18(0, v7[2] + 1, 1, v7);
    *long long v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    int64_t v7 = sub_1853BFC18((void *)(v9 > 1), v10 + 1, 1, v7);
    *long long v6 = v7;
  }
  void v7[2] = v10 + 1;
  long long v11 = &v7[2 * v10];
  void v11[4] = sub_1853B59A8;
  v11[5] = v5;
  swift_endAccess();
  if ((*(unsigned char *)(v2 + 296) & 1) == 0)
  {
    uint64_t v12 = (void *)MEMORY[0x18C109380](v2 + 304);

    if (!v12)
    {
      uint64_t v13 = self;
      swift_retain();
      unsigned int v14 = objc_msgSend(v13, sel_currentPhase);
      uint64_t v15 = self;
      if (v14 == -1)
      {
        uint64_t v23 = sub_1856AAC5C;
        uint64_t v24 = v2;
        uint64_t v19 = MEMORY[0x1E4F143A8];
        uint64_t v20 = 1107296256;
        uint64_t v21 = sub_1856A95EC;
        uint64_t v22 = &block_descriptor_109_0;
        uint64_t v16 = _Block_copy(&v19);
        swift_retain();
        swift_release();
        uint64_t v17 = &selRef_scheduledPreCommitFuture_;
      }
      else
      {
        uint64_t v23 = sub_1856AAC5C;
        uint64_t v24 = v2;
        uint64_t v19 = MEMORY[0x1E4F143A8];
        uint64_t v20 = 1107296256;
        uint64_t v21 = sub_1856A95EC;
        uint64_t v22 = &block_descriptor_106_0;
        uint64_t v16 = _Block_copy(&v19);
        swift_retain();
        swift_release();
        uint64_t v17 = &selRef_scheduledPostCommitFuture_;
      }
      id v18 = objc_msgSend(v15, *v17, v16);
      swift_release();
      _Block_release(v16);
      swift_unknownObjectWeakAssign();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for UICellAccessory.LabelOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1854B22B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v6 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    unint64_t v9 = (void *)MEMORY[0x18C109380](v2 + 24);
    double v10 = 0.0;
    if (v9)
    {
      long long v11 = v9;
      id v12 = objc_msgSend(v9, sel_layer);

      uint64_t v13 = (void *)sub_186A1E92C();
      id v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186A1F1CC();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v32, 0, sizeof(v32));
      }
      sub_1853B7020((uint64_t)v32, (uint64_t)&v30, &qword_1EB256B10);
      if (v31)
      {
        sub_1853B7BB0(&v30, v29);
        sub_1853B76BC((uint64_t)v29, (uint64_t)v28);
        sub_1853B76BC((uint64_t)v28, (uint64_t)v27);
        sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
        swift_dynamicCast();
        objc_msgSend(v26, sel_CGRectValue);
        double v10 = v15;
        double v17 = v16;
        double v19 = v18;
        double v21 = v20;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
        sub_1853B93B8((uint64_t)v32, &qword_1EB256B10);
LABEL_13:
        uint64_t v22 = swift_allocObject();
        swift_weakInit();
        uint64_t v23 = (void *)swift_allocObject();
        _OWORD v23[2] = v22;
        v23[3] = a1;
        v23[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFD28);
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1854B3688((uint64_t)sub_1854A9390, (uint64_t)v23, v10, v17, v19, v21);
        swift_release();
        *(unsigned char *)(v8 + 264) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v30 = *(void *)(v3 + 48);
        *(void *)(v3 + 48) = 0x8000000000000000;
        sub_1854B2A5C(v8, a1, a2, isUniquelyReferenced_nonNull_native, (void **)&v30, &qword_1E8FAFD20, &qword_1E8FAFD28);
        *(void *)(v3 + 48) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_1853B93B8((uint64_t)v32, &qword_1EB256B10);
    }
    double v17 = 0.0;
    double v19 = 0.0;
    double v21 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1853B7718(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFD28);
  uint64_t v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_1854B2C88(&qword_1E8FAFD20, &qword_1E8FAFD28);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1854B2698(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v6 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    unint64_t v9 = (void *)MEMORY[0x18C109380](v2 + 24);
    double v10 = 0.0;
    if (v9)
    {
      long long v11 = v9;
      id v12 = objc_msgSend(v9, sel_layer);

      uint64_t v13 = (void *)sub_186A1E92C();
      id v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186A1F1CC();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v28, 0, sizeof(v28));
      }
      sub_1853B7020((uint64_t)v28, (uint64_t)&v26, &qword_1EB256B10);
      if (v27)
      {
        sub_1853B7BB0(&v26, v25);
        sub_1853B76BC((uint64_t)v25, (uint64_t)v24);
        sub_1853B76BC((uint64_t)v24, (uint64_t)v23);
        sub_1853B985C(0, (unint64_t *)&qword_1E8FAFEF0);
        swift_dynamicCast();
        objc_msgSend(v22, sel_CGPointValue);
        double v10 = v15;
        double v17 = v16;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        sub_1853B93B8((uint64_t)v28, &qword_1EB256B10);
LABEL_13:
        uint64_t v18 = swift_allocObject();
        swift_weakInit();
        double v19 = (void *)swift_allocObject();
        v19[2] = v18;
        v19[3] = a1;
        v19[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFDB0);
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1854B3028((uint64_t)sub_1854A9390, (uint64_t)v19, v10, v17);
        swift_release();
        *(unsigned char *)(v8 + 184) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v26 = *(void *)(v3 + 48);
        *(void *)(v3 + 48) = 0x8000000000000000;
        sub_1854B2A5C(v8, a1, a2, isUniquelyReferenced_nonNull_native, (void **)&v26, &qword_1E8FAFDA8, &qword_1E8FAFDB0);
        *(void *)(v3 + 48) = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_1853B93B8((uint64_t)v28, &qword_1EB256B10);
    }
    double v17 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1853B7718(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFDB0);
  uint64_t v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_1854B2C88(&qword_1E8FAFDA8, &qword_1E8FAFDB0);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1854B2A5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void **a5, unint64_t *a6, uint64_t *a7)
{
  uint64_t v14 = (uint64_t)*a5;
  unint64_t v16 = sub_1853B7718(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
  {
LABEL_7:
    if (v20)
    {
LABEL_8:
      uint64_t v22 = sub_1854B2C88(a6, a7);
      uint64_t v23 = (uint64_t *)((*a5)[7] + 16 * v16);
      uint64_t result = swift_unknownObjectRelease();
      *uint64_t v23 = a1;
      v23[1] = v22;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    sub_1859BD118();
    goto LABEL_7;
  }
  sub_1854B2D1C(v19, a4 & 1);
  unint64_t v25 = sub_1853B7718(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_186A1F93C();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1854B2BDC(v16, a2, a3, a1, *a5, a6, a7);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1854B2BDC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, unint64_t *a6, uint64_t *a7)
{
  uint64_t result = sub_1854B2C88(a6, a7);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v13 = (void *)(a5[6] + 16 * a1);
  *uint64_t v13 = a2;
  v13[1] = a3;
  uint64_t v14 = (void *)(a5[7] + 16 * a1);
  *uint64_t v14 = a4;
  v14[1] = result;
  uint64_t v15 = a5[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a5[2] = v17;
  }
  return result;
}

uint64_t sub_1854B2C88(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1854B2CCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1854B2D1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E8FAFF00);
  char v6 = a2;
  uint64_t v7 = sub_186A1F6AC();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      sub_186A1F9EC();
      sub_186A1E9BC();
      uint64_t result = sub_186A1FA4C();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      char v20 = (void *)(*(void *)(v8 + 48) + v19);
      *char v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1854B3028(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_1854B303C(a1, a2, &qword_1E8FAFDC0, &qword_1E8FAFDB8, a3, a4);
}

uint64_t sub_1854B303C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5, double a6)
{
  int64_t v23 = a4;
  uint64_t v8 = v6;
  uint64_t v22 = sub_186A1EF8C();
  uint64_t v13 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v17 - 8);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = 0;
  *(void *)(v8 + 32) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00B0);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = 0;
  *(void *)(v8 + 40) = v19;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 64) = 1;
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 72) = 0;
  *(unsigned char *)(v8 + 88) = 1;
  *(void *)(v8 + 104) = 0;
  *(void *)(v8 + 112) = 0;
  *(void *)(v8 + 96) = 0;
  *(unsigned char *)(v8 + 120) = 1;
  *(void *)(v8 + 128) = 0;
  *(void *)(v8 + 136) = 0;
  *(_WORD *)(v8 + 144) = 1;
  *(void *)(v8 + 152) = 0;
  *(void *)(v8 + 160) = 0;
  *(unsigned char *)(v8 + 168) = 1;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v8 + 200) = 0;
  *(void *)(v8 + 208) = a1;
  *(void *)(v8 + 216) = a2;
  sub_1854B3328();
  swift_retain();
  sub_186A1EF5C();
  sub_186A1E6DC();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCC58], v22);
  *(void *)(v8 + 16) = sub_186A1EFCC();
  __swift_instantiateConcreteTypeFromMangledName(v23);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 48) = 0;
  *(double *)(v20 + 16) = a5;
  *(double *)(v20 + 24) = a6;
  *(double *)(v20 + 32) = a5;
  *(double *)(v20 + 40) = a6;
  *(void *)(v8 + 24) = v20;
  swift_beginAccess();
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 72) = 0;
  *(unsigned char *)(v8 + 88) = 1;
  swift_beginAccess();
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 64) = 1;
  *(unsigned char *)(v8 + 184) = 0;
  *(void *)(v8 + 192) = 0;
  return v8;
}

unint64_t sub_1854B3328()
{
  unint64_t result = qword_1EB256300;
  if (!qword_1EB256300)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB256300);
  }
  return result;
}

uint64_t sub_1854B3368(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5, double a6, double a7, double a8)
{
  BOOL v28 = a4;
  uint64_t v10 = v8;
  uint64_t v27 = sub_186A1EF8C();
  uint64_t v17 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v21 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v21 - 8);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = 0;
  *(void *)(v10 + 32) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00B0);
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + 24) = 0;
  *(void *)(v23 + 16) = 0;
  *(void *)(v10 + 40) = v23;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(unsigned char *)(v10 + 80) = 1;
  *(_OWORD *)(v10 + 104) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(unsigned char *)(v10 + 120) = 1;
  char v31 = 1;
  char v30 = 1;
  char v29 = 1;
  *(_OWORD *)(v10 + 128) = 0u;
  *(_OWORD *)(v10 + 144) = 0u;
  *(void *)(v10 + 160) = 0;
  *(unsigned char *)(v10 + 168) = 1;
  *(_OWORD *)(v10 + 176) = 0u;
  *(_OWORD *)(v10 + 192) = 0u;
  *(_WORD *)(v10 + 208) = 1;
  *(_OWORD *)(v10 + 216) = 0u;
  *(_OWORD *)(v10 + 232) = 0u;
  *(unsigned char *)(v10 + 248) = 1;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v10 + 280) = 0;
  *(void *)(v10 + 288) = a1;
  *(void *)(v10 + 296) = a2;
  sub_1854B3328();
  swift_retain();
  sub_186A1EF5C();
  sub_186A1E6DC();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCC58], v27);
  *(void *)(v10 + 16) = sub_186A1EFCC();
  __swift_instantiateConcreteTypeFromMangledName(v28);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 80) = 0;
  *(double *)(v24 + 16) = a5;
  *(double *)(v24 + 24) = a6;
  *(double *)(v24 + 32) = a7;
  *(double *)(v24 + 40) = a8;
  *(double *)(v24 + 48) = a5;
  *(double *)(v24 + 56) = a6;
  *(double *)(v24 + 64) = a7;
  *(double *)(v24 + 72) = a8;
  *(void *)(v10 + 24) = v24;
  swift_beginAccess();
  *(_OWORD *)(v10 + 104) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(unsigned char *)(v10 + 120) = 1;
  swift_beginAccess();
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(unsigned char *)(v10 + 80) = 1;
  *(unsigned char *)(v10 + 264) = 0;
  *(void *)(v10 + 272) = 0;
  return v10;
}

uint64_t sub_1854B3688(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1854B3368(a1, a2, &qword_1E8FAFD38, &qword_1E8FAFD30, a3, a4, a5, a6);
}

double sub_1854B36A0@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 80) = 3;
  return result;
}

void sub_1854B36BC(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, unint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, uint64_t *a11)
{
  void (*v79)(double *__return_ptr, double *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v83;
  long long v84;
  int8x16_t v85;
  int8x16_t v86;
  int8x16_t v87;
  int8x16_t v88;
  uint64_t v89;
  long long v90;
  int8x16_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int8x16_t v94;
  long long v95;
  long long v96;
  long long v97;
  long long v98;
  long long v99;
  long long v100;
  long long v101;
  char v102;
  long long v103;
  int8x16_t v104;
  int8x16_t v105;
  int8x16_t v106;
  int8x16_t v107;
  long long v108;
  long long v109;
  long long v110;
  long long v111;
  long long v112;
  long long v113;
  long long v114;
  unsigned __int8 v115;
  double v116[10];
  double v117;
  double v118;
  uint64_t v119;
  double v120;

  uint64_t v15 = v11;
  *(unsigned char *)(v15 + 33) = a3;
  sub_1854B5564(a2, (uint64_t)&v103);
  if (v108 == 2)
  {
    sub_1854B1F20(&v103, (uint64_t)&v84);
    sub_1853B7020(a1, (uint64_t)&v103, a4);
    if (v115 == 2)
    {
      long long v92 = v105;
      long long v93 = v106;
      long long v94 = v107;
      *(void *)&long long v95 = v108;
      double v90 = v103;
      double v91 = v104;
      uint64_t v36 = v85.i64[1];
      uint64_t v37 = v86.i64[0];
      __swift_project_boxed_opaque_existential_0Tm(&v84, v85.i64[1]);
      uint64_t v38 = v94.i64[0];
      double v39 = *(double *)&v90;
      *(double *)&double v103 = *(double *)v94.i64 - *(double *)v93.i64;
      uint64_t v40 = *(uint64_t (**)(char *, long long *, long long *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v37 + 24);
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v42 = sub_1854B2C88(a6, a5);
      if (v40((char *)&v90 + 8, &v103, &v95, v41, v42, v36, v37, v39))
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)&v90 + 1, (uint64_t *)&v84);
        *(double *)v94.i64 = a10;
      }
      else
      {
        v93.i64[0] = v38;
        v93.i64[1] = v38;
        *(double *)v94.i64 = a10;
        __swift_assign_boxed_opaque_existential_1((uint64_t *)&v90 + 1, (uint64_t *)&v84);
        *(void *)&double v90 = 0;
        unint64_t v43 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        *(void *)&long long v95 = v43;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v84);
      int8x16_t v44 = v93;
      *(int8x16_t *)(a8 + 32) = v92;
      *(int8x16_t *)(a8 + 48) = v44;
      *(int8x16_t *)(a8 + 64) = v94;
      *(void *)(a8 + 80) = v95;
      int8x16_t v45 = v91;
      *(_OWORD *)a8 = v90;
      *(int8x16_t *)(a8 + 16) = v45;
    }
    else
    {
      if (v115 == 255) {
        uint64_t v22 = a4;
      }
      else {
        uint64_t v22 = a7;
      }
      sub_1853B93B8((uint64_t)&v103, v22);
      sub_1854B1F38((uint64_t)&v84, a8 + 8);
      *(void *)a8 = 0;
      *(_WORD *)(a8 + 72) = 0;
      *(void *)(a8 + 80) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *(double *)(a8 + 48) = a9;
      *(double *)(a8 + 56) = a9;
      *(double *)(a8 + 64) = a10;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v84);
    }
    char v25 = 2;
    goto LABEL_20;
  }
  sub_1854B5730((uint64_t)&v103);
  sub_1854B5564(a2, (uint64_t)&v103);
  if (v108 == 1)
  {
    long long v92 = v105;
    long long v93 = v106;
    long long v94 = v107;
    double v90 = v103;
    double v91 = v104;
    sub_1854B1F38((uint64_t)&v90, (uint64_t)&v103);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D78);
    swift_dynamicCast();
    sub_1854B1F38((uint64_t)&v92.i64[1], (uint64_t)&v84);
    swift_dynamicCast();
    double v23 = v117;
    double v24 = v116[0];
    *(double *)a8 = v116[0];
    *(double *)(a8 + 8) = v23;
    *(double *)(a8 + 16) = v23;
    *(_OWORD *)(a8 + 24) = xmmword_186B85510;
    *(double *)(a8 + 40) = v24;
    sub_185965DD4((uint64_t)&v90);
    char v25 = 1;
LABEL_20:
    *(unsigned char *)(a8 + 192) = v25;
    return;
  }
  sub_1854B5730((uint64_t)&v103);
  double v80 = a5;
  if (a3)
  {
    double v81 = a7;
    double v26 = CACurrentMediaTime();
    double v27 = *(double *)v15;
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    double v28 = v26 - v27;
    uint64_t v29 = qword_1E8FD58B0;
    double v30 = *(double *)(qword_1E8FD58B0 + 240);
    if (v30 == 0.0)
    {
      char v31 = self;
      id v32 = objc_msgSend(v31, sel_mainScreen);
      uint64_t v33 = (uint64_t)objc_msgSend(v32, sel_maximumFramesPerSecond);

      if (v33 < 1)
      {
        uint64_t v35 = 60;
      }
      else
      {
        id v34 = objc_msgSend(v31, sel_mainScreen);
        uint64_t v35 = (uint64_t)objc_msgSend(v34, sel_maximumFramesPerSecond);
      }
      double v30 = 1.0 / ((double)v35 * 1.001);
      *(double *)(v29 + 240) = v30;
    }
    a7 = v81;
    if (v30 * 0.9 < v28)
    {
      if (v27 != 0.0)
      {
        if (*(unsigned char *)(v15 + 48))
        {
          *(void *)(v15 + 40) = 0;
          *(unsigned char *)(v15 + 48) = 0;
        }
        else
        {
          double v46 = a10;
          if ((*(unsigned char *)(v15 + 32) & 1) == 0) {
            double v46 = a10 - *(double *)(v15 + 24);
          }
          *(double *)(v15 + 40) = *(double *)(v15 + 40) * 0.25 + 1.0 / v28 * v46 * 0.75;
        }
      }
      *(unsigned char *)(v15 + 16) = 0;
      *(double *)uint64_t v15 = v26;
      *(double *)(v15 + 8) = a9;
    }
  }
  double v47 = *(double *)(v15 + 24);
  char v48 = *(unsigned char *)(v15 + 32);
  *(double *)(v15 + 24) = a10;
  *(unsigned char *)(v15 + 32) = 0;
  sub_1853B7020(a1, (uint64_t)&v103, a4);
  if (v115)
  {
    if (v115 == 255) {
      int v49 = a4;
    }
    else {
      int v49 = a7;
    }
    sub_1853B93B8((uint64_t)&v103, v49);
LABEL_40:
    sub_1853B7020(a1, (uint64_t)&v103, a4);
    if (v115 == 3)
    {
      double v51 = *((double *)&v103 + 1);
      sub_1854B5564(a2, (uint64_t)&v103);
      if (v108 == 3
        && (int8x16_t v52 = vorrq_s8(vorrq_s8(v104, v106), vorrq_s8(v105, v107)),
            !(*(void *)&vorr_s8(*(int8x8_t *)v52.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL)) | *((void *)&v103 + 1) | (unint64_t)v103))
        || (sub_1854B5730((uint64_t)&v103), sub_1854B5564(a2, (uint64_t)&v103), v108 == 3)
        && (void)v103 == 1
        && (int8x16_t v53 = vorrq_s8(vorrq_s8(v104, v106), vorrq_s8(v105, v107)),
            !(*(void *)&vorr_s8(*(int8x8_t *)v53.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL)) | *((void *)&v103 + 1))))
      {
        sub_1854B5730((uint64_t)&v103);
        *(double *)a8 = a10;
        *(double *)(a8 + 8) = v51;
        char v25 = 3;
        goto LABEL_20;
      }
      sub_1854B5730((uint64_t)&v103);
      sub_1854B5564(a2, (uint64_t)&v103);
      if (!(_BYTE)v108)
      {
        double v56 = v51;
        uint64_t v62 = a8;
        uint64_t v63 = a2;
        double v64 = a9;
        char v61 = 0;
LABEL_65:
        sub_1854B60C4(v63, v56, v61, v62, v64, a10);
        return;
      }
      sub_1854B5730((uint64_t)&v103);
    }
    else if (v115 == 255)
    {
      sub_1853B93B8((uint64_t)&v103, a4);
    }
    else
    {
      sub_1853B93B8((uint64_t)&v103, a7);
    }
    sub_1853B7020(a1, (uint64_t)&v103, a4);
    int v54 = v115;
    if (v115 == 255)
    {
      sub_1853B93B8((uint64_t)&v103, a4);
      double v56 = 0.0;
    }
    else
    {
      sub_1853B7020((uint64_t)&v103, (uint64_t)&v90, a7);
      double v55 = 0.0;
      switch(v102)
      {
        case 1:
          break;
        case 2:
          double v86 = v92;
          double v87 = v93;
          double v88 = v94;
          double v89 = v95;
          double v84 = v90;
          double v85 = v91;
          int8x16_t v57 = v92;
          __swift_project_boxed_opaque_existential_0Tm((void *)&v84 + 1, v92.i64[0]);
          double v58 = *(double *)&v84;
          v116[0] = *(double *)v88.i64 - *(double *)v87.i64;
          double v83 = v89;
          double v79 = *(void (**)(double *__return_ptr, double *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v57.i64[1] + 32);
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(v80);
          uint64_t v60 = sub_1854B2C88(a6, v80);
          v79(&v117, v116, &v83, v59, v60, v57.i64[0], v57.i64[1], v58);
          if (LOBYTE(v118)) {
            double v55 = 0.0;
          }
          else {
            double v55 = v117;
          }
          sub_1853B93B8((uint64_t)&v84, a11);
          break;
        case 3:
          double v55 = *((double *)&v90 + 1);
          break;
        default:
          double v55 = *(double *)&v100;
          break;
      }
      sub_1853B93B8((uint64_t)&v103, a7);
      double v56 = v55;
    }
    char v61 = v54 == 255;
    uint64_t v62 = a8;
    uint64_t v63 = a2;
    double v64 = a9;
    goto LABEL_65;
  }
  long long v98 = v111;
  long long v99 = v112;
  double v100 = v113;
  double v101 = v114;
  long long v94 = v107;
  long long v95 = v108;
  long long v96 = v109;
  long long v97 = v110;
  double v90 = v103;
  double v91 = v104;
  long long v92 = v105;
  long long v93 = v106;
  sub_1854B5564(a2, (uint64_t)&v84);
  if (v89 == 3
    && (void)v84 == 1
    && (int8x16_t v50 = vorrq_s8(vorrq_s8(v85, v87), vorrq_s8(v86, v88)),
        !(*(void *)&vorr_s8(*(int8x8_t *)v50.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL)) | *((void *)&v84 + 1))))
  {
    sub_1854B5730((uint64_t)&v84);
  }
  else
  {
    sub_1854B5730((uint64_t)&v84);
    sub_1854B5564(a2, (uint64_t)&v84);
    if ((_BYTE)v89)
    {
      sub_1854B5730((uint64_t)&v84);
      goto LABEL_40;
    }
    sub_1854B5EC0((uint64_t)&v84, (uint64_t)v116);
    if ((a3 & 1) == 0)
    {
      sub_1854B5EC0((uint64_t)v116, (uint64_t)&v84);
      if (v85.i64[0] < 0)
      {
        v85.i64[0] &= ~0x8000000000000000;
        if (*(double *)v88.i64 > 0.0 && (*(unsigned char *)(v15 + 48) & 1) == 0) {
          *(double *)&double v101 = *(double *)&v101
        }
                           + *(double *)v88.i64 / 1000.0 / (1.0 - *(double *)v88.i64) * *(double *)(v15 + 40);
      }
      *(void *)(v15 + 40) = 0;
      *(unsigned char *)(v15 + 48) = 1;
      *(void *)uint64_t v15 = 0;
    }
    sub_1854B5EC0((uint64_t)v116, (uint64_t)&v117);
    if (v119 < 0)
    {
      v119 &= ~0x8000000000000000;
      char v65 = v120 <= 0.0 ? 1 : v48;
      if ((v65 & 1) == 0) {
        *(double *)&double v100 = *(double *)&v100 + (a10 - v47) * (v120 * (6.28318531 / v118 * (6.28318531 / v118)));
      }
    }
    sub_1854B6314((uint64_t)v116, 0);
  }
  uint64_t v66 = v94.i64[0];
  __int8 v67 = v94.i8[8];
  uint64_t v68 = v96;
  char v69 = BYTE8(v96);
  uint64_t v70 = v98;
  char v71 = BYTE8(v98);
  char v72 = BYTE9(v98);
  char v73 = BYTE10(v98);
  char v74 = BYTE11(v98);
  uint64_t v75 = v99;
  int8x16_t v76 = v91;
  *(_OWORD *)a8 = v90;
  *(int8x16_t *)(a8 + 16) = v76;
  int8x16_t v77 = v93;
  *(int8x16_t *)(a8 + 32) = v92;
  *(int8x16_t *)(a8 + 48) = v77;
  *(void *)(a8 + 64) = v66;
  *(unsigned char *)(a8 + 72) = v67;
  *(_OWORD *)(a8 + 80) = v95;
  *(void *)(a8 + 96) = v68;
  *(unsigned char *)(a8 + 104) = v69;
  *(_OWORD *)(a8 + 112) = v97;
  *(void *)(a8 + 128) = v70;
  *(unsigned char *)(a8 + 136) = v71;
  *(unsigned char *)(a8 + 137) = v72;
  *(unsigned char *)(a8 + 138) = v73;
  *(unsigned char *)(a8 + 139) = v74;
  *(void *)(a8 + 144) = v75;
  *(double *)(a8 + 152) = a10;
  long long v78 = v101;
  *(_OWORD *)(a8 + 160) = v100;
  *(_OWORD *)(a8 + 176) = v78;
  *(unsigned char *)(a8 + 192) = 0;
}

void sub_1854B4128(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, unint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, double a14@<D5>, double a15@<D6>, double a16@<D7>, uint64_t *a17, uint64_t *a18)
{
  uint64_t v22 = v18;
  *(unsigned char *)(v22 + 81) = a3;
  sub_1854B5564(a2, (uint64_t)__src);
  if (LOBYTE(__src[5]) == 2)
  {
    sub_1854B1F20(__src, (uint64_t)&v113);
    sub_1853B7020(a1, (uint64_t)__src, a4);
    if (v126 == 2)
    {
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      char __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[0] = __src[0];
      __dst[1] = __src[1];
      sub_18594CCCC((uint64_t *)&v113, a5, a6, a13, a14, a15, a16);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v113);
      long long v50 = __dst[7];
      *(_OWORD *)(a8 + 96) = __dst[6];
      *(_OWORD *)(a8 + 112) = v50;
      long long v51 = __dst[9];
      *(_OWORD *)(a8 + 128) = __dst[8];
      *(_OWORD *)(a8 + 144) = v51;
      long long v52 = __dst[3];
      *(_OWORD *)(a8 + 32) = __dst[2];
      *(_OWORD *)(a8 + 48) = v52;
      long long v53 = __dst[5];
      *(_OWORD *)(a8 + 64) = __dst[4];
      *(_OWORD *)(a8 + 80) = v53;
      long long v54 = __dst[1];
      *(_OWORD *)a8 = __dst[0];
      *(_OWORD *)(a8 + 16) = v54;
    }
    else
    {
      if (v126 == 255) {
        char v31 = a4;
      }
      else {
        char v31 = a7;
      }
      sub_1853B93B8((uint64_t)__src, v31);
      sub_1854B1F38((uint64_t)&v113, a8 + 8);
      *(void *)a8 = 0;
      *(_WORD *)(a8 + 144) = 0;
      *(void *)(a8 + 152) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *(double *)(a8 + 48) = a9;
      *(double *)(a8 + 56) = a10;
      *(double *)(a8 + 64) = a11;
      *(double *)(a8 + 72) = a12;
      *(double *)(a8 + 80) = a9;
      *(double *)(a8 + 88) = a10;
      *(double *)(a8 + 96) = a11;
      *(double *)(a8 + 104) = a12;
      *(double *)(a8 + 112) = a13;
      *(double *)(a8 + 120) = a14;
      *(double *)(a8 + 128) = a15;
      *(double *)(a8 + 136) = a16;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v113);
    }
    char v40 = 2;
    goto LABEL_17;
  }
  sub_1854B5730((uint64_t)__src);
  sub_1854B5564(a2, (uint64_t)__src);
  if (LOBYTE(__src[5]) == 1)
  {
    __dst[2] = __src[2];
    __dst[3] = __src[3];
    __dst[4] = __src[4];
    __dst[0] = __src[0];
    __dst[1] = __src[1];
    sub_1854B1F38((uint64_t)__dst, (uint64_t)__src);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D78);
    swift_dynamicCast();
    sub_1854B1F38((uint64_t)&__dst[2] + 8, (uint64_t)&v113);
    swift_dynamicCast();
    uint64_t v32 = v128;
    double v33 = v129;
    uint64_t v34 = v130;
    uint64_t v35 = v131;
    uint64_t v36 = v127[0];
    uint64_t v37 = v127[1];
    uint64_t v38 = v127[2];
    uint64_t v39 = v127[3];
    *(void *)(a8 + 64) = v128;
    *(double *)(a8 + 72) = v33;
    *(void *)(a8 + 80) = v34;
    *(void *)(a8 + 88) = v35;
    *(void *)(a8 + 112) = v36;
    *(void *)(a8 + 120) = v37;
    *(void *)(a8 + 128) = v38;
    *(void *)(a8 + 136) = v39;
    *(void *)a8 = v36;
    *(void *)(a8 + 8) = v37;
    *(void *)(a8 + 16) = v38;
    *(void *)(a8 + 24) = v39;
    *(void *)(a8 + 32) = v32;
    *(double *)(a8 + 40) = v33;
    *(void *)(a8 + 48) = v34;
    *(void *)(a8 + 56) = v35;
    *(_OWORD *)(a8 + 96) = xmmword_186B85510;
    sub_185965DD4((uint64_t)__dst);
    char v40 = 1;
LABEL_17:
    *(unsigned char *)(a8 + 336) = v40;
    return;
  }
  sub_1854B5730((uint64_t)__src);
  if (a3)
  {
    double v41 = CACurrentMediaTime();
    double v42 = *(double *)v22;
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    double v43 = v41 - v42;
    double v44 = *(double *)(qword_1E8FD58B0 + 240);
    if (v44 == 0.0)
    {
      uint64_t v103 = qword_1E8FD58B0;
      uint64_t v104 = a6;
      BOOL v106 = a7;
      int8x16_t v45 = self;
      id v46 = objc_msgSend(v45, sel_mainScreen);
      uint64_t v47 = (uint64_t)objc_msgSend(v46, sel_maximumFramesPerSecond);

      if (v47 < 1)
      {
        uint64_t v49 = 60;
      }
      else
      {
        id v48 = objc_msgSend(v45, sel_mainScreen);
        uint64_t v49 = (uint64_t)objc_msgSend(v48, sel_maximumFramesPerSecond);
      }
      double v44 = 1.0 / ((double)v49 * 1.001);
      a6 = v104;
      *(double *)(v103 + 240) = v44;
      a7 = v106;
    }
    if (v44 * 0.9 < v43)
    {
      if (v42 != 0.0)
      {
        if (*(unsigned char *)(v22 + 120))
        {
          *(unsigned char *)(v22 + 120) = 0;
          *(_OWORD *)(v22 + 88) = 0u;
          *(_OWORD *)(v22 + 104) = 0u;
        }
        else
        {
          v55.f64[0] = a13;
          v55.f64[1] = a14;
          v56.f64[0] = a15;
          v56.f64[1] = a16;
          if ((*(unsigned char *)(v22 + 80) & 1) == 0)
          {
            float64x2_t v55 = vsubq_f64(v55, *(float64x2_t *)(v22 + 48));
            float64x2_t v56 = vsubq_f64(v56, *(float64x2_t *)(v22 + 64));
          }
          __asm
          {
            FMOV            V4.2D, #0.25
            FMOV            V5.2D, #0.75
          }
          *(float64x2_t *)(v22 + 88) = vaddq_f64(vmulq_f64(vmulq_n_f64(v55, 1.0 / v43), _Q5), vmulq_f64(*(float64x2_t *)(v22 + 88), _Q4));
          *(float64x2_t *)(v22 + 104) = vaddq_f64(vmulq_f64(vmulq_n_f64(v56, 1.0 / v43), _Q5), vmulq_f64(*(float64x2_t *)(v22 + 104), _Q4));
        }
      }
      *(double *)(v22 + 16) = a10;
      *(double *)(v22 + 24) = a11;
      *(double *)(v22 + 32) = a12;
      *(unsigned char *)(v22 + 40) = 0;
      *(double *)uint64_t v22 = v41;
      *(double *)(v22 + 8) = a9;
    }
  }
  uint64_t v63 = a6;
  float64x2_t v105 = *(float64x2_t *)(v22 + 48);
  float64x2_t v107 = *(float64x2_t *)(v22 + 64);
  char v64 = *(unsigned char *)(v22 + 80);
  *(double *)(v22 + 48) = a13;
  *(double *)(v22 + 56) = a14;
  *(double *)(v22 + 64) = a15;
  *(double *)(v22 + 72) = a16;
  *(unsigned char *)(v22 + 80) = 0;
  sub_1853B7020(a1, (uint64_t)__src, a4);
  if (v126)
  {
    if (v126 == 255) {
      sub_1853B93B8((uint64_t)__src, a4);
    }
    else {
      sub_1853B93B8((uint64_t)__src, a7);
    }
LABEL_38:
    sub_1853B7020(a1, (uint64_t)__src, a4);
    if (v126 == 3)
    {
      long long v66 = __src[2];
      long long v67 = __src[3];
      sub_1854B5564(a2, (uint64_t)__src);
      if (LOBYTE(__src[5]) == 3
        && (int8x16_t v68 = vorrq_s8(vorrq_s8((int8x16_t)__src[1], (int8x16_t)__src[3]), vorrq_s8((int8x16_t)__src[2], (int8x16_t)__src[4])), !(*(void *)&vorr_s8(*(int8x8_t *)v68.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL)) | *((void *)&__src[0] + 1) | *(void *)&__src[0]))|| (sub_1854B5730((uint64_t)__src), sub_1854B5564(a2, (uint64_t)__src), LOBYTE(__src[5]) == 3)&& *(void *)&__src[0] == 1&& (v69 = vorrq_s8(vorrq_s8((int8x16_t)__src[1], (int8x16_t)__src[3]), vorrq_s8((int8x16_t)__src[2], (int8x16_t)__src[4])), !(*(void *)&vorr_s8(*(int8x8_t *)v69.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL)) | *((void *)&__src[0] + 1))))
      {
        sub_1854B5730((uint64_t)__src);
        *(double *)a8 = a13;
        *(double *)(a8 + 8) = a14;
        *(double *)(a8 + 16) = a15;
        *(double *)(a8 + 24) = a16;
        *(_OWORD *)(a8 + 32) = v66;
        *(_OWORD *)(a8 + 48) = v67;
        char v40 = 3;
        goto LABEL_17;
      }
      sub_1854B5730((uint64_t)__src);
      sub_1854B5564(a2, (uint64_t)__src);
      if (!LOBYTE(__src[5]))
      {
        __src[0] = v66;
        __src[1] = v67;
        LOBYTE(__src[2]) = 0;
        double v79 = __src;
LABEL_58:
        sub_1854B5A38(a2, (uint64_t)v79, a17, (unsigned char *)a8, a9, a10, a11, a12, a13, a14, a15, a16);
        return;
      }
      sub_1854B5730((uint64_t)__src);
    }
    else if (v126 == 255)
    {
      sub_1853B93B8((uint64_t)__src, a4);
    }
    else
    {
      sub_1853B93B8((uint64_t)__src, a7);
    }
    sub_1853B7020(a1, (uint64_t)__src, a4);
    int v70 = v126;
    if (v126 == 255)
    {
      sub_1853B93B8((uint64_t)__src, a4);
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
    }
    else
    {
      sub_1853B7020((uint64_t)__src, (uint64_t)__dst, a7);
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      switch(v124)
      {
        case 1:
          break;
        case 2:
          long long v119 = __dst[6];
          long long v120 = __dst[7];
          long long v121 = __dst[8];
          long long v122 = __dst[9];
          int8x16_t v115 = (int8x16_t)__dst[2];
          int8x16_t v116 = (int8x16_t)__dst[3];
          int8x16_t v117 = (int8x16_t)__dst[4];
          long long v118 = __dst[5];
          long long v113 = __dst[0];
          int8x16_t v114 = (int8x16_t)__dst[1];
          sub_18594C260(a5, v63);
          uint64_t v71 = v75;
          uint64_t v72 = v76;
          uint64_t v73 = v77;
          uint64_t v74 = v78;
          sub_1853B93B8((uint64_t)&v113, a18);
          break;
        case 3:
          uint64_t v72 = *((void *)&__dst[2] + 1);
          uint64_t v71 = *(void *)&__dst[2];
          uint64_t v74 = *((void *)&__dst[3] + 1);
          uint64_t v73 = *(void *)&__dst[3];
          break;
        default:
          uint64_t v72 = *((void *)&__dst[13] + 1);
          uint64_t v71 = *(void *)&__dst[13];
          uint64_t v74 = *((void *)&__dst[14] + 1);
          uint64_t v73 = *(void *)&__dst[14];
          break;
      }
      sub_1853B93B8((uint64_t)__src, a7);
    }
    *(void *)&__dst[0] = v71;
    *((void *)&__dst[0] + 1) = v72;
    *(void *)&__dst[1] = v73;
    *((void *)&__dst[1] + 1) = v74;
    LOBYTE(__dst[2]) = v70 == 255;
    double v79 = __dst;
    goto LABEL_58;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_1854B5564(a2, (uint64_t)&v113);
  if (v118 == 3
    && (void)v113 == 1
    && (int8x16_t v65 = vorrq_s8(vorrq_s8(v114, v116), vorrq_s8(v115, v117)),
        !(*(void *)&vorr_s8(*(int8x8_t *)v65.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)) | *((void *)&v113 + 1))))
  {
    sub_1854B5730((uint64_t)&v113);
  }
  else
  {
    sub_1854B5730((uint64_t)&v113);
    sub_1854B5564(a2, (uint64_t)&v113);
    if ((_BYTE)v118)
    {
      sub_1854B5730((uint64_t)&v113);
      goto LABEL_38;
    }
    sub_1854B5EC0((uint64_t)&v113, (uint64_t)v127);
    if ((a3 & 1) == 0)
    {
      sub_1854B5EC0((uint64_t)v127, (uint64_t)&v113);
      if (v114.i64[0] < 0)
      {
        v114.i64[0] &= ~0x8000000000000000;
        if (*(double *)v117.i64 > 0.0 && (*(unsigned char *)(v22 + 120) & 1) == 0)
        {
          double v80 = *(double *)v117.i64 / 1000.0 / (1.0 - *(double *)v117.i64);
          float64x2_t v81 = vaddq_f64((float64x2_t)__dst[17], vmulq_n_f64(*(float64x2_t *)(v22 + 88), v80));
          float64x2_t v82 = vaddq_f64(vmulq_n_f64(*(float64x2_t *)(v22 + 104), v80), (float64x2_t)__dst[18]);
          __dst[17] = v81;
          __dst[18] = v82;
        }
      }
      *(_OWORD *)(v22 + 104) = 0u;
      *(_OWORD *)(v22 + 88) = 0u;
      *(unsigned char *)(v22 + 120) = 1;
      *(void *)uint64_t v22 = 0;
    }
    sub_1854B5EC0((uint64_t)v127, (uint64_t)&v128);
    if (v130 < 0)
    {
      v130 &= ~0x8000000000000000;
      char v83 = v132 <= 0.0 ? 1 : v64;
      if ((v83 & 1) == 0)
      {
        v84.f64[0] = a13;
        v84.f64[1] = a14;
        v85.f64[0] = a15;
        v85.f64[1] = a16;
        double v86 = v132 * (6.28318531 / v129 * (6.28318531 / v129));
        __dst[13] = vaddq_f64((float64x2_t)__dst[13], vmulq_n_f64(vsubq_f64(v84, v105), v86));
        __dst[14] = vaddq_f64((float64x2_t)__dst[14], vmulq_n_f64(vsubq_f64(v85, v107), v86));
      }
    }
    sub_1854B5F1C((uint64_t)v127, 0);
  }
  uint64_t v87 = *(void *)&__dst[4];
  char v88 = BYTE8(__dst[4]);
  uint64_t v89 = *(void *)&__dst[6];
  char v90 = BYTE8(__dst[6]);
  char v91 = __dst[10];
  char v92 = BYTE1(__dst[10]);
  char v93 = BYTE2(__dst[10]);
  char v94 = BYTE3(__dst[10]);
  uint64_t v95 = *((void *)&__dst[10] + 1);
  long long v96 = __dst[1];
  *(_OWORD *)a8 = __dst[0];
  *(_OWORD *)(a8 + 16) = v96;
  long long v97 = __dst[3];
  *(_OWORD *)(a8 + 32) = __dst[2];
  *(_OWORD *)(a8 + 48) = v97;
  *(void *)(a8 + 64) = v87;
  *(unsigned char *)(a8 + 72) = v88;
  *(_OWORD *)(a8 + 80) = __dst[5];
  *(void *)(a8 + 96) = v89;
  *(unsigned char *)(a8 + 104) = v90;
  long long v98 = __dst[8];
  *(_OWORD *)(a8 + 112) = __dst[7];
  *(_OWORD *)(a8 + 128) = v98;
  *(_OWORD *)(a8 + 144) = __dst[9];
  *(unsigned char *)(a8 + 160) = v91;
  *(unsigned char *)(a8 + 161) = v92;
  *(unsigned char *)(a8 + 162) = v93;
  *(unsigned char *)(a8 + 163) = v94;
  *(void *)(a8 + 168) = v95;
  *(double *)(a8 + 176) = a13;
  *(double *)(a8 + 184) = a14;
  *(double *)(a8 + 192) = a15;
  *(double *)(a8 + 200) = a16;
  long long v99 = __dst[14];
  *(_OWORD *)(a8 + 208) = __dst[13];
  *(_OWORD *)(a8 + 224) = v99;
  long long v100 = __dst[16];
  *(_OWORD *)(a8 + 240) = __dst[15];
  *(_OWORD *)(a8 + 256) = v100;
  long long v101 = __dst[18];
  *(_OWORD *)(a8 + 272) = __dst[17];
  *(_OWORD *)(a8 + 288) = v101;
  long long v102 = __dst[20];
  *(_OWORD *)(a8 + 304) = __dst[19];
  *(_OWORD *)(a8 + 320) = v102;
  *(unsigned char *)(a8 + 336) = 0;
}

void sub_1854B4B10(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, unint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, uint64_t *a13)
{
  void (*v98)(double *__return_ptr, _OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, double);
  uint64_t *v99;
  float64x2_t v100;
  float64x2_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v107;
  float64x2_t v108;
  int8x16_t v109;
  int8x16_t v110;
  float64x2_t v111;
  int8x16_t v112;
  float64x2_t v113;
  long long v114;
  float64x2_t v115;
  int8x16_t v116;
  int8x16_t v117;
  float64x2_t v118;
  int8x16_t v119;
  float64x2_t v120;
  long long v121;
  long long v122;
  long long v123;
  long long v124;
  long long v125;
  float64x2_t v126;
  long long v127;
  float64x2_t v128;
  long long v129;
  char v130;
  float64x2_t v131;
  int8x16_t v132;
  int8x16_t v133;
  int8x16_t v134;
  int8x16_t v135;
  float64x2_t v136;
  long long v137;
  long long v138;
  long long v139;
  long long v140;
  long long v141;
  float64x2_t v142;
  long long v143;
  float64x2_t v144;
  long long v145;
  unsigned __int8 v146;
  _OWORD v147[5];
  double v148;
  double v149;
  uint64_t v150;
  double v151;

  uint64_t v17 = v13;
  *(unsigned char *)(v17 + 49) = a3;
  sub_1854B5564(a2, (uint64_t)&v131);
  if (LOBYTE(v136.f64[0]) == 2)
  {
    sub_1854B1F20((long long *)&v131, (uint64_t)&v108);
    sub_1853B7020(a1, (uint64_t)&v131, a4);
    if (v146 == 2)
    {
      long long v118 = (float64x2_t)v134;
      long long v119 = v135;
      long long v120 = v136;
      long long v121 = v137;
      int8x16_t v115 = v131;
      int8x16_t v116 = v132;
      int8x16_t v117 = v133;
      uint64_t v40 = v109.i64[1];
      uint64_t v39 = v110.i64[0];
      __swift_project_boxed_opaque_existential_0Tm(&v108, v109.i64[1]);
      long long v100 = v120;
      uint64_t v131 = vsubq_f64(v120, v118);
      double v41 = v115.f64[0];
      double v42 = *(uint64_t (**)(float64_t *, float64x2_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v39 + 24);
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v44 = sub_1854B2C88(a6, a5);
      if (v42(&v115.f64[1], &v131, (char *)&v121 + 8, v43, v44, v40, v39, v41))
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)&v115.f64[1], (uint64_t *)&v108);
        v120.f64[0] = a11;
        v120.f64[1] = a12;
      }
      else
      {
        long long v118 = v100;
        long long v119 = (int8x16_t)v100;
        v120.f64[0] = a11;
        v120.f64[1] = a12;
        __swift_assign_boxed_opaque_existential_1((uint64_t *)&v115.f64[1], (uint64_t *)&v108);
        v115.f64[0] = 0.0;
        unint64_t v45 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        *((void *)&v121 + 1) = v45;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v108);
      float64x2_t v46 = v118;
      float64x2_t v47 = v120;
      long long v48 = v121;
      *(int8x16_t *)(a8 + 64) = v119;
      *(float64x2_t *)(a8 + 80) = v47;
      *(_OWORD *)(a8 + 96) = v48;
      int8x16_t v49 = v116;
      int8x16_t v50 = v117;
      *(float64x2_t *)a8 = v115;
      *(int8x16_t *)(a8 + 16) = v49;
      *(int8x16_t *)(a8 + 32) = v50;
      *(float64x2_t *)(a8 + 48) = v46;
    }
    else
    {
      if (v146 == 255) {
        double v24 = a4;
      }
      else {
        double v24 = a7;
      }
      sub_1853B93B8((uint64_t)&v131, v24);
      sub_1854B1F38((uint64_t)&v108, a8 + 8);
      *(void *)a8 = 0;
      *(_WORD *)(a8 + 96) = 0;
      *(void *)(a8 + 104) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *(double *)(a8 + 48) = a9;
      *(double *)(a8 + 56) = a10;
      *(double *)(a8 + 64) = a9;
      *(double *)(a8 + 72) = a10;
      *(double *)(a8 + 80) = a11;
      *(double *)(a8 + 88) = a12;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v108);
    }
    char v28 = 2;
    goto LABEL_20;
  }
  sub_1854B5730((uint64_t)&v131);
  sub_1854B5564(a2, (uint64_t)&v131);
  if (LOBYTE(v136.f64[0]) == 1)
  {
    int8x16_t v116 = v132;
    int8x16_t v117 = v133;
    long long v118 = (float64x2_t)v134;
    long long v119 = v135;
    int8x16_t v115 = v131;
    sub_1854B1F38((uint64_t)&v115, (uint64_t)&v131);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D78);
    swift_dynamicCast();
    sub_1854B1F38((uint64_t)&v117.i64[1], (uint64_t)&v108);
    swift_dynamicCast();
    double v25 = v148;
    double v26 = v149;
    long long v27 = v147[0];
    *(double *)(a8 + 32) = v148;
    *(double *)(a8 + 40) = v26;
    *(_OWORD *)(a8 + 64) = v27;
    *(_OWORD *)a8 = v27;
    *(double *)(a8 + 16) = v25;
    *(double *)(a8 + 24) = v26;
    *(_OWORD *)(a8 + 48) = xmmword_186B85510;
    sub_185965DD4((uint64_t)&v115);
    char v28 = 1;
LABEL_20:
    *(unsigned char *)(a8 + 240) = v28;
    return;
  }
  sub_1854B5730((uint64_t)&v131);
  uint64_t v103 = a5;
  if (a3)
  {
    double v29 = CACurrentMediaTime();
    double v30 = *(double *)v17;
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    double v31 = v29 - v30;
    double v32 = *(double *)(qword_1E8FD58B0 + 240);
    if (v32 == 0.0)
    {
      uint64_t v33 = qword_1E8FD58B0;
      long long v99 = a7;
      uint64_t v34 = self;
      id v35 = objc_msgSend(v34, sel_mainScreen);
      uint64_t v36 = (uint64_t)objc_msgSend(v35, sel_maximumFramesPerSecond);

      if (v36 < 1)
      {
        uint64_t v38 = 60;
      }
      else
      {
        id v37 = objc_msgSend(v34, sel_mainScreen);
        uint64_t v38 = (uint64_t)objc_msgSend(v37, sel_maximumFramesPerSecond);
      }
      double v32 = 1.0 / ((double)v38 * 1.001);
      *(double *)(v33 + 240) = v32;
      a7 = v99;
    }
    if (v32 * 0.9 < v31)
    {
      if (v30 != 0.0)
      {
        long long v51 = (float64x2_t *)(v17 + 56);
        if (*(unsigned char *)(v17 + 72))
        {
          v51->f64[0] = 0.0;
          *(void *)(v17 + 64) = 0;
          *(unsigned char *)(v17 + 72) = 0;
        }
        else
        {
          v52.f64[0] = a11;
          v52.f64[1] = a12;
          if ((*(unsigned char *)(v17 + 48) & 1) == 0) {
            float64x2_t v52 = vsubq_f64(v52, *(float64x2_t *)(v17 + 32));
          }
          __asm
          {
            FMOV            V3.2D, #0.25
            FMOV            V1.2D, #0.75
          }
          *long long v51 = vaddq_f64(vmulq_f64(vmulq_n_f64(v52, 1.0 / v31), _Q1), vmulq_f64(*v51, _Q3));
        }
      }
      *(double *)(v17 + 8) = a9;
      *(double *)(v17 + 16) = a10;
      *(unsigned char *)(v17 + 24) = 0;
      *(double *)uint64_t v17 = v29;
    }
  }
  long long v101 = *(float64x2_t *)(v17 + 32);
  char v59 = *(unsigned char *)(v17 + 48);
  *(double *)(v17 + 32) = a11;
  *(double *)(v17 + 40) = a12;
  *(unsigned char *)(v17 + 48) = 0;
  sub_1853B7020(a1, (uint64_t)&v131, a4);
  if (v146)
  {
    if (v146 == 255) {
      uint64_t v60 = a4;
    }
    else {
      uint64_t v60 = a7;
    }
    sub_1853B93B8((uint64_t)&v131, v60);
LABEL_40:
    sub_1853B7020(a1, (uint64_t)&v131, a4);
    if (v146 == 3)
    {
      int8x16_t v62 = v132;
      sub_1854B5564(a2, (uint64_t)&v131);
      if (LOBYTE(v136.f64[0]) == 3
        && (int8x16_t v63 = vorrq_s8(vorrq_s8(v132, v134), vorrq_s8(v133, v135)),
            !(*(void *)&vorr_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL)) | *(void *)&v131.f64[1] | *(void *)&v131.f64[0]))
        || (sub_1854B5730((uint64_t)&v131), sub_1854B5564(a2, (uint64_t)&v131), LOBYTE(v136.f64[0]) == 3)
        && *(void *)&v131.f64[0] == 1
        && (int8x16_t v64 = vorrq_s8(vorrq_s8(v132, v134), vorrq_s8(v133, v135)),
            !(*(void *)&vorr_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)) | *(void *)&v131.f64[1])))
      {
        sub_1854B5730((uint64_t)&v131);
        *(double *)a8 = a11;
        *(double *)(a8 + 8) = a12;
        *(int8x16_t *)(a8 + 16) = v62;
        char v28 = 3;
        goto LABEL_20;
      }
      sub_1854B5730((uint64_t)&v131);
      sub_1854B5564(a2, (uint64_t)&v131);
      if (!LOBYTE(v136.f64[0]))
      {
        double v79 = *(double *)&v62.i64[1];
        double v78 = *(double *)v62.i64;
        uint64_t v74 = a8;
        uint64_t v75 = a2;
        double v76 = a9;
        double v77 = a10;
        char v80 = 0;
LABEL_67:
        sub_1854B57F4(v75, v78, v79, v80, v74, v76, v77, a11, a12);
        return;
      }
      sub_1854B5730((uint64_t)&v131);
    }
    else if (v146 == 255)
    {
      sub_1853B93B8((uint64_t)&v131, a4);
    }
    else
    {
      sub_1853B93B8((uint64_t)&v131, a7);
    }
    sub_1853B7020(a1, (uint64_t)&v131, a4);
    int v65 = v146;
    if (v146 == 255)
    {
      float64_t v66 = 0.0;
      float64_t v67 = 0.0;
      a7 = a4;
    }
    else
    {
      sub_1853B7020((uint64_t)&v131, (uint64_t)&v115, a7);
      float64_t v66 = 0.0;
      float64_t v67 = 0.0;
      switch(v130)
      {
        case 1:
          break;
        case 2:
          uint64_t v110 = v117;
          uint64_t v111 = v118;
          uint64_t v112 = v119;
          long long v113 = v120;
          int8x16_t v114 = v121;
          uint64_t v108 = v115;
          uint64_t v109 = v116;
          long long v102 = a7;
          uint64_t v69 = v117.i64[1];
          uint64_t v68 = v117.i64[0];
          __swift_project_boxed_opaque_existential_0Tm(&v108.f64[1], v117.i64[0]);
          v147[0] = vsubq_f64(v113, v111);
          double v70 = v108.f64[0];
          float64x2_t v107 = *((void *)&v114 + 1);
          long long v98 = *(void (**)(double *__return_ptr, _OWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v69 + 32);
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(v103);
          uint64_t v72 = sub_1854B2C88(a6, v103);
          uint64_t v73 = v69;
          a7 = v102;
          v98(&v148, v147, &v107, v71, v72, v68, v73, v70);
          if ((_BYTE)v150) {
            float64_t v66 = 0.0;
          }
          else {
            float64_t v66 = v148;
          }
          if ((_BYTE)v150) {
            float64_t v67 = 0.0;
          }
          else {
            float64_t v67 = v149;
          }
          sub_1853B93B8((uint64_t)&v108, a13);
          break;
        case 3:
          float64_t v67 = *(double *)&v116.i64[1];
          float64_t v66 = *(double *)v116.i64;
          break;
        default:
          float64_t v67 = v126.f64[1];
          float64_t v66 = v126.f64[0];
          break;
      }
    }
    sub_1853B93B8((uint64_t)&v131, a7);
    uint64_t v74 = a8;
    uint64_t v75 = a2;
    double v76 = a9;
    double v77 = a10;
    double v78 = v66;
    double v79 = v67;
    char v80 = v65 == 255;
    goto LABEL_67;
  }
  unsigned __int8 v126 = v142;
  uint64_t v127 = v143;
  uint64_t v128 = v144;
  double v129 = v145;
  long long v122 = v138;
  uint64_t v123 = v139;
  char v124 = v140;
  unint64_t v125 = v141;
  long long v118 = (float64x2_t)v134;
  long long v119 = v135;
  long long v120 = v136;
  long long v121 = v137;
  int8x16_t v115 = v131;
  int8x16_t v116 = v132;
  int8x16_t v117 = v133;
  sub_1854B5564(a2, (uint64_t)&v108);
  if (LOBYTE(v113.f64[0]) == 3
    && *(void *)&v108.f64[0] == 1
    && (int8x16_t v61 = vorrq_s8(vorrq_s8(v109, (int8x16_t)v111), vorrq_s8(v110, v112)),
        !(*(void *)&vorr_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)) | *(void *)&v108.f64[1])))
  {
    sub_1854B5730((uint64_t)&v108);
  }
  else
  {
    sub_1854B5730((uint64_t)&v108);
    sub_1854B5564(a2, (uint64_t)&v108);
    if (LOBYTE(v113.f64[0]))
    {
      sub_1854B5730((uint64_t)&v108);
      goto LABEL_40;
    }
    sub_1854B5EC0((uint64_t)&v108, (uint64_t)v147);
    if ((a3 & 1) == 0)
    {
      sub_1854B5EC0((uint64_t)v147, (uint64_t)&v108);
      if (v109.i64[0] < 0)
      {
        v109.i64[0] &= ~0x8000000000000000;
        if (*(double *)v112.i64 > 0.0 && (*(unsigned char *)(v17 + 72) & 1) == 0) {
          uint64_t v128 = vaddq_f64(v128, vmulq_n_f64(*(float64x2_t *)(v17 + 56), *(double *)v112.i64 / 1000.0 / (1.0 - *(double *)v112.i64)));
        }
      }
      *(void *)(v17 + 56) = 0;
      *(void *)(v17 + 64) = 0;
      *(unsigned char *)(v17 + 72) = 1;
      *(void *)uint64_t v17 = 0;
    }
    sub_1854B5EC0((uint64_t)v147, (uint64_t)&v148);
    if (v150 < 0)
    {
      v150 &= ~0x8000000000000000;
      char v81 = v151 <= 0.0 ? 1 : v59;
      if ((v81 & 1) == 0)
      {
        v82.f64[0] = a11;
        v82.f64[1] = a12;
        unsigned __int8 v126 = vaddq_f64(v126, vmulq_n_f64(vsubq_f64(v82, v101), v151 * (6.28318531 / v149 * (6.28318531 / v149))));
      }
    }
    sub_1854B5D18((uint64_t)v147, 0);
  }
  uint64_t v83 = v119.i64[0];
  __int8 v84 = v119.i8[8];
  uint64_t v85 = v121;
  char v86 = BYTE8(v121);
  char v87 = v124;
  char v88 = BYTE1(v124);
  char v89 = BYTE2(v124);
  char v90 = BYTE3(v124);
  uint64_t v91 = *((void *)&v124 + 1);
  int8x16_t v92 = v116;
  int8x16_t v93 = v117;
  *(float64x2_t *)a8 = v115;
  *(int8x16_t *)(a8 + 16) = v92;
  float64x2_t v94 = v118;
  *(int8x16_t *)(a8 + 32) = v93;
  *(float64x2_t *)(a8 + 48) = v94;
  *(void *)(a8 + 64) = v83;
  *(unsigned char *)(a8 + 72) = v84;
  *(float64x2_t *)(a8 + 80) = v120;
  *(void *)(a8 + 96) = v85;
  *(unsigned char *)(a8 + 104) = v86;
  long long v95 = v123;
  *(_OWORD *)(a8 + 112) = v122;
  *(_OWORD *)(a8 + 128) = v95;
  *(unsigned char *)(a8 + 144) = v87;
  *(unsigned char *)(a8 + 145) = v88;
  *(unsigned char *)(a8 + 146) = v89;
  *(unsigned char *)(a8 + 147) = v90;
  *(void *)(a8 + 152) = v91;
  *(double *)(a8 + 160) = a11;
  *(double *)(a8 + 168) = a12;
  long long v96 = v127;
  *(float64x2_t *)(a8 + 176) = v126;
  *(_OWORD *)(a8 + 192) = v96;
  long long v97 = v129;
  *(float64x2_t *)(a8 + 208) = v128;
  *(_OWORD *)(a8 + 224) = v97;
  *(unsigned char *)(a8 + 240) = 0;
}

uint64_t sub_1854B5564(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for InProcessAnimationDescription.Storage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 80);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    *(unsigned char *)(a1 + 80) = 2;
  }
  else if (v4 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
    *(unsigned char *)(a1 + 80) = 1;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    if (v4)
    {
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 80) = 0;
    }
  }
  return a1;
}

uint64_t sub_1854B5730(uint64_t a1)
{
  return a1;
}

uint64_t destroy for InProcessAnimationDescription.Storage(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 80);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)result + 3;
  }
  if (v2 != 2)
  {
    if (v2 != 1) {
      return result;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(result);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

uint64_t sub_1854B57F4@<X0>(uint64_t a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  sub_1854B5564(a1, (uint64_t)v44);
  if (v45)
  {
    if (v45 == 2)
    {
      sub_1854B1F20(v44, (uint64_t)&v30);
      sub_1854B1F38((uint64_t)&v30, a5 + 8);
      *(void *)a5 = 0;
      *(_WORD *)(a5 + 96) = 0;
      *(void *)(a5 + 104) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *(double *)(a5 + 48) = a6;
      *(double *)(a5 + 56) = a7;
      *(double *)(a5 + 64) = a6;
      *(double *)(a5 + 72) = a7;
      *(double *)(a5 + 80) = a8;
      *(double *)(a5 + 88) = a9;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v30);
      char v19 = 2;
    }
    else
    {
      uint64_t result = sub_1854B5730((uint64_t)v44);
      double v28 = a2;
      double v29 = a3;
      if (a4)
      {
        double v28 = 0.0;
        double v29 = 0.0;
      }
      *(double *)a5 = a8;
      *(double *)(a5 + 8) = a9;
      *(double *)(a5 + 16) = v28;
      *(double *)(a5 + 24) = v29;
      char v19 = 3;
    }
    *(unsigned char *)(a5 + 240) = v19;
  }
  else
  {
    sub_1854B5EC0((uint64_t)v44, (uint64_t)v46);
    long long v32 = 0u;
    memset(v33, 0, 25);
    long long v30 = 0u;
    long long v31 = 0u;
    *(void *)&long long v35 = 0;
    long long v34 = 0uLL;
    BYTE8(v35) = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    LODWORD(v38) = 0;
    *((void *)&v38 + 1) = 0x3FF0000000000000;
    *(double *)&long long v41 = a6;
    *((double *)&v41 + 1) = a7;
    *(double *)&long long v39 = a8;
    *((double *)&v39 + 1) = a9;
    long long v40 = 0uLL;
    long long v43 = 0uLL;
    v42.f64[0] = a6;
    v42.f64[1] = a7;
    sub_1854B5D18((uint64_t)v46, 1u);
    if ((a4 & 1) == 0)
    {
      *(double *)&long long v40 = a2;
      *((double *)&v40 + 1) = a3;
    }
    uint64_t result = sub_1854B5EC0((uint64_t)v46, (uint64_t)v47);
    if (v49 < 0)
    {
      if (v50 > 0.0 && (*(unsigned char *)(v9 + 72) & 1) == 0) {
        float64x2_t v42 = vaddq_f64(v42, vmulq_n_f64(*(float64x2_t *)(v9 + 56), v50 / 1000.0 / (1.0 - v50)));
      }
      if (v51 > 0.0)
      {
        double v20 = 6.28318531 / v48 * (6.28318531 / v48) * v51;
        *(double *)&long long v40 = (a8 - a6) * v20 + *(double *)&v40;
        *((double *)&v40 + 1) = (a9 - a7) * v20 + *((double *)&v40 + 1);
      }
    }
    float64x2_t v21 = v42;
    *(_OWORD *)(a5 + 192) = v41;
    *(float64x2_t *)(a5 + 208) = v21;
    *(_OWORD *)(a5 + 224) = v43;
    long long v22 = v38;
    *(_OWORD *)(a5 + 128) = v37;
    *(_OWORD *)(a5 + 144) = v22;
    long long v23 = v40;
    *(_OWORD *)(a5 + 160) = v39;
    *(_OWORD *)(a5 + 176) = v23;
    long long v24 = v34;
    *(_OWORD *)(a5 + 64) = *(_OWORD *)&v33[16];
    *(_OWORD *)(a5 + 80) = v24;
    long long v25 = v36;
    *(_OWORD *)(a5 + 96) = v35;
    *(_OWORD *)(a5 + 112) = v25;
    long long v26 = v31;
    *(_OWORD *)a5 = v30;
    *(_OWORD *)(a5 + 16) = v26;
    long long v27 = *(_OWORD *)v33;
    *(_OWORD *)(a5 + 32) = v32;
    *(_OWORD *)(a5 + 48) = v27;
    *(unsigned char *)(a5 + 240) = 0;
  }
  return result;
}

uint64_t sub_1854B5A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned char *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>)
{
  uint64_t v14 = v12;
  sub_1853B8150(a2, (uint64_t)v43, a3);
  float64_t v27 = *(double *)v43;
  float64_t v26 = *(double *)&v43[1];
  float64_t v29 = *(double *)&v43[2];
  float64_t v28 = *(double *)&v43[3];
  sub_1854B5564(a1, (uint64_t)v41);
  if (v42)
  {
    if (v42 == 2)
    {
      sub_1854B1F20(v41, (uint64_t)v40);
      sub_1854B1F38((uint64_t)v40, (uint64_t)(a4 + 8));
      *(void *)a4 = 0;
      *((_WORD *)a4 + 72) = 0;
      *((void *)a4 + 19) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *((double *)a4 + 6) = a5;
      *((double *)a4 + 7) = a6;
      *((double *)a4 + 8) = a7;
      *((double *)a4 + 9) = a8;
      *((double *)a4 + 10) = a5;
      *((double *)a4 + 11) = a6;
      *((double *)a4 + 12) = a7;
      *((double *)a4 + 13) = a8;
      *((double *)a4 + 14) = a9;
      *((double *)a4 + 15) = a10;
      *((double *)a4 + 16) = a11;
      *((double *)a4 + 17) = a12;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
      char v31 = 2;
    }
    else
    {
      sub_1854B5730((uint64_t)v41);
      uint64_t result = sub_1853B8150(a2, (uint64_t)v40, a3);
      double v36 = 0.0;
      double v37 = v27;
      double v38 = v26;
      double v39 = v29;
      if (LOBYTE(v40[2].f64[0]))
      {
        double v37 = 0.0;
        double v38 = 0.0;
        double v39 = 0.0;
      }
      else
      {
        double v36 = v28;
      }
      *(double *)a4 = a9;
      *((double *)a4 + 1) = a10;
      *((double *)a4 + 2) = a11;
      *((double *)a4 + 3) = a12;
      *((double *)a4 + 4) = v37;
      *((double *)a4 + 5) = v38;
      *((double *)a4 + 6) = v39;
      *((double *)a4 + 7) = v36;
      char v31 = 3;
    }
    a4[336] = v31;
  }
  else
  {
    sub_1854B5EC0((uint64_t)v41, (uint64_t)v45);
    memset(v40, 0, 73);
    memset(&v40[5], 0, 25);
    memset(&v40[7], 0, 52);
    v40[10].f64[1] = 1.0;
    v40[15].f64[0] = a5;
    v40[15].f64[1] = a6;
    v40[16].f64[0] = a7;
    v40[16].f64[1] = a8;
    v40[11].f64[0] = a9;
    v40[11].f64[1] = a10;
    v40[12].f64[0] = a11;
    v40[12].f64[1] = a12;
    memset(&v40[13], 0, 32);
    memset(&v40[19], 0, 32);
    v40[17].f64[0] = a5;
    v40[17].f64[1] = a6;
    v40[18].f64[0] = a7;
    v40[18].f64[1] = a8;
    sub_1854B5F1C((uint64_t)v45, 1u);
    sub_1853B8150(a2, (uint64_t)v44, a3);
    if ((v44[32] & 1) == 0)
    {
      v40[13].f64[0] = v27;
      v40[13].f64[1] = v26;
      v40[14].f64[0] = v29;
      v40[14].f64[1] = v28;
    }
    sub_1854B5EC0((uint64_t)v45, (uint64_t)v46);
    if (v48 < 0)
    {
      if (v49 > 0.0 && (*(unsigned char *)(v14 + 120) & 1) == 0)
      {
        double v32 = v49 / 1000.0 / (1.0 - v49);
        float64x2_t v33 = vaddq_f64(v40[17], vmulq_n_f64(*(float64x2_t *)(v14 + 88), v32));
        float64x2_t v34 = vaddq_f64(vmulq_n_f64(*(float64x2_t *)(v14 + 104), v32), v40[18]);
        v40[17] = v33;
        v40[18] = v34;
      }
      if (v50 > 0.0)
      {
        double v35 = 6.28318531 / v47 * (6.28318531 / v47) * v50;
        v40[13].f64[0] = (a9 - a5) * v35 + v40[13].f64[0];
        v40[13].f64[1] = (a10 - a6) * v35 + v40[13].f64[1];
        v40[14].f64[0] = (a11 - a7) * v35 + v40[14].f64[0];
        v40[14].f64[1] = (a12 - a8) * v35 + v40[14].f64[1];
      }
    }
    uint64_t result = (uint64_t)memcpy(a4, v40, 0x150uLL);
    a4[336] = 0;
  }
  return result;
}

double sub_1854B5D18(uint64_t a1, unsigned __int8 a2)
{
  sub_1854B5EC0(a1, (uint64_t)v33);
  char v5 = v34;
  if (v34 < 0)
  {
    char v10 = BYTE1(v34);
    v34 &= ~0x8000000000000000;
    char v6 = v10;
    double v8 = v36;
    double v7 = v37;
    if ((((v5 & 1) == 0) & a2) != 0) {
      double v9 = 0.0;
    }
    else {
      double v9 = v35;
    }
  }
  else
  {
    char v6 = 0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  double v11 = 6.28318531 / v9 * (6.28318531 / v9);
  double v12 = sqrt(v11);
  *(double *)(v2 + 56) = v11;
  *(double *)(v2 + 64) = v12 + v12;
  *(unsigned char *)(v2 + 145) = v9 == 0.0;
  double v13 = 0.0;
  if ((a2 & 1) == 0) {
    double v13 = v8;
  }
  if (v6) {
    double v14 = v8;
  }
  else {
    double v14 = v13;
  }
  double v15 = 6.28318531 / v14 * (6.28318531 / v14);
  double v16 = sqrt(v15);
  *(double *)(v2 + 88) = v15;
  *(double *)(v2 + 96) = v16 + v16;
  *(unsigned char *)(v2 + 146) = v14 == 0.0;
  double v17 = 6.28318531 / v7 * (6.28318531 / v7);
  double v18 = sqrt(v17);
  *(double *)(v2 + 128) = v17;
  *(double *)(v2 + 136) = v18 + v18;
  *(unsigned char *)(v2 + 147) = v7 == 0.0;
  sub_1854B5EC0(a1, (uint64_t)&v28);
  __int16 v19 = v30;
  double v20 = v28;
  if ((v30 & 0x8000000000000000) == 0)
  {
    double v21 = v29;
    *(double *)(v2 + 32) = v28;
    *(double *)(v2 + 40) = v21;
    if (v9 != 0.0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  double v23 = v29;
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  double v26 = 6.28318531 / v29 * (6.28318531 / v29);
  double v27 = sqrt(v26);
  double v21 = v28 * (v27 + v27);
  *(double *)(v2 + 32) = v26;
  *(double *)(v2 + 40) = v21;
  *(double *)(v2 + 48) = v20;
  *(double *)(v2 + 80) = v23;
  if (v19) {
    *(void *)uint64_t v2 = v25;
  }
  if ((v19 & 0x100) != 0) {
    *(void *)(v2 + 16) = v24;
  }
  double v20 = v26;
  if (v9 == 0.0)
  {
LABEL_13:
    *(void *)uint64_t v2 = *(void *)(v2 + 48);
    *(void *)(v2 + 8) = 0;
  }
LABEL_14:
  if (v14 == 0.0)
  {
    *(void *)(v2 + 16) = *(void *)(v2 + 80);
    *(void *)(v2 + 24) = 0;
  }
  double result = v21 / v20;
  *(double *)(v2 + 152) = result;
  return result;
}

uint64_t sub_1854B5EC0(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_1854B5F1C(uint64_t a1, unsigned __int8 a2)
{
  sub_1854B5EC0(a1, (uint64_t)v33);
  char v5 = v34;
  if (v34 < 0)
  {
    char v10 = BYTE1(v34);
    v34 &= ~0x8000000000000000;
    char v6 = v10;
    double v8 = v36;
    double v7 = v37;
    if ((((v5 & 1) == 0) & a2) != 0) {
      double v9 = 0.0;
    }
    else {
      double v9 = v35;
    }
  }
  else
  {
    char v6 = 0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  double v11 = 6.28318531 / v9 * (6.28318531 / v9);
  double v12 = sqrt(v11);
  *(double *)(v2 + 56) = v11;
  *(double *)(v2 + 64) = v12 + v12;
  *(unsigned char *)(v2 + 161) = v9 == 0.0;
  double v13 = 0.0;
  if ((a2 & 1) == 0) {
    double v13 = v8;
  }
  if (v6) {
    double v14 = v8;
  }
  else {
    double v14 = v13;
  }
  double v15 = 6.28318531 / v14 * (6.28318531 / v14);
  double v16 = sqrt(v15);
  *(double *)(v2 + 88) = v15;
  *(double *)(v2 + 96) = v16 + v16;
  *(unsigned char *)(v2 + 162) = v14 == 0.0;
  double v17 = 6.28318531 / v7 * (6.28318531 / v7);
  double v18 = sqrt(v17);
  *(double *)(v2 + 144) = v17;
  *(double *)(v2 + 152) = v18 + v18;
  *(unsigned char *)(v2 + 163) = v7 == 0.0;
  sub_1854B5EC0(a1, (uint64_t)&v28);
  __int16 v19 = v30;
  double v20 = v28;
  if ((v30 & 0x8000000000000000) == 0)
  {
    double v21 = v29;
    *(double *)(v2 + 32) = v28;
    *(double *)(v2 + 40) = v21;
    if (v9 != 0.0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  double v23 = v29;
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  double v26 = 6.28318531 / v29 * (6.28318531 / v29);
  double v27 = sqrt(v26);
  double v21 = v28 * (v27 + v27);
  *(double *)(v2 + 32) = v26;
  *(double *)(v2 + 40) = v21;
  *(double *)(v2 + 48) = v20;
  *(double *)(v2 + 80) = v23;
  if (v19) {
    *(void *)uint64_t v2 = v25;
  }
  if ((v19 & 0x100) != 0) {
    *(void *)(v2 + 16) = v24;
  }
  double v20 = v26;
  if (v9 == 0.0)
  {
LABEL_13:
    *(void *)uint64_t v2 = *(void *)(v2 + 48);
    *(void *)(v2 + 8) = 0;
  }
LABEL_14:
  if (v14 == 0.0)
  {
    *(void *)(v2 + 16) = *(void *)(v2 + 80);
    *(void *)(v2 + 24) = 0;
  }
  double result = v21 / v20;
  *(double *)(v2 + 168) = result;
  return result;
}

uint64_t sub_1854B60C4@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  sub_1854B5564(a1, (uint64_t)v32);
  if (v33)
  {
    if (v33 == 2)
    {
      sub_1854B1F20(v32, (uint64_t)&v21);
      sub_1854B1F38((uint64_t)&v21, a4 + 8);
      *(void *)a4 = 0;
      *(_WORD *)(a4 + 72) = 0;
      *(void *)(a4 + 80) = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      *(double *)(a4 + 48) = a5;
      *(double *)(a4 + 56) = a5;
      *(double *)(a4 + 64) = a6;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v21);
      char v13 = 2;
    }
    else
    {
      uint64_t result = sub_1854B5730((uint64_t)v32);
      double v20 = a2;
      if (a3) {
        double v20 = 0.0;
      }
      *(double *)a4 = a6;
      *(double *)(a4 + 8) = v20;
      char v13 = 3;
    }
    *(unsigned char *)(a4 + 192) = v13;
  }
  else
  {
    sub_1854B5EC0((uint64_t)v32, (uint64_t)v34);
    long long v23 = 0u;
    memset(v24, 0, 25);
    long long v21 = 0u;
    long long v22 = 0u;
    *(void *)&long long v26 = 0;
    long long v25 = 0uLL;
    BYTE8(v26) = 0;
    *(void *)&long long v28 = 0;
    long long v27 = 0uLL;
    DWORD2(v28) = 0;
    *(void *)&long long v29 = 0x3FF0000000000000;
    *((double *)&v29 + 1) = a6;
    *(void *)&long long v30 = 0;
    *((double *)&v30 + 1) = a5;
    *(_OWORD *)uint64_t v31 = *(unint64_t *)&a5;
    sub_1854B6314((uint64_t)v34, 1u);
    if ((a3 & 1) == 0) {
      *(double *)&long long v30 = a2;
    }
    uint64_t result = sub_1854B5EC0((uint64_t)v34, (uint64_t)v35);
    if (v37 < 0)
    {
      if (v38 > 0.0 && (*(unsigned char *)(v6 + 48) & 1) == 0) {
        v31[0] = v31[0] + v38 / 1000.0 / (1.0 - v38) * *(double *)(v6 + 40);
      }
      if (v39 > 0.0) {
        *(double *)&long long v30 = (a6 - a5) * (6.28318531 / v36 * (6.28318531 / v36) * v39) + *(double *)&v30;
      }
    }
    long long v14 = v29;
    *(_OWORD *)(a4 + 128) = v28;
    *(_OWORD *)(a4 + 144) = v14;
    long long v15 = *(_OWORD *)v31;
    *(_OWORD *)(a4 + 160) = v30;
    *(_OWORD *)(a4 + 176) = v15;
    long long v16 = v25;
    *(_OWORD *)(a4 + 64) = *(_OWORD *)&v24[16];
    *(_OWORD *)(a4 + 80) = v16;
    long long v17 = v27;
    *(_OWORD *)(a4 + 96) = v26;
    *(_OWORD *)(a4 + 112) = v17;
    long long v18 = v22;
    *(_OWORD *)a4 = v21;
    *(_OWORD *)(a4 + 16) = v18;
    long long v19 = *(_OWORD *)v24;
    *(_OWORD *)(a4 + 32) = v23;
    *(_OWORD *)(a4 + 48) = v19;
    *(unsigned char *)(a4 + 192) = 0;
  }
  return result;
}

unint64_t sub_1854B62C0()
{
  unint64_t result = qword_1E8FAFB70;
  if (!qword_1E8FAFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8FAFB70);
  }
  return result;
}

double sub_1854B6314(uint64_t a1, unsigned __int8 a2)
{
  sub_1854B5EC0(a1, (uint64_t)v33);
  char v5 = v34;
  if (v34 < 0)
  {
    char v10 = BYTE1(v34);
    v34 &= ~0x8000000000000000;
    char v6 = v10;
    double v8 = v36;
    double v7 = v37;
    if ((((v5 & 1) == 0) & a2) != 0) {
      double v9 = 0.0;
    }
    else {
      double v9 = v35;
    }
  }
  else
  {
    char v6 = 0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  double v11 = 6.28318531 / v9 * (6.28318531 / v9);
  double v12 = sqrt(v11);
  *(double *)(v2 + 56) = v11;
  *(double *)(v2 + 64) = v12 + v12;
  *(unsigned char *)(v2 + 137) = v9 == 0.0;
  double v13 = 0.0;
  if ((a2 & 1) == 0) {
    double v13 = v8;
  }
  if (v6) {
    double v14 = v8;
  }
  else {
    double v14 = v13;
  }
  double v15 = 6.28318531 / v14 * (6.28318531 / v14);
  double v16 = sqrt(v15);
  *(double *)(v2 + 88) = v15;
  *(double *)(v2 + 96) = v16 + v16;
  *(unsigned char *)(v2 + 138) = v14 == 0.0;
  double v17 = 6.28318531 / v7 * (6.28318531 / v7);
  double v18 = sqrt(v17);
  *(double *)(v2 + 120) = v17;
  *(double *)(v2 + 128) = v18 + v18;
  *(unsigned char *)(v2 + 139) = v7 == 0.0;
  sub_1854B5EC0(a1, (uint64_t)&v28);
  __int16 v19 = v30;
  double v20 = v28;
  if ((v30 & 0x8000000000000000) == 0)
  {
    double v21 = v29;
    *(double *)(v2 + 32) = v28;
    *(double *)(v2 + 40) = v21;
    if (v9 != 0.0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  double v23 = v29;
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  double v26 = 6.28318531 / v29 * (6.28318531 / v29);
  double v27 = sqrt(v26);
  double v21 = v28 * (v27 + v27);
  *(double *)(v2 + 32) = v26;
  *(double *)(v2 + 40) = v21;
  *(double *)(v2 + 48) = v20;
  *(double *)(v2 + 80) = v23;
  if (v19) {
    *(void *)uint64_t v2 = v25;
  }
  if ((v19 & 0x100) != 0) {
    *(void *)(v2 + 16) = v24;
  }
  double v20 = v26;
  if (v9 == 0.0)
  {
LABEL_13:
    *(void *)uint64_t v2 = *(void *)(v2 + 48);
    *(void *)(v2 + 8) = 0;
  }
LABEL_14:
  if (v14 == 0.0)
  {
    *(void *)(v2 + 16) = *(void *)(v2 + 80);
    *(void *)(v2 + 24) = 0;
  }
  double result = v21 / v20;
  *(double *)(v2 + 144) = result;
  return result;
}

uint64_t sub_1854B64CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))
{
  sub_1853B76BC(a5, (uint64_t)v22);
  sub_1853B76BC((uint64_t)v22, (uint64_t)v21);
  sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
  swift_dynamicCast();
  objc_msgSend(v20, sel_doubleValue);
  double v15 = v14;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  sub_1853B76BC(a6, (uint64_t)v22);
  sub_1853B76BC((uint64_t)v22, (uint64_t)v21);
  swift_dynamicCast();
  objc_msgSend(v20, sel_doubleValue);
  double v17 = v16;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  return a8(a1, a2, a3, a4, a7, v15, v17);
}

uint64_t sub_1854B67F0(double a1, double a2, float a3, float a4, float a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  void (*v29)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  BOOL v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v49;
  NSObject *v53;
  uint64_t v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  unsigned __int8 v71;
  void v72[24];
  char v73;
  void v74[11];
  double v75;
  double v76[2];

  uint64_t v75 = a2;
  v76[0] = a1;
  uint64_t v22 = a8[3];
  uint64_t v23 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v22);
  swift_beginAccess();
  uint64_t v24 = *(unsigned __int8 *)(v18 + 113);
  float64x2_t v56 = v18;
  uint64_t v25 = *(os_unfair_lock_s **)(v18 + 32);
  double v26 = v25 + 4;
  double v27 = v25 + 6;
  os_unfair_lock_lock(v25 + 6);
  int8x16_t v57 = v26;
  sub_1854AEC24(v26, v72);
  double v58 = v27;
  os_unfair_lock_unlock(v27);
  uint64_t v28 = v72[0];
  if (v72[0])
  {
    swift_beginAccess();
    sub_1853B7020(v28 + 24, (uint64_t)v72, &qword_1E8FB00C0);
    swift_release();
  }
  else
  {
    memset(v72, 0, sizeof(v72));
    uint64_t v73 = -1;
  }
  double v29 = *(void (**)(void *__return_ptr, uint64_t, void *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v30 = sub_1854B6F18();
  v29(v74, v24, v72, v76, &v75, &type metadata for UIAnimatableFloat, v30, v22, v23);
  sub_1853B93B8((uint64_t)v72, &qword_1E8FB00C8);
  os_unfair_lock_lock(v27);
  sub_1854AEC24(v57, v72);
  os_unfair_lock_unlock(v27);
  uint64_t v31 = v72[0];
  if (v72[0])
  {
    swift_beginAccess();
    sub_1853B7020(v31 + 24, (uint64_t)&v59, &qword_1E8FB00C0);
    swift_release();
  }
  else
  {
    uint64_t v69 = 0u;
    double v70 = 0u;
    float64_t v67 = 0u;
    uint64_t v68 = 0u;
    int v65 = 0u;
    float64_t v66 = 0u;
    int8x16_t v63 = 0u;
    int8x16_t v64 = 0u;
    int8x16_t v61 = 0u;
    int8x16_t v62 = 0u;
    char v59 = 0u;
    uint64_t v60 = 0u;
    uint64_t v71 = -1;
  }
  swift_beginAccess();
  sub_1854B36BC((uint64_t)&v59, (uint64_t)v74, a7 & 1, &qword_1E8FB00C8, &qword_1E8FB2CF0, &qword_1E8FB2CF8, &qword_1E8FB00C0, (uint64_t)v72, v76[0], v75, &qword_1E8FB2DC0);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v59, &qword_1E8FB00C8);
  os_unfair_lock_lock(v27);
  sub_1854AEC24(v57, &v59);
  os_unfair_lock_unlock(v27);
  uint64_t v32 = v59;
  if ((void)v59)
  {
    char v33 = *(void (**)(void))(v59 + 224);
    if (v33)
    {
      *(void *)(v59 + 224) = 0;
      *(void *)(v32 + 232) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v33);
      v33(0);
      sub_1854AFD40((uint64_t)v33);
    }
    *(unsigned char *)(v32 + 240) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v72, (uint64_t)&v59, &qword_1E8FB00C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00D0);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 224) = 0;
  *(void *)(v34 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v59, v34 + 24, &qword_1E8FB00C0);
  *(_WORD *)(v34 + 240) = 0;
  double v35 = *(void *)(v34 + 224);
  *(void *)(v34 + 224) = a17;
  *(void *)(v34 + 232) = a18;
  swift_retain();
  sub_1854AFD40(v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  double v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(void *)(v34 + 16) = v36;
  if (a15) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v56 + 72) & 1) == 0) {
    sub_185952CF4(&qword_1E8FB00C0, *(double *)(v56 + 64));
  }
  double v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(unsigned char *)(v37 + 24) = 1;
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  double v49 = qword_1E8FD58B0;
  double v38 = *(unsigned char *)(v56 + 144);
  sub_1853B7020((uint64_t)v72, (uint64_t)&v59, &qword_1E8FB00C0);
  double v39 = v71;
  if (v71 == 2) {
    sub_1853B93B8((uint64_t)&v59, &qword_1E8FB00C0);
  }
  long long v40 = v39 == 2;
  long long v41 = (void *)swift_allocObject();
  v41[2] = v34;
  v41[3] = a9;
  v41[4] = a10;
  long long v41[5] = v56;
  v41[6] = v37;
  v41[7] = a11;
  v41[8] = a12;
  v41[9] = a13;
  v41[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  char v42 = swift_allocObject();
  *(float *)(v42 + 16) = a3;
  *(float *)(v42 + 20) = a4;
  *(float *)(v42 + 24) = a5;
  *(_DWORD *)(v42 + 28) = a16;
  *(unsigned char *)(v42 + 32) = v38;
  *(unsigned char *)(v42 + 33) = v40;
  *(void *)(v42 + 40) = sub_1853C09D4;
  *(void *)(v42 + 48) = v41;
  long long v53 = *(NSObject **)(v49 + 264);
  long long v43 = swift_allocObject();
  *(void *)(v43 + 16) = v49;
  *(void *)(v43 + 24) = v42;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1853C10BC;
  *(void *)(v44 + 24) = v43;
  *(void *)&int8x16_t v61 = sub_1853BE6D4;
  *((void *)&v61 + 1) = v44;
  *(void *)&char v59 = MEMORY[0x1E4F143A8];
  *((void *)&v59 + 1) = 1107296256;
  *(void *)&uint64_t v60 = sub_1853BE46C;
  *((void *)&v60 + 1) = &block_descriptor_529;
  char v45 = _Block_copy(&v59);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v53, v45);
  _Block_release(v45);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  double result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v58);
    sub_1854AEC5C(v57);
    os_unfair_lock_unlock(v58);
    swift_release_n();
    sub_1853B93B8((uint64_t)v72, &qword_1E8FB00C0);
    sub_1854AECBC((uint64_t)v74);
    return swift_release();
  }
  return result;
}

unint64_t sub_1854B6F18()
{
  unint64_t result = qword_1E8FB00B8;
  if (!qword_1E8FB00B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8FB00B8);
  }
  return result;
}

uint64_t sub_1854B6F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  char v10 = v9;
  uint64_t v19 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v19, (uint64_t)&v50, &qword_1EB255C18);
  if (v51)
  {
    uint64_t v48 = a3;
    uint64_t v49 = a5;
    sub_1854B1F20(&v50, (uint64_t)v52);
    int v20 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    int v22 = v21;
    int v24 = v23;
    int v26 = v25;
    unsigned int v46 = objc_msgSend(v10, sel_updateReason);
    if (v20 == 3)
    {
      double v38 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v36 = 0;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      uint64_t v27 = MEMORY[0x18C109380](a7 + 136);
      if (!v27) {
        goto LABEL_5;
      }
      uint64_t v28 = (void *)v27;
      _s23InProcessAnimationStateCMa();
      double v29 = v10;
      int v45 = v20;
      uint64_t v30 = a2;
      uint64_t v31 = a4;
      uint64_t v32 = a6;
      id v33 = v28;
      LOBYTE(v28) = sub_186A1F0AC();

      a6 = v32;
      a4 = v31;
      a2 = v30;
      int v20 = v45;

      if ((v28 & 1) == 0)
      {
LABEL_5:
        uint64_t v34 = (void *)MEMORY[0x18C109380](a7 + 136);

        if (v34)
        {
          double v35 = (unsigned char *)MEMORY[0x18C109380](a7 + 136);
          if (v35)
          {
            v35[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v10;
      double v37 = v10;
      double v38 = sub_1854A84E8;
    }
    uint64_t v39 = *(void *)(a7 + 152);
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a7 + 152) = v41;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v52, (uint64_t)&v50);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = a7;
        *(void *)(v42 + 24) = v10;
        *(double *)(v42 + 32) = a8;
        *(double *)(v42 + 40) = a9;
        sub_1854B1F20(&v50, v42 + 48);
        *(void *)(v42 + 88) = a1;
        *(void *)(v42 + 96) = a2;
        *(void *)(v42 + 104) = v48;
        *(void *)(v42 + 112) = a4;
        *(void *)(v42 + 120) = v49;
        *(void *)(v42 + 128) = a6;
        *(unsigned char *)(v42 + 136) = v20 != 3;
        *(_DWORD *)(v42 + 140) = v46;
        *(_DWORD *)(v42 + 144) = v22;
        *(_DWORD *)(v42 + 148) = v24;
        *(_DWORD *)(v42 + 152) = v26;
        *(void *)(v42 + 160) = v38;
        *(void *)(v42 + 168) = v36;
        long long v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1853C3C90, v42);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v50, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

unint64_t sub_1854B7308()
{
  unint64_t result = qword_1E8FAFEF0;
  if (!qword_1E8FAFEF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E8FAFEF0);
  }
  return result;
}

uint64_t sub_1854B7348(_OWORD *a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = (void **)v5;
  double v12 = (void *)*v5;
  unint64_t v14 = sub_1854B74B4((uint64_t)a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1859BCD5C();
      goto LABEL_7;
    }
    sub_1854B7630(v17, a5 & 1);
    unint64_t v23 = sub_1854B74B4((uint64_t)a2, a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      int v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_186A1F93C();
    __break(1u);
    return result;
  }
LABEL_7:
  int v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7] + 80 * v14;
    return sub_1854C47E4((uint64_t)a1, v21);
  }
LABEL_13:
  sub_1854B8824(v14, (uint64_t)a2, a3, a4, a1, v20);
  id v25 = a2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1854B74B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_186A1F9EC();
  sub_186A1F9FC();
  swift_bridgeObjectRetain();
  sub_186A1E9BC();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_186A1FA4C();
  return sub_1854B7558(a1, a2, a3, v6);
}

unint64_t sub_1854B7558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      char v13 = (void *)(v12 + 24 * v7);
      if (*v13 == a1)
      {
        BOOL v14 = v13[1] == a2 && v13[2] == a3;
        if (v14 || (sub_186A1F85C() & 1) != 0) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_1854B7630(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFC00);
  char v46 = a2;
  uint64_t v6 = sub_186A1F6AC();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v45 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v43 = v2;
  int64_t v44 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v44) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v45 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v45 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v45 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v44) {
              goto LABEL_34;
            }
            unint64_t v24 = *(void *)(v45 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_21:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v5 + 48) + 24 * v21;
    uint64_t v28 = *(void **)v26;
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t v29 = *(void *)(v26 + 16);
    uint64_t v30 = (long long *)(*(void *)(v5 + 56) + 80 * v21);
    if (v46)
    {
      long long v47 = *v30;
      long long v31 = v30[1];
      long long v32 = v30[2];
      long long v33 = v30[3];
      long long v51 = v30[4];
      long long v49 = v32;
      long long v50 = v33;
      long long v48 = v31;
    }
    else
    {
      sub_1854B15E0((uint64_t)v30, (uint64_t)&v47);
      id v34 = v28;
      swift_bridgeObjectRetain();
    }
    sub_186A1F9EC();
    sub_186A1F9FC();
    swift_bridgeObjectRetain();
    sub_186A1E9BC();
    swift_bridgeObjectRelease();
    uint64_t result = sub_186A1FA4C();
    uint64_t v35 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v11 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v36) & ~*(void *)(v11 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v11 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v14 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 24 * v14);
    *uint64_t v15 = v28;
    v15[1] = v27;
    v15[2] = v29;
    BOOL v16 = (_OWORD *)(*(void *)(v7 + 56) + 80 * v14);
    *BOOL v16 = v47;
    long long v17 = v48;
    long long v18 = v49;
    long long v19 = v51;
    v16[3] = v50;
    v16[4] = v19;
    v16[1] = v17;
    float64x2_t v16[2] = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
  if (v42 >= 64) {
    bzero(v23, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v42;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1854B79BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  unint64_t v10 = v9;
  uint64_t v19 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v19, (uint64_t)&v50, &qword_1EB255C18);
  if (v51)
  {
    uint64_t v48 = a3;
    uint64_t v49 = a5;
    sub_1854B1F20(&v50, (uint64_t)v52);
    int v20 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    int v22 = v21;
    int v24 = v23;
    int v26 = v25;
    unsigned int v46 = objc_msgSend(v10, sel_updateReason);
    if (v20 == 3)
    {
      char v38 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v36 = 0;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      uint64_t v27 = MEMORY[0x18C109380](a7 + 136);
      if (!v27) {
        goto LABEL_5;
      }
      uint64_t v28 = (void *)v27;
      _s23InProcessAnimationStateCMa();
      uint64_t v29 = v10;
      int v45 = v20;
      uint64_t v30 = a2;
      uint64_t v31 = a4;
      uint64_t v32 = a6;
      id v33 = v28;
      LOBYTE(v28) = sub_186A1F0AC();

      a6 = v32;
      a4 = v31;
      a2 = v30;
      int v20 = v45;

      if ((v28 & 1) == 0)
      {
LABEL_5:
        id v34 = (void *)MEMORY[0x18C109380](a7 + 136);

        if (v34)
        {
          uint64_t v35 = (unsigned char *)MEMORY[0x18C109380](a7 + 136);
          if (v35)
          {
            v35[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v10;
      unint64_t v37 = v10;
      char v38 = sub_1854A84E8;
    }
    uint64_t v39 = *(void *)(a7 + 152);
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a7 + 152) = v41;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v52, (uint64_t)&v50);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = a7;
        *(void *)(v42 + 24) = v10;
        *(double *)(v42 + 32) = a8;
        *(double *)(v42 + 40) = a9;
        sub_1854B1F20(&v50, v42 + 48);
        *(void *)(v42 + 88) = a1;
        *(void *)(v42 + 96) = a2;
        *(void *)(v42 + 104) = v48;
        *(void *)(v42 + 112) = a4;
        *(void *)(v42 + 120) = v49;
        *(void *)(v42 + 128) = a6;
        *(unsigned char *)(v42 + 136) = v20 != 3;
        *(_DWORD *)(v42 + 140) = v46;
        *(_DWORD *)(v42 + 144) = v22;
        *(_DWORD *)(v42 + 148) = v24;
        *(_DWORD *)(v42 + 152) = v26;
        *(void *)(v42 + 160) = v38;
        *(void *)(v42 + 168) = v36;
        long long v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1853C3E54, v42);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v50, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

uint64_t sub_1854B7D58(uint64_t result, uint64_t a2, uint64_t a3, void *a4, char a5, double a6, double a7)
{
  uint64_t v8 = v7;
  uint64_t v12 = (void *)result;
  double v40 = a7;
  double v41 = a6;
  if (a5) {
    goto LABEL_5;
  }
  if (qword_1E8FAFB58 != -1) {
    uint64_t result = swift_once();
  }
  if (vabdd_f64(a6, a7) > *(double *)&qword_1E8FD57C0)
  {
LABEL_5:
    objc_msgSend(v7, sel_preferredFrameRateRange);
    int v16 = v15;
    int v18 = v17;
    int v20 = v19;
    if (!sub_1853B7BC0())
    {
      uint64_t v21 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      id v22 = a4;
      int v23 = sub_1854AE0CC(v22, (uint64_t)sub_1854AA548, v21);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v22, v23);
    }
    sub_1854B819C(a2, a3);
    uint64_t v25 = v24;
    swift_release();
    id v26 = objc_msgSend(v12, sel_context);

    if (v26)
    {
      char v38 = sub_1853B6778;
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v28 = swift_allocObject();
      *(unsigned char *)(v28 + 16) = 1;
      uint64_t v29 = v25;
      uint64_t v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v28;
      *(void *)(v27 + 24) = v30;
      uint64_t v25 = v29;
      char v38 = sub_185967700;
    }
    int v31 = v8[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    if (a2 != 0xD000000000000020 || (uint64_t v32 = sub_1853C2AD8, a3 != 0x8000000186B9E920))
    {
      if (sub_186A1F85C())
      {
        uint64_t v32 = sub_1853C2AD8;
      }
      else if (a2 != 0xD000000000000021 || (uint64_t v32 = sub_18593A40C, a3 != 0x8000000186B9E950))
      {
        if (sub_186A1F85C()) {
          uint64_t v32 = sub_18593A40C;
        }
        else {
          uint64_t v32 = 0;
        }
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = 0;
    *(void *)(v33 + 32) = a4;
    *(_DWORD *)(v33 + 40) = v16;
    *(_DWORD *)(v33 + 44) = v18;
    *(_DWORD *)(v33 + 48) = v20;
    *(unsigned char *)(v33 + 52) = v31 == 2;
    *(void *)(v33 + 56) = a2;
    *(void *)(v33 + 64) = a3;
    id v34 = (void *)swift_allocObject();
    void v34[2] = a4;
    v34[3] = a2;
    v34[4] = a3;
    uint64_t v35 = *(void (**)(double *, double *, uint64_t (*)(), uint64_t, id (*)(double *, double *), uint64_t, void (*)(), void *, uint64_t, uint64_t))(v25 + 192);
    id v36 = a4;
    swift_bridgeObjectRetain_n();
    id v37 = v36;
    swift_retain();
    sub_1854B0A60((uint64_t)v32);
    v35(&v41, &v40, v38, v27, sub_1853BE898, v33, sub_1854A8D50, v34, ObjectType, v25);
    swift_release();
    sub_1854AFD40((uint64_t)v32);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1854B819C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1853B7718(a1, a2);
    if (v7)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFB48);
      uint64_t v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  uint64_t v9 = (void *)MEMORY[0x18C109380](v2 + 24);
  double v10 = 0.0;
  if (v9)
  {
    uint64_t v11 = v9;
    id v12 = objc_msgSend(v9, sel_layer);

    int64_t v13 = (void *)sub_186A1E92C();
    id v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186A1F1CC();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v26, 0, sizeof(v26));
    }
    sub_1853B7020((uint64_t)v26, (uint64_t)&v24, &qword_1EB256B10);
    if (v25)
    {
      sub_1853B7BB0(&v24, v23);
      sub_1853B76BC((uint64_t)v23, (uint64_t)v22);
      sub_1853B76BC((uint64_t)v22, (uint64_t)v21);
      sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
      swift_dynamicCast();
      objc_msgSend(v20, sel_doubleValue);
      double v10 = v15;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    sub_1853B93B8((uint64_t)v26, &qword_1EB256B10);
  }
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  int v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v16;
  void v17[3] = a1;
  v17[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFB48);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1854B8810((uint64_t)sub_1854A9390, (uint64_t)v17, v10);
  swift_release();
  *(unsigned char *)(v8 + 144) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v24 = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = 0x8000000000000000;
  sub_1854B2A5C(v8, a1, a2, isUniquelyReferenced_nonNull_native, (void **)&v24, &qword_1E8FAFB40, &qword_1E8FAFB48);
  *(void *)(v3 + 48) = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_13:
  sub_1854B2C88(&qword_1E8FAFB40, &qword_1E8FAFB48);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1854B8540(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5)
{
  uint64_t v21 = a4;
  uint64_t v7 = v5;
  uint64_t v20 = sub_186A1EF8C();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  int64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v15 - 8);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(void *)(v16 + 16) = 0;
  *(void *)(v7 + 32) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00B0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = 0;
  *(void *)(v7 + 40) = v17;
  *(void *)(v7 + 48) = 0;
  *(unsigned char *)(v7 + 56) = 1;
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 1;
  *(void *)(v7 + 80) = 0;
  *(void *)(v7 + 88) = 0;
  *(unsigned char *)(v7 + 96) = 1;
  *(void *)(v7 + 104) = 0;
  *(_WORD *)(v7 + 112) = 1;
  *(void *)(v7 + 120) = 0;
  *(unsigned char *)(v7 + 128) = 1;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 160) = 0;
  *(void *)(v7 + 168) = a1;
  *(void *)(v7 + 176) = a2;
  sub_1854B3328();
  swift_retain();
  sub_186A1EF5C();
  sub_186A1E6DC();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC58], v20);
  *(void *)(v7 + 16) = sub_186A1EFCC();
  __swift_instantiateConcreteTypeFromMangledName(v21);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 32) = 0;
  *(double *)(v18 + 16) = a5;
  *(double *)(v18 + 24) = a5;
  *(void *)(v7 + 24) = v18;
  swift_beginAccess();
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 1;
  swift_beginAccess();
  *(void *)(v7 + 48) = 0;
  *(unsigned char *)(v7 + 56) = 1;
  *(unsigned char *)(v7 + 144) = 0;
  *(void *)(v7 + 152) = 0;
  return v7;
}

uint64_t sub_1854B8810(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1854B8540(a1, a2, &qword_1E8FAFB98, &qword_1E8FAFB90, a3);
}

unint64_t sub_1854B8824(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 24 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  mach_msg_header_t v6[2] = a4;
  uint64_t v7 = (_OWORD *)(a6[7] + 80 * result);
  long long v8 = a5[4];
  long long v9 = a5[2];
  v7[3] = a5[3];
  v7[4] = v8;
  long long v10 = a5[1];
  *uint64_t v7 = *a5;
  v7[1] = v10;
  void v7[2] = v9;
  uint64_t v11 = a6[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a6[2] = v13;
  }
  return result;
}

uint64_t sub_1854B8890(uint64_t result, uint64_t a2, uint64_t a3, void *a4, char a5, double a6, double a7)
{
  long long v8 = v7;
  BOOL v12 = (void *)result;
  double v38 = a7;
  double v39 = a6;
  if ((a5 & 1) != 0 || vabdd_f64(a6, a7) > 0.001)
  {
    objc_msgSend(v7, sel_preferredFrameRateRange);
    int v14 = v13;
    int v16 = v15;
    int v18 = v17;
    if (!sub_1853B7BC0())
    {
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      id v20 = a4;
      uint64_t v21 = sub_1854AE0CC(v20, (uint64_t)sub_1854AA548, v19);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v20, v21);
    }
    sub_1854B8C9C(a2, a3);
    uint64_t v23 = v22;
    swift_release();
    id v24 = objc_msgSend(v12, sel_context);

    if (v24)
    {
      id v36 = sub_1853B6778;
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v26 = swift_allocObject();
      *(unsigned char *)(v26 + 16) = 1;
      uint64_t v27 = v23;
      uint64_t v28 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v26;
      *(void *)(v25 + 24) = v28;
      uint64_t v23 = v27;
      id v36 = sub_1853C588C;
    }
    int v29 = v8[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    if (a2 != 0xD000000000000020 || (uint64_t v30 = sub_1853C2AD8, a3 != 0x8000000186B9E920))
    {
      if (sub_186A1F85C())
      {
        uint64_t v30 = sub_1853C2AD8;
      }
      else if (a2 != 0xD000000000000021 || (uint64_t v30 = sub_18593A40C, a3 != 0x8000000186B9E950))
      {
        if (sub_186A1F85C()) {
          uint64_t v30 = sub_18593A40C;
        }
        else {
          uint64_t v30 = 0;
        }
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 32) = a4;
    *(_DWORD *)(v31 + 40) = v14;
    *(_DWORD *)(v31 + 44) = v16;
    *(_DWORD *)(v31 + 48) = v18;
    *(unsigned char *)(v31 + 52) = v29 == 2;
    *(void *)(v31 + 56) = a2;
    *(void *)(v31 + 64) = a3;
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = a4;
    v32[3] = a2;
    void v32[4] = a3;
    uint64_t v33 = *(void (**)(double *, double *, uint64_t (*)(), uint64_t, id (*)(double *, double *), uint64_t, void (*)(), void *, uint64_t, uint64_t))(v23 + 192);
    id v34 = a4;
    swift_bridgeObjectRetain_n();
    id v35 = v34;
    swift_retain();
    sub_1854B0A60((uint64_t)v30);
    v33(&v39, &v38, v36, v25, sub_1853BE898, v31, sub_1854A8D50, v32, ObjectType, v23);
    swift_release();
    sub_1854AFD40((uint64_t)v30);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1854B8C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1853B7718(a1, a2);
    if (v7)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255D10);
      uint64_t v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  long long v9 = (void *)MEMORY[0x18C109380](v2 + 24);
  double v10 = 0.0;
  if (v9)
  {
    uint64_t v11 = v9;
    id v12 = objc_msgSend(v9, sel_layer);

    int v13 = (void *)sub_186A1E92C();
    id v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186A1F1CC();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v26, 0, sizeof(v26));
    }
    sub_1853B7020((uint64_t)v26, (uint64_t)&v24, &qword_1EB256B10);
    if (v25)
    {
      sub_1853B7BB0(&v24, v23);
      sub_1853B76BC((uint64_t)v23, (uint64_t)v22);
      sub_1853B76BC((uint64_t)v22, (uint64_t)v21);
      sub_1853B985C(0, (unint64_t *)&qword_1EB256318);
      swift_dynamicCast();
      objc_msgSend(v20, sel_doubleValue);
      double v10 = v15;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    sub_1853B93B8((uint64_t)v26, &qword_1EB256B10);
  }
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  int v17 = (void *)swift_allocObject();
  _OWORD v17[2] = v16;
  void v17[3] = a1;
  v17[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255D10);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1854B9410((uint64_t)sub_1854A9384, (uint64_t)v17, v10);
  swift_release();
  *(unsigned char *)(v8 + 144) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v24 = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = 0x8000000000000000;
  sub_1854B2A5C(v8, a1, a2, isUniquelyReferenced_nonNull_native, (void **)&v24, (unint64_t *)&unk_1EB255D00, &qword_1EB255D10);
  *(void *)(v3 + 48) = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_13:
  sub_1854B2C88((unint64_t *)&unk_1EB255D00, &qword_1EB255D10);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1854B9040(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  double v10 = v9;
  uint64_t v13 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_1853B7020(v13, (uint64_t)&v51, &qword_1EB255C18);
  if (v52)
  {
    sub_1854B1F20(&v51, (uint64_t)v53);
    int v14 = v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v9, sel_preferredFrameRateRange);
    int v16 = v15;
    int v18 = v17;
    int v20 = v19;
    unsigned int v44 = objc_msgSend(v9, sel_updateReason);
    if (v14 == 3)
    {
      int v29 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
      uint64_t v27 = 0;
    }
    else
    {
      objc_msgSend(v9, sel__incrementDidEndCount);
      uint64_t v21 = MEMORY[0x18C109380](a9 + 736);
      if (!v21) {
        goto LABEL_5;
      }
      uint64_t v22 = (void *)v21;
      _s23InProcessAnimationStateCMa();
      id v23 = v10;
      id v24 = v22;
      LOBYTE(v22) = sub_186A1F0AC();

      if ((v22 & 1) == 0)
      {
LABEL_5:
        uint64_t v25 = (void *)MEMORY[0x18C109380](a9 + 736);

        if (v25)
        {
          uint64_t v26 = (unsigned char *)MEMORY[0x18C109380](a9 + 736);
          if (v26)
          {
            v26[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;
          }
        }
        swift_unknownObjectWeakAssign();
      }
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v10;
      id v28 = v10;
      int v29 = sub_1854A84E8;
    }
    uint64_t v30 = *(void *)(a9 + 752);
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
    }
    else
    {
      *(void *)(a9 + 752) = v32;
      if (qword_1E8FB0100 == -1)
      {
LABEL_13:
        sub_1854B1F38((uint64_t)v53, (uint64_t)&v51);
        uint64_t v33 = swift_allocObject();
        long long v34 = *(_OWORD *)(a1 + 112);
        *(_OWORD *)(v33 + 128) = *(_OWORD *)(a1 + 96);
        *(_OWORD *)(v33 + 144) = v34;
        long long v35 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v33 + 64) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v33 + 80) = v35;
        long long v36 = *(_OWORD *)(a1 + 80);
        *(_OWORD *)(v33 + 96) = *(_OWORD *)(a1 + 64);
        *(_OWORD *)(v33 + 112) = v36;
        long long v37 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v33 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v33 + 48) = v37;
        long long v38 = a2[4];
        *(_OWORD *)(v33 + 248) = a2[5];
        long long v39 = a2[7];
        *(_OWORD *)(v33 + 264) = a2[6];
        *(_OWORD *)(v33 + 280) = v39;
        long long v40 = *a2;
        *(_OWORD *)(v33 + 184) = a2[1];
        long long v41 = a2[3];
        *(_OWORD *)(v33 + 200) = a2[2];
        *(_OWORD *)(v33 + 216) = v41;
        *(_OWORD *)(v33 + 232) = v38;
        *(void *)(v33 + 16) = a9;
        *(void *)(v33 + 24) = v10;
        *(unsigned char *)(v33 + 160) = *(unsigned char *)(a1 + 128);
        *(unsigned char *)(v33 + 296) = *((unsigned char *)a2 + 128);
        *(_OWORD *)(v33 + 168) = v40;
        sub_1854B1F20(&v51, v33 + 304);
        *(void *)(v33 + 344) = a3;
        *(void *)(v33 + 352) = a4;
        *(void *)(v33 + 360) = a5;
        *(void *)(v33 + 368) = a6;
        *(void *)(v33 + 376) = a7;
        *(void *)(v33 + 384) = a8;
        *(unsigned char *)(v33 + 392) = v14 != 3;
        *(_DWORD *)(v33 + 396) = v44;
        *(_DWORD *)(v33 + 400) = v16;
        *(_DWORD *)(v33 + 404) = v18;
        *(_DWORD *)(v33 + 408) = v20;
        *(void *)(v33 + 416) = v29;
        *(void *)(v33 + 424) = v27;
        id v42 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1854B1FD4((uint64_t)sub_1854BA24C, v33);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v53);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_1853B93B8((uint64_t)&v51, &qword_1EB255C18);
  uint64_t result = sub_186A1F60C();
  __break(1u);
  return result;
}

uint64_t sub_1854B9410(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1854B8540(a1, a2, (uint64_t *)&unk_1EB255D20, &qword_1EB255D18, a3);
}

void sub_1854B9424(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  long long v13 = *(_OWORD *)(a5 + 112);
  v62[6] = *(_OWORD *)(a5 + 96);
  v62[7] = v13;
  char v63 = *(unsigned char *)(a5 + 128);
  long long v14 = *(_OWORD *)(a5 + 48);
  v62[2] = *(_OWORD *)(a5 + 32);
  v62[3] = v14;
  long long v15 = *(_OWORD *)(a5 + 80);
  v62[4] = *(_OWORD *)(a5 + 64);
  v62[5] = v15;
  long long v16 = *(_OWORD *)(a5 + 16);
  v62[0] = *(_OWORD *)a5;
  v62[1] = v16;
  long long v17 = *(_OWORD *)(a6 + 112);
  v60[6] = *(_OWORD *)(a6 + 96);
  v60[7] = v17;
  char v61 = *(unsigned char *)(a6 + 128);
  long long v18 = *(_OWORD *)(a6 + 48);
  v60[2] = *(_OWORD *)(a6 + 32);
  v60[3] = v18;
  long long v19 = *(_OWORD *)(a6 + 80);
  v60[4] = *(_OWORD *)(a6 + 64);
  v60[5] = v19;
  long long v20 = *(_OWORD *)(a6 + 16);
  v60[0] = *(_OWORD *)a6;
  v60[1] = v20;
  if (a7) {
    goto LABEL_18;
  }
  double v24 = *(double *)a5;
  double v23 = *(double *)(a5 + 8);
  double v25 = *(double *)(a5 + 16);
  double v27 = *(double *)a6;
  double v26 = *(double *)(a6 + 8);
  double v28 = *(double *)(a6 + 16);
  id v29 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v29, sel_scale);
  double v31 = v30;

  if (vabdd_f64(v24, v27) > 0.01
    || vabdd_f64(v23, v26) > 0.01
    || vabdd_f64(v25, v28) > 0.01
    || vabdd_f64(*(double *)(a5 + 24), *(double *)(a6 + 24)) > 0.001
    || vabdd_f64(*(double *)(a5 + 32), *(double *)(a6 + 32)) > 0.001
    || vabdd_f64(*(double *)(a5 + 40), *(double *)(a6 + 40)) > 0.001
    || (double v32 = 1.0 / v31, vabdd_f64(*(double *)(a5 + 48), *(double *)(a6 + 48)) > 1.0 / v31)
    || vabdd_f64(*(double *)(a5 + 56), *(double *)(a6 + 56)) > v32
    || vabdd_f64(*(double *)(a5 + 64), *(double *)(a6 + 64)) > v32
    || vabdd_f64(*(double *)(a5 + 72), *(double *)(a6 + 72)) > 0.001
    || vabdd_f64(*(double *)(a5 + 80), *(double *)(a6 + 80)) > 0.001
    || vabdd_f64(*(double *)(a5 + 88), *(double *)(a6 + 88)) > 0.001
    || vabdd_f64(*(double *)(a5 + 96), *(double *)(a6 + 96)) > 0.001
    || vabdd_f64(*(double *)(a5 + 104), *(double *)(a6 + 104)) > 0.001
    || vabdd_f64(*(double *)(a5 + 112), *(double *)(a6 + 112)) > 0.001
    || vabdd_f64(*(double *)(a5 + 120), *(double *)(a6 + 120)) > 0.001)
  {
LABEL_18:
    objc_msgSend(v8, sel_preferredFrameRateRange);
    int v34 = v33;
    int v36 = v35;
    int v38 = v37;
    if (!sub_1853B7BC0())
    {
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      id v40 = a4;
      long long v41 = sub_1854AE0CC(v40, (uint64_t)sub_1854AA548, v39);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v40, v41);
    }
    sub_1854B9A2C(a2, a3);
    uint64_t v43 = v42;
    swift_release();
    id v44 = objc_msgSend(a1, sel_context);

    if (v44)
    {
      double v58 = sub_1853B6778;
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v46 = swift_allocObject();
      *(unsigned char *)(v46 + 16) = 1;
      uint64_t v47 = a3;
      uint64_t v48 = v43;
      uint64_t v49 = a4;
      uint64_t v50 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v46;
      *(void *)(v45 + 24) = v50;
      a4 = v49;
      uint64_t v43 = v48;
      a3 = v47;
      double v58 = sub_185967700;
    }
    int v51 = v8[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    if (a2 != 0xD000000000000020 || (uint64_t v52 = sub_1853C2AD8, a3 != 0x8000000186B9E920))
    {
      if (sub_186A1F85C())
      {
        uint64_t v52 = sub_1853C2AD8;
      }
      else if (a2 != 0xD000000000000021 || (uint64_t v52 = sub_18593A40C, a3 != 0x8000000186B9E950))
      {
        if (sub_186A1F85C()) {
          uint64_t v52 = sub_18593A40C;
        }
        else {
          uint64_t v52 = 0;
        }
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v52;
    *(void *)(v53 + 24) = 0;
    *(void *)(v53 + 32) = a4;
    *(_DWORD *)(v53 + 40) = v34;
    *(_DWORD *)(v53 + 44) = v36;
    *(_DWORD *)(v53 + 48) = v38;
    *(unsigned char *)(v53 + 52) = v51 == 2;
    *(void *)(v53 + 56) = a2;
    *(void *)(v53 + 64) = a3;
    long long v54 = (void *)swift_allocObject();
    v54[2] = a4;
    v54[3] = a2;
    v54[4] = a3;
    float64x2_t v55 = *(void (**)(_OWORD *, _OWORD *, uint64_t (*)(), uint64_t, id (*)(uint64_t, uint64_t), uint64_t, void (*)(), void *, uint64_t, uint64_t))(v43 + 192);
    id v56 = a4;
    swift_bridgeObjectRetain_n();
    id v57 = v56;
    swift_retain();
    sub_1854B0A60((uint64_t)v52);
    v55(v62, v60, v58, v45, sub_1853B47D0, v53, sub_1854A8D50, v54, ObjectType, v43);
    swift_release();
    sub_1854AFD40((uint64_t)v52);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1854B9A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1853B7718(a1, a2);
    if (v7)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE00);
      uint64_t v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  long long v9 = (void *)MEMORY[0x18C109380](v2 + 24);
  double v10 = v9;
  long long v11 = 0uLL;
  if (v9)
  {
    id v12 = objc_msgSend(v9, sel_layer, 0.0);

    long long v13 = (void *)sub_186A1E92C();
    id v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186A1F1CC();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    sub_1853B7020((uint64_t)&v41, (uint64_t)&v37, &qword_1EB256B10);
    if (v38)
    {
      sub_1853B7BB0(&v37, v36);
      sub_1853B76BC((uint64_t)v36, (uint64_t)v35);
      sub_1853B76BC((uint64_t)v35, (uint64_t)v34);
      sub_185AC77D4((uint64_t)v34, 0, (uint64_t)v39);
      long long v32 = v39[1];
      long long v33 = v39[0];
      long long v30 = v39[3];
      long long v31 = v39[2];
      long long v28 = v39[5];
      long long v29 = v39[4];
      long long v26 = v39[7];
      long long v27 = v39[6];
      LOBYTE(v10) = v40;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
      sub_1853B93B8((uint64_t)&v41, &qword_1EB256B10);
      long long v21 = v26;
      long long v20 = v27;
      long long v19 = v28;
      long long v18 = v29;
      long long v17 = v30;
      long long v16 = v31;
      long long v15 = v32;
      long long v11 = v33;
    }
    else
    {
      sub_1853B93B8((uint64_t)&v41, &qword_1EB256B10);
      LOBYTE(v10) = 0;
      long long v15 = 0uLL;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      long long v20 = 0uLL;
      long long v21 = 0uLL;
      long long v11 = 0uLL;
    }
  }
  else
  {
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
    long long v21 = 0uLL;
  }
  long long v41 = v11;
  long long v42 = v15;
  long long v43 = v16;
  long long v44 = v17;
  long long v45 = v18;
  long long v46 = v19;
  long long v47 = v20;
  long long v48 = v21;
  char v49 = (char)v10;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  double v23 = (void *)swift_allocObject();
  _OWORD v23[2] = v22;
  v23[3] = a1;
  v23[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE00);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1854B9E38(&v41, (uint64_t)sub_1854A9390, (uint64_t)v23);
  swift_release();
  *(unsigned char *)(v8 + 744) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v36[0] = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = 0x8000000000000000;
  sub_1854B2A5C(v8, a1, a2, isUniquelyReferenced_nonNull_native, (void **)v36, &qword_1E8FAFDF8, &qword_1E8FAFE00);
  *(void *)(v3 + 48) = *(void *)&v36[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_14:
  sub_1854B2C88(&qword_1E8FAFDF8, &qword_1E8FAFE00);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1854B9E38(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  long long v5 = a1[7];
  long long v31 = a1[6];
  long long v32 = v5;
  char v33 = *((unsigned char *)a1 + 128);
  long long v6 = a1[3];
  long long v27 = a1[2];
  long long v28 = v6;
  long long v7 = a1[5];
  long long v29 = a1[4];
  long long v30 = v7;
  long long v8 = a1[1];
  long long v25 = *a1;
  long long v26 = v8;
  uint64_t v22 = sub_186A1EF8C();
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  long long v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_186A1E6FC();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_186A1EF6C();
  MEMORY[0x1F4188790](v13 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE48);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)(v4 + 32) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00B0);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  *(void *)(v4 + 40) = v15;
  sub_1854BABAC((uint64_t)v34);
  sub_1854BA1E4((uint64_t)v34, v4 + 48);
  sub_1854BA1E4((uint64_t)v34, v4 + 184);
  v35[0] = 0;
  sub_1854BA1E4((uint64_t)v34, (uint64_t)&v35[1]);
  sub_1854BA1E4((uint64_t)v34, (uint64_t)&v35[18]);
  BYTE1(v35[34]) = 0;
  sub_1854BA1E4((uint64_t)v34, (uint64_t)&v35[35]);
  memcpy((void *)(v4 + 320), v35, 0x199uLL);
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v4 + 760) = 0;
  uint64_t v16 = v24;
  *(void *)(v4 + 768) = v23;
  *(void *)(v4 + 776) = v16;
  sub_1854B3328();
  swift_retain();
  sub_186A1EF5C();
  sub_186A1E6DC();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v22);
  uint64_t v17 = sub_186A1EFCC();
  v36[6] = v31;
  v36[7] = v32;
  _OWORD v36[2] = v27;
  v36[3] = v28;
  void v36[4] = v29;
  v36[5] = v30;
  long long v18 = v25;
  v36[0] = v25;
  v36[1] = v26;
  *(_OWORD *)((char *)&v36[13] + 8) = v30;
  *(_OWORD *)((char *)&v36[14] + 8) = v31;
  *(_OWORD *)((char *)&v36[15] + 8) = v32;
  *(_OWORD *)((char *)&v36[9] + 8) = v26;
  *(_OWORD *)((char *)&v36[10] + 8) = v27;
  *(_OWORD *)((char *)&v36[11] + 8) = v28;
  *(_OWORD *)((char *)&v36[12] + 8) = v29;
  *(void *)(v4 + 16) = v17;
  LOBYTE(v36[8]) = v33;
  BYTE8(v36[16]) = v33;
  *(_OWORD *)((char *)&v36[8] + 8) = v18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFE38);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 284) = 0;
  memcpy((void *)(v19 + 16), v36, 0x109uLL);
  *(void *)(v4 + 24) = v19;
  swift_beginAccess();
  sub_1854BA1E4((uint64_t)v34, v4 + 184);
  swift_beginAccess();
  sub_1854BA1E4((uint64_t)v34, v4 + 48);
  *(unsigned char *)(v4 + 744) = 0;
  *(void *)(v4 + 752) = 0;
  return v4;
}

uint64_t sub_1854BA1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1854BA24C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  long long v5 = *(_OWORD *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 384);
  char v7 = *(unsigned char *)(v0 + 392);
  int v8 = *(_DWORD *)(v0 + 396);
  float v9 = *(float *)(v0 + 400);
  float v10 = *(float *)(v0 + 404);
  float v11 = *(float *)(v0 + 408);
  uint64_t v12 = *(void *)(v0 + 416);
  uint64_t v13 = *(void *)(v0 + 424);
  long long v14 = *(_OWORD *)(v0 + 144);
  v23[6] = *(_OWORD *)(v0 + 128);
  v23[7] = v14;
  char v24 = *(unsigned char *)(v0 + 160);
  long long v15 = *(_OWORD *)(v0 + 80);
  _OWORD v23[2] = *(_OWORD *)(v0 + 64);
  v23[3] = v15;
  long long v16 = *(_OWORD *)(v0 + 112);
  v23[4] = *(_OWORD *)(v0 + 96);
  v23[5] = v16;
  long long v17 = *(_OWORD *)(v0 + 48);
  v23[0] = *(_OWORD *)(v0 + 32);
  v23[1] = v17;
  long long v18 = *(_OWORD *)(v0 + 248);
  long long v19 = *(_OWORD *)(v0 + 280);
  v25[6] = *(_OWORD *)(v0 + 264);
  v25[7] = v19;
  char v26 = *(unsigned char *)(v0 + 296);
  long long v20 = *(_OWORD *)(v0 + 184);
  long long v21 = *(_OWORD *)(v0 + 216);
  _OWORD v25[2] = *(_OWORD *)(v0 + 200);
  v25[3] = v21;
  v25[4] = *(_OWORD *)(v0 + 232);
  v25[5] = v18;
  v25[0] = *(_OWORD *)(v0 + 168);
  v25[1] = v20;
  return sub_1854BA334(v9, v10, v11, v1, v23, v25, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive), (void *)(v0 + 304), v2, v3, v4, v5, *((uint64_t *)&v5 + 1), v6, v7, v8, v12, v13);
}

uint64_t sub_1854BA334(float a1, float a2, float a3, uint64_t a4, long long *a5, long long *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  void (*v37)(void *__return_ptr, uint64_t, void *, long long *, long long *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int v47;
  BOOL v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  uint64_t v55;
  NSObject *v58;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  uint64_t v62;
  unsigned char v63[160];
  unsigned char v64[136];
  unsigned char v65[160];
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  char v74;
  __int16 v75;
  void v76[119];
  __int16 v77;
  void v78[11];
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  char v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  char v96;
  long long v97[8];
  char v98;
  long long v99;
  long long v100;
  long long v101;
  long long v102;
  long long v103;
  long long v104;
  long long v105;
  long long v106;
  char v107;
  long long v108;
  long long v109;
  long long v110;
  long long v111;
  long long v112;
  long long v113;
  long long v114;
  long long v115;
  char v116;

  long long v22 = a5[4];
  int8x16_t v93 = a5[5];
  long long v23 = a5[7];
  float64x2_t v94 = a5[6];
  long long v95 = v23;
  long long v24 = *a5;
  char v89 = a5[1];
  long long v25 = a5[3];
  char v90 = a5[2];
  uint64_t v91 = v25;
  int8x16_t v92 = v22;
  char v88 = v24;
  long long v26 = a6[4];
  __int8 v84 = a6[5];
  long long v27 = a6[7];
  uint64_t v85 = a6[6];
  char v86 = v27;
  long long v28 = *a6;
  char v80 = a6[1];
  long long v29 = a6[3];
  char v81 = a6[2];
  float64x2_t v82 = v29;
  uint64_t v83 = v26;
  long long v96 = *((unsigned char *)a5 + 128);
  char v87 = *((unsigned char *)a6 + 128);
  double v79 = v28;
  uint64_t v30 = a8[3];
  uint64_t v31 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v30);
  swift_beginAccess();
  uint64_t v32 = *(unsigned __int8 *)(v18 + 593);
  int8x16_t v62 = v18;
  char v33 = *(os_unfair_lock_s **)(v18 + 32);
  int v34 = v33 + 4;
  int v35 = v33 + 6;
  os_unfair_lock_lock(v33 + 6);
  uint64_t v60 = v34;
  sub_1854AEC24(v34, v76);
  char v61 = v35;
  os_unfair_lock_unlock(v35);
  uint64_t v36 = v76[0];
  if (v76[0])
  {
    swift_beginAccess();
    sub_1853B7020(v36 + 24, (uint64_t)v76, &qword_1E8FAFDE0);
    swift_release();
  }
  else
  {
    bzero(v76, 0x3B8uLL);
    double v77 = -256;
  }
  long long v37 = *(void (**)(void *__return_ptr, uint64_t, void *, long long *, long long *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v31 + 16);
  uint64_t v38 = sub_1854BABCC();
  v37(v78, v32, v76, &v88, &v79, &type metadata for UIAnimatableTransform, v38, v30, v31);
  sub_1853B93B8((uint64_t)v76, &qword_1E8FAFDE8);
  os_unfair_lock_lock(v61);
  sub_1854AEC24(v60, v76);
  os_unfair_lock_unlock(v61);
  uint64_t v39 = v76[0];
  if (v76[0])
  {
    swift_beginAccess();
    sub_1853B7020(v39 + 24, (uint64_t)&v66, &qword_1E8FAFDE0);
    swift_release();
  }
  else
  {
    bzero(&v66, 0x3B8uLL);
    uint64_t v75 = -256;
  }
  swift_beginAccess();
  uint64_t v104 = v93;
  float64x2_t v105 = v94;
  BOOL v106 = v95;
  float64x2_t v107 = v96;
  long long v100 = v89;
  long long v101 = v90;
  long long v102 = v91;
  uint64_t v103 = v92;
  long long v99 = v88;
  long long v113 = v84;
  int8x16_t v114 = v85;
  int8x16_t v115 = v86;
  int8x16_t v116 = v87;
  uint64_t v109 = v80;
  uint64_t v110 = v81;
  uint64_t v111 = v82;
  uint64_t v112 = v83;
  uint64_t v108 = v79;
  sub_1854BAC20((uint64_t)&v66);
  swift_endAccess();
  sub_1853B93B8((uint64_t)&v66, &qword_1E8FAFDE8);
  os_unfair_lock_lock(v61);
  sub_1854AEC24(v60, &v66);
  os_unfair_lock_unlock(v61);
  char v40 = v66;
  if ((void)v66)
  {
    long long v41 = *(void (**)(void))(v66 + 984);
    if (v41)
    {
      *(void *)(v66 + 984) = 0;
      *(void *)(v40 + 992) = 0;
      swift_retain();
      sub_1854AFD40((uint64_t)v41);
      v41(0);
      sub_1854AFD40((uint64_t)v41);
    }
    *(unsigned char *)(v40 + 1000) = 1;
    swift_release();
  }
  sub_1853B7020((uint64_t)v76, (uint64_t)&v66, &qword_1E8FAFDE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFDF0);
  long long v42 = swift_allocObject();
  *(_OWORD *)(v42 + 984) = 0u;
  swift_unknownObjectWeakInit();
  sub_1853B8150((uint64_t)&v66, v42 + 24, &qword_1E8FAFDE0);
  *(_WORD *)(v42 + 1000) = 0;
  long long v43 = *(void *)(v42 + 984);
  *(void *)(v42 + 984) = a17;
  *(void *)(v42 + 992) = a18;
  swift_retain();
  sub_1854AFD40(v43);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FB0160);
  long long v44 = swift_allocObject();
  *(_DWORD *)(v44 + 16) = 0;
  *(void *)(v42 + 16) = v44;
  if (a15) {
    swift_unknownObjectWeakAssign();
  }
  swift_beginAccess();
  sub_1853B8150(v62 + 184, (uint64_t)v64, &qword_1E8FAFE30);
  sub_1853B8150((uint64_t)v64, (uint64_t)v65, &qword_1E8FAFE30);
  if (sub_1854C1EBC((uint64_t)v65) != 1)
  {
    sub_1853B8150((uint64_t)v64, (uint64_t)&v66, &qword_1E8FAFE30);
    v97[5] = v71;
    v97[6] = v72;
    v97[7] = v73;
    v97[1] = v67;
    v97[2] = v68;
    v97[3] = v69;
    v97[4] = v70;
    long long v98 = v74;
    v97[0] = v66;
    sub_1859530B4(v97);
  }
  long long v45 = swift_allocObject();
  sub_1854BABAC((uint64_t)v63);
  sub_1853B8150((uint64_t)v63, v45 + 16, &qword_1E8FAFE30);
  if (qword_1E8FB0100 != -1) {
    swift_once();
  }
  float64x2_t v55 = qword_1E8FD58B0;
  long long v46 = *(unsigned char *)(v62 + 744);
  sub_1853B7020((uint64_t)v76, (uint64_t)&v66, &qword_1E8FAFDE0);
  long long v47 = HIBYTE(v75);
  if (HIBYTE(v75) == 2) {
    sub_1853B93B8((uint64_t)&v66, &qword_1E8FAFDE0);
  }
  long long v48 = v47 == 2;
  char v49 = (void *)swift_allocObject();
  v49[2] = v42;
  v49[3] = a9;
  v49[4] = a10;
  v49[5] = v62;
  v49[6] = v45;
  v49[7] = a11;
  v49[8] = a12;
  v49[9] = a13;
  v49[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  uint64_t v50 = swift_allocObject();
  *(float *)(v50 + 16) = a1;
  *(float *)(v50 + 20) = a2;
  *(float *)(v50 + 24) = a3;
  *(_DWORD *)(v50 + 28) = a16;
  *(unsigned char *)(v50 + 32) = v46;
  *(unsigned char *)(v50 + 33) = v48;
  *(void *)(v50 + 40) = sub_1853C0534;
  *(void *)(v50 + 48) = v49;
  double v58 = *(NSObject **)(v55 + 264);
  int v51 = swift_allocObject();
  *(void *)(v51 + 16) = v55;
  *(void *)(v51 + 24) = v50;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_1853C10BC;
  *(void *)(v52 + 24) = v51;
  *(void *)&uint64_t v68 = sub_1853BE6D4;
  *((void *)&v68 + 1) = v52;
  *(void *)&float64_t v66 = MEMORY[0x1E4F143A8];
  *((void *)&v66 + 1) = 1107296256;
  *(void *)&float64_t v67 = sub_1853BE46C;
  *((void *)&v67 + 1) = &block_descriptor_713;
  uint64_t v53 = _Block_copy(&v66);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v58, v53);
  _Block_release(v53);
  LOBYTE(v53) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v53)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v61);
    sub_1854AEC5C(v60);
    os_unfair_lock_unlock(v61);
    swift_release_n();
    sub_1853B93B8((uint64_t)v76, &qword_1E8FAFDE0);
    sub_1854AECBC((uint64_t)v78);
    return swift_release();
  }
  return result;
}

double sub_1854BABAC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = 3;
  return result;
}

unint64_t sub_1854BABCC()
{
  unint64_t result = qword_1E8FAFE20;
  if (!qword_1E8FAFE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E8FAFE20);
  }
  return result;
}

void sub_1854BAC20(uint64_t a1)
{
  void (*v142)(long long *__return_ptr, unsigned char *, long long *, uint64_t, uint64_t, void, void, double);
  uint64_t v143;
  uint64_t v144;
  double v145;
  double v146;
  double v147;
  long long v148;
  long long v149;
  long long v150;
  long long v151;
  long long v152;
  long long v153;
  long long v154;
  long long v155;
  long long v156;
  long long v157;
  long long v158;
  long long v159;
  uint64_t v160;
  long long v161;
  long long v162;
  long long v163;
  long long v164;
  long long v165;
  long long v166;
  long long v167;
  long long v168;
  long long v169;
  long long v170;
  long long v171;
  long long v172;
  long long v173;
  long long v174;
  long long v175;
  long long v176;
  long long v177;
  long long v178;
  unsigned char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  long long v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned char v206[136];
  unsigned char v207[136];
  unsigned char v208[136];
  _OWORD v209[29];
  unsigned char __dst[953];
  char v211;
  unsigned char __src[954];
  unsigned char v213[136];
  _OWORD v214[8];
  char v215;
  _OWORD v216[8];
  char v217;
  unsigned char v218[80];
  _OWORD v219[8];
  char v220;
  _OWORD v221[8];
  char v222;
  long long v223;
  long long v224;
  long long v225;
  long long v226;
  long long v227;
  long long v228;
  long long v229;
  long long v230;
  char v231;
  long long v232;
  long long v233;
  long long v234;
  long long v235;
  long long v236;
  long long v237;
  long long v238;
  long long v239;
  char v240;
  long long v241;
  int8x16_t v242;
  int8x16_t v243;
  int8x16_t v244;
  int8x16_t v245;
  long long v246;
  long long v247;
  long long v248;
  char v249;
  _OWORD v250[8];
  char v251;
  _OWORD v252[8];
  char v253;
  _OWORD v254[8];
  char v255;
  void v256[2];
  uint64_t v257;
  double v258;
  uint64_t v259;
  uint64_t v260;
  double v261;
  long long v262;
  long long v263;
  long long v264;
  long long v265;
  long long v266;
  long long v267;
  long long v268;
  long long v269;
  char v270;
  long long v271;
  long long v272;
  long long v273;
  long long v274;
  long long v275;
  long long v276;
  long long v277;
  long long v278;
  char v279;

  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (void *)v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  long long v14 = v13;
  long long v15 = *(_OWORD *)v3;
  long long v16 = *(_OWORD *)(v3 + 16);
  long long v17 = *(_OWORD *)(v3 + 32);
  float64x2_t v265 = *(_OWORD *)(v3 + 48);
  uint64_t v264 = v17;
  uint64_t v262 = v15;
  uint64_t v263 = v16;
  long long v18 = *(_OWORD *)(v3 + 64);
  long long v19 = *(_OWORD *)(v3 + 80);
  long long v20 = *(_OWORD *)(v3 + 96);
  long long v21 = *(_OWORD *)(v3 + 112);
  double v270 = *(unsigned char *)(v3 + 128);
  float64x2_t v269 = v21;
  float64x2_t v268 = v20;
  int64x2_t v266 = v18;
  float64x2_t v267 = v19;
  long long v22 = *(_OWORD *)(v5 + 112);
  float64x2_t v277 = *(_OWORD *)(v5 + 96);
  float64x2_t v278 = v22;
  float64x2_t v279 = *(unsigned char *)(v5 + 128);
  long long v23 = *(_OWORD *)(v5 + 48);
  uint64_t v273 = *(_OWORD *)(v5 + 32);
  uint64_t v274 = v23;
  long long v24 = *(_OWORD *)(v5 + 64);
  float64x2_t v276 = *(_OWORD *)(v5 + 80);
  float64x2_t v275 = v24;
  long long v25 = *(_OWORD *)v5;
  uint64_t v272 = *(_OWORD *)(v5 + 16);
  double v271 = v25;
  *(unsigned char *)(v1 + 273) = v7;
  sub_1854B5564(v9, (uint64_t)__src);
  if (__src[80] == 2)
  {
    sub_1854B1F20((long long *)__src, (uint64_t)v206);
    long long v26 = &qword_1E8FAFDE8;
    sub_1853B7020(v12, (uint64_t)__src, &qword_1E8FAFDE8);
    if (HIBYTE(*(unsigned __int16 *)&__src[952]) <= 0xFEu)
    {
      if ((*(_WORD *)&__src[952] & 0xFF00) == 0x200)
      {
        memcpy(__dst, __src, 0x1D0uLL);
        uint64_t v27 = *(void *)&v206[32];
        uint64_t v203 = *(void *)&v206[24];
        __swift_project_boxed_opaque_existential_0Tm(v206, *(uint64_t *)&v206[24]);
        *(_OWORD *)&v208[96] = *(_OWORD *)&__dst[416];
        *(_OWORD *)&v208[112] = *(_OWORD *)&__dst[432];
        v208[128] = __dst[448];
        *(_OWORD *)&v208[32] = *(_OWORD *)&__dst[352];
        *(_OWORD *)&v208[48] = *(_OWORD *)&__dst[368];
        *(_OWORD *)&v208[64] = *(_OWORD *)&__dst[384];
        *(_OWORD *)&v208[80] = *(_OWORD *)&__dst[400];
        *(_OWORD *)double v208 = *(_OWORD *)&__dst[320];
        *(_OWORD *)&v208[16] = *(_OWORD *)&__dst[336];
        v209[6] = *(_OWORD *)&__dst[144];
        v209[7] = *(_OWORD *)&__dst[160];
        LOBYTE(v209[8]) = __dst[176];
        v209[2] = *(_OWORD *)&__dst[80];
        v209[3] = *(_OWORD *)&__dst[96];
        v209[4] = *(_OWORD *)&__dst[112];
        v209[5] = *(_OWORD *)&__dst[128];
        v209[0] = *(_OWORD *)&__dst[48];
        v209[1] = *(_OWORD *)&__dst[64];
        sub_1854C1254((uint64_t)v208, (uint64_t)v209, (uint64_t)v207);
        double v28 = *(double *)__dst;
        long long v29 = *(uint64_t (**)(unsigned char *, unsigned char *, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v27 + 24);
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D50);
        uint64_t v31 = sub_1854B2C88(&qword_1E8FB2D58, &qword_1E8FB2D50);
        if (v29(&__dst[8], v207, &__dst[456], v30, v31, v203, v27, v28))
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)&__dst[8], (uint64_t *)v206);
          long long v32 = *(_OWORD *)(v4 + 112);
          *(_OWORD *)&__dst[416] = *(_OWORD *)(v4 + 96);
          *(_OWORD *)&__dst[432] = v32;
          __dst[448] = *(unsigned char *)(v4 + 128);
          long long v33 = *(_OWORD *)(v4 + 48);
          *(_OWORD *)&__dst[352] = *(_OWORD *)(v4 + 32);
          *(_OWORD *)&__dst[368] = v33;
          long long v34 = *(_OWORD *)(v4 + 80);
          *(_OWORD *)&__dst[384] = *(_OWORD *)(v4 + 64);
          *(_OWORD *)&__dst[400] = v34;
          long long v35 = *(_OWORD *)(v4 + 16);
          *(_OWORD *)&__dst[320] = *(_OWORD *)v4;
          *(_OWORD *)&__dst[336] = v35;
        }
        else
        {
          *(_OWORD *)&__dst[144] = *(_OWORD *)&v208[96];
          *(_OWORD *)&__dst[160] = *(_OWORD *)&v208[112];
          *(_OWORD *)&__dst[80] = *(_OWORD *)&v208[32];
          *(_OWORD *)&__dst[96] = *(_OWORD *)&v208[48];
          *(_OWORD *)&__dst[112] = *(_OWORD *)&v208[64];
          *(_OWORD *)&__dst[128] = *(_OWORD *)&v208[80];
          *(_OWORD *)&__dst[48] = *(_OWORD *)v208;
          *(_OWORD *)&__dst[64] = *(_OWORD *)&v208[16];
          *(_OWORD *)&__dst[264] = *(_OWORD *)&v208[80];
          *(_OWORD *)&__dst[280] = *(_OWORD *)&v208[96];
          *(_OWORD *)&__dst[296] = *(_OWORD *)&v208[112];
          *(_OWORD *)&__dst[200] = *(_OWORD *)&v208[16];
          *(_OWORD *)&__dst[216] = *(_OWORD *)&v208[32];
          *(_OWORD *)&__dst[232] = *(_OWORD *)&v208[48];
          __dst[176] = v208[128];
          __dst[312] = v208[128];
          *(_OWORD *)&__dst[248] = *(_OWORD *)&v208[64];
          *(_OWORD *)&__dst[184] = *(_OWORD *)v208;
          long long v84 = *(_OWORD *)(v4 + 112);
          *(_OWORD *)&__dst[416] = *(_OWORD *)(v4 + 96);
          *(_OWORD *)&__dst[432] = v84;
          __dst[448] = *(unsigned char *)(v4 + 128);
          long long v85 = *(_OWORD *)(v4 + 48);
          *(_OWORD *)&__dst[352] = *(_OWORD *)(v4 + 32);
          *(_OWORD *)&__dst[368] = v85;
          long long v86 = *(_OWORD *)(v4 + 80);
          *(_OWORD *)&__dst[384] = *(_OWORD *)(v4 + 64);
          *(_OWORD *)&__dst[400] = v86;
          long long v87 = *(_OWORD *)(v4 + 16);
          *(_OWORD *)&__dst[320] = *(_OWORD *)v4;
          *(_OWORD *)&__dst[336] = v87;
          __swift_assign_boxed_opaque_existential_1((uint64_t *)&__dst[8], (uint64_t *)v206);
          *(void *)__dst = 0;
          unint64_t v88 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
          swift_bridgeObjectRelease();
          *(void *)&__dst[456] = v88;
        }
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v206);
        memcpy(v14, __dst, 0x1D0uLL);
        goto LABEL_18;
      }
      long long v26 = &qword_1E8FAFDE0;
    }
    sub_1853B93B8((uint64_t)__src, v26);
    sub_1854B1F38((uint64_t)v206, (uint64_t)(v14 + 1));
    *long long v14 = 0;
    *(_WORD *)((char *)v14 + 449) = 0;
    unint64_t v68 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
    long long v69 = *(_OWORD *)(v6 + 80);
    long long v71 = *(_OWORD *)(v6 + 96);
    long long v70 = *(_OWORD *)(v6 + 112);
    *((_OWORD *)v14 + 9) = v71;
    *((_OWORD *)v14 + 10) = v70;
    long long v72 = *(_OWORD *)(v6 + 16);
    long long v74 = *(_OWORD *)(v6 + 32);
    long long v73 = *(_OWORD *)(v6 + 48);
    *((_OWORD *)v14 + 5) = v74;
    *((_OWORD *)v14 + 6) = v73;
    long long v75 = *(_OWORD *)(v6 + 48);
    long long v77 = *(_OWORD *)(v6 + 64);
    long long v76 = *(_OWORD *)(v6 + 80);
    *((_OWORD *)v14 + 7) = v77;
    *((_OWORD *)v14 + 8) = v76;
    long long v78 = *(_OWORD *)(v6 + 16);
    long long v79 = *(_OWORD *)v6;
    *((_OWORD *)v14 + 3) = *(_OWORD *)v6;
    *((_OWORD *)v14 + 4) = v78;
    *(_OWORD *)(v14 + 33) = v69;
    *(_OWORD *)(v14 + 35) = v71;
    *(_OWORD *)(v14 + 37) = *(_OWORD *)(v6 + 112);
    *(_OWORD *)(v14 + 25) = v72;
    *(_OWORD *)(v14 + 27) = v74;
    *(_OWORD *)(v14 + 29) = v75;
    v14[57] = v68;
    *((unsigned char *)v14 + 176) = *(unsigned char *)(v6 + 128);
    *((unsigned char *)v14 + 312) = *(unsigned char *)(v6 + 128);
    *(_OWORD *)(v14 + 31) = v77;
    *(_OWORD *)(v14 + 23) = v79;
    long long v80 = *(_OWORD *)(v4 + 112);
    *((_OWORD *)v14 + 26) = *(_OWORD *)(v4 + 96);
    *((_OWORD *)v14 + 27) = v80;
    *((unsigned char *)v14 + 448) = *(unsigned char *)(v4 + 128);
    long long v81 = *(_OWORD *)(v4 + 48);
    *((_OWORD *)v14 + 22) = *(_OWORD *)(v4 + 32);
    *((_OWORD *)v14 + 23) = v81;
    long long v82 = *(_OWORD *)(v4 + 80);
    *((_OWORD *)v14 + 24) = *(_OWORD *)(v4 + 64);
    *((_OWORD *)v14 + 25) = v82;
    long long v83 = *(_OWORD *)(v4 + 16);
    *((_OWORD *)v14 + 20) = *(_OWORD *)v4;
    *((_OWORD *)v14 + 21) = v83;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v206);
LABEL_18:
    char v56 = 2;
    goto LABEL_19;
  }
  sub_1854B5730((uint64_t)__src);
  sub_1854B5564(v10, (uint64_t)v209);
  if (LOBYTE(v209[5]) == 1)
  {
    *(_OWORD *)&v208[32] = v209[2];
    *(_OWORD *)&v208[48] = v209[3];
    *(_OWORD *)&v208[64] = v209[4];
    *(_OWORD *)double v208 = v209[0];
    *(_OWORD *)&v208[16] = v209[1];
    sub_1854B1F38((uint64_t)v208, (uint64_t)v207);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D78);
    swift_dynamicCast();
    sub_1854B1F38((uint64_t)&v208[40], (uint64_t)v206);
    swift_dynamicCast();
    long long v36 = *(_OWORD *)&__src[80];
    *(_OWORD *)(v14 + 27) = *(_OWORD *)&__src[80];
    long long v37 = *(_OWORD *)&__src[96];
    *(_OWORD *)(v14 + 29) = *(_OWORD *)&__src[96];
    long long v38 = *(_OWORD *)&__src[112];
    *(_OWORD *)(v14 + 31) = *(_OWORD *)&__src[112];
    long long v39 = *(_OWORD *)&__src[16];
    *(_OWORD *)(v14 + 19) = *(_OWORD *)&__src[16];
    long long v40 = *(_OWORD *)&__src[32];
    *(_OWORD *)(v14 + 21) = *(_OWORD *)&__src[32];
    long long v41 = *(_OWORD *)&__src[48];
    *(_OWORD *)(v14 + 23) = *(_OWORD *)&__src[48];
    long long v42 = *(_OWORD *)&__src[64];
    *(_OWORD *)(v14 + 25) = *(_OWORD *)&__src[64];
    long long v43 = *(_OWORD *)__src;
    *(_OWORD *)(v14 + 17) = *(_OWORD *)__src;
    long long v44 = *(_OWORD *)&__dst[96];
    long long v45 = *(_OWORD *)&__dst[112];
    long long v46 = *(_OWORD *)&__dst[112];
    *((_OWORD *)v14 + 6) = *(_OWORD *)&__dst[96];
    *((_OWORD *)v14 + 7) = v45;
    long long v47 = *(_OWORD *)&__dst[48];
    long long v48 = *(_OWORD *)&__dst[32];
    long long v49 = *(_OWORD *)&__dst[48];
    *((_OWORD *)v14 + 2) = *(_OWORD *)&__dst[32];
    *((_OWORD *)v14 + 3) = v47;
    long long v50 = *(_OWORD *)&__dst[80];
    long long v51 = *(_OWORD *)&__dst[80];
    long long v52 = *(_OWORD *)&__dst[64];
    *((_OWORD *)v14 + 4) = *(_OWORD *)&__dst[64];
    *((_OWORD *)v14 + 5) = v50;
    long long v53 = *(_OWORD *)&__dst[16];
    long long v55 = *(_OWORD *)__dst;
    long long v54 = *(_OWORD *)&__dst[16];
    *(_OWORD *)long long v14 = *(_OWORD *)__dst;
    *((_OWORD *)v14 + 1) = v53;
    *((_OWORD *)v14 + 23) = v37;
    *((_OWORD *)v14 + 24) = v38;
    *((_OWORD *)v14 + 19) = v40;
    *((_OWORD *)v14 + 20) = v41;
    *((_OWORD *)v14 + 21) = v42;
    *((_OWORD *)v14 + 22) = v36;
    *((_OWORD *)v14 + 17) = v43;
    *((_OWORD *)v14 + 18) = v39;
    *(_OWORD *)(v14 + 65) = v44;
    *(_OWORD *)(v14 + 67) = v46;
    *(_OWORD *)(v14 + 57) = v48;
    *(_OWORD *)(v14 + 59) = v49;
    *(_OWORD *)(v14 + 61) = v52;
    *(_OWORD *)(v14 + 63) = v51;
    *((unsigned char *)v14 + 264) = __src[128];
    *((unsigned char *)v14 + 128) = __dst[128];
    *((unsigned char *)v14 + 400) = __src[128];
    *((unsigned char *)v14 + 552) = __dst[128];
    *(_OWORD *)(v14 + 53) = v55;
    *(_OWORD *)(v14 + 55) = v54;
    v14[51] = 0x3FEFEF9DB22D0E56;
    v14[52] = 0;
    sub_185965DD4((uint64_t)v208);
    char v56 = 1;
LABEL_19:
    *((unsigned char *)v14 + 953) = v56;
    return;
  }
  sub_1854B5730((uint64_t)v209);
  if (v8)
  {
    double v58 = CACurrentMediaTime();
    int64x2_t v204 = v1;
    double v59 = *(double *)v1;
    if (qword_1E8FB0100 != -1) {
      swift_once();
    }
    double v60 = v58 - v59;
    uint64_t v61 = qword_1E8FD58B0;
    double v62 = *(double *)(qword_1E8FD58B0 + 240);
    if (v62 == 0.0)
    {
      char v63 = self;
      id v64 = objc_msgSend(v63, sel_mainScreen);
      uint64_t v65 = (uint64_t)objc_msgSend(v64, sel_maximumFramesPerSecond);

      if (v65 < 1)
      {
        uint64_t v67 = 60;
      }
      else
      {
        id v66 = objc_msgSend(v63, sel_mainScreen);
        uint64_t v67 = (uint64_t)objc_msgSend(v66, sel_maximumFramesPerSecond);
      }
      double v62 = 1.0 / ((double)v67 * 1.001);
      *(double *)(v61 + 240) = v62;
    }
    uint64_t v2 = (void *)v204;
    if (v62 * 0.9 < v60)
    {
      if (v59 != 0.0)
      {
        char v89 = (long long *)(v204 + 280);
        sub_1853B8150(v204 + 280, (uint64_t)__dst, &qword_1E8FAFE30);
        sub_1853B8150((uint64_t)__dst, (uint64_t)__src, &qword_1E8FAFE30);
        if (sub_1854C1EBC((uint64_t)__src) == 1)
        {
          memset(v209, 0, 129);
          signpost_c2_removePresentationModifier_end(v209, v90);
          sub_1853B8150((uint64_t)v209, v204 + 280, &qword_1E8FAFE30);
        }
        else
        {
          long long v91 = *(_OWORD *)(v4 + 112);
          *(_OWORD *)&v207[96] = *(_OWORD *)(v4 + 96);
          *(_OWORD *)&v207[112] = v91;
          v207[128] = *(unsigned char *)(v4 + 128);
          long long v92 = *(_OWORD *)(v4 + 48);
          *(_OWORD *)&v207[32] = *(_OWORD *)(v4 + 32);
          *(_OWORD *)&v207[48] = v92;
          long long v93 = *(_OWORD *)(v4 + 80);
          *(_OWORD *)&v207[64] = *(_OWORD *)(v4 + 64);
          *(_OWORD *)&v207[80] = v93;
          long long v94 = *(_OWORD *)(v4 + 16);
          *(_OWORD *)double v207 = *(_OWORD *)v4;
          *(_OWORD *)&v207[16] = v94;
          sub_1853B8150(v204 + 144, (uint64_t)v208, &qword_1E8FAFE30);
          sub_1853B8150((uint64_t)v208, (uint64_t)v209, &qword_1E8FAFE30);
          if (sub_1854C1EBC((uint64_t)v209) != 1)
          {
            sub_1853B8150((uint64_t)v208, (uint64_t)v206, &qword_1E8FAFE30);
            v254[6] = *(_OWORD *)&v206[96];
            v254[7] = *(_OWORD *)&v206[112];
            uint64_t v255 = v206[128];
            v254[2] = *(_OWORD *)&v206[32];
            v254[3] = *(_OWORD *)&v206[48];
            v254[5] = *(_OWORD *)&v206[80];
            v254[4] = *(_OWORD *)&v206[64];
            v254[1] = *(_OWORD *)&v206[16];
            v254[0] = *(_OWORD *)v206;
            sub_1854C1254(v4, (uint64_t)v254, (uint64_t)v207);
          }
          sub_1854C0ED0(1.0 / v60);
          sub_1854C0ED0(0.25);
          sub_1853B8150(v204 + 280, (uint64_t)&v241, &qword_1E8FAFE30);
          sub_1853B8150((uint64_t)&v241, (uint64_t)v206, &qword_1E8FAFE30);
          if (sub_1854C1EBC((uint64_t)v206) != 1)
          {
            float64x2_t v238 = *(_OWORD *)&v207[96];
            __n128 v239 = *(_OWORD *)&v207[112];
            float64x2_t v240 = v207[128];
            unint64_t v234 = *(_OWORD *)&v207[32];
            unint64_t v235 = *(_OWORD *)&v207[48];
            double v237 = *(_OWORD *)&v207[80];
            double v236 = *(_OWORD *)&v207[64];
            int64x2_t v233 = *(_OWORD *)&v207[16];
            float64x2_t v232 = *(_OWORD *)v207;
            sub_1854C0ED0(0.75);
            v252[6] = v238;
            v252[7] = v239;
            uint64_t v253 = v240;
            v252[2] = v234;
            v252[3] = v235;
            v252[5] = v237;
            v252[4] = v236;
            v252[1] = v233;
            v252[0] = v232;
            long long v95 = *(_OWORD *)(v204 + 392);
            v250[6] = *(_OWORD *)(v204 + 376);
            v250[7] = v95;
            unint64_t v251 = *(unsigned char *)(v204 + 408);
            long long v96 = *(_OWORD *)(v204 + 328);
            v250[2] = *(_OWORD *)(v204 + 312);
            v250[3] = v96;
            long long v97 = *(_OWORD *)(v204 + 344);
            v250[5] = *(_OWORD *)(v204 + 360);
            v250[4] = v97;
            long long v98 = *v89;
            v250[1] = *(_OWORD *)(v204 + 296);
            v250[0] = v98;
            sub_1854C0F14((uint64_t)v250, (uint64_t)v252, (uint64_t)v216);
            long long v99 = v216[7];
            *(_OWORD *)(v204 + 376) = v216[6];
            *(_OWORD *)(v204 + 392) = v99;
            *(unsigned char *)(v204 + 408) = v217;
            long long v100 = v216[3];
            *(_OWORD *)(v204 + 312) = v216[2];
            *(_OWORD *)(v204 + 328) = v100;
            long long v101 = v216[5];
            *(_OWORD *)(v204 + 344) = v216[4];
            *(_OWORD *)(v204 + 360) = v101;
            long long v102 = v216[1];
            *char v89 = v216[0];
            *(_OWORD *)(v204 + 296) = v102;
          }
        }
      }
      *(_OWORD *)&__src[96] = v277;
      *(_OWORD *)&__src[112] = v278;
      __src[128] = v279;
      *(_OWORD *)&__src[32] = v273;
      *(_OWORD *)&__src[48] = v274;
      *(_OWORD *)&__src[80] = v276;
      *(_OWORD *)&__src[64] = v275;
      *(_OWORD *)&__src[16] = v272;
      *(_OWORD *)__src = v271;
      signpost_c2_removePresentationModifier_end(__src, v57);
      sub_1853B8150((uint64_t)__src, v204 + 8, &qword_1E8FAFE30);
      *(double *)int64x2_t v204 = v58;
    }
  }
  sub_1853B8150((uint64_t)(v2 + 18), (uint64_t)v213, &qword_1E8FAFE30);
  v214[6] = v268;
  v214[7] = v269;
  uint64_t v215 = v270;
  v214[2] = v264;
  void v214[3] = v265;
  v214[5] = v267;
  v214[4] = v266;
  v214[1] = v263;
  v214[0] = v262;
  signpost_c2_removePresentationModifier_end(v214, v103);
  sub_1853B8150((uint64_t)v214, (uint64_t)(v2 + 18), &qword_1E8FAFE30);
  sub_1853B7020(v12, (uint64_t)__src, &qword_1E8FAFDE8);
  if (HIBYTE(*(unsigned __int16 *)&__src[952]) > 0xFEu)
  {
    uint64_t v104 = &qword_1E8FAFDE8;
LABEL_39:
    sub_1853B93B8((uint64_t)__src, v104);
    goto LABEL_40;
  }
  if (*(unsigned __int16 *)&__src[952] >= 0x100u)
  {
    uint64_t v104 = &qword_1E8FAFDE0;
    goto LABEL_39;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_1854B5564(v10, (uint64_t)&v241);
  if (v246 == 3 && (void)v241 == 1)
  {
    int8x16_t v105 = vorrq_s8(vorrq_s8(v242, v244), vorrq_s8(v243, v245));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v105.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v105, v105, 8uLL)) | *((void *)&v241 + 1)))
    {
      sub_1854B5730((uint64_t)&v241);
      long long v106 = *(_OWORD *)&__dst[240];
      *((_OWORD *)v14 + 14) = *(_OWORD *)&__dst[224];
      *((_OWORD *)v14 + 15) = v106;
      *(_OWORD *)((char *)v14 + 252) = *(_OWORD *)&__dst[252];
      long long v107 = *(_OWORD *)&__dst[176];
      *((_OWORD *)v14 + 10) = *(_OWORD *)&__dst[160];
      *((_OWORD *)v14 + 11) = v107;
      long long v108 = *(_OWORD *)&__dst[208];
      *((_OWORD *)v14 + 12) = *(_OWORD *)&__dst[192];
      *((_OWORD *)v14 + 13) = v108;
      long long v109 = *(_OWORD *)&__dst[112];
      *((_OWORD *)v14 + 6) = *(_OWORD *)&__dst[96];
      *((_OWORD *)v14 + 7) = v109;
      long long v110 = *(_OWORD *)&__dst[144];
      *((_OWORD *)v14 + 8) = *(_OWORD *)&__dst[128];
      *((_OWORD *)v14 + 9) = v110;
      long long v111 = *(_OWORD *)&__dst[80];
      *((_OWORD *)v14 + 4) = *(_OWORD *)&__dst[64];
      *((_OWORD *)v14 + 5) = v111;
      long long v112 = v269;
      *(_OWORD *)(v14 + 47) = v268;
      *(_OWORD *)(v14 + 49) = v112;
      long long v113 = v265;
      *(_OWORD *)(v14 + 39) = v264;
      *(_OWORD *)(v14 + 41) = v113;
      long long v114 = v267;
      *(_OWORD *)(v14 + 43) = v266;
      *(_OWORD *)(v14 + 45) = v114;
      long long v115 = v263;
      *(_OWORD *)(v14 + 35) = v262;
      *(_OWORD *)(v14 + 37) = v115;
      *(_OWORD *)((char *)&v209[5] + 7) = *(_OWORD *)&__dst[496];
      *(_OWORD *)((char *)&v209[6] + 7) = *(_OWORD *)&__dst[512];
      *(_OWORD *)((char *)&v209[7] + 7) = *(_OWORD *)&__dst[528];
      *(_OWORD *)((char *)&v209[1] + 7) = *(_OWORD *)&__dst[432];
      *(_OWORD *)((char *)&v209[2] + 7) = *(_OWORD *)&__dst[448];
      *(_OWORD *)((char *)&v209[3] + 7) = *(_OWORD *)&__dst[464];
      *(_OWORD *)((char *)&v209[4] + 7) = *(_OWORD *)&__dst[480];
      *(_OWORD *)((char *)v209 + 7) = *(_OWORD *)&__dst[416];
      long long v116 = *(_OWORD *)&__dst[616];
      *(_OWORD *)&v208[87] = *(_OWORD *)&__dst[632];
      long long v117 = *(_OWORD *)&__dst[664];
      *(_OWORD *)&v208[103] = *(_OWORD *)&__dst[648];
LABEL_73:
      *(_OWORD *)&v208[119] = v117;
      *(_OWORD *)&v208[23] = *(_OWORD *)&__dst[568];
      *(_OWORD *)&v208[39] = *(_OWORD *)&__dst[584];
      *(_OWORD *)&v208[55] = *(_OWORD *)&__dst[600];
      *(_OWORD *)&v208[71] = v116;
      *(_OWORD *)&v208[7] = *(_OWORD *)&__dst[552];
      *(_OWORD *)&v207[87] = *(_OWORD *)&__dst[768];
      *(_OWORD *)&v207[103] = *(_OWORD *)&__dst[784];
      *(_OWORD *)&v207[119] = *(_OWORD *)&__dst[800];
      *(_OWORD *)&v207[23] = *(_OWORD *)&__dst[704];
      *(_OWORD *)&v207[39] = *(_OWORD *)&__dst[720];
      *(_OWORD *)&v207[55] = *(_OWORD *)&__dst[736];
      *(_OWORD *)&v207[71] = *(_OWORD *)&__dst[752];
      *(_OWORD *)&v207[7] = *(_OWORD *)&__dst[688];
      int64x2_t v158 = *(_OWORD *)&__dst[888];
      *(_OWORD *)&v206[87] = *(_OWORD *)&__dst[904];
      *(_OWORD *)&v206[103] = *(_OWORD *)&__dst[920];
      *(_OWORD *)&v206[119] = *(_OWORD *)&__dst[936];
      uint64_t v159 = *(_OWORD *)&__dst[824];
      *(_OWORD *)&v206[23] = *(_OWORD *)&__dst[840];
      *(_OWORD *)&v206[39] = *(_OWORD *)&__dst[856];
      *(_OWORD *)&v206[55] = *(_OWORD *)&__dst[872];
      float64x2_t v160 = *(void *)&__dst[272];
      *((unsigned char *)v14 + 408) = v270;
      BYTE7(v209[8]) = __dst[544];
      v208[135] = __dst[680];
      v207[135] = __dst[816];
      v206[135] = __dst[952];
      *(_OWORD *)&v206[71] = v158;
      *(_OWORD *)&v206[7] = v159;
      uint64_t v161 = *(_OWORD *)&__dst[16];
      *(_OWORD *)long long v14 = *(_OWORD *)__dst;
      *((_OWORD *)v14 + 1) = v161;
      uint64_t v162 = *(_OWORD *)&__dst[48];
      *((_OWORD *)v14 + 2) = *(_OWORD *)&__dst[32];
      *((_OWORD *)v14 + 3) = v162;
      v14[34] = v160;
      uint64_t v163 = v209[7];
      *(_OWORD *)((char *)v14 + 505) = v209[6];
      *(_OWORD *)((char *)v14 + 521) = v163;
      *(void *)((char *)v14 + 537) = *(void *)&v209[8];
      double v164 = v209[3];
      *(_OWORD *)((char *)v14 + 441) = v209[2];
      *(_OWORD *)((char *)v14 + 457) = v164;
      float64x2_t v165 = v209[5];
      *(_OWORD *)((char *)v14 + 473) = v209[4];
      *(_OWORD *)((char *)v14 + 489) = v165;
      float64x2_t v166 = v209[1];
      *(_OWORD *)((char *)v14 + 409) = v209[0];
      *(_OWORD *)((char *)v14 + 425) = v166;
      float64x2_t v167 = *(_OWORD *)&v208[112];
      *(_OWORD *)((char *)v14 + 641) = *(_OWORD *)&v208[96];
      *(_OWORD *)((char *)v14 + 657) = v167;
      *(void *)((char *)v14 + 673) = *(void *)&v208[128];
      int64x2_t v168 = *(_OWORD *)&v208[48];
      *(_OWORD *)((char *)v14 + 577) = *(_OWORD *)&v208[32];
      *(_OWORD *)((char *)v14 + 593) = v168;
      unint64_t v169 = *(_OWORD *)&v208[80];
      *(_OWORD *)((char *)v14 + 609) = *(_OWORD *)&v208[64];
      *(_OWORD *)((char *)v14 + 625) = v169;
      double v170 = *(_OWORD *)&v208[16];
      *(_OWORD *)((char *)v14 + 545) = *(_OWORD *)v208;
      *(_OWORD *)((char *)v14 + 561) = v170;
      double v171 = *(_OWORD *)&v207[112];
      *(_OWORD *)((char *)v14 + 777) = *(_OWORD *)&v207[96];
      *(_OWORD *)((char *)v14 + 793) = v171;
      *(void *)((char *)v14 + 809) = *(void *)&v207[128];
      uint64_t v172 = *(_OWORD *)&v207[48];
      *(_OWORD *)((char *)v14 + 713) = *(_OWORD *)&v207[32];
      *(_OWORD *)((char *)v14 + 729) = v172;
      uint64_t v173 = *(_OWORD *)&v207[80];
      *(_OWORD *)((char *)v14 + 745) = *(_OWORD *)&v207[64];
      *(_OWORD *)((char *)v14 + 761) = v173;
      uint64_t v174 = *(_OWORD *)&v207[16];
      *(_OWORD *)((char *)v14 + 681) = *(_OWORD *)v207;
      *(_OWORD *)((char *)v14 + 697) = v174;
      id v175 = *(_OWORD *)&v206[112];
      *(_OWORD *)((char *)v14 + 913) = *(_OWORD *)&v206[96];
      *(_OWORD *)((char *)v14 + 929) = v175;
      *(void *)((char *)v14 + 945) = *(void *)&v206[128];
      id v176 = *(_OWORD *)&v206[48];
      *(_OWORD *)((char *)v14 + 849) = *(_OWORD *)&v206[32];
      *(_OWORD *)((char *)v14 + 865) = v176;
      float64x2_t v177 = *(_OWORD *)&v206[80];
      *(_OWORD *)((char *)v14 + 881) = *(_OWORD *)&v206[64];
      *(_OWORD *)((char *)v14 + 897) = v177;
      unint64_t v178 = *(_OWORD *)&v206[16];
      *(_OWORD *)((char *)v14 + 817) = *(_OWORD *)v206;
      *(_OWORD *)((char *)v14 + 833) = v178;
      *((unsigned char *)v14 + 953) = 0;
      return;
    }
  }
  sub_1854B5730((uint64_t)&v241);
  sub_1854B5564(v10, (uint64_t)v209);
  if (!LOBYTE(v209[5]))
  {
    sub_1854B5EC0((uint64_t)v209, (uint64_t)v218);
    if ((v8 & 1) == 0)
    {
      sub_1854B5EC0((uint64_t)v218, (uint64_t)&v259);
      if (v260 < 0)
      {
        v260 &= ~0x8000000000000000;
        long long v145 = v261;
        if (v261 > 0.0)
        {
          sub_1853B8150((uint64_t)(v2 + 35), (uint64_t)v208, &qword_1E8FAFE30);
          sub_1853B8150((uint64_t)v208, (uint64_t)v209, &qword_1E8FAFE30);
          if (sub_1854C1EBC((uint64_t)v209) != 1)
          {
            sub_1853B8150((uint64_t)v208, (uint64_t)v207, &qword_1E8FAFE30);
            *(_OWORD *)&v206[96] = *(_OWORD *)&v207[96];
            *(_OWORD *)&v206[112] = *(_OWORD *)&v207[112];
            v206[128] = v207[128];
            *(_OWORD *)&v206[32] = *(_OWORD *)&v207[32];
            *(_OWORD *)&v206[48] = *(_OWORD *)&v207[48];
            *(_OWORD *)&v206[64] = *(_OWORD *)&v207[64];
            *(_OWORD *)&v206[80] = *(_OWORD *)&v207[80];
            *(_OWORD *)float64x2_t v206 = *(_OWORD *)v207;
            *(_OWORD *)&v206[16] = *(_OWORD *)&v207[16];
            sub_1854C0ED0(v145 / 1000.0 / (1.0 - v145));
            uint64_t v247 = *(_OWORD *)&v206[96];
            __n128 v248 = *(_OWORD *)&v206[112];
            __n128 v249 = v206[128];
            float64x2_t v243 = *(int8x16_t *)&v206[32];
            v244 = *(int8x16_t *)&v206[48];
            unint64_t v246 = *(_OWORD *)&v206[80];
            unint64_t v245 = *(int8x16_t *)&v206[64];
            int64x2_t v242 = *(int8x16_t *)&v206[16];
            float64x2_t v241 = *(_OWORD *)v206;
            float64x2_t v238 = *(_OWORD *)&__dst[784];
            __n128 v239 = *(_OWORD *)&__dst[800];
            float64x2_t v240 = __dst[816];
            unint64_t v234 = *(_OWORD *)&__dst[720];
            unint64_t v235 = *(_OWORD *)&__dst[736];
            double v237 = *(_OWORD *)&__dst[768];
            double v236 = *(_OWORD *)&__dst[752];
            int64x2_t v233 = *(_OWORD *)&__dst[704];
            float64x2_t v232 = *(_OWORD *)&__dst[688];
            sub_1854C0F14((uint64_t)&v232, (uint64_t)&v241, (uint64_t)&__dst[688]);
          }
        }
      }
      sub_1854BABAC((uint64_t)v209);
      sub_1853B8150((uint64_t)v209, (uint64_t)(v2 + 35), &qword_1E8FAFE30);
      *uint64_t v2 = 0;
    }
    sub_1854B5EC0((uint64_t)v218, (uint64_t)v256);
    if (v257 < 0)
    {
      v257 &= ~0x8000000000000000;
      uint64_t v146 = v258;
      if (v258 > 0.0)
      {
        id v147 = *(double *)&v256[1];
        sub_1853B8150((uint64_t)v213, (uint64_t)v209, &qword_1E8FAFE30);
        if (sub_1854C1EBC((uint64_t)v209) != 1)
        {
          sub_1853B8150((uint64_t)v213, (uint64_t)v208, &qword_1E8FAFE30);
          float64x2_t v229 = *(_OWORD *)&v208[96];
          float64x2_t v230 = *(_OWORD *)&v208[112];
          int64x2_t v231 = v208[128];
          float32x2x2_t v225 = *(_OWORD *)&v208[32];
          double v226 = *(_OWORD *)&v208[48];
          double v228 = *(_OWORD *)&v208[80];
          float64x2_t v227 = *(_OWORD *)&v208[64];
          id v224 = *(_OWORD *)&v208[16];
          long long v223 = *(_OWORD *)v208;
          sub_1854C1254(v4, (uint64_t)&v223, (uint64_t)v207);
          sub_1854C0ED0(v146 * (6.28318531 / v147 * (6.28318531 / v147)));
          v221[6] = *(_OWORD *)&v207[96];
          v221[7] = *(_OWORD *)&v207[112];
          unint64_t v222 = v207[128];
          v221[2] = *(_OWORD *)&v207[32];
          void v221[3] = *(_OWORD *)&v207[48];
          v221[5] = *(_OWORD *)&v207[80];
          v221[4] = *(_OWORD *)&v207[64];
          v221[1] = *(_OWORD *)&v207[16];
          v221[0] = *(_OWORD *)v207;
          v219[6] = *(_OWORD *)&__dst[512];
          v219[7] = *(_OWORD *)&__dst[528];
          float64x2_t v220 = __dst[544];
          v219[2] = *(_OWORD *)&__dst[448];
          v219[3] = *(_OWORD *)&__dst[464];
          v219[5] = *(_OWORD *)&__dst[496];
          v219[4] = *(_OWORD *)&__dst[480];
          v219[1] = *(_OWORD *)&__dst[432];
          v219[0] = *(_OWORD *)&__dst[416];
          sub_1854C0F14((uint64_t)v219, (uint64_t)v221, (uint64_t)&__dst[416]);
        }
      }
    }
    sub_1854C2394((uint64_t)v218, 0);
    long long v148 = *(_OWORD *)&__dst[240];
    *((_OWORD *)v14 + 14) = *(_OWORD *)&__dst[224];
    *((_OWORD *)v14 + 15) = v148;
    *(_OWORD *)((char *)v14 + 252) = *(_OWORD *)&__dst[252];
    unint64_t v149 = *(_OWORD *)&__dst[176];
    *((_OWORD *)v14 + 10) = *(_OWORD *)&__dst[160];
    *((_OWORD *)v14 + 11) = v149;
    long long v150 = *(_OWORD *)&__dst[208];
    *((_OWORD *)v14 + 12) = *(_OWORD *)&__dst[192];
    *((_OWORD *)v14 + 13) = v150;
    long long v151 = *(_OWORD *)&__dst[112];
    *((_OWORD *)v14 + 6) = *(_OWORD *)&__dst[96];
    *((_OWORD *)v14 + 7) = v151;
    long long v152 = *(_OWORD *)&__dst[144];
    *((_OWORD *)v14 + 8) = *(_OWORD *)&__dst[128];
    *((_OWORD *)v14 + 9) = v152;
    long long v153 = *(_OWORD *)&__dst[80];
    *((_OWORD *)v14 + 4) = *(_OWORD *)&__dst[64];
    *((_OWORD *)v14 + 5) = v153;
    char v154 = v269;
    *(_OWORD *)(v14 + 47) = v268;
    *(_OWORD *)(v14 + 49) = v154;
    uint64_t v155 = v265;
    *(_OWORD *)(v14 + 39) = v264;
    *(_OWORD *)(v14 + 41) = v155;
    char v156 = v267;
    *(_OWORD *)(v14 + 43) = v266;
    *(_OWORD *)(v14 + 45) = v156;
    float64x2_t v157 = v263;
    *(_OWORD *)(v14 + 35) = v262;
    *(_OWORD *)(v14 + 37) = v157;
    *(_OWORD *)((char *)&v209[5] + 7) = *(_OWORD *)&__dst[496];
    *(_OWORD *)((char *)&v209[6] + 7) = *(_OWORD *)&__dst[512];
    *(_OWORD *)((char *)&v209[7] + 7) = *(_OWORD *)&__dst[528];
    *(_OWORD *)((char *)&v209[1] + 7) = *(_OWORD *)&__dst[432];
    *(_OWORD *)((char *)&v209[2] + 7) = *(_OWORD *)&__dst[448];
    *(_OWORD *)((char *)&v209[3] + 7) = *(_OWORD *)&__dst[464];
    *(_OWORD *)((char *)&v209[4] + 7) = *(_OWORD *)&__dst[480];
    *(_OWORD *)((char *)v209 + 7) = *(_OWORD *)&__dst[416];
    long long v116 = *(_OWORD *)&__dst[616];
    *(_OWORD *)&v208[87] = *(_OWORD *)&__dst[632];
    long long v117 = *(_OWORD *)&__dst[664];
    *(_OWORD *)&v208[103] = *(_OWORD *)&__dst[648];
    goto LABEL_73;
  }
  sub_1854B5730((uint64_t)v209);
LABEL_40:
  sub_1853B7020(v12, (uint64_t)__src, &qword_1E8FAFDE8);
  if (HIBYTE(*(unsigned __int16 *)&__src[952]) > 0xFEu)
  {
    long long v118 = &qword_1E8FAFDE8;
LABEL_50:
    sub_1853B93B8((uint64_t)__src, v118);
LABEL_51:
    sub_1853B7020(v12, (uint64_t)__src, &qword_1E8FAFDE8);
    if (__src[953] == 255)
    {
      sub_1853B93B8((uint64_t)__src, &qword_1E8FAFDE8);
      sub_1854BABAC((uint64_t)__dst);
      long long v121 = __dst;
    }
    else
    {
      sub_1853B7020((uint64_t)__src, (uint64_t)__dst, &qword_1E8FAFDE0);
      uint64_t v122 = 0;
      char v123 = 0;
      uint64_t v124 = 0;
      uint64_t v125 = 0;
      uint64_t v126 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 0;
      uint64_t v129 = 0;
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      uint64_t v133 = 0;
      uint64_t v134 = 0;
      uint64_t v135 = 0;
      uint64_t v136 = 0;
      uint64_t v137 = 0;
      uint64_t v138 = 0;
      switch(v211)
      {
        case 1:
          break;
        case 2:
          memcpy(v209, __dst, sizeof(v209));
          long long v140 = v209[2];
          __swift_project_boxed_opaque_existential_0Tm((void *)v209 + 1, *(uint64_t *)&v209[2]);
          *(_OWORD *)&v207[96] = v209[26];
          *(_OWORD *)&v207[112] = v209[27];
          v207[128] = v209[28];
          *(_OWORD *)&v207[32] = v209[22];
          *(_OWORD *)&v207[48] = v209[23];
          *(_OWORD *)&v207[64] = v209[24];
          *(_OWORD *)&v207[80] = v209[25];
          *(_OWORD *)double v207 = v209[20];
          *(_OWORD *)&v207[16] = v209[21];
          *(_OWORD *)&v208[96] = v209[9];
          *(_OWORD *)&v208[112] = v209[10];
          v208[128] = v209[11];
          *(_OWORD *)&v208[32] = v209[5];
          *(_OWORD *)&v208[48] = v209[6];
          *(_OWORD *)&v208[64] = v209[7];
          *(_OWORD *)&v208[80] = v209[8];
          *(_OWORD *)double v208 = v209[3];
          *(_OWORD *)&v208[16] = v209[4];
          sub_1854C1254((uint64_t)v207, (uint64_t)v208, (uint64_t)v206);
          double v141 = *(double *)v209;
          *(void *)&float64x2_t v241 = *((void *)&v209[28] + 1);
          uint64_t v142 = *(void (**)(long long *__return_ptr, unsigned char *, long long *, uint64_t, uint64_t, void, void, double))(*((void *)&v140 + 1) + 32);
          uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D50);
          uint64_t v144 = sub_1854B2C88(&qword_1E8FB2D58, &qword_1E8FB2D50);
          v142(&v232, v206, &v241, v143, v144, v140, *((void *)&v140 + 1), v141);
          sub_1853B8150((uint64_t)&v232, (uint64_t)&v241, &qword_1E8FB2D60);
          sub_1853B8150((uint64_t)&v241, (uint64_t)v206, &qword_1E8FB2D60);
          if (sub_1854C1EBC((uint64_t)v206) == 1)
          {
            char v123 = 0;
            uint64_t v190 = 0;
            v192 = 0;
            uint64_t v124 = 0;
            float64x2_t v189 = 0;
            double v199 = 0;
            unint64_t v201 = 0;
            float64x2_t v195 = 0;
            unint64_t v197 = 0;
            float64x2_t v193 = 0;
          }
          else
          {
            sub_1853B8150((uint64_t)&v241, (uint64_t)&v223, &qword_1E8FB2D60);
            uint64_t v124 = *((void *)&v223 + 1);
            uint64_t v126 = *((void *)&v224 + 1);
            uint64_t v125 = v224;
            uint64_t v128 = *((void *)&v225 + 1);
            uint64_t v127 = v225;
            uint64_t v130 = *((void *)&v226 + 1);
            uint64_t v129 = v226;
            uint64_t v190 = *((void *)&v227 + 1);
            uint64_t v131 = v227;
            v192 = v223;
            float64x2_t v189 = v228;
            double v199 = v229;
            unint64_t v201 = *((void *)&v228 + 1);
            float64x2_t v195 = v230;
            unint64_t v197 = *((void *)&v229 + 1);
            float64x2_t v193 = *((void *)&v230 + 1);
            char v123 = v231;
          }
          sub_1853B93B8((uint64_t)v209, &qword_1E8FB2DF0);
          uint64_t v132 = v190;
          uint64_t v122 = v192;
          uint64_t v133 = v189;
          uint64_t v135 = v199;
          uint64_t v134 = v201;
          uint64_t v137 = v195;
          uint64_t v136 = v197;
          uint64_t v138 = v193;
          break;
        case 3:
          uint64_t v122 = *(void *)&__dst[136];
          uint64_t v125 = *(void *)&__dst[152];
          uint64_t v124 = *(void *)&__dst[144];
          uint64_t v127 = *(void *)&__dst[168];
          uint64_t v126 = *(void *)&__dst[160];
          uint64_t v129 = *(void *)&__dst[184];
          uint64_t v128 = *(void *)&__dst[176];
          uint64_t v131 = *(void *)&__dst[200];
          uint64_t v130 = *(void *)&__dst[192];
          uint64_t v133 = *(void *)&__dst[216];
          uint64_t v132 = *(void *)&__dst[208];
          uint64_t v135 = *(void *)&__dst[232];
          uint64_t v134 = *(void *)&__dst[224];
          uint64_t v137 = *(void *)&__dst[248];
          uint64_t v136 = *(void *)&__dst[240];
          uint64_t v138 = *(void *)&__dst[256];
          char v123 = __dst[264];
          break;
        default:
          uint64_t v124 = *(void *)&__dst[424];
          uint64_t v122 = *(void *)&__dst[416];
          uint64_t v126 = *(void *)&__dst[440];
          uint64_t v125 = *(void *)&__dst[432];
          uint64_t v128 = *(void *)&__dst[456];
          uint64_t v127 = *(void *)&__dst[448];
          uint64_t v130 = *(void *)&__dst[472];
          uint64_t v129 = *(void *)&__dst[464];
          uint64_t v132 = *(void *)&__dst[488];
          uint64_t v131 = *(void *)&__dst[480];
          uint64_t v134 = *(void *)&__dst[504];
          uint64_t v133 = *(void *)&__dst[496];
          uint64_t v136 = *(void *)&__dst[520];
          uint64_t v135 = *(void *)&__dst[512];
          uint64_t v138 = *(void *)&__dst[536];
          uint64_t v137 = *(void *)&__dst[528];
          char v123 = __dst[544];
          break;
      }
      *(void *)&unint64_t v191 = v129;
      *((void *)&v191 + 1) = v130;
      float64x2_t v200 = v135;
      float64x2_t v202 = v134;
      int64x2_t v196 = v137;
      double v198 = v136;
      unint64_t v205 = v131;
      float64x2_t v194 = v138;
      double v180 = v128;
      uint64_t v181 = v127;
      uint64_t v182 = v126;
      float64x2_t v183 = v125;
      float64x2_t v184 = v124;
      int v185 = v122;
      unint64_t v186 = v132;
      uint64_t v187 = v133;
      sub_1853B93B8((uint64_t)__src, &qword_1E8FAFDE0);
      *(void *)float64x2_t v206 = v185;
      *(void *)&v206[8] = v184;
      *(void *)&v206[16] = v183;
      *(void *)&v206[24] = v182;
      *(void *)&v206[32] = v181;
      *(void *)&v206[40] = v180;
      *(_OWORD *)&v206[48] = v191;
      *(void *)&v206[64] = v205;
      *(void *)&v206[72] = v186;
      *(void *)&v206[80] = v187;
      *(void *)&v206[88] = v202;
      *(void *)&v206[96] = v200;
      *(void *)&v206[104] = v198;
      *(void *)&v206[112] = v196;
      *(void *)&v206[120] = v194;
      v206[128] = v123;
      signpost_c2_removePresentationModifier_end(v206, v188);
      long long v121 = v206;
    }
    sub_1853B8150((uint64_t)v121, (uint64_t)v209, &qword_1E8FAFE30);
    float64x2_t v179 = v209;
    goto LABEL_79;
  }
  if ((*(_WORD *)&__src[952] & 0xFF00) != 0x300)
  {
    long long v118 = &qword_1E8FAFDE0;
    goto LABEL_50;
  }
  v209[6] = *(_OWORD *)&__src[232];
  v209[7] = *(_OWORD *)&__src[248];
  LOBYTE(v209[8]) = __src[264];
  v209[2] = *(_OWORD *)&__src[168];
  v209[3] = *(_OWORD *)&__src[184];
  v209[4] = *(_OWORD *)&__src[200];
  v209[5] = *(_OWORD *)&__src[216];
  v209[0] = *(_OWORD *)&__src[136];
  v209[1] = *(_OWORD *)&__src[152];
  sub_1854B5564(v10, (uint64_t)v208);
  if (v208[80] == 3
    && (int8x16_t v119 = vorrq_s8(vorrq_s8(*(int8x16_t *)&v208[16], *(int8x16_t *)&v208[48]), vorrq_s8(*(int8x16_t *)&v208[32], *(int8x16_t *)&v208[64])), !(*(void *)&vorr_s8(*(int8x8_t *)v119.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v119, v119, 8uLL)) | *(void *)&v208[8] | *(void *)v208))|| (sub_1854B5730((uint64_t)v208), sub_1854B5564(v10, (uint64_t)v208), v208[80] == 3)&& *(void *)v208 == 1&& (v120 = vorrq_s8(vorrq_s8(*(int8x16_t *)&v208[16], *(int8x16_t *)&v208[48]), vorrq_s8(*(int8x16_t *)&v208[32], *(int8x16_t *)&v208[64])), !(*(void *)&vorr_s8(*(int8x8_t *)v120.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v120, v120, 8uLL)) | *(void *)&v208[8])))
  {
    sub_1854B5730((uint64_t)v208);
    *(_OWORD *)&__dst[96] = v268;
    *(_OWORD *)&__dst[112] = v269;
    *(_OWORD *)&__dst[32] = v264;
    *(_OWORD *)&__dst[48] = v265;
    *(_OWORD *)&__dst[80] = v267;
    *(_OWORD *)&__dst[64] = v266;
    *(_OWORD *)__dst = v262;
    *(_OWORD *)&__dst[16] = v263;
    *(_OWORD *)&__dst[216] = v209[5];
    *(_OWORD *)&__dst[232] = v209[6];
    *(_OWORD *)&__dst[248] = v209[7];
    *(_OWORD *)&__dst[152] = v209[1];
    *(_OWORD *)&__dst[168] = v209[2];
    *(_OWORD *)&__dst[184] = v209[3];
    *(_OWORD *)&__dst[200] = v209[4];
    __dst[128] = v270;
    __dst[264] = v209[8];
    *(_OWORD *)&__dst[136] = v209[0];
    memcpy(v14, __dst, 0x109uLL);
    char v56 = 3;
    goto LABEL_19;
  }
  sub_1854B5730((uint64_t)v208);
  sub_1854B5564(v10, (uint64_t)v207);
  if (v207[80])
  {
    sub_1854B5730((uint64_t)v207);
    goto LABEL_51;
  }
  *(_OWORD *)&v208[96] = v209[6];
  *(_OWORD *)&v208[112] = v209[7];
  v208[128] = v209[8];
  *(_OWORD *)&v208[32] = v209[2];
  *(_OWORD *)&v208[48] = v209[3];
  *(_OWORD *)&v208[64] = v209[4];
  *(_OWORD *)&v208[80] = v209[5];
  *(_OWORD *)double v208 = v209[0];
  *(_OWORD *)&v208[16] = v209[1];
  signpost_c2_removePresentationModifier_end(v208, v139);
  float64x2_t v179 = v208;
LABEL_79:
  sub_1853B8150((uint64_t)v179, (uint64_t)__dst, &qword_1E8FAFE30);
  sub_1854BC474(v10, v6, (uint64_t)__dst, v4, v14);
}

uint64_t sub_1854BC474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v6 = v5;
  sub_1853B8150(a3, (uint64_t)v81, &qword_1E8FAFE30);
  sub_1853B8150((uint64_t)v81, (uint64_t)v104, &qword_1E8FAFE30);
  sub_1854B5564(a1, (uint64_t)v68);
  if (v69)
  {
    if (v69 == 2)
    {
      sub_1854B1F20(v68, (uint64_t)__src);
      sub_1854B1F38((uint64_t)__src, (uint64_t)(a5 + 8));
      *(void *)a5 = 0;
      *(_WORD *)(a5 + 449) = 0;
      unint64_t v12 = sub_1859E12BC(MEMORY[0x1E4FBC860]);
      long long v13 = *(_OWORD *)(a2 + 80);
      long long v15 = *(_OWORD *)(a2 + 96);
      long long v14 = *(_OWORD *)(a2 + 112);
      *((_OWORD *)a5 + 9) = v15;
      *((_OWORD *)a5 + 10) = v14;
      long long v16 = *(_OWORD *)(a2 + 16);
      long long v18 = *(_OWORD *)(a2 + 32);
      long long v17 = *(_OWORD *)(a2 + 48);
      *((_OWORD *)a5 + 5) = v18;
      *((_OWORD *)a5 + 6) = v17;
      long long v19 = *(_OWORD *)(a2 + 48);
      long long v21 = *(_OWORD *)(a2 + 64);
      long long v20 = *(_OWORD *)(a2 + 80);
      *((_OWORD *)a5 + 7) = v21;
      *((_OWORD *)a5 + 8) = v20;
      long long v22 = *(_OWORD *)(a2 + 16);
      long long v23 = *(_OWORD *)a2;
      *((_OWORD *)a5 + 3) = *(_OWORD *)a2;
      *((_OWORD *)a5 + 4) = v22;
      *(_OWORD *)(a5 + 264) = v13;
      *(_OWORD *)(a5 + 280) = v15;
      *(_OWORD *)(a5 + 296) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a5 + 200) = v16;
      *(_OWORD *)(a5 + 216) = v18;
      *(_OWORD *)(a5 + 232) = v19;
      *((void *)a5 + 57) = v12;
      a5[176] = *(unsigned char *)(a2 + 128);
      a5[312] = *(unsigned char *)(a2 + 128);
      *(_OWORD *)(a5 + 248) = v21;
      *(_OWORD *)(a5 + 184) = v23;
      long long v24 = *(_OWORD *)(a4 + 112);
      *((_OWORD *)a5 + 26) = *(_OWORD *)(a4 + 96);
      *((_OWORD *)a5 + 27) = v24;
      a5[448] = *(unsigned char *)(a4 + 128);
      long long v25 = *(_OWORD *)(a4 + 48);
      *((_OWORD *)a5 + 22) = *(_OWORD *)(a4 + 32);
      *((_OWORD *)a5 + 23) = v25;
      long long v26 = *(_OWORD *)(a4 + 80);
      *((_OWORD *)a5 + 24) = *(_OWORD *)(a4 + 64);
      *((_OWORD *)a5 + 25) = v26;
      long long v27 = *(_OWORD *)(a4 + 16);
      *((_OWORD *)a5 + 20) = *(_OWORD *)a4;
      *((_OWORD *)a5 + 21) = v27;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__src);
      char v29 = 2;
    }
    else
    {
      sub_1854B5730((uint64_t)v68);
      sub_1853B8150(a3, (uint64_t)__src, &qword_1E8FAFE30);
      uint64_t result = sub_1854C1EBC((uint64_t)__src);
      if (result == 1)
      {
        char v45 = 0;
        long long v46 = 0uLL;
        long long v47 = 0uLL;
        long long v48 = 0uLL;
        long long v49 = 0uLL;
        long long v50 = 0uLL;
        long long v51 = 0uLL;
        long long v52 = 0uLL;
        long long v53 = 0uLL;
      }
      else
      {
        uint64_t result = sub_1853B8150((uint64_t)v104, (uint64_t)&v89, &qword_1E8FAFE30);
        long long v46 = v89;
        long long v47 = v90;
        long long v48 = v91;
        long long v49 = v92;
        long long v50 = v93;
        long long v51 = v94;
        long long v52 = v95;
        long long v53 = v96;
        char v45 = v97;
      }
      long long v54 = *(_OWORD *)(a4 + 112);
      *((_OWORD *)a5 + 6) = *(_OWORD *)(a4 + 96);
      *((_OWORD *)a5 + 7) = v54;
      a5[128] = *(unsigned char *)(a4 + 128);
      long long v55 = *(_OWORD *)(a4 + 48);
      *((_OWORD *)a5 + 2) = *(_OWORD *)(a4 + 32);
      *((_OWORD *)a5 + 3) = v55;
      long long v56 = *(_OWORD *)(a4 + 80);
      *((_OWORD *)a5 + 4) = *(_OWORD *)(a4 + 64);
      *((_OWORD *)a5 + 5) = v56;
      long long v57 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)a5 = *(_OWORD *)a4;
      *((_OWORD *)a5 + 1) = v57;
      *(_OWORD *)(a5 + 136) = v46;
      *(_OWORD *)(a5 + 152) = v47;
      *(_OWORD *)(a5 + 168) = v48;
      *(_OWORD *)(a5 + 184) = v49;
      *(_OWORD *)(a5 + 200) = v50;
      *(_OWORD *)(a5 + 216) = v51;
      *(_OWORD *)(a5 + 232) = v52;
      *(_OWORD *)(a5 + 248) = v53;
      a5[264] = v45;
      char v29 = 3;
    }
    a5[953] = v29;
  }
  else
  {
    sub_1854B5EC0((uint64_t)v68, (uint64_t)v98);
    long long v30 = *(_OWORD *)(a2 + 80);
    long long v31 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)((char *)&__src[40] + 8) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)((char *)&__src[41] + 8) = v31;
    long long v32 = *(_OWORD *)(a2 + 16);
    long long v33 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)((char *)&__src[36] + 8) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)((char *)&__src[37] + 8) = v33;
    long long v34 = *(_OWORD *)(a2 + 48);
    long long v35 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)((char *)&__src[38] + 8) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)((char *)&__src[39] + 8) = v35;
    long long v36 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)((char *)&__src[34] + 8) = *(_OWORD *)a2;
    *(_OWORD *)((char *)&__src[35] + 8) = v36;
    long long v37 = *(_OWORD *)(a4 + 112);
    *(_OWORD *)((char *)&__src[23] + 8) = *(_OWORD *)(a4 + 96);
    *(_OWORD *)((char *)&__src[24] + 8) = v37;
    long long v38 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)((char *)&__src[19] + 8) = *(_OWORD *)(a4 + 32);
    *(_OWORD *)((char *)&__src[20] + 8) = v38;
    long long v39 = *(_OWORD *)(a4 + 80);
    *(_OWORD *)((char *)&__src[21] + 8) = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)&__src[22] + 8) = v39;
    long long v40 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)((char *)&__src[17] + 8) = *(_OWORD *)a4;
    *(_OWORD *)((char *)&__src[18] + 8) = v40;
    memset(&__src[7], 0, 129);
    memset(__src, 0, 73);
    memset(&__src[26], 0, 129);
    *(_OWORD *)((char *)&__src[51] + 8) = 0u;
    *(_OWORD *)((char *)&__src[52] + 8) = 0u;
    *(_OWORD *)((char *)&__src[53] + 8) = 0u;
    *(_OWORD *)((char *)&__src[54] + 8) = 0u;
    *(_OWORD *)((char *)&__src[55] + 8) = 0u;
    *(_OWORD *)((char *)&__src[56] + 8) = 0u;
    *(_OWORD *)((char *)&__src[57] + 8) = 0u;
    *(_OWORD *)((char *)&__src[58] + 8) = 0u;
    long long v41 = *(_OWORD *)(a2 + 112);
    __src[49] = *(_OWORD *)((char *)&__src[40] + 8);
    __src[50] = v41;
    __src[45] = *(_OWORD *)((char *)&__src[36] + 8);
    __src[46] = v34;
    __src[47] = *(_OWORD *)((char *)&__src[38] + 8);
    __src[48] = v30;
    memset(&__src[5], 0, 25);
    *((void *)&__src[15] + 1) = 0;
    *(void *)&__src[16] = 0;
    DWORD2(__src[16]) = 0;
    *(void *)&__src[17] = 0x3FF0000000000000;
    BYTE8(__src[42]) = *(unsigned char *)(a2 + 128);
    BYTE8(__src[25]) = *(unsigned char *)(a4 + 128);
    BYTE8(__src[59]) = 0;
    LOBYTE(__src[51]) = *(unsigned char *)(a2 + 128);
    __src[43] = *(_OWORD *)((char *)&__src[34] + 8);
    __src[44] = v32;
    sub_1854C2394((uint64_t)v98, 1u);
    sub_1853B8150(a3, (uint64_t)v82, &qword_1E8FAFE30);
    if (sub_1854C1EBC((uint64_t)v82) != 1) {
      sub_1853B8150((uint64_t)v104, (uint64_t)&__src[26], &qword_1E8FAFE30);
    }
    sub_1854B5EC0((uint64_t)v98, (uint64_t)v99);
    if (v101 < 0)
    {
      v101 &= ~0x8000000000000000;
      double v42 = v100;
      double v43 = v102;
      double v44 = v103;
      if (v102 > 0.0)
      {
        sub_1853B8150(v6 + 280, (uint64_t)v83, &qword_1E8FAFE30);
        sub_1853B8150((uint64_t)v83, (uint64_t)v85, &qword_1E8FAFE30);
        if (sub_1854C1EBC((uint64_t)v85) != 1)
        {
          sub_1853B8150((uint64_t)v83, (uint64_t)&v72, &qword_1E8FAFE30);
          long long v64 = v78;
          long long v65 = v79;
          char v66 = v80;
          long long v60 = v74;
          long long v61 = v75;
          long long v62 = v76;
          long long v63 = v77;
          long long v58 = v72;
          long long v59 = v73;
          sub_1854C0ED0(v43 / 1000.0 / (1.0 - v43));
          long long v95 = v64;
          long long v96 = v65;
          char v97 = v66;
          long long v91 = v60;
          long long v92 = v61;
          long long v94 = v63;
          long long v93 = v62;
          long long v90 = v59;
          long long v89 = v58;
          v87[6] = __src[49];
          v87[7] = __src[50];
          char v88 = __src[51];
          v87[2] = __src[45];
          v87[3] = __src[46];
          v87[5] = __src[48];
          v87[4] = __src[47];
          v87[1] = __src[44];
          v87[0] = __src[43];
          sub_1854C0F14((uint64_t)v87, (uint64_t)&v89, (uint64_t)v70);
          __src[49] = v70[6];
          __src[50] = v70[7];
          LOBYTE(__src[51]) = v71;
          __src[45] = v70[2];
          __src[46] = v70[3];
          __src[47] = v70[4];
          __src[48] = v70[5];
          __src[43] = v70[0];
          __src[44] = v70[1];
        }
      }
      if (v44 > 0.0)
      {
        sub_1854C1254(a4, a2, (uint64_t)&v58);
        sub_1854C0ED0(6.28318531 / v42 * (6.28318531 / v42) * v44);
        v85[6] = v64;
        v85[7] = v65;
        char v86 = v66;
        v85[2] = v60;
        v85[3] = v61;
        v85[5] = v63;
        v85[4] = v62;
        v85[1] = v59;
        v85[0] = v58;
        v83[6] = __src[32];
        v83[7] = __src[33];
        char v84 = __src[34];
        v83[2] = __src[28];
        v83[3] = __src[29];
        v83[5] = __src[31];
        v83[4] = __src[30];
        v83[1] = __src[27];
        v83[0] = __src[26];
        sub_1854C0F14((uint64_t)v83, (uint64_t)v85, (uint64_t)&v72);
        __src[32] = v78;
        __src[33] = v79;
        LOBYTE(__src[34]) = v80;
        __src[28] = v74;
        __src[29] = v75;
        __src[30] = v76;
        __src[31] = v77;
        __src[26] = v72;
        __src[27] = v73;
      }
    }
    uint64_t result = (uint64_t)memcpy(a5, __src, 0x3B9uLL);
    a5[953] = 0;
  }
  return result;
}

uint64_t sub_1854BCA98@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1853B8150(v2, (uint64_t)__src, &qword_1E8FAFDE0);
  switch(v75)
  {
    case 1:
      long long v62 = *(_OWORD *)&__src[96];
      long long v63 = *(_OWORD *)&__src[112];
      long long v58 = *(_OWORD *)&__src[32];
      long long v59 = *(_OWORD *)&__src[48];
      long long v61 = *(_OWORD *)&__src[80];
      long long v60 = *(_OWORD *)&__src[64];
      long long v57 = *(_OWORD *)&__src[16];
      long long v56 = *(_OWORD *)__src;
      v91[6] = *(_OWORD *)&__src[232];
      v91[7] = *(_OWORD *)&__src[248];
      v91[2] = *(_OWORD *)&__src[168];
      v91[3] = *(_OWORD *)&__src[184];
      v91[5] = *(_OWORD *)&__src[216];
      v91[4] = *(_OWORD *)&__src[200];
      v91[1] = *(_OWORD *)&__src[152];
      v91[0] = *(_OWORD *)&__src[136];
      v87[6] = *(_OWORD *)&__src[368];
      v87[7] = *(_OWORD *)&__src[384];
      v87[2] = *(_OWORD *)&__src[304];
      v87[3] = *(_OWORD *)&__src[320];
      v87[5] = *(_OWORD *)&__src[352];
      v87[4] = *(_OWORD *)&__src[336];
      v87[1] = *(_OWORD *)&__src[288];
      v87[0] = *(_OWORD *)&__src[272];
      v95[6] = *(_OWORD *)&__src[520];
      v95[7] = *(_OWORD *)&__src[536];
      v95[2] = *(_OWORD *)&__src[456];
      v95[3] = *(_OWORD *)&__src[472];
      v95[4] = *(_OWORD *)&__src[488];
      v95[5] = *(_OWORD *)&__src[504];
      v95[0] = *(_OWORD *)&__src[424];
      v95[1] = *(_OWORD *)&__src[440];
      long long v71 = *(_OWORD *)&__src[520];
      long long v72 = *(_OWORD *)&__src[536];
      long long v67 = *(_OWORD *)&__src[456];
      long long v68 = *(_OWORD *)&__src[472];
      char v64 = __src[128];
      char v92 = __src[264];
      char v88 = __src[400];
      long long v70 = *(_OWORD *)&__src[504];
      long long v69 = *(_OWORD *)&__src[488];
      uint64_t v12 = *(void *)&__src[408];
      uint64_t v13 = *(void *)&__src[416];
      char v96 = __src[552];
      char v73 = __src[552];
      long long v66 = *(_OWORD *)&__src[440];
      long long v65 = *(_OWORD *)&__src[424];
      if (a2 <= 0.0)
      {
        long long v22 = *(_OWORD *)&__src[352];
        long long v24 = *(_OWORD *)&__src[368];
        long long v23 = *(_OWORD *)&__src[384];
        *(_OWORD *)(a1 + 96) = *(_OWORD *)&__src[368];
        *(_OWORD *)(a1 + 112) = v23;
        long long v25 = *(_OWORD *)&__src[288];
        long long v27 = *(_OWORD *)&__src[304];
        long long v26 = *(_OWORD *)&__src[320];
        *(_OWORD *)(a1 + 32) = *(_OWORD *)&__src[304];
        *(_OWORD *)(a1 + 48) = v26;
        long long v28 = *(_OWORD *)&__src[320];
        long long v30 = *(_OWORD *)&__src[336];
        long long v29 = *(_OWORD *)&__src[352];
        *(_OWORD *)(a1 + 64) = *(_OWORD *)&__src[336];
        *(_OWORD *)(a1 + 80) = v29;
        long long v31 = *(_OWORD *)&__src[288];
        long long v32 = *(_OWORD *)&__src[272];
        *(_OWORD *)a1 = *(_OWORD *)&__src[272];
        *(_OWORD *)(a1 + 16) = v31;
        long long v44 = v24;
        long long v45 = *(_OWORD *)&__src[384];
        long long v40 = v27;
        long long v41 = v28;
        long long v43 = v22;
        long long v42 = v30;
        *(unsigned char *)(a1 + 128) = __src[400];
        char v46 = __src[400];
        long long v38 = v32;
        long long v39 = v25;
        long long v53 = *(_OWORD *)&__src[232];
        long long v54 = *(_OWORD *)&__src[248];
        char v55 = __src[264];
        long long v49 = *(_OWORD *)&__src[168];
        long long v50 = *(_OWORD *)&__src[184];
        long long v52 = *(_OWORD *)&__src[216];
        long long v51 = *(_OWORD *)&__src[200];
        long long v48 = *(_OWORD *)&__src[152];
        long long v47 = *(_OWORD *)&__src[136];
      }
      else
      {
        double v14 = 1.0 - pow(*(long double *)&__src[408], a2 * 1000.0);
        sub_1854C1254((uint64_t)v95, (uint64_t)v91, (uint64_t)v37);
        sub_1854C0ED0(v14);
        v93[6] = v37[6];
        v93[7] = v37[7];
        char v94 = v37[8];
        v93[2] = v37[2];
        v93[3] = v37[3];
        v93[5] = v37[5];
        v93[4] = v37[4];
        v93[1] = v37[1];
        v93[0] = v37[0];
        sub_1854C0F14((uint64_t)v91, (uint64_t)v93, (uint64_t)v76);
        long long v53 = v76[6];
        long long v54 = v76[7];
        char v55 = v77;
        long long v49 = v76[2];
        long long v50 = v76[3];
        long long v52 = v76[5];
        long long v51 = v76[4];
        long long v48 = v76[1];
        long long v47 = v76[0];
        sub_1854C1254((uint64_t)v76, (uint64_t)v87, (uint64_t)v37);
        sub_1854C0ED0(v14);
        v89[6] = v37[6];
        v89[7] = v37[7];
        char v90 = v37[8];
        v89[2] = v37[2];
        v89[3] = v37[3];
        v89[5] = v37[5];
        v89[4] = v37[4];
        v89[1] = v37[1];
        v89[0] = v37[0];
        sub_1854C0F14((uint64_t)v87, (uint64_t)v89, (uint64_t)&v78);
        long long v15 = v83;
        long long v44 = v84;
        long long v45 = v85;
        long long v16 = v79;
        long long v40 = v80;
        long long v17 = v80;
        long long v41 = v81;
        long long v18 = v81;
        long long v19 = v82;
        long long v43 = v83;
        long long v42 = v82;
        long long v38 = v78;
        long long v20 = v78;
        long long v39 = v79;
        long long v21 = v85;
        *(_OWORD *)(a1 + 96) = v84;
        *(_OWORD *)(a1 + 112) = v21;
        *(_OWORD *)(a1 + 32) = v17;
        *(_OWORD *)(a1 + 48) = v18;
        *(_OWORD *)(a1 + 64) = v19;
        *(_OWORD *)(a1 + 80) = v15;
        char v46 = v86;
        *(unsigned char *)(a1 + 128) = v86;
        *(_OWORD *)a1 = v20;
        *(_OWORD *)(a1 + 16) = v16;
      }
      v37[6] = v62;
      _OWORD v37[7] = v63;
      v37[2] = v58;
      v37[3] = v59;
      v37[4] = v60;
      _OWORD v37[5] = v61;
      v37[0] = v56;
      v37[1] = v57;
      *(_OWORD *)((char *)&v37[13] + 8) = v52;
      *(_OWORD *)((char *)&v37[14] + 8) = v53;
      *(_OWORD *)((char *)&v37[15] + 8) = v54;
      *(_OWORD *)((char *)&v37[9] + 8) = v48;
      *(_OWORD *)((char *)&v37[10] + 8) = v49;
      *(_OWORD *)((char *)&v37[11] + 8) = v50;
      LOBYTE(v37[8]) = v64;
      BYTE8(v37[16]) = v55;
      *(_OWORD *)((char *)&v37[12] + 8) = v51;
      *(_OWORD *)((char *)&v37[8] + 8) = v47;
      v37[23] = v44;
      v37[24] = v45;
      LOBYTE(v37[25]) = v46;
      v37[19] = v40;
      v37[20] = v41;
      v37[21] = v42;
      v37[22] = v43;
      v37[17] = v38;
      v37[18] = v39;
      long long v33 = v72;
      *(_OWORD *)(v2 + 520) = v71;
      *(_OWORD *)(v2 + 536) = v33;
      *(unsigned char *)(v2 + 552) = v73;
      long long v34 = v68;
      *(_OWORD *)(v2 + 456) = v67;
      *(_OWORD *)(v2 + 472) = v34;
      long long v35 = v70;
      *(_OWORD *)(v2 + 488) = v69;
      *(_OWORD *)(v2 + 504) = v35;
      long long v36 = v66;
      *(_OWORD *)(v2 + 424) = v65;
      *(_OWORD *)(v2 + 440) = v36;
      uint64_t result = (uint64_t)memcpy((void *)v2, v37, 0x198uLL);
      *(void *)(v2 + 408) = v12;
      *(void *)(v2 + 416) = v13;
      char v7 = 1;
      goto LABEL_9;
    case 2:
      memcpy((void *)v2, __src, 0x1D0uLL);
      uint64_t result = sub_18594B858(a1, a2);
      char v7 = 2;
      goto LABEL_9;
    case 3:
      uint64_t result = (uint64_t)memcpy((void *)v2, __src, 0x109uLL);
      long long v8 = *(_OWORD *)&__src[112];
      *(_OWORD *)(a1 + 96) = *(_OWORD *)&__src[96];
      *(_OWORD *)(a1 + 112) = v8;
      *(unsigned char *)(a1 + 128) = __src[128];
      long long v9 = *(_OWORD *)&__src[48];
      *(_OWORD *)(a1 + 32) = *(_OWORD *)&__src[32];
      *(_OWORD *)(a1 + 48) = v9;
      long long v10 = *(_OWORD *)&__src[80];
      *(_OWORD *)(a1 + 64) = *(_OWORD *)&__src[64];
      *(_OWORD *)(a1 + 80) = v10;
      long long v11 = *(_OWORD *)&__src[16];
      *(_OWORD *)a1 = *(_OWORD *)__src;
      *(_OWORD *)(a1 + 16) = v11;
      char v7 = 3;
LABEL_9:
      *(unsigned char *)(v2 + 953) = v7;
      break;
    default:
      uint64_t v5 = memcpy(v37, __src, 0x3B9uLL);
      sub_1854BD6F0((uint64_t)v5);
      uint64_t result = (uint64_t)memcpy((void *)v2, v37, 0x3B9uLL);
      *(unsigned char *)(v2 + 953) = 0;
      break;
  }
  return result;
}

BOOL sub_1854BD064()
{
  long long v1 = *(_OWORD *)(v0 + 664);
  long long v99 = *(_OWORD *)(v0 + 648);
  long long v100 = v1;
  char v101 = *(unsigned char *)(v0 + 680);
  long long v2 = *(_OWORD *)(v0 + 600);
  long long v95 = *(_OWORD *)(v0 + 584);
  long long v96 = v2;
  long long v3 = *(_OWORD *)(v0 + 632);
  long long v97 = *(_OWORD *)(v0 + 616);
  long long v98 = v3;
  long long v4 = *(_OWORD *)(v0 + 568);
  long long v93 = *(_OWORD *)(v0 + 552);
  long long v94 = v4;
  if ((~(void)v93 & 0x7FF0000000000000) == 0) {
    return 1;
  }
  BOOL result = 1;
  if ((~*((void *)&v93 + 1) & 0x7FF0000000000000) != 0
    && (v94 & 0x7FF0000000000000) != 0x7FF0000000000000
    && (~*((void *)&v94 + 1) & 0x7FF0000000000000) != 0
    && (~(void)v95 & 0x7FF0000000000000) != 0
    && (*((void *)&v95 + 1) & 0x7FF0000000000000) != 0x7FF0000000000000
    && (~(void)v96 & 0x7FF0000000000000) != 0
    && (~*((void *)&v96 + 1) & 0x7FF0000000000000) != 0
    && (v97 & 0x7FF0000000000000) != 0x7FF0000000000000
    && (~*((void *)&v97 + 1) & 0x7FF0000000000000) != 0
    && (~(void)v98 & 0x7FF0000000000000) != 0
    && (*((void *)&v98 + 1) & 0x7FF0000000000000) != 0x7FF0000000000000
    && (~(void)v99 & 0x7FF0000000000000) != 0
    && (~*((void *)&v99 + 1) & 0x7FF0000000000000) != 0
    && (v100 & 0x7FF0000000000000) != 0x7FF0000000000000
    && (*((void *)&v100 + 1) & 0x7FF0000000000000) != 0x7FF0000000000000)
  {
    float64_t v6 = *(double *)(v0 + 416);
    if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
    {
      float64_t v7 = *(double *)(v0 + 424);
      if ((~*(void *)&v7 & 0x7FF0000000000000) != 0)
      {
        float64_t v8 = *(double *)(v0 + 432);
        if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
        {
          float64_t v9 = *(double *)(v0 + 440);
          if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
          {
            float64_t v10 = *(double *)(v0 + 448);
            if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
            {
              float64_t v11 = *(double *)(v0 + 456);
              if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
              {
                float64_t v12 = *(double *)(v0 + 464);
                if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
                {
                  float64_t v13 = *(double *)(v0 + 472);
                  if ((~*(void *)&v13 & 0x7FF0000000000000) != 0)
                  {
                    float64_t v56 = *(double *)(v0 + 480);
                    if ((~*(void *)&v56 & 0x7FF0000000000000) != 0)
                    {
                      float64_t v54 = *(double *)(v0 + 488);
                      if ((~*(void *)&v54 & 0x7FF0000000000000) != 0)
                      {
                        float64_t v52 = *(double *)(v0 + 496);
                        if ((~*(void *)&v52 & 0x7FF0000000000000) != 0)
                        {
                          float64_t v50 = *(double *)(v0 + 504);
                          if ((~*(void *)&v50 & 0x7FF0000000000000) != 0)
                          {
                            float64_t v48 = *(double *)(v0 + 512);
                            if ((~*(void *)&v48 & 0x7FF0000000000000) != 0)
                            {
                              float64_t v46 = *(double *)(v0 + 520);
                              if ((~*(void *)&v46 & 0x7FF0000000000000) != 0)
                              {
                                float64_t v44 = *(double *)(v0 + 528);
                                if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
                                {
                                  float64_t v42 = *(double *)(v0 + 536);
                                  if ((~*(void *)&v42 & 0x7FF0000000000000) != 0)
                                  {
                                    char v14 = *(unsigned char *)(v0 + 544);
                                    char v92 = *(unsigned char *)(v0 + 408);
                                    long long v15 = *(_OWORD *)(v0 + 392);
                                    v91[6] = *(_OWORD *)(v0 + 376);
                                    v91[7] = v15;
                                    long long v16 = *(_OWORD *)(v0 + 328);
                                    v91[2] = *(_OWORD *)(v0 + 312);
                                    v91[3] = v16;
                                    long long v17 = *(_OWORD *)(v0 + 360);
                                    v91[4] = *(_OWORD *)(v0 + 344);
                                    v91[5] = v17;
                                    long long v18 = *(_OWORD *)(v0 + 296);
                                    v91[0] = *(_OWORD *)(v0 + 280);
                                    v91[1] = v18;
                                    sub_1854C1254((uint64_t)v91, (uint64_t)&v93, (uint64_t)&v66);
                                    char v19 = v74;
                                    v58.f64[0] = v6;
                                    v58.f64[1] = v7;
                                    v59.f64[0] = v8;
                                    v59.f64[1] = v9;
                                    v60.f64[0] = v10;
                                    v60.f64[1] = v11;
                                    v61.f64[0] = v12;
                                    v61.f64[1] = v13;
                                    v62.f64[0] = v56;
                                    v62.f64[1] = v54;
                                    v63.f64[0] = v52;
                                    v63.f64[1] = v50;
                                    v64.f64[0] = v48;
                                    v64.f64[1] = v46;
                                    v65.f64[0] = v44;
                                    v65.f64[1] = v42;
                                    sub_1854C0ED0(*(double *)(v0 + 272));
                                    v102[0] = vmulq_f64(v66, v66);
                                    v102[1] = vmulq_f64(v67, v67);
                                    v102[2] = vmulq_f64(v68, v68);
                                    v102[3] = vmulq_f64(v69, v69);
                                    v102[4] = vmulq_f64(v70, v70);
                                    v102[5] = vmulq_f64(v71, v71);
                                    v102[6] = vmulq_f64(v72, v72);
                                    v102[7] = vmulq_f64(v73, v73);
                                    char v103 = v19;
                                    v104[0] = vmulq_f64(v58, v58);
                                    v104[1] = vmulq_f64(v59, v59);
                                    v104[2] = vmulq_f64(v60, v60);
                                    v104[3] = vmulq_f64(v61, v61);
                                    v104[4] = vmulq_f64(v62, v62);
                                    v104[5] = vmulq_f64(v63, v63);
                                    v104[6] = vmulq_f64(v64, v64);
                                    v104[7] = vmulq_f64(v65, v65);
                                    char v105 = v14;
                                    sub_1854C0F14((uint64_t)v102, (uint64_t)v104, (uint64_t)&v75);
                                    float64_t v57 = v75;
                                    if ((~*(void *)&v75 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v55 = v76;
                                    if ((~*(void *)&v76 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v53 = v77;
                                    if ((~*(void *)&v77 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v51 = v78;
                                    if ((~*(void *)&v78 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v49 = v79;
                                    if ((~*(void *)&v79 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v47 = v80;
                                    if ((~*(void *)&v80 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v45 = v81;
                                    if ((~*(void *)&v81 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v43 = v82;
                                    if ((~*(void *)&v82 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v41 = v83;
                                    if ((~*(void *)&v83 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v40 = v84;
                                    if ((~*(void *)&v84 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v39 = v85;
                                    if ((~*(void *)&v85 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    float64_t v38 = v86;
                                    if ((~*(void *)&v86 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    double v20 = v87;
                                    if ((~*(void *)&v87 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    double v21 = v88;
                                    if ((~*(void *)&v88 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    double v22 = v89;
                                    if ((~*(void *)&v89 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    double v23 = v90;
                                    if ((~*(void *)&v90 & 0x7FF0000000000000) == 0) {
                                      return 1;
                                    }
                                    id v24 = objc_msgSend(self, sel_mainScreen);
                                    objc_msgSend(v24, sel_scale);
                                    double v26 = v25;

                                    BOOL result = 0;
                                    v27.f64[0] = v53;
                                    v27.f64[1] = v51;
                                    v28.f64[0] = v57;
                                    v28.f64[1] = v55;
                                    v29.f64[0] = v49;
                                    v29.f64[1] = v47;
                                    v30.f64[0] = v45;
                                    v30.f64[1] = v43;
                                    int16x8_t v31 = (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vcgeq_f64((float64x2_t)vdupq_n_s64(0x3F1A36E2EB1C432DuLL), vabsq_f64(v28)), (int32x4_t)vcgeq_f64((float64x2_t)xmmword_186B85500, vabsq_f64(v27))));
                                    float64x2_t v32 = (float64x2_t)vdupq_n_s64(0x3EB0C6F7A0B5ED8DuLL);
                                    if ((vmaxv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16(v31, (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vcgeq_f64(v32, vabsq_f64(v29)), (int32x4_t)vcgeq_f64((float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 / v26 * (1.0 / v26)), 0), vabsq_f64(v30)))))), 7uLL))) & 1) == 0)
                                    {
                                      v33.f64[0] = v39;
                                      v33.f64[1] = v38;
                                      v34.f64[0] = v41;
                                      v34.f64[1] = v40;
                                      float64x2_t v35 = vabsq_f64(v33);
                                      long long v36 = (const double *)&qword_186B854D8;
                                      float64x2_t v37 = vld1q_dup_f64(v36);
                                      v37.f64[0] = 1.0 / v26 * (1.0 / v26);
                                      if ((vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vcgeq_f64(v37, vabsq_f64(v34)), (int32x4_t)vcgeq_f64(v32, v35)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& fabs(v20) <= 0.000001&& fabs(v21) <= 0.000001&& fabs(v22) <= 0.000001)
                                      {
                                        return fabs(v23) <= 0.000001;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1854BD6F0(uint64_t a1)
{
  double v3 = MEMORY[0x1F4188790](a1);
  uint64_t v4 = v1;
  uint64_t v5 = v2;
  if (v3 <= 0.0)
  {
    *(unsigned char *)(v2 + 128) = *(unsigned char *)(v1 + 680);
    long long v23 = *(_OWORD *)(v1 + 664);
    *(_OWORD *)(v2 + 96) = *(_OWORD *)(v1 + 648);
    *(_OWORD *)(v2 + 112) = v23;
    long long v24 = *(_OWORD *)(v1 + 600);
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v1 + 584);
    *(_OWORD *)(v2 + 48) = v24;
    long long v25 = *(_OWORD *)(v1 + 632);
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(v1 + 616);
    *(_OWORD *)(v2 + 80) = v25;
    long long v26 = *(_OWORD *)(v1 + 568);
    *(_OWORD *)uint64_t v2 = *(_OWORD *)(v1 + 552);
    *(_OWORD *)(v2 + 16) = v26;
    return;
  }
  double v278 = v3;
  float64_t v6 = (_OWORD *)(v1 + 280);
  long long v7 = *(_OWORD *)(v1 + 344);
  long long v501 = *(_OWORD *)(v1 + 360);
  long long v8 = *(_OWORD *)(v1 + 392);
  long long v502 = *(_OWORD *)(v1 + 376);
  long long v503 = v8;
  long long v9 = *(_OWORD *)(v1 + 280);
  long long v497 = *(_OWORD *)(v1 + 296);
  long long v10 = *(_OWORD *)(v1 + 328);
  long long v498 = *(_OWORD *)(v1 + 312);
  long long v499 = v10;
  long long v500 = v7;
  float64_t v11 = (unsigned __int8 *)(v1 + 265);
  char v504 = *(unsigned char *)(v1 + 408);
  long long v496 = v9;
  int v12 = *(unsigned __int8 *)(v1 + 267);
  if (v12)
  {
    long long v13 = *(_OWORD *)(v4 + 392);
    *(_OWORD *)(v4 + 784) = *(_OWORD *)(v4 + 376);
    *(_OWORD *)(v4 + 800) = v13;
    *(unsigned char *)(v4 + 816) = *(unsigned char *)(v4 + 408);
    long long v14 = *(_OWORD *)(v4 + 328);
    *(_OWORD *)(v4 + 720) = *(_OWORD *)(v4 + 312);
    *(_OWORD *)(v4 + 736) = v14;
    long long v15 = *(_OWORD *)(v4 + 360);
    *(_OWORD *)(v4 + 752) = *(_OWORD *)(v4 + 344);
    *(_OWORD *)(v4 + 768) = v15;
    long long v16 = *(_OWORD *)(v4 + 296);
    *(_OWORD *)(v4 + 688) = *v6;
    *(_OWORD *)(v4 + 704) = v16;
    *(unsigned char *)(v4 + 952) = 0;
    *(_OWORD *)(v4 + 920) = 0u;
    *(_OWORD *)(v4 + 936) = 0u;
    *(_OWORD *)(v4 + 888) = 0u;
    *(_OWORD *)(v4 + 904) = 0u;
    *(_OWORD *)(v4 + 856) = 0u;
    *(_OWORD *)(v4 + 872) = 0u;
    *(_OWORD *)(v4 + 824) = 0u;
    *(_OWORD *)(v4 + 840) = 0u;
  }
  double v17 = *(double *)(v4 + 80);
  double v18 = *(double *)(v4 + 88);
  double v19 = *(double *)(v4 + 96);
  int v20 = *(unsigned __int8 *)(v4 + 104);
  int v21 = *v11;
  char v22 = *(unsigned char *)(v4 + 266);
  if (v21)
  {
    if ((*(unsigned char *)(v4 + 266) & 1) == 0) {
      goto LABEL_32;
    }
LABEL_12:
    double v251 = *(double *)(v4 + 40);
    double v252 = *(double *)(v4 + 32);
    goto LABEL_54;
  }
  double v28 = *(double *)(v4 + 48);
  double v27 = *(double *)(v4 + 56);
  double v29 = *(double *)(v4 + 64);
  int v30 = *(unsigned __int8 *)(v4 + 72);
  if (*(double *)v4 == v28 && *(double *)(v4 + 8) == 0.0)
  {
    if (*(unsigned char *)(v4 + 266)) {
      goto LABEL_11;
    }
LABEL_32:
    double v56 = *(double *)(v4 + 16);
    if (v56 == v17 && *(double *)(v4 + 24) == 0.0) {
      goto LABEL_53;
    }
    double v59 = v56 - v17;
    if ((v20 - 1) <= 2)
    {
      __double2 v60 = __sincos_stret(v56 - v17);
      double v61 = atan2(v60.__sinval, v60.__cosval);
      if (v61 > 0.0 && v20 == 2) {
        double v61 = v61 + -6.28318531;
      }
      if (v61 < 0.0 && v20 == 3) {
        double v59 = v61 + 6.28318531;
      }
      else {
        double v59 = v61;
      }
    }
    double v64 = *(double *)(v4 + 24);
    double v65 = sqrt(v18);
    double v66 = v19 * 0.5;
    if (v19 * 0.5 >= v65)
    {
      if (v65 >= v66)
      {
        double v80 = v66 * v59 + v64;
        double v81 = v59 + v80 * v278;
        double v71 = exp(-(v66 * v278));
        double v72 = v71 * v81;
        double v78 = v71 * v80;
        double v79 = v81 * v66;
        goto LABEL_52;
      }
      double v74 = sqrt(v66 * v66 - v65 * v65);
      double v75 = cosh(v74 * v278);
      double v76 = 1.0 / v74 * (v66 * v59 + v64);
      double v77 = sinh(v74 * v278);
      double v70 = v59 * v75 + v76 * v77;
      double v71 = exp(-(v66 * v278));
      double v72 = v71 * v70;
      double v73 = v74 * (v76 * v75) + v74 * (v59 * v77);
    }
    else
    {
      double v67 = sqrt(v65 * v65 - v66 * v66);
      __double2 v68 = __sincos_stret(v67 * v278);
      double v69 = 1.0 / v67 * (v66 * v59 + v64);
      double v70 = v68.__cosval * v59 + v68.__sinval * v69;
      double v71 = exp(-(v66 * v278));
      double v72 = v71 * v70;
      double v73 = v67 * (v68.__cosval * v69) - v67 * (v59 * v68.__sinval);
    }
    double v78 = v71 * v73;
    double v79 = v70 * v66;
LABEL_52:
    double v82 = v78 - v71 * v79;
    double v56 = v17 + v72;
    *(double *)(v4 + 16) = v17 + v72;
    *(double *)(v4 + 24) = v82;
    goto LABEL_53;
  }
  double v31 = *(double *)v4 - v28;
  double v269 = *(double *)(v4 + 88);
  if ((v30 - 1) <= 2)
  {
    __double2 v32 = __sincos_stret(*(double *)v4 - v28);
    double v33 = atan2(v32.__sinval, v32.__cosval);
    if (v33 > 0.0 && v30 == 2) {
      double v33 = v33 + -6.28318531;
    }
    if (v33 < 0.0 && v30 == 3) {
      double v31 = v33 + 6.28318531;
    }
    else {
      double v31 = v33;
    }
  }
  double v36 = *(double *)(v4 + 8);
  double v37 = sqrt(v27);
  double v38 = v29 * 0.5;
  if (v29 * 0.5 >= v37)
  {
    if (v37 >= v38)
    {
      double v57 = v38 * v31 + v36;
      double v58 = v31 + v57 * v278;
      double v43 = exp(-(v38 * v278));
      double v44 = v43 * v58;
      double v47 = v43 * v57;
      double v48 = v58 * v38;
    }
    else
    {
      double v274 = v17;
      double v49 = sqrt(v38 * v38 - v37 * v37);
      double v50 = cosh(v49 * v278);
      double v265 = v19;
      double v51 = 1.0 / v49 * (v38 * v31 + v36);
      double v52 = sinh(v49 * v278);
      double v53 = v31 * v50 + v51 * v52;
      double v43 = exp(-(v38 * v278));
      double v44 = v43 * v53;
      double v54 = v49 * (v31 * v52);
      double v55 = v49 * (v51 * v50);
      double v17 = v274;
      double v47 = v43 * (v55 + v54);
      double v48 = v53 * v38;
      double v19 = v265;
    }
  }
  else
  {
    double v264 = v19;
    double v39 = sqrt(v37 * v37 - v38 * v38);
    __double2 v40 = __sincos_stret(v39 * v278);
    double v41 = 1.0 / v39 * (v38 * v31 + v36);
    double v273 = v17;
    double v42 = v40.__cosval * v31 + v40.__sinval * v41;
    double v43 = exp(-(v38 * v278));
    double v44 = v43 * v42;
    double v45 = v39 * (v31 * v40.__sinval);
    double v46 = v39 * (v40.__cosval * v41);
    double v19 = v264;
    double v47 = v43 * (v46 - v45);
    double v48 = v42 * v38;
    double v17 = v273;
  }
  *(double *)uint64_t v4 = v28 + v44;
  *(double *)(v4 + 8) = v47 - v43 * v48;
  double v18 = v269;
  if ((v22 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_11:
  if (v21) {
    goto LABEL_12;
  }
  double v56 = *(double *)(v4 + 16);
LABEL_53:
  double v83 = 6.28318531 / v56 * (6.28318531 / v56);
  double v84 = sqrt(v83);
  double v251 = *(double *)v4 * (v84 + v84);
  double v252 = v83;
  *(double *)(v4 + 32) = v83;
  *(double *)(v4 + 40) = v251;
LABEL_54:
  long long v85 = *(_OWORD *)(v4 + 392);
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(v4 + 376);
  *(_OWORD *)(v4 + 224) = v85;
  *(unsigned char *)(v4 + 240) = *(unsigned char *)(v4 + 408);
  long long v86 = *(_OWORD *)(v4 + 328);
  *(_OWORD *)(v4 + 144) = *(_OWORD *)(v4 + 312);
  *(_OWORD *)(v4 + 160) = v86;
  long long v87 = *(_OWORD *)(v4 + 360);
  *(_OWORD *)(v4 + 176) = *(_OWORD *)(v4 + 344);
  *(_OWORD *)(v4 + 192) = v87;
  long long v88 = *(_OWORD *)(v4 + 296);
  *(_OWORD *)(v4 + 112) = *v6;
  *(_OWORD *)(v4 + 128) = v88;
  long long v627 = *(_OWORD *)(v4 + 768);
  long long v628 = *(_OWORD *)(v4 + 784);
  long long v629 = *(_OWORD *)(v4 + 800);
  char v630 = *(unsigned char *)(v4 + 816);
  long long v623 = *(_OWORD *)(v4 + 704);
  long long v624 = *(_OWORD *)(v4 + 720);
  long long v625 = *(_OWORD *)(v4 + 736);
  long long v626 = *(_OWORD *)(v4 + 752);
  long long v622 = *(_OWORD *)(v4 + 688);
  double v89 = *(double *)(v4 + 688);
  double v90 = *(double *)(v4 + 696);
  double v91 = *(double *)(v4 + 704);
  double v92 = *(double *)(v4 + 712);
  double v93 = *(double *)(v4 + 720);
  double v94 = *(double *)(v4 + 728);
  double v95 = *(double *)(v4 + 736);
  double v96 = *(double *)(v4 + 744);
  double v97 = *(double *)(v4 + 752);
  double v98 = *(double *)(v4 + 760);
  long long v99 = (long long *)(v4 + 824);
  long long v100 = *(_OWORD *)(v4 + 888);
  long long v509 = *(_OWORD *)(v4 + 904);
  long long v101 = *(_OWORD *)(v4 + 904);
  long long v510 = *(_OWORD *)(v4 + 920);
  long long v102 = *(_OWORD *)(v4 + 920);
  long long v511 = *(_OWORD *)(v4 + 936);
  long long v103 = *(_OWORD *)(v4 + 840);
  long long v104 = *(_OWORD *)(v4 + 872);
  long long v506 = *(_OWORD *)(v4 + 856);
  long long v507 = v104;
  long long v105 = *(_OWORD *)(v4 + 872);
  long long v508 = *(_OWORD *)(v4 + 888);
  long long v106 = *(_OWORD *)(v4 + 840);
  v505[0] = *(_OWORD *)(v4 + 824);
  v505[1] = v106;
  long long v107 = *(_OWORD *)(v4 + 936);
  long long v318 = v102;
  long long v319 = v107;
  long long v314 = v506;
  long long v315 = v105;
  long long v316 = v100;
  long long v317 = v101;
  long long v312 = v505[0];
  long long v313 = v103;
  uint64_t v108 = v4 + 552;
  long long v109 = *(_OWORD *)(v4 + 616);
  long long v483 = *(_OWORD *)(v4 + 632);
  long long v110 = *(_OWORD *)(v4 + 632);
  long long v484 = *(_OWORD *)(v4 + 648);
  long long v111 = *(_OWORD *)(v4 + 648);
  long long v485 = *(_OWORD *)(v4 + 664);
  long long v112 = *(_OWORD *)(v4 + 552);
  long long v479 = *(_OWORD *)(v4 + 568);
  long long v113 = *(_OWORD *)(v4 + 568);
  long long v480 = *(_OWORD *)(v4 + 584);
  long long v114 = *(_OWORD *)(v4 + 584);
  long long v481 = *(_OWORD *)(v4 + 600);
  long long v115 = *(_OWORD *)(v4 + 600);
  long long v482 = *(_OWORD *)(v4 + 616);
  long long v478 = *(_OWORD *)(v4 + 552);
  long long v116 = *(_OWORD *)(v4 + 664);
  long long v327 = v111;
  long long v328 = v116;
  long long v323 = v114;
  long long v324 = v115;
  long long v325 = v109;
  long long v326 = v110;
  long long v321 = v112;
  long long v322 = v113;
  long long v117 = *(_OWORD *)(v4 + 480);
  v359[5] = *(_OWORD *)(v4 + 496);
  long long v118 = *(_OWORD *)(v4 + 496);
  v359[6] = *(_OWORD *)(v4 + 512);
  long long v119 = *(_OWORD *)(v4 + 512);
  v359[7] = *(_OWORD *)(v4 + 528);
  long long v120 = *(_OWORD *)(v4 + 416);
  v359[1] = *(_OWORD *)(v4 + 432);
  long long v121 = *(_OWORD *)(v4 + 432);
  v359[2] = *(_OWORD *)(v4 + 448);
  long long v122 = *(_OWORD *)(v4 + 448);
  v359[3] = *(_OWORD *)(v4 + 464);
  long long v123 = *(_OWORD *)(v4 + 464);
  v359[4] = *(_OWORD *)(v4 + 480);
  v359[0] = *(_OWORD *)(v4 + 416);
  double v124 = *(double *)(v4 + 768);
  long long v335 = v118;
  double v125 = *(double *)(v4 + 776);
  long long v336 = v119;
  long long v337 = *(_OWORD *)(v4 + 528);
  double v126 = *(double *)(v4 + 784);
  long long v331 = v121;
  long long v332 = v122;
  double v127 = *(double *)(v4 + 792);
  long long v333 = v123;
  double v128 = *(double *)(v4 + 800);
  long long v334 = v117;
  double v129 = *(double *)(v4 + 808);
  char v130 = *(unsigned char *)(v4 + 816);
  char v512 = *(unsigned char *)(v4 + 952);
  char v320 = *(unsigned char *)(v4 + 952);
  char v486 = *(unsigned char *)(v4 + 680);
  char v329 = *(unsigned char *)(v4 + 680);
  char v360 = *(unsigned char *)(v4 + 544);
  char v338 = *(unsigned char *)(v4 + 544);
  long long v330 = v120;
  unsigned __int8 v131 = *(unsigned char *)(v4 + 264);
  if (!v12)
  {
    double v257 = v125;
    double v259 = v124;
    double v261 = v128;
    double v266 = v129;
    double v270 = v127;
    double v275 = v126;
    double v248 = v91;
    double v249 = v94;
    double v136 = v90;
    double v137 = v93;
    double v138 = v92;
    double v139 = v97;
    double v140 = v96;
    double v141 = v95;
    double v142 = v98;
    double v143 = v89;
    double v253 = *(double *)(v4 + 248);
    double v255 = *(double *)(v4 + 256);
    if (sub_1854C1DA8((uint64_t)&v622, (uint64_t)&v496))
    {
      memset(v621, 0, 129);
      if (sub_1854C1DA8((uint64_t)v505, (uint64_t)v621))
      {
        long long v309 = v318;
        long long v310 = v319;
        char v311 = v320;
        long long v305 = v314;
        long long v306 = v315;
        long long v307 = v316;
        long long v308 = v317;
        long long v303 = v312;
        long long v304 = v313;
        double v89 = v143;
        double v98 = v142;
        double v95 = v141;
        double v96 = v140;
        double v97 = v139;
        double v92 = v138;
        double v93 = v137;
        double v90 = v136;
        double v91 = v248;
        double v94 = v249;
        double v127 = v270;
        double v126 = v275;
        double v128 = v261;
        double v129 = v266;
        double v125 = v257;
        double v124 = v259;
        goto LABEL_66;
      }
    }
    char v144 = v504;
    double v145 = sub_1854C1124(v504 + 1, *(double *)&v622, *((double *)&v622 + 1), *(double *)&v623, *(double *)&v496, *((double *)&v496 + 1), *(double *)&v497);
    uint64_t v271 = v146;
    double v276 = v145;
    uint64_t v267 = v147;
    double v262 = sub_1854C1124(v131, *((double *)&v623 + 1), *(double *)&v624, *((double *)&v624 + 1), *((double *)&v497 + 1), *(double *)&v498, *((double *)&v498 + 1));
    uint64_t v149 = v148;
    uint64_t v151 = v150;
    double v152 = sub_1854C1124(v131, *(double *)&v625, *((double *)&v625 + 1), *(double *)&v626, *(double *)&v499, *((double *)&v499 + 1), *(double *)&v500);
    uint64_t v154 = v153;
    uint64_t v156 = v155;
    double v157 = sub_1854C1124(v131, *((double *)&v626 + 1), *(double *)&v627, *((double *)&v627 + 1), *((double *)&v500 + 1), *(double *)&v501, *((double *)&v501 + 1));
    uint64_t v159 = v158;
    uint64_t v161 = v160;
    double v162 = sub_1854C2214(v131, *(double *)&v628, *((double *)&v628 + 1), *(double *)&v629, *((double *)&v629 + 1), *(double *)&v502, *((double *)&v502 + 1), *(double *)&v503, *((double *)&v503 + 1));
    *(double *)&long long v567 = v276;
    *((void *)&v567 + 1) = v271;
    *(void *)&long long v568 = v267;
    *((double *)&v568 + 1) = v262;
    *(void *)&long long v569 = v149;
    *((void *)&v569 + 1) = v151;
    *(double *)&long long v570 = v152;
    *((void *)&v570 + 1) = v154;
    *(void *)&long long v571 = v156;
    *((double *)&v571 + 1) = v157;
    *(void *)&long long v572 = v159;
    *((void *)&v572 + 1) = v161;
    *(double *)&long long v573 = v162;
    *((void *)&v573 + 1) = v163;
    *(void *)&long long v574 = v164;
    *((void *)&v574 + 1) = v165;
    char v575 = v144;
    double v166 = sqrt(v253);
    double v167 = v255 * 0.5;
    if (v255 * 0.5 >= v166)
    {
      if (v166 >= v167)
      {
        long long v608 = v572;
        long long v609 = v573;
        long long v610 = v574;
        long long v604 = v568;
        long long v605 = v569;
        long long v606 = v570;
        long long v607 = v571;
        char v611 = v575;
        long long v603 = v567;
        sub_1854C0ED0(v255 * 0.5);
        long long v617 = v608;
        long long v618 = v609;
        long long v619 = v610;
        char v620 = v611;
        long long v613 = v604;
        long long v614 = v605;
        long long v615 = v606;
        long long v616 = v607;
        long long v612 = v603;
        sub_1854C0F14((uint64_t)&v612, (uint64_t)v505, (uint64_t)&v594);
        sub_1854C0ED0(v278);
        long long v608 = v599;
        long long v609 = v600;
        long long v610 = v601;
        char v611 = v602;
        long long v604 = v595;
        long long v605 = v596;
        long long v606 = v597;
        long long v607 = v598;
        long long v603 = v594;
        sub_1854C0F14((uint64_t)&v567, (uint64_t)&v603, (uint64_t)&v469);
        double v178 = exp(-(v167 * v278));
        sub_1854C0ED0(v178);
        long long v590 = v572;
        long long v591 = v573;
        long long v592 = v574;
        long long v586 = v568;
        long long v587 = v569;
        long long v588 = v570;
        long long v589 = v571;
        char v593 = v575;
        long long v585 = v567;
        sub_1854C0ED0(v167);
        long long v599 = v590;
        long long v600 = v591;
        long long v601 = v592;
        char v602 = v593;
        long long v595 = v586;
        long long v596 = v587;
        long long v597 = v588;
        long long v598 = v589;
        long long v594 = v585;
        sub_1854C0F14((uint64_t)&v594, (uint64_t)v505, (uint64_t)&v540);
        sub_1854C0ED0(v178);
        long long v581 = v572;
        long long v582 = v573;
        long long v583 = v574;
        long long v577 = v568;
        long long v578 = v569;
        long long v579 = v570;
        long long v580 = v571;
        char v584 = v575;
        long long v576 = v567;
        sub_1854C0ED0(v167);
        long long v590 = v581;
        long long v591 = v582;
        long long v592 = v583;
        char v593 = v584;
        long long v586 = v577;
        long long v587 = v578;
        long long v588 = v579;
        long long v589 = v580;
        long long v585 = v576;
        sub_1854C0F14((uint64_t)&v585, (uint64_t)v505, (uint64_t)&v549);
        sub_1854C0ED0(v278);
        long long v581 = v554;
        long long v582 = v555;
        long long v583 = v556;
        long long v577 = v550;
        long long v578 = v551;
        long long v579 = v552;
        long long v580 = v553;
        char v584 = v557;
        long long v576 = v549;
        sub_1854C0F14((uint64_t)&v567, (uint64_t)&v576, (uint64_t)&v558);
        sub_1854C0ED0(-v167);
        long long v537 = v564;
        long long v538 = v565;
        char v539 = v566;
        long long v533 = v560;
        long long v534 = v561;
        long long v535 = v562;
        long long v536 = v563;
        long long v531 = v558;
        long long v532 = v559;
        sub_1854C0ED0(v178);
        long long v555 = v546;
        long long v556 = v547;
        char v557 = v548;
        long long v551 = v542;
        long long v552 = v543;
        long long v553 = v544;
        long long v554 = v545;
        long long v549 = v540;
        long long v550 = v541;
        long long v564 = v537;
        long long v565 = v538;
        char v566 = v539;
        long long v560 = v533;
        long long v561 = v534;
        long long v562 = v535;
        long long v563 = v536;
        long long v558 = v531;
        long long v559 = v532;
        id v176 = &v549;
        float64x2_t v177 = &v558;
        goto LABEL_65;
      }
      double v173 = sqrt(v167 * v167 - v166 * v166);
      double v174 = cosh(v173 * v278);
      long long v590 = v572;
      long long v591 = v573;
      long long v592 = v574;
      long long v586 = v568;
      long long v587 = v569;
      long long v588 = v570;
      long long v589 = v571;
      char v593 = v575;
      long long v585 = v567;
      sub_1854C0ED0(v174);
      long long v599 = v572;
      long long v600 = v573;
      long long v601 = v574;
      long long v595 = v568;
      long long v596 = v569;
      long long v597 = v570;
      long long v598 = v571;
      char v602 = v575;
      long long v594 = v567;
      sub_1854C0ED0(v167);
      long long v617 = v599;
      long long v618 = v600;
      long long v619 = v601;
      char v620 = v602;
      long long v613 = v595;
      long long v614 = v596;
      long long v615 = v597;
      long long v616 = v598;
      long long v612 = v594;
      sub_1854C0F14((uint64_t)&v612, (uint64_t)v505, (uint64_t)&v603);
      sub_1854C0ED0(1.0 / v173);
      double v175 = sinh(v173 * v278);
      long long v581 = v608;
      long long v582 = v609;
      long long v583 = v610;
      char v584 = v611;
      long long v577 = v604;
      long long v578 = v605;
      long long v579 = v606;
      long long v580 = v607;
      long long v576 = v603;
      sub_1854C0ED0(v175);
      long long v599 = v590;
      long long v600 = v591;
      long long v601 = v592;
      char v602 = v593;
      long long v595 = v586;
      long long v596 = v587;
      long long v597 = v588;
      long long v598 = v589;
      long long v594 = v585;
      long long v608 = v581;
      long long v609 = v582;
      long long v610 = v583;
      char v611 = v584;
      long long v604 = v577;
      long long v605 = v578;
      long long v606 = v579;
      long long v607 = v580;
      long long v603 = v576;
      sub_1854C0F14((uint64_t)&v594, (uint64_t)&v603, (uint64_t)&v469);
      double v170 = -v167;
      double v171 = exp(-(v167 * v278));
      sub_1854C0ED0(v171);
      long long v590 = v572;
      long long v591 = v573;
      long long v592 = v574;
      long long v586 = v568;
      long long v587 = v569;
      long long v588 = v570;
      long long v589 = v571;
      char v593 = v575;
      long long v585 = v567;
      sub_1854C0ED0(v175);
      long long v555 = v591;
      long long v556 = v592;
      char v557 = v593;
      long long v551 = v587;
      long long v552 = v588;
      long long v553 = v589;
      long long v554 = v590;
      long long v549 = v585;
      long long v550 = v586;
      sub_1854C0ED0(v173);
      long long v581 = v572;
      long long v582 = v573;
      long long v583 = v574;
      long long v577 = v568;
      long long v578 = v569;
      long long v579 = v570;
      long long v580 = v571;
      char v584 = v575;
      long long v576 = v567;
      sub_1854C0ED0(v167);
      long long v590 = v581;
      long long v591 = v582;
      long long v592 = v583;
      char v593 = v584;
      long long v586 = v577;
      long long v587 = v578;
      long long v588 = v579;
      long long v589 = v580;
      long long v585 = v576;
      sub_1854C0F14((uint64_t)&v585, (uint64_t)v505, (uint64_t)&v558);
      sub_1854C0ED0(1.0 / v173);
      long long v581 = v563;
      long long v582 = v564;
      long long v583 = v565;
      long long v577 = v559;
      long long v578 = v560;
      long long v579 = v561;
      long long v580 = v562;
      char v584 = v566;
      long long v576 = v558;
      sub_1854C0ED0(v174);
      long long v546 = v582;
      long long v547 = v583;
      char v548 = v584;
      long long v542 = v578;
      long long v543 = v579;
      long long v544 = v580;
      long long v545 = v581;
      long long v540 = v576;
      long long v541 = v577;
      sub_1854C0ED0(v173);
      long long v564 = v555;
      long long v565 = v556;
      long long v560 = v551;
      long long v561 = v552;
      long long v562 = v553;
      long long v563 = v554;
      long long v558 = v549;
      long long v559 = v550;
      long long v581 = v545;
      long long v582 = v546;
      long long v583 = v547;
      long long v577 = v541;
      long long v578 = v542;
      long long v579 = v543;
      long long v580 = v544;
      char v566 = v557;
      char v584 = v548;
      long long v576 = v540;
      sub_1854C0F14((uint64_t)&v558, (uint64_t)&v576, (uint64_t)&v460);
      sub_1854C0ED0(v171);
      long long v519 = v573;
      long long v520 = v574;
      char v521 = v575;
      long long v515 = v569;
      long long v516 = v570;
      long long v517 = v571;
      long long v518 = v572;
      long long v513 = v567;
      long long v514 = v568;
      sub_1854C0ED0(v174);
      long long v537 = v573;
      long long v538 = v574;
      char v539 = v575;
      long long v533 = v569;
      long long v534 = v570;
      long long v535 = v571;
      long long v536 = v572;
      long long v531 = v567;
      long long v532 = v568;
      sub_1854C0ED0(v167);
      long long v555 = v537;
      long long v556 = v538;
      char v557 = v539;
      long long v551 = v533;
      long long v552 = v534;
      long long v553 = v535;
      long long v554 = v536;
      long long v549 = v531;
      long long v550 = v532;
      sub_1854C0F14((uint64_t)&v549, (uint64_t)v505, (uint64_t)&v540);
      sub_1854C0ED0(1.0 / v173);
      long long v492 = v545;
      long long v493 = v546;
      long long v494 = v547;
      long long v488 = v541;
      long long v489 = v542;
      long long v490 = v543;
      long long v491 = v544;
      char v495 = v548;
      long long v487 = v540;
      double sinval = v175;
    }
    else
    {
      double v168 = sqrt(v166 * v166 - v167 * v167);
      __double2 v169 = __sincos_stret(v168 * v278);
      long long v590 = v572;
      long long v591 = v573;
      long long v592 = v574;
      long long v586 = v568;
      long long v587 = v569;
      long long v588 = v570;
      long long v589 = v571;
      char v593 = v575;
      long long v585 = v567;
      sub_1854C0ED0(v169.__cosval);
      long long v599 = v572;
      long long v600 = v573;
      long long v601 = v574;
      long long v595 = v568;
      long long v596 = v569;
      long long v597 = v570;
      long long v598 = v571;
      char v602 = v575;
      long long v594 = v567;
      sub_1854C0ED0(v167);
      long long v617 = v599;
      long long v618 = v600;
      long long v619 = v601;
      char v620 = v602;
      long long v613 = v595;
      long long v614 = v596;
      long long v615 = v597;
      long long v616 = v598;
      long long v612 = v594;
      sub_1854C0F14((uint64_t)&v612, (uint64_t)v505, (uint64_t)&v603);
      sub_1854C0ED0(1.0 / v168);
      long long v581 = v608;
      long long v582 = v609;
      long long v583 = v610;
      char v584 = v611;
      long long v577 = v604;
      long long v578 = v605;
      long long v579 = v606;
      long long v580 = v607;
      long long v576 = v603;
      sub_1854C0ED0(v169.__sinval);
      long long v599 = v590;
      long long v600 = v591;
      long long v601 = v592;
      char v602 = v593;
      long long v595 = v586;
      long long v596 = v587;
      long long v597 = v588;
      long long v598 = v589;
      long long v594 = v585;
      long long v608 = v581;
      long long v609 = v582;
      long long v610 = v583;
      char v611 = v584;
      long long v604 = v577;
      long long v605 = v578;
      long long v606 = v579;
      long long v607 = v580;
      long long v603 = v576;
      sub_1854C0F14((uint64_t)&v594, (uint64_t)&v603, (uint64_t)&v469);
      double v170 = -v167;
      double v171 = exp(-(v167 * v278));
      sub_1854C0ED0(v171);
      long long v590 = v572;
      long long v591 = v573;
      long long v592 = v574;
      long long v586 = v568;
      long long v587 = v569;
      long long v588 = v570;
      long long v589 = v571;
      char v593 = v575;
      long long v585 = v567;
      sub_1854C0ED0(-v169.__sinval);
      long long v555 = v591;
      long long v556 = v592;
      char v557 = v593;
      long long v551 = v587;
      long long v552 = v588;
      long long v553 = v589;
      long long v554 = v590;
      long long v549 = v585;
      long long v550 = v586;
      sub_1854C0ED0(v168);
      long long v581 = v572;
      long long v582 = v573;
      long long v583 = v574;
      long long v577 = v568;
      long long v578 = v569;
      long long v579 = v570;
      long long v580 = v571;
      char v584 = v575;
      long long v576 = v567;
      sub_1854C0ED0(v167);
      long long v590 = v581;
      long long v591 = v582;
      long long v592 = v583;
      char v593 = v584;
      long long v586 = v577;
      long long v587 = v578;
      long long v588 = v579;
      long long v589 = v580;
      long long v585 = v576;
      sub_1854C0F14((uint64_t)&v585, (uint64_t)v505, (uint64_t)&v558);
      sub_1854C0ED0(1.0 / v168);
      long long v581 = v563;
      long long v582 = v564;
      long long v583 = v565;
      long long v577 = v559;
      long long v578 = v560;
      long long v579 = v561;
      long long v580 = v562;
      char v584 = v566;
      long long v576 = v558;
      sub_1854C0ED0(v169.__cosval);
      long long v546 = v582;
      long long v547 = v583;
      char v548 = v584;
      long long v542 = v578;
      long long v543 = v579;
      long long v544 = v580;
      long long v545 = v581;
      long long v540 = v576;
      long long v541 = v577;
      sub_1854C0ED0(v168);
      long long v564 = v555;
      long long v565 = v556;
      long long v560 = v551;
      long long v561 = v552;
      long long v562 = v553;
      long long v563 = v554;
      long long v558 = v549;
      long long v559 = v550;
      long long v581 = v545;
      long long v582 = v546;
      long long v583 = v547;
      long long v577 = v541;
      long long v578 = v542;
      long long v579 = v543;
      long long v580 = v544;
      char v566 = v557;
      char v584 = v548;
      long long v576 = v540;
      sub_1854C0F14((uint64_t)&v558, (uint64_t)&v576, (uint64_t)&v460);
      sub_1854C0ED0(v171);
      long long v519 = v573;
      long long v520 = v574;
      char v521 = v575;
      long long v515 = v569;
      long long v516 = v570;
      long long v517 = v571;
      long long v518 = v572;
      long long v513 = v567;
      long long v514 = v568;
      sub_1854C0ED0(v169.__cosval);
      long long v537 = v573;
      long long v538 = v574;
      char v539 = v575;
      long long v533 = v569;
      long long v534 = v570;
      long long v535 = v571;
      long long v536 = v572;
      long long v531 = v567;
      long long v532 = v568;
      sub_1854C0ED0(v167);
      long long v555 = v537;
      long long v556 = v538;
      char v557 = v539;
      long long v551 = v533;
      long long v552 = v534;
      long long v553 = v535;
      long long v554 = v536;
      long long v549 = v531;
      long long v550 = v532;
      sub_1854C0F14((uint64_t)&v549, (uint64_t)v505, (uint64_t)&v540);
      sub_1854C0ED0(1.0 / v168);
      long long v492 = v545;
      long long v493 = v546;
      long long v494 = v547;
      long long v488 = v541;
      long long v489 = v542;
      long long v490 = v543;
      long long v491 = v544;
      char v495 = v548;
      long long v487 = v540;
      double sinval = v169.__sinval;
    }
    sub_1854C0ED0(sinval);
    long long v537 = v519;
    long long v538 = v520;
    char v539 = v521;
    long long v533 = v515;
    long long v534 = v516;
    long long v535 = v517;
    long long v536 = v518;
    long long v531 = v513;
    long long v532 = v514;
    long long v546 = v493;
    long long v547 = v494;
    char v548 = v495;
    long long v542 = v489;
    long long v543 = v490;
    long long v544 = v491;
    long long v545 = v492;
    long long v540 = v487;
    long long v541 = v488;
    sub_1854C0F14((uint64_t)&v531, (uint64_t)&v540, (uint64_t)&v522);
    sub_1854C0ED0(v170);
    long long v492 = v527;
    long long v493 = v528;
    long long v494 = v529;
    long long v488 = v523;
    long long v489 = v524;
    long long v490 = v525;
    long long v491 = v526;
    char v495 = v530;
    long long v487 = v522;
    sub_1854C0ED0(v171);
    long long v528 = v493;
    long long v529 = v494;
    char v530 = v495;
    long long v524 = v489;
    long long v525 = v490;
    long long v526 = v491;
    long long v527 = v492;
    long long v522 = v487;
    long long v523 = v488;
    long long v519 = v466;
    long long v520 = v467;
    char v521 = v468;
    long long v515 = v462;
    long long v516 = v463;
    long long v517 = v464;
    long long v518 = v465;
    long long v513 = v460;
    long long v514 = v461;
    id v176 = &v513;
    float64x2_t v177 = &v522;
LABEL_65:
    sub_1854C0F14((uint64_t)v176, (uint64_t)v177, (uint64_t)&v451);
    long long v492 = v474;
    long long v493 = v475;
    long long v494 = v476;
    char v495 = v477;
    long long v488 = v470;
    long long v489 = v471;
    long long v490 = v472;
    long long v491 = v473;
    long long v487 = v469;
    sub_1854C0F14((uint64_t)&v487, (uint64_t)&v496, (uint64_t)v339);
    double v89 = *(double *)v339;
    double v90 = *(double *)&v339[1];
    double v91 = *(double *)&v339[2];
    double v92 = *(double *)&v339[3];
    double v93 = *(double *)&v339[4];
    double v94 = *(double *)&v339[5];
    double v95 = *(double *)&v339[6];
    double v96 = *(double *)&v339[7];
    double v97 = *(double *)&v339[8];
    double v98 = *(double *)&v339[9];
    double v124 = *(double *)&v339[10];
    double v125 = *(double *)&v339[11];
    double v126 = *(double *)&v339[12];
    double v127 = *(double *)&v339[13];
    double v128 = *(double *)&v339[14];
    double v129 = *(double *)&v339[15];
    char v130 = v340;
    long long v309 = v457;
    long long v310 = v458;
    char v311 = v459;
    long long v305 = v453;
    long long v306 = v454;
    long long v307 = v455;
    long long v308 = v456;
    long long v303 = v451;
    long long v304 = v452;
    goto LABEL_66;
  }
  long long v132 = *(_OWORD *)(v4 + 936);
  long long v309 = *(_OWORD *)(v4 + 920);
  long long v310 = v132;
  char v311 = *(unsigned char *)(v4 + 952);
  long long v133 = *(_OWORD *)(v4 + 872);
  long long v305 = *(_OWORD *)(v4 + 856);
  long long v306 = v133;
  long long v134 = *(_OWORD *)(v4 + 904);
  long long v307 = *(_OWORD *)(v4 + 888);
  long long v308 = v134;
  long long v135 = *(_OWORD *)(v4 + 840);
  long long v303 = *v99;
  long long v304 = v135;
LABEL_66:
  uint64_t v179 = v4 + 688;
  uint64_t v180 = v4 + 416;
  double v181 = v89;
  *(double *)&long long v350 = v89;
  double v182 = v90;
  *((double *)&v350 + 1) = v90;
  double v183 = v91;
  *(double *)&long long v351 = v91;
  double v184 = v92;
  *((double *)&v351 + 1) = v92;
  double v185 = v93;
  *(double *)&long long v352 = v93;
  double v186 = v94;
  *((double *)&v352 + 1) = v94;
  double v254 = v95;
  double v256 = v98;
  *(double *)&long long v353 = v95;
  double v187 = v96;
  *((double *)&v353 + 1) = v96;
  double v188 = v97;
  *(double *)&long long v354 = v97;
  *((double *)&v354 + 1) = v98;
  double v258 = v125;
  double v260 = v124;
  *(double *)&long long v355 = v124;
  *((double *)&v355 + 1) = v125;
  double v272 = v127;
  double v277 = v126;
  *(double *)&long long v356 = v126;
  *((double *)&v356 + 1) = v127;
  double v263 = v128;
  double v268 = v129;
  *(double *)&long long v357 = v128;
  *((double *)&v357 + 1) = v129;
  char v358 = v130;
  if (!sub_1854C1DA8((uint64_t)&v478, (uint64_t)&v350)) {
    goto LABEL_69;
  }
  char v477 = 0;
  long long v476 = 0u;
  long long v475 = 0u;
  long long v474 = 0u;
  long long v473 = 0u;
  long long v472 = 0u;
  long long v471 = 0u;
  long long v470 = 0u;
  long long v469 = 0u;
  if (!sub_1854C1DA8((uint64_t)v359, (uint64_t)&v469))
  {
LABEL_69:
    *(void *)&long long v247 = sub_1854C1124(v130 + 1, *(double *)&v478, *((double *)&v478 + 1), *(double *)&v479, v181, v182, v183);
    *((void *)&v247 + 1) = v189;
    uint64_t v250 = v190;
    double v191 = sub_1854C1124(v131, *((double *)&v479 + 1), *(double *)&v480, *((double *)&v480 + 1), v184, v185, v186);
    uint64_t v193 = v192;
    uint64_t v246 = v194;
    double v195 = sub_1854C1124(v131, *(double *)&v481, *((double *)&v481 + 1), *(double *)&v482, v254, v187, v188);
    uint64_t v197 = v196;
    uint64_t v199 = v198;
    double v200 = sub_1854C1124(v131, *((double *)&v482 + 1), *(double *)&v483, *((double *)&v483 + 1), v256, v260, v258);
    uint64_t v202 = v201;
    uint64_t v204 = v203;
    double v205 = sub_1854C2214(v131, *(double *)&v484, *((double *)&v484 + 1), *(double *)&v485, *((double *)&v485 + 1), v277, v272, v263, v268);
    long long v415 = v247;
    *(void *)&long long v416 = v250;
    *((double *)&v416 + 1) = v191;
    *(void *)&long long v417 = v193;
    *((void *)&v417 + 1) = v246;
    *(double *)&long long v418 = v195;
    *((void *)&v418 + 1) = v197;
    *(void *)&long long v419 = v199;
    *((double *)&v419 + 1) = v200;
    *(void *)&long long v420 = v202;
    *((void *)&v420 + 1) = v204;
    *(double *)&long long v421 = v205;
    *((void *)&v421 + 1) = v206;
    *(void *)&long long v422 = v207;
    *((void *)&v422 + 1) = v208;
    char v423 = v130;
    double v209 = sqrt(v252);
    double v210 = v251 * 0.5;
    if (v251 * 0.5 >= v209)
    {
      if (v209 >= v210)
      {
        long long v456 = v420;
        long long v457 = v421;
        long long v458 = v422;
        long long v452 = v416;
        long long v453 = v417;
        long long v454 = v418;
        long long v455 = v419;
        char v459 = v423;
        long long v451 = v415;
        sub_1854C0ED0(v251 * 0.5);
        long long v465 = v456;
        long long v466 = v457;
        long long v467 = v458;
        char v468 = v459;
        long long v461 = v452;
        long long v462 = v453;
        long long v463 = v454;
        long long v464 = v455;
        long long v460 = v451;
        sub_1854C0F14((uint64_t)&v460, (uint64_t)v359, (uint64_t)&v442);
        sub_1854C0ED0(v278);
        long long v456 = v447;
        long long v457 = v448;
        long long v458 = v449;
        char v459 = v450;
        long long v452 = v443;
        long long v453 = v444;
        long long v454 = v445;
        long long v455 = v446;
        long long v451 = v442;
        sub_1854C0F14((uint64_t)&v415, (uint64_t)&v451, (uint64_t)v283);
        double v221 = exp(-(v210 * v278));
        sub_1854C0ED0(v221);
        long long v438 = v420;
        long long v439 = v421;
        long long v440 = v422;
        long long v434 = v416;
        long long v435 = v417;
        long long v436 = v418;
        long long v437 = v419;
        char v441 = v423;
        long long v433 = v415;
        sub_1854C0ED0(v210);
        long long v447 = v438;
        long long v448 = v439;
        long long v449 = v440;
        char v450 = v441;
        long long v443 = v434;
        long long v444 = v435;
        long long v445 = v436;
        long long v446 = v437;
        long long v442 = v433;
        sub_1854C0F14((uint64_t)&v442, (uint64_t)v359, (uint64_t)&v388);
        sub_1854C0ED0(v221);
        long long v429 = v420;
        long long v430 = v421;
        long long v431 = v422;
        long long v425 = v416;
        long long v426 = v417;
        long long v427 = v418;
        long long v428 = v419;
        char v432 = v423;
        long long v424 = v415;
        sub_1854C0ED0(v210);
        long long v438 = v429;
        long long v439 = v430;
        long long v440 = v431;
        char v441 = v432;
        long long v434 = v425;
        long long v435 = v426;
        long long v436 = v427;
        long long v437 = v428;
        long long v433 = v424;
        sub_1854C0F14((uint64_t)&v433, (uint64_t)v359, (uint64_t)&v397);
        sub_1854C0ED0(v278);
        long long v429 = v402;
        long long v430 = v403;
        long long v431 = v404;
        char v432 = v405;
        long long v425 = v398;
        long long v426 = v399;
        long long v427 = v400;
        long long v428 = v401;
        long long v424 = v397;
        sub_1854C0F14((uint64_t)&v415, (uint64_t)&v424, (uint64_t)&v406);
        sub_1854C0ED0(-v210);
        long long v384 = v411;
        long long v385 = v412;
        long long v386 = v413;
        char v387 = v414;
        long long v380 = v407;
        long long v381 = v408;
        long long v382 = v409;
        long long v383 = v410;
        long long v379 = v406;
        sub_1854C0ED0(v221);
        long long v402 = v393;
        long long v403 = v394;
        long long v404 = v395;
        char v405 = v396;
        long long v398 = v389;
        long long v399 = v390;
        long long v400 = v391;
        long long v401 = v392;
        long long v397 = v388;
        long long v411 = v384;
        long long v412 = v385;
        long long v413 = v386;
        char v414 = v387;
        long long v407 = v380;
        long long v408 = v381;
        long long v409 = v382;
        long long v410 = v383;
        long long v406 = v379;
        long long v219 = &v397;
        float64x2_t v220 = &v406;
        goto LABEL_75;
      }
      double v216 = sqrt(v210 * v210 - v209 * v209);
      double v217 = cosh(v216 * v278);
      long long v438 = v420;
      long long v439 = v421;
      long long v440 = v422;
      long long v434 = v416;
      long long v435 = v417;
      long long v436 = v418;
      long long v437 = v419;
      char v441 = v423;
      long long v433 = v415;
      sub_1854C0ED0(v217);
      long long v447 = v420;
      long long v448 = v421;
      long long v449 = v422;
      long long v443 = v416;
      long long v444 = v417;
      long long v445 = v418;
      long long v446 = v419;
      char v450 = v423;
      long long v442 = v415;
      sub_1854C0ED0(v210);
      long long v465 = v447;
      long long v466 = v448;
      long long v467 = v449;
      char v468 = v450;
      long long v461 = v443;
      long long v462 = v444;
      long long v463 = v445;
      long long v464 = v446;
      long long v460 = v442;
      sub_1854C0F14((uint64_t)&v460, (uint64_t)v359, (uint64_t)&v451);
      sub_1854C0ED0(1.0 / v216);
      double v218 = sinh(v216 * v278);
      long long v429 = v456;
      long long v430 = v457;
      long long v431 = v458;
      char v432 = v459;
      long long v425 = v452;
      long long v426 = v453;
      long long v427 = v454;
      long long v428 = v455;
      long long v424 = v451;
      sub_1854C0ED0(v218);
      long long v447 = v438;
      long long v448 = v439;
      long long v449 = v440;
      char v450 = v441;
      long long v443 = v434;
      long long v444 = v435;
      long long v445 = v436;
      long long v446 = v437;
      long long v442 = v433;
      long long v456 = v429;
      long long v457 = v430;
      long long v458 = v431;
      char v459 = v432;
      long long v452 = v425;
      long long v453 = v426;
      long long v454 = v427;
      long long v455 = v428;
      long long v451 = v424;
      sub_1854C0F14((uint64_t)&v442, (uint64_t)&v451, (uint64_t)v283);
      double v213 = -v210;
      double v214 = exp(-(v210 * v278));
      sub_1854C0ED0(v214);
      long long v438 = v420;
      long long v439 = v421;
      long long v440 = v422;
      long long v434 = v416;
      long long v435 = v417;
      long long v436 = v418;
      long long v437 = v419;
      char v441 = v423;
      long long v433 = v415;
      sub_1854C0ED0(v218);
      long long v402 = v438;
      long long v403 = v439;
      long long v404 = v440;
      char v405 = v441;
      long long v398 = v434;
      long long v399 = v435;
      long long v400 = v436;
      long long v401 = v437;
      long long v397 = v433;
      sub_1854C0ED0(v216);
      long long v429 = v420;
      long long v430 = v421;
      long long v431 = v422;
      long long v425 = v416;
      long long v426 = v417;
      long long v427 = v418;
      long long v428 = v419;
      char v432 = v423;
      long long v424 = v415;
      sub_1854C0ED0(v210);
      long long v438 = v429;
      long long v439 = v430;
      long long v440 = v431;
      char v441 = v432;
      long long v434 = v425;
      long long v435 = v426;
      long long v436 = v427;
      long long v437 = v428;
      long long v433 = v424;
      sub_1854C0F14((uint64_t)&v433, (uint64_t)v359, (uint64_t)&v406);
      sub_1854C0ED0(1.0 / v216);
      long long v429 = v411;
      long long v430 = v412;
      long long v431 = v413;
      char v432 = v414;
      long long v425 = v407;
      long long v426 = v408;
      long long v427 = v409;
      long long v428 = v410;
      long long v424 = v406;
      sub_1854C0ED0(v217);
      long long v393 = v429;
      long long v394 = v430;
      long long v395 = v431;
      char v396 = v432;
      long long v389 = v425;
      long long v390 = v426;
      long long v391 = v427;
      long long v392 = v428;
      long long v388 = v424;
      sub_1854C0ED0(v216);
      long long v411 = v402;
      long long v412 = v403;
      long long v413 = v404;
      char v414 = v405;
      long long v407 = v398;
      long long v408 = v399;
      long long v409 = v400;
      long long v410 = v401;
      long long v406 = v397;
      long long v429 = v393;
      long long v430 = v394;
      long long v431 = v395;
      char v432 = v396;
      long long v425 = v389;
      long long v426 = v390;
      long long v427 = v391;
      long long v428 = v392;
      long long v424 = v388;
      sub_1854C0F14((uint64_t)&v406, (uint64_t)&v424, (uint64_t)v281);
      sub_1854C0ED0(v214);
      long long v366 = v420;
      long long v367 = v421;
      long long v368 = v422;
      long long v362 = v416;
      long long v363 = v417;
      long long v364 = v418;
      long long v365 = v419;
      char v369 = v423;
      long long v361 = v415;
      sub_1854C0ED0(v217);
      long long v384 = v420;
      long long v385 = v421;
      long long v386 = v422;
      long long v380 = v416;
      long long v381 = v417;
      long long v382 = v418;
      long long v383 = v419;
      char v387 = v423;
      long long v379 = v415;
      sub_1854C0ED0(v210);
      long long v402 = v384;
      long long v403 = v385;
      long long v404 = v386;
      char v405 = v387;
      long long v398 = v380;
      long long v399 = v381;
      long long v400 = v382;
      long long v401 = v383;
      long long v397 = v379;
      sub_1854C0F14((uint64_t)&v397, (uint64_t)v359, (uint64_t)&v388);
      sub_1854C0ED0(1.0 / v216);
      long long v346 = v393;
      long long v347 = v394;
      long long v348 = v395;
      char v349 = v396;
      long long v342 = v389;
      long long v343 = v390;
      long long v344 = v391;
      long long v345 = v392;
      long long v341 = v388;
      double v215 = v218;
    }
    else
    {
      double v211 = sqrt(v209 * v209 - v210 * v210);
      __double2 v212 = __sincos_stret(v211 * v278);
      long long v438 = v420;
      long long v439 = v421;
      long long v440 = v422;
      long long v434 = v416;
      long long v435 = v417;
      long long v436 = v418;
      long long v437 = v419;
      char v441 = v423;
      long long v433 = v415;
      sub_1854C0ED0(v212.__cosval);
      long long v447 = v420;
      long long v448 = v421;
      long long v449 = v422;
      long long v443 = v416;
      long long v444 = v417;
      long long v445 = v418;
      long long v446 = v419;
      char v450 = v423;
      long long v442 = v415;
      sub_1854C0ED0(v210);
      long long v465 = v447;
      long long v466 = v448;
      long long v467 = v449;
      char v468 = v450;
      long long v461 = v443;
      long long v462 = v444;
      long long v463 = v445;
      long long v464 = v446;
      long long v460 = v442;
      sub_1854C0F14((uint64_t)&v460, (uint64_t)v359, (uint64_t)&v451);
      sub_1854C0ED0(1.0 / v211);
      long long v429 = v456;
      long long v430 = v457;
      long long v431 = v458;
      char v432 = v459;
      long long v425 = v452;
      long long v426 = v453;
      long long v427 = v454;
      long long v428 = v455;
      long long v424 = v451;
      sub_1854C0ED0(v212.__sinval);
      long long v447 = v438;
      long long v448 = v439;
      long long v449 = v440;
      char v450 = v441;
      long long v443 = v434;
      long long v444 = v435;
      long long v445 = v436;
      long long v446 = v437;
      long long v442 = v433;
      long long v456 = v429;
      long long v457 = v430;
      long long v458 = v431;
      char v459 = v432;
      long long v452 = v425;
      long long v453 = v426;
      long long v454 = v427;
      long long v455 = v428;
      long long v451 = v424;
      sub_1854C0F14((uint64_t)&v442, (uint64_t)&v451, (uint64_t)v283);
      double v213 = -v210;
      double v214 = exp(-(v210 * v278));
      sub_1854C0ED0(v214);
      long long v438 = v420;
      long long v439 = v421;
      long long v440 = v422;
      long long v434 = v416;
      long long v435 = v417;
      long long v436 = v418;
      long long v437 = v419;
      char v441 = v423;
      long long v433 = v415;
      sub_1854C0ED0(-v212.__sinval);
      long long v402 = v438;
      long long v403 = v439;
      long long v404 = v440;
      char v405 = v441;
      long long v398 = v434;
      long long v399 = v435;
      long long v400 = v436;
      long long v401 = v437;
      long long v397 = v433;
      sub_1854C0ED0(v211);
      long long v429 = v420;
      long long v430 = v421;
      long long v431 = v422;
      long long v425 = v416;
      long long v426 = v417;
      long long v427 = v418;
      long long v428 = v419;
      char v432 = v423;
      long long v424 = v415;
      sub_1854C0ED0(v210);
      long long v438 = v429;
      long long v439 = v430;
      long long v440 = v431;
      char v441 = v432;
      long long v434 = v425;
      long long v435 = v426;
      long long v436 = v427;
      long long v437 = v428;
      long long v433 = v424;
      sub_1854C0F14((uint64_t)&v433, (uint64_t)v359, (uint64_t)&v406);
      sub_1854C0ED0(1.0 / v211);
      long long v429 = v411;
      long long v430 = v412;
      long long v431 = v413;
      char v432 = v414;
      long long v425 = v407;
      long long v426 = v408;
      long long v427 = v409;
      long long v428 = v410;
      long long v424 = v406;
      sub_1854C0ED0(v212.__cosval);
      long long v393 = v429;
      long long v394 = v430;
      long long v395 = v431;
      char v396 = v432;
      long long v389 = v425;
      long long v390 = v426;
      long long v391 = v427;
      long long v392 = v428;
      long long v388 = v424;
      sub_1854C0ED0(v211);
      long long v411 = v402;
      long long v412 = v403;
      long long v413 = v404;
      char v414 = v405;
      long long v407 = v398;
      long long v408 = v399;
      long long v409 = v400;
      long long v410 = v401;
      long long v406 = v397;
      long long v429 = v393;
      long long v430 = v394;
      long long v431 = v395;
      char v432 = v396;
      long long v425 = v389;
      long long v426 = v390;
      long long v427 = v391;
      long long v428 = v392;
      long long v424 = v388;
      sub_1854C0F14((uint64_t)&v406, (uint64_t)&v424, (uint64_t)v281);
      sub_1854C0ED0(v214);
      long long v366 = v420;
      long long v367 = v421;
      long long v368 = v422;
      long long v362 = v416;
      long long v363 = v417;
      long long v364 = v418;
      long long v365 = v419;
      char v369 = v423;
      long long v361 = v415;
      sub_1854C0ED0(v212.__cosval);
      long long v384 = v420;
      long long v385 = v421;
      long long v386 = v422;
      long long v380 = v416;
      long long v381 = v417;
      long long v382 = v418;
      long long v383 = v419;
      char v387 = v423;
      long long v379 = v415;
      sub_1854C0ED0(v210);
      long long v402 = v384;
      long long v403 = v385;
      long long v404 = v386;
      char v405 = v387;
      long long v398 = v380;
      long long v399 = v381;
      long long v400 = v382;
      long long v401 = v383;
      long long v397 = v379;
      sub_1854C0F14((uint64_t)&v397, (uint64_t)v359, (uint64_t)&v388);
      sub_1854C0ED0(1.0 / v211);
      long long v346 = v393;
      long long v347 = v394;
      long long v348 = v395;
      char v349 = v396;
      long long v342 = v389;
      long long v343 = v390;
      long long v344 = v391;
      long long v345 = v392;
      long long v341 = v388;
      double v215 = v212.__sinval;
    }
    sub_1854C0ED0(v215);
    long long v384 = v366;
    long long v385 = v367;
    long long v386 = v368;
    char v387 = v369;
    long long v380 = v362;
    long long v381 = v363;
    long long v382 = v364;
    long long v383 = v365;
    long long v379 = v361;
    long long v393 = v346;
    long long v394 = v347;
    long long v395 = v348;
    char v396 = v349;
    long long v389 = v342;
    long long v390 = v343;
    long long v391 = v344;
    long long v392 = v345;
    long long v388 = v341;
    sub_1854C0F14((uint64_t)&v379, (uint64_t)&v388, (uint64_t)&v370);
    sub_1854C0ED0(v213);
    long long v346 = v375;
    long long v347 = v376;
    long long v348 = v377;
    char v349 = v378;
    long long v342 = v371;
    long long v343 = v372;
    long long v344 = v373;
    long long v345 = v374;
    long long v341 = v370;
    sub_1854C0ED0(v214);
    long long v375 = v346;
    long long v376 = v347;
    long long v377 = v348;
    long long v371 = v342;
    long long v372 = v343;
    long long v373 = v344;
    long long v374 = v345;
    long long v370 = v341;
    long long v366 = v281[5];
    long long v367 = v281[6];
    long long v368 = v281[7];
    long long v362 = v281[1];
    long long v363 = v281[2];
    long long v364 = v281[3];
    long long v365 = v281[4];
    char v378 = v349;
    char v369 = v282;
    long long v361 = v281[0];
    long long v219 = &v361;
    float64x2_t v220 = &v370;
LABEL_75:
    sub_1854C0F14((uint64_t)v219, (uint64_t)v220, (uint64_t)v279);
    long long v346 = v283[5];
    long long v347 = v283[6];
    long long v348 = v283[7];
    long long v342 = v283[1];
    long long v343 = v283[2];
    long long v344 = v283[3];
    long long v345 = v283[4];
    char v349 = v284;
    long long v341 = v283[0];
    sub_1854C0F14((uint64_t)&v341, (uint64_t)&v350, (uint64_t)&v294);
    long long v291 = v279[6];
    long long v292 = v279[7];
    char v293 = v280;
    long long v287 = v279[2];
    long long v288 = v279[3];
    long long v289 = v279[4];
    long long v290 = v279[5];
    long long v285 = v279[0];
    long long v286 = v279[1];
    goto LABEL_76;
  }
  long long v291 = v336;
  long long v292 = v337;
  char v293 = v338;
  long long v287 = v332;
  long long v288 = v333;
  long long v289 = v334;
  long long v290 = v335;
  long long v285 = v330;
  long long v286 = v331;
  long long v300 = v327;
  long long v301 = v328;
  char v302 = v329;
  long long v296 = v323;
  long long v297 = v324;
  long long v298 = v325;
  long long v299 = v326;
  long long v294 = v321;
  long long v295 = v322;
LABEL_76:
  long long v222 = v299;
  long long v224 = v300;
  long long v223 = v301;
  *(_OWORD *)(v108 + 96) = v300;
  *(_OWORD *)(v108 + 112) = v223;
  long long v225 = v295;
  long long v227 = v296;
  long long v226 = v297;
  *(_OWORD *)(v108 + 32) = v296;
  *(_OWORD *)(v108 + 48) = v226;
  long long v228 = v297;
  long long v230 = v298;
  long long v229 = v299;
  *(_OWORD *)(v108 + 64) = v298;
  *(_OWORD *)(v108 + 80) = v229;
  long long v231 = v295;
  long long v232 = v294;
  *(_OWORD *)uint64_t v108 = v294;
  *(_OWORD *)(v108 + 16) = v231;
  long long v233 = v292;
  *(_OWORD *)(v180 + 96) = v291;
  *(_OWORD *)(v180 + 112) = v233;
  long long v234 = v288;
  *(_OWORD *)(v180 + 32) = v287;
  *(_OWORD *)(v180 + 48) = v234;
  long long v235 = v290;
  *(_OWORD *)(v180 + 64) = v289;
  *(_OWORD *)(v180 + 80) = v235;
  long long v236 = v286;
  *(_OWORD *)uint64_t v180 = v285;
  *(_OWORD *)(v180 + 16) = v236;
  long long v237 = v357;
  *(_OWORD *)(v179 + 96) = v356;
  *(_OWORD *)(v179 + 112) = v237;
  long long v238 = v353;
  *(_OWORD *)(v179 + 32) = v352;
  *(_OWORD *)(v179 + 48) = v238;
  long long v239 = v355;
  *(_OWORD *)(v179 + 64) = v354;
  *(_OWORD *)(v179 + 80) = v239;
  long long v240 = v351;
  *(_OWORD *)uint64_t v179 = v350;
  *(_OWORD *)(v179 + 16) = v240;
  long long v241 = v310;
  v99[6] = v309;
  v99[7] = v241;
  long long v242 = v306;
  v99[2] = v305;
  v99[3] = v242;
  long long v243 = v308;
  v99[4] = v307;
  v99[5] = v243;
  long long v244 = v304;
  *long long v99 = v303;
  v99[1] = v244;
  long long v245 = v301;
  *(_OWORD *)(v5 + 96) = v224;
  *(_OWORD *)(v5 + 112) = v245;
  *(_OWORD *)(v5 + 32) = v227;
  *(_OWORD *)(v5 + 48) = v228;
  *(_OWORD *)(v5 + 64) = v230;
  *(_OWORD *)(v5 + 80) = v222;
  *(unsigned char *)(v108 + 128) = v302;
  *(unsigned char *)(v180 + 128) = v293;
  *(unsigned char *)(v179 + 128) = v358;
  *((unsigned char *)v99 + 128) = v311;
  *(unsigned char *)(v5 + 128) = v302;
  *(_OWORD *)uint64_t v5 = v232;
  *(_OWORD *)(v5 + 16) = v225;
}

float64x2_t sub_1854C0ED0(double a1)
{
  float64x2_t v2 = vmulq_n_f64(v1[1], a1);
  *uint64_t v1 = vmulq_n_f64(*v1, a1);
  v1[1] = v2;
  float64x2_t v3 = vmulq_n_f64(v1[3], a1);
  v1[2] = vmulq_n_f64(v1[2], a1);
  v1[3] = v3;
  float64x2_t v4 = vmulq_n_f64(v1[5], a1);
  v1[4] = vmulq_n_f64(v1[4], a1);
  v1[5] = v4;
  float64x2_t v5 = vmulq_n_f64(v1[6], a1);
  float64x2_t result = vmulq_n_f64(v1[7], a1);
  v1[6] = v5;
  v1[7] = result;
  return result;
}

uint64_t sub_1854C0F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v37 = *(double *)a1;
  double v34 = *(double *)(a1 + 8);
  double v32 = *(double *)a2;
  double v29 = *(double *)(a2 + 8);
  double v36 = *(double *)(a1 + 16);
  double v31 = *(double *)(a1 + 24);
  double v38 = *(double *)(a1 + 40);
  double v39 = *(double *)(a1 + 32);
  double v28 = *(double *)(a2 + 16);
  double v26 = *(double *)(a2 + 24);
  double v35 = *(double *)(a2 + 32);
  double v33 = *(double *)(a2 + 40);
  double v30 = *(double *)(a1 + 48);
  double v27 = *(double *)(a1 + 56);
  double v23 = *(double *)(a2 + 56);
  double v24 = *(double *)(a2 + 48);
  double v25 = *(double *)(a1 + 80);
  double v4 = *(double *)(a1 + 96);
  double v19 = *(double *)(a2 + 64);
  double v20 = *(double *)(a1 + 72);
  double v17 = *(double *)(a2 + 72);
  double v18 = *(double *)(a1 + 88);
  double v21 = *(double *)(a2 + 80);
  double v22 = *(double *)(a1 + 64);
  double v5 = *(double *)(a2 + 96);
  double v16 = *(double *)(a2 + 88);
  double v6 = *(double *)(a1 + 104);
  double v7 = *(double *)(a1 + 112);
  double v8 = *(double *)(a1 + 120);
  double v9 = *(double *)(a2 + 104);
  double v10 = *(double *)(a2 + 112);
  double v11 = *(double *)(a2 + 120);
  int v12 = *(unsigned __int8 *)(a1 + 128);
  int v13 = *(unsigned __int8 *)(a2 + 128);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE08);
  char v15 = 2;
  if (v12 == 2) {
    goto LABEL_7;
  }
  if (v13 == 2) {
    goto LABEL_7;
  }
  char v15 = 1;
  if (v12 == 1 || v13 == 1) {
    goto LABEL_7;
  }
  if (!v12)
  {
    char v15 = 0;
LABEL_7:
    *(double *)a3 = v37 + v32;
    *(double *)(a3 + 8) = v34 + v29;
    *(double *)(a3 + 16) = v36 + v28;
    *(double *)(a3 + 24) = v31 + v26;
    *(double *)(a3 + 32) = v39 + v35;
    *(double *)(a3 + 40) = v38 + v33;
    *(double *)(a3 + 48) = v30 + v24;
    *(double *)(a3 + 56) = v27 + v23;
    *(double *)(a3 + 64) = v22 + v19;
    *(double *)(a3 + 72) = v20 + v17;
    *(double *)(a3 + 80) = v25 + v21;
    *(double *)(a3 + 88) = v18 + v16;
    *(double *)(a3 + 96) = v4 + v5;
    *(double *)(a3 + 104) = v6 + v9;
    *(double *)(a3 + 112) = v7 + v10;
    *(double *)(a3 + 120) = v8 + v11;
    *(unsigned char *)(a3 + 128) = v15;
    return result;
  }
  uint64_t result = sub_186A1F84C();
  __break(1u);
  return result;
}

double sub_1854C1124(unsigned __int8 a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  int v11 = a1;
  double v12 = a2 - a5;
  if (a1 - 1 < 3)
  {
    __double2 v13 = __sincos_stret(a2 - a5);
    double v14 = atan2(v13.__sinval, v13.__cosval);
    if (v11 == 2 && v14 > 0.0) {
      double v14 = v14 + -6.28318531;
    }
    if (v11 == 3 && v14 < 0.0) {
      double v12 = v14 + 6.28318531;
    }
    else {
      double v12 = v14;
    }
    __double2 v15 = __sincos_stret(a3 - a6);
    atan2(v15.__sinval, v15.__cosval);
    __double2 v16 = __sincos_stret(a4 - a7);
    atan2(v16.__sinval, v16.__cosval);
  }
  return v12;
}

uint64_t sub_1854C1254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v37 = *(double *)a1;
  double v34 = *(double *)(a1 + 8);
  double v32 = *(double *)a2;
  double v29 = *(double *)(a2 + 8);
  double v36 = *(double *)(a1 + 16);
  double v31 = *(double *)(a1 + 24);
  double v38 = *(double *)(a1 + 40);
  double v39 = *(double *)(a1 + 32);
  double v28 = *(double *)(a2 + 16);
  double v26 = *(double *)(a2 + 24);
  double v35 = *(double *)(a2 + 32);
  double v33 = *(double *)(a2 + 40);
  double v30 = *(double *)(a1 + 48);
  double v27 = *(double *)(a1 + 56);
  double v23 = *(double *)(a2 + 56);
  double v24 = *(double *)(a2 + 48);
  double v25 = *(double *)(a1 + 80);
  double v4 = *(double *)(a1 + 96);
  double v19 = *(double *)(a2 + 64);
  double v20 = *(double *)(a1 + 72);
  double v17 = *(double *)(a2 + 72);
  double v18 = *(double *)(a1 + 88);
  double v21 = *(double *)(a2 + 80);
  double v22 = *(double *)(a1 + 64);
  double v5 = *(double *)(a2 + 96);
  double v16 = *(double *)(a2 + 88);
  double v6 = *(double *)(a1 + 104);
  double v7 = *(double *)(a1 + 112);
  double v8 = *(double *)(a1 + 120);
  double v9 = *(double *)(a2 + 104);
  double v10 = *(double *)(a2 + 112);
  double v11 = *(double *)(a2 + 120);
  int v12 = *(unsigned __int8 *)(a1 + 128);
  int v13 = *(unsigned __int8 *)(a2 + 128);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFE08);
  char v15 = 2;
  if (v12 == 2) {
    goto LABEL_7;
  }
  if (v13 == 2) {
    goto LABEL_7;
  }
  char v15 = 1;
  if (v12 == 1 || v13 == 1) {
    goto LABEL_7;
  }
  if (!v12)
  {
    char v15 = 0;
LABEL_7:
    *(double *)a3 = v37 - v32;
    *(double *)(a3 + 8) = v34 - v29;
    *(double *)(a3 + 16) = v36 - v28;
    *(double *)(a3 + 24) = v31 - v26;
    *(double *)(a3 + 32) = v39 - v35;
    *(double *)(a3 + 40) = v38 - v33;
    *(double *)(a3 + 48) = v30 - v24;
    *(double *)(a3 + 56) = v27 - v23;
    *(double *)(a3 + 64) = v22 - v19;
    *(double *)(a3 + 72) = v20 - v17;
    *(double *)(a3 + 80) = v25 - v21;
    *(double *)(a3 + 88) = v18 - v16;
    *(double *)(a3 + 96) = v4 - v5;
    *(double *)(a3 + 104) = v6 - v9;
    *(double *)(a3 + 112) = v7 - v10;
    *(double *)(a3 + 120) = v8 - v11;
    *(unsigned char *)(a3 + 128) = v15;
    return result;
  }
  uint64_t result = sub_186A1F84C();
  __break(1u);
  return result;
}

uint64_t sub_1854C1464(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]) & 1;
}

uint64_t sub_1854C14A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = a6 + 16;
  UIAnimationDragCoefficient();
  v25[0] = 0;
  signpost_c2_removePresentationModifier_end(v15, v16);
  double v17 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v17);
  signpost_c2_removePresentationModifier_end(v18, v19);
  swift_beginAccess();
  sub_1853B7020(a2 + 24, (uint64_t)v24, &qword_1E8FAFDE0);
  sub_1854C15BC((uint64_t)v24, a2, a1, (uint64_t)v25, a3, a4, a5, v14, a7, a8, a9, a10);
  sub_1853B93B8((uint64_t)v24, &qword_1E8FAFDE0);
  os_unfair_lock_unlock(v17);
  return v25[0];
}

uint64_t sub_1854C15BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  double v12 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  double v17 = v12;
  uint64_t v19 = v18;
  double v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = 0;
  double v27 = (void *)&unk_1E8FB0000;
  if ((*(unsigned char *)(v25 + 1000) & 1) == 0 && (v23 & 1) == 0)
  {
    uint64_t v28 = v19();
    double v27 = &unk_1E8FB0000;
    if ((v28 & 1) == 0)
    {
      signpost_c2_removePresentationModifier_end(v28, v29);
      swift_beginAccess();
      sub_1854BCA98((uint64_t)&v95, v17);
      uint64_t v32 = swift_endAccess();
      v93[6] = v101;
      v93[7] = v102;
      char v94 = v103;
      v93[2] = v97;
      v93[3] = v98;
      v93[5] = v100;
      v93[4] = v99;
      v93[1] = v96;
      v93[0] = v95;
      MEMORY[0x1F4188790](v32);
      uint64_t v34 = (uint64_t)&v33[4];
      double v35 = v33 + 71;
      os_unfair_lock_lock(v33 + 71);
      sub_1854C1ED0(v34);
      os_unfair_lock_unlock(v35);
      signpost_c2_removePresentationModifier_end(v36, v37);
      sub_1853B7020(v25 + 24, (uint64_t)v93, &qword_1E8FAFDE0);
      sub_1853B7020((uint64_t)v93, (uint64_t)v92, &qword_1E8FAFDE0);
      switch(v92[953])
      {
        case 1:
          memcpy(v104, v92, 0x229uLL);
          BOOL v38 = sub_18594BE6C();
          goto LABEL_12;
        case 2:
          memcpy(v63, v92, 0x1D0uLL);
          char v39 = BYTE1(v63[28]);
          sub_1853B93B8((uint64_t)v63, &qword_1E8FB2DF0);
          goto LABEL_14;
        case 3:
          sub_1853B93B8((uint64_t)v93, &qword_1E8FAFDE0);
          goto LABEL_17;
        default:
          memcpy(v104, v92, sizeof(v104));
          BOOL v38 = sub_1854BD064();
LABEL_12:
          char v39 = v38;
LABEL_14:
          sub_1853B93B8((uint64_t)v93, &qword_1E8FAFDE0);
          if (v39)
          {
LABEL_17:
            sub_1853B7020(v25 + 24, (uint64_t)v63, &qword_1E8FAFDE0);
            sub_1853B7020((uint64_t)v63, (uint64_t)v60, &qword_1E8FAFDE0);
            switch(v62)
            {
              case 1:
                char v42 = v61;
                double v43 = (_OWORD *)((char *)&v60[26] + 8);
                goto LABEL_20;
              case 2:
                memcpy(v59, v60, sizeof(v59));
                long long v80 = v59[26];
                long long v81 = v59[27];
                char v82 = v59[28];
                long long v76 = v59[22];
                long long v77 = v59[23];
                long long v79 = v59[25];
                long long v78 = v59[24];
                long long v75 = v59[21];
                long long v74 = v59[20];
                sub_1853B93B8((uint64_t)v59, &qword_1E8FB2DF0);
                goto LABEL_24;
              case 3:
                long long v80 = v60[6];
                long long v81 = v60[7];
                char v82 = v60[8];
                long long v76 = v60[2];
                long long v77 = v60[3];
                long long v79 = v60[5];
                long long v78 = v60[4];
                long long v48 = v60[0];
                long long v47 = v60[1];
                goto LABEL_23;
              default:
                char v42 = BYTE8(v60[25]);
                double v43 = (_OWORD *)((char *)&v60[17] + 8);
LABEL_20:
                char v82 = v42;
                long long v44 = v43[7];
                long long v80 = v43[6];
                long long v81 = v44;
                long long v45 = v43[3];
                long long v76 = v43[2];
                long long v77 = v45;
                long long v46 = v43[4];
                long long v79 = v43[5];
                long long v78 = v46;
                long long v48 = *v43;
                long long v47 = v43[1];
LABEL_23:
                long long v75 = v47;
                long long v74 = v48;
LABEL_24:
                uint64_t v41 = v14;
                sub_1853B93B8((uint64_t)v63, &qword_1E8FAFDE0);
                long long v89 = v80;
                long long v90 = v81;
                long long v85 = v76;
                long long v86 = v77;
                long long v88 = v79;
                long long v87 = v78;
                long long v84 = v75;
                long long v83 = v74;
                v63[6] = v80;
                v63[7] = v81;
                v63[2] = v76;
                v63[3] = v77;
                char v91 = v82;
                LOBYTE(v63[8]) = v82;
                v63[5] = v79;
                v63[4] = v78;
                v63[1] = v75;
                v63[0] = v74;
                char v40 = 1;
                memset(v59, 0, 129);
                break;
            }
          }
          else
          {
            long long v89 = v101;
            long long v90 = v102;
            long long v85 = v97;
            long long v86 = v98;
            long long v88 = v100;
            long long v87 = v99;
            long long v84 = v96;
            long long v83 = v95;
            v63[6] = v101;
            v63[7] = v102;
            v63[2] = v97;
            v63[3] = v98;
            v63[5] = v100;
            v63[4] = v99;
            char v91 = v103;
            LOBYTE(v63[8]) = v103;
            v63[1] = v96;
            v63[0] = v95;
            sub_1854C1F14((uint64_t)v59);
            char v40 = 0;
            uint64_t v41 = v14;
          }
          *double v21 = v40;
          swift_beginAccess();
          sub_1853B8150(v41, (uint64_t)v73, &qword_1E8FAFE30);
          sub_1853B8150((uint64_t)v73, (uint64_t)&v74, &qword_1E8FAFE30);
          if (sub_1854C1EBC((uint64_t)&v74) == 1) {
            goto LABEL_27;
          }
          sub_1853B8150((uint64_t)v73, (uint64_t)&v64, &qword_1E8FAFE30);
          v60[6] = v70;
          v60[7] = v71;
          LOBYTE(v60[8]) = v72;
          v60[2] = v66;
          v60[3] = v67;
          v60[4] = v68;
          v60[5] = v69;
          v60[0] = v64;
          v60[1] = v65;
          if (!sub_1854C1DA8((uint64_t)v60, (uint64_t)v63))
          {
LABEL_27:
            if (qword_1E8FB0100 != -1) {
              swift_once();
            }
            uint64_t v50 = swift_allocObject();
            long long v51 = v59[7];
            *(_OWORD *)(v50 + 264) = v59[6];
            *(_OWORD *)(v50 + 280) = v51;
            long long v52 = v63[7];
            *(_OWORD *)(v50 + 128) = v63[6];
            *(_OWORD *)(v50 + 144) = v52;
            long long v53 = v63[3];
            *(_OWORD *)(v50 + 64) = v63[2];
            *(_OWORD *)(v50 + 80) = v53;
            long long v54 = v63[5];
            *(_OWORD *)(v50 + 96) = v63[4];
            *(_OWORD *)(v50 + 112) = v54;
            long long v55 = v63[1];
            *(_OWORD *)(v50 + 32) = v63[0];
            *(_OWORD *)(v50 + 48) = v55;
            long long v56 = v59[4];
            *(_OWORD *)(v50 + 248) = v59[5];
            long long v57 = v59[0];
            *(_OWORD *)(v50 + 184) = v59[1];
            long long v58 = v59[3];
            *(_OWORD *)(v50 + 200) = v59[2];
            *(_OWORD *)(v50 + 216) = v58;
            *(_OWORD *)(v50 + 232) = v56;
            *(void *)(v50 + 16) = a9;
            *(void *)(v50 + 24) = a10;
            *(unsigned char *)(v50 + 160) = v63[8];
            *(unsigned char *)(v50 + 296) = v59[8];
            *(_OWORD *)(v50 + 168) = v57;
            swift_retain();
            sub_1853B65C4((uint64_t)sub_1853C054C, v50);
            swift_release();
          }
          long long v70 = v89;
          long long v71 = v90;
          char v72 = v91;
          long long v66 = v85;
          long long v67 = v86;
          long long v69 = v88;
          long long v68 = v87;
          long long v65 = v84;
          long long v64 = v83;
          signpost_c2_removePresentationModifier_end(&v64, v49);
          swift_beginAccess();
          sub_1853B8150((uint64_t)&v64, v41, &qword_1E8FAFE30);
          double v27 = (void *)&unk_1E8FB0000;
          if ((*v21 & 1) == 0) {
            return swift_release();
          }
          goto LABEL_5;
      }
    }
  }
  *double v21 = 1;
  *(unsigned char *)(v26 + 16) = 1;
LABEL_5:
  if (v27[32] != -1) {
    swift_once();
  }
  double v30 = (void *)swift_allocObject();
  _OWORD v30[2] = v25;
  v30[3] = a11;
  v30[4] = a12;
  v30[5] = v16;
  v30[6] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1853B65C4((uint64_t)sub_1853C4AC4, (uint64_t)v30);
  swift_release();
  return swift_release();
}

BOOL sub_1854C1DA8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  BOOL v2 = *(double *)(a1 + 8) == *(double *)(a2 + 8) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
  if (!v2 || *(double *)(a1 + 24) != *(double *)(a2 + 24)) {
    return 0;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32) || *(double *)(a1 + 40) != *(double *)(a2 + 40)) {
    return 0;
  }
  uint64_t v5 = 0;
  if (*(double *)(a1 + 48) == *(double *)(a2 + 48)
    && *(double *)(a1 + 56) == *(double *)(a2 + 56)
    && *(double *)(a1 + 64) == *(double *)(a2 + 64))
  {
    uint64_t v5 = 0;
    if (*(double *)(a1 + 72) == *(double *)(a2 + 72)
      && *(double *)(a1 + 80) == *(double *)(a2 + 80)
      && *(double *)(a1 + 88) == *(double *)(a2 + 88))
    {
      uint64_t v5 = 0;
      if (*(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104)
        && *(double *)(a1 + 112) == *(double *)(a2 + 112)
        && *(double *)(a1 + 120) == *(double *)(a2 + 120))
      {
        return *(unsigned __int8 *)(a1 + 128) == *(unsigned __int8 *)(a2 + 128);
      }
    }
  }
  return v5;
}

uint64_t sub_1854C1EBC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 128);
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

__n128 sub_1854C1ED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)v2;
  long long v3 = *(_OWORD *)(v2 + 16);
  long long v4 = *(_OWORD *)(v2 + 32);
  long long v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a1 + 184) = v5;
  *(_OWORD *)(a1 + 168) = v4;
  *(_OWORD *)(a1 + 152) = v3;
  __n128 result = *(__n128 *)(v2 + 80);
  long long v7 = *(_OWORD *)(v2 + 96);
  long long v8 = *(_OWORD *)(v2 + 112);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(v2 + 128);
  *(_OWORD *)(a1 + 248) = v8;
  *(_OWORD *)(a1 + 232) = v7;
  *(__n128 *)(a1 + 216) = result;
  return result;
}

uint64_t sub_1854C1F14@<X0>(uint64_t a1@<X8>)
{
  void (*v14)(void *__return_ptr, unsigned char *, void *, uint64_t, uint64_t, void, void, double);
  uint64_t v15;
  uint64_t v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  _OWORD v34[8];
  char v35;
  void v36[17];
  _OWORD __dst[29];
  void v38[17];
  unsigned char v39[136];
  _OWORD __src[34];
  char v41;
  char v42;
  _OWORD v43[8];
  char v44;
  _OWORD v45[8];
  char v46;

  swift_beginAccess();
  sub_1853B7020(v1 + 24, (uint64_t)__src, &qword_1E8FAFDE0);
  long long v3 = 0uLL;
  char v4 = 0;
  long long v5 = 0uLL;
  long long v6 = 0uLL;
  long long v7 = 0uLL;
  long long v8 = 0uLL;
  long long v9 = 0uLL;
  long long v10 = 0uLL;
  long long v11 = 0uLL;
  switch(v42)
  {
    case 1:
      break;
    case 2:
      memcpy(__dst, __src, sizeof(__dst));
      long long v12 = __dst[2];
      __swift_project_boxed_opaque_existential_0Tm((void *)__dst + 1, *(uint64_t *)&__dst[2]);
      v43[6] = __dst[26];
      v43[7] = __dst[27];
      long long v44 = __dst[28];
      v43[2] = __dst[22];
      _OWORD v43[3] = __dst[23];
      void v43[5] = __dst[25];
      _OWORD v43[4] = __dst[24];
      v43[1] = __dst[21];
      v43[0] = __dst[20];
      v45[6] = __dst[9];
      v45[7] = __dst[10];
      long long v46 = __dst[11];
      v45[2] = __dst[5];
      v45[3] = __dst[6];
      v45[4] = __dst[7];
      v45[5] = __dst[8];
      v45[0] = __dst[3];
      v45[1] = __dst[4];
      sub_1854C1254((uint64_t)v43, (uint64_t)v45, (uint64_t)v39);
      double v13 = *(double *)__dst;
      v38[0] = *((void *)&__dst[28] + 1);
      uint64_t v14 = *(void (**)(void *__return_ptr, unsigned char *, void *, uint64_t, uint64_t, void, void, double))(*((void *)&v12 + 1) + 32);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB2D50);
      uint64_t v16 = sub_1854B2C88(&qword_1E8FB2D58, &qword_1E8FB2D50);
      v14(v36, v39, v38, v15, v16, v12, *((void *)&v12 + 1), v13);
      sub_1853B8150((uint64_t)v36, (uint64_t)v38, &qword_1E8FB2D60);
      sub_1853B8150((uint64_t)v38, (uint64_t)v39, &qword_1E8FB2D60);
      if (sub_1854C1EBC((uint64_t)v39) == 1)
      {
        char v4 = 0;
        double v17 = 0uLL;
        uint64_t v18 = 0uLL;
        uint64_t v19 = 0uLL;
        double v20 = 0uLL;
        double v21 = 0uLL;
        char v22 = 0uLL;
        char v23 = 0uLL;
        uint64_t v24 = 0uLL;
      }
      else
      {
        sub_1853B8150((uint64_t)v38, (uint64_t)v34, &qword_1E8FB2D60);
        double v17 = v34[0];
        uint64_t v18 = v34[1];
        uint64_t v19 = v34[2];
        double v20 = v34[3];
        double v21 = v34[4];
        char v22 = v34[5];
        char v23 = v34[6];
        uint64_t v24 = v34[7];
        char v4 = v35;
      }
      uint64_t v26 = v24;
      double v27 = v23;
      uint64_t v28 = v22;
      uint64_t v29 = v21;
      double v30 = v20;
      double v31 = v19;
      uint64_t v32 = v18;
      double v33 = v17;
      sub_1853B93B8((uint64_t)__dst, &qword_1E8FB2DF0);
      long long v11 = v26;
      long long v10 = v27;
      long long v9 = v28;
      long long v8 = v29;
      long long v7 = v30;
      long long v6 = v31;
      long long v5 = v32;
      long long v3 = v33;
      break;
    case 3:
      long long v3 = *(_OWORD *)((char *)&__src[8] + 8);
      long long v5 = *(_OWORD *)((char *)&__src[9] + 8);
      long long v6 = *(_OWORD *)((char *)&__src[10] + 8);
      long long v7 = *(_OWORD *)((char *)&__src[11] + 8);
      long long v8 = *(_OWORD *)((char *)&__src[12] + 8);
      long long v9 = *(_OWORD *)((char *)&__src[13] + 8);
      long long v10 = *(_OWORD *)((char *)&__src[14] + 8);
      long long v11 = *(_OWORD *)((char *)&__src[15] + 8);
      char v4 = BYTE8(__src[16]);
      break;
    default:
      long long v3 = __src[26];
      long long v5 = __src[27];
      long long v6 = __src[28];
      long long v7 = __src[29];
      long long v8 = __src[30];
      long long v9 = __src[31];
      long long v10 = __src[32];
      long long v11 = __src[33];
      char v4 = v41;
      break;
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v11;
  *(unsigned char *)(a1 + 128) = v4;
  return swift_endAccess();
}

double sub_1854C2214(unsigned __int8 a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  int v14 = a1;
  double v15 = a2 - a6;
  if (a1 - 1 < 3)
  {
    __double2 v16 = __sincos_stret(a2 - a6);
    double v17 = atan2(v16.__sinval, v16.__cosval);
    if (v14 == 2 && v17 > 0.0) {
      double v17 = v17 + -6.28318531;
    }
    if (v14 == 3 && v17 < 0.0) {
      double v15 = v17 + 6.28318531;
    }
    else {
      double v15 = v17;
    }
    __double2 v18 = __sincos_stret(a3 - a7);
    atan2(v18.__sinval, v18.__cosval);
    __double2 v19 = __sincos_stret(a4 - a8);
    atan2(v19.__sinval, v19.__cosval);
    __double2 v20 = __sincos_stret(a5 - a9);
    atan2(v20.__sinval, v20.__cosval);
  }
  return v15;
}

double sub_1854C2394(uint64_t a1, unsigned __int8 a2)
{
  sub_1854B5EC0(a1, (uint64_t)v33);
  char v5 = v34;
  if (v34 < 0)
  {
    char v10 = BYTE1(v34);
    v34 &= ~0x8000000000000000;
    char v6 = v10;
    double v8 = v36;
    double v7 = v37;
    if ((((v5 & 1) == 0) & a2) != 0) {
      double v9 = 0.0;
    }
    else {
      double v9 = v35;
    }
  }
  else
  {
    char v6 = 0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  double v11 = 6.28318531 / v9 * (6.28318531 / v9);
  double v12 = sqrt(v11);
  *(double *)(v2 + 56) = v11;
  *(double *)(v2 + 64) = v12 + v12;
  *(unsigned char *)(v2 + 265) = v9 == 0.0;
  double v13 = 0.0;
  if ((a2 & 1) == 0) {
    double v13 = v8;
  }
  if (v6) {
    double v14 = v8;
  }
  else {
    double v14 = v13;
  }
  double v15 = 6.28318531 / v14 * (6.28318531 / v14);
  double v16 = sqrt(v15);
  *(double *)(v2 + 88) = v15;
  *(double *)(v2 + 96) = v16 + v16;
  *(unsigned char *)(v2 + 266) = v14 == 0.0;
  double v17 = 6.28318531 / v7 * (6.28318531 / v7);
  double v18 = sqrt(v17);
  *(double *)(v2 + 248) = v17;
  *(double *)(v2 + 256) = v18 + v18;
  *(unsigned char *)(v2 + 267) = v7 == 0.0;
  sub_1854B5EC0(a1, (uint64_t)&v28);
  __int16 v19 = v30;
  double v20 = v28;
  if ((v30 & 0x8000000000000000) == 0)
  {
    double v21 = v29;
    *(double *)(v2 + 32) = v28;
    *(double *)(v2 + 40) = v21;
    if (v9 != 0.0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  double v23 = v29;
  uint64_t v25 = v31;
  uint64_t v24 = v32;
  double v26 = 6.28318531 / v29 * (6.28318531 / v29);
  double v27 = sqrt(v26);
  double v21 = v28 * (v27 + v27);
  *(double *)(v2 + 32) = v26;
  *(double *)(v2 + 40) = v21;
  *(double *)(v2 + 48) = v20;
  *(double *)(v2 + 80) = v23;
  if (v19) {
    *(void *)uint64_t v2 = v25;
  }
  if ((v19 & 0x100) != 0) {
    *(void *)(v2 + 16) = v24;
  }
  double v20 = v26;
  if (v9 == 0.0)
  {
LABEL_13:
    *(void *)uint64_t v2 = *(void *)(v2 + 48);
    *(void *)(v2 + 8) = 0;
  }
LABEL_14:
  if (v14 == 0.0)
  {
    *(void *)(v2 + 16) = *(void *)(v2 + 80);
    *(void *)(v2 + 24) = 0;
  }
  double result = v21 / v20;
  *(double *)(v2 + 272) = result;
  return result;
}

uint64_t sub_1854C253C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_12;
  }
  if (a4)
  {
    sub_1859C38BC();
  }
  else
  {
    if (v9 > v8)
    {
      double result = (uint64_t)sub_1859C8364();
      goto LABEL_12;
    }
    sub_1854C8AD0();
  }
  uint64_t v10 = *v4;
  sub_186A1F9EC();
  sub_186A1F9FC();
  double result = sub_186A1FA4C();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (*(void *)(*(void *)(v10 + 48) + 16 * a3) != v7)
    {
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_12;
      }
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  double v14 = (uint64_t *)(*(void *)(v13 + 48) + 16 * a3);
  *double v14 = v7;
  v14[1] = a2;
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v13 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_15:
  double result = sub_186A1F92C();
  __break(1u);
  return result;
}

void sub_1854C268C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1854C26BC(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void **)(v4 + 48), *(void **)(v4 + 56));
}

void sub_1854C26BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  if (!a5)
  {
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(a5, sel_valueForKeyPath_, v15);

  if (v16)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }
  sub_1853B8150((uint64_t)&v32, (uint64_t)v40, &qword_1EB256B10);
  char v17 = sub_1853B7020((uint64_t)v40, (uint64_t)&v32, &qword_1EB256B10);
  if (*((void *)&v33 + 1))
  {
    sub_1853B7BB0(&v32, v31);
    if (!a7)
    {
LABEL_28:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    char v17 = sub_1854C3530(a6, a7);
    if (v17 == 13)
    {
      uint64_t v39 = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    if (!a9)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (a7) {
      goto LABEL_14;
    }
    __break(1u);
  }
  double v18 = sub_1854ABD04(v17);
  uint64_t v20 = v19;
  sub_1853B76BC((uint64_t)v31, (uint64_t)v30);
  double v21 = *(void (**)(unsigned char *, ValueMetadata *, uint64_t))(v20 + 56);
  *((void *)&v38 + 1) = v18;
  uint64_t v39 = v20;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v37);
  v21(v30, v18, v20);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
  if (!a9) {
    goto LABEL_27;
  }
LABEL_14:
  char v22 = (uint64_t *)(a8 + OBJC_IVAR____TtC5UIKit32PropertyCollectingAnimationState_capturedProperties);
  swift_beginAccess();
  uint64_t v23 = *v22;
  if (!*(void *)(*v22 + 16))
  {
    long long v32 = 0uLL;
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 1;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    swift_bridgeObjectRetain();
    id v27 = a9;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  id v24 = a9;
  unint64_t v25 = sub_1854B74B4((uint64_t)v24, a6, a7);
  if ((v26 & 1) == 0)
  {
    long long v32 = 0uLL;
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 1;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    goto LABEL_20;
  }
  sub_1854B15E0(*(void *)(v23 + 56) + 80 * v25, (uint64_t)&v32);
  if (*((void *)&v33 + 1) == 1)
  {
LABEL_20:
    sub_1853B7020((uint64_t)&v32, (uint64_t)v31, (uint64_t *)&unk_1E8FAFBF0);
    sub_1853B7020((uint64_t)v31, (uint64_t)v30, (uint64_t *)&unk_1E8FAFBF0);
    sub_1854C4534((uint64_t)v30, a9, a6, a7);
    sub_1853B93B8((uint64_t)v31, (uint64_t *)&unk_1E8FAFBF0);
    goto LABEL_21;
  }
  sub_1854C4894((uint64_t)&v37, (uint64_t)&v34 + 8);
  sub_1853B7020((uint64_t)&v32, (uint64_t)v31, (uint64_t *)&unk_1E8FAFBF0);
  sub_1854C4534((uint64_t)v31, v24, a6, a7);
LABEL_21:
  sub_1853B93B8((uint64_t)&v32, (uint64_t *)&unk_1E8FAFBF0);
  swift_endAccess();
  if (a10)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    double v28 = (void *)sub_186A1E92C();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
    uint64_t v29 = sub_186A1F11C();
    if (a4) {
      a4 = (void *)sub_186A1E78C();
    }
    objc_msgSend(a10, sel_runActionForKey_object_arguments_, v28, v29, a4);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  sub_1853B93B8((uint64_t)&v37, &qword_1E8FAFBE0);
  sub_1853B93B8((uint64_t)v40, &qword_1EB256B10);
}

uint64_t sub_1854C2AA0(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!a3)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char v5 = v4;
  unint64_t v9 = (void *)result;
  if (qword_1E8FAFFF8 != -1) {
    swift_once();
  }
  double result = sub_1854C33F8(a2, a3, qword_1E8FB0008);
  if ((result & 1) == 0) {
    return 0;
  }
  if (!a4) {
    goto LABEL_19;
  }
  if (!sub_1853B7BC0())
  {
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _s13AnimationInfoCMa();
    swift_allocObject();
    id v11 = a4;
    uint64_t v12 = sub_1854AE0CC(v11, (uint64_t)sub_1854AA548, v10);
    -[UIView set__swiftAnimationInfo:]((uint64_t)v11, v12);
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1854C4634((uint64_t *)&v32, a2, a3);
  swift_endAccess();
  swift_release();
  double result = swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v13 = (void *)sub_186A1E92C();
    id v14 = objc_msgSend(v9, sel_valueForKeyPath_, v13);

    if (v14)
    {
      sub_186A1F1CC();
      swift_unknownObjectRelease();
      sub_1853B7BB0(&aBlock, v46);
      swift_bridgeObjectRetain();
      char v15 = sub_1854C3530(a2, a3);
      if (v15 != 13)
      {
        char v17 = sub_1854ABD04(v15);
        uint64_t v19 = v18;
        sub_1853B76BC((uint64_t)v46, (uint64_t)&v32);
        uint64_t v20 = *(void (**)(long long *, ValueMetadata *, uint64_t))(v19 + 56);
        *((void *)&v41 + 1) = v17;
        *(void *)&long long v42 = v19;
        __swift_allocate_boxed_opaque_existential_0((uint64_t *)&aBlock);
        v20(&v32, v17, v19);
        sub_1854B1F20(&aBlock, (uint64_t)v45);
        sub_1854B1F38((uint64_t)v45, (uint64_t)v39);
        uint64_t v38 = 0;
        memset(v37, 0, sizeof(v37));
        long long v35 = 0u;
        long long v36 = 0u;
        long long v33 = 0u;
        long long v34 = 0u;
        long long v32 = 0u;
        id v21 = a4;
        swift_bridgeObjectRetain();
        sub_1856A97C0((uint64_t)v39, (uint64_t)&v32, &qword_1E8FAFBE0);
        sub_1856A97C0((uint64_t)v37, (uint64_t)&v34 + 8, &qword_1E8FAFBE0);
        long long v42 = v34;
        long long v43 = v35;
        long long v44 = v36;
        long long aBlock = v32;
        long long v41 = v33;
        swift_beginAccess();
        sub_1853B7020((uint64_t)&aBlock, (uint64_t)&v32, (uint64_t *)&unk_1E8FAFBF0);
        sub_1854C4534((uint64_t)&v32, v21, a2, a3);
        sub_1853B93B8((uint64_t)&aBlock, (uint64_t *)&unk_1E8FAFBF0);
        swift_endAccess();
        id v22 = objc_msgSend(v5, sel_nextState);
        if (v22)
        {
          uint64_t v23 = v22;
          id v24 = (void *)sub_186A1E92C();
          id v25 = objc_msgSend(v23, sel_actionForLayer_forKey_forView_, v9, v24, v21);
        }
        else
        {
          id v25 = 0;
        }
        char v26 = (void *)swift_allocObject();
        v26[2] = v9;
        _OWORD v26[3] = a2;
        void v26[4] = a3;
        v26[5] = v5;
        v26[6] = a4;
        v26[7] = v25;
        id v27 = objc_allocWithZone((Class)UIViewBlockBasedCAAction);
        *(void *)&long long v42 = sub_1854C268C;
        *((void *)&v42 + 1) = v26;
        *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v41 = sub_1854AB960;
        *((void *)&v41 + 1) = &block_descriptor_18;
        double v28 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        id v29 = v21;
        swift_bridgeObjectRetain();
        id v30 = v5;
        id v31 = v9;
        swift_release();
        id v16 = objc_msgSend(v27, sel_initWithActionBlock_, v28);
        _Block_release(v28);
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
        return (uint64_t)v16;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
    }
    return 0;
  }
LABEL_20:
  __break(1u);
  return result;
}

id sub_1854C3000(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (!a1) {
    return 0;
  }
  if (!a3) {
    return 0;
  }
  char v6 = v4;
  if (!a4) {
    return 0;
  }
  uint64_t v9 = qword_1E8FAFFF8;
  id v10 = a1;
  id v11 = a4;
  if (v9 != -1) {
    swift_once();
  }
  if ((sub_1854C33F8(a2, a3, qword_1E8FB0008) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v12 = sub_1853B7BC0();
  if (v12)
  {
    uint64_t v13 = v12;
    swift_beginAccess();
    uint64_t v14 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    swift_release();
    LOBYTE(v13) = sub_1854C33F8(a2, a3, v14);
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  char v15 = sub_1854C3530(a2, a3);
  if (v15 == 13)
  {
LABEL_10:

    return 0;
  }
  char v18 = v15;
  uint64_t v19 = (void *)sub_186A1E92C();
  id v20 = objc_msgSend(v10, sel_valueForKeyPath_, v19);

  if (v20)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1853B7BB0(&aBlock, v36);
  }
  else
  {
    id v21 = sub_1854ABD04(v18);
    uint64_t v23 = v22;
    long long v32 = v21;
    long long v33 = v22;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&aBlock);
    sub_186A1F66C();
    (*((void (**)(_OWORD *__return_ptr, ValueMetadata *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))v23
     + 9))(v36, v21, v23);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  }
  sub_1853B76BC((uint64_t)v36, (uint64_t)v35);
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = v18;
  *(void *)(v24 + 24) = v6;
  *(void *)(v24 + 32) = v10;
  *(void *)(v24 + 40) = v11;
  sub_1853B7BB0(v35, (_OWORD *)(v24 + 48));
  id v25 = objc_allocWithZone((Class)UIViewBlockBasedCAAction);
  long long v33 = sub_1854ABA60;
  uint64_t v34 = v24;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  id v31 = sub_1854AB960;
  long long v32 = (ValueMetadata *)&block_descriptor_760;
  char v26 = _Block_copy(&aBlock);
  id v27 = v10;
  id v28 = v11;
  id v29 = v6;
  swift_release();
  id v16 = objc_msgSend(v25, sel_initWithActionBlock_, v26);
  _Block_release(v26);

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  return v16;
}

uint64_t sub_1854C33F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_186A1F9EC();
    sub_186A1E9BC();
    uint64_t v6 = sub_186A1FA4C();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      id v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_186A1F85C() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          id v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_186A1F85C() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1854C3530(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x8000000186B9E920
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000021 && a2 == 0x8000000186B9E950
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000023 && a2 == 0x8000000186B9E980
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000020 && a2 == 0x8000000186B9E9B0
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000025 && a2 == 0x8000000186B9EA10
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000020 && a2 == 0x8000000186B9EA40
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000001FLL && a2 == 0x8000000186B9EA70
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000001CLL && a2 == 0x8000000186B9EA90
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x7974696361706FLL && a2 == 0xE700000000000000
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x704F776F64616873 && a2 == 0xED00007974696361
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x656C616373 && a2 == 0xE500000000000000
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6F697469736F507ALL && a2 == 0xE90000000000006ELL
    || (sub_186A1F85C() & 1) != 0
    || a1 == 1836019578 && a2 == 0xE400000000000000
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6E6F697469736F70 && a2 == 0xEA0000000000782ELL
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6E6F697469736F70 && a2 == 0xEA0000000000792ELL
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6F2E73646E756F62 && a2 == 0xEF782E6E69676972
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6F2E73646E756F62 && a2 == 0xEF792E6E69676972
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000011 && a2 == 0x8000000186BA02C0
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD000000000000012 && a2 == 0x8000000186BA02E0
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x6957726564726F62 && a2 == 0xEB00000000687464
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0x664F726564726F62 && a2 == 0xEC00000074657366
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000001BLL && a2 == 0x8000000186B9EAB0
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EAD0
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EB00
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EB30
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EB60
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EB90
    || (sub_186A1F85C() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186B9EBC0
    || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 {
         || (sub_186A1F85C() & 1) != 0
  }
         || a1 == 0x6152776F64616873 && a2 == 0xEC00000073756964
         || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x664F776F64616873 && a2 == 0xEC00000074657366 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F50726F68636E61 && a2 == 0xEB00000000746E69 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL {
         || (sub_186A1F85C() & 1) != 0
  }
         || a1 == 0x6F43726564726F62 && a2 == 0xEB00000000726F6CLL
         || (sub_186A1F85C() & 1) != 0
         || a1 == 0x6F43776F64616873 && a2 == 0xEB00000000726F6CLL
         || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xEE007265746E6543 {
         || (sub_186A1F85C() & 1) != 0
  }
         || a1 == 0x73746E65746E6F63 && a2 == 0xEC00000074636552
         || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xE90000000000006DLL {
         || (sub_186A1F85C() & 1) != 0
  }
         || a1 == 0xD000000000000011 && a2 == 0x8000000186B9E8E0
         || (sub_186A1F85C() & 1) != 0
         || a1 == 0xD000000000000011 && a2 == 0x8000000186B9E900
         || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000186B9E9E0 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6172546873656DLL && a2 == 0xED00006D726F6673 || (sub_186A1F85C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEB00000000696964)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v5 = sub_186A1F85C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1854C4534(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a1 + 24) == 1)
  {
    sub_1853B93B8(a1, (uint64_t *)&unk_1E8FAFBF0);
    sub_185A020A0((uint64_t)a2, a3, a4, (uint64_t)v13);
    swift_bridgeObjectRelease();

    return sub_1853B93B8((uint64_t)v13, (uint64_t *)&unk_1E8FAFBF0);
  }
  else
  {
    long long v9 = *(_OWORD *)(a1 + 48);
    _OWORD v13[2] = *(_OWORD *)(a1 + 32);
    v13[3] = v9;
    v13[4] = *(_OWORD *)(a1 + 64);
    long long v10 = *(_OWORD *)(a1 + 16);
    v13[0] = *(_OWORD *)a1;
    v13[1] = v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1854B7348(v13, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v12;
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1854C4634(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_186A1F9EC();
  swift_bridgeObjectRetain();
  sub_186A1E9BC();
  uint64_t v8 = sub_186A1FA4C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_186A1F85C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_186A1F85C() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *long long v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1854C8E04(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *long long v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1854C47E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s15PropertyChangesV4InfoVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t sub_1854C4894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFBE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1854C52D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1854C54D8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t))
{
  swift_unknownObjectRetain();
  uint64_t v6 = a1;
  sub_186A1F1CC();
  swift_unknownObjectRelease();
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8];
  uint64_t ObjectType = swift_getObjectType();
  sub_1853B76BC((uint64_t)v10, (uint64_t)v9);
  a4(v9, ObjectType, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
}

uint64_t sub_1854C5584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = &v11[-v7];
  sub_1853B76BC(a1, (uint64_t)v11);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(a3 + 96))(v8, a2, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1854C56B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1853B76BC(a1, (uint64_t)v8);
  sub_1854F6C7C();
  swift_dynamicCast();
  objc_msgSend(v7, sel_doubleValue);
  uint64_t v5 = v4;

  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm(a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1854C5748(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 80);
  MEMORY[0x1F4188790](*(void *)(v3 - 8));
  uint64_t v6 = (char *)v24 - v5;
  char v8 = *((unsigned char *)v1 + *(void *)(v7 + 176));
  v24[0] = v4;
  if (v8)
  {
    uint64_t v9 = (void *)*MEMORY[0x1E4F1C3B8];
    v24[1] = 0;
    float64x2_t v24[2] = 0xE000000000000000;
    id v10 = v9;
    sub_186A1F38C();
    sub_186A1FBDC();
    sub_186A1E9FC();
    swift_bridgeObjectRelease();
    sub_186A1E9FC();
    id v11 = objc_allocWithZone(MEMORY[0x1E4F1CA00]);
    uint64_t v12 = (void *)sub_186A1E92C();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v11, sel_initWithName_reason_userInfo_, v10, v12, 0);

    objc_msgSend(v13, sel_raise);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v24[0] + 8);
    return v14(a1, v3);
  }
  else
  {
    uint64_t v16 = v1[3];
    MEMORY[0x1F4188790](v4);
    uint64_t v18 = *(void *)(v17 + 88);
    v24[-4] = v3;
    v24[-3] = v18;
    v24[-2] = a1;
    type metadata accessor for UIAnimatableProperty.ProtectedState();
    uint64_t v19 = v16 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v16 + 16);
    id v20 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v20);
    sub_1854C5AAC(v19, (uint64_t)v6);
    os_unfair_lock_unlock(v20);
    uint64_t v21 = sub_185A560CC();
    if (v21)
    {
      id v22 = v21;
      sub_1854C5D5C((uint64_t)v21);
    }
    if ((sub_1854C5B68((uint64_t)v6) & 1) == 0) {
      sub_1854C6078();
    }
    uint64_t v23 = *(void (**)(char *, uint64_t))(v24[0] + 8);
    v24[0] += 8;
    v23(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(a1, v3);
  }
}

uint64_t sub_1854C5AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, v5, v4);
}

uint64_t sub_1854C5B68(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  sub_1854F6F94((uint64_t)v7);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v4;
  uint64_t v10 = *(void *)(v3 + 88);
  v9[3] = v10;
  v9[4] = v8;
  id v11 = (void *)swift_allocObject();
  v11[2] = v4;
  v11[3] = v10;
  void v11[4] = v8;
  swift_retain_n();
  char v12 = sub_1854B0888(a1, (uint64_t)v7, (uint64_t)sub_1853B6778, 0, (uint64_t)sub_1853C10B0, (uint64_t)v9, (uint64_t)sub_1854AA5E0, (uint64_t)v11);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return v12 & 1;
}

uint64_t sub_1854C5D5C(uint64_t a1)
{
  uint64_t v11 = a1;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1853C3CA8;
  *(void *)(v4 + 24) = &v10;
  uint64_t v16 = sub_1853BE6D4;
  uint64_t v17 = v4;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_1853BE46C;
  uint64_t v15 = &block_descriptor_21_0;
  uint64_t v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v16 = sub_1856A9AE8;
  uint64_t v17 = v2;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_1856A95EC;
  uint64_t v15 = &block_descriptor_24_0;
  uint64_t v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 2560, 0, v5, 0, v6, 0.0, 0.0, 0);
  _Block_release(v6);
  _Block_release(v5);
  swift_beginAccess();
  if (*(void *)(v2 + 16))
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1854AFFDC(MEMORY[0x1E4FBC860]);
  }
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v9 + 6);
    sub_1854C6040();
    os_unfair_lock_unlock(v9 + 6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1854C6040()
{
  return sub_1854B0140(*(void *)(v0 + 16), 0);
}

void sub_1854C6078()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for UIAnimatableProperty.ProtectedState();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1854C6150(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1854C6150(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = type metadata accessor for UIAnimatableProperty.ProtectedState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 24))(a1 + *(int *)(v5 + 36), v4, v3);
}

uint64_t type metadata accessor for BridgedProperty()
{
  return self;
}

double _UIScrollViewRubberBandCoefficient(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      int v1 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257A08, @"SmallTrackpadRubberBandingCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      double result = *(double *)&qword_1EB257A10;
      BOOL v3 = v1 == 0;
      double v4 = 0.715;
      break;
    case 2:
      uint64_t v6 = (int *)&unk_1EB257A18;
      uint64_t v7 = @"LargeTrackpadRubberBandingCoefficient";
      goto LABEL_7;
    case 3:
      int v8 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257A28, @"ContinuousMouseRubberBandingCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      double result = *(double *)&qword_1EB257A30;
      BOOL v3 = v8 == 0;
      double v4 = 0.4;
      break;
    case 4:
      uint64_t v6 = (int *)&unk_1EB257A38;
      uint64_t v7 = @"DiscreteHighResolutionMouseRubberBandingCoefficient";
LABEL_7:
      int v9 = _UIInternalPreferenceUsesDefault(v6, (uint64_t)v7, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      double result = *((double *)v6 + 1);
      BOOL v3 = v9 == 0;
      double v4 = 0.17;
      break;
    case 5:
      int v10 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257A48, @"DiscreteLowResolutionMouseRubberBandingCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      double result = *(double *)&qword_1EB257A50;
      BOOL v3 = v10 == 0;
      double v4 = 0.5;
      break;
    default:
      int v5 = _UIInternalPreferenceUsesDefault((int *)&unk_1EB257A58, @"TouchRubberBandingCoefficient", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      double result = *(double *)&qword_1EB257A60;
      BOOL v3 = v5 == 0;
      double v4 = 0.55;
      break;
  }
  if (!v3) {
    return v4;
  }
  return result;
}

uint64_t sub_1854C8AD0()
{
  int v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB0088);
  uint64_t result = sub_186A1F32C();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *int v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    long long v25 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v14);
    sub_186A1F9EC();
    sub_186A1F9FC();
    uint64_t result = sub_186A1FA4C();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v11 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v12 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v12) = v25;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_unknownObjectRetain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    int v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

double sub_1854C8D68@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 3;
  return result;
}

uint64_t static UITraitDefinition.identifier.getter()
{
  return 0;
}

uint64_t sub_1854C8E04(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1859C3B70();
  }
  else
  {
    if (v10 > v9)
    {
      double result = (uint64_t)sub_1859C8514();
      goto LABEL_22;
    }
    sub_1854C8FA0();
  }
  uint64_t v11 = *v4;
  sub_186A1F9EC();
  sub_186A1E9BC();
  double result = sub_186A1FA4C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (double result = sub_186A1F85C(), (result & 1) != 0))
    {
LABEL_21:
      double result = sub_186A1F92C();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          double result = sub_186A1F85C();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1854C8FA0()
{
  int v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB0018);
  uint64_t v3 = sub_186A1F32C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *int v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_186A1F9EC();
    swift_bridgeObjectRetain();
    sub_186A1E9BC();
    uint64_t result = sub_186A1FA4C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    int v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1854C94C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a5;
  uint64_t v14[4] = a6;
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  double v15 = *(double *)(a1 + 8);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  long long v32 = sub_1853B59D0;
  long long v33 = (void *)v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  id v30 = sub_1853BE46C;
  id v31 = &block_descriptor_184;
  unint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  sub_1854B0A60(a5);
  swift_retain();
  swift_release();
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(a1 + 16);
  long long v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 72) = v20;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 88) = *(void *)(a1 + 64);
  *(_OWORD *)(v18 + 24) = v19;
  *(unsigned char *)(v18 + 96) = a2;
  *(void *)(v18 + 104) = a7;
  *(void *)(v18 + 112) = a8;
  long long v32 = (uint64_t (*)())sub_1856AADC8;
  long long v33 = (void *)v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  id v30 = sub_1856A95EC;
  id v31 = &block_descriptor_190;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  sub_1854C97D8(a1);
  swift_retain();
  swift_release();
  long long v32 = sub_185441ACC;
  long long v33 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  id v30 = sub_18544192C;
  id v31 = &block_descriptor_193;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v17, 0, v21, v15, 0.0, v22);
  swift_release();
  _Block_release(v22);
  _Block_release(v21);
  _Block_release(v17);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1854C97D8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 24);
  id v4 = v2;
  return a1;
}

double sub_1854C9808@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1854C984C(a1).n128_u64[0];
  return result;
}

__n128 sub_1854C984C@<Q0>(uint64_t a1@<X8>)
{
  long long v13 = *v1;
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  if (v3)
  {
    objc_msgSend(*((id *)v1 + 2), sel_doubleValue);
    uint64_t v5 = v6;
  }
  uint64_t v7 = (void *)*((void *)v1 + 3);
  if (v7)
  {
    objc_msgSend(v7, sel_doubleValue);
    uint64_t v4 = v8;
    uint64_t v9 = 256;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *((void *)v1 + 8);
  *(_OWORD *)a1 = v13;
  *(void *)(a1 + 16) = v9 | (v3 != 0) | 0x8000000000000000;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  __n128 result = (__n128)v1[2];
  long long v12 = v1[3];
  *(__n128 *)(a1 + 40) = result;
  *(_OWORD *)(a1 + 56) = v12;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

double sub_1854C9908@<D0>(uint64_t a1@<X8>)
{
  return sub_1854C9910(a1, *v1, v1[1]);
}

double sub_1854C9910@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

id sub_1854C9928(uint64_t a1)
{
  return sub_1855394F0(a1, v1[4], v1[2], v1[3]);
}

id sub_1854C9934(uint64_t a1)
{
  return sub_18553A1C4(a1, v1[5], v1[2], v1[3]);
}

BOOL UIAccessibilityShouldDifferentiateWithoutColor(void)
{
  return _AXSDifferentiateWithoutColorEnabled() != 0;
}

uint64_t _UIRectEquivalentToRectWithAccuracy(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (CGRectEqualToRect(*(CGRect *)&a1, *(CGRect *)&a5)) {
    return 1;
  }
  double v26 = a4 - a8;
  if (a4 - a8 < 0.0) {
    double v26 = -(a4 - a8);
  }
  if (v26 >= a9) {
    return 0;
  }
  double v27 = a2 - a6;
  if (a2 - a6 < 0.0) {
    double v27 = -(a2 - a6);
  }
  double v28 = a1 - a5;
  if (a1 - a5 < 0.0) {
    double v28 = -(a1 - a5);
  }
  double v29 = a3 - a7;
  if (a3 - a7 < 0.0) {
    double v29 = -(a3 - a7);
  }
  BOOL v30 = v29 < a9;
  if (v28 >= a9) {
    BOOL v30 = 0;
  }
  return v27 < a9 && v30;
}

uint64_t _insetsOfTopViewControllerScrollViewAutomaticallyAdjustedForLargeTitleView(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 _contentOrObservableScrollViewForEdge:1];
  if (v2)
  {
    char v3 = [v1 edgesForExtendedLayout];
    uint64_t v4 = v2;
    id v5 = v1;
    id v6 = v4[11];

    if (v6 == v5)
    {
      int v11 = [v4 _edgesApplyingSafeAreaInsetsToContentInset] & 1;
    }
    else
    {
      uint64_t v7 = [v4 superview];
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        while (1)
        {
          uint64_t v9 = [v5 view];

          if (v8 == v9)
          {
LABEL_8:
            int v11 = 1;
            goto LABEL_13;
          }
          if (([v8 _edgesPropagatingSafeAreaInsetsToSubviews] & 1) == 0) {
            break;
          }
          uint64_t v10 = [v8 superview];

          uint64_t v8 = (void *)v10;
          if (!v10) {
            goto LABEL_8;
          }
        }
        int v11 = 0;
LABEL_13:
      }
      else
      {
        int v11 = 1;
      }
    }

    [v5 _navigationControllerContentInsetAdjustment];
    if (v16 == 0.0) {
      unsigned int v17 = v11;
    }
    else {
      unsigned int v17 = 1;
    }
    if (v13 != 0.0) {
      unsigned int v17 = 1;
    }
    if (v15 != 0.0) {
      unsigned int v17 = 1;
    }
    if (v14 != 0.0) {
      unsigned int v17 = 1;
    }
    if (v3) {
      uint64_t v12 = v17;
    }
    else {
      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

double _UIEdgeInsetsPropagatedToChildRectIncludingOutsetOnEdges(char a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  return _UIEdgeInsetsPropagatedToChildRectOnEdgesAndIncludingOutset(a1, 1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

double _possibleTopViewsHeightBasedOnContentOffsetForScrollView(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  id v6 = v5;
  if (v5[1268]
    && ([v5 _existingView],
        uint64_t v7 = objc_claimAutoreleasedReturnValue(),
        int v8 = [v7 _usesMinimumSafeAreas],
        v7,
        v8))
  {
    uint64_t v9 = [v6 _existingView];
    [v9 _minimumSafeAreaInsets];
    double v11 = v10;
  }
  else
  {
    [v6 _contentOverlayInsets];
    double v11 = v12;
  }

  [v4 adjustedContentInset];
  if (v11 >= v13) {
    double v11 = v13;
  }
  [v4 _contentOffsetOrDeferredContentOffset];
  double v15 = -v14 - v11;
  [v6 _heightRangeOfTopViews];
  if (v15 < v16)
  {
    double v17 = v16;
    [v4 _allowedNavigationOverlapAmount];
    double v19 = v15 + v18;
    if (v15 + v18 >= v17) {
      double v19 = v17;
    }
    if (v18 > 0.0) {
      double v15 = v19;
    }
  }

  return v15;
}

double UIEdgeInsetsAverage(char a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v15 = a2;
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    double v19 = a10;
    if (a10 == 0.0)
    {
      if (AdjustToScale_onceToken_0 != -1) {
        dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
      }
      double v19 = *(double *)&AdjustToScale___s_0;
    }
    if (v19 == 1.0)
    {
      if ((a1 & 4) != 0) {
        goto LABEL_22;
      }
    }
    else if ((a1 & 4) != 0)
    {
      goto LABEL_22;
    }
LABEL_4:
    if ((a1 & 8) == 0) {
      return v15;
    }
    goto LABEL_30;
  }
  double v16 = a2 + a6;
  double v17 = a10;
  if (a10 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v17 = *(double *)&AdjustToScale___s_0;
  }
  double v18 = v16 * 0.5;
  if (v17 == 1.0)
  {
    double v15 = round(v18);
    if ((a1 & 2) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    double v15 = round(v18 * v17) / v17;
    if ((a1 & 2) != 0) {
      goto LABEL_14;
    }
  }
LABEL_3:
  if ((a1 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_22:
  double v20 = a10;
  if (a10 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v20 = *(double *)&AdjustToScale___s_0;
  }
  if (v20 == 1.0)
  {
    if ((a1 & 8) == 0) {
      return v15;
    }
  }
  else if ((a1 & 8) == 0)
  {
    return v15;
  }
LABEL_30:
  if (a10 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v15;
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers.getter(uint64_t a1)
{
  return sub_185419EBC(a1, (SEL *)&selRef_itemIdentifiers);
}

void sub_1854CE078(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1854CE380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  objc_destroyWeak((id *)(v30 - 104));
  _Unwind_Resume(a1);
}

void sub_1854CE3DC()
{
}

void sub_1854CE760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  objc_destroyWeak(v16);
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose((const void *)(v17 - 120), 8);
  objc_destroyWeak((id *)(v17 - 88));
  _Unwind_Resume(a1);
}

void sub_1854CFA30(_Unwind_Exception *a1)
{
}

void sub_1854CFE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854CFF80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1854D03BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIViewEatsTouchesAndAnimationDelegateAllowsInteraction(void *a1, int a2)
{
  id v3 = a1;
  if (_UIViewIsAnimating(v3) && ([v3 isHidden] & 1) == 0)
  {
    id v5 = [v3 layer];
    id v6 = [v5 presentationLayer];
    [v6 opacity];
    if (v7 >= 0.01) {
      uint64_t v4 = a2 ^ 1u;
    }
    else {
      uint64_t v4 = 0;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

BOOL _UIViewIsAnimating(void *a1)
{
  uint64_t v1 = [a1 layer];
  uint64_t v2 = [v1 animationKeys];
  BOOL v3 = [v2 count] != 0;

  return v3;
}

uint64_t _UIViewAnimationDelegateAllowsUserInteraction(void *a1)
{
  id v1 = a1;
  uint64_t v10 = 0;
  double v11 = &v10;
  uint64_t v12 = 0x2020000000;
  char v13 = 1;
  uint64_t v2 = [v1 layer];
  BOOL v3 = [v2 animationKeys];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  void v7[2] = ___UIViewAnimationDelegateAllowsUserInteraction_block_invoke;
  v7[3] = &unk_1E52F1AC0;
  id v4 = v1;
  id v8 = v4;
  uint64_t v9 = &v10;
  [v3 enumerateObjectsUsingBlock:v7];

  uint64_t v5 = *((unsigned __int8 *)v11 + 24);
  _Block_object_dispose(&v10, 8);

  return v5;
}

void sub_1854D05C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854D083C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _AccessoryFontForLineHeightAlignment(void *a1, unsigned char *a2)
{
  id v3 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v3 _currentImage];
LABEL_11:
    uint64_t v10 = v4;
    double v11 = _UITableCellFontForImage(v4);

    char isKindOfClass = 1;
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [v3 currentBackgroundImage];
    goto LABEL_11;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = v3;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = ___AccessoryFontForLineHeightAlignment_block_invoke;
    v15[3] = &unk_1E52D9F70;
    id v16 = v5;
    +[UIView performWithoutAnimation:v15];
    id v6 = [v5 viewForLastBaselineLayout];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass)
    {
      id v8 = [v6 _currentImage];
      uint64_t v9 = _UITableCellFontForImage(v8);
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        double v11 = 0;
        goto LABEL_25;
      }
      id v8 = v6;
      char v13 = [v8 text];
      uint64_t v14 = [v13 length];

      if (!v14)
      {
        double v11 = 0;
        goto LABEL_21;
      }
      uint64_t v9 = [v8 font];
    }
    double v11 = (void *)v9;
LABEL_21:

LABEL_25:
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    id v4 = [v3 _renderedImage];
    goto LABEL_11;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v11 = [v3 font];
    char isKindOfClass = 0;
  }
  else
  {
    char isKindOfClass = 0;
    double v11 = 0;
  }
LABEL_12:
  if (a2) {
    *a2 = isKindOfClass & (v11 != 0);
  }

  return v11;
}

BOOL _UITableCellSupportsHorizontalCenteringBehaviorForTraitCollection(void *a1)
{
  id v1 = a1;
  if (dyld_program_sdk_at_least())
  {
    uint64_t v2 = [v1 preferredContentSizeCategory];
    BOOL v3 = !UIContentSizeCategoryIsAccessibilityCategory(v2);
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void _UIGestureRecognizerCommonInit(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xFFFFFFFF1FFFFFFFLL | 0xA0000000;
  uint64_t v2 = (objc_class *)objc_opt_class();
  IMP MethodImplementation = class_getMethodImplementation(v2, sel_shouldRequireFailureOfGestureRecognizer_);
  id v4 = (objc_class *)objc_opt_class();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xFFFFFFFFFFBFFFFFLL | ((unint64_t)(MethodImplementation != class_getMethodImplementation(v4, sel_shouldRequireFailureOfGestureRecognizer_)) << 22);
  id v5 = (objc_class *)objc_opt_class();
  IMP v6 = class_getMethodImplementation(v5, sel_shouldBeRequiredToFailByGestureRecognizer_);
  float v7 = (objc_class *)objc_opt_class();
  IMP v8 = class_getMethodImplementation(v7, sel_shouldBeRequiredToFailByGestureRecognizer_);
  uint64_t v9 = *(void *)(a1 + 8);
  unint64_t v10 = v9 & 0xFFFFFFFFFE7FFFFFLL | ((unint64_t)(v6 != v8) << 23);
  uint64_t v11 = v9 & 0x400000;
  BOOL v12 = v6 == v8 && v11 == 0;
  uint64_t v13 = 0x1000000;
  if (v12) {
    uint64_t v13 = 0;
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = v10 | v13;
  uint64_t v14 = (objc_class *)objc_opt_class();
  IMP v15 = class_getMethodImplementation(v14, sel_touchesEstimatedPropertiesUpdated_);
  id v16 = (objc_class *)objc_opt_class();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xFFFFFFFFFBFFFFFFLL | ((unint64_t)(v15 != class_getMethodImplementation(v16, sel_touchesEstimatedPropertiesUpdated_)) << 26);
  uint64_t v17 = (objc_class *)objc_opt_class();
  IMP v18 = class_getMethodImplementation(v17, sel__shouldReceiveTouch_forEvent_recognizerView_);
  double v19 = (objc_class *)objc_opt_class();
  IMP v20 = class_getMethodImplementation(v19, sel__shouldReceiveTouch_forEvent_recognizerView_);
  char v21 = *(unsigned char *)(a1 + 16);
  uint64_t v22 = 0x810008000000;
  if (v18 == v20) {
    uint64_t v22 = 0x810000000000;
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = v22 | *(void *)(a1 + 8) & 0xFFFF7EFFF7FFFFFFLL;
  *(unsigned char *)(a1 + 16) = v21 | 8;
  *(void *)(a1 + 80) = -[UIGestureRecognizer _defaultAllowedTouchTypesMask](a1);
  if ([(id)objc_opt_class() _supportsDefaultPressTypes]) {
    unint64_t v23 = &unk_1ED3EFC50;
  }
  else {
    unint64_t v23 = (void *)MEMORY[0x1E4F1CBF0];
  }
  objc_storeStrong((id *)(a1 + 240), v23);
  [(id)a1 setRequiresExclusiveTouchType:1];
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0)
  {
    char v24 = objc_opt_respondsToSelector();
    uint64_t v25 = 0x200000000000;
    if ((v24 & 1) == 0) {
      uint64_t v25 = 0;
    }
  }
  else
  {
    uint64_t v25 = 0;
  }
  char v26 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xFFFFDFFFFFFFFFFFLL | v25;
  *(unsigned char *)(a1 + 16) = v26;
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0)
  {
    char v27 = objc_opt_respondsToSelector();
    uint64_t v28 = 0x800000000000000;
    if ((v27 & 1) == 0) {
      uint64_t v28 = 0;
    }
  }
  else
  {
    uint64_t v28 = 0;
  }
  char v29 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xF7FFFFFFFFFFFFFFLL | v28;
  *(unsigned char *)(a1 + 16) = v29;
  char v30 = objc_opt_respondsToSelector();
  uint64_t v31 = 0x1000000000000000;
  if ((v30 & 1) == 0) {
    uint64_t v31 = 0;
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xEFFFFFFFFFFFFFFFLL | v31;
  char v32 = objc_opt_respondsToSelector();
  uint64_t v33 = 0x2000000000000000;
  if ((v32 & 1) == 0) {
    uint64_t v33 = 0;
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xDFFFFFFFFFFFFFFFLL | v33;
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0)
  {
    char v34 = objc_opt_respondsToSelector();
    uint64_t v35 = 0x4000000000000000;
    if ((v34 & 1) == 0) {
      uint64_t v35 = 0;
    }
  }
  else
  {
    uint64_t v35 = 0;
  }
  char v36 = *(unsigned char *)(a1 + 16) & 0xDF;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x200], 8) = *(void *)(a1 + 8) & 0xBFFFFFFFFFFFFFFFLL | v35;
  *(unsigned char *)(a1 + 16) = v36 | 0x20;
  long long v37 = [(id)a1 _driver];
  if (v37)
  {
    *(unsigned char *)(a1 + 16) |= 0x40u;
    id v39 = v37;
    [v37 setDelegate:a1];
    uint64_t v38 = -[_UIGestureRecognizerDriverContextImpl initWithGestureRecognizer:]([_UIGestureRecognizerDriverContextImpl alloc], a1);
    [v39 setContext:v38];

    long long v37 = v39;
  }
}

BOOL _UIDeviceHasExternalTouchInput()
{
  if (qword_1EB260F08 != -1) {
    dispatch_once(&qword_1EB260F08, &__block_literal_global_55_1);
  }
  return qword_1EB260F00 == 2;
}

void _UIGestureRecognizerAddTargetToArray(id *a1, id a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (a2 && a3)
  {
    id v6 = *a1;
    if (!v6)
    {
      id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      objc_storeStrong(a1, v6);
    }
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v7 = v6;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v16;
      while (2)
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v15 + 1) + 8 * v11);
          if (v12)
          {
            if (*(void **)(v12 + 16) == a3)
            {
              id WeakRetained = objc_loadWeakRetained((id *)(v12 + 8));

              if (WeakRetained == a2)
              {
                uint64_t v14 = (id *)v7;
                goto LABEL_17;
              }
            }
          }
          ++v11;
        }
        while (v9 != v11);
        uint64_t v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }

    uint64_t v14 = (id *)objc_alloc_init((Class)self);
    objc_storeWeak(v14 + 1, a2);
    v14[2] = a3;
    objc_msgSend(v7, "addObject:", v14, (void)v15);
LABEL_17:
  }
}

void sub_1854D4B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

uint64_t _UIPanGestureRecognizerCommonInit(uint64_t a1)
{
  *(void *)(a1 + 320) = 0;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  BOOL v3 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = v2;

  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v5 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = v4;

  *(void *)(a1 + 32_Block_object_dispose(&STACK[0x200], 8) = 1;
  *(void *)(a1 + 336) = 0xFFFFFFFFLL;
  [(id)objc_opt_class() _defaultHysteresis];
  *(void *)(a1 + 344) = v6;
  *(void *)(a1 + 352) = 0x7FEFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 384) |= 0x10u;
  *(unsigned char *)(a1 + 384) |= 0x20u;
  *(unsigned char *)(a1 + 384) |= 0x40u;
  *(unsigned char *)(a1 + 384) |= 0x80u;
  *(unsigned char *)(a1 + 385) &= ~1u;
  *(unsigned char *)(a1 + 385) &= ~2u;
  *(unsigned char *)(a1 + 384) |= 4u;
  *(unsigned char *)(a1 + 385) &= ~8u;
  *(void *)(a1 + 376) = 0;
  *(unsigned char *)(a1 + 385) &= ~0x10u;
  uint64_t result = [(id)a1 _setRequiresSystemGesturesToFail:1];
  *(unsigned char *)(a1 + 385) &= ~0x20u;
  *(unsigned char *)(a1 + 385) &= ~0x40u;
  return result;
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _AXSInvertColorsEnabled() != 0;
}

uint64_t sub_1854D6238(uint64_t result)
{
  if ((*((unsigned char *)v1 + *(void *)(*v1 + 176)) & 1) == 0)
  {
    if (result)
    {
      id v2 = self;
      uint64_t v11 = sub_1858BA424;
      uint64_t v12 = v1;
      uint64_t v7 = MEMORY[0x1E4F143A8];
      uint64_t v8 = 1107296256;
      uint64_t v9 = sub_1856A95EC;
      uint64_t v10 = &block_descriptor_32_0;
      BOOL v3 = _Block_copy(&v7);
      swift_retain();
      swift_release();
      objc_msgSend(v2, sel__performWithoutRetargetingAnimations_, v3);
      _Block_release(v3);
    }
    id v4 = v1[2];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1858BA4AC;
    *(void *)(v5 + 24) = v1;
    uint64_t v11 = sub_1853B59A0;
    uint64_t v12 = (void *)v5;
    uint64_t v7 = MEMORY[0x1E4F143A8];
    uint64_t v8 = 1107296256;
    uint64_t v9 = sub_1853BE46C;
    uint64_t v10 = &block_descriptor_51;
    uint64_t v6 = _Block_copy(&v7);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v6);
    _Block_release(v6);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v4) {
      __break(1u);
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UIContentUnavailableConfigurationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x200], 8) = 0u;
    *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x200], 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UICollectionLayoutListConfiguration()
{
  return &type metadata for UICollectionLayoutListConfiguration;
}

void sub_1854D98A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double _UISizeClampToMinimumSizeForAxis(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if ((unint64_t)(a1 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    uint64_t v13 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v14 = objc_msgSend(NSString, "stringWithUTF8String:", "CGSize _UISizeClampToMinimumSizeForAxis(CGSize, CGSize, UIAxis)");
    [v13 handleFailureInFunction:v14, @"_UICollectionLayoutHelpers.m", 418, @"Invalid parameter not satisfying: %@", @"axis == UIAxisVertical || axis == UIAxisHorizontal" file lineNumber description];
  }
  double v10 = _UISizeValueForAxis(a1, a2, a3);
  double v11 = _UISizeValueForAxis(a1, a4, a5);
  if (v10 < v11) {
    return _UISetSizeValueForAxis(a1, a2, a3, v11);
  }
  return a2;
}

void sub_1854DB240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

id *_UIAuxillarySolveResult::queryResultForIndexAndOffset(_UIAuxillarySolveResult *this, uint64_t a2, CGPoint a3)
{
  CGRect v8 = CGRectOffset(*(CGRect *)this, a3.x, a3.y);
  uint64_t v5 = -[_UICollectionLayoutFramesQueryResult copyWithFrame:index:](*((id **)this + 5), (void *)(*((void *)this + 4) + a2), v8.origin.x, v8.origin.y, v8.size.width, v8.size.height);
  return v5;
}

double _UIRegionSolveResult::boundingFrameForIndex(_UIRegionSolveResult *this, unint64_t a2)
{
  if (a2 < *(void *)this || a2 - *(void *)this >= *((void *)this + 1))
  {
    long long v15 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v16 = [NSString stringWithUTF8String:"CGRect _UIRegionSolveResult::boundingFrameForIndex(NSInteger) const"];
    [v15 handleFailureInFunction:v16, @"_UICollectionLayoutSectionListSolver.mm", 267, @"Invalid parameter not satisfying: %@", @"NSLocationInRange(index, _range)" file lineNumber description];
  }
  CGFloat v5 = *((double *)this + 8);
  CGFloat v6 = *((double *)this + 9);
  CGFloat v7 = *((double *)this + 10);
  CGFloat v8 = *((double *)this + 11);
  v18.origin.CGFloat x = v5;
  v18.origin.CGFloat y = v6;
  v18.size.CGFloat width = v7;
  v18.size.CGFloat height = v8;
  double v9 = *((double *)this + 2) + (CGRectGetHeight(v18) + *((double *)this + 3)) * (double)(uint64_t)(a2 - *(void *)this);
  CGFloat v10 = v5;
  CGFloat v11 = v6;
  CGFloat v12 = v7;
  CGFloat v13 = v8;
  *(void *)&double result = (unint64_t)CGRectOffset(*(CGRect *)&v10, 0.0, v9);
  return result;
}

void sub_1854DB418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ___getCurrentFallbackEnvironment_block_invoke(uint64_t a1, void *a2)
{
  id v2 = (__CFString *)objc_msgSend((id)objc_msgSend(a2, "session"), "role");
  if (v2 == @"UIWindowSceneSessionRoleExternalDisplayNonInteractive"
    || v2
    && @"UIWindowSceneSessionRoleExternalDisplayNonInteractive"
    && (-[__CFString isEqual:](v2, "isEqual:") & 1) != 0)
  {
    char isKindOfClass = 0;
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  return isKindOfClass & 1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x200], 8) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 12_Block_object_dispose(&STACK[0x200], 8) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

double _UIComputedSizeForLabel(void *a1, void *a2, void *a3, unint64_t a4, uint64_t *a5, void *a6, void *a7, double a8, double a9)
{
  long long v16 = a1;
  unint64_t v17 = a2;
  unint64_t v18 = a3;
  double v19 = [v16 _stringDrawingContext];
  [v19 setMaximumNumberOfLines:a4];
  if (a5) {
    [v19 setWantsNumberOfLineFragments:1];
  }
  [v19 setWantsBaselineOffset:1];
  if (a8 < 0.0 || a9 < 0.0)
  {
    a8 = *MEMORY[0x1E4F1DB30];
    goto LABEL_59;
  }
  if (a8 == 0.0) {
    a8 = 3.40282347e38;
  }
  if (a9 == 0.0) {
    a9 = 3.40282347e38;
  }
  double v73 = [v16 _content];
  if (v17)
  {
    uint64_t v20 = [v73 contentWithString:v17];
    goto LABEL_14;
  }
  if (v18)
  {
    uint64_t v20 = [v73 contentWithAttributedString:v18];
LABEL_14:
    id v21 = v20;
    BOOL v71 = (v17 | v18) != 0;
    double v22 = *MEMORY[0x1E4F1DAD8];
    double v23 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
    char v72 = -[UILabel _synthesizedAttributedTextForContent:]((uint64_t)v16, v20);
    -[UILabel _scaledMetricsForText:inRect:]((_UILabelLegacyScaledMetrics *)v16, v72, v22, v23, a8, a9);
    char v24 = (double *)objc_claimAutoreleasedReturnValue();
    [v19 setCachesLayout:0];
    [v19 setLayout:0];
    if (!v16) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  id v21 = v73;
  double v45 = *MEMORY[0x1E4F1DAD8];
  double v46 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
  char v72 = [v16 _synthesizedAttributedText];
  if (-[UILabel _updateScaledMetricsForRect:]((uint64_t)v16, v45, v46, a8, a9)) {
    [v19 setLayout:0];
  }
  char v24 = (double *)*((id *)v16 + 76);
  BOOL v71 = 0;
  if (!v16) {
    goto LABEL_17;
  }
LABEL_15:
  if (v24 && (v16[736] & 4) != 0)
  {
    double v27 = v24[8];
    uint64_t v32 = *((void *)v24 + 5);
    uint64_t v29 = *((void *)v24 + 3);
    uint64_t v31 = *((void *)v24 + 7);
    goto LABEL_24;
  }
LABEL_17:
  if ([v21 isAttributed])
  {
    long long v70 = a6;
    if (v72)
    {
      double v25 = -[UILabel _boundingRectWithAttributedString:size:options:context:](v16, v72, [v16 _stringDrawingOptions], v19, a8, 3.40282347e38);
      double v27 = v26;
      uint64_t v68 = objc_msgSend(v19, "numberOfLineFragments", v25);
      [v19 baselineOffset];
      uint64_t v29 = v28;
      [v19 firstBaselineOffset];
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v68 = 0;
      double v27 = *MEMORY[0x1E4F1DB30];
      uint64_t v31 = 0;
      uint64_t v29 = 0;
    }
    long long v47 = [v21 paragraphStyle];
    if (dyld_program_sdk_at_least())
    {
      long long v67 = v47;
      [v47 firstLineHeadIndent];
      if (v48 <= 0.0) {
        goto LABEL_46;
      }
      if ([v19 numberOfLineFragments] != 1)
      {
        uint64_t v49 = [v72 string];
        uint64_t v50 = [MEMORY[0x1E4F28B88] newlineCharacterSet];
        long long v66 = v49;
        long long v51 = [v49 componentsSeparatedByCharactersInSet:v50];

        unint64_t v52 = [v51 count];
        long long v65 = v51;
        if ([v51 count])
        {
          long long v64 = [v51 lastObject];
          uint64_t v53 = [v64 length] == 0;

          v52 -= v53;
        }
        unint64_t v54 = 0x7FFFFFFFLL;
        if (a4) {
          unint64_t v54 = a4;
        }
        unint64_t v55 = v54 >= v52 ? v52 : v54;
        uint64_t v56 = [v19 numberOfLineFragments];

        BOOL v57 = v55 == v56;
        a6 = v70;
        if (!v57)
        {
LABEL_46:
          long long v44 = v72;
          long long v47 = v67;
          goto LABEL_47;
        }
      }
      long long v47 = v67;
      [v67 firstLineHeadIndent];
      double v59 = v27 + v58;
      if (v59 >= a8) {
        double v27 = a8;
      }
      else {
        double v27 = v59;
      }
    }
    long long v44 = v72;
LABEL_47:

    uint64_t v32 = v68;
    goto LABEL_48;
  }
  if ([v21 isNil])
  {
    uint64_t v32 = 0;
    double v27 = *MEMORY[0x1E4F1DB30];
    uint64_t v31 = 0;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v33 = [v21 string];
    id v69 = v21;
    unint64_t v34 = v18;
    uint64_t v35 = v24;
    char v36 = a6;
    uint64_t v37 = [v16 _stringDrawingOptions];
    uint64_t v38 = -[UILabel _synthesizedTextAttributes](v16);
    uint64_t v39 = v37;
    a6 = v36;
    char v24 = v35;
    unint64_t v18 = v34;
    id v21 = v69;
    [(UILabel *)v16 _boundingRectWithString:v39 size:v38 options:v19 attributes:a8 context:3.40282347e38];
    double v27 = v40;

    uint64_t v41 = [v19 numberOfLineFragments];
    [v19 baselineOffset];
    uint64_t v29 = v42;
    [v19 firstBaselineOffset];
    uint64_t v32 = v41;
    uint64_t v31 = v43;
  }
LABEL_24:
  long long v44 = v72;
LABEL_48:
  double v60 = v27 - a8;
  if (v27 - a8 < 0.0001) {
    a8 = v27;
  }
  if (a5) {
    *a5 = v32;
  }
  if (a6) {
    *a6 = v29;
  }
  if (a7) {
    *a7 = v31;
  }
  if (!v71)
  {
    uint64_t v61 = objc_msgSend(v19, "layout", v60);
    char v62 = (void *)*((void *)v16 + 75);
    *((void *)v16 + 75) = v61;
  }
LABEL_59:

  return a8;
}

double UIRectRoundToScale(double a1, double a2, double a3, double a4, double a5)
{
  double v7 = a5;
  if (a5 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v7 = *(double *)&AdjustToScale___s_0;
  }
  BOOL v8 = v7 == 1.0;
  double v9 = round(a1 * v7) / v7;
  double v10 = round(a1);
  if (v8) {
    double v11 = v10;
  }
  else {
    double v11 = v9;
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  if (a5 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v11;
}

void sub_1854E0354(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

BOOL _UILabelShouldReverseNaturalAlignment(void *a1, uint64_t a2)
{
  id v3 = a1;
  UIUserInterfaceLayoutDirection v4 = +[UIView userInterfaceLayoutDirectionForSemanticContentAttribute:a2];
  if (v4 == [(id)UIApp userInterfaceLayoutDirection])
  {
    BOOL v5 = 0;
  }
  else
  {
    long long v6 = [v3 paragraphStyle];
    BOOL v5 = [v6 alignment] == 4;
  }
  return v5;
}

UITouch *__startNewUITouch(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, void *a10, uint64_t a11)
{
  uint64_t v288 = *MEMORY[0x1E4F143B8];
  unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BD0);
  if (*(unsigned char *)CategoryCachedImpl)
  {
    uint64_t v51 = a6;
    unint64_t v52 = *(id *)(CategoryCachedImpl + 8);
    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = a7;
      _os_log_impl(&dword_1853B0000, v52, OS_LOG_TYPE_ERROR, "\t\tStarting new touch for path index: %ld", buf, 0xCu);
    }

    a6 = v51;
  }
  CGSize v272 = (CGSize)*MEMORY[0x1E4F1DB30];
  double v271 = 0.0;
  long long v269 = 0u;
  CGPoint v270 = (CGPoint)0;
  long long v268 = 0u;
  double v267 = 0.0;
  CGPoint v265 = (CGPoint)0;
  CGPoint point = (CGPoint)0;
  CGPoint v264 = (CGPoint)0;
  uint64_t v229 = a6;
  __baseTouchLocationsForChild((uint64_t)&v264, a6, a5, a3, 0, &v272.width, (uint64_t)&v268);
  *(_OWORD *)buf = v268;
  *(_OWORD *)&uint8_t buf[16] = v269;
  CGPoint v286 = v270;
  double v287 = v271;
  _LogTouchLocationsIfNeeded((uint64_t)"rawChildTouchLocations", (CGFloat *)buf);
  *(CGPoint *)buf = v264;
  *(CGPoint *)&uint8_t buf[16] = v265;
  CGPoint v286 = point;
  double v287 = v267;
  _LogTouchLocationsIfNeeded((uint64_t)"childTouchSceneLocations", (CGFloat *)buf);
  unint64_t v19 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BD8);
  if (*(unsigned char *)v19)
  {
    uint64_t v53 = *(id *)(v19 + 8);
    if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
    {
      NSStringFromCGPoint(point);
      id v54 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v54;
      _os_log_impl(&dword_1853B0000, v53, OS_LOG_TYPE_ERROR, "\t\tLooking for local hit test window at scene hitTestLocation %@ ", buf, 0xCu);
    }
  }
  unint64_t v20 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BE0);
  if (*(unsigned char *)v20)
  {
    unint64_t v55 = *(id *)(v20 + 8);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
    {
      id v56 = a3;
      if (v56)
      {
        long long v232 = NSString;
        BOOL v57 = (objc_class *)objc_opt_class();
        double v58 = NSStringFromClass(v57);
        long long v233 = [v232 stringWithFormat:@"<%@: %p>", v58, v56];
      }
      else
      {
        long long v233 = @"(nil)";
      }

      long long v64 = v233;
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v64;
      _os_log_impl(&dword_1853B0000, v55, OS_LOG_TYPE_ERROR, "\t\t\tWindow server hit test window: %@", buf, 0xCu);
    }
  }
  double v21 = v267;
  double x = point.x;
  double y = point.y;
  if (_EventWindowExpectsExternalTouchInput(a3) && !IOHIDEventGetIntegerValue())
  {
    id v30 = a3;
    goto LABEL_12;
  }
  if (![a3 _usesWindowServerHitTesting]) {
    goto LABEL_244;
  }
  char v24 = -[UIWindow _fbsScene]((id *)a3);
  double v25 = _UIConvertScenePoint3DToWindow(v24, a3, x, y);
  double v27 = v26;

  uint64_t v28 = objc_msgSend(a3, "_hitTest:withEvent:windowServerHitTestWindow:", a4, a3, v25, v27);
  if (!v28 || (id v29 = a3, v28, !v29))
  {
LABEL_244:
    id v29 = [a3 _overrideTargetWindowForPathIndex:a7 forEvent:a4 windowServerHitTestWindow:a3];
    if (!v29)
    {
      objc_msgSend(a3, "_targetWindowForPathIndex:atPoint:scenePointZ:forEvent:windowServerHitTestWindow:", a7, a4, a3, x, y, v21);
      id v30 = (id)objc_claimAutoreleasedReturnValue();
LABEL_12:
      id v29 = v30;
    }
  }
  unint64_t v31 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BE8);
  if (*(unsigned char *)v31)
  {
    double v59 = *(id *)(v31 + 8);
    if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR))
    {
      id v60 = v29;
      if (v60)
      {
        long long v234 = NSString;
        uint64_t v61 = (objc_class *)objc_opt_class();
        char v62 = NSStringFromClass(v61);
        long long v235 = [v234 stringWithFormat:@"<%@: %p>", v62, v60];
      }
      else
      {
        long long v235 = @"(nil)";
      }

      long long v65 = v235;
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v65;
      _os_log_impl(&dword_1853B0000, v59, OS_LOG_TYPE_ERROR, "\t\t\tFound local hit test window: %@", buf, 0xCu);
    }
  }
  long long v228 = -[UIWindow _fbsScene]((id *)a3);
  double v231 = _UIConvertScenePoint3DToWindow(v228, v29, v264.x, v264.y);
  double v33 = v32;
  v264.double x = v231;
  v264.double y = v32;
  double v34 = _UIConvertScenePoint3DToWindow(v228, v29, v265.x, v265.y);
  double v36 = v35;
  v265.double x = v34;
  v265.double y = v35;
  double v37 = _UIConvertScenePoint3DToWindow(v228, v29, x, y);
  double v39 = v38;
  point.double x = v37;
  point.double y = v38;
  if (!_UIApplicationProcessIsSpringBoard() || ![v29 _isSystemGestureWindow]) {
    goto LABEL_20;
  }
  if (v29) {
    [v29 _additionalRootLayerAffineTransform];
  }
  else {
    memset(&v263, 0, sizeof(v263));
  }
  if (CGAffineTransformIsIdentity(&v263))
  {
LABEL_20:
    objc_msgSend(v29, "_constrainTouchLocationToScene:", v231, v33);
    double v231 = v40;
    double v33 = v41;
    objc_msgSend(v29, "_constrainTouchLocationToScene:", v34, v36);
    double v34 = v42;
    double v36 = v43;
    objc_msgSend(v29, "_constrainTouchLocationToScene:", v37, v39);
    double v37 = v44;
    double v39 = v45;
    v264.double x = v231;
    v264.double y = v33;
    v265.double x = v34;
    v265.double y = v36;
    point.double x = v44;
    point.double y = v45;
  }
  *(CGPoint *)buf = v264;
  *(CGPoint *)&uint8_t buf[16] = v265;
  CGPoint v286 = point;
  double v287 = v267;
  _LogTouchLocationsIfNeeded((uint64_t)"childTouchWindowLocations", (CGFloat *)buf);
  if (a1)
  {
    double v46 = a1;
  }
  else
  {
    double v46 = objc_alloc_init(UITouch);
  }
  long long v226 = BKSHIDEventGetDigitizerAttributes();
  unint64_t v47 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BF0);
  if (*(unsigned char *)v47)
  {
    float64x2_t v63 = *(id *)(v47 + 8);
    if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218240;
      *(void *)&uint8_t buf[4] = v46;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = a1 != 0;
      _os_log_impl(&dword_1853B0000, v63, OS_LOG_TYPE_ERROR, "\t\t\tNew touch: %p; used existing hover touch: %d",
        buf,
        0x12u);
    }
  }
  -[UIEventEnvironment _setCurrentTouch:forWindow:](a11, (uint64_t)v46, a3);
  [(UITouch *)v46 setTimestamp:a9];
  [v226 initialTouchTimestamp];
  -[UITouch setInitialTouchTimestamp:](v46, "setInitialTouchTimestamp:");
  [(UITouch *)v46 setPhase:0];
  if (v46)
  {
    *(_WORD *)&v46->_touchFlags &= ~8u;
    [(UITouch *)v46 setWindow:v29];
    v46->_displacement = v272;
  }
  else
  {
    [0 setWindow:v29];
  }
  -[UITouch _setWindowServerHitTestWindow:]((uint64_t)v46, a3);
  uint64_t v48 = [a4 _currentPointerEventSource];
  if (v46)
  {
    v46->_unint64_t pointerSource = v48;
    if ([a4 _containsHIDPointerEvent])
    {
      unint64_t pointerSource = v46->_pointerSource;
LABEL_30:
      BOOL v50 = pointerSource != 4;
      goto LABEL_56;
    }
  }
  else if ([a4 _containsHIDPointerEvent])
  {
    unint64_t pointerSource = 0;
    goto LABEL_30;
  }
  BOOL v50 = 0;
LABEL_56:
  [(UITouch *)v46 _setIsPointerTouch:v50];
  _UITouchSetBasicTouchPropertiesFromEvent(v46, a2, a5, v229);
  if ([(UITouch *)v46 type] == UITouchTypePencil) {
    *(unsigned char *)(a11 + 96) = 1;
  }
  if (v46 && !v46->_type)
  {
    objc_msgSend(v29, "warpPoint:", v231, v33);
    double v231 = v66;
    double v33 = v67;
    objc_msgSend(v29, "warpPoint:", v34, v36);
    double v34 = v68;
    double v36 = v69;
    objc_msgSend(v29, "warpPoint:", v37, v39);
    double v37 = v70;
    double v39 = v71;
    int v220 = 1;
  }
  else
  {
    int v220 = 0;
  }
  unint64_t v72 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262BF8);
  if (*(unsigned char *)v72)
  {
    uint64_t v193 = *(id *)(v72 + 8);
    if (os_log_type_enabled(v193, OS_LOG_TYPE_ERROR))
    {
      v290.double x = v37;
      v290.double y = v39;
      NSStringFromCGPoint(v290);
      id v194 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v194;
      _os_log_impl(&dword_1853B0000, v193, OS_LOG_TYPE_ERROR, "\t\tLooking for responder at %@", buf, 0xCu);
    }
  }
  long long v224 = [a3 _focusSystem];
  BOOL HasExternalTouchInput = _UIDeviceHasExternalTouchInput();
  if (v224) {
    BOOL v74 = HasExternalTouchInput;
  }
  else {
    BOOL v74 = 0;
  }
  if (v74)
  {
    long long v75 = [v224 _focusedView];
    long long v76 = [MEMORY[0x1E4F1CA48] array];
    long long v77 = [v75 superview];
    if (v77)
    {
      do
      {
        [v76 insertObject:v77 atIndex:0];
        uint64_t v78 = [v77 superview];

        long long v77 = (void *)v78;
      }
      while (v78);
    }
    long long v261 = 0u;
    long long v262 = 0u;
    long long v259 = 0u;
    long long v260 = 0u;
    id v79 = v76;
    uint64_t v80 = [v79 countByEnumeratingWithState:&v259 objects:v284 count:16];
    if (v80)
    {
      uint64_t v81 = *(void *)v260;
      while (2)
      {
        for (uint64_t i = 0; i != v80; ++i)
        {
          if (*(void *)v260 != v81) {
            objc_enumerationMutation(v79);
          }
          if (UIViewIgnoresTouchEvents(*(void **)(*((void *)&v259 + 1) + 8 * i)))
          {

            id v83 = 0;
            goto LABEL_80;
          }
        }
        uint64_t v80 = [v79 countByEnumeratingWithState:&v259 objects:v284 count:16];
        if (v80) {
          continue;
        }
        break;
      }
    }

    objc_msgSend(v75, "convertPoint:fromView:", v29, v37, v39);
    objc_msgSend(v75, "hitTest:withEvent:", a4);
    id v83 = (id)objc_claimAutoreleasedReturnValue();
LABEL_80:
  }
  else
  {
    id v83 = 0;
  }
  if ([a2 _userInterfaceIdiom] != 3) {
    goto LABEL_88;
  }
  if ([(UITouch *)v46 type] != UITouchTypeIndirect || v224 == 0) {
    goto LABEL_88;
  }
  uint64_t v85 = [v224 _focusedView];

  id v83 = (id)v85;
  if (!v85)
  {
    id v83 = a3;
LABEL_88:
    if (!v83)
    {
      if (v46) {
        windowServerHitTestWindow = v46->__windowServerHitTestWindow;
      }
      else {
        windowServerHitTestWindow = 0;
      }
      long long v87 = windowServerHitTestWindow;
      [(UITouch *)v46 majorRadius];
      v258[0] = MEMORY[0x1E4F143A8];
      v258[1] = 3221225472;
      v258[2] = ____startNewUITouch_block_invoke;
      v258[3] = &__block_descriptor_88_e32__CAPoint3D_ddd_16__0__UIWindow_8l;
      *(double *)&v258[4] = v231;
      *(double *)&v258[5] = v33;
      *(double *)&v258[6] = v34;
      *(double *)&v258[7] = v36;
      *(double *)&v258[8] = v37;
      *(double *)&v258[9] = v39;
      *(double *)&v258[10] = v21;
      _UIHitTestGestureContainer((uint64_t)a4, v29, (uint64_t)v87, 1, (uint64_t)v258, v88);
      id v83 = (id)objc_claimAutoreleasedReturnValue();
    }
  }
  long long v230 = v83;
  [(UITouch *)v46 _setResponder:v83];
  if ([v29 _isTextEffectsWindow]
    && (long long v89 = (objc_class *)objc_opt_class(), Name = class_getName(v89), !strcmp(Name, "UITextRangeView")))
  {
    id v113 = [v83 _eventReceivingWindow];
    long long v114 = v113;
    if (!v113 || v113 == v29)
    {
      unint64_t v225 = (unint64_t)v29;
    }
    else
    {
      objc_msgSend(v113, "convertPoint:fromWindow:", v29, v264.x, v264.y);
      double v223 = v115;
      double v117 = v116;
      v264.double x = v116;
      v264.double y = v115;
      objc_msgSend(v114, "convertPoint:fromWindow:", v29, v265.x, v265.y);
      double v219 = v118;
      double v120 = v119;
      v265.double x = v119;
      v265.double y = v118;
      unint64_t v225 = v114;

      [(UITouch *)v46 setWindow:v225];
      if (v220)
      {
        double v121 = point.x;
        double v122 = point.y;
        objc_msgSend((id)v225, "warpPoint:", v117, v223);
        double v231 = v123;
        double v33 = v124;
        objc_msgSend((id)v225, "warpPoint:", v120, v219);
        double v34 = v125;
        double v36 = v126;
        objc_msgSend((id)v225, "warpPoint:", v121, v122);
        double v37 = v127;
        double v39 = v128;
      }
    }
  }
  else
  {
    unint64_t v225 = (unint64_t)v29;
  }
  int IsKindOfUIView = _IsKindOfUIView((uint64_t)v83);
  if (v83 && (v220 & IsKindOfUIView) != 0)
  {
    id v91 = v83;
    do
    {
      double v92 = -[UITouch warpedIntoView]((id *)&v46->super.isa);
      BOOL v93 = v92 == 0;

      if (!v93) {
        break;
      }
      [v91 charge];
      if (fabsf(v94) >= 2.2204e-16)
      {
        CGFloat v95 = __lockWarpedPointToViewEdge(v91, v264.x, v264.y, v231, v33);
        CGFloat v97 = v96;
        CGFloat v98 = __lockWarpedPointToViewEdge(v91, v265.x, v265.y, v34, v36);
        v264.double y = v97;
        v265.double x = v98;
        v265.double y = v99;
        v264.double x = v95;
        point.double x = v37;
        point.double y = v39;
        double v267 = 0.0;
        -[UITouch setWarpedIntoView:]((uint64_t)v46, v91);
        unint64_t v100 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C00);
        if (*(unsigned char *)v100)
        {
          long long v101 = *(id *)(v100 + 8);
          if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_1853B0000, v101, OS_LOG_TYPE_ERROR, "\t\tWarped point hit view with charge", buf, 2u);
          }
        }
      }
      else
      {
        id v91 = (id)[v91 superview];
      }
    }
    while (v91);
  }
  uint64_t v236 = [(UITouch *)v46 view];
  unint64_t v102 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C08);
  if (*(unsigned char *)v102)
  {
    double v195 = *(id *)(v102 + 8);
    if (os_log_type_enabled(v195, OS_LOG_TYPE_ERROR))
    {
      id v196 = a3;
      if (v196)
      {
        uint64_t v197 = NSString;
        uint64_t v198 = (objc_class *)objc_opt_class();
        uint64_t v199 = NSStringFromClass(v198);
        double v200 = [v197 stringWithFormat:@"<%@: %p>", v199, v196];
      }
      else
      {
        double v200 = @"(nil)";
      }

      double v213 = v200;
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v213;
      _os_log_impl(&dword_1853B0000, v195, OS_LOG_TYPE_ERROR, "\t\t\tWindow server hit test window: %@", buf, 0xCu);
    }
  }
  unint64_t v103 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C10);
  if (*(unsigned char *)v103)
  {
    uint64_t v201 = *(id *)(v103 + 8);
    if (os_log_type_enabled(v201, OS_LOG_TYPE_ERROR))
    {
      id v202 = (id)v236;
      if (v202)
      {
        uint64_t v203 = NSString;
        uint64_t v204 = (objc_class *)objc_opt_class();
        double v205 = NSStringFromClass(v204);
        uint64_t v206 = [v203 stringWithFormat:@"<%@: %p>", v205, v202];
      }
      else
      {
        uint64_t v206 = @"(nil)";
      }

      double v214 = v206;
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v214;
      _os_log_impl(&dword_1853B0000, v201, OS_LOG_TYPE_ERROR, "\t\t\tFound view: %@", buf, 0xCu);
    }
  }
  unint64_t v104 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C18);
  if (*(unsigned char *)v104)
  {
    uint64_t v207 = *(id *)(v104 + 8);
    if (os_log_type_enabled(v207, OS_LOG_TYPE_ERROR))
    {
      NSStringFromCGPoint(v264);
      id v208 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v208;
      _os_log_impl(&dword_1853B0000, v207, OS_LOG_TYPE_ERROR, "\t\t\tLocation in view: %@", buf, 0xCu);
    }
  }
  unint64_t v105 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C20);
  if (*(unsigned char *)v105)
  {
    double v209 = *(id *)(v105 + 8);
    if (os_log_type_enabled(v209, OS_LOG_TYPE_ERROR))
    {
      NSStringFromCGPoint(v265);
      id v210 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      *(void *)&uint8_t buf[4] = v210;
      _os_log_impl(&dword_1853B0000, v209, OS_LOG_TYPE_ERROR, "\t\t\tPrecise location in view: %@", buf, 0xCu);
    }
  }
  if (!(v236 | v225)
    && [a3 _isSystemGestureWindow]
    && _UIApplicationProcessIsCarousel())
  {
    if (_UIInternalPreferencesRevisionOnce != -1) {
      dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
    }
    int v106 = _UIInternalPreferencesRevisionVar;
    if (_UIInternalPreferencesRevisionVar < 1) {
      goto LABEL_117;
    }
    int v215 = _UIInternalPreference_LogForMissingSystemGestureViewInCarousel;
    if (_UIInternalPreferencesRevisionVar == _UIInternalPreference_LogForMissingSystemGestureViewInCarousel) {
      goto LABEL_117;
    }
    while (v106 >= v215)
    {
      _UIInternalPreferenceSync(v106, &_UIInternalPreference_LogForMissingSystemGestureViewInCarousel, @"LogForMissingSystemGestureViewInCarousel", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
      int v215 = _UIInternalPreference_LogForMissingSystemGestureViewInCarousel;
      if (v106 == _UIInternalPreference_LogForMissingSystemGestureViewInCarousel) {
        goto LABEL_117;
      }
    }
    if (byte_1E8FD5424)
    {
LABEL_117:
      long long v107 = *(id *)(__UILogGetCategoryCachedImpl("EventDispatch", &qword_1EB262C28) + 8);
      if (os_log_type_enabled(v107, OS_LOG_TYPE_ERROR))
      {
        id v108 = a3;
        if (v108)
        {
          long long v109 = NSString;
          long long v110 = (objc_class *)objc_opt_class();
          long long v111 = NSStringFromClass(v110);
          long long v112 = [v109 stringWithFormat:@"<%@: %p>", v111, v108];
        }
        else
        {
          long long v112 = @"(nil)";
        }

        double v129 = v112;
        *(_DWORD *)buf = 138412290;
        *(void *)&uint8_t buf[4] = v129;
        _os_log_impl(&dword_1853B0000, v107, OS_LOG_TYPE_ERROR, "No hit test result for touch in render server hit tested window: %@", buf, 0xCu);
      }
      char v130 = *(id *)(__UILogGetCategoryCachedImpl("EventDispatch", &qword_1EB262C30) + 8);
      if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
      {
        id v131 = [a3 recursiveDescription];
        *(_DWORD *)buf = 138412290;
        *(void *)&uint8_t buf[4] = v131;
        _os_log_impl(&dword_1853B0000, v130, OS_LOG_TYPE_ERROR, "Recursive window description: \n%@", buf, 0xCu);
      }
    }
  }
  long long v132 = [MEMORY[0x1E4FB34C0] authenticationRecordForTouch:v46];
  if (v132)
  {
    [(UITouch *)v46 _setTouchAuthenticationRecord:v132];
    _UISTouchAuthenticationTelemetryReportRecord();
  }
  if (([v226 options] & 0x100) != 0)
  {
    id v133 = objc_alloc_init(MEMORY[0x1E4F4F3C0]);
    objc_msgSend(v133, "setTouchIdentifier:", -[UITouch _touchIdentifier](v46, "_touchIdentifier"));
    long long v134 = NSString;
    long long v135 = (objc_class *)objc_opt_class();
    double v136 = objc_msgSend(v134, "stringWithFormat:", @"hit: %s %p", class_getName(v135), v236);
    [v133 setText:v136];

    [v133 setUniqueIdentifier:@"hitTest"];
    double v137 = [MEMORY[0x1E4F4F3C8] sharedInstance];
    id v283 = v133;
    double v138 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v283 count:1];
    [v137 postTouchAnnotations:v138];
  }
  double v139 = v264.x;
  double v140 = v264.y;
  if (v46)
  {
    CGFloat v141 = v265.y;
    CGFloat v142 = v265.x;
    v46->_previousLocationInWindow.double x = v264.x;
    v46->_previousLocationInWindow.double y = v140;
    v46->_precisePreviousLocationInWindow.double x = v142;
    v46->_precisePreviousLocationInWindow.double y = v141;
    v46->_locationInWindow.double x = v139;
    v46->_locationInWindow.double y = v140;
    v46->_preciseLocationInWindow.double x = v142;
    v46->_preciseLocationInWindow.double y = v141;
  }
  IOHIDEventGetFloatValue();
  -[UITouch _setRollAngle:resetPrevious:]((uint64_t)v46, 1, v143);
  IOHIDEventGetFloatValue();
  if (v46)
  {
    double maxObservedPressure = v46->_maxObservedPressure;
    if (maxObservedPressure < v144) {
      double maxObservedPressure = v144;
    }
    v46->_previousPressure = v144;
    v46->_pressure = v144;
    v46->_double maxObservedPressure = maxObservedPressure;
  }
  -[UITouch _updateWithChildEvent:]((uint64_t)v46);
  if (_UIApplicationSupportsGlobalEdgeSwipeTouches())
  {
    unint64_t v146 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C38);
    if (*(unsigned char *)v146)
    {
      double v211 = *(id *)(v146 + 8);
      if (os_log_type_enabled(v211, OS_LOG_TYPE_ERROR))
      {
        if (v46) {
          int v212 = (*(_WORD *)&v46->_touchFlags >> 13) & 1;
        }
        else {
          int v212 = 0;
        }
        *(_DWORD *)buf = 134218240;
        *(void *)&uint8_t buf[4] = v46;
        *(_WORD *)&buf[12] = 1024;
        *(_DWORD *)&buf[14] = v212;
        _os_log_impl(&dword_1853B0000, v211, OS_LOG_TYPE_ERROR, "\t\t\tNew touch %p isGESTouch: %d", buf, 0x12u);
      }
    }
  }
  uint64_t v147 = [(UITouch *)v46 window];
  uint64_t v148 = [v147 _touchData];

  long long v275 = 0u;
  long long v276 = 0u;
  long long v273 = 0u;
  long long v274 = 0u;
  id v149 = v148;
  uint64_t v150 = [v149 countByEnumeratingWithState:&v273 objects:buf count:16];
  if (!v150)
  {

    id v152 = 0;
LABEL_168:
    uint64_t v151 = objc_alloc_init(UITouchData);
    v151->startTouchDownLocation.double x = v139;
    v151->startTouchDownLocation.double y = v140;
    v151->lastTouchUpTimestamp = a9;
    v151->touchIsValidTap = 1;
    [v149 addObject:v151];
    goto LABEL_169;
  }
  uint64_t v151 = 0;
  id v152 = 0;
  uint64_t v153 = *(void *)v274;
  do
  {
    for (uint64_t j = 0; j != v150; ++j)
    {
      if (*(void *)v274 != v153) {
        objc_enumerationMutation(v149);
      }
      uint64_t v155 = *(void *)(*((void *)&v273 + 1) + 8 * j);
      double v156 = *(double *)(v155 + 32) + 0.35;
      if (v156 + 0.75 >= a9)
      {
        if (!v151)
        {
          BOOL v157 = v156 < a9 || *(unsigned char *)(v155 + 48) == 0;
          if (v157 || vabdd_f64(v139, *(double *)(v155 + 8)) >= 45.0 || vabdd_f64(v140, *(double *)(v155 + 16)) >= 45.0) {
            uint64_t v151 = 0;
          }
          else {
            uint64_t v151 = (UITouchData *)(id)v155;
          }
        }
      }
      else
      {
        if (!v152) {
          id v152 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
        }
        [v152 addObject:v155];
      }
    }
    uint64_t v150 = [v149 countByEnumeratingWithState:&v273 objects:buf count:16];
  }
  while (v150);

  if (v152) {
    [v149 removeObjectsInArray:v152];
  }
  if (!v151) {
    goto LABEL_168;
  }
LABEL_169:
  v151->lastTouch = v46;
  v151->lastTouchDownTimestamp = a9;
  ++v151->lastTapCount;
  if (v46) {
    *(_WORD *)&v46->_touchFlags = *(_WORD *)&v46->_touchFlags & 0xFFFD | (2 * v151->touchIsValidTap);
  }
  -[UITouch setTapCount:](v46, "setTapCount:");

  if (((v46 != 0) & _UIApplicationSupportsGlobalEdgeSwipeTouches()) != 1
    || (*(_WORD *)&v46->_touchFlags & 0x2000) == 0)
  {
    *(void *)buf = 0;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000;
    buf[24] = 0;
    *(void *)&long long v273 = 0;
    *((void *)&v273 + 1) = &v273;
    *(void *)&long long v274 = 0x2020000000;
    BYTE8(v274) = 0;
    [(id)v225 bounds];
    double v159 = v158;
    double v161 = v160;
    double v163 = v162;
    double v165 = v164;
    [(id)v225 safeAreaInsets];
    CGFloat v167 = v159 + v166;
    CGFloat v169 = v161 + v168;
    CGFloat v171 = v163 - (v166 + v170);
    CGFloat v173 = v165 - (v168 + v172);
    v291.origin.double x = v159;
    v291.origin.double y = v161;
    v291.size.CGFloat width = v163;
    v291.size.CGFloat height = v165;
    v292.origin.double x = v167;
    v292.origin.double y = v169;
    v292.size.CGFloat width = v171;
    v292.size.CGFloat height = v173;
    BOOL v174 = CGRectEqualToRect(v291, v292);
    v249[0] = MEMORY[0x1E4F143A8];
    v249[1] = 3221225472;
    uint64_t v250 = ____startNewUITouch_block_invoke_134;
    double v251 = &unk_1E5304838;
    BOOL v257 = !v174;
    id v252 = (id)v225;
    CGFloat v253 = v167;
    CGFloat v254 = v169;
    CGFloat v255 = v171;
    CGFloat v256 = v173;
    v243[0] = MEMORY[0x1E4F143A8];
    v243[1] = 3221225472;
    v243[2] = ____startNewUITouch_block_invoke_2;
    v243[3] = &unk_1E5304860;
    id v175 = v230;
    double v248 = v249;
    id v244 = v175;
    uint64_t v246 = buf;
    id v176 = v252;
    id v245 = v176;
    long long v247 = &v273;
    [a8 enumerateKeysAndObjectsUsingBlock:v243];
    v237[0] = MEMORY[0x1E4F143A8];
    v237[1] = 3221225472;
    v237[2] = ____startNewUITouch_block_invoke_3;
    v237[3] = &unk_1E5304860;
    id v177 = v175;
    long long v242 = v249;
    id v238 = v177;
    long long v240 = buf;
    id v178 = v176;
    id v239 = v178;
    long long v241 = &v273;
    [a10 enumerateKeysAndObjectsUsingBlock:v237];
    if (*(unsigned char *)(*((void *)&v273 + 1) + 24))
    {
      if (*(unsigned char *)(*(void *)&buf[8] + 24))
      {
        if (!IsKindOfUIView) {
          goto LABEL_199;
        }
        if ([v177 isMultipleTouchEnabled]) {
          goto LABEL_199;
        }
        __setTouchViewNilWithGestureCheck(a4, v46, a8, a10);
        unint64_t v179 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C40);
        if ((*(unsigned char *)v179 & 1) == 0) {
          goto LABEL_199;
        }
        uint64_t v180 = *(id *)(v179 + 8);
        if (!os_log_type_enabled(v180, OS_LOG_TYPE_ERROR)) {
          goto LABEL_195;
        }
        *(_DWORD *)double v277 = 134217984;
        double v278 = v46;
        double v181 = "Touch %p was clicked in a non multi touch enabled view with other touches in the same view...ignoring";
      }
      else
      {
        [(UITouch *)v46 _setIsFirstTouchForView:1];
        if (!((unsigned int (*)(void *, UITouch *))v250)(v249, v46)) {
          goto LABEL_199;
        }
        if (IsKindOfUIView)
        {
          if ([v177 _shouldApplyExclusiveTouch])
          {
            __setTouchViewNilWithGestureCheck(a4, v46, a8, a10);
            unint64_t v185 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C48);
            if (*(unsigned char *)v185)
            {
              double v216 = *(id *)(v185 + 8);
              if (os_log_type_enabled(v216, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)double v277 = 134217984;
                double v278 = v46;
                _os_log_impl(&dword_1853B0000, v216, OS_LOG_TYPE_ERROR, "Touch %p was clicked in an exclusive touch view, but we already have another touch for this window", v277, 0xCu);
              }
            }
          }
        }
        double v186 = [v178 _exclusiveTouchView];
        BOOL v187 = v186 == 0;

        if (v187) {
          goto LABEL_199;
        }
        __setTouchViewNilWithGestureCheck(a4, v46, a8, a10);
        unint64_t v188 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C50);
        if ((*(unsigned char *)v188 & 1) == 0) {
          goto LABEL_199;
        }
        uint64_t v180 = *(id *)(v188 + 8);
        if (!os_log_type_enabled(v180, OS_LOG_TYPE_ERROR)) {
          goto LABEL_195;
        }
        *(_DWORD *)double v277 = 134217984;
        double v278 = v46;
        double v181 = "Touch %p was clicked in a view, but we already have another exclusive touch view for this window";
      }
      double v183 = v180;
      uint32_t v184 = 12;
    }
    else
    {
      [(UITouch *)v46 _setIsFirstTouchForView:1];
      if (!((unsigned int (*)(void *, UITouch *))v250)(v249, v46)) {
        goto LABEL_199;
      }
      if (!*(unsigned char *)(*(void *)&buf[8] + 24))
      {
        [(UITouch *)v46 _setIsFirstTouchForView:1];
        if (!IsKindOfUIView) {
          goto LABEL_199;
        }
        if (![v177 _shouldApplyExclusiveTouch]) {
          goto LABEL_199;
        }
        [v178 _setExclusiveTouchView:v177];
        uint64_t v189 = [a4 _exclusiveTouchWindows];
        [v189 addObject:v178];

        unint64_t v190 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C60);
        if ((*(unsigned char *)v190 & 1) == 0) {
          goto LABEL_199;
        }
        uint64_t v180 = *(id *)(v190 + 8);
        if (os_log_type_enabled(v180, OS_LOG_TYPE_ERROR))
        {
          double v217 = (objc_class *)objc_opt_class();
          NSStringFromClass(v217);
          double v218 = (UITouch *)(id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)double v277 = 138412802;
          double v278 = v218;
          __int16 v279 = 2048;
          char v280 = a4;
          __int16 v281 = 2112;
          id v282 = v178;
          _os_log_impl(&dword_1853B0000, v180, OS_LOG_TYPE_ERROR, "%@<%p> - Added window for exclusive touch  (%@)", v277, 0x20u);
        }
        goto LABEL_195;
      }
      unint64_t v182 = __UILogGetCategoryCachedImpl("Touch", &qword_1EB262C58);
      if ((*(unsigned char *)v182 & 1) == 0)
      {
LABEL_199:

        _Block_object_dispose(&v273, 8);
        _Block_object_dispose(buf, 8);
        goto LABEL_200;
      }
      uint64_t v180 = *(id *)(v182 + 8);
      if (!os_log_type_enabled(v180, OS_LOG_TYPE_ERROR))
      {
LABEL_195:

        goto LABEL_199;
      }
      *(_WORD *)double v277 = 0;
      double v181 = "ERROR: We found a touch view the current view without finding a touch for the current window";
      double v183 = v180;
      uint32_t v184 = 2;
    }
    _os_log_impl(&dword_1853B0000, v183, OS_LOG_TYPE_ERROR, v181, v277, v184);
    goto LABEL_195;
  }
LABEL_200:
  double v191 = v46;

  return v191;
}

void sub_1854E2458(_Unwind_Exception *a1)
{
}

double _UIConvertScenePoint3DToWindow(void *a1, void *a2, double a3, double a4)
{
  id v7 = a1;
  BOOL v8 = a2;
  -[UIWindow _fbsScene](v8);
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  if (v9 != v7)
  {
    if (v7)
    {
      double v10 = [v7 settings];
      [v10 frame];
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      double v18 = v17;
      uint64_t v19 = [v10 interfaceOrientation];
      double v20 = v16 - a3;
      double v21 = v18 - a4;
      double v22 = v16 - a4;
      double v23 = v18 - a3;
      if (v19 == 4) {
        double v24 = a4;
      }
      else {
        double v24 = a3;
      }
      if (v19 != 4) {
        double v23 = a4;
      }
      if (v19 == 3) {
        double v23 = a3;
      }
      else {
        double v22 = v24;
      }
      if (v19 != 2)
      {
        double v20 = v22;
        double v21 = v23;
      }
      a3 = v12 + v20;
      a4 = v14 + v21;
    }
    if (v9)
    {
      double v25 = [v9 settings];
      [v25 frame];
      double v27 = v26;
      double v29 = v28;
      double v31 = a3 - v30;
      double v33 = a4 - v32;
      uint64_t v34 = [v25 interfaceOrientation];
      if (v34 == 4) {
        double v35 = v29 - v33;
      }
      else {
        double v35 = v31;
      }
      if (v34 == 4) {
        double v36 = v31;
      }
      else {
        double v36 = v33;
      }
      if (v34 == 3)
      {
        double v35 = v33;
        double v36 = v27 - v31;
      }
      if (v34 == 2) {
        a3 = v27 - v31;
      }
      else {
        a3 = v35;
      }
      if (v34 == 2) {
        a4 = v29 - v33;
      }
      else {
        a4 = v36;
      }
    }
  }
  double v37 = [v8 layer];
  objc_msgSend(v37, "convertPoint:fromLayer:", 0, a3, a4);
  double v39 = v38;

  return v39;
}

double _UIWindowConvertRectFromOrientationToOrientation(uint64_t a1, uint64_t a2, double result, double a4, double a5, double a6, double a7, double a8)
{
  if (a1 != a2)
  {
    v10[8] = v8;
    v10[9] = v9;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    v10[2] = ___UIWindowConvertRectFromOrientationToOrientation_block_invoke;
    v10[3] = &__block_descriptor_64_e30__CGPoint_dd_24__0_CGPoint_dd_8l;
    *(double *)&v10[4] = a7;
    *(double *)&v10[5] = a8;
    v10[6] = a1;
    v10[7] = a2;
    return _UIRectTransformByTransformingCorners((uint64_t)v10, result, a4, a5, a6);
  }
  return result;
}

float _chargeForView(void *a1)
{
  uint64_t v1 = a1;
  long long v2 = v1;
  float v3 = 0.0;
  if (v1 && (v1[116] & 0x10) != 0)
  {
    UIUserInterfaceLayoutDirection v4 = objc_getAssociatedObject(v1, &_UIViewChargeAssocObjectKey);
    [v4 floatValue];
    float v3 = v5;
  }
  return v3;
}

uint64_t _UIApplicationProcessIsSpringBoard()
{
  if (qword_1EB25B638 != -1) {
    dispatch_once(&qword_1EB25B638, &__block_literal_global_1295_1);
  }
  return byte_1EB25B4F0;
}

BOOL ____startNewUITouch_block_invoke_134(uint64_t a1, _WORD *a2)
{
  int v4 = _UIApplicationSupportsGlobalEdgeSwipeTouches();
  if (a2 && v4 && (a2[118] & 0x2000) != 0) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 72)) {
    return 1;
  }
  [a2 locationInView:*(void *)(a1 + 32)];
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  return CGRectContainsPoint(*(CGRect *)&v9, *(CGPoint *)&v6);
}

void sub_1854E663C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    sub_1854E808C(a1, (uint64_t)&v18);
    char v3 = v19;
    char v4 = v20;
    char v5 = v21;
    char v6 = v22;
    char v7 = v23;
    char v8 = v24;
    char v9 = v25;
    char v10 = v26;
    char v11 = v27;
    uint64_t result = v28;
    char v13 = v29;
    char v14 = v30;
    uint64_t v15 = v31;
    char v16 = v33;
    long long v17 = v32;
    *(void *)a2 = v18;
    *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x3A0], 8) = v3;
    *(unsigned char *)(a2 + 9) = v4;
    *(unsigned char *)(a2 + 10) = v5;
    *(unsigned char *)(a2 + 11) = v6;
    *(unsigned char *)(a2 + 12) = v7;
    *(unsigned char *)(a2 + 13) = v8;
    *(unsigned char *)(a2 + 14) = v9;
    *(unsigned char *)(a2 + 15) = v10;
    *(unsigned char *)(a2 + 16) = v11;
    *(_WORD *)(a2 + 17) = result;
    *(unsigned char *)(a2 + 19) = v13;
    *(unsigned char *)(a2 + 20) = v14;
    *(void *)(a2 + 24) = v15;
    *(_OWORD *)(a2 + 32) = v17;
    *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3A0], 8) = v16;
  }
  else
  {
    sub_186A1F38C();
    swift_bridgeObjectRelease();
    sub_1853B985C(0, &qword_1E8FAFC80);
    sub_186A1FBDC();
    sub_186A1E9FC();
    swift_bridgeObjectRelease();
    sub_186A1E9FC();
    sub_186A1E9FC();
    uint64_t result = sub_186A1F60C();
    __break(1u);
  }
  return result;
}

void sub_1854E808C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v66 = objc_msgSend(a1, sel_traitCollection);
  unsigned __int8 v4 = objc_msgSend(a1, sel_isDisabled);
  unsigned __int8 v94 = v4;
  unsigned __int8 v5 = objc_msgSend(a1, sel_isHighlighted);
  unsigned __int8 v93 = v5;
  unsigned __int8 v6 = objc_msgSend(a1, sel_isSelected);
  unsigned __int8 v92 = v6;
  unsigned __int8 v7 = objc_msgSend(a1, sel_isFocused);
  unsigned __int8 v91 = v7;
  unsigned __int8 v73 = objc_msgSend(a1, sel_isPinned);
  unsigned __int8 v90 = v73;
  unsigned __int8 v72 = objc_msgSend(a1, sel_isEditing);
  unsigned __int8 v89 = v72;
  unsigned __int8 v71 = objc_msgSend(a1, sel_isExpanded);
  unsigned __int8 v88 = v71;
  unsigned __int8 v69 = objc_msgSend(a1, sel_isSwiped);
  unsigned __int8 v87 = v69;
  unsigned __int8 v67 = objc_msgSend(a1, sel_isReordering);
  unsigned __int8 v86 = v67;
  sub_1854E87E0((unint64_t)objc_msgSend(a1, sel_cellDragState), type metadata accessor for __UICellConfigurationDragState, &v82);
  char v65 = (char)v82;
  sub_1854E87E0((unint64_t)objc_msgSend(a1, sel_cellDropState), type metadata accessor for __UICellConfigurationDropState, &v82);
  char v64 = (char)v82;
  unsigned __int8 v8 = objc_msgSend(a1, sel__usesAnyPlainListStyle);
  unsigned __int8 v85 = v8;
  unsigned __int8 v9 = objc_msgSend(a1, sel__inMultiSelectGroup);
  unsigned __int8 v84 = v9;
  id v10 = objc_msgSend(a1, sel__customStatesForSwiftBridging);
  if (!v10)
  {
    char v19 = (void *)MEMORY[0x1E4FBC868];
    unsigned __int8 v63 = v7;
    unsigned __int8 v59 = v6;
    unsigned __int8 v58 = v5;
    unsigned __int8 v57 = v4;
    goto LABEL_49;
  }
  char v11 = v10;
  uint64_t v62 = a2;
  type metadata accessor for UIConfigurationStateCustomKey(0);
  sub_185A4D660();
  uint64_t v12 = MEMORY[0x1E4FBC840];
  uint64_t v13 = sub_186A1E79C();

  int64_t v14 = 0;
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v68 = v13 + 64;
  uint64_t v74 = v13;
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v70 = (unint64_t)(v16 + 63) >> 6;
  char v19 = (void *)MEMORY[0x1E4FBC868];
  long long v20 = 0uLL;
  char v21 = (uint64_t *)&unk_1E8FAF2C8;
  if ((v17 & v15) == 0) {
    goto LABEL_7;
  }
LABEL_5:
  while (2)
  {
    unint64_t v22 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v23 = v22 | (v14 << 6);
LABEL_6:
    uint64_t v24 = *(void *)(v74 + 56);
    *(void *)&long long v79 = *(void *)(*(void *)(v74 + 48) + 8 * v23);
    char v25 = (void *)v79;
    sub_1853B76BC(v24 + 32 * v23, (uint64_t)&v79 + 8);
    id v26 = v25;
    while (1)
    {
      sub_1853B8150((uint64_t)&v79, (uint64_t)&v82, v21);
      char v30 = v82;
      if (!v82)
      {
        swift_release();
        unsigned __int8 v57 = v94;
        unsigned __int8 v58 = v93;
        unsigned __int8 v59 = v92;
        unsigned __int8 v63 = v91;
        unsigned __int8 v73 = v90;
        unsigned __int8 v72 = v89;
        unsigned __int8 v71 = v88;
        unsigned __int8 v69 = v87;
        unsigned __int8 v67 = v86;
        unsigned __int8 v8 = v85;
        unsigned __int8 v9 = v84;
        a2 = v62;
LABEL_49:
        id v60 = a1;
        id v61 = objc_msgSend(v60, sel__mutations);

        *(void *)a2 = v66;
        *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x3A0], 8) = v57;
        *(unsigned char *)(a2 + 9) = v58;
        *(unsigned char *)(a2 + 10) = v59;
        *(unsigned char *)(a2 + 11) = v63;
        *(unsigned char *)(a2 + 12) = v73;
        *(unsigned char *)(a2 + 13) = v72;
        *(unsigned char *)(a2 + 14) = v71;
        *(unsigned char *)(a2 + 15) = v69;
        *(unsigned char *)(a2 + 16) = v67;
        *(unsigned char *)(a2 + 17) = v65;
        *(unsigned char *)(a2 + 1_Block_object_dispose(&STACK[0x3A0], 8) = v64;
        *(unsigned char *)(a2 + 19) = v8;
        *(unsigned char *)(a2 + 20) = v9;
        *(void *)(a2 + 24) = v19;
        *(void *)(a2 + 32) = a1;
        *(void *)(a2 + 40) = v61;
        *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3A0], 8) = 0;
        return;
      }
      sub_1853B7BB0(&v83, &v78);
      if (swift_dynamicCast()) {
        break;
      }
      uint64_t v81 = 0;
      long long v79 = 0u;
      long long v80 = 0u;
      id v50 = v30;
      sub_1859A0EB0((uint64_t)&v79);
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_185909644(v50);
      char v53 = v52;
      swift_bridgeObjectRelease();
      if (v53)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1859BF414();
        }

        uint64_t v54 = v19[7] + 40 * v51;
        uint64_t v55 = *(void *)(v54 + 32);
        long long v56 = *(_OWORD *)(v54 + 16);
        long long v75 = *(_OWORD *)v54;
        long long v76 = v56;
        uint64_t v77 = v55;
        sub_1859BB3E8(v51, (uint64_t)v19);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v77 = 0;
        long long v75 = 0u;
        long long v76 = 0u;
      }

      sub_1859A0EB0((uint64_t)&v75);
      long long v20 = 0uLL;
      if (v18) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v27 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_51;
      }
      if (v27 < v70)
      {
        unint64_t v28 = *(void *)(v68 + 8 * v27);
        if (v28) {
          goto LABEL_10;
        }
        int64_t v29 = v14 + 2;
        ++v14;
        if (v27 + 1 < v70)
        {
          unint64_t v28 = *(void *)(v68 + 8 * v29);
          if (v28) {
            goto LABEL_13;
          }
          int64_t v14 = v27 + 1;
          if (v27 + 2 < v70)
          {
            unint64_t v28 = *(void *)(v68 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_10;
            }
            int64_t v29 = v27 + 3;
            int64_t v14 = v27 + 2;
            if (v27 + 3 < v70)
            {
              unint64_t v28 = *(void *)(v68 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  int64_t v27 = v29 + 1;
                  if (__OFADD__(v29, 1)) {
                    goto LABEL_53;
                  }
                  if (v27 >= v70)
                  {
                    int64_t v14 = v70 - 1;
                    goto LABEL_24;
                  }
                  unint64_t v28 = *(void *)(v68 + 8 * v27);
                  ++v29;
                  if (v28) {
                    goto LABEL_10;
                  }
                }
              }
LABEL_13:
              int64_t v27 = v29;
LABEL_10:
              unint64_t v18 = (v28 - 1) & v28;
              unint64_t v23 = __clz(__rbit64(v28)) + (v27 << 6);
              int64_t v14 = v27;
              goto LABEL_6;
            }
          }
        }
      }
LABEL_24:
      unint64_t v18 = 0;
      uint64_t v81 = 0;
      long long v79 = v20;
      long long v80 = v20;
    }
    uint64_t v31 = v21;
    uint64_t v32 = v12;
    long long v75 = v79;
    long long v76 = v80;
    uint64_t v77 = v81;
    id v33 = v30;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v36 = sub_185909644(v33);
    uint64_t v37 = v19[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (!__OFADD__(v37, v38))
    {
      char v40 = v35;
      if (v19[3] >= v39)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v35 & 1) == 0) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1859BF414();
          if ((v40 & 1) == 0) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_185A16D48(v39, isUniquelyReferenced_nonNull_native);
        uint64_t v41 = sub_185909644(v33);
        if ((v40 & 1) != (v42 & 1)) {
          goto LABEL_54;
        }
        unint64_t v36 = v41;
        if ((v40 & 1) == 0)
        {
LABEL_31:
          v19[(v36 >> 6) + 8] |= 1 << v36;
          *(void *)(v19[6] + 8 * v36) = v33;
          uint64_t v43 = v19[7] + 40 * v36;
          long long v44 = v75;
          long long v45 = v76;
          *(void *)(v43 + 32) = v77;
          *(_OWORD *)uint64_t v43 = v44;
          *(_OWORD *)(v43 + 16) = v45;
          uint64_t v46 = v19[2];
          BOOL v47 = __OFADD__(v46, 1);
          uint64_t v48 = v46 + 1;
          if (v47) {
            goto LABEL_52;
          }
          v19[2] = v48;
          id v49 = v33;
          goto LABEL_43;
        }
      }
      sub_18597AA64((uint64_t)&v75, v19[7] + 40 * v36);
LABEL_43:

      swift_bridgeObjectRelease();
      uint64_t v12 = v32;
      long long v20 = 0uLL;
      char v21 = v31;
      if (v18) {
        continue;
      }
      goto LABEL_7;
    }
    break;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  sub_186A1F93C();
  __break(1u);
}

unint64_t sub_1854E87E0@<X0>(unint64_t result@<X0>, void (*a2)(void)@<X1>, unsigned char *a3@<X8>)
{
  if (result >= 3)
  {
    sub_186A1F38C();
    sub_186A1E9FC();
    a2(0);
    sub_186A1F53C();
    sub_186A1E9FC();
    sub_186A1E9FC();
    uint64_t result = sub_186A1F60C();
    __break(1u);
  }
  else
  {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1854E88F8()
{
  uint64_t v1 = *v0;
  unsigned int v38 = *((unsigned __int8 *)v0 + 8);
  unsigned int v39 = *((unsigned __int8 *)v0 + 9);
  unsigned int v40 = *((unsigned __int8 *)v0 + 10);
  unsigned int v41 = *((unsigned __int8 *)v0 + 11);
  unsigned int v42 = *((unsigned __int8 *)v0 + 12);
  uint64_t v2 = *((unsigned __int8 *)v0 + 13);
  uint64_t v3 = *((unsigned __int8 *)v0 + 14);
  uint64_t v4 = *((unsigned __int8 *)v0 + 15);
  uint64_t v5 = *((unsigned __int8 *)v0 + 16);
  uint64_t v6 = *((unsigned __int8 *)v0 + 17);
  uint64_t v7 = *((unsigned __int8 *)v0 + 18);
  uint64_t v8 = *((unsigned __int8 *)v0 + 19);
  unsigned int v44 = *((unsigned __int8 *)v0 + 20);
  uint64_t v10 = v0[3];
  unsigned __int8 v9 = (void *)v0[4];
  if (v9)
  {
    uint64_t v36 = *v0;
    unsigned int v37 = *((unsigned __int8 *)v0 + 13);
    uint64_t v11 = *((unsigned __int8 *)v0 + 14);
    uint64_t v12 = *((unsigned __int8 *)v0 + 15);
    uint64_t v13 = *((unsigned __int8 *)v0 + 16);
    uint64_t v14 = *((unsigned __int8 *)v0 + 17);
    uint64_t v15 = *((unsigned __int8 *)v0 + 18);
    uint64_t v16 = *((unsigned __int8 *)v0 + 19);
    id v17 = (id)v0[5];
    char v18 = *((unsigned char *)v0 + 48);
    id v19 = v9;
    id v20 = objc_msgSend(v19, sel__mutations);
    if ((v18 & 1) == 0 && v17 == v20) {
      return (uint64_t)v19;
    }

    uint64_t v8 = v16;
    uint64_t v7 = v15;
    uint64_t v6 = v14;
    uint64_t v5 = v13;
    uint64_t v4 = v12;
    uint64_t v3 = v11;
    uint64_t v2 = v37;
    uint64_t v1 = v36;
  }
  id v19 = objc_msgSend(objc_allocWithZone((Class)UICellConfigurationState), sel_initWithTraitCollection_, v1);
  objc_msgSend(v19, sel_setDisabled_, v38);
  objc_msgSend(v19, sel_setHighlighted_, v39);
  objc_msgSend(v19, sel_setSelected_, v40);
  objc_msgSend(v19, sel_setFocused_, v41);
  objc_msgSend(v19, sel_setPinned_, v42);
  objc_msgSend(v19, sel_setEditing_, v2);
  objc_msgSend(v19, sel_setExpanded_, v3);
  objc_msgSend(v19, sel_setSwiped_, v4);
  objc_msgSend(v19, sel_setReordering_, v5);
  objc_msgSend(v19, sel_setCellDragState_, v6);
  objc_msgSend(v19, sel_setCellDropState_, v7);
  objc_msgSend(v19, sel__setUsesAnyPlainListStyle_, v8);
  objc_msgSend(v19, sel__setInMultiSelectGroup_, v44);
  uint64_t v43 = v10 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & *(void *)(v10 + 64);
  int64_t v45 = (unint64_t)(v21 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  if (!v23) {
    goto LABEL_12;
  }
LABEL_10:
  unint64_t v27 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v28 = v27 | (v25 << 6);
  while (2)
  {
    uint64_t v29 = *(void *)(v10 + 56);
    *(void *)&long long v46 = *(void *)(*(void *)(v10 + 48) + 8 * v28);
    char v30 = (void *)v46;
    sub_18590CE30(v29 + 40 * v28, (uint64_t)&v46 + 8);
    id v31 = v30;
    while (1)
    {
      sub_1853B8150((uint64_t)&v46, (uint64_t)&v49, &qword_1E8FAED78);
      char v35 = v49;
      if (!v49)
      {
        swift_release();
        return (uint64_t)v19;
      }
      long long v46 = v50;
      long long v47 = v51;
      *(void *)&long long v48 = v52;
      id v26 = (void *)sub_186A1F2BC();
      objc_msgSend(v19, sel__setSwiftBridgingCustomState_forKey_, v26, v35);

      uint64_t result = sub_18590CE8C((uint64_t)&v46);
      if (v23) {
        goto LABEL_10;
      }
LABEL_12:
      int64_t v32 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v32 < v45)
      {
        unint64_t v33 = *(void *)(v43 + 8 * v32);
        if (v33) {
          goto LABEL_15;
        }
        int64_t v34 = v25 + 2;
        ++v25;
        if (v32 + 1 < v45)
        {
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (v33) {
            goto LABEL_18;
          }
          int64_t v25 = v32 + 1;
          if (v32 + 2 < v45)
          {
            unint64_t v33 = *(void *)(v43 + 8 * (v32 + 2));
            if (v33)
            {
              v32 += 2;
              goto LABEL_15;
            }
            int64_t v34 = v32 + 3;
            int64_t v25 = v32 + 2;
            if (v32 + 3 < v45) {
              break;
            }
          }
        }
      }
LABEL_29:
      unint64_t v23 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      long long v46 = 0u;
    }
    unint64_t v33 = *(void *)(v43 + 8 * v34);
    if (v33)
    {
LABEL_18:
      int64_t v32 = v34;
LABEL_15:
      unint64_t v23 = (v33 - 1) & v33;
      unint64_t v28 = __clz(__rbit64(v33)) + (v32 << 6);
      int64_t v25 = v32;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v45)
    {
      int64_t v25 = v45 - 1;
      goto LABEL_29;
    }
    unint64_t v33 = *(void *)(v43 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_15;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1854E9A30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

uint64_t type metadata accessor for _UICustomContentView()
{
  return self;
}

uint64_t sub_1854EA9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18557236C(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_185572F74);
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

{
  return (*(uint64_t (**)(void))(a6 + 136))();
}

{
  return (*(uint64_t (**)(void))(a6 + 184))();
}

{
  return (*(uint64_t (**)(void))(a6 + 208))();
}

{
  return (*(uint64_t (**)(void))(a6 + 232))();
}

{
  return (*(uint64_t (**)(void))(a6 + 256))();
}

{
  return (*(uint64_t (**)(void))(a6 + 280))();
}

void __swiftcall UICellConfigurationState._bridgeToObjectiveC()(UICellConfigurationState *__return_ptr retstr)
{
}

uint64_t UICellConfigurationState.init(traitCollection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3A0], 8) = 0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(a2 + 13) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 24) = v2;
  *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3A0], 8) = 1;
  return result;
}

void _UIViewSetInteractionTintColor(void *a1, void *a2)
{
  id object = a1;
  id v3 = a2;
  uint64_t v4 = object;
  uint64_t v6 = *((void *)object + 12);
  int v7 = *((_DWORD *)object + 28);
  if (v3)
  {
    uint64_t v8 = 256;
  }
  else
  {
    if ((v6 & 0x100) == 0) {
      goto LABEL_6;
    }
    uint64_t v8 = 0;
    uint64_t v4 = object;
  }
  uint64_t v5 = *((void *)object + 13);
  *((void *)object + 12) = v8 | v6 & 0xFFFFFFFFFFFFFEFFLL;
  *((void *)object + 13) = v5;
  *((_DWORD *)object + 2_Block_object_dispose(&STACK[0x3A0], 8) = v7;
  objc_setAssociatedObject(v4, &_UIViewInteractionTintColorKey, v3, (void *)1);
LABEL_6:
}

uint64_t TaggingAppearanceObjectSetterIMP(void *a1, const char *a2, uint64_t a3)
{
  _UIAppearanceTagObjectForSelector(a1, a2, 0);
  PushNextClassForSettingIMP(a1, a2);
  IMP v6 = CurrentOrginalSettingIMP(a1, a2);
  ((void (*)(void *, const char *, uint64_t))v6)(a1, a2, a3);
  id AssociatedObject = objc_getAssociatedObject(a1, &unk_1EB260D5A);
  uint64_t v8 = (void *)[AssociatedObject objectForKey:NSStringFromSelector(a2)];
  return [v8 removeLastObject];
}

IMP CurrentOrginalSettingIMP(void *a1, const char *a2)
{
  id AssociatedObject = objc_getAssociatedObject(a1, &unk_1EB260D5A);
  uint64_t v4 = (void *)[AssociatedObject objectForKey:NSStringFromSelector(a2)];
  if (![v4 count])
  {
    unsigned __int8 v9 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "IMP CurrentOrginalSettingIMP(id, SEL)"), @"UIAppearance.m", 773, @"Exercised class for selector implementation needs to be pushed");
  }
  uint64_t v5 = (objc_class *)[v4 lastObject];
  IMP v6 = NSStringFromSelector(a2);
  int v7 = UIAppearancePrefixedSelectorForSelectorString(v6);
  return class_getMethodImplementation(v5, v7);
}

void *_UIAppearanceTagObjectForSelector(void *result, const char *a2, void *a3)
{
  if ((__isObjectTaggingEnabled & 1) == 0)
  {
    uint64_t v5 = result;
    id AssociatedObject = objc_getAssociatedObject(result, &_UIAppearanceCustomizedSelectorsAssociationKey);
    if (!AssociatedObject)
    {
      id AssociatedObject = objc_alloc_init(MEMORY[0x1E4F1CA80]);
      objc_setAssociatedObject(v5, &_UIAppearanceCustomizedSelectorsAssociationKey, AssociatedObject, (void *)1);
    }
    int v7 = TagForSelectorWithAxes(a2, a3);
    return (void *)[AssociatedObject addObject:v7];
  }
  return result;
}

NSString *TagForSelectorWithAxes(const char *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v3 = NSStringFromSelector(a1);
  if ([(NSString *)v3 characterAtIndex:0] == 95) {
    id v3 = [(NSString *)v3 substringFromIndex:1];
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v4 = [a2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(a2);
        }
        id v3 = [(NSString *)v3 stringByAppendingFormat:@"%@,", *(void *)(*((void *)&v9 + 1) + 8 * v7++)];
      }
      while (v5 != v7);
      uint64_t v5 = [a2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
  return v3;
}

uint64_t _UILightWeightMaterialsEnabled(uint64_t a1)
{
  if (a1 != 6) {
    return 0;
  }
  if (_UIIsPrivateMainBundle())
  {
    uint64_t v1 = (int *)&unk_1EB257B10;
    uint64_t v2 = @"LightweightMaterialBackgroundsInternallyEnabled";
  }
  else
  {
    uint64_t v1 = (int *)&_MergedGlobals_320;
    uint64_t v2 = @"LightweightMaterialBackgroundsExternallyEnabled";
  }
  LODWORD(result) = _UIInternalPreferenceUsesDefault(v1, (uint64_t)v2, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  if (*((unsigned char *)v1 + 4)) {
    return 1;
  }
  else {
    return result;
  }
}

void sub_1854EE1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1854EE260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL UISearchBarUsesModernAppearance()
{
  if (qword_1EB25D028 != -1) {
    dispatch_once(&qword_1EB25D028, &__block_literal_global_67);
  }
  return _MergedGlobals_17 && byte_1EB25D019 == 0;
}

double _UITableCellLineHeightCenteredImageInRect(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11 = a1;
  long long v12 = _UITableCellFontForImage(v11);
  [v11 size];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  [v11 baselineOffsetFromBottom];
  double v18 = v17;

  double v19 = _UITableCellLineHeightCenteredSizeWithBaselineInRect(v12, v14, v16, v18, a2, a3, a4, a5, a6);
  return v19;
}

id _UITableCellFontForImage(void *a1)
{
  uint64_t v1 = [a1 symbolConfiguration];
  uint64_t v2 = v1;
  if (v1)
  {
    if (v1[10])
    {
      id v3 = [v1 textStyle];
      uint64_t v4 = [off_1E52D39B8 preferredFontForTextStyle:v3];
    }
    else
    {
      double v6 = 0.0;
      [v1 _deriveGlyphSize:0 weight:0 pointSize:&v6];
      uint64_t v4 = [off_1E52D39B8 systemFontOfSize:v6];
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

double _UITableCellLineHeightCenteredSizeWithBaselineInRect(void *a1, CGFloat a2, CGFloat a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  id v15 = a1;
  CGFloat v16 = +[UIScreen mainScreen];
  [v16 scale];
  double v38 = v17;

  id v18 = v15;
  double v19 = v18;
  if (v18)
  {
    objc_msgSend(v18, "lineHeight", *(void *)&v38);
    double v21 = v20;
    [v19 ascender];
    double v23 = v22 - (a3 - a4);
  }
  else
  {
    double v23 = 0.0;
    double v21 = a3;
  }

  v44.origin.double x = a6;
  v44.origin.double y = a7;
  v44.size.CGFloat width = a8;
  v44.size.CGFloat height = a9;
  double MinX = CGRectGetMinX(v44);
  v45.origin.double x = a6;
  v45.origin.double y = a7;
  v45.size.CGFloat width = a8;
  v45.size.CGFloat height = a9;
  double v25 = MinX + (CGRectGetWidth(v45) - a2) * 0.5;
  v46.origin.double x = a6;
  v46.origin.double y = a7;
  v46.size.CGFloat width = a8;
  v46.size.CGFloat height = a9;
  double v26 = v23 + CGRectGetMinY(v46);
  v47.origin.double x = a6;
  v47.origin.double y = a7;
  v47.size.CGFloat width = a8;
  v47.size.CGFloat height = a9;
  double v27 = v26 + (CGRectGetHeight(v47) - v21) * 0.5;
  if (fabs(a5 + -1.0) >= 2.22044605e-16)
  {
    memset(&v43, 0, sizeof(v43));
    v48.origin.double x = a6;
    v48.origin.double y = a7;
    v48.size.CGFloat width = a8;
    v48.size.CGFloat height = a9;
    CGFloat MidX = CGRectGetMidX(v48);
    v49.origin.double x = a6;
    v49.origin.double y = a7;
    v49.size.CGFloat width = a8;
    v49.size.CGFloat height = a9;
    CGFloat MidY = CGRectGetMidY(v49);
    CGAffineTransformMakeTranslation(&v43, MidX, MidY);
    CGAffineTransform v41 = v43;
    CGAffineTransformScale(&v42, &v41, a5, a5);
    CGAffineTransform v43 = v42;
    v50.origin.double x = a6;
    v50.origin.double y = a7;
    v50.size.CGFloat width = a8;
    v50.size.CGFloat height = a9;
    CGFloat v32 = -CGRectGetMidX(v50);
    v51.origin.double x = a6;
    v51.origin.double y = a7;
    v51.size.CGFloat width = a8;
    v51.size.CGFloat height = a9;
    CGFloat v33 = CGRectGetMidY(v51);
    CGAffineTransform v41 = v43;
    CGAffineTransformTranslate(&v42, &v41, v32, -v33);
    CGAffineTransform v43 = v42;
    v52.origin.double x = v25;
    v52.origin.double y = v27;
    v52.size.CGFloat width = a2;
    v52.size.CGFloat height = a3;
    *(CGRect *)(&v29 - 2) = CGRectApplyAffineTransform(v52, &v42);
    double v25 = v34;
    double v27 = v35;
  }
  else
  {
    double v28 = a3;
    double v29 = a2;
  }
  double v36 = UIRectIntegralWithScale(v25, v27, v29, v28, v38);

  return v36;
}

BOOL _UITableCellShouldCenterImageHorizontallyForTraitCollection(void *a1, void *a2)
{
  id v3 = a2;
  if ([a1 isSymbolImage]) {
    BOOL v4 = _UITableCellSupportsHorizontalCenteringBehaviorForTraitCollection(v3);
  }
  else {
    BOOL v4 = 0;
  }

  return v4;
}

uint64_t ShouldSizeLeftOrRightViewToFit(void *a1)
{
  id v1 = a1;
  if (dyld_program_sdk_at_least())
  {
    uint64_t v2 = 1;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v3 = [v1 image];
      uint64_t v2 = [v3 isSymbolImage];
    }
    else
    {
      uint64_t v2 = 0;
    }
  }

  return v2;
}

id _UIFallbackViewOfClassForReusableView(uint64_t a1, void *a2)
{
  uint64_t v2 = (id)[a2 superview];
  if (v2)
  {
    id v3 = v2;
    while ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v3 = (id)[v3 superview];
      if (!v3) {
        goto LABEL_5;
      }
    }
    if ((v3[12] & 0x1000) != 0) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = v3;
    }
    id v4 = v5;
  }
  else
  {
LABEL_5:
    if (pthread_main_np() == 1)
    {
      _UIGetCurrentFallbackView();
      id v4 = (id)objc_claimAutoreleasedReturnValue();
      if (objc_opt_isKindOfClass()) {
        goto LABEL_13;
      }
    }
    id v4 = 0;
  }
LABEL_13:
  return v4;
}

uint64_t _UIGetCurrentFallbackView()
{
  if (pthread_main_np() != 1)
  {
    id v3 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "UIView * _Nullable _UIGetCurrentFallbackView(void)"), @"_UIFallbackEnvironment_NonARC.m", 142, @"The current fallback environment can only be used from the main thread.");
  }
  if (!dyld_program_sdk_at_least()) {
    goto LABEL_11;
  }
  uint64_t v0 = (UIScreen *)qword_1EB261428;
  if (qword_1EB261428) {
    goto LABEL_12;
  }
  if (!dyld_program_sdk_at_least()) {
    goto LABEL_11;
  }
  if (_UIInternalPreferencesRevisionOnce != -1) {
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
  }
  int v1 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar >= 1)
  {
    int v4 = _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment;
    if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment)
    {
      while (v1 >= v4)
      {
        _UIInternalPreferenceSync(v1, &_UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment, @"UseMostActiveWindowSceneAsBaseFallbackEnvironment", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        int v4 = _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment;
        if (v1 == _UIInternalPreference_UseMostActiveWindowSceneAsBaseFallbackEnvironment) {
          goto LABEL_9;
        }
      }
      if (!byte_1EB25761C) {
        goto LABEL_11;
      }
    }
  }
LABEL_9:
  uint64_t v0 = (UIScreen *)__cachedMostActiveWindowScene;
  if (!__cachedMostActiveWindowScene)
  {
    uint64_t v0 = +[_UISceneLifecycleMultiplexer mostActiveSceneWithTest:&__block_literal_global_296];
    __cachedMostActiveWindowScene = (uint64_t)v0;
    if (!v0) {
LABEL_11:
    }
      uint64_t v0 = +[UIScreen mainScreen];
  }
LABEL_12:
  uint64_t result = _viewForFallbackEnvironment(v0);
  if (result)
  {
    if ((*(void *)(result + 96) & 0x1000) != 0) {
      return 0;
    }
  }
  return result;
}

uint64_t _viewForFallbackEnvironment(void *a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    return (uint64_t)a1;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_5;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  uint64_t result = objc_msgSend((id)objc_msgSend(a1, "presentedViewController"), "viewIfLoaded");
  if (!result)
  {
    a1 = (void *)[a1 presentingViewController];
LABEL_5:
    return [a1 viewIfLoaded];
  }
  return result;
}

uint64_t _UITableViewCellTextLabelUsesLeadingLayoutMargin()
{
  if (qword_1EB25C790 != -1) {
    dispatch_once(&qword_1EB25C790, &__block_literal_global_6_17);
  }
  return byte_1EB25C781;
}

uint64_t _truncatedDebuggingDescriptionForLayout(void *a1)
{
  if (UILayoutConstraintDebuggingMaximumLayoutDescriptionLength_onceToken != -1) {
    dispatch_once(&UILayoutConstraintDebuggingMaximumLayoutDescriptionLength_onceToken, &__block_literal_global_1098_0);
  }
  unint64_t v2 = UILayoutConstraintDebuggingMaximumLayoutDescriptionLength_maxLength;
  if ([a1 length] <= v2) {
    return (uint64_t)a1;
  }
  id v3 = (void *)[a1 substringToIndex:v2];
  return [v3 stringByAppendingString:@"..."];
}

unsigned char *sub_1854F2AA0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

void __defaultConfiguration_block_invoke()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  makeProfilePath("Default", v6);
  if (access(v6, 0))
  {
    if ((MGGetBoolAnswer() & 1) == 0)
    {
      dispatch_time_t v0 = dispatch_time(0, 30000000000);
      int v1 = dispatch_get_global_queue(17, 0);
      dispatch_after(v0, v1, &__block_literal_global_18_3);
    }
  }
  if (!_UIInternalPreferenceUsesDefault(&_UIInternalPreference_UpdateCycleCompatibility, @"UpdateCycleCompatibility", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool))
  {
    if (!byte_1EB2577A4) {
      goto LABEL_6;
    }
LABEL_8:
    unint64_t v2 = _UIMainBundleIdentifier();
    char v3 = [&unk_1ED3F0C88 containsObject:v2];

    byte_1EB26218A = v3 ^ 1;
    if (v3) {
      return;
    }
    goto LABEL_9;
  }
  if ((dyld_program_sdk_at_least() & 1) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  byte_1EB26218A = 1;
LABEL_9:
  int v4 = [MEMORY[0x1E4F39B60] mainDisplay];
  char v5 = [v4 supportsVariableFrameDuration];

  byte_1EB26218B = v5;
}

uint64_t _UIUpdateInputTimingProfileLoad(const char *a1, uint64_t a2)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a2 + 4;
  makeProfilePath(a1, (char *)(a2 + 4));
  char v5 = (void *)MEMORY[0x1E4F1C9B8];
  double v6 = [NSString stringWithUTF8String:v4];
  uint64_t v7 = [v5 dataWithContentsOfFile:v6];

  *(_DWORD *)a2 = v7 == 0;
  if (!v7)
  {
    id v11 = 0;
LABEL_46:

    return (uint64_t)v11;
  }
  unsigned __int8 v41 = 0;
  uint64_t v8 = [MEMORY[0x1E4F28F98] propertyListWithData:v7 options:0 format:0 error:0];
  if (!v8)
  {
    uint64_t v8 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v7 options:0 error:0];
    if (!v8)
    {
      id v11 = 0;
LABEL_44:
      int v28 = 2;
LABEL_45:
      *(_DWORD *)a2 = v28;
      goto LABEL_46;
    }
  }
  long long v9 = profileDictionaryValue(v8, &v41);

  if (!v9)
  {
    int v27 = v41;

    id v11 = 0;
    if (v27) {
      int v28 = 2;
    }
    else {
      int v28 = 1;
    }
    goto LABEL_45;
  }
  long long v10 = [v8 objectForKeyedSubscript:@"Profiles"];
  id v11 = profileDictionaryValue(v10, &v41);

  if (!v11)
  {
LABEL_43:

    int v37 = v41;
    if (!v37)
    {
      if (v11) {
        goto LABEL_46;
      }
      int v28 = 1;
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  long long v12 = [NSString stringWithUTF8String:a1];
  double v13 = [v10 objectForKeyedSubscript:v12];
  CGFloat v14 = profileDictionaryValue(v13, &v41);

  id v11 = profileDictionaryValue(v14, &v41);

  if (!v11)
  {
LABEL_42:

    goto LABEL_43;
  }
  id v15 = [v14 objectForKeyedSubscript:@"Ready"];
  CGFloat v16 = profileDictionaryValue(v15, &v41);

  double v17 = [v14 objectForKeyedSubscript:@"ReadyExpecting"];
  id v18 = profileDictionaryValue(v17, &v41);

  if (v16) {
    uint64_t v19 = 13;
  }
  else {
    uint64_t v19 = 11;
  }
  if (v18) {
    size_t v20 = v19 * 8 + 16;
  }
  else {
    size_t v20 = v19 * 8;
  }
  double v21 = malloc_type_calloc(1uLL, v20, 0x13F0F44FuLL);
  if (v21)
  {
    id v11 = v21;
    if (v16) {
      v21[9] = v21 + 11;
    }
    if (v18) {
      v21[10] = &v21[v19];
    }
    double v22 = [v14 objectForKeyedSubscript:@"Latency"];
    *id v11 = profileDurationValue(v22, &v41);

    double v23 = [v14 objectForKeyedSubscript:@"TimestampAdjustment"];
    v11[1] = profileDurationValue(v23, &v41);

    uint64_t v24 = [v14 objectForKeyedSubscript:@"TimestampConfidence"];
    v11[2] = profileDurationValue(v24, &v41);

    uint64_t v25 = [v14 objectForKeyedSubscript:@"LowLatency"];
    double v26 = (void *)v25;
    if (v25)
    {
      LODWORD(v25) = _NSIsNSNumber();
      if (v25) {
        LOBYTE(v25) = [v26 BOOLValue];
      }
      else {
        unsigned __int8 v41 = 1;
      }
    }
    *((unsigned char *)v11 + 24) = v25;

    double v29 = [v14 objectForKeyedSubscript:@"LowLatencyAlignmentShift"];
    void v11[4] = profileDurationValue(v29, &v41);

    char v30 = [v14 objectForKeyedSubscript:@"LowLatencyReadyShift"];
    v11[5] = profileDurationValue(v30, &v41);

    uint64_t v31 = [v14 objectForKeyedSubscript:@"UseNextEventInformation"];
    CGFloat v32 = (void *)v31;
    if (v31)
    {
      LODWORD(v31) = _NSIsNSNumber();
      if (v31) {
        LOBYTE(v31) = [v32 BOOLValue];
      }
      else {
        unsigned __int8 v41 = 1;
      }
    }
    *((unsigned char *)v11 + 4_Block_object_dispose(&STACK[0x3A0], 8) = v31;

    if (*((unsigned char *)v11 + 48))
    {
      CGFloat v33 = [v14 objectForKeyedSubscript:@"Period"];
      v11[7] = profileDurationValue(v33, &v41);

      double v34 = [v14 objectForKeyedSubscript:@"SendPeriod"];
      double v35 = v34;
      if (v34) {
        unint64_t v36 = profileDurationValue(v34, &v41);
      }
      else {
        unint64_t v36 = v11[7];
      }
      _OWORD v11[8] = v36;
    }
    if (v16)
    {
      setReadyProfile(v11[9], v16, &v41);
      if (!v18)
      {
        v11[10] = v11[9];
LABEL_41:

        goto LABEL_42;
      }
    }
    else if (!v18)
    {
      goto LABEL_41;
    }
    setReadyProfile(v11[10], v18, &v41);
    goto LABEL_41;
  }
  uint64_t v42 = 0;
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v49 = 0u;
  os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR);
  unsigned int v39 = __error();
  unsigned int v40 = strerror(*v39);
  int v43 = 136315650;
  uint64_t v44 = 0;
  __int16 v45 = 2048;
  size_t v46 = v20;
  __int16 v47 = 2080;
  CGRect v48 = v40;
  _os_log_send_and_compose_impl();
  uint64_t result = _os_crash_msg();
  __break(1u);
  return result;
}

unint64_t profileDurationValue(void *a1, unsigned char *a2)
{
  if (!a1) {
    return 0;
  }
  if (!_NSIsNSNumber())
  {
    *a2 = 1;
    return 0;
  }
  [a1 doubleValue];
  return _UIMachDurationForMediaDuration(v4);
}

id profileDictionaryValue(id a1, unsigned char *a2)
{
  if (a1)
  {
    double v4 = a1;
    if (_NSIsNSDictionary())
    {
      a1 = v4;
    }
    else
    {
      a1 = 0;
      *a2 = 1;
    }
    uint64_t v2 = vars8;
  }
  return a1;
}

char *makeProfilePath(const char *a1, char *a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  memset(v6, 0, sizeof(v6));
  size_t v5 = 32;
  if (sysctlbyname("hw.targettype", v6, &v5, 0, 0)
    || snprintf(a2, 0x400uLL, "%s/%s.%s.plist", "/System/Library/EventTimingProfiles", (const char *)v6, a1) >= 0x400)
  {
    abort();
  }
  return a2;
}

void setReadyProfile(uint64_t a1, void *a2, unsigned char *a3)
{
  double v6 = [a2 objectForKeyedSubscript:@"ReceiveDeadline"];
  *(void *)a1 = profileDurationValue(v6, a3);

  uint64_t v7 = [a2 objectForKeyedSubscript:@"UseNextEventInformation"];
  uint64_t v8 = (void *)v7;
  if (v7)
  {
    long long v9 = (void *)v7;
    LODWORD(v7) = _NSIsNSNumber();
    if (v7) {
      LOBYTE(v7) = [v9 BOOLValue];
    }
    else {
      *a3 = 1;
    }
    uint64_t v8 = v9;
  }
  *(unsigned char *)(a1 + _Block_object_dispose(&STACK[0x3A0], 8) = v7;
}

void _UIUpdateSchedulerStart(uint64_t a1)
{
  uint64_t v2 = (char *)malloc_type_calloc(1uLL, 0x300uLL, 0x10F0040D30C5117uLL);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3A0], 8) = v2;
  *(void *)uint64_t v2 = a1;
  *((void *)v2 + 92) = _UIMachDurationForMediaDuration(0.0166666667);
  *((void *)v2 + 90) = -1;
  *((void *)v2 + 93) = _UIMachDurationForMediaDuration(0.00208333333);
  *((void *)v2 + 94) = _UIMachDurationForMediaDuration(0.000431034483);
  Current = CFRunLoopGetCurrent();
  *((void *)v2 + 1) = Current;
  memset(&context, 0, sizeof(context));
  context.info = *(void **)v2;
  double v4 = CFRunLoopObserverCreate(0, 0x20uLL, 1u, 2147418112, (CFRunLoopObserverCallBack)runloopObserverCallback, &context);
  CFStringRef v5 = (const __CFString *)*MEMORY[0x1E4F1D410];
  CFRunLoopAddObserver(Current, v4, (CFRunLoopMode)*MEMORY[0x1E4F1D410]);
  *((void *)v2 + 3) = v4;
  v16.version = 0;
  memset(&v16.retain, 0, 56);
  v16.info = v2;
  v16.perforCGAffineTransform m = (void (__cdecl *)(void *))runloopSourceCallback;
  double v6 = CFRunLoopSourceCreate(0, 0, &v16);
  CFRunLoopAddSource(Current, v6, v5);
  *((void *)v2 + 2) = v6;
  _UIMachTimerInit((void *)v2 + 4, (uint64_t)runloopTimerCallback, *(void *)v2, 0);
  CFRunLoopAddSource(*((CFRunLoopRef *)v2 + 1), *((CFRunLoopSourceRef *)v2 + 6), v5);
  *((void *)v2 + 9) = -1;
  uint64_t v7 = *(void **)v2;
  unk_1EB265700 = requestRegistrySignaledCallback;
  unk_1EB265708 = v7;
  *((void *)v2 + 10) = &mainGroup;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 8_Block_object_dispose(&STACK[0x3A0], 8) = 0u;
  *((_DWORD *)v2 + 30) = 2;
  *(void *)(v2 + 137) = 0;
  *(void *)(v2 + 124) = 0;
  *(void *)(v2 + 132) = 0;
  *((_DWORD *)v2 + 43) = 0;
  *(void *)(v2 + 156) = 0;
  *(void *)(v2 + 164) = 0;
  *(void *)(v2 + 14_Block_object_dispose(&STACK[0x3A0], 8) = 0;
  _UIUpdateInputGroupAddInputSet((uint64_t)&mainGroup, (uint64_t)&commonSet);
  _UIUpdateInputGroupAddInputSet((uint64_t)&mainGroup, (uint64_t)(v2 + 80));
  *((void *)v2 + 22) = 0;
  *((void *)v2 + 23) = &mainGroup;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((void *)v2 + 2_Block_object_dispose(&STACK[0x3A0], 8) = 2;
  *((_DWORD *)v2 + 5_Block_object_dispose(&STACK[0x3A0], 8) = 2;
  *((void *)v2 + 30) = &commonSet;
  *((void *)v2 + 31) = v2 + 80;
  *((_DWORD *)v2 + 8_Block_object_dispose(&STACK[0x3A0], 8) = 2 * ([MEMORY[0x1E4F39CF8] currentState] != 0);
  *((void *)v2 + 45) = 0;
  *((void *)v2 + 46) = -1;
  *((_DWORD *)v2 + 94) = 0;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *((_OWORD *)v2 + 26) = 0u;
  *((void *)v2 + 54) = 0;
  *((void *)v2 + 55) = "ImplicitTransaction";
  *((_DWORD *)v2 + 112) = 0;
  *((void *)v2 + 57) = 0;
  *((void *)v2 + 5_Block_object_dispose(&STACK[0x3A0], 8) = 0;
  *((_DWORD *)v2 + 11_Block_object_dispose(&STACK[0x3A0], 8) = 0;
  *((_OWORD *)v2 + 30) = 0u;
  *((_OWORD *)v2 + 31) = 0u;
  *((void *)v2 + 64) = 0;
  *((void *)v2 + 67) = "DisplayLinks";
  *((void *)v2 + 66) = v2;
  *((void *)v2 + 65) = inputDisplayLinksReadyForModelTimeCallback;
  *((_DWORD *)v2 + 64) = 2 * (dword_1EB2656EC != 0);
  *((void *)v2 + 33) = 0;
  *((void *)v2 + 34) = -1;
  *((_DWORD *)v2 + 70) = 0;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 1_Block_object_dispose(&STACK[0x3A0], 8) = 0u;
  *((void *)v2 + 42) = 0;
  *((void *)v2 + 43) = "ForceUpdates";
  _UIUpdateInputSetAddInput((uint64_t)(v2 + 80), (void *)v2 + 44);
  _UIUpdateInputSetAddInput((uint64_t)(v2 + 80), (void *)v2 + 56);
  _UIUpdateInputSetAddInput((uint64_t)(v2 + 80), (void *)v2 + 32);
  uint64_t v8 = *(void **)v2;
  int v9 = dword_1EB256B98;
  if (qword_1EB256BA8) {
    int v9 = dword_1EB256B98 + 1;
  }
  dword_1EB256B98 = v9 - 1;
  qword_1EB256BA8 = (uint64_t)inputGroupSignaledCallback;
  unk_1EB256BB0 = v8;
  v16.version = MEMORY[0x1E4F143A8];
  v16.info = (void *)3221225472;
  v16.retain = (const void *(__cdecl *)(const void *))__setupCA_block_invoke;
  v16.release = (void (__cdecl *)(const void *))&__block_descriptor_40_e16_B16__0r____QQI_8l;
  v16.copyDescription = (CFStringRef (__cdecl *)(const void *))v2;
  [MEMORY[0x1E4F39B68] setWillFireHandler:&v16];
  context.version = MEMORY[0x1E4F143A8];
  context.info = (void *)3221225472;
  context.retain = (const void *(__cdecl *)(const void *))__setupCA_block_invoke_2;
  context.release = (void (__cdecl *)(const void *))&__block_descriptor_40_e5_v8__0l;
  context.copyDescription = (CFStringRef (__cdecl *)(const void *))v2;
  [MEMORY[0x1E4F39CF8] setImplicitTransactionDidBeginHandler:&context];
  [MEMORY[0x1E4F39CF8] setDisableRunLoopObserverCommits:1];
  [MEMORY[0x1E4F39CF8] setDefaultDisableRunLoopObserverCommits:1];
  if (objc_opt_respondsToSelector()) {
    [MEMORY[0x1E4F39CF8] enableUpdateCycleSupport];
  }
  LocalCenter = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"UISceneWillEnterForegroundNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"UISceneDidEnterBackgroundNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"UISceneDidDisconnectNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"UIWindowDidBecomeVisibleNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"UIWindowDidBecomeHiddenNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, _UIWindowDidDetachContextNotification, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"_UIWindowDidMoveToSceneNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CFNotificationCenterAddObserver(LocalCenter, *(const void **)v2, (CFNotificationCallback)targetListChangeNotificationCallback, @"_UIWindowHostingSceneDidMoveToScreenNotification", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  *((void *)v2 + 6_Block_object_dispose(&STACK[0x3A0], 8) = 0;
  id v11 = (void *)qword_1EB256CC0;
  qword_1EB256CB8 = (uint64_t)v2;
  qword_1EB256CC0 = (uint64_t)&__block_literal_global_407;

  long long v12 = (void *)qword_1EB256C90;
  qword_1EB256C88 = (uint64_t)v2;
  qword_1EB256C90 = (uint64_t)&__block_literal_global_26_4;

  double v13 = (void *)qword_1EB256B58;
  qword_1EB256B50 = (uint64_t)v2;
  qword_1EB256B58 = (uint64_t)&__block_literal_global_28_4;

  CGFloat v14 = *(_DWORD **)v2;
  int v15 = *(_DWORD *)(*(void *)v2 + 4) | 6;
  *CGFloat v14 = 2;
  v14[1] = v15;
  CFRunLoopSourceSignal(*((CFRunLoopSourceRef *)v2 + 2));
  CFRunLoopWakeUp(*((CFRunLoopRef *)v2 + 1));
}

uint64_t _UIUpdateInputSetAddInput(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 72);
  ++*(_DWORD *)(a1 + 68);
  *(unsigned char *)(a1 + 64) = 1;
  *(_DWORD *)(a1 + 40) = 2;
  a2[7] = v2;
  if (v2) {
    *(void *)(v2 + 64) = a2 + 7;
  }
  *(void *)(a1 + 72) = a2;
  a2[8] = a1 + 72;
  a2[6] = a1;
  uint64_t result = *(void *)a1;
  ++*(void *)(result + 16);
  int v4 = *(_DWORD *)result | 1;
  if (*(_DWORD *)result != v4)
  {
    *(_DWORD *)uint64_t result = v4;
    if (!*(_DWORD *)(result + 8)) {
      return (*(uint64_t (**)(uint64_t, void))(result + 24))(result, *(void *)(result + 32));
    }
  }
  return result;
}

uint64_t _UIUpdateInputGroupAddInputSet(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 40);
  *(void *)(a2 + 80) = v2;
  if (v2) {
    *(void *)(v2 + 8_Block_object_dispose(&STACK[0x3A0], 8) = a2 + 80;
  }
  *(void *)(result + 40) = a2;
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x3A0], 8) = result + 40;
  ++*(void *)(result + 16);
  int v3 = *(_DWORD *)result | 1;
  if (*(_DWORD *)result != v3)
  {
    *(_DWORD *)uint64_t result = v3;
    if (!*(_DWORD *)(result + 8)) {
      return (*(uint64_t (**)(uint64_t, void))(result + 24))(result, *(void *)(result + 32));
    }
  }
  return result;
}

uint64_t _UIMachTimerInit(void *a1, uint64_t a2, uint64_t a3, CFIndex a4)
{
  a1[4] = 0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  mach_port_t v8 = mk_timer_create();
  *(_DWORD *)a1 = v8;
  if (v8
    && (context.version = 1,
        context.info = a1,
        memset(&context.retain, 0, 24),
        int v9 = CFMachPortCreateWithPort((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v8, (CFMachPortCallBack)runloopCallback, &context, 0), (a1[1] = v9) != 0)&& (RunLoopSource = CFMachPortCreateRunLoopSource(0, v9, a4), (a1[2] = RunLoopSource) != 0))
  {
    a1[3] = a2;
    a1[4] = a3;
    return 1;
  }
  else
  {
    long long v12 = (__CFRunLoopSource *)a1[2];
    if (v12)
    {
      CFRunLoopSourceInvalidate(v12);
      CFRelease((CFTypeRef)a1[2]);
    }
    double v13 = (__CFMachPort *)a1[1];
    if (v13)
    {
      CFMachPortInvalidate(v13);
      CFRelease((CFTypeRef)a1[1]);
    }
    uint64_t result = *(unsigned int *)a1;
    if (result)
    {
      mk_timer_cancel();
      mk_timer_destroy();
      return 0;
    }
  }
  return result;
}

void _UICoreMaterialUpdateVibrancyEffectDescriptor(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  int v9 = _convertStyleToRecipe(a1, v8);
  uint64_t v10 = [v8 reducedTransperancy];

  _lookupVibrancyEffectDescription(v9, a2, v10);
  id v11 = (id)objc_claimAutoreleasedReturnValue();

  _UICoreMaterialUpdateVibrancyEffectDescriptorInternal(v11, v7);
}

id _lookupVibrancyEffectDescription(void *a1, unint64_t a2, uint64_t a3)
{
  v19[2] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = (id)*MEMORY[0x1E4F5C330];
  if (a2 <= 7)
  {
    id v7 = **((id **)&unk_1E52FBC08 + a2);

    id v6 = v7;
  }
  id v8 = (id)*MEMORY[0x1E4F5C328];
  if (a2 <= 7)
  {
    id v9 = **((id **)&unk_1E52FBC48 + a2);

    id v8 = v9;
  }
  uint64_t v10 = 0;
  if (v5)
  {
    if (v6 && v8 != 0)
    {
      long long v12 = [[_UIVibrancyStyleKey alloc] initWithRecipe:v5 vibrancyStyle:a2 category:v8];
      uint64_t v10 = [0 objectForKeyedSubscript:v12];
      if (v10) {
        goto LABEL_12;
      }
      uint64_t v13 = *MEMORY[0x1E4F5C358];
      v18[0] = *MEMORY[0x1E4F5C350];
      v18[1] = v13;
      v19[0] = MEMORY[0x1E4F1CC38];
      CGFloat v14 = [NSNumber numberWithBool:a3];
      v19[1] = v14;
      int v15 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v19 forKeys:v18 count:2];

      uint64_t v10 = MTVisualStylingCreateDictionaryRepresentation();

      if (v10)
      {
LABEL_12:
        CFRunLoopSourceContext v16 = [MEMORY[0x1E4F1CA60] dictionaryWithObject:v10 forKey:v12];
      }
      else
      {
        CFRunLoopSourceContext v16 = 0;
      }
    }
  }

  return v10;
}

void _UICoreMaterialUpdateVibrancyEffectDescriptorInternal(void *a1, void *a2)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v36 = a2;
  double v35 = v3;
  [v3 objectForKeyedSubscript:@"filters"];
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v4 = [obj countByEnumeratingWithState:&v38 objects:v44 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v39;
    uint64_t v7 = *MEMORY[0x1E4F3A350];
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v39 != v6) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v38 + 1) + 8 * v8);
        uint64_t v10 = [v9 objectForKeyedSubscript:@"type"];
        if ([v10 isEqualToString:v7])
        {
          _addColorMatrix(v36, v9, 1);
        }
        else if (os_variant_has_internal_diagnostics())
        {
          long long v12 = __UIFaultDebugAssertLog();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 138412290;
            int v43 = v10;
            _os_log_fault_impl(&dword_1853B0000, v12, OS_LOG_TYPE_FAULT, "CoreMaterial description for vibrancy effect returned unknown filterType %@", buf, 0xCu);
          }
        }
        else
        {
          id v11 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UICoreMaterialUpdateVibrancyEffectDescriptorInternal___s_category)+ 8);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            int v43 = v10;
            _os_log_impl(&dword_1853B0000, v11, OS_LOG_TYPE_ERROR, "CoreMaterial description for vibrancy effect returned unknown filterType %@", buf, 0xCu);
          }
        }

        ++v8;
      }
      while (v5 != v8);
      uint64_t v13 = [obj countByEnumeratingWithState:&v38 objects:v44 count:16];
      uint64_t v5 = v13;
    }
    while (v13);
  }
  CGFloat v14 = [v35 objectForKeyedSubscript:@"tintColor"];
  int v15 = v14;
  if (v14)
  {
    id v16 = v14;
    double v17 = [v16 objectForKeyedSubscript:@"alpha"];
    if (v17)
    {
      id v18 = [v16 objectForKeyedSubscript:@"white"];
      if (v18)
      {
        uint64_t v19 = v18;
        [v18 doubleValue];
        double v21 = v20;
        [v17 doubleValue];
        double v23 = +[UIColor colorWithWhite:v21 alpha:v22];
      }
      else
      {
        uint64_t v19 = [v16 objectForKeyedSubscript:@"red"];
        uint64_t v24 = [v16 objectForKeyedSubscript:@"green"];
        uint64_t v25 = [v16 objectForKeyedSubscript:@"blue"];
        double v26 = v25;
        if (v19 && v24 && v25)
        {
          [v19 doubleValue];
          double v28 = v27;
          [v24 doubleValue];
          double v30 = v29;
          [v26 doubleValue];
          double v32 = v31;
          [v17 doubleValue];
          double v23 = +[UIColor colorWithRed:v28 green:v30 blue:v32 alpha:v33];
        }
        else
        {

          double v23 = 0;
        }
      }
    }
    else
    {
      double v23 = 0;
    }

    if (v23)
    {
      double v34 = objc_alloc_init(_UITintColorViewEntry);
      [(_UITintColorViewEntry *)v34 setTintColor:v23];
      [v36 addViewEffect:v34];
      [v36 setTextShouldRenderWithTintColor:1];
    }
  }
}

void _addColorMatrix(void *a1, void *a2, int a3)
{
  v31[1] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  uint64_t v6 = (void *)*MEMORY[0x1E4F3A168];
  id v7 = a2;
  uint64_t v8 = [v7 objectForKeyedSubscript:v6];
  id v9 = _configDictionaryByRemovingKey(v7, v6);

  long long v21 = *(_OWORD *)(MEMORY[0x1E4F39AD8] + 48);
  long long v22 = *(_OWORD *)(MEMORY[0x1E4F39AD8] + 32);
  long long v25 = v22;
  long long v26 = v21;
  long long v20 = *(_OWORD *)(MEMORY[0x1E4F39AD8] + 64);
  long long v27 = v20;
  long long v18 = *MEMORY[0x1E4F39AD8];
  long long v19 = *(_OWORD *)(MEMORY[0x1E4F39AD8] + 16);
  long long v23 = *MEMORY[0x1E4F39AD8];
  long long v24 = v19;
  uint64_t v10 = [MEMORY[0x1E4F29238] valueWithCAColorMatrix:&v23];
  char v11 = [v8 isEqualToValue:v10];

  if ((v11 & 1) == 0)
  {
    double v30 = v6;
    v31[0] = v8;
    long long v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v31 forKeys:&v30 count:1];
    double v28 = v6;
    long long v25 = v22;
    long long v26 = v21;
    long long v27 = v20;
    long long v23 = v18;
    long long v24 = v19;
    uint64_t v13 = [MEMORY[0x1E4F29238] valueWithCAColorMatrix:&v23];
    double v29 = v13;
    CGFloat v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v29 forKeys:&v28 count:1];

    int v15 = [_UIVisualEffectFilterEntry alloc];
    id v16 = (void *)MEMORY[0x1E4F3A350];
    if (!a3) {
      id v16 = (void *)MEMORY[0x1E4F3A038];
    }
    double v17 = [(_UIVisualEffectFilterEntry *)v15 initWithFilterType:*v16 configurationValues:v9 requestedValues:v12 identityValues:v14];
    [v5 addFilterEntry:v17];
  }
}

void _UIBlurEffectAddBlurFilterEntry(void *a1, void *a2, double a3, double a4)
{
  v20[1] = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  if ([v8 allowsBlurring])
  {
    id v9 = [MEMORY[0x1E4F1CA60] dictionary];
    [v9 setObject:@"default" forKeyedSubscript:*MEMORY[0x1E4F3A1D0]];
    [v9 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F3A1B8]];
    if ([v8 allowsDithering]) {
      [v9 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F3A170]];
    }
    [v8 _applyBlurQualityToConfigurationDictionary:v9];
    uint64_t v10 = [_UIVisualEffectFilterEntry alloc];
    uint64_t v11 = *MEMORY[0x1E4F3A0D0];
    uint64_t v19 = *MEMORY[0x1E4F3A1D8];
    uint64_t v12 = v19;
    uint64_t v13 = [NSNumber numberWithDouble:a3];
    v20[0] = v13;
    CGFloat v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v20 forKeys:&v19 count:1];
    uint64_t v17 = v12;
    long long v18 = &unk_1ED3F1B08;
    int v15 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v18 forKeys:&v17 count:1];
    id v16 = [(_UIVisualEffectFilterEntry *)v10 initWithFilterType:v11 configurationValues:v9 requestedValues:v14 identityValues:v15];

    [(_UIVisualEffectFilterEntry *)v16 setIdentityScaleHint:1.0];
    [(_UIVisualEffectFilterEntry *)v16 setUseRelaxedDiffingRule:1];
    if (a4 <= 0.0) {
      a4 = 1.0 / (a3 * 0.1 + 1.0);
    }
    [(_UIVisualEffectFilterEntry *)v16 setRequestedScaleHint:a4];
    [v7 addFilterEntry:v16];
  }
}

void _UICoreMaterialUpdateBlurEffectDescriptorInternal(void *a1, void *a2, void *a3)
{
  v77[1] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v58 = a2;
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:@"filters"];
  long long v51 = v5;
  id v8 = [v5 objectForKeyedSubscript:@"scale"];
  [v8 doubleValue];
  double v10 = v9;

  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  obuint64_t j = v7;
  uint64_t v11 = [obj countByEnumeratingWithState:&v69 objects:v74 count:16];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v70;
    uint64_t v68 = *MEMORY[0x1E4F3A268];
    uint64_t v67 = *MEMORY[0x1E4F3A260];
    uint64_t v62 = *MEMORY[0x1E4F3A038];
    uint64_t v60 = *MEMORY[0x1E4F3A048];
    uint64_t v61 = *MEMORY[0x1E4F3A000];
    if (v10 <= 0.0) {
      double v14 = 0.03125;
    }
    else {
      double v14 = v10;
    }
    uint64_t v59 = *MEMORY[0x1E4F39FD0];
    uint64_t v57 = *MEMORY[0x1E4F3A0D0];
    uint64_t v55 = (void *)*MEMORY[0x1E4F3A1D8];
    int v15 = (void *)*MEMORY[0x1E4F3A100];
    id v63 = v6;
    uint64_t v64 = *(void *)v70;
    do
    {
      uint64_t v16 = 0;
      uint64_t v65 = v12;
      do
      {
        if (*(void *)v70 != v13) {
          objc_enumerationMutation(obj);
        }
        uint64_t v17 = *(void **)(*((void *)&v69 + 1) + 8 * v16);
        long long v18 = [v17 objectForKeyedSubscript:@"type"];
        if ([v18 isEqualToString:v68])
        {
          id v19 = v6;
          id v20 = v17;
          long long v21 = [v20 objectForKeyedSubscript:v15];
          [v21 doubleValue];
          if (v22 <= 0.0) {
            goto LABEL_25;
          }
          long long v23 = _configDictionaryByRemovingKey(v20, v15);
          v77[0] = v15;
          *(void *)buf = v21;
          long long v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:buf forKeys:v77 count:1];
          long long v75 = v15;
          long long v76 = &unk_1ED3F2038;
          long long v25 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v76 forKeys:&v75 count:1];
          long long v26 = [[_UIVisualEffectFilterEntry alloc] initWithFilterType:v68 configurationValues:v23 requestedValues:v24 identityValues:v25];
          [v19 addFilterEntry:v26];

          id v6 = v63;
          uint64_t v12 = v65;
LABEL_24:

          uint64_t v13 = v64;
          goto LABEL_25;
        }
        if ([v18 isEqualToString:v67])
        {
          id v19 = v6;
          id v20 = v17;
          long long v21 = [v20 objectForKeyedSubscript:v15];
          [v21 doubleValue];
          if (v27 > 0.0)
          {
            long long v23 = _configDictionaryByRemovingKey(v20, v15);
            v77[0] = v15;
            *(void *)buf = v21;
            double v28 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:buf forKeys:v77 count:1];
            long long v75 = v15;
            long long v76 = &unk_1ED3F2038;
            double v29 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v76 forKeys:&v75 count:1];
            double v30 = [_UIVisualEffectFilterEntry alloc];
            uint64_t v31 = v67;
            goto LABEL_23;
          }
          goto LABEL_25;
        }
        if ([v18 isEqualToString:v62])
        {
          _addColorMatrix(v6, v17, 0);
          goto LABEL_26;
        }
        if ([v18 isEqualToString:v61])
        {
          id v19 = v6;
          id v20 = v17;
          long long v21 = [v20 objectForKeyedSubscript:v15];
          [v21 doubleValue];
          if (v32 != 0.0)
          {
            long long v23 = _configDictionaryByRemovingKey(v20, v15);
            v77[0] = v15;
            *(void *)buf = v21;
            double v28 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:buf forKeys:v77 count:1];
            long long v75 = v15;
            long long v76 = &unk_1ED3F2038;
            double v29 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v76 forKeys:&v75 count:1];
            double v30 = [_UIVisualEffectFilterEntry alloc];
            uint64_t v31 = v61;
            goto LABEL_23;
          }
LABEL_25:

          goto LABEL_26;
        }
        if ([v18 isEqualToString:v60])
        {
          id v19 = v6;
          id v20 = v17;
          long long v21 = [v20 objectForKeyedSubscript:v15];
          [v21 doubleValue];
          if (v33 == 1.0) {
            goto LABEL_25;
          }
          long long v23 = _configDictionaryByRemovingKey(v20, v15);
          v77[0] = v15;
          *(void *)buf = v21;
          double v28 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:buf forKeys:v77 count:1];
          long long v75 = v15;
          long long v76 = &unk_1ED3F2048;
          double v29 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v76 forKeys:&v75 count:1];
          double v30 = [_UIVisualEffectFilterEntry alloc];
          uint64_t v31 = v60;
LABEL_23:
          double v34 = [(_UIVisualEffectFilterEntry *)v30 initWithFilterType:v31 configurationValues:v23 requestedValues:v28 identityValues:v29];
          [v19 addFilterEntry:v34];

          uint64_t v12 = v65;
          id v6 = v63;

          goto LABEL_24;
        }
        if ([v18 isEqualToString:v59])
        {
          if (![v58 allowsBlurring]) {
            goto LABEL_26;
          }
          id v35 = v6;
          id v36 = [_UIVisualEffectFilterEntry alloc];
          int v37 = [(_UIVisualEffectFilterEntry *)v36 initWithFilterType:v59 configurationValues:MEMORY[0x1E4F1CC08] requestedValues:MEMORY[0x1E4F1CC08] identityValues:MEMORY[0x1E4F1CC08]];
          [v37 setRequestedScaleHint:v14];
          [v35 addFilterEntry:v37];
          [v35 setDisableInPlaceFiltering:1];

          goto LABEL_31;
        }
        if ([v18 isEqualToString:v57])
        {
          if ([v58 allowsBlurring])
          {
            id v56 = v6;
            id v38 = v17;
            id v39 = v58;
            long long v40 = [v38 objectForKeyedSubscript:v55];
            [v40 doubleValue];
            if (v41 > 0.0)
            {
              double v42 = v41;
              id v54 = v38;
              int v43 = _configDictionaryByRemovingKey(v38, v55);
              id v53 = v39;
              [v39 _applyBlurQualityToConfigurationDictionary:v43];
              v77[0] = v55;
              long long v52 = v40;
              *(void *)buf = v40;
              uint64_t v44 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:buf forKeys:v77 count:1];
              long long v75 = v55;
              long long v76 = &unk_1ED3F2038;
              uint64_t v45 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v76 forKeys:&v75 count:1];
              size_t v46 = [[_UIVisualEffectFilterEntry alloc] initWithFilterType:v57 configurationValues:v43 requestedValues:v44 identityValues:v45];
              __int16 v47 = v46;
              double v48 = v10;
              if (v10 <= 0.0)
              {
                double v48 = 1.0;
                if (v42 > 4.0)
                {
                  double v48 = 0.5;
                  if (v42 > 16.0)
                  {
                    if (v42 <= 32.0) {
                      double v48 = 0.25;
                    }
                    else {
                      double v48 = 0.125;
                    }
                  }
                }
              }
              [(_UIVisualEffectFilterEntry *)v46 setRequestedScaleHint:v48];
              [(_UIVisualEffectFilterEntry *)v47 setIdentityScaleHint:1.0];
              [(_UIVisualEffectFilterEntry *)v47 setUseRelaxedDiffingRule:1];
              [v56 addFilterEntry:v47];
              [v56 setDisableInPlaceFiltering:1];

              uint64_t v13 = v64;
              id v39 = v53;
              id v38 = v54;
              long long v40 = v52;
            }
          }
        }
        else
        {
          if (os_variant_has_internal_diagnostics())
          {
            int v37 = __UIFaultDebugAssertLog();
            if (os_log_type_enabled(v37, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412290;
              *(void *)&uint8_t buf[4] = v18;
              _os_log_fault_impl(&dword_1853B0000, v37, OS_LOG_TYPE_FAULT, "CoreMaterial description for blur effect returned unknown filterType %@", buf, 0xCu);
            }
LABEL_31:

            goto LABEL_26;
          }
          long long v49 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UICoreMaterialUpdateBlurEffectDescriptorInternal___s_category)+ 8);
          if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            *(void *)&uint8_t buf[4] = v18;
            _os_log_impl(&dword_1853B0000, v49, OS_LOG_TYPE_ERROR, "CoreMaterial description for blur effect returned unknown filterType %@", buf, 0xCu);
          }
        }
LABEL_26:

        ++v16;
      }
      while (v12 != v16);
      uint64_t v50 = [obj countByEnumeratingWithState:&v69 objects:v74 count:16];
      uint64_t v12 = v50;
    }
    while (v50);
  }
}

id _configDictionaryByRemovingKey(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)[a1 mutableCopy];
  [v4 removeObjectForKey:@"type"];
  [v4 removeObjectForKey:v3];

  return v4;
}

void _UICoreMaterialUpdateBlurEffectDescriptor(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = [v6 reducedTransperancy];
  id v8 = _convertStyleToRecipe(a1, v6);
  double v9 = [v6 traitCollection];
  _lookupBlurEffectDescription(v8, v7, [v9 userInterfaceLevel]);
  id v10 = (id)objc_claimAutoreleasedReturnValue();

  _UICoreMaterialUpdateBlurEffectDescriptorInternal(v10, v6, v5);
}

id _convertStyleToRecipe(uint64_t a1, void *a2)
{
  id v3 = [a2 traitCollection];
  uint64_t v4 = [v3 userInterfaceStyle];

  if (a1 > 1100)
  {
    switch(a1)
    {
      case 1200:
LABEL_4:
        id v5 = (id *)MEMORY[0x1E4F5C2D0];
        id v6 = (id *)MEMORY[0x1E4F5C2C8];
        goto LABEL_22;
      case 1201:
LABEL_8:
        id v5 = (id *)MEMORY[0x1E4F5C300];
        id v6 = (id *)MEMORY[0x1E4F5C2F8];
        goto LABEL_22;
      case 1202:
LABEL_9:
        id v5 = (id *)MEMORY[0x1E4F5C2F0];
        id v6 = (id *)MEMORY[0x1E4F5C2E8];
        goto LABEL_22;
      case 1203:
LABEL_10:
        id v5 = (id *)MEMORY[0x1E4F5C2E0];
        id v6 = (id *)MEMORY[0x1E4F5C2D8];
        goto LABEL_22;
      case 1204:
LABEL_16:
        id v5 = (id *)MEMORY[0x1E4F5C2D0];
        goto LABEL_24;
      case 1205:
LABEL_11:
        id v5 = (id *)MEMORY[0x1E4F5C300];
        goto LABEL_24;
      case 1206:
LABEL_17:
        id v5 = (id *)MEMORY[0x1E4F5C2F0];
        goto LABEL_24;
      case 1207:
LABEL_18:
        id v5 = (id *)MEMORY[0x1E4F5C2E0];
        goto LABEL_24;
      case 1208:
LABEL_12:
        id v5 = (id *)MEMORY[0x1E4F5C2C8];
        goto LABEL_24;
      case 1209:
LABEL_19:
        id v5 = (id *)MEMORY[0x1E4F5C2F8];
        goto LABEL_24;
      case 1210:
LABEL_13:
        id v5 = (id *)MEMORY[0x1E4F5C2E8];
        goto LABEL_24;
      case 1211:
LABEL_14:
        id v5 = (id *)MEMORY[0x1E4F5C2D8];
        goto LABEL_24;
      default:
        if (a1 == 1101)
        {
LABEL_15:
          id v5 = (id *)MEMORY[0x1E4F5C2C0];
          goto LABEL_24;
        }
        if (a1 == 1102)
        {
LABEL_7:
          id v5 = (id *)MEMORY[0x1E4F5C2B8];
          goto LABEL_24;
        }
LABEL_28:
        double v9 = [MEMORY[0x1E4F28B00] currentHandler];
        id v10 = objc_msgSend(NSString, "stringWithUTF8String:", "MTCoreMaterialRecipe _convertStyleToRecipe(UIBlurEffectStyle, _UIVisualEffectEnvironment *__strong)");
        objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, @"_UICoreMaterialSupport.m", 172, @"Invalid style (%li)", a1);

        id v7 = 0;
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 6:
        goto LABEL_8;
      case 7:
        goto LABEL_9;
      case 8:
        goto LABEL_4;
      case 9:
        goto LABEL_10;
      case 10:
        break;
      case 11:
        goto LABEL_11;
      case 12:
        goto LABEL_17;
      case 13:
        goto LABEL_16;
      case 14:
        goto LABEL_18;
      case 15:
        goto LABEL_15;
      case 16:
        goto LABEL_19;
      case 17:
        goto LABEL_13;
      case 18:
        goto LABEL_12;
      case 19:
        goto LABEL_14;
      case 20:
        goto LABEL_7;
      default:
        if (a1 != 1100) {
          goto LABEL_28;
        }
        break;
    }
    id v5 = (id *)MEMORY[0x1E4F5C2C0];
    id v6 = (id *)MEMORY[0x1E4F5C2B8];
LABEL_22:
    if (v4 == 2) {
      id v5 = v6;
    }
LABEL_24:
    id v7 = *v5;
  }
  return v7;
}

uint64_t _UICoreMaterialStyleNeedsUpdateForEnvironmentChange(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!_UICoreMaterialStyleIsDynamic(a1)) {
    goto LABEL_4;
  }
  id v7 = [v5 traitCollection];
  id v8 = [v6 traitCollection];
  uint64_t v9 = [v7 userInterfaceStyle];
  if (v9 != [v8 userInterfaceStyle])
  {

    goto LABEL_6;
  }
  uint64_t v10 = [v7 userInterfaceLevel];
  uint64_t v11 = [v8 userInterfaceLevel];

  if (v10 != v11)
  {
LABEL_6:
    uint64_t v12 = 1;
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v12 = 0;
LABEL_7:

  return v12;
}

uint64_t _UICoreMaterialStyleIsDynamic(uint64_t a1)
{
  BOOL v1 = (unint64_t)(a1 - 1200) < 4 || a1 == 1100;
  return (unint64_t)(a1 - 6) < 5 || v1;
}

id _lookupBlurEffectDescription(void *a1, uint64_t a2, uint64_t a3)
{
  _OWORD v22[3] = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    id v8 = v7;
    uint64_t v9 = v7;
    if (a3)
    {
      uint64_t v9 = [v7 stringByAppendingString:@"-e"];
    }
    if (a2)
    {
      uint64_t v10 = [v9 stringByAppendingString:@"-rt"];

      uint64_t v9 = (void *)v10;
    }
    uint64_t v11 = [(id)_lookupBlurEffectDescription_blurDescriptionCache objectForKeyedSubscript:v9];
    if (v11) {
      goto LABEL_10;
    }
    uint64_t v12 = *MEMORY[0x1E4F5C350];
    v22[0] = MEMORY[0x1E4F1CC38];
    uint64_t v13 = *MEMORY[0x1E4F5C358];
    v21[0] = v12;
    v21[1] = v13;
    uint64_t v14 = [NSNumber numberWithBool:a2];
    int v15 = (void *)v14;
    v21[2] = @"MTDictionaryRepresentationOptionsUserInterfaceLevelKey";
    uint64_t v16 = &unk_1ED3F5250;
    if (!a3) {
      uint64_t v16 = &unk_1ED3F5238;
    }
    v22[1] = v14;
    v22[2] = v16;
    uint64_t v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v22 forKeys:v21 count:3];

    uint64_t v11 = MTMaterialCreateDictionaryRepresentation();

    if (v11)
    {
LABEL_10:
      if (_lookupBlurEffectDescription_blurDescriptionCache)
      {
        [(id)_lookupBlurEffectDescription_blurDescriptionCache setObject:v11 forKeyedSubscript:v9];
      }
      else
      {
        uint64_t v18 = [MEMORY[0x1E4F1CA60] dictionaryWithObject:v11 forKey:v9];
        id v19 = (void *)_lookupBlurEffectDescription_blurDescriptionCache;
        _lookupBlurEffectDescription_blurDescriptionCache = v18;
      }
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

id sub_1854F6A24(char *a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8];
  uint64_t ObjectType = swift_getObjectType();
  id v7 = a1;
  a3(v10, ObjectType, v5);

  __swift_project_boxed_opaque_existential_0Tm(v10, v10[3]);
  id v8 = (void *)sub_186A1F83C();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  return v8;
}

uint64_t sub_1854F6AD8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  double v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 136))(a1, a2, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

unint64_t sub_1854F6C20@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *v1);
  unint64_t result = sub_1854F6C7C();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t sub_1854F6C7C()
{
  unint64_t result = qword_1EB256318;
  if (!qword_1EB256318)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB256318);
  }
  return result;
}

void sub_1854F6CC0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for UIAnimatableProperty.ProtectedState();
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1854F6DA0(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1854F6DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = type metadata accessor for UIAnimatableProperty.ProtectedState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1 + *(int *)(v6 + 36), v5);
}

uint64_t type metadata accessor for UIAnimatableProperty.ProtectedState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1854F6E4C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  double v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 88))(a1, a2, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

void sub_1854F6F94(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for UIAnimatableProperty.ProtectedState();
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1854F7074(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1854F7074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

void sub_1854F7E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854F87CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void UIRectFillUsingOperation(int a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  ContextStacuint64_t k = GetContextStack(0);
  if (*(int *)ContextStack < 1) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = (CGContext *)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
  }
  if (CGContextGetCompositeOperation() == a1)
  {
    CGFloat v12 = a2;
    CGFloat v13 = a3;
    CGFloat v14 = a4;
    CGFloat v15 = a5;
    CGContextFillRect(v11, *(CGRect *)&v12);
  }
  else
  {
    CGContextSetCompositeOperation();
    v17.origin.double x = a2;
    v17.origin.double y = a3;
    v17.size.CGFloat width = a4;
    v17.size.CGFloat height = a5;
    CGContextFillRect(v11, v17);
    CGContextSetCompositeOperation();
  }
}

CGImageRef _UIImageRefFromData(void *a1, int a2, unint64_t a3, double *a4)
{
  v22[2] = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  if ([v7 length])
  {
    if (a2)
    {
      uint64_t v8 = *MEMORY[0x1E4F2FF08];
      v21[0] = *MEMORY[0x1E4F2FF48];
      v21[1] = v8;
      v22[0] = MEMORY[0x1E4F1CC38];
      v22[1] = MEMORY[0x1E4F1CC38];
      uint64_t v9 = (void *)MEMORY[0x1E4F1C9E8];
      uint64_t v10 = v22;
      uint64_t v11 = v21;
      uint64_t v12 = 2;
    }
    else
    {
      uint64_t v19 = *MEMORY[0x1E4F2FF48];
      uint64_t v20 = MEMORY[0x1E4F1CC38];
      uint64_t v9 = (void *)MEMORY[0x1E4F1C9E8];
      uint64_t v10 = &v20;
      uint64_t v11 = &v19;
      uint64_t v12 = 1;
    }
    CFDictionaryRef v15 = (const __CFDictionary *)[v9 dictionaryWithObjects:v10 forKeys:v11 count:v12];
    CFDataRef v14 = (const __CFData *)[v7 copy];

    uint64_t v16 = CGImageSourceCreateWithData(v14, v15);
    if (v16)
    {
      CGRect v17 = v16;
      if (CGImageSourceGetCount(v16))
      {
        ImageAtIndedouble x = CGImageSourceCreateImageAtIndex(v17, 0, v15);
        _UIImageGetOrientationAndScale(v17, 0, v15, a3, a4);
      }
      else
      {
        ImageAtIndedouble x = 0;
      }
      CFRelease(v17);
    }
    else
    {
      ImageAtIndedouble x = 0;
    }
  }
  else
  {
    ImageAtIndedouble x = 0;
    CFDataRef v14 = (const __CFData *)v7;
  }

  return ImageAtIndex;
}

void _UIImageGetOrientationAndScale(CGImageSource *a1, int a2, const __CFDictionary *a3, unint64_t a4, double *a5)
{
  if (a4 | (unint64_t)a5)
  {
    CFDictionaryRef v8 = CGImageSourceCopyPropertiesAtIndex(a1, a2, a3);
    if (v8)
    {
      CFDictionaryRef v16 = v8;
      if (a4)
      {
        *(void *)a4 = 0;
        uint64_t v9 = [(__CFDictionary *)v8 objectForKeyedSubscript:*MEMORY[0x1E4F2FCA0]];
        uint64_t v10 = [v9 integerValue];

        CFDictionaryRef v8 = v16;
        if ((unint64_t)(v10 - 1) <= 7) {
          *(void *)a4 = _UIImageGetOrientationAndScale___orientationMapping[v10 - 1];
        }
      }
      if (a5)
      {
        *a5 = 1.0;
        uint64_t v11 = [(__CFDictionary *)v8 objectForKeyedSubscript:*MEMORY[0x1E4F2F6B0]];
        if (!v11)
        {
          uint64_t v12 = [(__CFDictionary *)v16 objectForKeyedSubscript:*MEMORY[0x1E4F2FBF0]];
          uint64_t v11 = [v12 objectForKeyedSubscript:*MEMORY[0x1E4F2FBF8]];
        }
        [v11 doubleValue];
        if (v13 >= 7.2 && v13 <= 7200.0)
        {
          double v14 = v13 / 72.0;
          double v15 = round(v14);
          if (vabdd_f64(v14, v15) < 0.001) {
            double v14 = v15;
          }
          *a5 = v14;
        }

        CFDictionaryRef v8 = v16;
      }
    }
  }
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void _UIAssertValidUpdateIndexPath(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  int v2 = dyld_program_sdk_at_least();
  uint64_t v3 = [v1 section];
  if (v2)
  {
    if (v3 < 0 || [v1 row] < 0)
    {
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"void _UIAssertValidUpdateIndexPath(NSIndexPath * _Nullable __strong)"];
      [v4 handleFailureInFunction:v5, @"UITableViewSupport.m", 2713, @"Attempted to perform update with invalid index path: %@", v1 file lineNumber description];
    }
  }
  else if (v3 < 0 || [v1 row] < 0)
  {
    double v6 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &_UIAssertValidUpdateIndexPath___s_category) + 8);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v8 = v1;
      _os_log_impl(&dword_1853B0000, v6, OS_LOG_TYPE_ERROR, "Attempted to perform update with invalid index path: %@", buf, 0xCu);
    }
  }
}

id UIViewController.registerForTraitChanges<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1854A0744(a1, a2, a3, a4, (uint64_t)&unk_1ED0D8100, (uint64_t)sub_1858B3B80, (uint64_t)&block_descriptor_46);
}

id UICollectionLayoutListConfiguration.headerTopPadding.setter(uint64_t a1, char a2)
{
  return sub_18564A164(a1, a2, (SEL *)&selRef_setHeaderTopPadding_);
}

ValueMetadata *type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return &type metadata for UICollectionLayoutListConfiguration.Appearance;
}

void UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(uint64_t a1, uint64_t a2)
{
}

void UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter(uint64_t a1, uint64_t a2)
{
}

id NSDiffableDataSourceSnapshot.indexOfItem(_:)()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  id v2 = objc_msgSend(v1, sel_indexOfItemIdentifier_, sub_186A1F83C());

  swift_unknownObjectRelease();
  if (v2 == (id)sub_186A1D1CC()) {
    return 0;
  }
  else {
    return v2;
  }
}

BOOL UIAccessibilityButtonShapesEnabled(void)
{
  return _AXSButtonShapesEnabled() != 0;
}

double UIRectCenteredAboutPoint(double a1, double a2, double a3, double a4, double a5)
{
  return round(a5 - a3 * 0.5);
}

uint64_t storeEnumTagSinglePayload for HoverStyleDriverCoordinator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8_Block_object_dispose(&STACK[0x3A0], 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x3A0], 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_185500248(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_186A1E95C();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18550028C(uint64_t a1, uint64_t a2)
{
  return sub_185500248(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t UINavigationItem.renameDelegate.getter()
{
  id v1 = objc_msgSend(v0, sel__dci_renameHandler);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  _s35_UINavigationItemSwiftRenameHandlerCMa();
  uint64_t v3 = swift_dynamicCastClass();
  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = MEMORY[0x18C109380](v3 + OBJC_IVAR____TtCE5UIKitCSo16UINavigationItem35_UINavigationItemSwiftRenameHandler_delegate);

  return v4;
}

uint64_t sub_185500334(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB2563F8, &qword_1EB2563E8);
}

void sub_185501274(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

double _UIWindowConvertRectFromSceneReferenceSpaceToSceneSpace(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  if (+[UIWindow _transformLayerRotationsAreEnabled])
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = ___UIWindowConvertRectFromSceneReferenceSpaceToSceneSpace_block_invoke;
    v15[3] = &__block_descriptor_56_e30__CGPoint_dd_24__0_CGPoint_dd_8l;
    *(double *)&void v15[4] = a6;
    *(double *)&void v15[5] = a7;
    v15[6] = a1;
    return _UIRectTransformByTransformingCorners((uint64_t)v15, a2, a3, a4, a5);
  }
  return a2;
}

double _UIRectTransformByTransformingCorners(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = 0;
  v10[8] = *(double *)MEMORY[0x1E4F143B8];
  v10[0] = a2;
  v10[1] = a3;
  v10[2] = a2;
  v10[3] = a3 + a5;
  void v10[4] = a2 + a4;
  v10[5] = a3 + a5;
  v10[6] = a2 + a4;
  v10[7] = a3;
  do
  {
    id v7 = &v10[v6];
    *id v7 = (*(double (**)(uint64_t, double, double))(a1 + 16))(a1, v10[v6], v10[v6 + 1]);
    *((void *)v7 + 1) = v8;
    v6 += 2;
  }
  while (v6 != 8);
  return UIRectMakeWithPoints(v10);
}

double UIRectMakeWithPoints(double *a1)
{
  if (a1[4] >= a1[6]) {
    double v1 = a1[6];
  }
  else {
    double v1 = a1[4];
  }
  if (*a1 >= a1[2]) {
    double v2 = a1[2];
  }
  else {
    double v2 = *a1;
  }
  if (v2 >= v1) {
    return v1;
  }
  else {
    return v2;
  }
}

void sub_185502A98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1855039C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

double _UIWindowConvertPointFromOrientationToOrientation(uint64_t a1, uint64_t a2, double result, double a4, double a5, double a6)
{
  if (a1 != a2)
  {
    double v6 = a5 - result;
    double v7 = a6 - a4;
    double v8 = a5 - a4;
    if (a1 == 4) {
      double v9 = a4;
    }
    else {
      double v9 = result;
    }
    if (a1 == 4) {
      a4 = a6 - result;
    }
    if (a1 != 3)
    {
      double v8 = v9;
      unint64_t result = a4;
    }
    if (a1 == 2) {
      double v10 = v6;
    }
    else {
      double v10 = v8;
    }
    if (a1 == 2) {
      double v11 = v7;
    }
    else {
      double v11 = result;
    }
    switch(a2)
    {
      case 2:
        return a5 - v10;
      case 3:
        return v11;
      case 4:
        return a6 - v11;
      default:
        return v10;
    }
  }
  return result;
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(objc_allocWithZone((Class)UICollectionLayoutListConfiguration), sel_initWithAppearance_, *a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a2 = result;
  return result;
}

uint64_t _UIDeviceNativeUserInterfaceIdiom()
{
  if (qword_1EB260F08 != -1) {
    dispatch_once(&qword_1EB260F08, &__block_literal_global_55_1);
  }
  return qword_1EB260F00;
}

uint64_t _UISafelyGetOrientationMask(void *a1)
{
  double v1 = a1;
  uint64_t v2 = v1[2]();

  return v2;
}

void sub_185506150(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t block, uint64_t a11, void (*a12)(uint64_t a1), void *a13, id a14)
{
  id v14 = objc_begin_catch(a1);
  blocuint64_t k = MEMORY[0x1E4F143A8];
  a11 = 3221225472;
  a12 = ___UISafelyGetOrientationMask_block_invoke;
  a13 = &unk_1E52D9F70;
  a14 = v14;
  uint64_t v15 = _UISafelyGetOrientationMask_once;
  id v16 = v14;
  if (v15 != -1) {
    dispatch_once(&_UISafelyGetOrientationMask_once, &block);
  }

  objc_end_catch();
  -[UIApplication _defaultSupportedInterfaceOrientations](UIApp);
  JUMPOUT(0x185506130);
}

void sub_185506D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIUserInterfaceSizeClassForHeight(double a1)
{
  uint64_t v2 = +[UIDevice currentDevice];
  unint64_t v3 = [v2 userInterfaceIdiom];
  if (v3 > 8) {
    goto LABEL_8;
  }
  if (((1 << v3) & 0x126) != 0)
  {
    uint64_t v4 = 2;
    goto LABEL_9;
  }
  if (v3)
  {
LABEL_8:
    uint64_t v4 = 0;
    goto LABEL_9;
  }
  _UIScreenReferenceBoundsSizeForType(1uLL);
  if (v5 > a1) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = 2;
  }
LABEL_9:

  return v4;
}

uint64_t _UIUserInterfaceSizeClassForWidth(double a1)
{
  uint64_t v2 = +[UIDevice currentDevice];
  uint64_t v3 = _UIUserInterfaceSizeClassForWidthAndUserInterfaceIdiomWithHomeButton([v2 userInterfaceIdiom], +[UIDevice _hasHomeButton](UIDevice, "_hasHomeButton"), a1);

  return v3;
}

uint64_t _UIViewControllerDefaultModalTransitionStyle(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[_UIPresentationControllerDefaultVisualStyleProvider sharedInstance];
  uint64_t v3 = [v2 defaultConcreteTransitionStyleForViewController:v1];

  return v3;
}

id _UIFallbackSheetMetrics()
{
  uint64_t v0 = +[_UIPresentationControllerDefaultVisualStyleProvider sharedInstance];
  id v1 = [v0 defaultSheetMetrics];

  return v1;
}

uint64_t objectdestroy_343Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id _UITraitsForTraitTokens(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(a1, "count"));
  os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v3 = [a1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(a1);
        }
        uint64_t v7 = [(id)qword_1EB2623D0 objectForKey:*(void *)(*((void *)&v9 + 1) + 8 * v6)];
        if (v7) {
          [v2 addObject:v7];
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t v4 = [a1 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
  return v2;
}

void _UIBackgroundConfigurationApplyProperties(void *a1, uint64_t a2, void *a3)
{
  self = a1;
  id v6 = a3;
  if (self) {
    objc_setProperty_nonatomic_copy(self, v5, *(id *)(a2 + 16), 56);
  }
  objc_msgSend(self, "__setVisualEffectGroupName:", *(void *)(a2 + 24));
  if (!*(void *)(a2 + 16) || *(unsigned char *)(a2 + 32))
  {
    if (*(void *)a2 == 1)
    {
      -[UIBackgroundConfiguration _setBackgroundColor:]((uint64_t)self, 0);
    }
    else
    {
      id v7 = *(id *)(a2 + 8);
      if (self)
      {
        if (v7)
        {
          id v8 = v7;
        }
        else
        {
          id v8 = +[UIColor clearColor];
        }
        long long v9 = (void *)*((void *)self + 5);
        *((void *)self + 5) = v8;
      }
    }
  }
  long long v10 = _UIShadowPropertiesFromShadowType(*(void *)(a2 + 40), v6);
  [self _setShadowProperties:v10];

  -[UIBackgroundConfiguration _setBackgroundColorTransformerIdentifier:]((uint64_t)self, *(void *)(a2 + 48));
  double v11 = *(double *)(a2 + 56);
  if (v11 > 0.0)
  {
    if (self)
    {
      *((double *)self + 13) = v11;
      *((void *)self + 14) = *(void *)(a2 + 64);
      if (*(unsigned char *)(a2 + 72))
      {
LABEL_16:
        -[UIBackgroundConfiguration _setStrokeColor:]((uint64_t)self, 0);
LABEL_22:
        [self _setStrokeLocation:*(void *)(a2 + 88)];
        goto LABEL_23;
      }
      id v12 = *(id *)(a2 + 80);
      id v13 = v12;
      if (v12)
      {
        id v14 = v12;
      }
      else
      {
        id v14 = +[UIColor clearColor];
      }
      uint64_t v15 = (void *)*((void *)self + 11);
      *((void *)self + 11) = v14;
    }
    else
    {
      if (*(unsigned char *)(a2 + 72)) {
        goto LABEL_16;
      }
      id v13 = *(id *)(a2 + 80);
    }

    goto LABEL_22;
  }
LABEL_23:
  [self _setCornerRadius:*(double *)(a2 + 96)];
  if (self)
  {
    long long v16 = *(_OWORD *)(a2 + 120);
    *((_OWORD *)self + 11) = *(_OWORD *)(a2 + 104);
    *((_OWORD *)self + 12) = v16;
  }

  __destructor_8_s8_s16_s24_s80(a2);
}

void sub_18550C550(_Unwind_Exception *a1)
{
  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

id _UIShadowPropertiesFromShadowType(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 4:
      uint64_t v4 = objc_opt_new();
      objc_msgSend(v4, "set_radius:", 12.0);
      objc_msgSend(v4, "set_opacity:", dbl_186B92A70[objc_msgSend(v3, "userInterfaceStyle") == 2]);
      objc_msgSend(v4, "set_offset:", 0.0, 4.0);
      id v7 = v4;
      uint64_t v8 = 4;
LABEL_9:
      objc_msgSend(v7, "set_backgroundConfigurationShadowType:", v8);
      goto LABEL_11;
    case 3:
      id v7 = objc_opt_new();
      uint64_t v4 = v7;
      uint64_t v8 = 3;
      goto LABEL_9;
    case 2:
      uint64_t v4 = objc_opt_new();
      objc_msgSend(v4, "set_radius:", 16.0);
      uint64_t v5 = [v3 userInterfaceStyle];
      double v6 = 0.2;
      if (v5 == 2) {
        double v6 = 1.0;
      }
      objc_msgSend(v4, "set_opacity:", v6);
      objc_msgSend(v4, "set_offset:", 0.0, 2.0);
      id v7 = v4;
      uint64_t v8 = 2;
      goto LABEL_9;
  }
  uint64_t v4 = 0;
LABEL_11:

  return v4;
}

uint64_t _UIConfigurationColorTransformerForIdentifier(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 0x1A) {
    return 0;
  }
  else {
    return (uint64_t)*(&off_1E52EE020 + a1 - 2);
  }
}

BOOL UIAccessibilityPrefersCrossFadeTransitions(void)
{
  return _AXSReduceMotionReduceSlideTransitionsEnabled() != 0;
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return _AXDarkenSystemColors() != 0;
}

void UICeilToScale(double a1, double a2)
{
  if (a2 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

uint64_t _UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar()
{
  if (_UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_onceToken != -1) {
    dispatch_once(&_UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_onceToken, &__block_literal_global_24);
  }
  return _UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_wantsNavigationBarExtensionForFloatingTabBar;
}

void sub_185510808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185512328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t UIKeyboardCheckSpellingForInputMode(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (UIKeyboardAutocorrectSpellingFlag)
  {
    if ([v1 isEqualToString:@"dictation"])
    {
      id v3 = +[UIKeyboardImpl activeInstance];
      uint64_t v4 = [v3 inputModeLastUsedPreference];

      uint64_t v2 = (void *)v4;
    }
    uint64_t v5 = UIKeyboardCheckSpellingPossibleForInputMode(v2);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t UIKeyboardCheckSpellingPossibleForInputMode(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (!UIKeyboardCheckSpellingPossibleForInputMode___supportedLanguages)
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
    id v3 = (void *)UIKeyboardCheckSpellingPossibleForInputMode___supportedLanguages;
    UIKeyboardCheckSpellingPossibleForInputMode___supportedLanguages = (uint64_t)v2;

    long long v16 = 0u;
    long long v17 = 0u;
    long long v15 = 0u;
    uint64_t v4 = +[UITextChecker availableLanguages];
    uint64_t v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v15;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v15 != v7) {
            objc_enumerationMutation(v4);
          }
          long long v9 = (void *)UIKeyboardCheckSpellingPossibleForInputMode___supportedLanguages;
          long long v10 = TIInputModeGetLanguage();
          [v9 addObject:v10];

          ++v8;
        }
        while (v6 != v8);
        uint64_t v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v6);
    }
  }
  double v11 = TIInputModeGetLanguage();
  uint64_t v12 = [(id)UIKeyboardCheckSpellingPossibleForInputMode___supportedLanguages containsObject:v11];

  return v12;
}

id sharedInputManagerMux()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2050000000;
  uint64_t v0 = (void *)getTUIKeyboardInputManagerMuxClass_softClass;
  uint64_t v8 = getTUIKeyboardInputManagerMuxClass_softClass;
  if (!getTUIKeyboardInputManagerMuxClass_softClass)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __getTUIKeyboardInputManagerMuxClass_block_invoke;
    v4[3] = &unk_1E52D9900;
    v4[4] = &v5;
    __getTUIKeyboardInputManagerMuxClass_block_invoke((uint64_t)v4);
    uint64_t v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  id v2 = [v1 sharedInstance];
  return v2;
}

void sub_185513CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sharedInputManagerMux_0()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2050000000;
  uint64_t v0 = (void *)qword_1EB25BE48;
  uint64_t v8 = qword_1EB25BE48;
  if (!qword_1EB25BE48)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __getTUIKeyboardInputManagerMuxClass_block_invoke_0;
    v4[3] = &unk_1E52D9900;
    v4[4] = &v5;
    __getTUIKeyboardInputManagerMuxClass_block_invoke_0((uint64_t)v4);
    uint64_t v0 = (void *)v6[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v5, 8);
  id v2 = [v1 sharedInstance];
  return v2;
}

void sub_185513DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

UIColor *_UIGetTextHighlightFillColor()
{
  return +[UIColor colorWithRed:1.0 green:0.866 blue:0.0 alpha:1.0];
}

void _addInteractiveLayouts(void *a1, void *a2, uint64_t a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v5);
        }
        double v11 = *(void **)(*((void *)&v14 + 1) + 8 * v10);
        if ([v11 isGroupLayout])
        {
          uint64_t v12 = [v11 subLayouts];
          _addInteractiveLayouts(v12, v6, a3);
LABEL_8:

          goto LABEL_10;
        }
        if (([v11 isSpaceLayout] & 1) == 0)
        {
          uint64_t v12 = [v11 barButtonItem];
          if (a3) {
            [v6 insertObject:v12 atIndex:0];
          }
          else {
            [v6 addObject:v12];
          }
          goto LABEL_8;
        }
LABEL_10:
        ++v10;
      }
      while (v8 != v10);
      uint64_t v13 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      uint64_t v8 = v13;
    }
    while (v13);
  }
}

id _viewRepresentingItem(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [v4 view];
  int v6 = [v4 isCustomViewItem];

  if (v6)
  {
    id v7 = [v5 superview];
    uint64_t v8 = v7;
    if (v7 != v3)
    {
      id v9 = v7;

      id v5 = v9;
    }
  }
  return v5;
}

uint64_t _UIButtonBarLayoutSpacerTypeForLayouts(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 suppressSpacing] & 1) != 0
    || ([v4 suppressSpacing] & 1) != 0
    || ([v3 isSpaceLayout] & 1) != 0)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = [v4 isSpaceLayout] ^ 1;
  }

  return v5;
}

ValueMetadata *type metadata accessor for UITraitHorizontalSizeClass()
{
  return &type metadata for UITraitHorizontalSizeClass;
}

ValueMetadata *type metadata accessor for UIButton.Configuration()
{
  return &type metadata for UIButton.Configuration;
}

ValueMetadata *type metadata accessor for UITraitUserInterfaceStyle()
{
  return &type metadata for UITraitUserInterfaceStyle;
}

id filterAndCopyWidths(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        objc_msgSend(v8, "doubleValue", (void)v15);
        if (v9 >= 0 && ((v9 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE
          || (unint64_t)(v9 - 1) <= 0xFFFFFFFFFFFFELL)
        {
          [v2 addObject:v8];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  if ([v2 count])
  {
    uint64_t v12 = [v2 allObjects];
    uint64_t v13 = [v12 sortedArrayUsingSelector:sel_compare_];
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4F1CBF0];
  }

  return v13;
}

void _UISplitViewControllerCheckSupportColumnStyleRaiseIfNot(void *a1)
{
  id v1 = (void *)a1[122];
  id v2 = a1;
  uint64_t v3 = [v1 style];
  uint64_t v4 = [v2 style];

  if (v3) {
    BOOL v5 = v4 == v3;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    if (v3) {
      return;
    }
    uint64_t v6 = @"This API requires initializing the UISplitViewController with -initWithStyle:";
  }
  else
  {
    uint64_t v6 = @"Overriding the style property unsupported for a UISplitViewController created with -initWithStyle:";
  }
  id v7 = (void *)MEMORY[0x1E4F1CA00];
  uint64_t v8 = *MEMORY[0x1E4F1C3C8];
  [v7 raise:v8 format:v6];
}

void sub_18551ED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void layoutPresentationViews(void *a1, void *a2, void *a3)
{
  id v21 = a1;
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    [v21 bounds];
    objc_msgSend(v6, "setFrame:");
  }
  id v7 = [v5 view];
  [v7 frame];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;

  uint64_t v16 = [v5 childModalViewController];
  if (v16)
  {
    long long v17 = (void *)v16;
    do
    {
      long long v18 = [v17 presentationController];
      int v19 = [v18 shouldPresentInFullscreen];

      if (v19) {
        break;
      }
      objc_msgSend(v17, "_updateControlledViewsToFrame:", v9, v11, v13, v15);
      uint64_t v20 = [v17 presentedViewController];

      long long v17 = (void *)v20;
    }
    while (v20);
  }
}

void __unspecifiedLayoutSideBySideViews_block_invoke(uint64_t a1, void *a2, void *a3, void *a4, double a5)
{
  id v21 = a2;
  id v9 = a3;
  id v10 = a4;
  if (v21)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    double v12 = *(double *)(v11 + 24);
    if (*(unsigned char *)(a1 + 64))
    {
      double v13 = *(double *)(a1 + 56);
      *(double *)(v11 + 24) = v12 + a5;
    }
    else
    {
      *(double *)(v11 + 24) = v12 - a5;
      double v12 = *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
      double v13 = *(double *)(a1 + 56);
    }
    if ([*(id *)(a1 + 32) containsObject:v21])
    {
      [*(id *)(a1 + 40) _keyboardAdjustment];
      double v13 = v13 - v14;
    }
    id v15 = v21;
    id v16 = v9;
    id v17 = v10;
    long long v18 = v17;
    if (v16)
    {
      double v20 = *MEMORY[0x1E4F1DAD8];
      double v19 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
      objc_msgSend(v16, "setFrame:", v12, 0.0, a5 + 0.0, v13);
      double v12 = v20;
      if (v18)
      {
LABEL_9:
        objc_msgSend(v18, "_updateControlledViewsToFrame:", v12, v19, a5, v13);
LABEL_12:

        goto LABEL_13;
      }
    }
    else
    {
      double v19 = 0.0;
      if (v17) {
        goto LABEL_9;
      }
    }
    objc_msgSend(v15, "setFrame:", v12, v19, a5, v13);
    goto LABEL_12;
  }
LABEL_13:
}

uint64_t objectdestroy_113Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void UICollectionViewListCellCommonInit(void *a1)
{
  id v1 = a1;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  _OWORD v3[2] = __UICollectionViewListCellCommonInit_block_invoke;
  v3[3] = &unk_1E52D9F70;
  id v4 = v1;
  id v2 = v1;
  +[UIView performWithoutAnimation:v3];
}

void sub_18551FCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

BOOL _UILAIsAnimatingOnCanvas(void *a1)
{
  id v1 = a1;
  if (+[UIView _isInAnimationBlockWithAnimationsEnabled])
  {
    id v2 = [v1 _window];
    BOOL v3 = v2 != 0;
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void _UICollectionReusableViewCommonInit(void *a1)
{
  id v1 = a1;
  if (dyld_program_sdk_at_least())
  {
    [v1 setTranslatesAutoresizingMaskIntoConstraints:1];
    [v1 _setHostsLayoutEngine:1];
  }
}

uint64_t _UINonTAMICViewCanHostLayoutEngine()
{
  if (dyld_program_sdk_at_least() & 1) != 0 || (__forceHostLayoutEngineOnlyTAMIC_YES) {
    return 0;
  }
  return dyld_program_sdk_at_least();
}

uint64_t discardEngineRecursive(void *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t result = [a1 _layoutEngine];
  if ((void *)result == a2)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    id v5 = objc_msgSend(a1, "_allSubviews", 0);
    uint64_t v6 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v11;
      do
      {
        uint64_t v9 = 0;
        do
        {
          if (*(void *)v11 != v8) {
            objc_enumerationMutation(v5);
          }
          discardEngineRecursive(*(void *)(*((void *)&v10 + 1) + 8 * v9++), a2);
        }
        while (v7 != v9);
        uint64_t v7 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v7);
    }
    if ((void *)[a2 delegate] == a1) {
      [a2 setDelegate:0];
    }
    [a1 _setLayoutEngine:0];
    return [a1 _clearLayoutVariableObservationsOnlyToSupportTAMICChange:0];
  }
  return result;
}

void sub_18552291C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_185522B2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _UIVisualEffectAssertEffectConstraints(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v1 = a1;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    char v4 = 0;
    int v5 = 0;
    uint64_t v6 = *(void *)v12;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v1);
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (v4) {
            goto LABEL_14;
          }
          char v4 = 1;
        }
        else
        {
          objc_opt_class();
          int isKindOfClass = objc_opt_isKindOfClass();
          if (isKindOfClass & v5)
          {
LABEL_14:
            uint64_t v9 = 0;
            goto LABEL_15;
          }
          v5 |= isKindOfClass;
        }
        ++v7;
      }
      while (v3 != v7);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 1;
LABEL_15:

  return v9;
}

id _interpolateColors(void *a1, void *a2, double a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (v5 == v6 || a3 <= 0.0) {
    goto LABEL_7;
  }
  if (a3 >= 1.0)
  {
    id v8 = v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    [v6 alphaComponent];
    double v12 = v11 * a3;
    long long v13 = v7;
LABEL_14:
    id v8 = [v13 colorWithAlphaComponent:v12];
    goto LABEL_8;
  }
  if (!v6)
  {
    [v5 alphaComponent];
    double v12 = (1.0 - a3) * v14;
    long long v13 = v5;
    goto LABEL_14;
  }
  if ([v5 isEqual:v6])
  {
LABEL_7:
    id v8 = v5;
    goto LABEL_8;
  }
  double v22 = 0.0;
  double v23 = 0.0;
  double v20 = 0.0;
  double v21 = 0.0;
  [v5 getRed:&v23 green:&v22 blue:&v21 alpha:&v20];
  double v22 = v20 * v22;
  double v23 = v20 * v23;
  double v21 = v20 * v21;
  double v18 = 0.0;
  double v19 = 0.0;
  double v16 = 0.0;
  double v17 = 0.0;
  [v7 getRed:&v19 green:&v18 blue:&v17 alpha:&v16];
  double v19 = v16 * v19;
  double v21 = v16 * v21;
  double v22 = v16 * v22;
  double v15 = 0.0001;
  if (v20 + (v16 - v20) * a3 >= 0.0001) {
    double v15 = v20 + (v16 - v20) * a3;
  }
  +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", (v23 + (v19 - v23) * a3) / v15, (v22 + (v18 - v22) * a3) / v15, (v21 + (v17 - v21) * a3) / v15);
  id v8 = (id)objc_claimAutoreleasedReturnValue();
LABEL_8:
  uint64_t v9 = v8;

  return v9;
}

double _hitTestInsets(void *a1, void *a2, void *a3, int a4, double a5)
{
  id v9 = a2;
  id v10 = a3;
  [a1 frame];
  CGFloat x = v19.origin.x;
  CGFloat y = v19.origin.y;
  CGFloat width = v19.size.width;
  CGFloat height = v19.size.height;
  double MinX = CGRectGetMinX(v19);
  v20.origin.CGFloat x = x;
  v20.origin.CGFloat y = y;
  v20.size.CGFloat width = width;
  v20.size.CGFloat height = height;
  double MaxX = CGRectGetMaxX(v20);
  if (a4)
  {
    if (v10)
    {
      [v10 frame];
      a5 = floor((MinX + CGRectGetMaxX(v21)) * 0.5);
    }
    double v17 = v9;
    if (!v9) {
      goto LABEL_10;
    }
LABEL_9:
    [v17 frame];
    floor((MaxX + CGRectGetMinX(v23)) * 0.5);
    goto LABEL_10;
  }
  if (v9)
  {
    [v9 frame];
    a5 = floor((MinX + CGRectGetMaxX(v22)) * 0.5);
  }
  double v17 = v10;
  if (v10) {
    goto LABEL_9;
  }
LABEL_10:

  return -fmax(fmin(MinX - a5, 11.0), 0.0);
}

void sub_1855272AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t UITraitCollection.modifyingTraits(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_185566F50;
  *(void *)(v7 + 24) = v6;
  void v11[4] = sub_1858DD818;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_185566CC0;
  v11[3] = &block_descriptor_24;
  id v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  id v9 = objc_msgSend(v3, sel_traitCollectionByModifyingTraits_, v8);
  _Block_release(v8);
  LOBYTE(v_Block_object_dispose(&STACK[0x3A0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v8 & 1) == 0) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t UITraitCollection._modifyingTraits(environmentWrapper:mutations:)(void *a1, uint64_t a2, uint64_t a3)
{
  char v4 = v3;
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_185566D3C;
  *(void *)(v9 + 24) = v8;
  uint64_t v14[4] = sub_1858DD818;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_185566CC0;
  v14[3] = &block_descriptor_34;
  id v10 = _Block_copy(v14);
  id v11 = a1;
  swift_retain();
  swift_release();
  id v12 = objc_msgSend(v4, sel_traitCollectionByModifyingTraits_, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 1) == 0) {
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t _UIThemeKeyFromTraitValues(char a1, uint64_t a2, int a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6 = 2;
  if (a2 != 1000) {
    uint64_t v6 = a2;
  }
  uint64_t v7 = 64;
  if (!a3) {
    uint64_t v7 = 0;
  }
  unint64_t v8 = (unint64_t)(a5 & 1) << 8;
  if (v6 != 2) {
    unint64_t v8 = 0;
  }
  return [NSNumber numberWithUnsignedInteger:v7 & 0xFFFFFFFFFFFFFFC0 | (4 * a1 + 4) & 0x3C | v6 & 3 | ((unint64_t)(a4 == 1) << 7) | v8 | ((unint64_t)(a6 == 1) << 9)];
}

uint64_t _UIBarsDesktopNavigationBarEnabled()
{
  if (qword_1EB25C848 != -1) {
    dispatch_once(&qword_1EB25C848, &__block_literal_global_96_0);
  }
  return byte_1EB25C81B;
}

void sub_18552D3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UIButtonBarSetOwners(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        [v9 _setOwner:v4];
        id v10 = [v9 representativeItem];
        [v10 _setViewOwner:v4];

        id v11 = -[UIBarButtonItemGroup _items]((id *)v9);
        _UIButtonBarSetItemOwners(v11, v4);
      }
      uint64_t v6 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }
}

void _UIButtonBarSetItemOwners(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v9 + 1) + 8 * v8++) _setViewOwner:v4];
      }
      while (v6 != v8);
      uint64_t v6 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

id _UIButtonBarButtonFromItem(void *a1)
{
  id v1 = [a1 view];
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

uint64_t _UIViewControllerUseContentScrollViewAPI()
{
  if (qword_1EB25BB30 != -1) {
    dispatch_once(&qword_1EB25BB30, &__block_literal_global_142);
  }
  return _MergedGlobals_136;
}

void _UIViewControllerAccumulateSafeAreaInsetsIncludingChildrenIntoParentView(double *a1, void *a2, void *a3)
{
  uint64_t v124 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (!v5 || ((*((_DWORD *)v5 + 94) >> 1) & 3u) - 1 > 1 || ([*((id *)v5 + 4) isHidden] & 1) != 0)
  {
    double v112 = 0.0;
LABEL_5:
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    goto LABEL_6;
  }
  double v112 = 0.0;
  [*((id *)v5 + 4) alpha];
  if (v14 < 0.01) {
    goto LABEL_5;
  }
  double v7 = 0.0;
  double v8 = 0.0;
  double v9 = 0.0;
  double v10 = 0.0;
  double v11 = 0.0;
  double v12 = 0.0;
  double v13 = 0.0;
  if ([*((id *)v5 + 4) isDescendantOfView:v6])
  {
    unsigned __int8 v89 = v6;
    [*((id *)v5 + 4) safeAreaInsets];
    double v16 = fmax(v15, 0.0);
    double v18 = fmax(v17, 0.0);
    double v20 = fmax(v19, 0.0);
    double v22 = fmax(v21, 0.0);
    [v5 _overlayInsetsAdjustment];
    double v9 = v23;
    double v8 = v24;
    double v7 = v25;
    double v27 = v26;
    long long v119 = 0u;
    long long v120 = 0u;
    long long v121 = 0u;
    long long v122 = 0u;
    id v28 = *((id *)v5 + 58);
    uint64_t v29 = [v28 countByEnumeratingWithState:&v119 objects:v123 count:16];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)v120;
      do
      {
        for (uint64_t i = 0; i != v30; ++i)
        {
          if (*(void *)v120 != v31) {
            objc_enumerationMutation(v28);
          }
          double v33 = *(void **)(*((void *)&v119 + 1) + 8 * i);
          long long v117 = 0u;
          long long v118 = 0u;
          long long v115 = 0u;
          long long v116 = 0u;
          _UIViewControllerAccumulateSafeAreaInsetsIncludingChildrenIntoParentView(&v115, v33, *((void *)v5 + 4));
          uint64_t v34 = [v33 edgesForExtendedLayout];
          uint64_t v35 = v34;
          double v36 = fmax(v16, *(double *)&v115);
          if (v34) {
            double v16 = v36;
          }
          double v37 = fmax(v18, *((double *)&v115 + 1));
          if ((v34 & 2) != 0) {
            double v18 = v37;
          }
          double v38 = fmax(v22, *((double *)&v116 + 1));
          if ((v34 & 8) != 0) {
            double v22 = v38;
          }
          if ((v34 & 4) != 0)
          {
            double v20 = fmax(v20, *(double *)&v116);
          }
          else if (([v5 _isNavigationController] & 1) != 0 {
                 || [v5 _isTabBarController])
          }
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0)
            {
              double v103 = v16;
              double v106 = v22;
              double v109 = v20;
              double v113 = v27;
              char v114 = 0;
              [v33 setEdgesForExtendedLayout:~(_BYTE)v35 & 0xF];
              [v5 _edgeInsetsForChildViewController:v33 insetsAreAbsolute:&v114];
              double v40 = v39;
              double v42 = v41;
              double v44 = v43;
              double v46 = v45;
              [v33 setEdgesForExtendedLayout:v35];
              double v47 = v40 + 0.0;
              if (v35) {
                double v47 = 0.0;
              }
              double v48 = v42 + 0.0;
              if ((~(_BYTE)v35 & 2) == 0) {
                double v48 = 0.0;
              }
              double v49 = v44 + 0.0;
              if ((~(_BYTE)v35 & 4) == 0) {
                double v49 = 0.0;
              }
              double v50 = v46 + 0.0;
              if ((~(_BYTE)v35 & 8) == 0) {
                double v50 = 0.0;
              }
              if (!v114)
              {
                double v47 = v103 + v47;
                double v48 = v18 + v48;
                double v49 = v109 + v49;
                double v50 = v106 + v50;
              }
              double v27 = v113;
              double v22 = v50;
              double v20 = v49;
              double v18 = v48;
              double v16 = v47;
            }
          }
          double v9 = v9 + *(double *)&v117;
          double v8 = v8 + *((double *)&v117 + 1);
          double v7 = v7 + *(double *)&v118;
          double v27 = v27 + *((double *)&v118 + 1);
        }
        uint64_t v30 = [v28 countByEnumeratingWithState:&v119 objects:v123 count:16];
      }
      while (v30);
    }
    double v107 = v22;
    double v110 = v20;
    double v112 = v27;

    id v51 = *((id *)v5 + 4);
    id v6 = v89;
    id v52 = v89;
    [v51 bounds];
    double v54 = v53;
    double v56 = v55;
    double v58 = v57;
    double v98 = v59;
    objc_msgSend(v51, "convertRect:toView:", v52);
    CGFloat v100 = v60;
    CGFloat v101 = v61;
    CGFloat v102 = v63;
    CGFloat v104 = v62;
    objc_msgSend(v51, "convertRect:toView:", v52, v18 + v54, v16 + v56, v58 - (v107 + v18), v98 - (v110 + v16));
    CGFloat v91 = v64;
    CGFloat v92 = v65;
    CGFloat v93 = v67;
    CGFloat v94 = v66;

    [v52 bounds];
    double v69 = v68;
    double v96 = v71;
    double v97 = v70;
    double rect = v72;
    [v52 safeAreaInsets];
    double v13 = v73;
    double v12 = v74;
    double v11 = v75;
    double v10 = v76;

    CGFloat v90 = v69;
    double v108 = v97 + v13;
    double v111 = v69 + v12;
    v125.origin.CGFloat x = v100;
    v125.size.CGFloat height = v101;
    v125.size.CGFloat width = v102;
    v125.origin.CGFloat y = v104;
    double MinY = CGRectGetMinY(v125);
    v126.origin.CGFloat y = v97 + v13;
    v126.origin.CGFloat x = v69 + v12;
    double v99 = v96 - (v12 + v10);
    v126.size.CGFloat width = v99;
    double v77 = rect - (v13 + v11);
    v126.size.CGFloat height = v77;
    if (MinY <= CGRectGetMinY(v126))
    {
      v127.origin.CGFloat x = v91;
      v127.size.CGFloat height = v92;
      v127.size.CGFloat width = v93;
      v127.origin.CGFloat y = v94;
      double v84 = CGRectGetMinY(v127);
      v128.origin.CGFloat x = v90;
      v128.size.CGFloat width = v96;
      v128.origin.CGFloat y = v97;
      v128.size.CGFloat height = rect;
      double v78 = v84 - CGRectGetMinY(v128);
      if (v13 < v78) {
        double v13 = v78;
      }
    }
    v129.origin.CGFloat x = v100;
    v129.size.CGFloat height = v101;
    v129.size.CGFloat width = v102;
    v129.origin.CGFloat y = v104;
    double MinX = CGRectGetMinX(v129);
    v130.origin.CGFloat y = v108;
    v130.origin.CGFloat x = v111;
    v130.size.CGFloat width = v96 - (v12 + v10);
    v130.size.CGFloat height = v77;
    if (MinX <= CGRectGetMinX(v130))
    {
      v131.origin.CGFloat x = v91;
      v131.size.CGFloat height = v92;
      v131.size.CGFloat width = v93;
      v131.origin.CGFloat y = v94;
      double v86 = CGRectGetMinX(v131);
      v132.origin.CGFloat x = v90;
      v132.size.CGFloat width = v96;
      v132.origin.CGFloat y = v97;
      v132.size.CGFloat height = rect;
      double v79 = v86 - CGRectGetMinX(v132);
      if (v12 < v79) {
        double v12 = v79;
      }
    }
    v133.origin.CGFloat x = v100;
    v133.size.CGFloat height = v101;
    v133.size.CGFloat width = v102;
    v133.origin.CGFloat y = v104;
    double MaxY = CGRectGetMaxY(v133);
    v134.origin.CGFloat y = v108;
    v134.origin.CGFloat x = v111;
    v134.size.CGFloat width = v99;
    v134.size.CGFloat height = v77;
    if (MaxY >= CGRectGetMaxY(v134))
    {
      v135.origin.CGFloat x = v90;
      v135.size.CGFloat width = v96;
      v135.origin.CGFloat y = v97;
      v135.size.CGFloat height = rect;
      double v88 = CGRectGetMaxY(v135);
      v136.origin.CGFloat x = v91;
      v136.size.CGFloat height = v92;
      v136.size.CGFloat width = v93;
      v136.origin.CGFloat y = v94;
      double v80 = v88 - CGRectGetMaxY(v136);
      if (v11 < v80) {
        double v11 = v80;
      }
    }
    v137.origin.CGFloat x = v100;
    v137.size.CGFloat height = v101;
    v137.size.CGFloat width = v102;
    v137.origin.CGFloat y = v104;
    double MaxX = CGRectGetMaxX(v137);
    v138.origin.CGFloat y = v108;
    v138.origin.CGFloat x = v111;
    v138.size.CGFloat width = v99;
    v138.size.CGFloat height = v77;
    if (MaxX >= CGRectGetMaxX(v138))
    {
      v139.origin.CGFloat x = v90;
      v139.size.CGFloat width = v96;
      v139.origin.CGFloat y = v97;
      v139.size.CGFloat height = rect;
      double v81 = CGRectGetMaxX(v139);
      v140.origin.CGFloat x = v91;
      v140.size.CGFloat height = v92;
      v140.size.CGFloat width = v93;
      v140.origin.CGFloat y = v94;
      double v82 = v81 - CGRectGetMaxX(v140);
      if (v10 < v82) {
        double v10 = v82;
      }
    }
  }
LABEL_6:
  *a1 = v13;
  a1[1] = v12;
  a1[2] = v11;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v7;
  a1[7] = v112;
}

double _UIBackgroundExtensionForBar(void *a1)
{
  id v1 = a1;
  [v1 frame];
  CGFloat MaxY = CGRectGetMaxY(v5);
  double v3 = _UIBackgroundExtensionForBarWithMaxY(v1, MaxY);

  return v3;
}

BOOL static UIContentSizeCategory.>= infix(_:_:)(NSString *a1, NSString *a2)
{
  return UIContentSizeCategoryCompareToCategory(a1, a2) != NSOrderedAscending;
}

ValueMetadata *type metadata accessor for UITraitDisplayScale()
{
  return &type metadata for UITraitDisplayScale;
}

uint64_t sub_185534580(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB2564A8, &qword_1EB256498);
}

uint64_t sub_1855345A8(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256490, &qword_1EB256480);
}

uint64_t sub_1855345D0(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256460, &qword_1EB256450);
}

uint64_t sub_1855345F8(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1E8FB00D8, &qword_1E8FB00E0);
}

uint64_t sub_185534620(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256430, &qword_1EB256420);
}

uint64_t sub_185534648(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB256418, &qword_1EB256400);
}

uint64_t sub_185534670(uint64_t a1, uint64_t a2)
{
  return sub_185407FB0(a1, a2, &qword_1EB255C90, &qword_1EB255C78);
}

double UIRectCenteredIntegralRectScale(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v16 = a5 + (a7 - a3) * 0.5;
  double v17 = a9;
  if (a9 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v17 = *(double *)&AdjustToScale___s_0;
  }
  BOOL v18 = v17 == 1.0;
  double v19 = round(v16 * v17) / v17;
  double v20 = round(v16);
  if (v18) {
    double v21 = v20;
  }
  else {
    double v21 = v19;
  }
  if (a9 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v21;
}

void UICollectionLayoutListConfiguration.backgroundColor.setter(void *a1)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    CGRect v5 = *(void **)(v4 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v4 + 16), sel_copy);
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1856ACF00();
    swift_dynamicCast();
    CGRect v5 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v8;
    swift_release();
    *id v1 = v6;
  }
  id v7 = v5;
  objc_msgSend(v7, sel_setBackgroundColor_, a1);
}

void sub_1855385E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855387C0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t _UIEngineHostingViewsShouldGuardWantsAutolayoutFlagPropagation()
{
  if (qword_1EB25A6C0 != -1) {
    dispatch_once(&qword_1EB25A6C0, &__block_literal_global_855_0);
  }
  return byte_1EB25A5B2;
}

id sub_185539228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v6 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  id v7 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  double v8 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(aBlock);
  v8(a3, a4);
  sub_1853B76BC((uint64_t)aBlock, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  swift_dynamicCast();
  sub_1853B8150((uint64_t)v27, (uint64_t)v25, &qword_1EB256B10);
  uint64_t v9 = v26;
  sub_1853B93B8((uint64_t)v25, &qword_1EB256B10);
  if (v9) {
    uint64_t v10 = sub_186A1F83C();
  }
  else {
    uint64_t v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  double v11 = sub_1858BB4A4(a3, a4);
  if (v11)
  {
    double v23 = v11;
    uint64_t v24 = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1858C3010;
    uint64_t AssociatedTypeWitness = &block_descriptor_343;
    double v13 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    double v13 = 0;
  }
  double v14 = self;
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1;
  id v17 = objc_msgSend(v14, sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v6, v7, v10, v13, v15 & 1, v16 & 1, v19, a1);
  _Block_release(v13);

  swift_unknownObjectRelease();
  return v17;
}

id sub_1855394F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = self;
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  double v8 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v9 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
  double v10 = v15;
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  id v13 = objc_msgSend(v7, sel__defineCGFloatTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v8, v9, v11 & 1, v12 & 1, (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1, a1, v10);

  return v13;
}

CFNumberRef _UIDefineNewTrait(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  CFNumberRef v3 = _UIDefineNewTraitLocked((uint64_t)v5);
  os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
  return v3;
}

CFNumberRef _UIDefineNewTraitLocked(uint64_t a1)
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 8);
  if (![*(id *)(a1 + 16) length])
  {
    double v37 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v37, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 146, @"Trait name cannot be nil or empty");
  }
  if (![*(id *)(a1 + 24) length]) {
    *(void *)(a1 + 24) = [NSString stringWithFormat:@"%@:%@", objc_msgSend((id)objc_msgSend(MEMORY[0x1E4F29128], "UUID"), "UUIDString"), *(void *)(a1 + 16)];
  }
  unint64_t v3 = _MergedGlobals_1194;
  if (v2 && (CFNumberRef v4 = *(const __CFNumber **)a1) != 0)
  {
    uint64_t v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
    long long v64 = 0u;
    _UIGetTraitMetadataLocked(v4, 0, (uint64_t)&v64);
    if (*((void *)&v64 + 1))
    {
      double v39 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      [v39 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 159, @"Attempting to define a trait for a placeholder token that corresponds to a trait that was already defined: %@", *(void *)a1 file lineNumber description];
    }
    CFNumberRef v5 = 0;
    unint64_t v3 = v64 - 27;
    int v6 = 1;
  }
  else
  {
    id v7 = (void *)_traitTokensByIdentifier;
    if (!_traitTokensByIdentifier)
    {
      double v38 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      objc_msgSend(v38, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 163, @"_traitTokensByIdentifier was never initialized");
      id v7 = (void *)_traitTokensByIdentifier;
    }
    CFNumberRef v5 = (const __CFNumber *)[v7 objectForKey:*(void *)(a1 + 24)];
    if (v5)
    {
      uint64_t v67 = 0;
      long long v65 = 0u;
      long long v66 = 0u;
      long long v64 = 0u;
      _UIGetTraitMetadataLocked(v5, 0, (uint64_t)&v64);
      int v6 = *((void *)&v64 + 1) == 0;
      if (!*((void *)&v64 + 1)) {
        unint64_t v3 = v64 - 27;
      }
    }
    else
    {
      int v6 = 0;
    }
  }
  uint64_t v8 = qword_1EB2623D8;
  if (qword_1EB2623D8)
  {
    if (v3 < qword_1EB2623D8) {
      goto LABEL_29;
    }
    CFNumberRef v9 = v5;
    unint64_t v10 = vcvtpd_u64_f64((double)(unint64_t)qword_1EB2623D8 * 1.6);
    if (qword_1EB2623D8 >= v10)
    {
      size_t v11 = 0;
    }
    else
    {
      size_t v11 = 56 * v10;
      if (is_mul_ok(v10, 0x38uLL))
      {
LABEL_26:
        qword_1EB2623C0 = (uint64_t)malloc_type_realloc((void *)qword_1EB2623C0, v11, 0xE1F269C0uLL);
        if (!qword_1EB2623C0)
        {
          double v41 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
          objc_msgSend(v41, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 190, @"Failed to reallocate dynamic trait metadata with capacity: %lu", v10);
        }
        goto LABEL_28;
      }
    }
    char v12 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v12 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 187, @"Cannot reallocate dynamic trait metadata with existing capacity: %lu, new capacity: %lu", v8, v10 file lineNumber description];
    goto LABEL_26;
  }
  CFNumberRef v9 = v5;
  qword_1EB2623C0 = (uint64_t)malloc_type_malloc(0x380uLL, 0x108004018ED67BBuLL);
  if (qword_1EB2623C0)
  {
    unint64_t v10 = 16;
  }
  else
  {
    double v40 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    unint64_t v10 = 16;
    objc_msgSend(v40, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 180, @"Failed to allocate dynamic trait metadata with capacity: %lu", 16);
  }
LABEL_28:
  qword_1EB2623D8 = v10;
  CFNumberRef v5 = v9;
LABEL_29:
  if (((v5 != 0) & ~v6) == 0)
  {
    unint64_t v13 = v3;
    unint64_t v63 = v3 + 27;
    uint64_t v14 = *(void *)(a1 + 8);
    if (v14 == 1)
    {
      id v15 = *(id *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 8);
    }
    uint64_t v62 = [*(id *)(a1 + 16) copy];
    uint64_t v16 = [*(id *)(a1 + 24) copy];
    uint64_t v17 = [*(id *)(a1 + 32) copy];
    uint64_t v18 = *(void *)(a1 + 40);
    char v19 = (4 * *(unsigned char *)(a1 + 50)) | (2 * *(unsigned char *)(a1 + 48));
    int v20 = *(unsigned __int8 *)(a1 + 49);
    char v21 = v19 | (8 * v20);
    char v22 = v6;
    if (v6)
    {
      uint64_t v61 = v2;
      double v23 = (void *)(qword_1EB2623C0 + 56 * v13);
      uint64_t v24 = (void *)v23[2];
      double v25 = (void *)v23[3];
      uint64_t v26 = (void *)v23[4];
      if (v24) {

      }
      if (v25) {
      uint64_t v2 = v61;
      }
      if (v26) {
    }
      }
    uint64_t v27 = qword_1EB2623C0 + 56 * v13;
    *(void *)uint64_t v27 = v63;
    *(void *)(v27 + _Block_object_dispose(&STACK[0x3A0], 8) = v14;
    *(void *)(v27 + 16) = v62;
    *(void *)(v27 + 24) = v16;
    *(void *)(v27 + 32) = v17;
    *(void *)(v27 + 40) = v18;
    *(unsigned char *)(v27 + 4_Block_object_dispose(&STACK[0x3A0], 8) = v21;
    *(_DWORD *)(v27 + 49) = 0;
    *(_DWORD *)(v27 + 52) = 0;
    CFNumberRef v5 = (const __CFNumber *)[NSNumber numberWithUnsignedInteger:v63];
    if ((v22 & 1) == 0)
    {
      [(id)_traitTokensByIdentifier setObject:v5 forKey:v16];
      _MergedGlobals_1194 = v13 + 1;
    }
    if (v2 && v20 && dyld_program_sdk_at_least()) {
      _UITraitTokenSetInsert(_allTraitTokensAffectingColorAppearance, v63, v28);
    }
    return v5;
  }
  if (!v2) {
    return v5;
  }
  uint64_t v67 = 0;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v64 = 0u;
  _UIGetTraitMetadataLocked(v5, 0, (uint64_t)&v64);
  unint64_t v29 = *((void *)&v64 + 1);
  if (*((void *)&v64 + 1) == *(void *)(a1 + 8))
  {
    uint64_t v30 = (void *)v65;
  }
  else
  {
    double v42 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v43 = [NSString stringWithUTF8String:"NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"];
    uint64_t v44 = *(void *)(a1 + 16);
    double v45 = _UITraitDataTypeToString(*(void *)(a1 + 8));
    uint64_t v30 = (void *)v65;
    [v42 handleFailureInFunction:v43, @"UITrait_NonARC.m", 240, @"Attempting to use a trait named '%@' with data type %@ that has the same identifier '%@' as a previously used trait named '%@' with a different data type %@. Trait definitions with the same identifier must have the same data type.", v44, v45, *(void *)(a1 + 24), (void)v65, _UITraitDataTypeToString(v29) file lineNumber description];
  }
  if (([v30 isEqualToString:*(void *)(a1 + 16)] & 1) == 0)
  {
    double v46 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v46 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 241, @"Attempting to use a trait named '%@' that has the same identifier '%@' as a previously used trait with a different name '%@'. Trait definitions with the same identifier must have the same name.", *(void *)(a1 + 16), *(void *)(a1 + 24), v30 file lineNumber description];
  }
  uint64_t v31 = *(void **)(a1 + 40);
  double v32 = (void *)*((void *)&v66 + 1);
  uint64_t v33 = v66;
  unsigned int v34 = v67;
  if (v67)
  {
    switch(v29)
    {
      case 1uLL:
        double v32 = (void *)**((void **)&v66 + 1);
        if (v31 != **((void ***)&v66 + 1)) {
          goto LABEL_58;
        }
        break;
      case 2uLL:
      case 3uLL:
      case 4uLL:
        double v32 = (void *)**((void **)&v66 + 1);
        goto LABEL_56;
      default:
        uint64_t v35 = objc_msgSend(MEMORY[0x1E4F28B00], "currentHandler", *((void *)&v66 + 1));
        [v35 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "_UITraitWordValue _UITraitDefaultValue(const _UITraitMetadata)"), @"UITrait_Internal.h", 94, @"Data type is unknown for trait %@", v30 file lineNumber description];
        double v32 = 0;
        goto LABEL_56;
    }
    goto LABEL_64;
  }
LABEL_56:
  if (v32 != v31)
  {
    if (v29 != 1) {
      goto LABEL_71;
    }
LABEL_58:
    if (!v33)
    {
      if (v31 && v32 && (objc_msgSend(v31, "isEqual:") & 1) != 0) {
        goto LABEL_64;
      }
      goto LABEL_71;
    }
    if (((*(uint64_t (**)(uint64_t, void *))(v33 + 16))(v33, v31) & 1) == 0)
    {
LABEL_71:
      double v47 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
      [v47 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 242, @"Attempt to use a trait named '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValue. Trait definitions with the same identifier must have the same defaultValue.", *(void *)(a1 + 16), *(void *)(a1 + 24), v30 file lineNumber description];
    }
  }
LABEL_64:
  if (((v34 >> 3) & 1) != *(unsigned char *)(a1 + 49))
  {
    double v48 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v48 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), @"UITrait_NonARC.m", 243, @"Attempt to use a trait named '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different affectsColorAppearance value. Trait definitions with the same identifier must have the same affectsColorAppearance value.", *(void *)(a1 + 16), *(void *)(a1 + 24), v30 file lineNumber description];
  }
  if (((v34 >> 1) & 1) != *(unsigned char *)(a1 + 48))
  {
    if (os_variant_has_internal_diagnostics())
    {
      double v55 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v55, OS_LOG_TYPE_FAULT))
      {
        uint64_t v56 = *(void *)(a1 + 16);
        uint64_t v57 = *(void *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        uint64_t v69 = v56;
        __int16 v70 = 2112;
        uint64_t v71 = v57;
        __int16 v72 = 2112;
        double v73 = v30;
        _os_log_fault_impl(&dword_1853B0000, v55, OS_LOG_TYPE_FAULT, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValueRepresentsUnspecified value. Trait definitions with the same identifier must have the same defaultValueRepresentsUnspecified value.", buf, 0x20u);
      }
    }
    else
    {
      double v49 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB2623E0) + 8);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        uint64_t v50 = *(void *)(a1 + 16);
        uint64_t v51 = *(void *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        uint64_t v69 = v50;
        __int16 v70 = 2112;
        uint64_t v71 = v51;
        __int16 v72 = 2112;
        double v73 = v30;
        _os_log_impl(&dword_1853B0000, v49, OS_LOG_TYPE_ERROR, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValueRepresentsUnspecified value. Trait definitions with the same identifier must have the same defaultValueRepresentsUnspecified value.", buf, 0x20u);
      }
    }
  }
  if (((v34 >> 2) & 1) != *(unsigned char *)(a1 + 50))
  {
    if (os_variant_has_internal_diagnostics())
    {
      double v58 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v58, OS_LOG_TYPE_FAULT))
      {
        uint64_t v59 = *(void *)(a1 + 16);
        uint64_t v60 = *(void *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        uint64_t v69 = v59;
        __int16 v70 = 2112;
        uint64_t v71 = v60;
        __int16 v72 = 2112;
        double v73 = v30;
        _os_log_fault_impl(&dword_1853B0000, v58, OS_LOG_TYPE_FAULT, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different _isPrivate value. Trait definitions with the same identifier must have the same _isPrivate value.", buf, 0x20u);
      }
    }
    else
    {
      id v52 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB2623E8) + 8);
      if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
      {
        uint64_t v53 = *(void *)(a1 + 16);
        uint64_t v54 = *(void *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        uint64_t v69 = v53;
        __int16 v70 = 2112;
        uint64_t v71 = v54;
        __int16 v72 = 2112;
        double v73 = v30;
        _os_log_impl(&dword_1853B0000, v52, OS_LOG_TYPE_ERROR, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different _isPrivate value. Trait definitions with the same identifier must have the same _isPrivate value.", buf, 0x20u);
      }
    }
  }
  return v5;
}

id sub_18553A1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  CFNumberRef v9 = (char *)&v17 - v8;
  id v18 = self;
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  unint64_t v10 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  size_t v11 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_186A1EAEC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  uint64_t v12 = v20;
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  LOBYTE(AssociatedTypeWitness) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  id v15 = objc_msgSend(v18, sel__defineNSIntegerTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v10, v11, v12, v13 & 1, AssociatedTypeWitness & 1, v14 & 1, v19);

  return v15;
}

uint64_t static UITraitDefinition._isPrivate.getter()
{
  return 0;
}

BOOL static UITraitDefinition._defaultValueRepresentsUnspecified.getter(uint64_t a1, uint64_t a2)
{
  CFNumberRef v4 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  v9[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v9);
  v4(a1, a2);
  sub_1853B76BC((uint64_t)v9, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  swift_dynamicCast();
  sub_1853B8150((uint64_t)v8, (uint64_t)v7, &qword_1EB256B10);
  BOOL v5 = v7[3] == 0;
  sub_1853B93B8((uint64_t)v7, &qword_1EB256B10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
  return v5;
}

id _UICollectionViewRequestingCellOrSupplementaryView()
{
  uint64_t v0 = _UIGetCurrentFallbackView();
  if (v0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v1 = v0;
      if ([v1 _isRequestingCellOrSupplementary]) {
        goto LABEL_6;
      }
    }
  }
  id v1 = 0;
LABEL_6:

  return v1;
}

void sub_18553B13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18553B1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18553B360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18553B834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40((uint64_t)va);
  _Unwind_Resume(a1);
}

void _UIAnalyzeMenu(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4[0] = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  v4[1] = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v4[2] = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  v4[3] = objc_alloc_init(_UICommandIdentifierDictionary);
  v4[4] = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  void v4[5] = objc_alloc_init(_UICommandIdentifierDictionary);
  if (_UIRecursivelyAnalyzeMenu(v3, (uint64_t)v4))
  {
    __copy_constructor_8_8_s0_s8_s16_s24_s32_s40((void *)a1, v4);
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40((uint64_t)v4);
}

void sub_18553B90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id __copy_constructor_8_8_s0_s8_s16_s24_s32_s40(void *a1, id *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  id result = a2[5];
  a1[5] = result;
  return result;
}

void sub_18553CE94(_Unwind_Exception *a1)
{
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(v1);
  _Unwind_Resume(a1);
}

uint64_t __workaround10030904InvokeWithTarget_block_invoke(uint64_t a1)
{
  PushNextClassForSettingIMP(*(void **)(a1 + 32), *(SEL *)(a1 + 48));
  IMP v2 = CurrentOrginalSettingIMP(*(void **)(a1 + 32), *(const char **)(a1 + 48));
  [*(id *)(a1 + 40) setTarget:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) invokeUsingIMP:v2];
  id v3 = *(void **)(a1 + 32);
  CFNumberRef v4 = *(const char **)(a1 + 48);
  id AssociatedObject = objc_getAssociatedObject(v3, &unk_1EB260D5A);
  int v6 = (void *)[AssociatedObject objectForKey:NSStringFromSelector(v4)];
  return [v6 removeLastObject];
}

uint64_t PushNextClassForSettingIMP(void *a1, SEL aSelector)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  CFNumberRef v4 = NSStringFromSelector(aSelector);
  if (pthread_main_np() != 1)
  {
    if (os_variant_has_internal_diagnostics())
    {
      id v18 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412546;
        uint64_t v20 = v4;
        __int16 v21 = 2112;
        char v22 = a1;
        _os_log_fault_impl(&dword_1853B0000, v18, OS_LOG_TYPE_FAULT, "Unsupported use of UIKit view-customization API off the main thread. -%@ sent to %@", buf, 0x16u);
      }
    }
    else
    {
      uint64_t v16 = *(NSObject **)(__UILogGetCategoryCachedImpl("Assert", &qword_1EB260D90) + 8);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        uint64_t v20 = v4;
        __int16 v21 = 2112;
        char v22 = a1;
        _os_log_impl(&dword_1853B0000, v16, OS_LOG_TYPE_ERROR, "Unsupported use of UIKit view-customization API off the main thread. -%@ sent to %@", buf, 0x16u);
      }
    }
  }
  id AssociatedObject = objc_getAssociatedObject(a1, &unk_1EB260D5A);
  if (!AssociatedObject)
  {
    id AssociatedObject = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    objc_setAssociatedObject(a1, &unk_1EB260D5A, AssociatedObject, (void *)1);
  }
  id v6 = (id)[AssociatedObject objectForKey:v4];
  if (!v6)
  {
    id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    [AssociatedObject setObject:v6 forKey:v4];
  }
  uint64_t v7 = (objc_class *)[v6 lastObject];
  uint64_t v8 = v7;
  if (v7) {
    uint64_t Superclass = (uint64_t)class_getSuperclass(v7);
  }
  else {
    uint64_t Superclass = objc_opt_class();
  }
  unint64_t v10 = (objc_class *)Superclass;
  size_t v11 = NSStringFromSelector(aSelector);
  uint64_t v12 = UIAppearancePrefixedSelectorForSelectorString(v11);
  char v13 = _classWithImplementationOfSelector(v10, v12, 0);
  if (v13) {
    char v14 = v13;
  }
  else {
    char v14 = v8;
  }
  if (!v14)
  {
    uint64_t v17 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    [v17 handleFailureInFunction:objc_msgSend(NSString, "stringWithUTF8String:", "void PushNextClassForSettingIMP(id, SEL)"), @"UIAppearance.m", 760, @"Have you sent -%@ to %@ off the main thread? To verify, look for a complaint in the logs: \"Unsupported use of UIKit…\", and fix the problem if you find it. If your use is main-thread only please file a radar on UIKit, and attach this log. exercisedImplementations = %@", v4, a1, AssociatedObject file lineNumber description];
  }
  return [v6 addObject:v14];
}

objc_class *_classWithImplementationOfSelector(Class cls, const char *a2, int a3)
{
  uint64_t Superclass = cls;
  if (!cls) {
    return Superclass;
  }
  while (a3
       && [NSStringFromClass(Superclass) rangeOfString:@"NSKVONotifying_"] == 0)
  {
LABEL_11:
    uint64_t Superclass = class_getSuperclass(Superclass);
    if (!Superclass) {
      return Superclass;
    }
  }
  unsigned int outCount = 0;
  id v6 = class_copyMethodList(Superclass, &outCount);
  uint64_t v7 = v6;
  if (!outCount)
  {
    if (v6) {
LABEL_10:
    }
      free(v7);
    goto LABEL_11;
  }
  uint64_t v8 = 0;
  while (method_getName(v7[v8]) != a2)
  {
    if (++v8 >= (unint64_t)outCount) {
      goto LABEL_10;
    }
  }
  free(v7);
  return Superclass;
}

uint64_t __UILogCategoryNewNode(const char *a1)
{
  unint64_t v2 = (g_UILogCategoriesAllocator_1 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v2 < g_UILogCategoriesAllocator_1 || v2 > 0x26E0)
  {
    CFNumberRef v4 = malloc_type_malloc(0x2800uLL, 0x67DDC7D9uLL);
    unint64_t v2 = 0;
    qword_1EB264A40 = (uint64_t)v4;
  }
  else
  {
    CFNumberRef v4 = (void *)qword_1EB264A40;
  }
  g_UILogCategoriesAllocator_1 = v2 + 288;
  uint64_t v5 = (uint64_t)v4 + v2;
  *(unsigned char *)uint64_t v5 = 0;
  *(_DWORD *)(v5 + 4) = 0;
  *(void *)(v5 + _Block_object_dispose(&STACK[0x3A0], 8) = 0;
  id v6 = [NSString stringWithUTF8String:a1];
  uint64_t v7 = _UIKitUserDefaults();
  uint64_t v8 = [@"Log" stringByAppendingString:v6];
  char v9 = 1;
  __associateFlagWithPreferencesKeyLocked(v5, 1, v7, v8);
  uint64_t v10 = 0;
  while (1)
  {
    char v11 = v9;
    if ([v6 isEqualToString:(&g_UILogCategoriesOverrides)[4 * v10]]) {
      break;
    }
    char v9 = 0;
    uint64_t v10 = 1;
    if ((v11 & 1) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v12 = &(&g_UILogCategoriesOverrides)[4 * v10];
  char v13 = v12[1];
  if (v13) {
    __associateFlagWithPreferencesKeyLocked(v5, 2, v7, v13);
  }
  char v14 = v12[2];
  if (v14)
  {
    id v15 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
    __associateFlagWithPreferencesKeyLocked(v5, 4, v15, v14);
  }
  uint64_t v16 = (uint64_t)*(&(&g_UILogCategoriesOverrides)[4 * v10] + 3);
  if (v16 && (*(unsigned int (**)(void))(v16 + 16))())
  {
    *(_DWORD *)(v5 + 4) |= 8u;
    *(unsigned char *)uint64_t v5 = 1;
  }
LABEL_18:
  *(void *)(v5 + _Block_object_dispose(&STACK[0x3A0], 8) = os_log_create("com.apple.UIKit", a1);

  return v5 + 16;
}

SEL UIAppearancePrefixedSelectorForSelectorString(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = (uint64_t)a1;
  if ([a1 characterAtIndex:0] == 95) {
    uint64_t v2 = [v1 substringFromIndex:1];
  }
  if ([v1 rangeOfString:@"_UIAppearance_"]) {
    uint64_t v1 = (void *)[@"_UIAppearance_" stringByAppendingString:v2];
  }
  return NSSelectorFromString((NSString *)v1);
}

id _UIKitUserDefaults()
{
  if (qword_1EB264AC8 != -1) {
    dispatch_once(&qword_1EB264AC8, &__block_literal_global_606);
  }
  uint64_t v0 = (void *)_MergedGlobals_1291;
  return v0;
}

void __associateFlagWithPreferencesKeyLocked(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  char v9 = [v7 objectForKey:v8];
  __updateCategoryFlagValueLocked(a1, a2, v9);

  uint64_t v10 = malloc_type_malloc(0x28uLL, 0x10A0040D8596764uLL);
  *(void *)uint64_t v10 = a1;
  v10[2] = a2;
  *((void *)v10 + 2) = v7;
  *((void *)v10 + 3) = v8;
  *((void *)v10 + 4) = qword_1EB264A28;
  qword_1EB264A28 = (uint64_t)v10;
  if (qword_1EB264A48 != -1)
  {
    dispatch_once(&qword_1EB264A48, &__block_literal_global_10_12);
  }
}

void __updateCategoryFlagValueLocked(uint64_t a1, int a2, void *a3)
{
  id v7 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    int v5 = [v7 BOOLValue];

    if (v5)
    {
      int v6 = *(_DWORD *)(a1 + 4) | a2;
      goto LABEL_7;
    }
  }
  else
  {
  }
  int v6 = *(_DWORD *)(a1 + 4) & ~a2;
LABEL_7:
  atomic_store((v6 & 0xF) != 0, (unsigned __int8 *)a1);
  *(_DWORD *)(a1 + 4) = v6;
}

id _UIGetAnimationCurveSpline(unint64_t a1, double a2, double a3, double a4, double a5)
{
  int v6 = 0;
  if (a1 != 7 && a1 > 5) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = a1;
  }
  switch(v8)
  {
    case 0uLL:
      char v9 = (void *)MEMORY[0x1E4F39C10];
      uint64_t v10 = (void *)MEMORY[0x1E4F3A490];
      goto LABEL_14;
    case 1uLL:
      char v9 = (void *)MEMORY[0x1E4F39C10];
      uint64_t v10 = (void *)MEMORY[0x1E4F3A488];
      goto LABEL_14;
    case 2uLL:
    case 7uLL:
      char v9 = (void *)MEMORY[0x1E4F39C10];
      uint64_t v10 = (void *)MEMORY[0x1E4F3A498];
      goto LABEL_14;
    case 3uLL:
      char v9 = (void *)MEMORY[0x1E4F39C10];
      uint64_t v10 = (void *)MEMORY[0x1E4F3A4A0];
      goto LABEL_14;
    case 4uLL:
      LODWORD(a2) = 1059648963;
      LODWORD(a4) = 1051260355;
      LODWORD(a5) = 1.0;
      int v6 = [MEMORY[0x1E4F39C10] functionWithControlPoints:a2 :0.0 :a4 :a5];
      break;
    case 5uLL:
      char v9 = (void *)MEMORY[0x1E4F39C10];
      uint64_t v10 = (void *)MEMORY[0x1E4F3A480];
LABEL_14:
      int v6 = [v9 functionWithName:*v10];
      break;
    default:
      break;
  }
  return v6;
}

id _normalizedAnimationKey(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if ([v1 containsString:@"-"])
  {
    uint64_t v2 = objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "rangeOfString:", @"-"));
  }
  return v2;
}

uint64_t _isAdditivelyAnimatableKeyForLayer(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (qword_1EB25C2C8 != -1) {
    dispatch_once(&qword_1EB25C2C8, &__block_literal_global_3681);
  }
  int v5 = _normalizedAnimationKey(v3);
  if ([(id)qword_1EB25C2C0 containsObject:v5])
  {
    uint64_t v6 = 1;
  }
  else if ([v5 isEqualToString:@"transform"])
  {
    if (v4) {
      [v4 transform];
    }
    else {
      memset(v8, 0, sizeof(v8));
    }
    uint64_t v6 = MEMORY[0x18C1031B0](v8);
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id UniqueAnimationKeyForLayer(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v6;
  char v9 = [v5 animationForKey:v8];

  uint64_t v10 = v8;
  if (v9)
  {
    if (v7) {
      char v11 = v7;
    }
    else {
      char v11 = &stru_1ED0E84C0;
    }
    uint64_t v12 = 2;
    char v13 = v8;
    do
    {
      uint64_t v10 = [NSString stringWithFormat:@"%@-%ld%@", v8, v12, v11];

      ++v12;
      char v14 = [v5 animationForKey:v10];

      char v13 = v10;
    }
    while (v14);
  }

  return v10;
}

uint64_t _UIViewBackingObservesChanges(uint64_t a1)
{
  uint64_t v2 = +[UIView _defaultKeyPathsToSyncWithPrivateSubviews]();
  uint64_t v3 = [v2 containsObject:a1];

  return v3;
}

double UIView._appIntentsIntelligenceProvider.getter@<D0>(_OWORD *a1@<X8>)
{
  if (objc_msgSend(v1, sel__internalAppIntentsIntelligenceProvider))
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1853B8150((uint64_t)v4, (uint64_t)v5, &qword_1EB256B10);
  if (!v6)
  {
    sub_1853B93B8((uint64_t)v5, &qword_1EB256B10);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FAFC88);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    double result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

id _finalAttributesFromSources(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = [v8 count];
  uint64_t v12 = v11;
  if (v10 || v9 || v11)
  {
    char v14 = (void *)[v7 mutableCopy];
    id v13 = v14;
    if (v12 >= 1) {
      [v14 addEntriesFromDictionary:v8];
    }
    if (v9)
    {
      uint64_t v15 = *(void *)off_1E52D2048;
      uint64_t v16 = [v13 objectForKeyedSubscript:*(void *)off_1E52D2048];

      if (!v16) {
        [v13 setObject:v9 forKeyedSubscript:v15];
      }
    }
    if (v10)
    {
      uint64_t v17 = *(void *)off_1E52D2040;
      id v18 = [v13 objectForKeyedSubscript:*(void *)off_1E52D2040];
      uint64_t v19 = [v18 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:v10];
      uint64_t v20 = (void *)v19;
      if (v19) {
        __int16 v21 = (void *)v19;
      }
      else {
        __int16 v21 = v18;
      }
      [v13 setObject:v21 forKeyedSubscript:v17];
    }
  }
  else
  {
    id v13 = v7;
  }

  return v13;
}

BOOL BarButtonItemResolveSystemBackgroundImage(uint64_t a1, void **a2, uint64_t a3)
{
  if (a1 != 24)
  {
    id v5 = 0;
    id v4 = 0;
    goto LABEL_6;
  }
  id v4 = +[UIButton _defaultBackgroundImageNameForType:7 andState:0 compact:a3];
  id v5 = +[UIButton _defaultBackgroundImageColorForType:7 andState:0];
  if (!v4)
  {
LABEL_6:
    BOOL v8 = 0;
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v6 = _BarButtonCachedSystemImageWithName(0, v4, 0, v5, 0, 0.0, 0.0, 0.0, 0.0);
    id v7 = *a2;
    *a2 = (void *)v6;

    BOOL v8 = *a2 != 0;
  }
  else
  {
    BOOL v8 = 1;
  }
LABEL_7:

  return v8;
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)_UIGraphicsGetImageFromCurrentImageContext(0);
}

id _UINavigationBarCastToAugmentedTitleView(void *a1)
{
  id v1 = a1;
  if ([v1 conformsToProtocol:&unk_1ED4923B0]) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

double UIRectCenteredXInRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return round(a5 + (a7 - a3) * 0.5);
}

void sub_18554B178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18554B4A4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_18554CB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x210], 8);
  _Unwind_Resume(a1);
}

BOOL _UISizeEqualToSizeWithPrecision(double a1, double a2, double a3, double a4, double a5)
{
  if (a5 < 0.0)
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    id v13 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _UISizeEqualToSizeWithPrecision(CGSize, CGSize, CGFloat)");
    [v12 handleFailureInFunction:v13, @"_UICollectionLayoutHelpers.m", 229, @"Invalid parameter not satisfying: %@", @"precision >= 0.0" file lineNumber description];
  }
  BOOL v10 = vabdd_f64(a1, a3) <= a5;
  return vabdd_f64(a2, a4) <= a5 && v10;
}

void _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeImENS_9allocatorIS2_EEJNS_10shared_ptrIS2_EENS_6vectorImNS3_ImEEEENS7_IDv4_dNS3_ISA_EEEEEvEENS5_IT_EERKT0_DpOT1_(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3, long long *a4, long long *a5)
{
  BOOL v10 = (char *)operator new(0xB0uLL);
  uint64_t v11 = v10;
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0;
  *(void *)BOOL v10 = &unk_1ED0BEA58;
  uint64_t v12 = (uint64_t)(v10 + 32);
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  long long v13 = *a4;
  uint64_t v14 = *((void *)a4 + 2);
  *((void *)a4 + 1) = 0;
  *((void *)a4 + 2) = 0;
  *(void *)a4 = 0;
  long long v15 = *a5;
  uint64_t v16 = *((void *)a5 + 2);
  *((void *)a5 + 1) = 0;
  *((void *)a5 + 2) = 0;
  *(void *)a5 = 0;
  *((void *)v10 + 5) = 0;
  *((void *)v10 + 6) = 0;
  *((void *)v10 + 4) = &unk_1ED0BEA00;
  *((void *)v10 + 7) = a2;
  *((void *)v10 + _Block_object_dispose(&STACK[0x3A0], 8) = a3;
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  *((void *)v10 + 9) = 0;
  *((void *)v10 + 10) = 0;
  *((void *)v10 + 11) = 0;
  *((_OWORD *)v10 + 6) = v13;
  *((void *)v10 + 14) = v14;
  *(_OWORD *)(v10 + 120) = v15;
  *((void *)v10 + 17) = v16;
  _UIRTreeContainerNode<unsigned long>::commonInit((int64x2_t *)v10 + 2);
  if (a3) {
    std::__shared_weak_count::__release_weak(a3);
  }
  *a1 = v12;
  a1[1] = (uint64_t)v11;
  std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>((uint64_t)a1, (void *)v11 + 5, v12);
}

void sub_18554DC04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  id v5 = v2[5].__vftable;
  if (v5)
  {
    v2[5].__shared_owners_ = (uint64_t)v5;
    operator delete(v5);
  }
  uint64_t v6 = v2[4].__vftable;
  if (v6)
  {
    v2[4].__shared_owners_ = (uint64_t)v6;
    operator delete(v6);
  }
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100]((void ***)va);
  shared_weak_owners = (std::__shared_weak_count *)v2[2].__shared_weak_owners_;
  if (shared_weak_owners) {
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  }
  BOOL v8 = (std::__shared_weak_count *)v2[2].__vftable;
  if (v8) {
    std::__shared_weak_count::__release_weak(v8);
  }
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_18554DD84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  id v9 = v7[5].__vftable;
  if (v9)
  {
    v7[5].__shared_owners_ = (uint64_t)v9;
    operator delete(v9);
  }
  BOOL v10 = v7[4].__vftable;
  if (v10)
  {
    v7[4].__shared_owners_ = (uint64_t)v10;
    operator delete(v10);
  }
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100]((void ***)va);
  shared_weak_owners = (std::__shared_weak_count *)v7[2].__shared_weak_owners_;
  if (shared_weak_owners) {
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  }
  uint64_t v12 = (std::__shared_weak_count *)v7[2].__vftable;
  if (v12) {
    std::__shared_weak_count::__release_weak(v12);
  }
  std::__shared_weak_count::~__shared_weak_count(v7);
  operator delete(v13);

  _Unwind_Resume(a1);
}

void _UIRTreeContainerNode<unsigned long>::commonInit(int64x2_t *a1)
{
  a1[8].i64[0] = 0;
  a1[8].i64[1] = 0;
  a1[7] = vdupq_n_s64(0x7FF8000000000000uLL);
  id v2 = (float64x2_t *)a1[5].i64[1];
  uint64_t v3 = (char *)a1[6].i64[0];
  if ((v3 - (char *)v2) >> 5 != (a1[4].i64[1] - a1[4].i64[0]) >> 3)
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v13 = [NSString stringWithUTF8String:"void _UIRTreeContainerNode<>::commonInit() [T = unsigned long]"];
    [v12 handleFailureInFunction:v13, @"_UIRTree.mm", 206, @"Invalid parameter not satisfying: %@", @"_childFrames.size() == _childElements.size()" file lineNumber description];

    id v2 = (float64x2_t *)a1[5].i64[1];
    uint64_t v3 = (char *)a1[6].i64[0];
  }
  if (v2 == (float64x2_t *)v3)
  {
    id v9 = (uint64_t *)a1[2].i64[1];
    BOOL v10 = (uint64_t *)a1[3].i64[0];
    if (v9 == v10) {
      return;
    }
    float64x2_t v4 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
    float64x2_t v5 = 0uLL;
    do
    {
      float64x2_t v14 = v5;
      float64x2_t v15 = v4;
      uint64_t v11 = *v9;
      v9 += 2;
      _UIRTreeContainerNode<unsigned long>::boundingFrame((uint64_t)v16, v11);
      float64x2_t v4 = vminnmq_f64(v15, v16[0]);
      float64x2_t v5 = vsubq_f64(vmaxnmq_f64(vaddq_f64(v15, v14), vaddq_f64(v16[0], v16[1])), v4);
    }
    while (v9 != v10);
  }
  else
  {
    float64x2_t v4 = (float64x2_t)vdupq_n_s64(0x7FF8000000000000uLL);
    float64x2_t v5 = 0uLL;
    do
    {
      float64x2_t v7 = *v2;
      float64x2_t v6 = v2[1];
      v2 += 2;
      float64x2_t v8 = vaddq_f64(v4, v5);
      float64x2_t v4 = vminnmq_f64(v4, v7);
      float64x2_t v5 = vsubq_f64(vmaxnmq_f64(v8, vaddq_f64(v7, v6)), v4);
    }
    while (v2 != (float64x2_t *)v3);
  }
  a1[7] = (int64x2_t)v4;
  a1[8] = (int64x2_t)v5;
}

void sub_18554DF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t _UICollectionViewCompositionalLayoutShouldRespectPreferredSizeOnEstimatedAxisOnly()
{
  if (qword_1EB25F4A0 != -1) {
    dispatch_once(&qword_1EB25F4A0, &__block_literal_global_558);
  }
  if (_MergedGlobals_986) {
    return 0;
  }
  return dyld_program_sdk_at_least();
}

double _UIRectUnionOnAxis(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  if (!CGRectIsNull(*(CGRect *)&a2))
  {
    v21.origin.CGFloat x = a6;
    v21.origin.CGFloat y = a7;
    v21.size.CGFloat width = a8;
    v21.size.CGFloat height = a9;
    if (CGRectIsNull(v21))
    {
      return a2;
    }
    else
    {
      v22.origin.CGFloat x = a2;
      v22.origin.CGFloat y = a3;
      v22.size.CGFloat width = a4;
      v22.size.CGFloat height = a5;
      *(void *)&double v18 = (unint64_t)CGRectStandardize(v22);
      v23.origin.CGFloat x = a6;
      v23.origin.CGFloat y = a7;
      v23.size.CGFloat width = a8;
      v23.size.CGFloat height = a9;
      *(void *)&double v19 = (unint64_t)CGRectStandardize(v23);
      if (a1 == 2) {
        return v18;
      }
      else {
        return fmin(v18, v19);
      }
    }
  }
  return a6;
}

void sub_18554F080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18554FB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.snapshot()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t sub_18554FC58@<X0>(uint64_t *a1@<X8>)
{
  return sub_1853D0454(qword_1E8FB81B0, a1);
}

NSDiffableDataSourceSnapshot __swiftcall NSDiffableDataSourceSnapshot._bridgeToObjectiveC()()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_state);
  id v2 = objc_msgSend(objc_allocWithZone((Class)off_1E52D2BB8), sel_initWithState_, v1);

  return (NSDiffableDataSourceSnapshot)v2;
}

uint64_t sub_18554FCC8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObjCImplWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_18554FD24@<X0>(uint64_t *a1@<X8>)
{
  return sub_18554FD3C(a1);
}

uint64_t sub_18554FD3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_186A1D5EC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

__n128 UIIntegralTransform@<Q0>(float64x2_t *a1@<X0>, uint64_t a2@<X8>)
{
  float64x2_t v2 = vrndaq_f64(a1[1]);
  *a1 = vrndaq_f64(*a1);
  a1[1] = v2;
  float64x2_t v3 = a1[1];
  a1[2] = vrndaq_f64(a1[2]);
  *(float64x2_t *)a2 = *a1;
  *(float64x2_t *)(a2 + 16) = v3;
  __n128 result = (__n128)a1[2];
  *(__n128 *)(a2 + 32) = result;
  return result;
}

id UICollectionLayoutListConfiguration.footerMode.setter(unsigned __int8 *a1)
{
  uint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    float64x2_t v5 = *(void **)(v4 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v4 + 16), sel_copy);
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1856ACF00();
    swift_dynamicCast();
    float64x2_t v5 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v8;
    swift_release();
    *uint64_t v1 = v6;
  }
  return objc_msgSend(v5, sel_setFooterMode_, v2);
}

void (*UICollectionViewDiffableDataSource.reorderingHandlers.modify(void *a1))(void ***a1, char a2)
{
  float64x2_t v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((void *)v3 + 7) = v1;
  *(void *)float64x2_t v3 = objc_msgSend(*(id *)(v1 + qword_1E8FB81B0[0]), sel_reorderingHandlers);
  *(_OWORD *)(v3 + _Block_object_dispose(&STACK[0x3A0], 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  return sub_18549BCB8;
}

void UIViewControllerAlertForAppearanceCallbackMisuse(void *a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  float64x2_t v5 = *(NSObject **)(__UILogGetCategoryCachedImpl("ViewController", UIViewControllerAlertForAppearanceCallbackMisuse___s_category)+ 8);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    int v6 = 138412546;
    id v7 = v3;
    __int16 v8 = 2112;
    id v9 = v4;
    _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_ERROR, "Calling %@ directly on a view controller is not supported, and may result in out-of-order callbacks and other inconsistent behavior. Use the -beginAppearanceTransition:animated: and -endAppearanceTransition APIs on UIViewController to manually drive appearance callbacks instead. Make a symbolic breakpoint at UIViewControllerAlertForAppearanceCallbackMisuse to catch this in the debugger. View controller: %@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_185556834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_185556B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_185557A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___telemetryReportOffsetChange_block_invoke()
{
  return AnalyticsSendEventLazy();
}

uint64_t sub_185559844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t _UIStatusBarHostedInSpringBoard()
{
  return 1;
}

id _UIApplicationMainSceneForDisplayIdentity(void *a1)
{
  id v1 = a1;
  uint64_t v17 = 0;
  double v18 = &v17;
  uint64_t v19 = 0x3032000000;
  uint64_t v20 = __Block_byref_object_copy__164;
  CGRect v21 = __Block_byref_object_dispose__164;
  id v22 = 0;
  if (![(id)qword_1EB25B580 count]) {
    goto LABEL_6;
  }
  uint64_t v2 = +[UIScreen _screenWithFBSDisplayIdentity:v1];
  char v3 = [v2 _isMainScreen];

  char v4 = v3 ^ 1;
  if (!v1) {
    char v4 = 0;
  }
  if (v4)
  {
LABEL_6:
    id v7 = 0;
  }
  else
  {
    float64x2_t v5 = +[_UIApplicationConfigurationLoader sharedLoader];
    int v6 = [v5 applicationInitializationContext];
    id v7 = [v6 defaultSceneToken];
  }
  __int16 v8 = (void *)qword_1EB25B580;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 3221225472;
  _OWORD v13[2] = ___UIApplicationMainSceneForDisplayIdentity_block_invoke;
  v13[3] = &unk_1E5302BC8;
  id v9 = v1;
  id v14 = v9;
  id v10 = v7;
  id v15 = v10;
  uint64_t v16 = &v17;
  [v8 enumerateObjectsUsingBlock:v13];
  id v11 = (id)v18[5];

  _Block_object_dispose(&v17, 8);
  return v11;
}

void sub_185559E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185559FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIScreenAllScreens()
{
  uint64_t v7 = 0;
  __int16 v8 = &v7;
  uint64_t v9 = 0x3032000000;
  id v10 = __Block_byref_object_copy__116;
  id v11 = __Block_byref_object_dispose__116;
  id v12 = 0;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  char v4 = ___UIScreenAllScreens_block_invoke;
  float64x2_t v5 = &unk_1E52D9900;
  int v6 = &v7;
  uint64_t v0 = v3;
  os_unfair_lock_lock((os_unfair_lock_t)&__UIScreenMutableScreensArrayAccessLock);
  v4((uint64_t)v0);

  os_unfair_lock_unlock((os_unfair_lock_t)&__UIScreenMutableScreensArrayAccessLock);
  id v1 = (id)v8[5];
  _Block_object_dispose(&v7, 8);

  return v1;
}

void sub_18555AB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18555AF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18555B8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18555C01C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _UIWindowSceneCompatibleIsHidden(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 layer];
  uint64_t v3 = [v2 isHidden];

  uint64_t v4 = v3;
  if (dyld_program_sdk_at_least())
  {
    uint64_t v4 = [v1 isHidden];
    if (v3 != v4)
    {
      int v6 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v7 = [NSString stringWithUTF8String:"BOOL _UIWindowSceneCompatibleIsHidden(UIWindow *__strong)"];
      [v6 handleFailureInFunction:v7 file:@"UIWindowScene.m" lineNumber:2789 description:@"Error in UIKit client: window visibility must match its layer visibility!"];
    }
  }

  return v4;
}

uint64_t _UISheetLayoutInfoStacks(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  id v17 = a1;
  v20.origin.CGFloat x = a2;
  v20.origin.CGFloat y = a3;
  v20.size.CGFloat width = a4;
  v20.size.CGFloat height = a5;
  v21.origin.CGFloat x = a6;
  v21.origin.CGFloat y = a7;
  v21.size.CGFloat width = a8;
  v21.size.CGFloat height = a9;
  if (CGRectEqualToRect(v20, v21)) {
    uint64_t v18 = 1;
  }
  else {
    uint64_t v18 = [v17 alwaysStacksWithChild];
  }

  return v18;
}

double _UISheetLayoutInfoUntransformedFrame(int a1, char a2, int a3, int a4, void *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, CGFloat a14, CGFloat a15, CGFloat a16, CGFloat a17, double a18)
{
  id v25 = a5;
  uint64_t v26 = v25;
  double v27 = a7 + a8;
  double v42 = a7 + a8;
  if ((a2 & 1) == 0)
  {
    if (!a3)
    {
      if (a1)
      {
        double v29 = fmax(fmin(a7, a9), -INFINITY) + a8;
      }
      else
      {
        uint64_t v33 = [v25 firstObject];
        [v33 _value];
        double v29 = fmax(v34, fmin(a7, a9)) + a8;
      }
      goto LABEL_12;
    }
    if (a1)
    {
      double v28 = fmax(a9, fmin(a7, INFINITY)) + a8;
    }
    else
    {
      uint64_t v30 = [v25 firstObject];
      [v30 _value];
      double v28 = fmax(a9, fmin(a7, v31)) + a8;
    }
LABEL_10:
    v45.origin.CGFloat x = a14;
    v45.origin.CGFloat y = a15;
    v45.size.CGFloat width = a16;
    v45.size.CGFloat height = a17;
    double v32 = CGRectGetMaxY(v45) - v28;
    goto LABEL_13;
  }
  double v28 = a7 + a8;
  double v29 = v27;
  if (a3) {
    goto LABEL_10;
  }
LABEL_12:
  v46.origin.CGFloat x = a14;
  v46.origin.CGFloat y = a15;
  v46.size.CGFloat width = a16;
  v46.size.CGFloat height = a17;
  double v32 = v29 - CGRectGetMinY(v46);
LABEL_13:
  if (!a4) {
    a18 = 0.0;
  }
  v47.origin.CGFloat x = a14;
  v47.origin.CGFloat y = a15;
  v47.size.CGFloat width = a16;
  v47.size.CGFloat height = a17;
  CGFloat Height = CGRectGetHeight(v47);
  UIRoundToScale(Height - v32, a10);
  double v38 = v37;
  v48.origin.CGFloat x = a14;
  v48.origin.CGFloat y = a15;
  v48.size.CGFloat width = a16;
  v48.size.CGFloat height = a17;
  double v39 = a6 + CGRectGetMinX(v48);
  double v40 = 0.0;
  if (a3) {
    double v40 = v38;
  }
  UIRoundToScale(v42 - a18 - v40, a10);
  v49.origin.CGFloat x = a14;
  v49.origin.CGFloat y = a15;
  v49.size.CGFloat width = a16;
  v49.size.CGFloat height = a17;
  CGRectGetWidth(v49);

  return v39;
}

double _UISheetDismissOffset(int a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  v24.origin.CGFloat x = a6;
  v24.origin.CGFloat y = a7;
  v24.size.CGFloat width = a8;
  v24.size.CGFloat height = a9;
  if (CGRectIsNull(v24))
  {
    CGFloat v18 = a2;
    CGFloat v19 = a3;
    CGFloat v20 = a4;
    CGFloat v21 = a5;
    if (!a1)
    {
LABEL_3:
      return CGRectGetMaxY(*(CGRect *)&v18);
    }
  }
  else
  {
    CGFloat v18 = a6;
    CGFloat v19 = a7;
    CGFloat v20 = a8;
    CGFloat v21 = a9;
    if (a1) {
      goto LABEL_3;
    }
  }
  return CGRectGetMinY(*(CGRect *)&v18);
}

void sub_185562FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

uint64_t _UISupportsIntrinsicContentSizeInvalidation()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_EnableCollectionTableIntrinsicContentSizeInvalidation, @"EnableCollectionTableIntrinsicContentSizeInvalidation", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
    if (byte_1EB256EEC) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t _UIMaximumIntrinsicContentSizeInvalidationUpdatesPerCommit()
{
  if (_UIInternalPreferenceUsesDefault((int *)&_UIInternalPreference_MaximumCollectionTableSelfSizingInvalidationUpdatesPerCommit, @"MaximumCollectionTableSelfSizingInvalidationUpdatesPerCommit", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateInteger))return 2; {
  else
  }
    return qword_1E8FD5030;
}

void _UISceneSettingsDiffActionPerformChangesWithTransitionContextAndCompletion(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1;
  __int16 v8 = [v7 animationFence];
  +[UIScene _synchronizeDrawingWithFence:v8];

  uint64_t v9 = (void *)MEMORY[0x1E4F4F680];
  id v10 = [v7 animationSettings];

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = ___UISceneSettingsDiffActionPerformChangesWithTransitionContextAndCompletion_block_invoke;
  v12[3] = &unk_1E52D9FE8;
  id v13 = v5;
  id v11 = v5;
  [v9 tryAnimatingWithSettings:v10 actions:v12 completion:v6];
}

void sub_185564658(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id _UISceneLifecycleSettingsUpdateBlockWithCanvasAndTransitionContext(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if ([v7 _hasLifecycle])
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    _OWORD v13[2] = ___UISceneLifecycleSettingsUpdateBlockWithCanvasAndTransitionContext_block_invoke;
    v13[3] = &unk_1E52DD450;
    id v14 = v7;
    id v15 = v8;
    id v16 = v9;
    id v17 = v10;
    id v11 = _Block_copy(v13);
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_185565600(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18556590C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

uint64_t _UISceneLifecycleStateIsEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ((v3 == 0) != (v4 != 0)
    && (uint64_t v5 = [v3 deactivationReasons], v5 == objc_msgSend(v4, "deactivationReasons"))
    && (int v6 = [v3 isForeground], v6 == objc_msgSend(v4, "isForeground")))
  {
    int v9 = [v3 underLock];
    uint64_t v7 = v9 ^ [v4 underLock] ^ 1;
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

void sub_185565FE8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id __windowsWithContexts()
{
  uint64_t v0 = +[UIWindow allWindowsIncludingInternalWindows:1 onlyVisibleWindows:0];
  uint64_t v1 = [v0 indexesOfObjectsPassingTest:&__block_literal_global_1532];
  uint64_t v2 = [v0 objectsAtIndexes:v1];

  return v2;
}

void __Block_byref_object_dispose__409(uint64_t a1)
{
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _AXSReduceMotionEnabled() != 0;
}

uint64_t sub_185566CC0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_185566D14()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_185566D3C(uint64_t a1)
{
  return sub_185566D48(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_185566D48(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  v7[5] = &unk_1ED59A368;
  uint64_t v5 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  swift_unknownObjectRetain();
  objc_msgSend(v5, sel__setEnvironmentWrapper_, a2);
  v7[3] = &_s13MutableTraitsVN;
  void v7[4] = &off_1ED0BC750;
  v7[0] = v5;
  swift_unknownObjectRetain();
  a3(v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
}

uint64_t sub_185566F50(uint64_t a1)
{
  return sub_185566F6C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_185566F6C(uint64_t a1, void (*a2)(void *))
{
  v4[3] = &_s13MutableTraitsVN;
  v4[4] = &off_1ED0BC750;
  v4[0] = swift_dynamicCastObjCProtocolUnconditional();
  swift_unknownObjectRetain();
  a2(v4);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
}

void sub_1855675C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void sub_1855680AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void _UINormalizeRectForPositiveOrigin(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRectGetMinX(*(CGRect *)&a1);
  v8.origin.CGFloat x = a1;
  v8.origin.CGFloat y = a2;
  v8.size.CGFloat width = a3;
  v8.size.CGFloat height = a4;
  CGRectGetMinY(v8);
  v9.origin.CGFloat x = a1;
  v9.origin.CGFloat y = a2;
  v9.size.CGFloat width = a3;
  v9.size.CGFloat height = a4;
  CGRectGetWidth(v9);
  v10.origin.CGFloat x = a1;
  v10.origin.CGFloat y = a2;
  v10.size.CGFloat width = a3;
  v10.size.CGFloat height = a4;
  CGRectGetHeight(v10);
}

id _UIGestureEnvironmentSubgraphForGestureRecognizer(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v4 = objc_opt_new();
  uint64_t v5 = -[UIGestureEnvironment _nodeForGestureRecognizer:]((id *)a1, (uint64_t)a2);
  if (v5)
  {
    int v6 = *(void **)(a1 + 88);
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 3221225472;
    v12[2] = ___UIGestureEnvironmentSubgraphForGestureRecognizer_block_invoke;
    v12[3] = &unk_1E52F0EF8;
    id v13 = v4;
    [v6 traverseGraphDepthFirstFromNode:v5 directed:0 usingBlock:v12];
  }
  else
  {
    unint64_t CategoryCachedImpl = __UILogGetCategoryCachedImpl("GestureEnvironment", &_UIGestureEnvironmentSubgraphForGestureRecognizer___s_category);
    if (*(unsigned char *)CategoryCachedImpl)
    {
      CGRect v9 = *(NSObject **)(CategoryCachedImpl + 8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        CGRect v10 = v9;
        id v11 = [a2 _briefDescription];
        *(_DWORD *)buf = 136315394;
        id v15 = "NSMutableSet<UIGestureRecognizer *> *_UIGestureEnvironmentSubgraphForGestureRecognizer(UIGestureEnvironmen"
              "t *__unsafe_unretained, UIGestureRecognizer *__unsafe_unretained)";
        __int16 v16 = 2112;
        id v17 = v11;
        _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_ERROR, "%s - Unable to find Node %@", buf, 0x16u);
      }
    }
  }

  return v4;
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

BOOL sub_18556AE54(float *a1, float *a2)
{
  return *a1 < *a2;
}

void sub_18556AE68(uint64_t a1, uint64_t a2, SEL *a3, uint64_t *a4, void *a5)
{
  id v7 = [self *a3];
  uint64_t v8 = sub_186A1E95C();
  uint64_t v10 = v9;

  *a4 = v8;
  *a5 = v10;
}

uint64_t static UIBackgroundConfiguration.listCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18583CD54((SEL *)&selRef_listCellConfiguration, a1);
}

uint64_t sub_18556AEE0()
{
  return sub_1854E88F8();
}

BOOL UIDistanceBetweenPointAndRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  v10.origin.CGFloat x = a3;
  v10.origin.CGFloat y = a4;
  v10.size.CGFloat width = a5;
  v10.size.CGFloat height = a6;
  v9.CGFloat x = a1;
  v9.CGFloat y = a2;
  return CGRectContainsPoint(v10, v9);
}

void sub_18556B63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556CD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D680(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t _UIButtonStatesFromButton(void *a1)
{
  id v1 = a1;
  char v2 = [v1 state];
  uint64_t v3 = v2 & 1;
  if ((v2 & 2) != 0 || [v1 tintAdjustmentMode] == 2) {
    v3 |= 2uLL;
  }
  uint64_t v4 = v3 | v2 & 0xC;
  if ([v1 isHeld]) {
    v4 |= 0x10uLL;
  }

  return v4;
}

uint64_t _UIButtonCanInferIndicator()
{
  if (qword_1EB260D20 != -1) {
    dispatch_once(&qword_1EB260D20, &__block_literal_global_271);
  }
  return _MergedGlobals_1085;
}

BOOL BarButtonItemResolveSystemImage(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  int v6 = 0;
  double v7 = 0.0;
  uint64_t v8 = a1 - 4;
  LODWORD(v9) = 0;
  uint64_t v10 = 0;
  id v11 = 0;
  id v12 = 0;
  double v13 = 0.0;
  id v14 = @"UIButtonBarRewind.png";
  id v15 = @"backward.fill";
  switch(v8)
  {
    case 0:
      __int16 v16 = @"UIButtonBarNew.png";
      if (a3) {
        __int16 v16 = @"UIButtonBarNewLandscape.png";
      }
      id v14 = v16;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"plus";
      if (a2) {
        goto LABEL_71;
      }
      goto LABEL_69;
    case 1:
    case 2:
    case 17:
    case 18:
    case 19:
      goto LABEL_66;
    case 3:
      id v17 = @"UIButtonBarCompose.png";
      if (a3) {
        id v17 = @"UIButtonBarComposeLandscape.png";
      }
      id v14 = v17;
      int v18 = _UIUseModernBars();
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      if (v18) {
        double v13 = 4.0;
      }
      else {
        double v13 = 0.0;
      }
      if (v18) {
        double v7 = -4.0;
      }
      else {
        double v7 = 4.0;
      }
      id v15 = @"square.and.pencil";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 4:
      CGFloat v19 = @"UIButtonBarReply.png";
      if (a3) {
        CGFloat v19 = @"UIButtonBarReplyLandscape.png";
      }
      id v14 = v19;
      int v6 = 0;
      id v11 = 0;
      LODWORD(v9) = 1;
      double v13 = 0.0;
      id v15 = @"arrowshape.turn.up.backward";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 5:
      CGFloat v20 = @"UIButtonBarAction.png";
      if (a3) {
        CGFloat v20 = @"UIButtonBarActionSmall.png";
      }
      id v14 = v20;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"square.and.arrow.up";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 6:
      CGFloat v21 = @"UIButtonBarOrganize.png";
      if (a3) {
        CGFloat v21 = @"UIButtonBarOrganizeLandscape.png";
      }
      id v14 = v21;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"folder";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 7:
      id v22 = @"UIButtonBarBookmarks.png";
      if (a3) {
        id v22 = @"UIButtonBarBookmarksLandscape.png";
      }
      id v14 = v22;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"book";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 8:
      double v28 = @"UIButtonBarSearch.png";
      if (a3) {
        double v28 = @"UIButtonBarSearchLandscape.png";
      }
      id v14 = v28;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"magnifyingglass";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 9:
      CGRect v23 = @"UIButtonBarRefresh.png";
      if (a3) {
        CGRect v23 = @"UIButtonBarRefreshLandscape.png";
      }
      id v14 = v23;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"arrow.clockwise";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 10:
      double v29 = @"UIButtonBarStop.png";
      if (a3) {
        double v29 = @"UIButtonBarStopLandscape.png";
      }
      id v14 = v29;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"xmark";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 11:
      if (a4 == 5)
      {
        LODWORD(v9) = 0;
        int v6 = 0;
        id v11 = 0;
        id v14 = @"UIButtonBarUCBCamera";
      }
      else
      {
        uint64_t v35 = @"UIButtonBarCamera.png";
        if (a3) {
          uint64_t v35 = @"UIButtonBarCameraSmall.png";
        }
        id v14 = v35;
        LODWORD(v9) = 0;
        int v6 = 0;
        id v11 = 0;
        double v13 = 0.0;
      }
      id v15 = @"camera";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 12:
      CGRect v24 = @"UIButtonBarTrash.png";
      if (a3) {
        CGRect v24 = @"UIButtonBarTrashLandscape.png";
      }
      id v14 = v24;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"trash";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 13:
      id v25 = @"UIButtonBarPlay.png";
      if (a3) {
        id v25 = @"UIButtonBarPlayLandscape.png";
      }
      id v14 = v25;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"play.fill";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 14:
      uint64_t v26 = @"UIButtonBarPause.png";
      if (a3) {
        uint64_t v26 = @"UIButtonBarPauseLandscape.png";
      }
      id v14 = v26;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"pause.fill";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 15:
      if (a2) {
        goto LABEL_71;
      }
      goto LABEL_69;
    case 16:
      double v27 = @"UIButtonBarFastForward.png";
      if (a3) {
        double v27 = @"UIButtonBarFastForwardLandscape.png";
      }
      id v14 = v27;
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      double v13 = 0.0;
      id v15 = @"forward.fill";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    case 20:
      uint64_t v30 = +[UITraitCollection _fallbackTraitCollection]();
      uint64_t v31 = [v30 userInterfaceIdiom];

      uint64_t v10 = +[UIButton _defaultImageNameForType:7 andState:0];
      id v11 = +[UIButton _defaultSymbolConfigurationForType:7 andState:0 compact:a3 idiom:v31];
      id v12 = +[UIButton _defaultImageColorForType:7 andState:0 idiom:v31];
      goto LABEL_66;
    case 21:
      LODWORD(v9) = 0;
      int v6 = 0;
      id v11 = 0;
      id v14 = 0;
      id v15 = @"apple.writing.tools";
      if (!a2) {
        goto LABEL_69;
      }
      goto LABEL_71;
    default:
      uint64_t v10 = 0;
      id v11 = 0;
      id v12 = 0;
LABEL_66:
      BOOL v9 = 0;
      if (v10)
      {
        id v14 = 0;
        double v13 = 0.0;
        int v6 = v12;
        id v15 = (__CFString *)v10;
        if (a2)
        {
LABEL_71:
          uint64_t v32 = _BarButtonCachedSystemImageWithName(v15, v14, v11, v6, v9, 0.0, v13, 0.0, v7);
          uint64_t v33 = *a2;
          *a2 = (void *)v32;

          BOOL v9 = *a2 != 0;
        }
        else
        {
LABEL_69:
          BOOL v9 = 1;
        }
        id v12 = v6;
      }
      else
      {
        id v15 = 0;
        id v14 = 0;
      }

      return v9;
  }
}

void _getDefaultTitleAndSubtitleFontStylesForButtonSize(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v19 = v9;
  if ((unint64_t)(a1 - 1) >= 2)
  {
    if (a1)
    {
      uint64_t v15 = [v9 userInterfaceIdiom];
      id v11 = (const UIFontTextStyle *)UIFontTextStyleShortBody;
      if (v15 == 6) {
        id v11 = &UIFontTextStyleTitle3;
      }
    }
    else if ([v9 userInterfaceIdiom] == 6)
    {
      id v11 = &UIFontTextStyleHeadline;
    }
    else
    {
      id v11 = (const UIFontTextStyle *)UIFontTextStyleShortBody;
    }
    UIFontTextStyle v12 = *v11;
    double v13 = UIFontTextStyleShortFootnote;
    id v14 = UIFontTextStyleShortEmphasizedBody;
  }
  else
  {
    if ([v9 userInterfaceIdiom] == 6) {
      uint64_t v10 = &UIFontTextStyleCallout;
    }
    else {
      uint64_t v10 = (const UIFontTextStyle *)UIFontTextStyleShortSubheadline;
    }
    UIFontTextStyle v12 = *v10;
    double v13 = UIFontTextStyleShortCaption1;
    id v14 = UIFontTextStyleShortEmphasizedSubhead;
  }
  __int16 v16 = v12;
  id v17 = *v14;
  int v18 = *v13;
  if (a2) {
    *a2 = v16;
  }
  if (a3) {
    *a3 = v18;
  }
  if (a4) {
    *a4 = v17;
  }
}

id _UIButtonUpdateStringAttributes(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if ([v7 length])
  {
    id v11 = (void *)[v7 mutableCopy];
    uint64_t v12 = [v11 length];
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 3221225472;
    _OWORD v17[2] = ___UIButtonUpdateStringAttributes_block_invoke;
    void v17[3] = &unk_1E52E4D68;
    id v18 = v10;
    id v19 = v8;
    id v21 = v9;
    id v13 = v11;
    id v20 = v13;
    objc_msgSend(v13, "enumerateAttributesInRange:options:usingBlock:", 0, v12, 0x100000, v17);
    id v14 = v20;
    id v15 = v13;
  }
  else
  {
    id v15 = v7;
  }

  return v15;
}

id _UIButtonUpdateStringAttributes_0(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)[a1 mutableCopy];
  uint64_t v11 = [v10 length];
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 3221225472;
  v19[2] = ___UIButtonUpdateStringAttributes_block_invoke_0;
  void v19[3] = &unk_1E5300488;
  id v20 = v7;
  id v22 = v8;
  id v23 = v9;
  id v12 = v10;
  id v21 = v12;
  id v13 = v9;
  id v14 = v8;
  id v15 = v7;
  objc_msgSend(v12, "enumerateAttributesInRange:options:usingBlock:", 0, v11, 0x100000, v19);
  __int16 v16 = v21;
  id v17 = v12;

  return v17;
}

id BarButtonItemTitleForSystemItem(uint64_t a1)
{
  char v2 = 0;
  switch(a1)
  {
    case 0:
      uint64_t v3 = @"Done";
      goto LABEL_34;
    case 1:
      uint64_t v3 = @"Cancel";
      goto LABEL_34;
    case 2:
      uint64_t v3 = @"Edit";
      goto LABEL_34;
    case 3:
      uint64_t v3 = @"Save";
      goto LABEL_34;
    case 4:
      uint64_t v3 = @"Add";
      goto LABEL_34;
    case 5:
    case 6:
    case 23:
      break;
    case 7:
      uint64_t v3 = @"Compose";
      goto LABEL_34;
    case 8:
      uint64_t v3 = @"Reply";
      goto LABEL_34;
    case 9:
      uint64_t v3 = @"Action";
      goto LABEL_34;
    case 10:
      uint64_t v3 = @"Organize";
      goto LABEL_34;
    case 11:
      uint64_t v3 = @"Bookmarks";
      goto LABEL_34;
    case 12:
      uint64_t v3 = @"Search";
      goto LABEL_34;
    case 13:
      uint64_t v3 = @"Refresh";
      goto LABEL_34;
    case 14:
      uint64_t v3 = @"Stop";
      goto LABEL_34;
    case 15:
      uint64_t v3 = @"Camera";
      goto LABEL_34;
    case 16:
      uint64_t v3 = @"Trash";
      goto LABEL_34;
    case 17:
      uint64_t v3 = @"Play";
      goto LABEL_34;
    case 18:
      uint64_t v3 = @"Pause";
      goto LABEL_34;
    case 19:
      uint64_t v3 = @"Rewind";
      goto LABEL_34;
    case 20:
      uint64_t v3 = @"Fast Forward";
      goto LABEL_34;
    case 21:
      uint64_t v3 = @"Undo";
      goto LABEL_34;
    case 22:
      uint64_t v3 = @"Redo";
      goto LABEL_34;
    case 24:
      uint64_t v3 = @"Close";
      goto LABEL_34;
    case 25:
      uint64_t v3 = @"Writing Tools";
LABEL_34:
      char v2 = _UINSLocalizedStringWithDefaultValue(v3, v3);
      break;
    default:
      switch(a1)
      {
        case 'd':
          uint64_t v3 = @"Locate";
          goto LABEL_34;
        case 'e':
          uint64_t v3 = @"Back";
          goto LABEL_34;
        case 'f':
          uint64_t v3 = @"Forward";
          goto LABEL_34;
        case 'g':
          uint64_t v3 = @"Up";
          goto LABEL_34;
        case 'h':
          uint64_t v3 = @"Down";
          goto LABEL_34;
        case 'i':
          uint64_t v3 = @"Left";
          goto LABEL_34;
        case 'j':
          uint64_t v3 = @"Right";
          goto LABEL_34;
        case 'o':
          uint64_t v3 = @"AirPlay";
          goto LABEL_34;
        default:
          goto LABEL_35;
      }
  }
LABEL_35:
  return v2;
}

void sub_185571808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855719F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_185571E84(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_185571EB8(a4, a1, a2, a3, (uint64_t)&unk_1ED0D8530, (uint64_t (*)(uint64_t))sub_1854C9928);
}

uint64_t sub_185571EB8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  objc_msgSend(*v6, sel__setCGFloatValue_forTraitToken_, sub_18557344C(a3, a4, a5, a6), a1);
  return swift_unknownObjectRelease();
}

double sub_185571F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  objc_msgSend(v5, sel__valueForCGFloatTraitToken_, sub_18557344C(a2, a3, a4, a5));
  double v7 = v6;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_18557236C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  a7();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v9(a1, AssociatedTypeWitness);
}

uint64_t sub_185572F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(void))(*(void *)(AssociatedTypeWitness - 8) + 16))();
  sub_1853B76BC((uint64_t)v13, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  swift_dynamicCast();
  sub_1853B8150((uint64_t)v12, (uint64_t)v11, &qword_1EB256B10);
  uint64_t v7 = v11[3];
  sub_1853B93B8((uint64_t)v11, &qword_1EB256B10);
  if (v7) {
    uint64_t v8 = sub_186A1F83C();
  }
  else {
    uint64_t v8 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  id v9 = (void *)sub_1855741B8();
  swift_unknownObjectRetain();
  objc_msgSend(v9, sel__setObject_forTraitToken_, v8, sub_18557344C(a3, a4, (uint64_t)&unk_1ED0D8558, (uint64_t (*)(uint64_t))sub_1858BB620));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t UITraitCollection.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_186A1F12C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - v10;
  id v12 = objc_msgSend(v3, sel__objectForTraitToken_, sub_18557344C(a1, a2, (uint64_t)&unk_1ED0D8558, (uint64_t (*)(uint64_t))sub_1858BB620));
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_1853B8150((uint64_t)v17, (uint64_t)v18, &qword_1EB256B10);
  sub_1853B7020((uint64_t)v18, (uint64_t)v17, &qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  int v13 = swift_dynamicCast();
  id v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  if (v13)
  {
    uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
    v14(v11, 0, 1, AssociatedTypeWitness);
    sub_1853B93B8((uint64_t)v18, &qword_1EB256B10);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v11, AssociatedTypeWitness);
  }
  else
  {
    v14(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    sub_1853B93B8((uint64_t)v18, &qword_1EB256B10);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  unsigned char v34[32];

  uint64_t v31 = *(void *)(a2 + 8);
  uint64_t v32 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v6 = sub_186A1F12C();
  uint64_t v26 = *(void *)(v6 - 8);
  double v27 = v6;
  MEMORY[0x1F4188790](v6);
  double v29 = (char *)&v25 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_186A1F12C();
  double v28 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  id v12 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - v14;
  __int16 v16 = objc_msgSend(v3, sel__objectForTraitToken_, sub_1854A0320(a1, a2, (uint64_t)&unk_1ED0D83C8, (uint64_t (*)(uint64_t))sub_1858DC78C));
  swift_unknownObjectRelease();
  if (v16)
  {
    sub_186A1F1CC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1853B8150((uint64_t)v33, (uint64_t)v34, &qword_1EB256B10);
  sub_1853B7020((uint64_t)v34, (uint64_t)v33, &qword_1EB256B10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  id v17 = swift_dynamicCast();
  id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v17 & 1) == 0)
  {
    v18(v11, 1, 1, v8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
    goto LABEL_8;
  }
  v18(v11, 0, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, v8);
  id v19 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 32))(v15, a1, a2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v8);
  id v20 = AssociatedTypeWitness;
  id v21 = *(void *)(AssociatedTypeWitness - 8);
  id v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, AssociatedTypeWitness);
  id v23 = v32;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
LABEL_8:
    (*(void (**)(uint64_t))(v31 + 16))(a1);
    return sub_1853B93B8((uint64_t)v34, &qword_1EB256B10);
  }
  sub_1853B93B8((uint64_t)v34, &qword_1EB256B10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v23, v19, v20);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  __int16 v16 = a3;
  double v6 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_186A1F12C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - v10;
  objc_msgSend(v3, sel__valueForCGFloatTraitToken_, sub_1854A0320(a1, a2, (uint64_t)&unk_1ED0D83A0, (uint64_t (*)(uint64_t))sub_1858B6678));
  int v13 = v12;
  swift_unknownObjectRelease();
  id v17 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v17, a1, a2);
  id v14 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16, v11, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  __int16 v16 = a3;
  double v6 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_186A1F12C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - v10;
  objc_msgSend(v3, sel__valueForCGFloatTraitToken_, sub_1854A0320(a1, a2, (uint64_t)&unk_1ED0D8378, (uint64_t (*)(uint64_t))sub_1858B6678));
  int v13 = v12;
  swift_unknownObjectRelease();
  id v17 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v17, a1, a2);
  id v14 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16, v11, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  id v16;

  uint64_t v15 = a3;
  double v6 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_186A1F12C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - v10;
  id v12 = objc_msgSend(v3, sel__valueForNSIntegerTraitToken_, sub_1854A0320(a1, a2, (uint64_t)&unk_1ED0D8350, (uint64_t (*)(uint64_t))sub_1858DC750));
  swift_unknownObjectRelease();
  __int16 v16 = v12;
  (*(void (**)(id *, uint64_t, uint64_t))(a2 + 32))(&v16, a1, a2);
  int v13 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15, v11, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double sub_1855733A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1855733E4(a1, *v3, a2, a3, (uint64_t)&unk_1ED0D8530, (uint64_t (*)(uint64_t))sub_1854C9928);
}

double sub_1855733E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  objc_msgSend(a2, sel__valueForCGFloatTraitToken_, sub_18557344C(a3, a4, a5, a6));
  double v7 = v6;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_18557344C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v4;
  uint64_t v9 = sub_1854AF474(v4, a4, (uint64_t)v8, a1, a2);
  swift_release();
  return v9;
}

void sub_185573880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1855741B8()
{
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return *(void *)(*(void *)v0 + 16);
  }
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel__swiftImplCopy);
  uint64_t v2 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1853B985C(0, (unint64_t *)&qword_1E8FAFFC0);
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E8FAFBC0);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)uint64_t v0 = v4;
    swift_release();
    return *(void *)(*(void *)v0 + 16);
  }
  __break(1u);
  return result;
}

void __eventFetcherSourceCallback(uint64_t a1)
{
  _UIApplicationDrainManagedAutoreleasePool();
  if ((_UIUpdateCycleEnabled() & 1) == 0)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    uint64_t v3 = (void *)MEMORY[0x18C108260]();
    -[UIEventFetcher drainEventsIntoEnvironment:](*(void *)(a1 + 16), (void *)v2);
    uint64_t v4 = _UIMachTimeForMediaTime(*(double *)(v2 + 72));
    uint64_t v5 = _UIMachTimeForMediaTime(*(double *)(v2 + 80));
    _UIQOSProcessingBegin("HIDDrain", 0, v4, v5);
    [*(id *)(v2 + 16) count];
    kdebug_trace();
    __processEventQueue(v2, 4);
    [*(id *)(v2 + 16) count];
    kdebug_trace();
    _UIQOSProcessingEnd();
  }
  if (_UIUpdateCycleEnabled())
  {
    uint64_t v6 = *(void *)(a1 + 16);
    -[UIEventFetcher drainEvents:](v6, &__block_literal_global_183_1);
  }
}

void sub_185574868(_Unwind_Exception *a1)
{
}

void _UIApplicationDrainManagedAutoreleasePool()
{
  if (pthread_main_np() != 1)
  {
    id v1 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "void _UIApplicationDrainManagedAutoreleasePool(void)"), @"UIApplication+AutoreleasePool.m", 170, @"%s must be called on the main thread", "void _UIApplicationDrainManagedAutoreleasePool(void)");
  }
  if (__caCommitState)
  {
    uint64_t v2 = (void *)[MEMORY[0x1E4F28B00] currentHandler];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(NSString, "stringWithUTF8String:", "void _UIApplicationDrainManagedAutoreleasePool(void)"), @"UIApplication+AutoreleasePool.m", 171, @"unexpected start state");
  }
  if (_MergedGlobals_1062)
  {
    memset(&context, 0, sizeof(context));
    CFRunLoopObserverGetContext((CFRunLoopObserverRef)_MergedGlobals_1062, &context);
    info = context.info;
    if (context.info)
    {
      _popAutoreleasePool(context.info);
      _pushAutoreleasePool(info);
    }
  }
}

uint64_t __processEventQueue(uint64_t a1, int a2)
{
  uint64_t v225 = *MEMORY[0x1E4F143B8];
  unint64_t v182 = *(void **)(a1 + 8);
  uint64_t v189 = *(void **)(a1 + 16);
  if (_UIUpdateCycleEnabled())
  {
    unsigned int v184 = 0;
  }
  else
  {
    double v4 = *(double *)(a1 + 72);
    if (v4 == 0.0) {
      double v4 = CACurrentMediaTime();
    }
    double v5 = *(double *)(a1 + 80);
    if (v5 == 0.0) {
      double v5 = v4 + _UIQOSMaxFrameDurationSeconds();
    }
    unsigned int v184 = [MEMORY[0x1E4F39CF8] startFrameWithReason:32 beginTime:v4 commitDeadline:v5];
  }
  int v196 = a2;
  if (!a2 || ![v189 count]) {
    goto LABEL_294;
  }
  while (2)
  {
    CFRunLoopObserverContext context = (void *)MEMORY[0x18C108260]();
    uint64_t v6 = *(void **)(a1 + 16);
    uint64_t v199 = [v6 lastObject];
    if (!v199)
    {
      id v9 = 0;
      uint64_t v10 = 0;
      goto LABEL_246;
    }
    unint64_t v193 = [v6 count];
    int Type = IOHIDEventGetType();
    double v191 = BKSHIDEventGetBaseAttributes();
    int v181 = [v191 contextID];
    if (BKSHIDEventContainsUpdates())
    {
      id v190 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      [v190 addObject:v199];
      CFTypeRef v7 = 0;
      uint64_t v183 = -1;
      int v8 = 255;
LABEL_28:
      int v11 = Type;
      goto LABEL_29;
    }
    int v11 = Type;
    if (Type == 11)
    {
      id v12 = IOHIDEventGetChildren();
      if ([v12 count])
      {
        [v12 objectAtIndexedSubscript:0];

        if (IOHIDEventGetIntegerValue())
        {
          if ([(id)UIApp _supportsIndirectInputEvents]
            && (uint64_t v13 = _UIEventHIDGetDescendantPointerEvent((uint64_t)v199)) != 0)
          {
            uint64_t v14 = _UIEventHIDGetPointerEventSource(v13);
            uint64_t v15 = 3;
            if (v14 == 4) {
              uint64_t v15 = 0;
            }
          }
          else
          {
            uint64_t v15 = IOHIDEventGetIntegerValue() == 0;
          }
        }
        else
        {
          uint64_t v15 = 2;
        }
        uint64_t v183 = v15;
        __int16 v16 = _UIEventHIDPathAttributesForChild(v191);
        int v8 = [v16 locus];
      }
      else
      {
        uint64_t v183 = -1;
        int v8 = 255;
      }

      id v190 = 0;
      CFTypeRef v7 = v199;
      goto LABEL_28;
    }
    id v190 = 0;
    uint64_t v183 = -1;
    int v8 = 255;
    CFTypeRef v7 = v199;
LABEL_29:
    uint64_t v17 = v193 - 2;
    if (v193 < 2) {
      goto LABEL_228;
    }
    if (v11 == 6 || v11 == 17)
    {
      uint64_t v17 = v193 - 2;
      if ((uint64_t)(v193 - 2) < 0)
      {
LABEL_228:
        id v194 = 0;
LABEL_229:
        uint64_t v198 = 1;
        CFTypeRef v18 = v7;
LABEL_230:
        if (v18) {
          goto LABEL_231;
        }
LABEL_237:
        uint64_t v10 = 0;
        goto LABEL_238;
      }
    }
    else
    {
      if (v11 != 11) {
        goto LABEL_228;
      }
      id v194 = 0;
      if (*(uint64_t *)(a1 + 184) > 0 || v17 < 0) {
        goto LABEL_229;
      }
    }
    int v180 = v8;
    id v194 = 0;
    uint64_t v198 = 1;
    while (1)
    {
      CFTypeRef v200 = v7;
      uint64_t v195 = v17;
      uint64_t v202 = objc_msgSend(v6, "objectAtIndex:");
      if (IOHIDEventGetType() != Type) {
        break;
      }
      CFTypeRef v18 = v200;
      switch(Type)
      {
        case 6:
          int Phase = IOHIDEventGetPhase();
          int v22 = IOHIDEventGetPhase();
          BOOL v23 = _UIEventHIDGetChildScrollEvent((uint64_t)v200) != 0;
          BOOL v24 = _UIEventHIDGetChildScrollEvent(v202) != 0;
          if (Phase != v22) {
            goto LABEL_236;
          }
          CFTypeRef v18 = v200;
          if ((v23 ^ v24)) {
            goto LABEL_230;
          }
          unint64_t TimeStamp = IOHIDEventGetTimeStamp();
          if (TimeStamp <= IOHIDEventGetTimeStamp()) {
            uint64_t v26 = v202;
          }
          else {
            uint64_t v26 = (uint64_t)v200;
          }
          IOHIDEventGetFloatValue();
          IOHIDEventGetFloatValue();
          IOHIDEventGetFloatValue();
          IOHIDEventGetFloatValue();
          IOHIDEventGetFloatValue();
          IOHIDEventGetFloatValue();
          CopCGFloat y = (const void *)IOHIDEventCreateCopy();
          IOHIDEventSetFloatValue();
          IOHIDEventSetFloatValue();
          IOHIDEventSetFloatValue();
          if (_UIEventHIDGetChildPointerEvent(v26))
          {
            double v28 = BKSHIDEventGetPointerAttributes();
            if (v28)
            {
              _UIEventHIDGetChildPointerEvent((uint64_t)Copy);
              BKSHIDEventSetAttributes();
            }
          }
          double v29 = _UIEventHIDGetChildScrollEvent((uint64_t)Copy);
          uint64_t v30 = _UIEventHIDGetChildScrollEvent((uint64_t)v200);
          uint64_t v31 = _UIEventHIDGetChildScrollEvent(v202);
          if (v29 && v30 && v31)
          {
            IOHIDEventGetFloatValue();
            IOHIDEventGetFloatValue();
            IOHIDEventGetFloatValue();
            IOHIDEventGetFloatValue();
            IOHIDEventGetFloatValue();
            IOHIDEventGetFloatValue();
            IOHIDEventSetFloatValue();
            IOHIDEventSetFloatValue();
            IOHIDEventSetFloatValue();
          }
          CFTypeRef v18 = CFAutorelease(Copy);
          goto LABEL_144;
        case 17:
          *(void *)&long long v221 = 0;
          *(void *)&long long v217 = 0;
          *(void *)&long long v208 = 0;
          _UIEventHIDGetTransformEventComponents((uint64_t)v200, &v221, &v217, &v208);
          if (!(void)v221 && !(void)v217 && !(void)v208) {
            goto LABEL_236;
          }
          if ((void)v221)
          {
            unint64_t v32 = IOHIDEventGetPhase();
            if ((void)v217) {
              goto LABEL_67;
            }
LABEL_106:
            unint64_t v185 = 0;
          }
          else
          {
            unint64_t v32 = 0;
            if (!(void)v217) {
              goto LABEL_106;
            }
LABEL_67:
            unint64_t v185 = IOHIDEventGetPhase();
          }
          if ((void)v208) {
            unint64_t v63 = IOHIDEventGetPhase();
          }
          else {
            unint64_t v63 = 0;
          }
          int v64 = v63;
          uint64_t v65 = _UIEventHIDTransformPhaseForComponentPhases(v32, v185, v63);
          *(void *)&long long v204 = 0;
          unint64_t v215 = 0;
          unint64_t v216 = 0;
          _UIEventHIDGetTransformEventComponents(v202, &v204, &v216, &v215);
          if (!(void)v204 && !v216 && !v215) {
            goto LABEL_236;
          }
          if ((void)v204)
          {
            unint64_t v66 = IOHIDEventGetPhase();
            if (v216) {
              goto LABEL_115;
            }
LABEL_117:
            int v67 = 0;
          }
          else
          {
            unint64_t v66 = 0;
            if (!v216) {
              goto LABEL_117;
            }
LABEL_115:
            int v67 = IOHIDEventGetPhase();
          }
          if (v215)
          {
            int v68 = IOHIDEventGetPhase();
            unint64_t v69 = v215;
          }
          else
          {
            unint64_t v69 = 0;
            int v68 = 0;
          }
          if (v65 != _UIEventHIDTransformPhaseForComponentPhases(v66, v216, v69)
            || v32 != v66
            || v67 != v185
            || v68 != v64)
          {
            goto LABEL_236;
          }
          unint64_t v70 = IOHIDEventGetTimeStamp();
          unint64_t v71 = IOHIDEventGetTimeStamp();
          *(void *)&long long v221 = 0;
          if (v70 <= v71) {
            uint64_t v72 = (uint64_t)v200;
          }
          else {
            uint64_t v72 = v202;
          }
          if (v70 <= v71) {
            uint64_t v73 = v202;
          }
          else {
            uint64_t v73 = (uint64_t)v200;
          }
          *(void *)&long long v217 = 0;
          *(void *)&long long v208 = 0;
          _UIEventHIDGetTransformEventComponents(v73, &v221, &v217, &v208);
          *(void *)&long long v204 = 0;
          unint64_t v215 = 0;
          unint64_t v216 = 0;
          _UIEventHIDGetTransformEventComponents(v72, &v204, &v216, &v215);
          uint64_t v74 = (const void *)IOHIDEventCreateCopy();
          uint64_t v213 = 0;
          uint64_t v214 = 0;
          uint64_t v212 = 0;
          _UIEventHIDGetTransformEventComponents((uint64_t)v74, &v214, &v213, &v212);
          if ((void)v221 && (void)v204 && v214)
          {
            IOHIDEventGetDoubleValue();
            IOHIDEventGetDoubleValue();
            IOHIDEventSetDoubleValue();
          }
          if ((void)v217 && v216 && v213)
          {
            IOHIDEventGetDoubleValue();
            IOHIDEventGetDoubleValue();
            IOHIDEventSetDoubleValue();
          }
          if ((void)v208 && v215 && v212)
          {
            IOHIDEventGetDoubleValue();
            IOHIDEventGetDoubleValue();
            IOHIDEventGetDoubleValue();
            IOHIDEventGetDoubleValue();
            IOHIDEventSetDoubleValue();
            IOHIDEventSetDoubleValue();
          }
          CFTypeRef v18 = CFAutorelease(v74);
LABEL_144:
          ++v198;
          break;
        case 11:
          if (BKSHIDEventContainsUpdates())
          {
            uint64_t v19 = v202;
            if (!v200 || v183 == 2)
            {
              id v75 = v190;
              if (!v190)
              {
                id v75 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
                uint64_t v19 = v202;
              }
              id v190 = v75;
              [v75 addObject:v19];
            }
            else
            {
              id v20 = v194;
              if (!v194)
              {
                id v20 = objc_msgSend(MEMORY[0x1E4F1CA48], "array", v202);
                uint64_t v19 = v202;
              }
              id v194 = v20;
              [v20 addObject:v19];
            }
            goto LABEL_177;
          }
          if (!v200)
          {
            double v79 = IOHIDEventGetChildren();
            if ([v79 count])
            {
              [v79 objectAtIndexedSubscript:0];

              if (IOHIDEventGetIntegerValue())
              {
                if ([(id)UIApp _supportsIndirectInputEvents]
                  && (uint64_t v80 = _UIEventHIDGetDescendantPointerEvent(v202)) != 0)
                {
                  uint64_t v81 = _UIEventHIDGetPointerEventSource(v80);
                  uint64_t v82 = 3;
                  if (v81 == 4) {
                    uint64_t v82 = 0;
                  }
                }
                else
                {
                  uint64_t v82 = IOHIDEventGetIntegerValue() == 0;
                }
              }
              else
              {
                uint64_t v82 = 2;
              }
              uint64_t v183 = v82;
              double v88 = BKSHIDEventGetDigitizerAttributes();
              unsigned __int8 v89 = _UIEventHIDPathAttributesForChild(v88);
              int v180 = [v89 locus];
            }
            ++v198;
            CFTypeRef v18 = (CFTypeRef)v202;
            break;
          }
          BOOL v33 = (IOHIDEventGetIntegerValue() & 2) == 0;
          char IntegerValue = IOHIDEventGetIntegerValue();
          if ((IntegerValue & 2) != 0 || !v33) {
            goto LABEL_233;
          }
          double v36 = v200;
          if ((IntegerValue & 1) != 0 || IntegerValue < 0) {
            goto LABEL_232;
          }
          if (IOHIDEventGetSenderID() == 0x8000000800A15175) {
            goto LABEL_233;
          }
          double v37 = BKSHIDEventGetDigitizerAttributes();
          char v38 = [v37 systemGestureStateChange];

          if (v38) {
            goto LABEL_233;
          }
          BOOL v39 = (IOHIDEventGetIntegerValue() & 2) == 0;
          char v40 = IOHIDEventGetIntegerValue();
          if ((v40 & 2) != 0 || !v39) {
            goto LABEL_233;
          }
          double v36 = v200;
          if ((v40 & 1) != 0 || v40 < 0) {
            goto LABEL_232;
          }
          if (IOHIDEventGetSenderID() == 0x8000000800A15175
            || (BKSHIDEventGetDigitizerAttributes(),
                double v42 = objc_claimAutoreleasedReturnValue(),
                char v43 = [v42 systemGestureStateChange],
                v42,
                (v43 & 1) != 0))
          {
LABEL_233:
            double v36 = v200;
            goto LABEL_232;
          }
          double v186 = BKSHIDEventGetDigitizerAttributes();
          keCGFloat y = BKSHIDEventGetDigitizerAttributes();
          unsigned __int8 v44 = IOHIDEventGetIntegerValue();
          if (((IOHIDEventGetIntegerValue() ^ v44) & 0x83) != 0
            || (BOOL v45 = IOHIDEventGetIntegerValue() != 0, ((v45 ^ (IOHIDEventGetIntegerValue() != 0)) & 1) != 0)
            || (int v46 = [v186 systemGesturesPossible],
                v46 != [key systemGesturesPossible])
            || (int v47 = [v186 contextID], v47 != objc_msgSend(key, "contextID")))
          {

            goto LABEL_149;
          }
          CGRect v48 = IOHIDEventGetChildren();
          id v175 = IOHIDEventGetChildren();
          uint64_t v49 = [v48 count];
          if (v49 != [v175 count]) {
            goto LABEL_183;
          }
          if (v49 >= 1)
          {
            uint64_t v50 = [v48 objectAtIndexedSubscript:0];
            uint64_t v51 = _UIEventHIDPathAttributesForChild(v186);

            id v52 = [v175 objectAtIndexedSubscript:0];
            uint64_t v53 = _UIEventHIDPathAttributesForChild(key);

            LODWORD(v52) = [v51 locus];
            LODWORD(v52) = v52 == [v53 locus];

            if (!v52)
            {
LABEL_183:

LABEL_149:
              double v76 = BKSHIDEventGetDigitizerAttributes();
              if (v181 == [v76 contextID])
              {
                BOOL v187 = IOHIDEventGetChildren();
                if (![v187 count])
                {

LABEL_235:
                  goto LABEL_236;
                }
                [v187 objectAtIndexedSubscript:0];

                if (IOHIDEventGetIntegerValue())
                {
                  if ([(id)UIApp _supportsIndirectInputEvents]
                    && (uint64_t v77 = _UIEventHIDGetDescendantPointerEvent(v202)) != 0)
                  {
                    if (_UIEventHIDGetPointerEventSource(v77) == 4) {
                      uint64_t v78 = 0;
                    }
                    else {
                      uint64_t v78 = 3;
                    }
                  }
                  else
                  {
                    uint64_t v78 = IOHIDEventGetIntegerValue() == 0;
                  }
                }
                else
                {
                  uint64_t v78 = 2;
                }
                long long v83 = _UIEventHIDPathAttributesForChild(v76);
                int v84 = [v83 locus];

                BOOL v86 = v78 != v183 || v84 != v180;
                if (!v86) {
                  goto LABEL_235;
                }
              }
              unsigned __int8 v87 = v194;
              if (!v194)
              {
                unsigned __int8 v87 = [MEMORY[0x1E4F1CA48] array];
              }
              id v194 = v87;
              [v87 addObject:v202];

LABEL_177:
              ++v198;
              CFTypeRef v18 = v200;
              break;
            }
          }
          CFMutableDictionaryRef Mutable = (CFMutableDictionaryRef)__areDigitizerEventsCoalescable_children1EventMap;
          if (!__areDigitizerEventsCoalescable_children1EventMap) {
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, 0, 0);
          }
          __areDigitizerEventsCoalescable_children1EventMap = (uint64_t)Mutable;
          long long v208 = 0u;
          long long v209 = 0u;
          long long v210 = 0u;
          long long v211 = 0u;
          id v55 = v48;
          uint64_t v56 = [v55 countByEnumeratingWithState:&v208 objects:&v221 count:16];
          if (v56)
          {
            uint64_t v57 = *(void *)v209;
            double v58 = 0.0;
            do
            {
              for (uint64_t i = 0; i != v56; ++i)
              {
                if (*(void *)v209 != v57) {
                  objc_enumerationMutation(v55);
                }
                uint64_t v60 = *(const void **)(*((void *)&v208 + 1) + 8 * i);
                if (IOHIDEventGetType() == 32)
                {
                  IOHIDEventGetFloatValue();
                  double v58 = v61;
                }
                else
                {
                  uint64_t v62 = (const void *)_UIEventHIDPathIndexForDigitizerEvent();
                  CFDictionaryAddValue((CFMutableDictionaryRef)__areDigitizerEventsCoalescable_children1EventMap, v62, v60);
                }
              }
              uint64_t v56 = [v55 countByEnumeratingWithState:&v208 objects:&v221 count:16];
            }
            while (v56);
          }
          else
          {
            double v58 = 0.0;
          }

          long long v206 = 0u;
          long long v207 = 0u;
          long long v204 = 0u;
          long long v205 = 0u;
          obuint64_t j = v175;
          uint64_t v176 = [obj countByEnumeratingWithState:&v204 objects:&v217 count:16];
          if (v176)
          {
            uint64_t v173 = *(void *)v205;
            while (2)
            {
              for (uint64_t j = 0; j != v176; ++j)
              {
                if (*(void *)v205 != v173) {
                  objc_enumerationMutation(obj);
                }
                if (IOHIDEventGetType() == 32)
                {
                  IOHIDEventGetFloatValue();
                  if (v58 != v91) {
                    goto LABEL_199;
                  }
                }
                else
                {
                  CGFloat v92 = (const void *)_UIEventHIDPathIndexForDigitizerEvent();
                  Value = CFDictionaryGetValue((CFDictionaryRef)__areDigitizerEventsCoalescable_children1EventMap, v92);
                  char v94 = (char)Value;
                  if (!Value) {
                    goto LABEL_201;
                  }
                  uint64_t v95 = _UIEventHIDTouchEdgeTypeForHIDEvent();
                  if (v95 != _UIEventHIDTouchEdgeTypeForHIDEvent()
                    || (BOOL v96 = IOHIDEventGetIntegerValue() != 0, ((v96 ^ (IOHIDEventGetIntegerValue() != 0)) & 1) != 0))
                  {
LABEL_199:
                    char v94 = 0;
                    goto LABEL_201;
                  }
                }
              }
              uint64_t v176 = [obj countByEnumeratingWithState:&v204 objects:&v217 count:16];
              char v94 = 1;
              if (v176) {
                continue;
              }
              break;
            }
          }
          else
          {
            char v94 = 1;
          }
LABEL_201:

          CFDictionaryRemoveAllValues((CFMutableDictionaryRef)__areDigitizerEventsCoalescable_children1EventMap);
          if ((v94 & 1) == 0) {
            goto LABEL_149;
          }
          CFTypeRef v18 = (CFTypeRef)v202;
          if (!v180)
          {
            double v160 = _UIEventHIDUIWindowForHIDEvent();
            double v170 = -[UIEventEnvironment _touchesEventForWindow:](a1, v160);
            unint64_t v97 = IOHIDEventGetTimeStamp();
            double v162 = _UIMediaTimeForMachTime(v97);
            double v163 = _UIEventHIDUIWindowForHIDEvent();
            CFTypeRef cf = -[UIEventEnvironment _touchMapForWindow:](a1, v163);
            if (cf)
            {
              CFRetain(cf);
              CFAutorelease(cf);
            }
            objc_msgSend(v170, "_moveCoalescedTouchesFromHidEvent:toHidEvent:", v200, v202, v160);
            theArraCGFloat y = (const __CFArray *)IOHIDEventGetChildren();
            if (theArray)
            {
              Count = (char *)CFArrayGetCount(theArray);
              if (Count)
              {
                CFIndex v98 = 0;
                do
                {
                  id obja = (char *)v98;
                  ValueAtIndeCGFloat x = CFArrayGetValueAtIndex(theArray, v98);
                  keya = (void *)_UIEventHIDPathIndexForDigitizerEvent();
                  double v99 = [v170 _lastPendingCoalescedTouchForIndex:keya hidEvent:v202];
                  BOOL v100 = cf == 0;
                  if (v99) {
                    BOOL v100 = 1;
                  }
                  if (!v100)
                  {
                    double v99 = CFDictionaryGetValue((CFDictionaryRef)cf, keya);
                  }
                  if (v99)
                  {
                    CGFloat v101 = v99;
                    uint64_t v102 = [v99 _clone];
                    [(id)v102 _setPreviousTouch:v101];
                    [(id)v102 setTimestamp:v162];
                    double v103 = [(id)v102 window];
                    CGFloat v104 = [v103 screen];
                    _UITouchSetBasicTouchPropertiesFromEvent((void *)v102, v104, (uint64_t)v200, (uint64_t)ValueAtIndex);

                    unint64_t v105 = [v101 window];
                    long long v217 = *MEMORY[0x1E4F1DB30];
                    uint64_t v224 = 0;
                    long long v222 = 0u;
                    long long v223 = 0u;
                    long long v221 = 0u;
                    __baseTouchLocationsForChild((uint64_t)&v221, (uint64_t)ValueAtIndex, (uint64_t)v200, v105, v102, (double *)&v217, 0);
                    double v106 = -[UIWindow _fbsScene]((id *)v163);
                    double v107 = _UIConvertScenePoint3DToWindow(v106, v105, *(double *)&v223, *((double *)&v223 + 1));
                    double v174 = v108;
                    double v177 = v107;
                    *(double *)&long long v221 = v107;
                    *((double *)&v221 + 1) = v108;
                    uint64_t v224 = v109;
                    double v110 = _UIConvertScenePoint3DToWindow(v106, v105, *(double *)&v222, *((double *)&v222 + 1));
                    double v167 = v111;
                    double v168 = v110;
                    [v101 locationInView:0];
                    double v113 = v112;
                    double v115 = v114;
                    [v101 preciseLocationInView:0];
                    double v164 = v116;
                    double v118 = v117;
                    IOHIDEventGetFloatValue();
                    double v120 = v119;
                    [v101 _pressure];
                    double v122 = v121;
                    IOHIDEventGetFloatValue();
                    double v124 = v123;
                    [v101 _rollAngle];
                    if (v177 == v113 && v174 == v115 && v168 == v118 && v167 == v164 && v124 == v125 && v120 == v122)
                    {
                      uint64_t v126 = 2;
                    }
                    else
                    {
                      if (v102)
                      {
                        *(_OWORD *)(v102 + 12_Block_object_dispose(&STACK[0x3A0], 8) = *(_OWORD *)(v102 + 112);
                        *(_OWORD *)(v102 + 160) = *(_OWORD *)(v102 + 144);
                        *(double *)(v102 + 112) = v177;
                        *(double *)(v102 + 120) = v174;
                        *(double *)(v102 + 144) = v168;
                        *(double *)(v102 + 152) = v167;
                        double v127 = *(double *)(v102 + 224);
                        if (v127 < v120) {
                          double v127 = v120;
                        }
                        *(void *)(v102 + 176) = *(void *)(v102 + 216);
                        *(double *)(v102 + 216) = v120;
                        *(double *)(v102 + 224) = v127;
                      }
                      -[UITouch _setRollAngle:resetPrevious:](v102, 0, v124);
                      uint64_t v126 = 1;
                    }
                    [(id)v102 setPhase:v126];
                    -[UITouch _updateWithChildEvent:](v102);
                    [v170 _addCoalescedTouch:v102 forIndex:keya hidEvent:v202];

                    double v99 = v101;
                  }

                  CFIndex v98 = (CFIndex)(obja + 1);
                }
                while (Count != obja + 1);
              }
            }

            CFTypeRef v18 = (CFTypeRef)v202;
          }
          goto LABEL_144;
      }
      uint64_t v17 = v195 - 1;
      CFTypeRef v7 = v18;
      if (v195 <= 0) {
        goto LABEL_230;
      }
    }
LABEL_236:
    CFTypeRef v18 = v200;
    if (!v200) {
      goto LABEL_237;
    }
LABEL_231:
    double v36 = v18;
LABEL_232:
    uint64_t v10 = v36;
    CFRetain(v36);
LABEL_238:
    [v6 removeObjectsInRange:v193 - v198];
    long long v219 = 0u;
    long long v220 = 0u;
    long long v217 = 0u;
    long long v218 = 0u;
    CGRect v128 = [v194 reverseObjectEnumerator];
    uint64_t v129 = [v128 countByEnumeratingWithState:&v217 objects:&v221 count:16];
    if (v129)
    {
      uint64_t v130 = *(void *)v218;
      do
      {
        for (uint64_t k = 0; k != v129; ++k)
        {
          if (*(void *)v218 != v130) {
            objc_enumerationMutation(v128);
          }
          [v6 addObject:*(void *)(*((void *)&v217 + 1) + 8 * k)];
        }
        uint64_t v129 = [v128 countByEnumeratingWithState:&v217 objects:&v221 count:16];
      }
      while (v129);
    }

    id v9 = v190;
    __applySynthesizedTouchTranslationAndModifyIfNeeded((uint64_t)v10);

LABEL_246:
    id v203 = v9;
    if (v10)
    {
      CGRect v132 = (void *)MEMORY[0x18C108260]();
      int v133 = IOHIDEventGetType();
      unint64_t v134 = IOHIDEventGetTimeStamp();
      double v135 = _UIMediaTimeForMachTime(v134);
      char v136 = _UIUpdateCycleEnabled();
      if (v133 == 11) {
        char v137 = v136;
      }
      else {
        char v137 = 1;
      }
      if ((v137 & 1) == 0 && *(double *)(a1 + 64) > 0.0)
      {
        CGRect v138 = IOHIDEventGetChildren();
        if (![v138 count]) {
          goto LABEL_263;
        }
        CGRect v139 = [v138 objectAtIndexedSubscript:0];
        if (!IOHIDEventGetIntegerValue()) {
          goto LABEL_259;
        }
        if (![(id)UIApp _supportsIndirectInputEvents]
          || (uint64_t v140 = _UIEventHIDGetDescendantPointerEvent((uint64_t)v10)) == 0)
        {
          BOOL v141 = IOHIDEventGetIntegerValue() == 0;

          if (!v141) {
            goto LABEL_261;
          }
          goto LABEL_263;
        }
        if (_UIEventHIDGetPointerEventSource(v140) != 4)
        {
LABEL_259:

          goto LABEL_263;
        }

LABEL_261:
        if (([MEMORY[0x1E4F39CF8] lowLatency] & 1) == 0) {
          [MEMORY[0x1E4F39CF8] setEarliestAutomaticCommitTime:CACurrentMediaTime() + *(double *)(a1 + 64)];
        }
LABEL_263:
      }
      __dispatchPreprocessedEventFromEventQueue((uint64_t)v10, v184, a1);
      if ((_UIUpdateCycleEnabled() & 1) == 0
        && [MEMORY[0x1E4F39CF8] currentState]
        && [MEMORY[0x1E4F39CF8] lowLatency])
      {
        [MEMORY[0x1E4F39CF8] commitTime];
        if (v142 > 0.0) {
          [MEMORY[0x1E4F39CF8] setCommitTime:0.0];
        }
        [MEMORY[0x1E4F39CF8] earliestAutomaticCommitTime];
        if (v143 > 0.0) {
          [MEMORY[0x1E4F39CF8] setEarliestAutomaticCommitTime:0.0];
        }
      }
      CFRelease(v10);
    }
    else
    {
      double v135 = 0.0;
    }
    if (v203)
    {
      uint64_t v201 = (void *)MEMORY[0x18C108260]();
      [v203 count];
      kdebug_trace();
      *(void *)&long long v204 = 0;
      *((void *)&v204 + 1) = &v204;
      *(void *)&long long v205 = 0x3032000000;
      *((void *)&v205 + 1) = __Block_byref_object_copy__41;
      *(void *)&long long v206 = __Block_byref_object_dispose__42;
      *((void *)&v206 + 1) = 0;
      long long v217 = 0u;
      long long v218 = 0u;
      long long v219 = 0u;
      long long v220 = 0u;
      id v144 = v203;
      uint64_t v145 = [v144 countByEnumeratingWithState:&v217 objects:&v221 count:16];
      if (v145)
      {
        uint64_t v146 = *(void *)v218;
        do
        {
          for (uint64_t m = 0; m != v145; ++m)
          {
            if (*(void *)v218 != v146) {
              objc_enumerationMutation(v144);
            }
            uint64_t v148 = NSNumber;
            id v149 = BKSHIDEventGetBaseAttributes();
            uint64_t v150 = objc_msgSend(v148, "numberWithUnsignedInt:", objc_msgSend(v149, "contextID"));

            *(void *)&long long v208 = MEMORY[0x1E4F143A8];
            *((void *)&v208 + 1) = 3221225472;
            *(void *)&long long v209 = ____dispatchEstimationUpdateEvents_block_invoke;
            *((void *)&v209 + 1) = &unk_1E53047F0;
            *(void *)&long long v211 = a1;
            id v151 = v150;
            *(void *)&long long v210 = v151;
            *((void *)&v210 + 1) = &v204;
            BKSHIDEventEnumerateUpdatesWithBlock();
          }
          uint64_t v145 = [v144 countByEnumeratingWithState:&v217 objects:&v221 count:16];
        }
        while (v145);
      }

      id v152 = *(void **)(*((void *)&v204 + 1) + 40);
      if (v152)
      {
        if (v135 < 0.0)
        {
          unint64_t v153 = IOHIDEventGetTimeStamp();
          double v135 = _UIMediaTimeForMachTime(v153);
          id v152 = *(void **)(*((void *)&v204 + 1) + 40);
        }
        -[UIEventEnvironment _dispatchAndRemoveStaleEstimationUpdateRecordsWithEventTime:upToRecord:](a1, v152, v135);
        if (([*(id *)(*((void *)&v204 + 1) + 40) hasRemainingUpdates] & 1) == 0) {
          -[UIEventEnvironment _removeEstimatedTouchRecord:](a1, *(void **)(*((void *)&v204 + 1) + 40));
        }
      }
      _Block_object_dispose(&v204, 8);

      kdebug_trace();
    }

    char v154 = _UIUpdateCycleEnabled();
    int v155 = --v196;
    if (v154)
    {
      if (!v155) {
        goto LABEL_294;
      }
LABEL_293:
      if (![v189 count]) {
        goto LABEL_294;
      }
      continue;
    }
    break;
  }
  BOOL v156 = _UIApplicationFlushRunLoopCATransactionIfTooLate(v182);
  if (v196) {
    char v157 = v156;
  }
  else {
    char v157 = 1;
  }
  if ((v157 & 1) == 0) {
    goto LABEL_293;
  }
LABEL_294:
  uint64_t result = _UIUpdateCycleEnabled();
  if ((result & 1) == 0)
  {
    if ([v189 count])
    {
      uint64_t v159 = v182[20];
      if (v159) {
        CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(v159 + 24));
      }
    }
    return [MEMORY[0x1E4F39CF8] finishFrameWithToken:v184];
  }
  return result;
}

void sub_18557634C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void _afterCACommitHandler(uint64_t a1, uint64_t a2, void *a3)
{
  if ((_UIUpdateCycleEnabled() & 1) == 0)
  {
    double v5 = a3;
    if (_cleanUpAfterCAFlushAndRunDeferredBlocks(v5, 1))
    {
      _UIApplicationDrainManagedAutoreleasePool();
      [MEMORY[0x1E4F39CF8] flush];
      _cleanUpAfterCAFlushAndRunDeferredBlocks(v5, 0);
      if ([v5[12] count])
      {
        Main = CFRunLoopGetMain();
        CFRunLoopWakeUp(Main);
      }
    }
  }
}

uint64_t _UIUpdateCycleEnabled()
{
  if (qword_1EB262198 != -1) {
    dispatch_once(&qword_1EB262198, &__block_literal_global_421);
  }
  return _MergedGlobals_1183[0];
}

void __applySynthesizedTouchTranslationAndModifyIfNeeded(uint64_t a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  char v2 = [(id)UIApp _supportsIndirectInputEvents];
  if (a1 && (v2 & 1) == 0 && IOHIDEventGetType() == 11 && _UIEventHIDShouldTransformEvent())
  {
    uint64_t v47 = 0;
    CGRect v48 = &v47;
    uint64_t v49 = 0x2020000000;
    uint64_t v50 = 0;
    uint64_t v43 = 0;
    unsigned __int8 v44 = &v43;
    uint64_t v45 = 0x2020000000;
    uint64_t v46 = 0;
    uint64_t v39 = 0;
    char v40 = &v39;
    uint64_t v41 = 0x2020000000;
    uint64_t v42 = 0;
    v38[0] = MEMORY[0x1E4F143A8];
    v38[1] = 3221225472;
    v38[2] = ____applySynthesizedTouchTranslationAndModifyIfNeeded_block_invoke;
    v38[3] = &unk_1E5304968;
    v38[4] = &v47;
    v38[5] = &v43;
    v38[6] = &v39;
    _UIEventHIDEnumerateChildren(a1, 0, v38);
    if (v48[3] && v44[3] && v40[3])
    {
      uint64_t v34 = 0;
      uint64_t v35 = &v34;
      uint64_t v36 = 0x2020000000;
      uint64_t v37 = 0;
      uint64_t v3 = v48[3];
      v33[0] = MEMORY[0x1E4F143A8];
      v33[1] = 3221225472;
      v33[2] = ____applySynthesizedTouchTranslationAndModifyIfNeeded_block_invoke_2;
      v33[3] = &unk_1E52DA1D8;
      void v33[4] = &v34;
      _UIEventHIDEnumerateChildren(v3, 1, v33);
      double v4 = (_OWORD *)v35[3];
      if (v4)
      {
        long long v5 = v4[1];
        *(_OWORD *)&v32.a = *v4;
        *(_OWORD *)&v32.c = v5;
        *(_OWORD *)&v32.tCGFloat x = v4[2];
        memset(&v31, 0, sizeof(v31));
        _UIEventGetAffineTransformForScaleEvent(v48[3], (uint64_t)&v31);
        memset(&v30, 0, sizeof(v30));
        CGAffineTransformMakeTranslation(&v30, v31.tx, v31.ty);
        memset(&v29, 0, sizeof(v29));
        CGAffineTransform v27 = v30;
        CGAffineTransformInvert(&v28, &v27);
        CGAffineTransform v27 = v31;
        CGAffineTransformConcat(&v29, &v27, &v28);
        CGAffineTransform v26 = v32;
        memset(&v27, 0, sizeof(v27));
        CGAffineTransform v25 = v30;
        uint64_t v6 = CGAffineTransformConcat(&v27, &v26, &v25);
        BOOL v23 = v21;
        MEMORY[0x1F4188790](v6);
        _UIEventHIDUIWindowForHIDEvent();
        id v22 = (id)objc_claimAutoreleasedReturnValue();
        int v7 = [v22 _contextId];
        IOHIDEventGetFloatValue();
        float64x2_t v24 = v8;
        IOHIDEventGetFloatValue();
        float64x2_t v24 = vaddq_f64(*(float64x2_t *)&v27.tx, vaddq_f64(vmulq_n_f64(*(float64x2_t *)&v27.a, v24.f64[0]), vmulq_n_f64(*(float64x2_t *)&v27.c, v9)));
        IOHIDEventSetFloatValue();
        IOHIDEventSetFloatValue();
        uint64_t v10 = BKSHIDEventGetDigitizerAttributes();
        void v21[3] = v7;
        int v11 = _UIEventHIDPathAttributesForChild(v10);
        unsigned int v12 = _UIEventHIDPathIndexForDigitizerEvent();
        unsigned int v13 = [v11 touchIdentifier];
        int v14 = [v11 userIdentifier];
        char v15 = [v11 locus];
        [v11 zGradient];
        unint64_t v19 = __PAIR64__(v13, v12);
        LODWORD(v20) = v14;
        BYTE4(v20) = v15;
        *(_WORD *)((char *)&v20 + 5) = 0;
        HIBYTE(v20) = 0;
        IOHIDEventGetFloatValue();
        float64x2_t v24 = v16;
        IOHIDEventGetFloatValue();
        float64x2_t v24 = vaddq_f64(*(float64x2_t *)&v27.tx, vaddq_f64(vmulq_n_f64(*(float64x2_t *)&v27.a, v24.f64[0]), vmulq_n_f64(*(float64x2_t *)&v27.c, v17)));
        IOHIDEventSetFloatValue();
        IOHIDEventSetFloatValue();
        CFTypeRef v18 = _UIEventHIDPathAttributesForChild(v10);
        _UIEventHIDPathIndexForDigitizerEvent();
        objc_msgSend(v18, "touchIdentifier", v19, v20);
        [v18 userIdentifier];
        [v18 locus];
        [v18 zGradient];
        CFAbsoluteTimeGetCurrent();
        BKSHIDEventSetDigitizerInfoWithSubEventInfos();
      }
      _Block_object_dispose(&v34, 8);
    }
    _Block_object_dispose(&v39, 8);
    _Block_object_dispose(&v43, 8);
    _Block_object_dispose(&v47, 8);
  }
}

void sub_1855769B8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 + 472), 8);
  _Block_object_dispose((const void *)(v2 - 208), 8);
  _Block_object_dispose((const void *)(v2 - 176), 8);
  _Block_object_dispose((const void *)(v2 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t _UIEventHIDShouldTransformEvent()
{
  uint64_t v0 = _UIEventHIDUIWindowForHIDEvent();
  uint64_t v1 = [v0 screen];

  if (v1)
  {
    unint64_t v2 = [v1 _userInterfaceIdiom];
    if (v2 <= 6) {
      uint64_t v3 = (0x63u >> v2) & 1;
    }
    else {
      uint64_t v3 = 0;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

void *_UIEventHIDUIWindowForHIDEvent()
{
  uint64_t v0 = BKSHIDEventGetBaseAttributes();
  uint64_t v1 = [v0 contextID];

  if (!v1) {
    goto LABEL_5;
  }
  unint64_t v2 = +[UIWindow _windowWithContextId:v1];
  if (v2 && (v2[12] & 0x1000) != 0)
  {

LABEL_5:
    unint64_t v2 = 0;
  }
  return v2;
}

__CFString *_cubicTimingProviderDescription(void *a1)
{
  id v1 = a1;
  unint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 animationCurve];
    if (v3 == 7)
    {
      unsigned int v13 = @"cubic smooth;";
    }
    else
    {
      if (v3 == 6)
      {
        id v4 = [NSString alloc];
        [v2 controlPoint1];
        uint64_t v6 = v5;
        [v2 controlPoint1];
        uint64_t v8 = v7;
        [v2 controlPoint2];
        uint64_t v10 = v9;
        [v2 controlPoint2];
        uint64_t v12 = [v4 initWithFormat:@"cubic custom %f %f, %f %f;", v6, v8, v10, v11];
      }
      else
      {
        uint64_t v12 = objc_msgSend([NSString alloc], "initWithFormat:", @"cubic curve %lu;",
                [v2 animationCurve],
                v15,
                v16,
                v17);
      }
      unsigned int v13 = (__CFString *)v12;
    }
  }
  else
  {
    unsigned int v13 = @"cubic unknown;";
  }

  return v13;
}

BOOL _UICAColorMatrixIsEqualToCAColorMatrix(float *a1, float *a2, double a3)
{
  return vabds_f32(*a1, *a2) <= a3
      && vabds_f32(a1[1], a2[1]) <= a3
      && vabds_f32(a1[2], a2[2]) <= a3
      && vabds_f32(a1[3], a2[3]) <= a3
      && vabds_f32(a1[4], a2[4]) <= a3
      && vabds_f32(a1[5], a2[5]) <= a3
      && vabds_f32(a1[6], a2[6]) <= a3
      && vabds_f32(a1[7], a2[7]) <= a3
      && vabds_f32(a1[8], a2[8]) <= a3
      && vabds_f32(a1[9], a2[9]) <= a3
      && vabds_f32(a1[10], a2[10]) <= a3
      && vabds_f32(a1[11], a2[11]) <= a3
      && vabds_f32(a1[12], a2[12]) <= a3
      && vabds_f32(a1[13], a2[13]) <= a3
      && vabds_f32(a1[14], a2[14]) <= a3
      && vabds_f32(a1[15], a2[15]) <= a3
      && vabds_f32(a1[16], a2[16]) <= a3
      && vabds_f32(a1[17], a2[17]) <= a3
      && vabds_f32(a1[18], a2[18]) <= a3
      && vabds_f32(a1[19], a2[19]) <= a3;
}

uint64_t sub_18557A374()
{
  id v1 = *(os_unfair_lock_s **)(v0 + 16);
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 24);
  uint64_t v3 = v1 + 4;
  id v4 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_18557AE14(v3);
  os_unfair_lock_unlock(v4);
  return v2();
}

uint64_t sub_18557A3E8()
{
  return sub_18557A400(*(void *)(v0 + 16));
}

uint64_t sub_18557A3F0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_18557A400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

unsigned char *sub_18557AE14(unsigned char *result)
{
  *uint64_t result = 0;
  return result;
}

void _UIBarsSetAccessibilityLimits(void *a1)
{
  id v9 = a1;
  id v1 = [v9 traitCollection];
  if ([v1 userInterfaceIdiom] == 4)
  {
    char v2 = dyld_program_sdk_at_least();

    uint64_t v3 = v9;
    if (v2) {
      goto LABEL_16;
    }
  }
  else
  {

    uint64_t v3 = v9;
  }
  [v3 _setMinimumContentSizeCategory:@"UICTContentSizeCategoryL"];
  id v4 = [v9 traitCollection];
  uint64_t v5 = [v4 userInterfaceIdiom];

  if (v5 == 6)
  {
    if (qword_1EB25C820 != -1) {
      dispatch_once(&qword_1EB25C820, &__block_literal_global_55);
    }
    uint64_t v6 = &UIContentSizeCategoryAccessibilityMedium;
  }
  else
  {
    if (qword_1EB25C820 != -1) {
      dispatch_once(&qword_1EB25C820, &__block_literal_global_55);
    }
    uint64_t v6 = &UIContentSizeCategoryExtraExtraLarge;
  }
  uint64_t v7 = (__CFString *)*v6;
  if (_MergedGlobals_5_2) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = @"UICTContentSizeCategoryL";
  }
  [v9 _setMaximumContentSizeCategory:v8];
  uint64_t v3 = v9;
LABEL_16:
}

void sub_18557C6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_18557CC50(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = v8;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan] = 0;
  *(void *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_runningProgresses] = MEMORY[0x1E4FBC870];
  unsigned int v13 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback];
  *unsigned int v13 = 0;
  v13[1] = 0;
  int v14 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback];
  *int v14 = 0;
  v14[1] = 0;
  uint64_t v15 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_stabilizedCallback];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties;
  uint64_t v17 = v9;
  unint64_t v18 = sub_1854AFFDC(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E8FB00A8);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = v18;
  *(void *)&v9[v16] = v19;
  v17[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe] = a2;
  uint64_t v20 = *v13;
  *unsigned int v13 = a3;
  v13[1] = a4;
  swift_retain();
  sub_1854AFD40(v20);
  uint64_t v21 = *v14;
  *int v14 = a5;
  v14[1] = a6;
  swift_retain();
  sub_1854AFD40(v21);
  uint64_t v22 = *v15;
  *uint64_t v15 = a7;
  v15[1] = a8;
  swift_retain();
  sub_1854AFD40(v22);
  v17[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_clearsCapturedPropertiesOnStabilization] = 1;

  v37.receiver = v17;
  v37.super_class = ObjectType;
  id v23 = objc_msgSendSuper2(&v37, sel_init);
  float64x2_t v24 = v23;
  if (!(a1 >> 62))
  {
    uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = v23;
    if (v25) {
      goto LABEL_3;
    }
LABEL_10:

    return v24;
  }
  id v30 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_186A1F67C();
  id result = (id)swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_10;
  }
LABEL_3:
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v28 = (id)MEMORY[0x18C102240](i, a1);
      }
      else {
        id v28 = *(id *)(a1 + 8 * i + 32);
      }
      CGAffineTransform v29 = v28;
      objc_msgSend(v28, sel_set__swiftTransformer_, v24);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_18557CF74(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8);
  sub_18557D060(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_1853B7BB0(&v8, &v10);
    _s29AnimatablePropertyTransformerCMa();
    swift_dynamicCast();
    uint64_t v4 = v7;
  }
  else
  {
    sub_1853BFC80((uint64_t)&v8);
    uint64_t v4 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, ObjectType, v3);
  return sub_1853BFC80(a1);
}

uint64_t _s29AnimatablePropertyTransformerCMa()
{
  return self;
}

uint64_t sub_18557D060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB256B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_18557D0C8(void *a1)
{
  sub_185A5A4C0();
}

void _UIVisualEffectViewUpgradeLegacyEffect(void *a1, void **a2, void **a3)
{
  id v5 = a1;
  if (!v5
    || (+[UIVisualEffect emptyEffect],
        id v6 = (id)objc_claimAutoreleasedReturnValue(),
        v6,
        v6 == v5))
  {
    uint64_t v12 = *a2;
    unsigned int v13 = (void *)MEMORY[0x1E4F1CBF0];
    *a2 = (void *)MEMORY[0x1E4F1CBF0];

    int v14 = *a3;
    *a3 = v13;
  }
  else
  {
    uint64_t v7 = [v5 _expectedUsage];
    long long v8 = objc_opt_new();
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 3221225472;
    void v18[2] = ___UIVisualEffectViewUpgradeLegacyEffect_block_invoke;
    v18[3] = &unk_1E52DD568;
    id v19 = v8;
    id v9 = v8;
    [v5 _enumerateEffects:v18];
    if (v7 == 2)
    {
      long long v10 = *a2;
      *a2 = (void *)MEMORY[0x1E4F1CBF0];

      uint64_t v11 = [v9 copy];
    }
    else
    {
      uint64_t v15 = [v9 copy];
      uint64_t v16 = *a2;
      *a2 = (void *)v15;

      uint64_t v11 = MEMORY[0x1E4F1CBF0];
    }
    uint64_t v17 = *a3;
    *a3 = (void *)v11;
  }
}

void _UIVisualEffectSubviewApplyViewEffects(void *a1, void *a2, uint64_t a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        [*(id *)(*((void *)&v11 + 1) + 8 * v10++) applyEffectAsRequested:a3 toView:v5];
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v8);
  }
}

id _UIVisualEffectSubviewSetViewEffects(void *a1, void *a2, void *a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = (void *)MEMORY[0x1E4F1CBF0];
  if (a2) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = (void *)MEMORY[0x1E4F1CBF0];
  }
  id v8 = v7;
  id v9 = a3;
  uint64_t v10 = v9;
  if (v9) {
    long long v11 = v9;
  }
  else {
    long long v11 = v6;
  }
  id v12 = v11;

  if ([v8 isEqualToArray:v12])
  {
    id v13 = v8;
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v14 = v8;
    uint64_t v15 = [v14 countByEnumeratingWithState:&v30 objects:v35 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v31;
      do
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v31 != v17) {
            objc_enumerationMutation(v14);
          }
          [*(id *)(*((void *)&v30 + 1) + 8 * i) removeEffectFromView:v5];
        }
        uint64_t v16 = [v14 countByEnumeratingWithState:&v30 objects:v35 count:16];
      }
      while (v16);
    }

    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v19 = v12;
    uint64_t v20 = [v19 countByEnumeratingWithState:&v26 objects:v34 count:16];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)v27;
      do
      {
        for (uint64_t j = 0; j != v21; ++j)
        {
          if (*(void *)v27 != v22) {
            objc_enumerationMutation(v19);
          }
          objc_msgSend(*(id *)(*((void *)&v26 + 1) + 8 * j), "addEffectToView:", v5, (void)v26);
        }
        uint64_t v21 = [v19 countByEnumeratingWithState:&v26 objects:v34 count:16];
      }
      while (v21);
    }

    id v13 = (id)[v19 copy];
  }
  float64x2_t v24 = v13;

  return v24;
}

void updateBackdropView(void *a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = [a1 backdropLayer];
  if (v5)
  {
    [v3 setGroupName:*((void *)v5 + 3)];
    [v3 setGroupNamespace:*((void *)v5 + 4)];
    double v4 = *((double *)v5 + 6);
    if (v4 < *((double *)v5 + 5)) {
      double v4 = *((double *)v5 + 5);
    }
  }
  else
  {
    [v3 setGroupName:0];
    [v3 setGroupNamespace:*MEMORY[0x1E4F39DA8]];
    double v4 = 1.0;
  }
  [v3 setScale:v4];
}

id _UIBadgeGetTabBarVisualStyle(uint64_t a1, uint64_t a2)
{
  if (a1 || !a2)
  {
    if (a1 == 1 && a2)
    {
      char v2 = &qword_1EB25BC90;
      uint64_t v3 = (void *)qword_1EB25BC90;
      if (qword_1EB25BC90) {
        goto LABEL_18;
      }
    }
    else if (a1 == 2 || a1 == 8)
    {
      char v2 = &qword_1EB25BC78;
      uint64_t v3 = (void *)qword_1EB25BC78;
      if (qword_1EB25BC78) {
        goto LABEL_18;
      }
    }
    else if (a1 == 3)
    {
      char v2 = &_MergedGlobals_1_2;
      uint64_t v3 = (void *)_MergedGlobals_1_2;
      if (_MergedGlobals_1_2) {
        goto LABEL_18;
      }
    }
    else
    {
      char v2 = &qword_1EB25BC80;
      uint64_t v3 = (void *)qword_1EB25BC80;
      if (qword_1EB25BC80) {
        goto LABEL_18;
      }
    }
  }
  else
  {
    char v2 = &qword_1EB25BC88;
    uint64_t v3 = (void *)qword_1EB25BC88;
    if (qword_1EB25BC88) {
      goto LABEL_18;
    }
  }
  uint64_t v4 = objc_opt_new();
  id v5 = (void *)*v2;
  *char v2 = v4;

  uint64_t v3 = (void *)*v2;
LABEL_18:
  id v6 = v3;
  return v6;
}

BOOL _UIApplicationWaitForBackgroundAssertionsToFlush()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x3032000000;
  uint64_t v7 = __Block_byref_object_copy__100;
  id v8 = __Block_byref_object_dispose__100;
  id v9 = 0;
  uint64_t v0 = +[_UIBackgroundTaskInfo backgroundTaskAssertionQueue];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___UIApplicationWaitForBackgroundAssertionsToFlush_block_invoke;
  block[3] = &unk_1E52D9900;
  block[4] = &v4;
  dispatch_sync(v0, block);

  uint64_t v1 = v5[5];
  if (v1) {
    [(id)v5[5] acquire];
  }
  _Block_object_dispose(&v4, 8);

  return v1 != 0;
}

void sub_18558209C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIApplicationBeginBackgroundTaskWithExpirationHandler(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = a2;
  if (!v4)
  {
    id v5 = *(const void **)(vars0 + 8);
    memset(&v20, 0, sizeof(v20));
    if (v5 && dladdr(v5, &v20))
    {
      if (v20.dli_sname && *v20.dli_sname)
      {
        objc_msgSend(NSString, "stringWithCString:encoding:");
        uint64_t v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        uint64_t v6 = @"unknown method";
      }
      if (v20.dli_fname && *v20.dli_fname)
      {
        id v19 = objc_msgSend(NSString, "stringWithCString:encoding:");
        uint64_t v7 = [v19 lastPathComponent];

        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v6 = @"unknown method";
    }
    uint64_t v7 = @"unknown caller";
LABEL_9:
    uint64_t v4 = [NSString stringWithFormat:@"Called by %@, from %@", v7, v6];
  }
  id v8 = *(NSObject **)(__UILogGetCategoryCachedImpl("BackgroundTask", &_UIApplicationBeginBackgroundTaskWithExpirationHandler___s_category)+ 8);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = v8;
    uint64_t v10 = _Block_copy(v3);
    LODWORD(v20.dli_fname) = 138478083;
    *(const char **)((char *)&v20.dli_fname + 4) = v4;
    WORD2(v20.dli_fbase) = 2112;
    *(void **)((char *)&v20.dli_fbase + 6) = v10;
    _os_log_impl(&dword_1853B0000, v9, OS_LOG_TYPE_DEFAULT, "Will add backgroundTask with taskName: %{private}@, expirationHandler: %@", (uint8_t *)&v20, 0x16u);
  }
  long long v11 = v4;
  id v12 = v3;
  if (MGGetBoolAnswer() && ([(id)UIApp _isSpringBoard] & 1) == 0)
  {
    id v14 = v11;
    if (!v11)
    {
      uint64_t v15 = NSString;
      uint64_t v16 = _UIMainBundleIdentifier();
      id v14 = [v15 stringWithFormat:@"Background Task for %@", v16];
    }
    id v13 = _doAddBackgroundTask(v14, v12, 1);
  }
  else
  {
    id v13 = 0;
    id v14 = v11;
  }

  if (v13) {
    uint64_t v17 = v13[1];
  }
  else {
    uint64_t v17 = 0;
  }

  return v17;
}

uint64_t _UIApplicationEndBackgroundTask(const void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  char v2 = *(NSObject **)(__UILogGetCategoryCachedImpl("BackgroundTask", &qword_1EB260A68) + 8);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    *(void *)&uint8_t buf[4] = a1;
    _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_DEFAULT, "Ending background task with UIBackgroundTaskIdentifier: %lu", buf, 0xCu);
  }
  if (!a1) {
    return 1;
  }
  os_unfair_lock_lock(&stru_1EB2609F4);
  uint64_t v3 = NSMapGet((NSMapTable *)qword_1EB260A40, a1);
  if (v3)
  {
    uint64_t v4 = *(NSObject **)(__UILogGetCategoryCachedImpl("BackgroundTask", &qword_1EB260A78) + 8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = v4;
      uint64_t v6 = [(id)v3 description];
      uint64_t v7 = _Block_copy(*(const void **)(v3 + 16));
      *(_DWORD *)buf = 134218499;
      *(void *)&uint8_t buf[4] = a1;
      *(_WORD *)&buf[12] = 2113;
      *(void *)&buf[14] = v6;
      *(_WORD *)&buf[22] = 2112;
      id v19 = v7;
      _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_DEFAULT, "Ending task with identifier %lu and description: %{private}@, _expireHandler: %@", buf, 0x20u);
    }
    id v8 = *(id *)(v3 + 24);
    [(id)v3 invalidate];
    NSMapRemove((NSMapTable *)qword_1EB260A40, *(const void **)(v3 + 8));
    if (![(id)qword_1EB260A40 count]) {
      _fireBackgroundTaskCountReachedZeroHandlers_Locked();
    }
  }
  else
  {
    uint64_t v10 = *(NSObject **)(__UILogGetCategoryCachedImpl("BackgroundTask", &qword_1EB260A70) + 8);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = a1;
      _os_log_impl(&dword_1853B0000, v10, OS_LOG_TYPE_DEFAULT, "Failed to fetch background task with identifier: %lu", buf, 0xCu);
    }
    UIApplicationEndBackgroundTaskError((uint64_t)a1);
    id v8 = 0;
  }
  os_unfair_lock_unlock(&stru_1EB2609F4);
  *(void *)buf = 0;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000;
  BOOL v9 = 1;
  LOBYTE(v19) = 1;
  if (v8)
  {
    long long v11 = +[_UIBackgroundTaskInfo backgroundTaskAssertionQueue];
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    _OWORD v13[2] = ___UIApplicationEndBackgroundTask_block_invoke;
    v13[3] = &unk_1E52F07B8;
    id v14 = v8;
    uint64_t v17 = a1;
    id v15 = (id)v3;
    uint64_t v16 = buf;
    dispatch_sync(v11, v13);

    BOOL v9 = *(unsigned char *)(*(void *)&buf[8] + 24) != 0;
  }
  _Block_object_dispose(buf, 8);

  return v9;
}

void sub_1855826D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const void **_doAddBackgroundTask(void *a1, void *a2, int a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  if (a3) {
    entr_act_modify();
  }
  uint64_t v29 = 0;
  long long v30 = &v29;
  uint64_t v31 = 0x3032000000;
  long long v32 = __Block_byref_object_copy__100;
  long long v33 = __Block_byref_object_dispose__100;
  id v34 = 0;
  uint64_t v7 = +[_UIBackgroundTaskInfo backgroundTaskAssertionQueue];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___doAddBackgroundTask_block_invoke;
  block[3] = &unk_1E52E3210;
  long long v28 = &v29;
  id v8 = v5;
  id v27 = v8;
  dispatch_sync(v7, block);

  if (v30[5] || (dyld_program_sdk_at_least() & 1) == 0)
  {
    uint64_t v10 = [_UIBackgroundTaskInfo alloc];
    BOOL v9 = [(_UIBackgroundTaskInfo *)v10 initWithProcessAssertion:v30[5] taskName:v8 expirationHandler:v6];
    os_unfair_lock_lock(&stru_1EB2609F4);
    if (!qword_1EB260A40)
    {
      long long v11 = *(_OWORD *)(MEMORY[0x1E4F28478] + 16);
      *(_OWORD *)&keyCallBacks.hash = *MEMORY[0x1E4F28478];
      *(_OWORD *)&keyCallBacks.retain = v11;
      *(_OWORD *)&keyCallBacks.describe = *(_OWORD *)(MEMORY[0x1E4F28478] + 32);
      NSMapTableValueCallBacks valueCallBacks = *(NSMapTableValueCallBacks *)*(void *)&MEMORY[0x1E4F28788];
      id v12 = NSCreateMapTable(&keyCallBacks, &valueCallBacks, 0);
      id v13 = (void *)qword_1EB260A40;
      qword_1EB260A40 = (uint64_t)v12;
    }
    do
    {
      id v14 = (const void *)_nextTaskId;
      v9[1] = (const void *)_nextTaskId;
      _nextTaskId = (uint64_t)v14 + 1;
      if (v14 == (const void *)-1) {
        _nextTaskId = 1;
      }
    }
    while (NSMapGet((NSMapTable *)qword_1EB260A40, v14));
    NSMapInsert((NSMapTable *)qword_1EB260A40, v9[1], v9);
    if (!qword_1EB260AB8) {
      _backgroundTaskExpirationWarningTimerSchedule_Locked(35);
    }
    os_unfair_lock_unlock(&stru_1EB2609F4);
    id v15 = *(id *)(__UILogGetCategoryCachedImpl("BackgroundTask", &qword_1EB260B00) + 8);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = [v9 description];
      LODWORD(keyCallBacks.hash) = 138477827;
      *(NSUInteger (__cdecl **)(NSMapTable *, const void *))((char *)&keyCallBacks.hash + 4) = v16;
      _os_log_impl(&dword_1853B0000, v15, OS_LOG_TYPE_DEFAULT, "Created background task %{private}@.", (uint8_t *)&keyCallBacks, 0xCu);
    }
    if ((dyld_program_sdk_at_least() & 1) == 0 && !v30[5])
    {
      uint64_t v17 = *(NSObject **)(__UILogGetCategoryCachedImpl("BackgroundTask", &qword_1EB260B08) + 8);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v18 = (NSUInteger (__cdecl *)(NSMapTable *, const void *))v9[1];
        LODWORD(keyCallBacks.hash) = 134217984;
        *(NSUInteger (__cdecl **)(NSMapTable *, const void *))((char *)&keyCallBacks.hash + 4) = v18;
        _os_log_impl(&dword_1853B0000, v17, OS_LOG_TYPE_DEFAULT, "Enqueing error for background assertion aquire failure: task ID = %lu", (uint8_t *)&keyCallBacks, 0xCu);
      }
      id v19 = dispatch_get_global_queue(9, 0);
      v23[0] = MEMORY[0x1E4F143A8];
      v23[1] = 3221225472;
      _OWORD v23[2] = ___doAddBackgroundTask_block_invoke_111;
      v23[3] = &unk_1E52D9F70;
      BOOL v9 = v9;
      float64x2_t v24 = v9;
      dispatch_async(v19, v23);
    }
  }
  else
  {
    BOOL v9 = 0;
  }
  uint64_t v20 = v27;
  uint64_t v21 = v9;

  _Block_object_dispose(&v29, 8);
  return v21;
}

void sub_185582B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855835B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double _minimumBackButtonWidth(void *a1)
{
  if (a1[72])
  {
    uint64_t v1 = (void *)a1[72];
    [v1 minimumBackButtonWidth];
  }
  else
  {
    uint64_t v3 = [a1 traitCollection];
    uint64_t v4 = [v3 userInterfaceIdiom];

    double result = 44.0;
    if (v4 == 5) {
      return 34.0;
    }
  }
  return result;
}

void sub_185585174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

uint64_t _UINavigationControllerUseAugmentedPopGesture()
{
  if (_UINavigationControllerUseAugmentedPopGesture_onceToken != -1) {
    dispatch_once(&_UINavigationControllerUseAugmentedPopGesture_onceToken, &__block_literal_global_133);
  }
  return __UINavigationControllerUseAugmentedPopGesture;
}

void sub_1855860F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _backgroundTaskExpirationWarningTimerSchedule_Locked(uint64_t a1)
{
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  qword_1EB260AB8 = (uint64_t)CFRunLoopTimerCreate(v2, Current + (double)a1, 0.0, 0, 0, (CFRunLoopTimerCallBack)_backgroundTaskExpirationWarningTimerFired, 0);
  Main = CFRunLoopGetMain();
  id v5 = (__CFRunLoopTimer *)qword_1EB260AB8;
  CFStringRef v6 = (const __CFString *)*MEMORY[0x1E4F1D410];
  CFRunLoopAddTimer(Main, v5, v6);
}

void _fireBackgroundTaskCountReachedZeroHandlers_Locked()
{
  if (qword_1EB260AB8)
  {
    CFRunLoopTimerInvalidate((CFRunLoopTimerRef)qword_1EB260AB8);
    CFRelease((CFTypeRef)qword_1EB260AB8);
    qword_1EB260AB8 = 0;
  }
  id v0 = (id)qword_1EB260A48;
  uint64_t v1 = (void *)qword_1EB260A48;
  qword_1EB260A48 = 0;

  if (v0)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___fireBackgroundTaskCountReachedZeroHandlers_Locked_block_invoke;
    block[3] = &unk_1E52D9F70;
    id v3 = v0;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_1855865E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIPerformVoidSelector2(void *a1, const char *a2, const char *a3, const char *a4)
{
  if (dyld_program_sdk_at_least())
  {
    id v8 = a1;
    BOOL v9 = a2;
    uint64_t v10 = a3;
    long long v11 = a4;
  }
  else
  {
    BOOL v9 = sel_performSelector_withObject_withObject_;
    id v8 = a1;
    uint64_t v10 = a2;
    long long v11 = a3;
  }
  return objc_msgSend(v8, v9, v10, v11);
}

void sub_185586D70(void *a1, const char **a2)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v7 = *(void **)(v6 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v6 + 16), sel_copy);
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1853B985C(0, &qword_1E8FAF9B0);
    swift_dynamicCast();
    uint64_t v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C08);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v11;
    swift_release();
    *CFAllocatorRef v2 = v8;
  }
  BOOL v9 = *a2;
  id v10 = v7;
  objc_msgSend(v10, v9, a1);
}

void UICollectionViewCommonSetup(void *a1)
{
  v64[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = a1;
  [v1[258] _setCollectionView:v1];
  CFAllocatorRef v2 = objc_alloc_init(_UICollectionViewSelectionController);
  id v3 = v1[361];
  v1[361] = v2;

  uint64_t v4 = -[_UICollectionViewSubviewManager initWithCollectionView:]([_UICollectionViewSubviewManager alloc], (uint64_t)v1);
  id v5 = v1[362];
  v1[362] = v4;

  uint64_t v6 = v1[362];
  if (v6)
  {
    uint64_t v7 = v6[1];
    if (v7) {
      *(unsigned char *)(v7 + 32) = 1;
    }
  }
  uint64_t v8 = objc_opt_new();
  id v9 = v1[379];
  v1[379] = (id)v8;

  uint64_t v10 = -[UICollectionViewData initWithCollectionView:layout:]([UICollectionViewData alloc], v1, v1[258]);
  id v11 = v1[273];
  v1[273] = (id)v10;

  v1[330] = (id)((unint64_t)v1[330] | 0x100);
  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v13 = v1[342];
  v1[342] = v12;

  [v1 _updateBackgroundColorIfNeeded];
  [v1 _updateContentFocusContainerGuides];
  id v14 = +[_UIDragSnappingFeedbackGeneratorConfiguration defaultConfiguration];
  id v15 = [v14 tweakedConfigurationForClass:objc_opt_class() usage:@"reorder"];

  uint64_t v16 = [(UIFeedbackGenerator *)[_UIDragSnappingFeedbackGenerator alloc] initWithConfiguration:v15 view:v1];
  id v17 = v1[318];
  v1[318] = v16;

  id v18 = v1[258];
  id v19 = v1;
  uint64_t v59 = v19;
  if (v18)
  {
    uint64_t v20 = [v19 effectiveUserInterfaceLayoutDirection];
    if (v20 == [v18 developmentLayoutDirection])
    {
      int v21 = [v59 _flipsHorizontalAxis];
      uint64_t v22 = v59;
      if (!v21) {
        goto LABEL_10;
      }
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = [v18 _wantsRightToLeftHorizontalMirroringIfNeeded];
      uint64_t v22 = v59;
    }
    objc_msgSend(v22, "_setFlipsHorizontalAxis:", v23, v59);
  }
LABEL_10:

  if ((dyld_program_sdk_at_least() & 1) == 0) {
    *((_DWORD *)v59 + 28) &= ~0x80u;
  }
  int v24 = objc_msgSend(v59, "_prefetchingEnabledDefault", v59);
  uint64_t v25 = 0x4000000000000000;
  if (!v24) {
    uint64_t v25 = 0;
  }
  v60[330] = v60[330] & 0xBFFFFFFFFFFFFFFFLL | v25;
  int v26 = _UISupportsIntrinsicContentSizeInvalidation();
  int v27 = v60[331] & 0xFFE7 | (*((unsigned __int8 *)v60 + 2650) << 16);
  if (v26) {
    __int16 v28 = 8;
  }
  else {
    __int16 v28 = 0;
  }
  *((_WORD *)v60 + 1324) = v60[331] & 0xFFE7 | v28;
  *((unsigned char *)v60 + 2650) = BYTE2(v27);
  uint64_t v29 = [[_UICollectionViewDragAndDropController alloc] initWithCollectionView:v60];
  long long v30 = (void *)v60[346];
  v60[346] = v29;

  v60[392] = 0;
  if (dyld_program_sdk_at_least())
  {
    uint64_t v31 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v31 addObserver:v60 selector:sel__purgeReuseQueues name:@"UIApplicationDidReceiveMemoryWarningNotification" object:0];
  }
  if (dyld_program_sdk_at_least())
  {
    long long v32 = [MEMORY[0x1E4F28EB8] defaultCenter];
    [v32 addObserver:v60 selector:sel__focusMovementDidFailNotification_ name:@"UIFocusMovementDidFailNotification" object:0];
  }
  long long v33 = [[_UICollectionViewSectionFocusGuideController alloc] initWithCollectionView:v60];
  id v34 = (void *)v60[359];
  v60[359] = v33;

  uint64_t v35 = -[_UICollectionViewOrthogonalScrollerSectionController initWithCollectionView:]([_UICollectionViewOrthogonalScrollerSectionController alloc], v60);
  uint64_t v36 = (void *)v60[358];
  v60[358] = v35;

  id v37 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  char v38 = (void *)v60[340];
  v60[340] = v37;

  uint64_t v39 = [[_UICollectionViewMultiSelectController alloc] initWithCollectionView:v60];
  char v40 = (void *)v60[360];
  v60[360] = v39;

  [v60 _updateSelectionIsKey];
  if (dyld_program_sdk_at_least())
  {
    unsigned int v41 = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_CollectionViewAllowsLayoutDuringUpdatesAndTransitions, @"CollectionViewAllowsLayoutDuringUpdatesAndTransitions", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
    if (byte_1EB256EF4) {
      unsigned int v42 = 1;
    }
    else {
      unsigned int v42 = v41;
    }
  }
  else
  {
    unsigned int v42 = 0;
  }
  v60[330] = v60[330] & 0xF9FFFFFFFFFFFFFFLL | ((unint64_t)v42 << 57) | ((unint64_t)v42 << 58);
  uint64_t v43 = objc_opt_new();
  [v43 setDelegate:v60];
  [v43 setEnabled:0];
  [v43 setSimulatePressesCallbacksForLegacyBehavior:1];
  [v60 addInteraction:v43];
  unsigned __int8 v44 = (void *)v60[383];
  v60[383] = v43;
  id v45 = v43;

  v60[330] |= 0x8000uLL;
  v64[0] = 0x1ED3F5BF8;
  uint64_t v46 = [MEMORY[0x1E4F1C978] arrayWithObjects:v64 count:1];
  id v47 = (id)[v60 _registerForTraitTokenChanges:v46 withTarget:v60 action:sel__semanticContextTraitDidChange];

  CGRect v48 = _UITableTraitsAffectingSelectionIsKey();
  if ([v48 count]) {
    id v49 = (id)[v60 _registerForTraitTokenChanges:v48 withTarget:v60 action:sel__updateSelectionIsKey];
  }
  uint64_t v63 = 0x1ED3F5A60;
  uint64_t v50 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v63 count:1];
  id v51 = (id)[v60 _registerForTraitTokenChanges:v50 withTarget:v60 action:sel__layoutDirectionTraitDidChange];

  v62[0] = 0x1ED3F5C28;
  v62[1] = 0x1ED3F5A30;
  id v52 = [MEMORY[0x1E4F1C978] arrayWithObjects:v62 count:2];
  id v53 = (id)[v60 _registerForTraitTokenChanges:v52 withTarget:v60 action:sel__updateVerticalScrollIndicatorVisibility];

  if (dyld_program_sdk_at_least())
  {
    v61[0] = 0x1ED3F5AD8;
    uint64_t v54 = [MEMORY[0x1E4F1C978] arrayWithObjects:v61 count:1];
    id v55 = &selRef__invalidateLayoutForPreferredContentSizeCategoryTraitDidChange;
  }
  else
  {
    v61[0] = 0x1ED3F5A90;
    v61[1] = 0x1ED3F5AA8;
    uint64_t v54 = [MEMORY[0x1E4F1C978] arrayWithObjects:v61 count:2];
    id v55 = &selRef__resetPrefetchedCachedCells;
  }
  id v56 = (id)[v60 _registerForTraitTokenChanges:v54 withTarget:v60 action:*v55];

  [v60 _updateVerticalScrollIndicatorVisibility];
  uint64_t v57 = +[_UIHDRUsageCoordinator sharedInstance]();
  -[_UIHDRUsageCoordinator applyConstrainedHDROverrideToView:]((uint64_t)v57, v60);

  double v58 = +[_UIHDRUsageCoordinator sharedInstance]();

  -[_UIHDRUsageCoordinator registerForDefaultDynamicRangeChanges:]((uint64_t)v58, v60);
}

void _UIButtonCommonInit(void *a1)
{
  id v15 = a1;
  uint64_t v1 = (objc_class *)objc_opt_class();
  CFAllocatorRef v2 = (objc_class *)objc_opt_class();
  IMP MethodImplementation = class_getMethodImplementation(v1, sel_imageRectForContentRect_);
  IMP v4 = class_getMethodImplementation(v2, sel_imageRectForContentRect_);
  uint64_t v5 = 0x400000000;
  if (MethodImplementation) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6 || MethodImplementation == v4)
  {
    uint64_t v8 = (objc_class *)objc_opt_class();
    id v9 = (objc_class *)objc_opt_class();
    IMP v10 = class_getMethodImplementation(v8, sel_titleRectForContentRect_);
    IMP v11 = class_getMethodImplementation(v9, sel_titleRectForContentRect_);
    BOOL v12 = v10 == v11 || v11 == 0;
    if (v12 || v10 == 0) {
      uint64_t v5 = 0;
    }
  }
  v15[77] = v15[77] & 0xFFFFFFFBFFFFFFFFLL | v5;
  *(void *)((char *)v15 + 116) |= 0x40000000uLL;
  v15[77] |= 0x1000000000uLL;
  id v14 = objc_opt_new();
  [v14 setDelegate:v15];
  [v15 addInteraction:v14];
  [v15 setSelectionInteraction:v14];
}

void _setInteractionView(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  [v4 willMoveToView:v3];
  [v4 didMoveToView:v3];
}

void sub_185588E78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void UIRoundToScreenScale(void *a1)
{
  [a1 scale];
  if (v1 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

void _UIScrollViewSharedInit(void *a1)
{
  double v1 = a1;
  CFAllocatorRef v2 = [v1 _screen];
  id v3 = [v2 _capabilityForKey:@"UIScreenCapabilityTouchLevelsKey"];
  *((void *)v1 + 154) = [v3 integerValue];

  *(void *)(v1 + 1772) |= 0x200000000000uLL;
  *(_OWORD *)(v1 + 1272) = *MEMORY[0x1E4F1DAD8];
  *((void *)v1 + 182) = 0x3F50624DD2F1A9FCLL;
  id v4 = +[_UIEdgeFeedbackGeneratorConfiguration _zoomConfiguration];
  uint64_t v5 = [v4 tweakedConfigurationForClass:objc_opt_class() usage:@"zoom"];

  LODWORD(v4) = dyld_program_sdk_at_least();
  BOOL v6 = [_UIZoomEdgeFeedbackGenerator alloc];
  if (v4)
  {
    uint64_t v7 = [(_UIEdgeFeedbackGenerator *)v6 initWithConfiguration:v5 view:v1];
    uint64_t v8 = (void *)*((void *)v1 + 167);
    *((void *)v1 + 167) = v7;
  }
  else
  {
    uint64_t v9 = [(UIFeedbackGenerator *)v6 initWithConfiguration:v5];
    IMP v10 = (void *)*((void *)v1 + 167);
    *((void *)v1 + 167) = v9;

    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___UIScrollViewSharedInit_block_invoke;
    block[3] = &unk_1E52D9F70;
    id v17 = v1;
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
  if ([(id)UIApp _supportsIndirectInputEvents]) {
    IMP v11 = &unk_1ED3F1858;
  }
  else {
    IMP v11 = &unk_1ED3F1840;
  }
  objc_storeStrong((id *)v1 + 241, v11);
  *((_DWORD *)v1 + 445) |= 0x78u;
  int64x2_t v12 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  *((int64x2_t *)v1 + 123) = v12;
  *((int64x2_t *)v1 + 124) = v12;
  *((int64x2_t *)v1 + 125) = v12;
  *((int64x2_t *)v1 + 126) = v12;
  *((int64x2_t *)v1 + 34) = v12;
  *((int64x2_t *)v1 + 35) = v12;
  *((int64x2_t *)v1 + 36) = v12;
  *((int64x2_t *)v1 + 37) = v12;
  if (dyld_program_sdk_at_least()) {
    int v13 = 128;
  }
  else {
    int v13 = 0;
  }
  *((_DWORD *)v1 + 445) = *((_DWORD *)v1 + 445) & 0xFFFFFE7F | v13;
  *((void *)v1 + 76) = 15;
  *((_DWORD *)v1 + 445) |= 0x400u;
  if (_UIVariableFrameDurationEnabled())
  {
    id v14 = -[_UIScrollViewVFD initWithScrollView:]([_UIScrollViewVFD alloc], (uint64_t)v1);
    id v15 = (void *)*((void *)v1 + 214);
    *((void *)v1 + 214) = v14;
  }
}

id _UISearchSuggestionAllSuggestionsFromGroups(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 count];
  id v3 = (void *)MEMORY[0x1E4F1CBF0];
  if (v2)
  {
    if (v2 == 1)
    {
      id v4 = [v1 objectAtIndexedSubscript:0];
      uint64_t v5 = [v4 suggestionItems];
    }
    else
    {
      id v4 = [MEMORY[0x1E4F1CA48] array];
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v6 = v1;
      uint64_t v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = *(void *)v16;
        do
        {
          for (uint64_t i = 0; i != v8; ++i)
          {
            if (*(void *)v16 != v9) {
              objc_enumerationMutation(v6);
            }
            uint64_t v11 = objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * i), "suggestionItems", (void)v15);
            int64x2_t v12 = (void *)v11;
            if (v11) {
              int v13 = (void *)v11;
            }
            else {
              int v13 = v3;
            }
            [v4 addObjectsFromArray:v13];
          }
          uint64_t v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }
        while (v8);
      }

      uint64_t v5 = [v4 copy];
    }
    id v3 = (void *)v5;
  }
  return v3;
}

void sub_18558B4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIFeedbackEngineSupportsAll()
{
  if ((_UIInternalPreferenceUsesDefault_0(&_MergedGlobals_907, @"EnableFeedbackVisualization") & 1) != 0
    || !byte_1EB2571B4)
  {
    return (byte_1EB2571BC != 0) & ~_UIInternalPreferenceUsesDefault_0(&dword_1EB2571B8, @"EnableStatisticOnAllDevices");
  }
  else
  {
    return 1;
  }
}

uint64_t compareConstraintsAlphabetically(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 && a2)
  {
    uint64_t v5 = (uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
    id v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
    uint64_t v7 = (*v5)(a3, a2);
    return [v6 compare:v7 options:1];
  }
  else
  {
    if (a2) {
      uint64_t v9 = -1;
    }
    else {
      uint64_t v9 = 0;
    }
    if (a1) {
      return 1;
    }
    else {
      return v9;
    }
  }
}

void static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    id v3 = a1;
    objc_msgSend(v3, sel_copy);
    sub_186A1F1CC();
    swift_unknownObjectRelease();
    sub_1853B985C(0, &qword_1E8FAF9B0);
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C08);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v5;

    *a2 = v4;
  }
  else
  {
    sub_186A1F38C();
    swift_bridgeObjectRelease();
    sub_1853B985C(0, &qword_1E8FAF9B0);
    sub_186A1FBDC();
    sub_186A1E9FC();
    swift_bridgeObjectRelease();
    sub_186A1E9FC();
    sub_186A1FBDC();
    sub_186A1E9FC();
    swift_bridgeObjectRelease();
    sub_186A1F60C();
    __break(1u);
  }
}

void __swiftcall UIButton.Configuration._bridgeToObjectiveC()(UIButtonConfiguration *__return_ptr retstr)
{
  objc_msgSend(*(id *)(*(void *)v1 + 16), sel_copy);
  sub_186A1F1CC();
  swift_unknownObjectRelease();
  sub_1853B985C(0, &qword_1E8FAF9B0);
  swift_dynamicCast();
}

uint64_t sub_18558C480@<X0>(SEL *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [self *a1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C08);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a2 = result;
  return result;
}

void *UIButton.configuration.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = objc_msgSend(v1, sel_configuration);
  if (result)
  {
    uint64_t v4 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255C08);
    uint64_t result = (void *)swift_allocObject();
    result[2] = v4;
  }
  *a1 = result;
  return result;
}

void sub_18558C7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_18558CB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_18558CECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_18558D070(_Unwind_Exception *a1)
{
  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

void sub_18558DD68(_Unwind_Exception *a1)
{
  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

void _UIButtonConfigurationCopy(void *a1, void *a2, int a3, int a4)
{
  id v45 = a1;
  uint64_t v7 = a2;
  uint64_t v8 = v7;
  if (a3) {
    objc_storeStrong(v45 + 1, v7[1]);
  }
  unsigned int v9 = v45[12] & 0xFFFFC7FF | (((*((_DWORD *)v8 + 24) >> 11) & 7) << 11);
  *((_DWORD *)v45 + 24) = v9;
  unsigned int v10 = v9 & 0xFFFE3FFF | (((*((_DWORD *)v8 + 24) >> 14) & 7) << 14);
  *((_DWORD *)v45 + 24) = v10;
  *((_DWORD *)v45 + 24) = v10 & 0xFFF3FFFF | (((*((_DWORD *)v8 + 24) >> 18) & 3) << 18);
  uint64_t v11 = [v8[25] copy];
  id v12 = v45[25];
  v45[25] = (id)v11;

  v45[29] = v8[29];
  uint64_t v13 = [v8[13] copy];
  id v14 = v45[13];
  v45[13] = (id)v13;

  v45[14] = v8[14];
  unsigned int v15 = v45[12] & 0xFFFFFFCF | (16 * ((*((_DWORD *)v8 + 24) >> 4) & 3));
  *((_DWORD *)v45 + 24) = v15;
  *((_DWORD *)v45 + 24) = v15 & 0xFFFFFFF0 | v8[12] & 0xF;
  objc_storeStrong(v45 + 16, v8[16]);
  objc_storeStrong(v45 + 15, v8[15]);
  objc_storeStrong(v45 + 17, v8[17]);
  uint64_t v16 = [v8[18] copy];
  id v17 = v45[18];
  v45[18] = (id)v16;

  uint64_t v18 = [v8[19] copy];
  id v19 = v45[19];
  v45[19] = (id)v18;

  *((_DWORD *)v45 + 24) = v45[12] & 0xFFFFFFBF | (((*((_DWORD *)v8 + 24) >> 6) & 1) << 6);
  uint64_t v20 = [v8[20] copy];
  id v21 = v45[20];
  v45[20] = (id)v20;

  uint64_t v22 = [v8[21] copy];
  id v23 = v45[21];
  v45[21] = (id)v22;

  uint64_t v24 = [v8[22] copy];
  id v25 = v45[22];
  v45[22] = (id)v24;

  uint64_t v26 = [v8[23] copy];
  id v27 = v45[23];
  v45[23] = (id)v26;

  uint64_t v28 = [v8[24] copy];
  id v29 = v45[24];
  v45[24] = (id)v28;

  unsigned int v30 = v45[12] & 0xFFFFFF7F | (((*((_DWORD *)v8 + 24) >> 7) & 1) << 7);
  *((_DWORD *)v45 + 24) = v30;
  unsigned int v31 = *((_DWORD *)v8 + 24);
  if ((v31 & 0x80) != 0)
  {
    long long v32 = *((_OWORD *)v8 + 16);
    *((_OWORD *)v45 + 15) = *((_OWORD *)v8 + 15);
    *((_OWORD *)v45 + 16) = v32;
  }
  else
  {
    unsigned int v30 = v30 & 0xFFFFF8FF | (((v31 >> 8) & 7) << 8);
    *((_DWORD *)v45 + 24) = v30;
  }
  v45[26] = v8[26];
  v45[27] = v8[27];
  v45[28] = v8[28];
  unsigned int v33 = v30 & 0xFCFFFFFF | ((HIBYTE(*((_DWORD *)v8 + 24)) & 3) << 24);
  *((_DWORD *)v45 + 24) = v33;
  unsigned int v34 = v33 & 0xFBFFFFFF | (((*((_DWORD *)v8 + 24) >> 26) & 1) << 26);
  *((_DWORD *)v45 + 24) = v34;
  *((_DWORD *)v45 + 24) = v34 & 0xFFFDFFFF | (((*((_DWORD *)v8 + 24) >> 17) & 1) << 17);
  if (a4)
  {
    uint64_t v35 = [v8[2] copy];
    id v36 = v45[2];
    v45[2] = (id)v35;

    *((_DWORD *)v45 + 24) = v45[12] & 0xFFEFFFFF | (((*((_DWORD *)v8 + 24) >> 20) & 1) << 20);
    uint64_t v37 = [v8[3] copy];
    id v38 = v45[3];
    v45[3] = (id)v37;

    *((_DWORD *)v45 + 24) = v45[12] & 0xFFDFFFFF | (((*((_DWORD *)v8 + 24) >> 21) & 1) << 21);
    uint64_t v39 = [v8[4] copy];
    id v40 = v45[4];
    v45[4] = (id)v39;

    objc_storeStrong(v45 + 5, v8[5]);
    uint64_t v41 = [v8[6] copy];
    id v42 = v45[6];
    v45[6] = (id)v41;

    objc_storeStrong(v45 + 7, v8[7]);
    uint64_t v43 = [v8[8] copy];
    id v44 = v45[8];
    v45[8] = (id)v43;

    v45[10] = v8[10];
    v45[11] = v8[11];
    *((_DWORD *)v45 + 24) = v45[12] & 0xFF3FFFFF | (((*((_DWORD *)v8 + 24) >> 22) & 3) << 22);
  }
}

id _UIContentUnavailableConstantsForTraitCollection(void *a1)
{
  uint64_t v1 = [a1 userInterfaceIdiom];
  if (v1 == -1)
  {
    uint64_t v2 = +[UIDevice currentDevice];
    uint64_t v1 = [v2 userInterfaceIdiom];
  }
  switch(v1)
  {
    case 0:
      id v3 = UIContentUnavailableConstants_Phone;
      goto LABEL_11;
    case 1:
      id v3 = UIContentUnavailableConstants_Pad;
      goto LABEL_11;
    case 2:
    case 8:
      id v3 = UIContentUnavailableConstants_TV;
      goto LABEL_11;
    case 3:
      id v3 = UIContentUnavailableConstants_CarPlay;
      goto LABEL_11;
    case 4:
      id v3 = UIContentUnavailableConstants_Watch;
      goto LABEL_11;
    case 5:
      id v3 = UIContentUnavailableConstants_Mac;
LABEL_11:
      id v6 = [(__objc2_class *)v3 sharedConstants];
      break;
    default:
      uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v5 = [NSString stringWithUTF8String:"id<UIContentUnavailableConstants>  _Nonnull _UIContentUnavailableConstantsForTraitCollection(UITraitCollection *__strong _Nonnull)"];
      objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"UIContentUnavailableConstants.m", 38, @"UIUserInterfaceIdiom (%ld) is not supported by UIContentUnavailableConstants", v1);

      id v6 = 0;
      break;
  }
  return v6;
}

void sub_18558F488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_18558F6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_18558F7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t _UITableUsesTintColorAsBackgroundColor(void *a1, void *a2, int a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a2;
  uint64_t v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v16 = 0u;
  memset(v15, 0, sizeof(v15));
  unsigned int v9 = _UITableConstantsForTraitCollection(v8);
  unsigned int v10 = v9;
  if (a4 && a3)
  {
    if (v9)
    {
      [v9 defaultSidebarHeaderBackgroundPropertiesWithState:v7 traitCollection:v8];
      goto LABEL_11;
    }
  }
  else if (a4)
  {
    if (v9)
    {
      [v9 defaultSidebarCellBackgroundPropertiesForStyle:a4 state:v7 traitCollection:v8];
      goto LABEL_11;
    }
  }
  else if (v9)
  {
    [v9 defaultCellBackgroundPropertiesForTableViewStyle:0 state:v7 traitCollection:v8];
    goto LABEL_11;
  }
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
LABEL_11:
  __move_assignment_8_8_t0w8_s8_s16_s24_t32w41_s80_t88w48((uint64_t)v15, (uint64_t)v13);
  if (*(void *)&v15[0] == 1)
  {
    if ((unint64_t)v16 <= 0xC) {
      uint64_t v11 = (0x1081u >> v16) & 1;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  __destructor_8_s8_s16_s24_s80((uint64_t)v15);
  return v11;
}

void sub_18558F944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void __destructor_8_s8_s16_s24_s80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
}

void sub_18558FC60(_Unwind_Exception *a1)
{
  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

__n128 __copy_constructor_8_8_t0w8_s8_s16_s24_t32w41_s80_t88w48(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3A0], 8) = *(id *)(a2 + 8);
  *(void *)(a1 + 16) = *(id *)(a2 + 16);
  *(void *)(a1 + 24) = *(id *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 57);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x3A0], 8) = v5;
  *(_OWORD *)(a1 + 57) = v4;
  *(void *)(a1 + 80) = *(id *)(a2 + 80);
  __n128 result = *(__n128 *)(a2 + 120);
  long long v7 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 8_Block_object_dispose(&STACK[0x3A0], 8) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v7;
  *(__n128 *)(a1 + 120) = result;
  return result;
}

__n128 __move_assignment_8_8_t0w8_s8_s16_s24_t32w41_s80_t88w48(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3A0], 8) = 0;
  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3A0], 8) = v4;

  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  long long v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  unsigned int v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;

  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x3A0], 8) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = 0;
  uint64_t v13 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v12;

  __n128 result = *(__n128 *)(a2 + 88);
  long long v15 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v15;
  *(__n128 *)(a1 + 8_Block_object_dispose(&STACK[0x3A0], 8) = result;
  return result;
}

void _UITableConstantsGetBackgroundProperties(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 4_Block_object_dispose(&STACK[0x3A0], 8) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_OWORD *)(a6 + 80) = 0u;
  *(_OWORD *)(a6 + 96) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(void *)(a6 + 12_Block_object_dispose(&STACK[0x3A0], 8) = 0;
  if (!a5 || !a4)
  {
    if (a5)
    {
      if (v11)
      {
        [v11 defaultSidebarCellBackgroundPropertiesForStyle:a5 state:v12 traitCollection:v13];
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      [v11 defaultCellBackgroundPropertiesForTableViewStyle:0 state:v12 traitCollection:v13];
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    goto LABEL_11;
  }
  if (!v11) {
    goto LABEL_10;
  }
  [v11 defaultSidebarHeaderBackgroundPropertiesWithState:v12 traitCollection:v13];
LABEL_11:
  __move_assignment_8_8_t0w8_s8_s16_s24_t32w41_s80_t88w48(a6, (uint64_t)v14);
}

void sub_18558FFD8(_Unwind_Exception *a1)
{
  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

id _UILocalizedString(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = _UIKitBundle();
  long long v7 = [v6 localizedStringForKey:v5 value:v4 table:@"Localizable"];

  return v7;
}

uint64_t cornerStyleForDeviceIdiomAndConfigurationKind(uint64_t a1)
{
  BOOL v1 = a1 != 0;
  uint64_t v2 = +[UIDevice currentDevice];
  uint64_t v3 = [v2 userInterfaceIdiom];

  if (v3 == 6) {
    return 4 * v1;
  }
  else {
    return 0;
  }
}

BOOL static UIContentSizeCategory.<= infix(_:_:)(NSString *a1, NSString *a2)
{
  return UIContentSizeCategoryCompareToCategory(a1, a2) != NSOrderedDescending;
}

BOOL static UIContentSizeCategory.> infix(_:_:)(NSString *a1, NSString *a2)
{
  return UIContentSizeCategoryCompareToCategory(a1, a2) == NSOrderedDescending;
}

uint64_t sub_185590574()
{
  uint64_t result = _s6SpringVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s14FrictionBounceVMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = _s7BridgedVMa();
      if (v3 <= 0x3F)
      {
        uint64_t result = _s15InstantlyStableVMa();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t _s7BridgedVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s6SpringVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s15InstantlyStableVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s14FrictionBounceVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_18559073C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

ValueMetadata *type metadata accessor for UIAnimatableFloat()
{
  return &type metadata for UIAnimatableFloat;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.FontAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.FontAttribute;
}

BOOL UIRectIsDiscrete(double a1, double a2, double a3, double a4)
{
  BOOL result = 0;
  if (fabs(a1) != INFINITY)
  {
    double v5 = fabs(a3);
    if (fabs(a2) != INFINITY && v5 != INFINITY) {
      return fabs(a4) != INFINITY;
    }
  }
  return result;
}

double UIPointRoundToScale(double a1, double a2, double a3)
{
  double v5 = a3;
  if (a3 == 0.0)
  {
    if (AdjustToScale_onceToken_0 != -1) {
      dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
    }
    double v5 = *(double *)&AdjustToScale___s_0;
  }
  BOOL v6 = v5 == 1.0;
  double v7 = round(a1 * v5) / v5;
  double v8 = round(a1);
  if (v6) {
    double v9 = v8;
  }
  else {
    double v9 = v7;
  }
  if (a3 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
  return v9;
}

void UIFloorToViewScale(void *a1)
{
  [a1 _currentScreenScale];
  if (v1 == 0.0 && AdjustToScale_onceToken_0 != -1) {
    dispatch_once(&AdjustToScale_onceToken_0, &__block_literal_global_279);
  }
}

double _UINavigationBarLargeTitleViewCalculateRestingHeight(void *a1, double a2)
{
  id v3 = a1;
  [v3 _firstBaselineOffsetFromTop];
  double v5 = v4;
  [v3 _baselineOffsetFromBottom];
  double v7 = v6;

  if (qword_1EB25F258 != -1) {
    dispatch_once(&qword_1EB25F258, &__block_literal_global_63);
  }
  double v8 = *(double *)&qword_1EB25F250 - v5;
  double v9 = 0.0;
  if (*(double *)&qword_1EB25F250 - v5 < 0.0) {
    double v8 = 0.0;
  }
  if (16.0 - v7 >= 0.0) {
    double v9 = 16.0 - v7;
  }
  return v9 + v8 + a2;
}

void sub_18559884C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

double _UITabBarMetricsForStyleAndScene(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (a1 == 2)
    {
      double v4 = 20.0;
      dyld_program_sdk_at_least();
    }
    else if (a1 == 1)
    {
      double v4 = 30.0;
      if (dyld_program_sdk_at_least())
      {
        double v5 = [v3 traitCollection];
        uint64_t v6 = [v5 userInterfaceIdiom];

        double v7 = [v3 screen];
        [v7 scale];

        if (v6 == 1) {
          double v4 = 30.0;
        }
        else {
          double v4 = 29.0;
        }
      }
      if (dyld_program_sdk_at_least())
      {
        double v8 = [v3 screen];
        [v8 scale];
      }
    }
    else
    {
      double v9 = [MEMORY[0x1E4F28B00] currentHandler];
      long long v10 = objc_msgSend(NSString, "stringWithUTF8String:", "_UITabBarItemLayoutMetrics _UITabBarMetricsForStyleAndScene(_UITabBarItemTitleStyle, UIWindowScene *__strong _Nonnull)");
      objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, @"_UITabBarItemData.m", 801, @"Unsupported style %li", a1);

      double v4 = 0.0;
    }
  }
  else
  {
    double v4 = 45.0;
  }

  return v4;
}

double _yOffsetForBaselinedImageView(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  [v4 _firstBaselineOffsetFromTop];
  [v4 alignmentRectInsets];

  UIRoundToViewScale(v3);
  double v6 = v5;

  return v6;
}

id __UIWindowSceneTraitCollectionWithSceneUISettings(void *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = a1;
  TraitCollectionTSD = GetTraitCollectionTSD();
  char v3 = TraitCollectionTSD[9];
  TraitCollectionTSD[9] = 1;
  if (v1)
  {
    id v4 = v1[54];
    if (!v4)
    {
      id WeakRetained = objc_loadWeakRetained(v1 + 58);
      double v6 = WeakRetained;
      if (WeakRetained)
      {
        id v4 = [WeakRetained traitCollection];
        if (!v4)
        {
          double v7 = [MEMORY[0x1E4F28B00] currentHandler];
          [v7 handleFailureInMethod:sel__parentTraitCollection, v1, @"UIWindowScene.m", 2992, @"UIKit internal inconsistency: overrideParentTraitEnvironment returned a nil traitCollection: %@", v6 object file lineNumber description];

          id v4 = 0;
        }
      }
      else
      {
        -[UIWindowScene _screenTraitCollectionWithOverridesAppliedFromSceneUISettings](v1);
        id v4 = (id)objc_claimAutoreleasedReturnValue();
      }
    }
  }
  else
  {
    id v4 = 0;
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v1[38];
  uint64_t v9 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v19 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = [*(id *)(*((void *)&v18 + 1) + 8 * i) _traitOverrides];
        if (v13)
        {
          uint64_t v14 = -[UITraitCollection _traitCollectionByApplyingOverrides:defaultValueOverrides:](v4, (uint64_t)v13, 0);

          id v4 = (id)v14;
        }
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v10);
  }

  uint64_t v15 = (void **)v1[35];
  if (v15)
  {
    uint64_t v16 = -[_UITraitOverrides _traitCollectionByApplyingOverridesToTraitCollection:](v15, v4);

    id v4 = (id)v16;
  }
  *((unsigned char *)GetTraitCollectionTSD() + 9) = v3;

  return v4;
}

_UIFocusBehavior_TV *_UIFocusBaseBehaviorForTraitCollection(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    +[UITraitCollection _fallbackTraitCollection]();
    id v1 = (id)objc_claimAutoreleasedReturnValue();
  }
  switch([v1 userInterfaceIdiom])
  {
    case 0:
      if (_AXSFullKeyboardAccessEnabled()) {
        goto LABEL_8;
      }
      unint64_t v2 = +[_UIApplicationInfoParser mainBundleInfoParser];
      int v3 = [v2 requiresGameControllerBasedFocus];

      if (v3) {
        goto LABEL_13;
      }
      goto LABEL_6;
    case 1:
      if (_AXSFullKeyboardAccessEnabled()) {
LABEL_8:
      }
        double v5 = _UIFocusBehavior_FKA;
      else {
LABEL_13:
      }
        double v5 = _UIFocusBehavior_IOS;
      goto LABEL_16;
    case 2:
      double v6 = +[_UIFocusBehavior_TV sharedInstance];
      goto LABEL_17;
    case 3:
      uint64_t v7 = [v1 primaryInteractionModel];
      if (v7 == 8)
      {
        double v5 = _UIFocusBehavior_CarPlayTouchpad;
      }
      else if (v7 == 2)
      {
        double v5 = _UIFocusBehavior_CarPlayKnob;
      }
      else
      {
        double v5 = _UIFocusBehavior_CarPlayTouch;
      }
LABEL_16:
      double v6 = [(__objc2_class *)v5 sharedInstance];
LABEL_17:
      id v4 = v6;
      break;
    default:
LABEL_6:
      id v4 = 0;
      break;
  }

  return v4;
}

uint64_t _shouldSuppressHDR(int a1)
{
  if (a1)
  {
    if (dyld_program_sdk_at_least())
    {
      char v1 = 1;
    }
    else
    {
      if (qword_1EB260D10 != -1) {
        dispatch_once(&qword_1EB260D10, &__block_literal_global_103);
      }
      char v1 = _MergedGlobals_1084 ^ 1;
    }
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

void sub_18559BF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18559C648(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_18559CCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIEventDeferringBehaviorForManager(void *a1)
{
  uint64_t v2 = [a1 windowHostingScene];
  int v3 = [v2 _screen];
  unint64_t v4 = [v3 _userInterfaceIdiom];

  double v5 = (objc_class *)objc_opt_class();
  if (_UIApplicationProcessIsSpringBoard()
    || (_UIEventDeferringProcessIsPineBoard() & 1) != 0
    || (_UIEventDeferringProcessIsCarPlayApp() & 1) != 0
    || _UIEventDeferringProcessIsCarousel())
  {
    double v5 = (objc_class *)objc_opt_class();
  }
  if (v5 == (objc_class *)objc_opt_class() && v4 <= 8 && ((0x11Fu >> v4) & 1) != 0) {
    double v5 = (objc_class *)objc_opt_class();
  }
  double v6 = (void *)[[v5 alloc] initWithEventDeferringManager:a1];
  return v6;
}

uint64_t _UIEventDeferringProcessIsPineBoard()
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___UIEventDeferringProcessIsPineBoard_block_invoke;
  v2[3] = &unk_1E52D9F98;
  int v3 = @"com.apple.PineBoard";
  unint64_t v4 = @"com.apple.internal.PineBoardTests.xctrunner";
  if (qword_1EB2623A8 != -1) {
    dispatch_once(&qword_1EB2623A8, v2);
  }
  uint64_t v0 = byte_1EB262399;

  return v0;
}

uint64_t _UIEventDeferringProcessIsCarousel()
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___UIEventDeferringProcessIsCarousel_block_invoke;
  block[3] = &unk_1E52D9F70;
  int v3 = @"com.apple.Carousel";
  if (qword_1EB2623B0 != -1) {
    dispatch_once(&qword_1EB2623B0, block);
  }
  uint64_t v0 = byte_1EB26239A;

  return v0;
}

uint64_t _UIEventDeferringProcessIsCarPlayApp()
{
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___UIEventDeferringProcessIsCarPlayApp_block_invoke;
  block[3] = &unk_1E52D9F70;
  int v3 = @"com.apple.CarPlayApp";
  if (qword_1EB2623A0 != -1) {
    dispatch_once(&qword_1EB2623A0, block);
  }
  uint64_t v0 = _MergedGlobals_1193;

  return v0;
}

void _processDeletedIndexes(int a1, uint16x8_t *a2, uint64_t a3)
{
  if (a2)
  {
    if (a3) {
      goto LABEL_3;
    }
  }
  else
  {
    id v13 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v14 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processDeletedIndexes(const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *)");
    [v13 handleFailureInFunction:v14, @"_UIDataSourceBatchUpdateMap.m", 463, @"Invalid parameter not satisfying: %@", @"deletedIndexesIncludingMoves != nil" file lineNumber description];

    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v16 = objc_msgSend(NSString, "stringWithUTF8String:", "void _processDeletedIndexes(const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *)");
  [v15 handleFailureInFunction:v16, @"_UIDataSourceBatchUpdateMap.m", 464, @"Invalid parameter not satisfying: %@", @"oldIndexMap != NULL" file lineNumber description];

LABEL_3:
  unint64_t v6 = -[_UIFastIndexSet firstIndex]((uint64_t)a2);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_4;
  }
  unint64_t v8 = v6;
  if (HIDWORD(v6))
  {
    long long v17 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v18 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v8);

LABEL_4:
    uint64_t v7 = 0xFFFFFFFFLL;
    if (!a1) {
      return;
    }
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  if (a1)
  {
LABEL_8:
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      if (v9 == v7)
      {
        *(_DWORD *)(a3 + 4 * v9) = -1;
        ++v10;
        if (!a2)
        {
          LODWORD(v12) = 0;
LABEL_15:
          uint64_t v7 = v12;
          goto LABEL_16;
        }
        unint64_t v11 = -[_UIFastIndexSet indexGreaterThanOrEqualToIndex:](a2, v9 + 1);
        if (v11 != 0x7FFFFFFFFFFFFFFFLL)
        {
          unint64_t v12 = v11;
          if (!HIDWORD(v11)) {
            goto LABEL_15;
          }
          long long v20 = [MEMORY[0x1E4F28B00] currentHandler];
          long long v19 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
          objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v19, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v12);
        }
        uint64_t v7 = 0xFFFFFFFFLL;
      }
      else
      {
        *(_DWORD *)(a3 + 4 * v9) -= v10;
      }
LABEL_16:
      ++v9;
    }
    while (a1 != v9);
  }
}

uint64_t _processInsertedIndexes(int a1, unsigned int a2, uint16x8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    if (a4) {
      goto LABEL_3;
    }
LABEL_43:
    unsigned int v31 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v32 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _processInsertedIndexes(const _UIMapIndex, const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *, _UIMapIndex *, _UIMapIndex *)");
    [v31 handleFailureInFunction:v32, @"_UIDataSourceBatchUpdateMap.m", 489, @"Invalid parameter not satisfying: %@", @"moveSourceToDestMap != NULL" file lineNumber description];

    if (a5) {
      goto LABEL_4;
    }
    goto LABEL_44;
  }
  id v29 = [MEMORY[0x1E4F28B00] currentHandler];
  unsigned int v30 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _processInsertedIndexes(const _UIMapIndex, const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *, _UIMapIndex *, _UIMapIndex *)");
  [v29 handleFailureInFunction:v30, @"_UIDataSourceBatchUpdateMap.m", 488, @"Invalid parameter not satisfying: %@", @"insertedIndexesIncludingMoves != nil" file lineNumber description];

  if (!a4) {
    goto LABEL_43;
  }
LABEL_3:
  if (a5) {
    goto LABEL_4;
  }
LABEL_44:
  unsigned int v33 = [MEMORY[0x1E4F28B00] currentHandler];
  unsigned int v34 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _processInsertedIndexes(const _UIMapIndex, const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *, _UIMapIndex *, _UIMapIndex *)");
  [v33 handleFailureInFunction:v34, @"_UIDataSourceBatchUpdateMap.m", 490, @"Invalid parameter not satisfying: %@", @"oldIndexMap != NULL" file lineNumber description];

LABEL_4:
  unint64_t v12 = a2;
  if (!a6)
  {
    uint64_t v35 = [MEMORY[0x1E4F28B00] currentHandler];
    id v36 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL _processInsertedIndexes(const _UIMapIndex, const _UIMapIndex, _UIFastIndexSet *const __strong, _UIMapIndex *, _UIMapIndex *, _UIMapIndex *)");
    [v35 handleFailureInFunction:v36, @"_UIDataSourceBatchUpdateMap.m", 491, @"Invalid parameter not satisfying: %@", @"newIndexMap != NULL" file lineNumber description];
  }
  unint64_t v13 = -[_UIFastIndexSet firstIndex]((uint64_t)a3);
  if (v13 != 0x7FFFFFFFFFFFFFFFLL)
  {
    unint64_t v15 = v13;
    if (!HIDWORD(v13))
    {
      uint64_t v14 = v13;
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_11;
    }
    uint64_t v37 = [MEMORY[0x1E4F28B00] currentHandler];
    id v38 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
    objc_msgSend(v37, "handleFailureInFunction:file:lineNumber:description:", v38, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v15);
  }
  uint64_t v14 = 0xFFFFFFFFLL;
  if (v12)
  {
LABEL_11:
    uint64_t v16 = 0;
    int v17 = 0;
    do
    {
      if (v16 == v14)
      {
        *(_DWORD *)(a6 + 4 * v16) = -1;
        ++v17;
        if (!a3)
        {
          LODWORD(v19) = 0;
LABEL_18:
          uint64_t v14 = v19;
          goto LABEL_19;
        }
        unint64_t v18 = -[_UIFastIndexSet indexGreaterThanOrEqualToIndex:](a3, v16 + 1);
        if (v18 != 0x7FFFFFFFFFFFFFFFLL)
        {
          unint64_t v19 = v18;
          if (!HIDWORD(v18)) {
            goto LABEL_18;
          }
          id v40 = [MEMORY[0x1E4F28B00] currentHandler];
          uint64_t v39 = [NSString stringWithUTF8String:"_UIMapIndex _UIMapIndexFromNSInteger(const NSInteger)"];
          objc_msgSend(v40, "handleFailureInFunction:file:lineNumber:description:", v39, @"_UIDataSourceBatchUpdateMap.h", 28, @"NSInteger index is negative or too large: %ld", v19);
        }
        uint64_t v14 = 0xFFFFFFFFLL;
      }
      else
      {
        *(_DWORD *)(a6 + 4 * v16) = v17;
      }
LABEL_19:
      ++v16;
    }
    while (v12 != v16);
  }
LABEL_23:
  if (a1)
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0;
    char v22 = 0;
    while (1)
    {
      int v23 = *(_DWORD *)(a5 + 4 * v20);
      if (v23 != -1) {
        break;
      }
      int v27 = *(_DWORD *)(a4 + 4 * v20);
      if (v27 != -1) {
        goto LABEL_35;
      }
LABEL_36:
      if (++v20 == a1) {
        return v22 & 1;
      }
    }
    if (v21 >= v12) {
      goto LABEL_39;
    }
    uint64_t v24 = 0;
    do
      int v25 = *(_DWORD *)(a6 + 4 * v21 + 4 * v24++);
    while (v24 + v21 < v12 && v25 == -1);
    LODWORD(v21) = v21 + v24;
    if (v25 == -1)
    {
      unint64_t v21 = v21;
LABEL_39:
      char v22 = 1;
      goto LABEL_36;
    }
    int v27 = v25 + v23;
    unint64_t v21 = v21;
LABEL_35:
    *(_DWORD *)(a5 + 4 * v20) = v27;
    goto LABEL_36;
  }
  char v22 = 0;
  return v22 & 1;
}

uint64_t _UIBitSet<256ul>::front(unint64_t *a1)
{
  unint64_t v1 = __clz(__rbit64(*a1));
  if (v1 < 0x40)
  {
    uint64_t v2 = 0;
    return v1 + v2;
  }
  unint64_t v1 = __clz(__rbit64(a1[1]));
  if (v1 < 0x40)
  {
    uint64_t v2 = 64;
    return v1 + v2;
  }
  unint64_t v1 = __clz(__rbit64(a1[2]));
  if (v1 < 0x40)
  {
    uint64_t v2 = 128;
    return v1 + v2;
  }
  unint64_t v1 = __clz(__rbit64(a1[3]));
  if (v1 <= 0x3F)
  {
    uint64_t v2 = 192;
    return v1 + v2;
  }
  return 256;
}

uint64_t sub_18559E0E8()
{
  return sub_18559E104(v0);
}

uint64_t sub_18559E104(uint64_t a1)
{
  *(unsigned char *)(a1 + 296) = 1;
  signpost_c2_tick_pre_start();
  sub_18559E174();
  uint64_t result = signpost_c2_tick_pre_end();
  *(unsigned char *)(a1 + 296) = 0;
  return result;
}

uint64_t signpost_c2_tick_pre_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_pre_end()
{
  return kdebug_trace();
}

uint64_t sub_18559E174()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 8_Block_object_dispose(&STACK[0x3A0], 8) = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 40;
    uint64_t v4 = *(void *)(v1 + 16);
    while (1)
    {
      double v5 = *(void (**)(uint64_t))(v3 - 8);
      uint64_t v6 = swift_retain();
      v5(v6);
      uint64_t v7 = swift_release();
      if (*(void *)(*(void *)(v0 + 88) + 16))
      {
        uint64_t v8 = sub_18559E174(v7);
        BOOL v9 = __OFADD__(v4, v8);
        v4 += v8;
        if (v9) {
          break;
        }
      }
      v3 += 16;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  uint64_t v4 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t UIStatusBarStyleIsDoubleHeight(uint64_t a1)
{
  uint64_t v1 = +[UIStatusBar _styleAttributesForStatusBarStyle:a1];
  uint64_t v2 = [v1 isDoubleHeight];

  return v2;
}

void sub_1855A017C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1855A1FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855A2B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1855A2C78()
{
  id v1 = objc_msgSend(*(id *)(v0 + qword_1E8FB81B0[0]), sel_expandCollapseAnimationContext);
  return v1;
}

void sub_1855A38D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855A5108(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1855A52E8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_1855A6C98(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = sub_1855A2C78();

  return v6;
}

CGImageSource *_UIImageSourceAtPath(void *a1, int a2, unint64_t a3, double *a4, void *a5)
{
  id v9 = a1;
  if (+[UIDevice _isWatch])
  {
    int v10 = _UIImageCollectImagePathsForPath(v9, 0, 0, 1);
  }
  else
  {
    char v11 = +[UIDevice _isWatchCompanion];
    int v10 = _UIImageCollectImagePathsForPath(v9, 0, 0, v11);
    if ((v11 & 1) == 0)
    {
      unint64_t v13 = +[UIScreen _mainScreenThreadSafeTraitCollection];
      unint64_t v12 = BestPathForTraits(v10, v13);

      goto LABEL_6;
    }
  }
  unint64_t v12 = [v10 firstObject];
LABEL_6:
  uint64_t v14 = ImageSourceAtPath(v12, a2, a3);
  unint64_t v15 = v14;
  if (a4 && v14)
  {
    unint64_t v16 = +[UIImage _scaleDefinedByPath:v12];
    double v17 = (double)v16;
    if (v16 == 0x7FFFFFFFFFFFFFFFLL) {
      double v17 = 1.0;
    }
    *a4 = v17;
  }
  if (a5)
  {
    if (v15) {
      unint64_t v18 = v12;
    }
    else {
      unint64_t v18 = 0;
    }
    *a5 = v18;
  }

  return v15;
}

id _UIImageWithNameAndTraitCollection(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 length])
  {
    id v5 = [v4 imageConfiguration];
    id v6 = +[UIImageConfiguration _completeConfiguration:fromConfiguration:]((uint64_t)UIImageConfiguration, v5, 0);

    os_unfair_lock_lock((os_unfair_lock_t)&__tableLock);
    if (!__liveNamedTable)
    {
      uint64_t v7 = [MEMORY[0x1E4F28E10] mapTableWithKeyOptions:0 valueOptions:5];
      uint64_t v8 = (void *)__liveNamedTable;
      __liveNamedTable = v7;
    }
    id v9 = __UIKitSharedArtworkManager();
    int v10 = [v9 bundle];

    char v11 = +[_UIImageCacheKey keyWithName:v3 configuration:v6 bundle:v10];
    unint64_t v12 = [(id)__liveNamedTable objectForKey:v11];
    os_unfair_lock_unlock((os_unfair_lock_t)&__tableLock);
    if (!v12)
    {
      unint64_t v13 = __UIKitSharedArtworkManager();
      unint64_t v12 = [v13 imageNamed:v3 configuration:v6];

      os_unfair_lock_lock((os_unfair_lock_t)&__tableLock);
      [(id)__liveNamedTable setObject:v12 forKey:v11];
      os_unfair_lock_unlock((os_unfair_lock_t)&__tableLock);
    }
  }
  else
  {
    unint64_t v12 = 0;
  }

  return v12;
}

uint64_t __UIKitSharedArtworkManager()
{
  if (qword_1EB264B10 != -1) {
    dispatch_once(&qword_1EB264B10, &__block_literal_global_41_3);
  }
  return qword_1EB264B08;
}

_UIAssetManager *_UIKitCoreGlyphsManager()
{
  os_unfair_lock_lock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
  uint64_t v0 = (_UIAssetManager *)__UIKitCoreGlyphsManager;
  if (!__UIKitCoreGlyphsManager)
  {
    uint64_t v1 = [MEMORY[0x1E4F97AA8] public];
    if (v1)
    {
      uint64_t v0 = [[_UIAssetManager alloc] initWithName:@"CoreGlyphs" inBundle:v1 idiom:[+[UIDevice currentDevice] userInterfaceIdiom]];
      __UIKitCoreGlyphsManager = (uint64_t)v0;
      *(unsigned char *)&v0->_assetManagerFlags |= 8u;
    }
    else
    {
      uint64_t v0 = (_UIAssetManager *)__UIKitCoreGlyphsManager;
      if (!__UIKitCoreGlyphsManager)
      {
        if (_UIKitCoreGlyphsManager_once != -1) {
          dispatch_once(&_UIKitCoreGlyphsManager_once, &__block_literal_global_33_6);
        }
        uint64_t v0 = (_UIAssetManager *)__UIKitCoreGlyphsManager;
      }
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
  return v0;
}

id _UIImageCollectImagePathsForPath(void *a1, void *a2, char a3, char a4)
{
  uint64_t v7 = a1;
  id v8 = a2;
  if (v7 && [(__CFString *)v7 length])
  {
    id v9 = +[UIScreen mainScreen];
    [v9 scale];
    BOOL v10 = 1;
    if (v11 != 1.0 && (a3 & 1) == 0) {
      BOOL v10 = __preferredDeviceScale == 1;
    }

    unint64_t v12 = [(__CFString *)v7 pathExtension];
    if (v8)
    {
      unint64_t v13 = [v8 bundlePath];
    }
    else
    {
      unint64_t v13 = &stru_1ED0E84C0;
    }
    unint64_t v15 = [(__CFString *)v7 lastPathComponent];
    if ([v15 isEqualToString:@"/"])
    {
      id v14 = 0;
    }
    else
    {
      unint64_t v16 = ProductSuffix();
      int v17 = [v15 containsString:v16];

      if (v17)
      {
        unint64_t v18 = ProductSuffix();
        uint64_t v19 = [v15 stringByReplacingOccurrencesOfString:v18 withString:&stru_1ED0E84C0];

        uint64_t v20 = [(__CFString *)v7 stringByDeletingLastPathComponent];
        uint64_t v21 = [v20 stringByAppendingPathComponent:v19];

        unint64_t v15 = (void *)v19;
        uint64_t v7 = (__CFString *)v21;
      }
      if ([(__CFString *)v12 length])
      {
        uint64_t v22 = [(__CFString *)v7 stringByDeletingPathExtension];
        int v23 = v7;
        uint64_t v7 = (__CFString *)v22;
      }
      else
      {
        int v23 = v12;
        unint64_t v12 = @"png";
      }

      uint64_t v24 = [MEMORY[0x1E4F1CA48] array];
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 3221225472;
      aBlock[2] = ___UIImageCollectImagePathsForPath_block_invoke;
      uint64_t aBlock[3] = &unk_1E5311BC8;
      id v30 = v8;
      unsigned int v31 = v13;
      id v25 = v24;
      id v32 = v25;
      char v34 = a4;
      uint64_t v7 = v7;
      unsigned int v33 = v7;
      BOOL v35 = v10;
      uint64_t v26 = (void (**)(void *, id, __CFString *))_Block_copy(aBlock);
      v26[2](v26, v7, v12);
      if (![v25 count]
        && ([(__CFString *)v12 isEqualToString:@"png"] & 1) == 0)
      {
        int v27 = [(__CFString *)v7 stringByAppendingPathExtension:v12];
        v26[2](v26, v27, @"png");
      }
      id v14 = v25;
    }
  }
  else
  {
    id v14 = 0;
  }

  return v14;
}

id ProductSuffix()
{
  if (qword_1EB265540 != -1) {
    dispatch_once(&qword_1EB265540, &__block_literal_global_70_0);
  }
  uint64_t v0 = (void *)qword_1EB265538;
  return v0;
}

CGImageSource *ImageSourceAtPath(void *a1, int a2, unint64_t a3)
{
  keys[3] = *(void **)MEMORY[0x1E4F143B8];
  id v5 = a1;
  if (v5)
  {
    keys[0] = *(void **)MEMORY[0x1E4F2FF08];
    keys[1] = @"kCGImageSourceSkipCRC";
    keys[2] = @"kCGImageSourceSkipMetadata";
    values = (void *)*MEMORY[0x1E4F1CFC8];
    int v17 = values;
    id v6 = (void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v18 = *MEMORY[0x1E4F1CFD0];
    if (a2) {
      values = v6;
    }
    uint64_t v7 = 0;
    char v8 = 1;
    while (1)
    {
      char v9 = v8;
      if (CFStringHasPrefix(v5, ImageSourceAtPath_trustedPaths[v7])) {
        break;
      }
      char v8 = 0;
      uint64_t v7 = 1;
      if ((v9 & 1) == 0) {
        goto LABEL_10;
      }
    }
    int v17 = v6;
LABEL_10:
    CFDictionaryRef v11 = CFDictionaryCreate(0, (const void **)keys, (const void **)&values, 3, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFURLRef v12 = CFURLCreateWithFileSystemPath(0, v5, kCFURLPOSIXPathStyle, 0);
    CFURLRef v13 = (const __CFURL *)CFAutorelease(v12);
    id v14 = CGImageSourceCreateWithURL(v13, v11);
    BOOL v10 = v14;
    if (v14 && CGImageSourceGetCount(v14)) {
      _UIImageGetOrientationAndScale(v10, 0, v11, a3, 0);
    }
    if (v11) {
      CFRelease(v11);
    }
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

void _UIButtonBarCommonInit(void *a1)
{
  obuint64_t j = a1;
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)v1;
  if (v1) {
    objc_storeWeak((id *)(v1 + 440), obj);
  }
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  objc_msgSend(v2, "setLayoutMargins:", 0.0, 8.0, 0.0, 8.0);
  [v2 setLayoutMarginsRelativeArrangement:1];
  [v2 setAlignment:3];
  id v3 = obj[1];
  obj[1] = v2;
  id v4 = v2;

  id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v6 = obj[8];
  obj[8] = v5;

  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v8 = obj[12];
  obj[12] = v7;

  id v9 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v10 = obj[11];
  obj[11] = v9;

  uint64_t v11 = [MEMORY[0x1E4F28E10] weakToStrongObjectsMapTable];
  id v12 = obj[14];
  obj[14] = (id)v11;

  obj[22] = (id)0x412E848000000000;
  obj[18] = (id)0x4020000000000000;
  uint64_t v13 = [MEMORY[0x1E4F5B270] anchorNamed:@"UIButtonBar.flexibleSpaceEqualSize" inItem:obj[1]];
  id v14 = obj[2];
  obj[2] = (id)v13;

  uint64_t v15 = [MEMORY[0x1E4F5B270] anchorNamed:@"UIButtonBar.minimumInterItemSpace" inItem:obj[1]];
  id v16 = obj[3];
  obj[3] = (id)v15;

  uint64_t v17 = [obj[3] constraintEqualToConstant:*((double *)obj + 18)];
  id v18 = obj[4];
  obj[4] = (id)v17;

  [obj[4] setActive:1];
  uint64_t v19 = [obj[2] constraintGreaterThanOrEqualToAnchor:obj[3]];
  [v19 setActive:1];

  uint64_t v20 = objc_alloc_init(_UIButtonBarLayoutMetrics);
  uint64_t v21 = [v4 layoutMarginsGuide];
  uint64_t v22 = [v21 heightAnchor];
  [(_UIButtonBarLayoutMetrics *)v20 setVerticalSizeGuide:v22];

  [(_UIButtonBarLayoutMetrics *)v20 setMinimumSpaceGuide:obj[3]];
  [(_UIButtonBarLayoutMetrics *)v20 setFlexibleSpaceGuide:obj[2]];
  [(_UIButtonBarLayoutMetrics *)v20 setAllowsViewWrappers:0];
  id v23 = obj[7];
  obj[7] = v20;
}

UILayoutGuide *CreateLayoutGuide(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_alloc_init(UILayoutGuide);
  [(UILayoutGuide *)v5 setIdentifier:v4];

  [v3 addLayoutGuide:v5];
  return v5;
}

id _UIApplicationDeactivationReasonMaskLoggableDescription(uint64_t a1)
{
  if (os_variant_has_internal_diagnostics())
  {
    id v4 = [MEMORY[0x1E4F1CA48] array];
    for (int i = 0; i != 30; ++i)
    {
      if ((a1 >> i))
      {
        id v6 = _UIApplicationDeactivationReasonDescription(i);
        [v4 addObject:v6];
      }
    }
    id v7 = NSString;
    id v8 = [v4 componentsJoinedByString:@", "];
    uint64_t v2 = [v7 stringWithFormat:@"[%@] (%i)", v8, a1];
  }
  else
  {
    uint64_t v2 = objc_msgSend(NSString, "stringWithFormat:", @"%i", a1);
  }
  return v2;
}

void _UIVisualEffectSubviewApplyFilters(void *a1, void *a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = [a1 layer];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  obuint64_t j = v5;
  uint64_t v7 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v11 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v12 = NSString;
        uint64_t v13 = [v11 filterName];
        id v14 = [v12 stringWithFormat:@"filters.%@.", v13];

        uint64_t v15 = [v11 valueAsRequested:a3];
        _UIVisualEffectSubviewApplyFilterValues(v6, v15, v14);
      }
      uint64_t v8 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }
}

void _UIVisualEffectSubviewApplyFilterValues(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  void v9[2] = ___UIVisualEffectSubviewApplyFilterValues_block_invoke;
  v9[3] = &unk_1E52DA238;
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  id v8 = v6;
  [a2 enumerateKeysAndObjectsUsingBlock:v9];
}

id _UIApplicationDeactivationReasonLoggableDescription(uint64_t a1)
{
  int has_internal_diagnostics = os_variant_has_internal_diagnostics();
  id v3 = NSString;
  if (has_internal_diagnostics)
  {
    id v6 = _UIApplicationDeactivationReasonDescription(a1);
    id v4 = [v3 stringWithFormat:@"%@ (%i)", v6, a1];
  }
  else
  {
    id v4 = objc_msgSend(NSString, "stringWithFormat:", @"%i", a1);
  }
  return v4;
}

id BestPathForTraits(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 count] == 1)
  {
    id v5 = [v3 objectAtIndex:0];
  }
  else if ((unint64_t)[v3 count] < 2)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v13 = 0;
    id v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v16 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v7 = MEMORY[0x1E4F143A8];
    uint64_t v8 = 3221225472;
    uint64_t v9 = __BestPathForTraits_block_invoke;
    id v10 = &unk_1E5311BF0;
    id v12 = &v13;
    id v11 = v4;
    [v3 enumerateObjectsUsingBlock:&v7];
    if (v14[3] == 0x7FFFFFFFFFFFFFFFLL)
    {
      id v5 = 0;
    }
    else
    {
      id v5 = objc_msgSend(v3, "objectAtIndexedSubscript:", v7, v8, v9, v10);
    }

    _Block_object_dispose(&v13, 8);
  }

  return v5;
}

void sub_1855AB388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIKitGetApplicationAssetManager()
{
  if (qword_1EB25B130 != -1) {
    dispatch_once(&qword_1EB25B130, &__block_literal_global_173);
  }
  uint64_t v0 = (void *)qword_1EB25B128;
  return v0;
}

_UIAssetManager *_UIKitPrivateCoreGlyphsManager()
{
  os_unfair_lock_lock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
  uint64_t v0 = (_UIAssetManager *)__UIKitPrivateCoreGlyphsManager;
  if (!__UIKitPrivateCoreGlyphsManager)
  {
    uint64_t v1 = [MEMORY[0x1E4F97AA8] private];
    if (v1)
    {
      uint64_t v0 = [[_UIAssetManager alloc] initWithName:@"CoreGlyphsPrivate" inBundle:v1 idiom:[+[UIDevice currentDevice] userInterfaceIdiom]];
      __UIKitPrivateCoreGlyphsManager = (uint64_t)v0;
      *(unsigned char *)&v0->_assetManagerFlags |= 0x18u;
    }
    else
    {
      uint64_t v0 = (_UIAssetManager *)__UIKitPrivateCoreGlyphsManager;
      if (!__UIKitPrivateCoreGlyphsManager)
      {
        if (_UIKitPrivateCoreGlyphsManager_once != -1) {
          dispatch_once(&_UIKitPrivateCoreGlyphsManager_once, &__block_literal_global_39_3);
        }
        uint64_t v0 = (_UIAssetManager *)__UIKitPrivateCoreGlyphsManager;
      }
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
  return v0;
}

void _UIAnalyticsGatherMultitouchForegroundAnalytics(int a1)
{
  if (_shouldGatherAnalytics())
  {
    if (_MergedGlobals_1325 == a1) {
      return;
    }
    uint64_t v2 = _uiMultitouchAnalyticsLog();
    BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
    if (a1)
    {
      if (v3)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_INFO, "Analytics: App became foreground active.", buf, 2u);
      }

      qword_1EB265038 = mach_absolute_time();
      if (qword_1EB265040) {
        goto LABEL_16;
      }
      uint64_t v4 = [MEMORY[0x1E4F1CB00] scheduledTimerWithTimeInterval:1 repeats:&__block_literal_global_48_3 block:60.0];
    }
    else
    {
      if (v3)
      {
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_1853B0000, v2, OS_LOG_TYPE_INFO, "Analytics: App stopped being foreground active.", v8, 2u);
      }

      _submitAppForegroundStatus();
      [(id)qword_1EB265040 invalidate];
      uint64_t v4 = 0;
    }
    uint64_t v7 = (void *)qword_1EB265040;
    qword_1EB265040 = v4;

LABEL_16:
    _MergedGlobals_1325 = a1;
    return;
  }
  if (_MergedGlobals_1325)
  {
    id v5 = _uiMultitouchAnalyticsLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_1853B0000, v5, OS_LOG_TYPE_INFO, "Analytics: Stopping foreground active measurement.", v10, 2u);
    }

    _MergedGlobals_1325 = 0;
    [(id)qword_1EB265040 invalidate];
    id v6 = (void *)qword_1EB265040;
    qword_1EB265040 = 0;
  }
}

BOOL AutoresizingBreakabilityScoringFunction()
{
  return (objc_opt_isKindOfClass() & 1) == 0;
}

uint64_t ContainerDepthBreakabilityScoringFunction(void *a1)
{
  uint64_t v1 = (void *)[a1 container];
  for (i = 0; v1; uint64_t v1 = (void *)[v1 superview])
    ++i;
  return i;
}

uint64_t ConstraintTypeBreakabilityScoringFunction(void *a1)
{
  unsigned int v1 = [a1 _constraintType] + 1;
  if (v1 > 0xF) {
    return 8;
  }
  else {
    return qword_186B9E038[v1];
  }
}

uint64_t RelationBreakabilityScoringFunction(void *a1)
{
  uint64_t v1 = [a1 relation];
  uint64_t v2 = 1;
  if (v1 != 1) {
    uint64_t v2 = 2;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t MultiplierBreakabilityScoringFunction(void *a1)
{
  [a1 multiplier];
  return (uint64_t)v1;
}

uint64_t ConstantBreakabilityScoringFunction(void *a1)
{
  [a1 constant];
  return (uint64_t)v1;
}

uint64_t CompareViewHierarchyPosition(void *a1, void *a2)
{
  uint64_t v4 = 1;
  while (a1 != a2)
  {
    id v5 = (void *)[a1 superview];
    uint64_t v6 = [a2 superview];
    if (!v5) {
      return -1;
    }
    uint64_t v7 = (void *)v6;
    if (!v6) {
      return v4;
    }
    unint64_t v8 = objc_msgSend((id)objc_msgSend(v5, "_allSubviews"), "indexOfObjectIdenticalTo:", a1);
    unint64_t v9 = objc_msgSend((id)objc_msgSend(v7, "_allSubviews"), "indexOfObjectIdenticalTo:", a2);
    BOOL v10 = v8 > v9;
    if (v8 < v9) {
      return -1;
    }
    a1 = v5;
    a2 = v7;
    if (v10) {
      return v4;
    }
  }
  return 0;
}

uint64_t _UIUseModernBars()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    double v1 = +[UIDevice currentDevice];
    uint64_t v2 = [v1 userInterfaceIdiom];

    return v2 != 2 && v2 != 8 && v2 != -1;
  }
  return result;
}

BOOL BarButtonItemSystemItemIsHidden(uint64_t a1)
{
  return a1 == 25
      && !+[UIResponder _isWritingToolsAvailable];
}

id _UIImageName(void *a1)
{
  id v1 = a1;
  if ([v1 _isNamed])
  {
    uint64_t v2 = [v1 _primitiveImageAsset];

    if (v2)
    {
      BOOL v3 = [v1 imageAsset];
      uint64_t v4 = [v3 assetName];
    }
    else
    {
      os_unfair_lock_lock((os_unfair_lock_t)&__tableLock);
      if (__imageTable)
      {
        uint64_t v4 = CFDictionaryGetValue((CFDictionaryRef)__imageTable, v1);
      }
      else
      {
        uint64_t v4 = 0;
      }
      os_unfair_lock_unlock((os_unfair_lock_t)&__tableLock);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t _UIIsPrivateSystemSymbolImage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 _primitiveImageAsset];
  if (v2)
  {
    os_unfair_lock_lock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
    BOOL v3 = (void *)__UIKitPrivateCoreGlyphsManager;
    os_unfair_lock_unlock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
    id v4 = v3;
    uint64_t v5 = [v4 _imageBelongsToCoreGlyphs:v1];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t _UIIsSystemSymbolImage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 _primitiveImageAsset];
  if (v2)
  {
    os_unfair_lock_lock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
    BOOL v3 = (void *)__UIKitCoreGlyphsManager;
    os_unfair_lock_unlock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
    id v4 = v3;
    if ([v4 _imageBelongsToCoreGlyphs:v1])
    {
      uint64_t v5 = 1;
    }
    else
    {
      os_unfair_lock_lock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
      uint64_t v6 = (void *)__UIKitPrivateCoreGlyphsManager;
      os_unfair_lock_unlock((os_unfair_lock_t)&__UIKitCoreGlyphsManagersLock);
      id v7 = v6;
      uint64_t v5 = [v7 _imageBelongsToCoreGlyphs:v1];
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void UICollectionViewFlowLayoutCommonInit(uint64_t a1)
{
  _OWORD v15[3] = *MEMORY[0x1E4F143B8];
  *(void *)(a1 + 280) = 0x4024000000000000;
  *(void *)(a1 + 28_Block_object_dispose(&STACK[0x3A0], 8) = 0x4024000000000000;
  *(int64x2_t *)(a1 + 296) = vdupq_n_s64(0x4049000000000000uLL);
  *(_DWORD *)(a1 + 276) |= 0x200u;
  *(void *)(a1 + 544) = 0;
  id v1 = NSNumber;
  uint64_t v2 = (id)a1;
  BOOL v3 = [v1 numberWithInt:3];
  v15[0] = v3;
  id v4 = [NSNumber numberWithInt:0];
  v15[1] = v4;
  uint64_t v5 = [NSNumber numberWithInt:1];
  v15[2] = v5;
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:3];

  v14[0] = @"UIFlowLayoutCommonRowHorizontalAlignmentKey";
  v14[1] = @"UIFlowLayoutLastRowHorizontalAlignmentKey";
  v14[2] = @"UIFlowLayoutRowVerticalAlignmentKey";
  id v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v14 count:3];
  uint64_t v8 = [objc_alloc(MEMORY[0x1E4F1C9E8]) initWithObjects:v6 forKeys:v7];
  unint64_t v9 = (void *)v2[59];
  v2[59] = v8;

  id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v11 = (void *)v2[64];
  v2[64] = v10;

  id v12 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v13 = (void *)v2[65];
  v2[65] = v12;
}

id UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v30 = a4;
  uint64_t v31 = a7;
  uint64_t v15 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_186A1E92C();
  swift_bridgeObjectRelease();
  uint64_t v32 = a8;
  sub_1853B7020(a8, (uint64_t)v33, &qword_1EB256B10);
  uint64_t v17 = v34;
  if (v34)
  {
    long long v18 = __swift_project_boxed_opaque_existential_0Tm(v33, v34);
    uint64_t v19 = *(void *)(v17 - 8);
    double v20 = MEMORY[0x1F4188790](v18);
    uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v19 + 16))(v22, v20);
    uint64_t v23 = sub_186A1F83C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  }
  else
  {
    uint64_t v23 = 0;
  }
  sub_1853B985C(0, &qword_1E8FAF450);
  uint64_t v24 = (void *)sub_186A1EB1C();
  swift_bridgeObjectRelease();
  if (a11)
  {
    id v25 = (void *)sub_186A1E92C();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = 0;
  }
  id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v27 = objc_msgSend(v26, sel_initWithTitle_image_imageName_action_input_modifierFlags_propertyList_alternates_discoverabilityTitle_attributes_state_, v15, a3, 0, v30, v16, v31, v23, v24, v25, a12, a13);

  swift_unknownObjectRelease();
  sub_1853BFC80(v32);
  return v27;
}

uint64_t _UIHIDUsageFromSpecialKeyInput(uint64_t a1)
{
  id v1 = [&unk_1ED3F7A50 objectForKeyedSubscript:a1];
  uint64_t v2 = [v1 longValue];

  return v2;
}

id _UIKeyCommandGetLocalizedSymbol(void *a1)
{
  id v1 = a1;
  uint64_t v2 = _UIKeyCommandGetLocalizedSymbolDict();
  BOOL v3 = [v2 objectForKeyedSubscript:v1];
  id v4 = v3;
  if (!v3) {
    BOOL v3 = v1;
  }
  id v5 = v3;

  return v5;
}

id _UIKeyCommandGetLocalizedSymbolDict()
{
  uint64_t v0 = (void *)sLocalizedSymbolsDict;
  if (!sLocalizedSymbolsDict)
  {
    id v1 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    uint64_t v2 = (void *)sLocalizedSymbolsDict;
    sLocalizedSymbolsDict = (uint64_t)v1;

    uint64_t v0 = (void *)sLocalizedSymbolsDict;
  }
  return v0;
}

void sub_1855B249C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UINSLocalizedStringWithDefaultValue(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = _UIKitBundle();
  uint64_t v6 = [v5 localizedStringForKey:v4 value:v3 table:@"Localizable"];

  return v6;
}

uint64_t _UINavigationBarBackButtonShowsContextMenu()
{
  if (qword_1EB25C828 != -1) {
    dispatch_once(&qword_1EB25C828, &__block_literal_global_77_0);
  }
  return byte_1EB25C819;
}

uint64_t _UIRecursivelyAnalyzeMenu(void *a1, uint64_t a2)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = *(void **)(a2 + 8);
  id v5 = [v3 identifier];
  uint64_t v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    id v7 = v3;
    id v8 = v6;
    unint64_t v9 = *(NSObject **)(__UILogGetCategoryCachedImpl("MenuBuilder", &_MergedGlobals_1201) + 8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      id v33 = v7;
      __int16 v34 = 2112;
      id v35 = v8;
      _os_log_impl(&dword_1853B0000, v9, OS_LOG_TYPE_ERROR, "Menu has duplicates --\n%@\n%@\nMake a symbolic breakpoint at _UIMenuBuilderError to catch this in the debugger.", buf, 0x16u);
    }
    uint64_t v10 = 0;
  }
  else
  {
    id v11 = *(void **)(a2 + 8);
    id v12 = [v3 identifier];
    [v11 setObject:v3 forKeyedSubscript:v12];

    id v7 = [v3 identifier];
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    id v8 = [v3 children];
    uint64_t v13 = [v8 countByEnumeratingWithState:&v27 objects:v31 count:16];
    if (v13)
    {
      uint64_t v14 = v13;
      id v19 = v3;
      uint64_t v15 = *(void *)v28;
LABEL_7:
      uint64_t v16 = 0;
      while (1)
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v8);
        }
        uint64_t v17 = *(void **)(*((void *)&v27 + 1) + 8 * v16);
        if (([v17 _isLoadingPlaceholder] & 1) == 0)
        {
          v24[0] = MEMORY[0x1E4F143A8];
          v24[1] = 3221225472;
          float64x2_t v24[2] = ___UIRecursivelyAnalyzeMenu_block_invoke;
          v24[3] = &unk_1E5303D40;
          uint64_t v26 = a2;
          id v25 = v7;
          v21[0] = MEMORY[0x1E4F143A8];
          v21[1] = 3221225472;
          void v21[2] = ___UIRecursivelyAnalyzeMenu_block_invoke_2;
          void v21[3] = &unk_1E5303D68;
          uint64_t v23 = a2;
          id v22 = v25;
          v20[0] = MEMORY[0x1E4F143A8];
          v20[1] = 3221225472;
          void v20[2] = ___UIRecursivelyAnalyzeMenu_block_invoke_3;
          id v20[3] = &__block_descriptor_40_e18_B16__0__UIAction_8l;
          void v20[4] = a2;
          uint64_t v10 = [v17 _acceptBoolMenuVisit:v24 commandVisit:v21 actionVisit:v20];

          if (!v10) {
            break;
          }
        }
        if (v14 == ++v16)
        {
          uint64_t v14 = [v8 countByEnumeratingWithState:&v27 objects:v31 count:16];
          uint64_t v10 = 1;
          if (v14) {
            goto LABEL_7;
          }
          break;
        }
      }
      id v3 = v19;
    }
    else
    {
      uint64_t v10 = 1;
    }
  }

  return v10;
}

double _UITableViewHeaderFooterViewConcreteDefaultLayoutMargins(void *a1, int a2, double a3)
{
  char v3 = a2;
  if (dyld_program_sdk_at_least() == a2) {
    goto LABEL_19;
  }
  uint64_t v6 = [a1 tableViewStyle];
  if (v6 < 0)
  {
    id v7 = [a1 _table];
    uint64_t v6 = [v7 _tableStyle];
  }
  if (v6 == 16) {
    goto LABEL_7;
  }
  if (v6 != 2)
  {
    if (v6 != 1) {
      goto LABEL_19;
    }
LABEL_7:
    id v8 = [a1 _table];
    [v8 _sectionContentInset];
    double v10 = v9;
    double v12 = v11;

    if (v10 <= 0.0 && v12 <= 0.0) {
      goto LABEL_19;
    }
  }
  if (v3)
  {
    uint64_t v13 = [a1 contentView];
    [v13 frame];
    double v15 = v14;
    double v17 = v16;
  }
  else
  {
    [a1 frame];
    double v15 = v18;
    double v17 = v19;
  }
  double v20 = [a1 traitCollection];
  uint64_t v21 = [v20 userInterfaceIdiom];

  id v22 = [a1 _constants];
  if (v21 == 6)
  {
    objc_msgSend(v22, "defaultHeaderFooterLayoutMarginsForTableViewStyle:isHeader:isFirstSection:", objc_msgSend(a1, "tableViewStyle"), objc_msgSend(a1, "sectionHeader"), objc_msgSend(a1, "_isTopHeader"));
    a3 = v23;
  }
  else
  {
    uint64_t v24 = [a1 window];
    id v25 = [v24 screen];
    objc_msgSend(v22, "defaultTableLayoutMarginsForScreen:size:tableStyle:", v25, 2, v15, v17);
    a3 = v26;
  }
  if ((v3 & 1) == 0)
  {
    double v55 = a3;
    [a1 _contentRect];
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat rect = v31;
    CGFloat v59 = v33;
    [a1 bounds];
    CGFloat v35 = v34;
    CGFloat v37 = v36;
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    v60.origin.CGFloat x = v28;
    CGFloat v53 = v28;
    CGFloat v54 = v30;
    v60.origin.CGFloat y = v30;
    v60.size.CGFloat width = v32;
    v60.size.CGFloat height = v59;
    double MinY = CGRectGetMinY(v60);
    v61.origin.CGFloat x = v35;
    v61.origin.CGFloat y = v37;
    v61.size.CGFloat width = v39;
    v61.size.CGFloat height = v41;
    double v57 = MinY - CGRectGetMinY(v61);
    v62.origin.CGFloat x = v28;
    v62.origin.CGFloat y = v30;
    v62.size.CGFloat width = rect;
    v62.size.CGFloat height = v59;
    CGRectGetMinX(v62);
    v63.origin.CGFloat x = v35;
    v63.origin.CGFloat y = v37;
    v63.size.CGFloat width = v39;
    v63.size.CGFloat height = v41;
    CGRectGetMinX(v63);
    v64.origin.CGFloat x = v35;
    v64.origin.CGFloat y = v37;
    v64.size.CGFloat width = v39;
    v64.size.CGFloat height = v41;
    CGRectGetMaxY(v64);
    v65.origin.CGFloat x = v28;
    v65.origin.CGFloat y = v30;
    v65.size.CGFloat width = rect;
    v65.size.CGFloat height = v59;
    CGRectGetMaxY(v65);
    v66.origin.CGFloat x = v35;
    v66.origin.CGFloat y = v37;
    v66.size.CGFloat width = v39;
    v66.size.CGFloat height = v41;
    CGRectGetMaxX(v66);
    v67.origin.CGFloat x = v28;
    v67.origin.CGFloat y = v30;
    v67.size.CGFloat width = rect;
    v67.size.CGFloat height = v59;
    CGRectGetMaxX(v67);
    [a1 edgesInsettingLayoutMarginsFromSafeArea];
    [a1 safeAreaInsets];
    id v42 = [a1 superview];

    if (!v42)
    {
      uint64_t v43 = [a1 _table];
      id v44 = [v43 _scrollView];
      [v44 safeAreaInsets];
    }
    a3 = v55 + v57;
  }
LABEL_19:
  if (_UIShouldApplyVerticalLayoutMarginsToListHeaderFooterViews())
  {
    a3 = 0.0;
    if ((v3 & 1) == 0)
    {
      uint64_t v45 = [a1 tableViewStyle];
      if (v45 < 0)
      {
        uint64_t v46 = [a1 _table];
        uint64_t v45 = [v46 _tableStyle];
      }
      id v47 = objc_msgSend(a1, "_constants", *(void *)&v53, *(void *)&v54);
      CGRect v48 = v47;
      if (v47)
      {
        id v49 = v47;
      }
      else
      {
        uint64_t v50 = [a1 traitCollection];
        _UITableConstantsForTraitCollection(v50);
        id v49 = (id)objc_claimAutoreleasedReturnValue();
      }
      objc_msgSend(v49, "defaultHeaderFooterLayoutMarginsForTableViewStyle:isHeader:isFirstSection:", v45, objc_msgSend(a1, "sectionHeader"), objc_msgSend(a1, "_isTopHeader"));
      a3 = v51;
    }
  }
  return a3;
}

uint64_t _UIShouldApplyVerticalLayoutMarginsToListHeaderFooterViews()
{
  uint64_t result = dyld_program_sdk_at_least();
  if (result)
  {
    if (_UIInternalPreferencesRevisionOnce != -1) {
      dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_5_8);
    }
    int v1 = _UIInternalPreferencesRevisionVar;
    if (_UIInternalPreferencesRevisionVar < 1
      || (int v3 = _UIInternalPreference_ApplyVerticalLayoutMarginsToListHeaderFooterViews,
          _UIInternalPreferencesRevisionVar == _UIInternalPreference_ApplyVerticalLayoutMarginsToListHeaderFooterViews))
    {
      BOOL v2 = 0;
    }
    else
    {
      do
      {
        BOOL v2 = v1 < v3;
        if (v1 < v3) {
          break;
        }
        _UIInternalPreferenceSync(v1, &_UIInternalPreference_ApplyVerticalLayoutMarginsToListHeaderFooterViews, @"ApplyVerticalLayoutMarginsToListHeaderFooterViews", (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        int v3 = _UIInternalPreference_ApplyVerticalLayoutMarginsToListHeaderFooterViews;
      }
      while (v1 != _UIInternalPreference_ApplyVerticalLayoutMarginsToListHeaderFooterViews);
    }
    return byte_1EB2578C4 && v2;
  }
  return result;
}

double _UIDirectionalEdgesForContentInsetEnvironment(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v7 = a2;
  if ((unint64_t)(a3 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    double v12 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v13 = objc_msgSend(NSString, "stringWithUTF8String:", "NSDirectionalEdgeInsets _UIDirectionalEdgesForContentInsetEnvironment(const __strong id<_UIContentInsetsEnvironment> _Nonnull, UIContentInsetsReference, UIAxis)");
    [v12 handleFailureInFunction:v13, @"_UICollectionLayoutHelpers.m", 2406, @"Invalid parameter not satisfying: %@", @"layoutAxis == UIAxisVertical || layoutAxis == UIAxisHorizontal" file lineNumber description];

    if (!v7)
    {
LABEL_3:
      unint64_t v9 = [a1 insetReference];
      if (v9 <= 1) {
        uint64_t v7 = 1;
      }
      else {
        uint64_t v7 = v9;
      }
    }
  }
  else if (!a2)
  {
    goto LABEL_3;
  }
  if (a3 == 1) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = a3 == 2;
  }
  switch(v7)
  {
    case 4:
      objc_msgSend(a1, "readableContentInsets", a4, a5, a6, 0.0);
      if (!v10) {
        return 0.0;
      }
      break;
    case 3:
      objc_msgSend(a1, "layoutMarginsInsets", a4, a5, a6, 0.0);
      if (!v10) {
        return 0.0;
      }
      break;
    case 2:
      objc_msgSend(a1, "safeAreaInsets", a4, a5, a6, 0.0);
      if (!v10) {
        return 0.0;
      }
      break;
    default:
      return 0.0;
  }
  if (v10 == 1) {
    return 0.0;
  }
  return result;
}

void sub_1855B7228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1855B7C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    sub_1854B0A60(a1);
    id v5 = (void *)sub_18549FDC4();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    void aBlock[4] = sub_185A73DFC;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_185A71EC4;
    uint64_t aBlock[3] = &block_descriptor_57;
    uint64_t v7 = _Block_copy(aBlock);
    sub_1854B0A60(a1);
    id v8 = v5;
    swift_release();
    objc_msgSend(v8, sel_setItemSeparatorHandler_, v7);
    sub_1854AFD40(a1);
    _Block_release(v7);

    return (id)sub_1854AFD40(a1);
  }
  else
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    if (isUniquelyReferenced_nonNull_native)
    {
      double v12 = *(void **)(v11 + 16);
    }
    else
    {
      objc_msgSend(*(id *)(v11 + 16), sel_copy);
      sub_186A1F1CC();
      swift_unknownObjectRelease();
      sub_1856ACF00();
      swift_dynamicCast();
      double v12 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB255A90);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v15;
      swift_release();
      *BOOL v2 = v13;
    }
    return objc_msgSend(v12, sel_setItemSeparatorHandler_, 0);
  }
}

uint64_t UIView._appIntentsIntelligenceProvider.setter(uint64_t a1)
{
  sub_1853B7020(a1, (uint64_t)v11, &qword_1E8FB0048);
  uint64_t v3 = v12;
  if (v12)
  {
    id v4 = __swift_project_boxed_opaque_existential_0Tm(v11, v12);
    uint64_t v5 = *(void *)(v3 - 8);
    double v6 = MEMORY[0x1F4188790](v4);
    id v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v5 + 16))(v8, v6);
    uint64_t v9 = sub_186A1F83C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  objc_msgSend(v1, sel__setInternalAppIntentsIntelligenceProvider_, v9);
  swift_unknownObjectRelease();
  return sub_1853B93B8(a1, &qword_1E8FB0048);
}

id _BarButtonCachedSystemImageWithName(void *a1, void *a2, void *a3, void *a4, int a5, double a6, double a7, double a8, double a9)
{
  unint64_t v17 = a1;
  unint64_t v18 = a2;
  id v19 = a3;
  id v20 = a4;
  if (v17 | v18)
  {
    if (qword_1EB25F3C0 != -1) {
      dispatch_once(&qword_1EB25F3C0, &__block_literal_global_341_0);
    }
    if (v17) {
      unint64_t v22 = v17;
    }
    else {
      unint64_t v22 = v18;
    }
    uint64_t v21 = [(id)qword_1EB25F3B8 objectForKey:v22];
    if (!v21)
    {
      uint64_t v21 = +[UIImage _systemImageNamed:v17 fallback:v18 withConfiguration:v19];
      if (v21) {
        [(id)qword_1EB25F3B8 setObject:v21 forKey:v18];
      }
    }
    if (v20)
    {
      uint64_t v23 = [v21 imageWithTintColor:v20 renderingMode:1];

      uint64_t v21 = (void *)v23;
    }
    if (([v21 _isSymbolImage] & 1) == 0) {
      objc_msgSend(v21, "_setAlignmentRectInsets:", a6, a7, a8, a9);
    }
    if (a5)
    {
      uint64_t v24 = [v21 imageFlippedForRightToLeftLayoutDirection];

      uint64_t v21 = (void *)v24;
    }
  }
  else
  {
    uint64_t v21 = 0;
  }

  return v21;
}

void sub_1855BBC54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1855BCA64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1855BCAFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1855BD174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UINavigationItem.renameDelegate.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    _s35_UINavigationItemSwiftRenameHandlerCMa();
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 24) = a2;
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    double v36 = sub_1859775DC;
    uint64_t v37 = v6;
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    double v34 = sub_185976930;
    CGFloat v35 = &block_descriptor_19;
    uint64_t v7 = _Block_copy(&v32);
    id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v9 = objc_msgSend(ObjCClassFromMetadata, sel_handlerWithDidEndRenamingHandler_, v7);
    _Block_release(v7);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 24) = a2;
    swift_unknownObjectWeakInit();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v10;
    *(void *)(v12 + 24) = v11;
    double v36 = sub_1859775E8;
    uint64_t v37 = v12;
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    double v34 = sub_185976AE8;
    CGFloat v35 = &block_descriptor_14;
    uint64_t v13 = _Block_copy(&v32);
    id v14 = v9;
    swift_release();
    objc_msgSend(v14, sel_setShouldBeginRenamingHandler_, v13);
    _Block_release(v13);

    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 24) = a2;
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = v16;
    double v36 = sub_1859775F4;
    uint64_t v37 = v17;
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    double v34 = sub_185976D1C;
    CGFloat v35 = &block_descriptor_22_2;
    unint64_t v18 = _Block_copy(&v32);
    id v19 = v14;
    swift_release();
    objc_msgSend(v19, sel_setWillBeginRenamingWithRangeHandler_, v18);
    _Block_release(v18);

    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 24) = a2;
    swift_unknownObjectWeakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = v21;
    double v36 = sub_185977600;
    uint64_t v37 = v22;
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    double v34 = sub_185976F04;
    CGFloat v35 = &block_descriptor_30;
    uint64_t v23 = _Block_copy(&v32);
    id v24 = v19;
    swift_release();
    objc_msgSend(v24, sel_setShouldEndRenamingHandler_, v23);
    _Block_release(v23);

    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 24) = a2;
    swift_unknownObjectWeakInit();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v25;
    *(void *)(v27 + 24) = v26;
    double v36 = sub_18597760C;
    uint64_t v37 = v27;
    uint64_t v32 = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    double v34 = sub_1859771A8;
    CGFloat v35 = &block_descriptor_38;
    CGFloat v28 = _Block_copy(&v32);
    double v29 = (char *)v24;
    swift_release();
    objc_msgSend(v29, sel_setFileURLForRenaming_, v28);
    _Block_release(v28);

    *(void *)&v29[OBJC_IVAR____TtCE5UIKitCSo16UINavigationItem35_UINavigationItemSwiftRenameHandler_delegate + 8] = a2;
    swift_unknownObjectWeakAssign();
    CGFloat v30 = v29;
    objc_msgSend(v2, sel__dci_setRenameHandler_, v30);

    return (id)swift_unknownObjectRelease_n();
  }
  else
  {
    return objc_msgSend(v2, sel__dci_setRenameHandler_, 0);
  }
}

uint64_t sub_1855BD880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1855BD888()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _ConvertDeviceReferenceSpacePointToView(void *a1, double a2, double a3)
{
  uint64_t v6 = [a1 _window];
  objc_msgSend(v6, "_convertPointFromSceneReferenceSpace:", a2, a3);
  double v8 = v7;
  double v10 = v9;

  return objc_msgSend(a1, "convertPoint:fromView:", 0, v8, v10);
}

unint64_t _rotatedEdgesGivenOrientationInDegrees(unint64_t result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (!a2) {
      return result;
    }
    if (a2 != 180) {
      return (result >> 3) & 1 | (2 * (result & 7));
    }
    return (result >> 2) & 3 | (4 * (result & 3));
  }
  if (a2 == -180) {
    return (result >> 2) & 3 | (4 * (result & 3));
  }
  if (a2 == -90) {
    return (8 * (result & 1)) | (result >> 1) & 7;
  }
  return (result >> 3) & 1 | (2 * (result & 7));
}

_UISEAnyGestureFeature *___commonInit_block_invoke(uint64_t a1, void *a2)
{
  unsigned int v30 = [a2 ignoreHIDEdgeFlags];
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = ___commonInit_block_invoke_2;
  uint64_t aBlock[3] = &unk_1E52DA660;
  id v4 = v3;
  id v74 = v4;
  id v75 = a2;
  double v31 = (void (**)(void *, void))_Block_copy(aBlock);
  v71[0] = MEMORY[0x1E4F143A8];
  v71[1] = 3221225472;
  v71[2] = ___commonInit_block_invoke_3;
  v71[3] = &unk_1E52D9F70;
  id v5 = v4;
  id v72 = v5;
  uint64_t v6 = _Block_copy(v71);
  v68[0] = MEMORY[0x1E4F143A8];
  v68[1] = 3221225472;
  v68[2] = ___commonInit_block_invoke_4;
  void v68[3] = &unk_1E52D9F98;
  id v7 = v5;
  id v69 = v7;
  unint64_t v70 = a2;
  double v8 = (void (**)(void))_Block_copy(v68);
  v66[0] = MEMORY[0x1E4F143A8];
  v66[1] = 3221225472;
  v66[2] = ___commonInit_block_invoke_5;
  v66[3] = &unk_1E52D9F70;
  id v9 = v7;
  id v67 = v9;
  double v10 = (void (**)(void))_Block_copy(v66);
  uint64_t v60 = 0;
  CGRect v61 = &v60;
  uint64_t v62 = 0x3032000000;
  CGRect v63 = __Block_byref_object_copy__103;
  CGRect v64 = __Block_byref_object_dispose__103;
  id v65 = 0;
  v57[0] = MEMORY[0x1E4F143A8];
  v57[1] = 3221225472;
  v57[2] = ___commonInit_block_invoke_131;
  v57[3] = &unk_1E52E1B98;
  CGFloat v59 = &v60;
  v57[4] = a2;
  id v11 = v9;
  id v58 = v11;
  double v36 = (void (**)(void))_Block_copy(v57);
  v54[0] = MEMORY[0x1E4F143A8];
  v54[1] = 3221225472;
  v54[2] = ___commonInit_block_invoke_2_133;
  v54[3] = &unk_1E52E1B98;
  id v56 = &v60;
  v54[4] = a2;
  id v12 = v11;
  id v55 = v12;
  uint64_t v32 = (void (**)(void))_Block_copy(v54);
  v51[0] = MEMORY[0x1E4F143A8];
  v51[1] = 3221225472;
  v51[2] = ___commonInit_block_invoke_140;
  v51[3] = &unk_1E52E1B98;
  CGFloat v53 = &v60;
  v51[4] = a2;
  id v13 = v12;
  id v52 = v13;
  double v34 = (void (**)(void))_Block_copy(v51);
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  v47[0] = MEMORY[0x1E4F143A8];
  v47[1] = 3221225472;
  void v47[2] = ___commonInit_block_invoke_2_143;
  v47[3] = &unk_1E52E5180;
  id v15 = v14;
  id v48 = v15;
  id v49 = a2;
  uint64_t v50 = &v60;
  CGFloat v35 = (void (**)(void))_Block_copy(v47);
  v44[0] = MEMORY[0x1E4F143A8];
  v44[1] = 3221225472;
  v44[2] = ___commonInit_block_invoke_3_145;
  v44[3] = &unk_1E52D9F98;
  id v16 = v15;
  id v45 = v16;
  uint64_t v46 = a2;
  uint64_t v33 = (void (**)(void))_Block_copy(v44);
  v41[0] = MEMORY[0x1E4F143A8];
  v41[1] = 3221225472;
  v41[2] = ___commonInit_block_invoke_4_147;
  v41[3] = &unk_1E52EA3D8;
  uint64_t v43 = &v60;
  v41[4] = a2;
  id v17 = v16;
  id v42 = v17;
  unint64_t v18 = (void (**)(void *, uint64_t))_Block_copy(v41);
  v39[0] = MEMORY[0x1E4F143A8];
  v39[1] = 3221225472;
  _OWORD v39[2] = ___commonInit_block_invoke_5_149;
  v39[3] = &unk_1E52D9F70;
  id v19 = v17;
  id v40 = v19;
  uint64_t v20 = (void (**)(void))_Block_copy(v39);
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 3221225472;
  _OWORD v37[2] = ___commonInit_block_invoke_6;
  v37[3] = &unk_1E52D9F70;
  id v21 = v19;
  id v38 = v21;
  uint64_t v22 = (void (**)(void))_Block_copy(v37);
  uint64_t v23 = v6;
  switch(*(void *)(a1 + 32))
  {
    case 1:
      v31[2](v31, v30);
      if ((v30 & 1) == 0) {
        (*((void (**)(void *))v6 + 2))(v6);
      }
      v10[2](v10);
      v36[2]();
      v35[2]();
      v18[2](v18, 1);
      goto LABEL_15;
    case 2:
      v31[2](v31, v30);
      if ((v30 & 1) == 0) {
        (*((void (**)(void *))v6 + 2))(v6);
      }
      v8[2](v8);
      v10[2](v10);
      v36[2]();
      v35[2]();
      v18[2](v18, 1);
      goto LABEL_15;
    case 3:
      v31[2](v31, v30);
      if ((v30 & 1) == 0) {
        (*((void (**)(void *))v6 + 2))(v6);
      }
      v8[2](v8);
      v10[2](v10);
      v36[2]();
      v35[2]();
      v18[2](v18, 0);
      goto LABEL_15;
    case 4:
      v31[2](v31, 0);
      (*((void (**)(void *))v6 + 2))(v6);
      v10[2](v10);
      v36[2]();
      v35[2]();
      v18[2](v18, 0);
      id v24 = v22;
      goto LABEL_16;
    case 5:
      v31[2](v31, v30);
      uint64_t v25 = v36;
      if ((v30 & 1) == 0)
      {
        (*((void (**)(void *))v6 + 2))(v6);
        uint64_t v25 = v32;
      }
      v25[2]();
      v33[2]();
LABEL_15:
      id v24 = v20;
      if ((v30 & 1) == 0) {
LABEL_16:
      }
        v24[2]();
      break;
    case 6:
      v31[2](v31, 1);
      v8[2](v8);
      v34[2]();
      v35[2]();
      v18[2](v18, 0);
      break;
    default:
      break;
  }
  uint64_t v26 = [[_UISEAllGestureFeature alloc] initWithSubfeatures:v21];
  [v13 addObject:v26];

  uint64_t v27 = [[_UISEAnyGestureFeature alloc] initWithSubfeatures:v13];
  objc_setAssociatedObject(v27, &__lastTouchedEdgesProviderKey, (id)v61[5], 0);

  _Block_object_dispose(&v60, 8);
  return v27;
}

void sub_1855BF3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a68, 8);
  _Unwind_Resume(a1);
}

void ___commonInit_block_invoke_2(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [[_UISEInitialEdgesFailGestureFeature alloc] initWithSettings:*(void *)(a1 + 40) useEdgeRegionSize:a2];
  [v2 addObject:v3];
}

uint64_t UIRectEdgeRegionForLocation(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  if (a5 <= CGRectGetMinX(*(CGRect *)&a1) + a7)
  {
    uint64_t v14 = 2;
  }
  else
  {
    v16.origin.CGFloat x = a1;
    v16.origin.CGFloat y = a2;
    v16.size.CGFloat width = a3;
    v16.size.CGFloat height = a4;
    if (a5 >= CGRectGetMaxX(v16) - a7) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = 0;
    }
  }
  v17.origin.CGFloat x = a1;
  v17.origin.CGFloat y = a2;
  v17.size.CGFloat width = a3;
  v17.size.CGFloat height = a4;
  if (a6 <= CGRectGetMinY(v17) + a7) {
    return v14 | 1;
  }
  v18.origin.CGFloat x = a1;
  v18.origin.CGFloat y = a2;
  v18.size.CGFloat width = a3;
  v18.size.CGFloat height = a4;
  if (a6 >= CGRectGetMaxY(v18) - a7) {
    return v14 | 4;
  }
  return v14;
}

uint64_t ___commonInit_block_invoke_4_147(void *a1, uint64_t a2)
{
  id v3 = [[_UISEVelocityDirectionEdgesGestureFeature alloc] initWithSettings:a1[4] touchedEdgesProvider:*(void *)(*(void *)(a1[6] + 8) + 40) exactMatchEdges:a2];
  uint64_t v4 = *(void *)(a1[6] + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  uint64_t v6 = (void *)a1[5];
  uint64_t v7 = *(void *)(*(void *)(a1[6] + 8) + 40);
  return [v6 addObject:v7];
}

void ___commonInit_block_invoke_2_143(void *a1)
{
  unint64_t v1 = (void *)a1[4];
  BOOL v2 = [[_UISEOrthogonalHysteresisGestureFeature alloc] initWithSettings:a1[5] touchedEdgesProvider:*(void *)(*(void *)(a1[6] + 8) + 40)];
  [v1 addObject:v2];
}

void ___commonInit_block_invoke_5_149(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = objc_alloc_init(_UISEEdgeTypeRecognizeGestureFeature);
  [v1 addObject:v2];
}

void ___commonInit_block_invoke_3_145(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = [[_UISEDiagonalHysteresisRecognizeGestureFeature alloc] initWithSettings:*(void *)(a1 + 40)];
  [v1 addObject:v2];
}

void ___commonInit_block_invoke_3(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = objc_alloc_init(_UISEEdgeTypeFailGestureFeature);
  [v1 addObject:v2];
}

void ___commonInit_block_invoke_4(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = [[_UISEIdleTimerFailGestureFeature alloc] initWithSettings:*(void *)(a1 + 40)];
  [v1 addObject:v2];
}

void ___commonInit_block_invoke_5(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 32);
  BOOL v2 = objc_alloc_init(_UISETeleportFailGestureFeature);
  [v1 addObject:v2];
}

void _UILANotifyCanvasesOfSizeInvalidationForItemIfNecessary(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  BOOL v2 = [v1 superview];
  id v3 = v1;
  id v4 = v2;
  id v5 = v4;
  uint64_t v6 = v3;
  if (v4)
  {
    uint64_t v6 = v3;
    id v7 = v4;
    do
    {
      if ([v6 _hostsLayoutEngine] && v7 != v5) {
        break;
      }
      double v8 = [v6 superview];

      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      id v9 = objc_msgSend(v8, "_mutableLayoutArrangements", 0);
      uint64_t v10 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v16;
        do
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (*(void *)v16 != v12) {
              objc_enumerationMutation(v9);
            }
            uint64_t v14 = *(void **)(*((void *)&v15 + 1) + 8 * i);
            if ([v14 _monitorsSystemLayoutFittingSizeForItem:v6]) {
              [v14 _systemLayoutFittingSizeDidChangeForItem:v6];
            }
          }
          uint64_t v11 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }
        while (v11);
      }

      id v7 = v8;
      uint64_t v6 = v7;
    }
    while (v7);
  }
}

void _UILACleanUpConstraintsMapTable(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    BOOL v2 = objc_msgSend(v1, "objectEnumerator", 0);
    uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)v8;
      do
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v8 != v5) {
            objc_enumerationMutation(v2);
          }
          [*(id *)(*((void *)&v7 + 1) + 8 * v6++) setActive:0];
        }
        while (v4 != v6);
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
      }
      while (v4);
    }

    [v1 removeAllObjects];
  }
}

void _UILACleanUpConstraintForItemInCollection(void *a1, void *a2)
{
  id v6 = a1;
  id v3 = a2;
  uint64_t v4 = [v3 objectForKey:v6];
  uint64_t v5 = v4;
  if (v4)
  {
    [v4 setActive:0];
    [v3 removeObjectForKey:v6];
  }
}

void _removeEntriesFromCollectionIfConstraintContainsItem(void *a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = objc_msgSend(v4, "copy", 0);
  uint64_t v6 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v5);
        }
        long long v10 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        uint64_t v11 = [v4 objectForKey:v10];
        uint64_t v12 = [v11 firstItem];
        if ((id)v12 == v3)
        {
        }
        else
        {
          id v13 = (void *)v12;
          id v14 = [v11 secondItem];

          if (v14 != v3) {
            goto LABEL_11;
          }
        }
        _UILACleanUpConstraintForItemInCollection(v10, v4);
LABEL_11:
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v7);
  }
}

double UIEdgeInsetsMakeWithEdges(char a1, double a2)
{
  if (a1) {
    return a2;
  }
  else {
    return 0.0;
  }
}

void sub_1855C6EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855C7810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}