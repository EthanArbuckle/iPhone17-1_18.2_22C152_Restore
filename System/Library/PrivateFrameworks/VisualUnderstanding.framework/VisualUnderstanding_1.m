uint64_t sub_2610BB46C(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    v9 = (char *)a2 - (char *)__src;
  }
  v10 = v9 >> 4;
  v11 = a3 - (void)a2;
  v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    v12 = a3 - (void)a2;
  }
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v6 - 1) >= *(v18 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            }
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)v19 = *(_OWORD *)v21;
            }
            v25 = v6 - 2;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_26108BAB0((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v15[1] >= v6[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_26111F398();
  __break(1u);
  return result;
}

uint64_t sub_2610BB6F8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5)
{
  v71 = a5;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910030);
  uint64_t v9 = MEMORY[0x270FA5388](v72);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v12 = (char *)&v65 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  v15 = (char *)&v65 - v14;
  MEMORY[0x270FA5388](v13);
  v18 = (char *)&v65 - v17;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_78;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_79;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v20;
  unint64_t v75 = a1;
  unint64_t v74 = a4;
  uint64_t v23 = v21 / v20;
  uint64_t v70 = v16;
  if (v22 >= v21 / v20)
  {
    if (v23 < 0) {
      goto LABEL_80;
    }
    uint64_t v25 = v23 * v20;
    if (a4 < a2 || a2 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v42 = a4 + v25;
    unint64_t v73 = a4 + v25;
    unint64_t v75 = a2;
    if (v25 < 1 || a1 >= a2) {
      goto LABEL_68;
    }
    uint64_t v44 = -v20;
    unint64_t v66 = a1;
    unint64_t v67 = a4;
    uint64_t v68 = v44;
    while (1)
    {
      sub_261071864(v42 + v44, (uint64_t)v18, &qword_26A910030);
      unint64_t v45 = a2 + v44;
      sub_261071864(a2 + v44, (uint64_t)v15, &qword_26A910030);
      uint64_t v46 = *(int *)(v72 + 48);
      sub_2610C1288((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
      *(void *)&v12[v46] = *(void *)&v18[v46];
      uint64_t v47 = *v71;
      if (!*(void *)(*v71 + 16)) {
        goto LABEL_70;
      }
      unint64_t v48 = sub_26105D860((uint64_t)v12);
      if ((v49 & 1) == 0) {
        goto LABEL_72;
      }
      unint64_t v50 = a3;
      uint64_t v51 = (uint64_t)v18;
      uint64_t v52 = (uint64_t)v12;
      double v53 = *(double *)(*(void *)(v47 + 56) + 8 * v48);
      uint64_t v54 = *(int *)(v72 + 48);
      uint64_t v55 = v70;
      sub_2610C1288((uint64_t)v15, v70, type metadata accessor for VUStreamingGallery.Label);
      *(void *)(v55 + v54) = *(void *)&v15[v54];
      uint64_t v56 = *v71;
      if (!*(void *)(*v71 + 16)) {
        goto LABEL_74;
      }
      unint64_t v57 = sub_26105D860(v55);
      if ((v58 & 1) == 0) {
        goto LABEL_76;
      }
      uint64_t v44 = v68;
      unint64_t v69 = v50 + v68;
      double v59 = *(double *)(*(void *)(v56 + 56) + 8 * v57);
      sub_2610C1208(v55, type metadata accessor for VUStreamingGallery.Label);
      v12 = (char *)v52;
      sub_2610C1208(v52, type metadata accessor for VUStreamingGallery.Label);
      sub_2610718C8((uint64_t)v15, &qword_26A910030);
      v18 = (char *)v51;
      sub_2610718C8(v51, &qword_26A910030);
      if (v59 < v53)
      {
        unint64_t v60 = v66;
        a3 = v69;
        if (v50 < a2 || v69 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v62 = v67;
        }
        else
        {
          BOOL v61 = v50 == a2;
          unint64_t v62 = v67;
          if (!v61) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        uint64_t v44 = v68;
        v75 += v68;
        goto LABEL_66;
      }
      unint64_t v63 = v73;
      v73 += v44;
      unint64_t v60 = v66;
      a3 = v69;
      if (v50 < v63 || v69 >= v63) {
        break;
      }
      if (v50 != v63)
      {
        swift_arrayInitWithTakeBackToFront();
LABEL_64:
        uint64_t v44 = v68;
      }
      unint64_t v45 = a2;
      unint64_t v62 = v67;
LABEL_66:
      unint64_t v42 = v73;
      if (v73 > v62)
      {
        a2 = v45;
        if (v45 > v60) {
          continue;
        }
      }
      goto LABEL_68;
    }
    swift_arrayInitWithTakeFrontToBack();
    goto LABEL_64;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v69 = a4 + v24;
    unint64_t v73 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_261071864(a2, (uint64_t)v18, &qword_26A910030);
        sub_261071864(a4, (uint64_t)v15, &qword_26A910030);
        uint64_t v27 = *(int *)(v72 + 48);
        sub_2610C1288((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        *(void *)&v12[v27] = *(void *)&v18[v27];
        uint64_t v28 = *v71;
        if (!*(void *)(*v71 + 16)) {
          break;
        }
        unint64_t v29 = sub_26105D860((uint64_t)v12);
        if ((v30 & 1) == 0) {
          goto LABEL_71;
        }
        unint64_t v31 = a3;
        double v32 = *(double *)(*(void *)(v28 + 56) + 8 * v29);
        uint64_t v33 = *(int *)(v72 + 48);
        uint64_t v34 = v70;
        sub_2610C1288((uint64_t)v15, v70, type metadata accessor for VUStreamingGallery.Label);
        *(void *)(v34 + v33) = *(void *)&v15[v33];
        uint64_t v35 = *v71;
        if (!*(void *)(*v71 + 16)) {
          goto LABEL_73;
        }
        unint64_t v36 = sub_26105D860(v34);
        if ((v37 & 1) == 0) {
          goto LABEL_75;
        }
        double v38 = *(double *)(*(void *)(v35 + 56) + 8 * v36);
        sub_2610C1208(v34, type metadata accessor for VUStreamingGallery.Label);
        sub_2610C1208((uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        sub_2610718C8((uint64_t)v15, &qword_26A910030);
        sub_2610718C8((uint64_t)v18, &qword_26A910030);
        unint64_t v39 = v75;
        if (v38 >= v32)
        {
          unint64_t v41 = v74 + v20;
          a3 = v31;
          if (v75 < v74 || v75 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v75 != v74)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v74 = v41;
          unint64_t v40 = a2;
        }
        else
        {
          unint64_t v40 = a2 + v20;
          a3 = v31;
          if (v75 < a2 || v75 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v75 == a2)
          {
            unint64_t v39 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v75 = v39 + v20;
        a4 = v74;
        if (v74 < v69)
        {
          a2 = v40;
          if (v40 < a3) {
            continue;
          }
        }
        goto LABEL_68;
      }
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
LABEL_68:
    sub_26108BC34(&v75, &v74, (uint64_t *)&v73);
    return 1;
  }
LABEL_80:
  uint64_t result = sub_26111F398();
  __break(1u);
  return result;
}

uint64_t sub_2610BBE08(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v30 = a2;
  int v38 = a5;
  uint64_t v33 = a4;
  unint64_t v31 = a1;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103F8);
  uint64_t v6 = MEMORY[0x270FA5388](v37);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 0;
  int64_t v15 = 0;
  unint64_t v39 = a3;
  uint64_t v18 = a3[8];
  uint64_t v17 = a3 + 8;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *((unsigned char *)v17 - 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v34 = v17;
  int64_t v35 = (unint64_t)(v19 + 63) >> 6;
  while (v21)
  {
    unint64_t v22 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v23 = v22 | (v15 << 6);
LABEL_18:
    uint64_t v27 = v39;
    sub_2610C1288(v39[6] + *(void *)(v36 + 72) * v23, (uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    uint64_t v28 = *(void *)(v27[7] + 8 * v23);
    sub_2610C1288((uint64_t)v14, (uint64_t)v10, type metadata accessor for VUStreamingGallery.Label);
    uint64_t v29 = *(int *)(v37 + 48);
    *(void *)&v10[v29] = v28;
    sub_2610C11A0((uint64_t)v10, (uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
    *(void *)&v8[v29] = v28;
    if (v38)
    {
      sub_2610C1208((uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      uint64_t result = sub_2610C1208((uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    }
    else
    {
      sub_2610C1208((uint64_t)v8, type metadata accessor for VUStreamingGallery.Label);
      uint64_t result = sub_2610C1208((uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
      if (v28 == v33)
      {
        *(unint64_t *)((char *)v31 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        BOOL v24 = __OFADD__(v32++, 1);
        if (v24) {
          goto LABEL_30;
        }
      }
    }
  }
  BOOL v24 = __OFADD__(v15++, 1);
  if (v24)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v35) {
    return sub_2610BC68C(v31, v30, v32, v39);
  }
  unint64_t v25 = v34[v15];
  if (v25)
  {
LABEL_17:
    unint64_t v21 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
    goto LABEL_18;
  }
  int64_t v26 = v15 + 1;
  if (v15 + 1 >= v35) {
    return sub_2610BC68C(v31, v30, v32, v39);
  }
  unint64_t v25 = v34[v26];
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v15 + 2;
  if (v15 + 2 >= v35) {
    return sub_2610BC68C(v31, v30, v32, v39);
  }
  unint64_t v25 = v34[v26];
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v15 + 3;
  if (v15 + 3 >= v35) {
    return sub_2610BC68C(v31, v30, v32, v39);
  }
  unint64_t v25 = v34[v26];
  if (v25)
  {
LABEL_16:
    int64_t v15 = v26;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v35) {
      return sub_2610BC68C(v31, v30, v32, v39);
    }
    unint64_t v25 = v34[v15];
    ++v26;
    if (v25) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2610BC17C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, char *))
{
  uint64_t v29 = a4;
  uint64_t v23 = a2;
  BOOL v24 = a1;
  uint64_t v6 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    uint64_t v20 = *(void *)(a3 + 56);
    uint64_t v30 = *(void *)(*(void *)(a3 + 48) + 8 * v16);
    sub_2610C1288(v20 + *(void *)(v28 + 72) * v16, (uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    char v21 = v29(&v30, v9);
    uint64_t result = sub_2610C1208((uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
    if (v4) {
      return result;
    }
    if (v21)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v25++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27) {
    return sub_2610BC90C(v24, v23, v25, (void *)a3);
  }
  unint64_t v18 = *(void *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v27) {
    return sub_2610BC90C(v24, v23, v25, (void *)a3);
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v27) {
    return sub_2610BC90C(v24, v23, v25, (void *)a3);
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v27) {
    return sub_2610BC90C(v24, v23, v25, (void *)a3);
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v27) {
      return sub_2610BC90C(v24, v23, v25, (void *)a3);
    }
    unint64_t v18 = *(void *)(v26 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2610BC414(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A418);
  uint64_t result = sub_26111F388();
  uint64_t v9 = result;
  unint64_t v31 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v31[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v31[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v31[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t result = sub_26111F4B8();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2610BC68C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v26 = a1;
  uint64_t v7 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v25 - v12;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A910040);
  uint64_t result = sub_26111F388();
  uint64_t v15 = (void *)result;
  uint64_t v25 = a2;
  if (a2 < 1) {
    unint64_t v16 = 0;
  }
  else {
    unint64_t v16 = *v26;
  }
  uint64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v17 << 6);
    }
    else
    {
      uint64_t v20 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_30;
      }
      if (v20 >= v25) {
        return (uint64_t)v15;
      }
      unint64_t v21 = v26[v20];
      ++v17;
      if (!v21)
      {
        uint64_t v17 = v20 + 1;
        if (v20 + 1 >= v25) {
          return (uint64_t)v15;
        }
        unint64_t v21 = v26[v17];
        if (!v21)
        {
          uint64_t v17 = v20 + 2;
          if (v20 + 2 >= v25) {
            return (uint64_t)v15;
          }
          unint64_t v21 = v26[v17];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v25) {
              return (uint64_t)v15;
            }
            unint64_t v21 = v26[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v17 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_31;
                }
                if (v17 >= v25) {
                  return (uint64_t)v15;
                }
                unint64_t v21 = v26[v17];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v22;
          }
        }
      }
LABEL_24:
      unint64_t v16 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
    }
    sub_2610C1288(a4[6] + *(void *)(v8 + 72) * v19, (uint64_t)v13, type metadata accessor for VUStreamingGallery.Label);
    uint64_t v23 = *(void *)(a4[7] + 8 * v19);
    sub_2610C11A0((uint64_t)v13, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    uint64_t result = sub_2610B7ED0((uint64_t)v11, v23, v15);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2610BC90C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - v10;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9102F8);
  uint64_t result = sub_26111F388();
  uint64_t v13 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v36;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v35) {
        return v13;
      }
      unint64_t v20 = v36[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v35) {
          return v13;
        }
        unint64_t v20 = v36[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v35) {
            return v13;
          }
          unint64_t v20 = v36[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v35) {
              return v13;
            }
            unint64_t v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v35) {
                  return v13;
                }
                unint64_t v20 = v36[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = a4[7];
    uint64_t v23 = a4;
    uint64_t v24 = *(void *)(a4[6] + 8 * v18);
    uint64_t v25 = *(void *)(v37 + 72);
    sub_2610C1288(v22 + v25 * v18, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    sub_2610C11A0((uint64_t)v11, v38, type metadata accessor for VUStreamingGallery.Label);
    uint64_t result = sub_26111F4B8();
    uint64_t v26 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v13 + 48) + 8 * v29) = v24;
    uint64_t result = sub_2610C11A0(v38, *(void *)(v13 + 56) + v29 * v25, type metadata accessor for VUStreamingGallery.Label);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v23;
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2610BCC7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A9102C8);
  uint64_t result = sub_26111F388();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t result = sub_26111F4B8();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2610BCEE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A690);
  uint64_t result = sub_26111F388();
  uint64_t v9 = result;
  unint64_t v31 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v31[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v31[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v31[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t result = sub_26111F4B8();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void (*sub_2610BD154(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_26105D6EC(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_2610BD284;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_26107C3EC();
      goto LABEL_7;
    }
    sub_2610780F0(v14, a3 & 1);
    unint64_t v18 = sub_26105D6EC(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_26111F448();
  __break(1u);
  return result;
}

void sub_2610BD284(uint64_t **a1)
{
  v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (v2)
  {
    unint64_t v4 = v1[3];
    uint64_t v5 = *(void **)v1[2];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_26107E810(v4, v1[1], v2, v5);
    }
  }
  else if ((*a1)[4])
  {
    sub_2610BD978(v1[3], *(void *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_2610BD318(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  unint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_26105D860(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_2610BD448;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_26107D5E8();
      goto LABEL_7;
    }
    sub_261079D00(v14, a3 & 1);
    unint64_t v18 = sub_26105D860(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_26111F448();
  __break(1u);
  return result;
}

void sub_2610BD448(uint64_t **a1, uint64_t a2)
{
}

void (*sub_2610BD460(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  unint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_26105D860(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        void *v8 = v17;
        return sub_2610BD448;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_26107DAA8();
      goto LABEL_7;
    }
    sub_26107A220(v14, a3 & 1);
    unint64_t v18 = sub_26105D860(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_26111F448();
  __break(1u);
  return result;
}

void sub_2610BD590(uint64_t **a1, uint64_t a2, void (*a3)(unint64_t, char *, uint64_t, uint64_t))
{
  char v3 = *a1;
  sub_2610BD650(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1], a3);
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_2610BD5E4(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_2610C4B08;
}

uint64_t (*sub_2610BD614(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_2610BD644;
}

uint64_t sub_2610BD644(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_2610BD650(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, void (*a6)(unint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v12 = type metadata accessor for VUStreamingGallery.Label(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  if (v15)
  {
    uint64_t v16 = *a3;
    if (a2)
    {
      *(void *)(*(void *)(v16 + 56) + 8 * a4) = v15;
    }
    else
    {
      sub_2610C1288(a5, (uint64_t)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VUStreamingGallery.Label);
      a6(a4, v14, v15, v16);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_2610BE68C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_2610BD7A0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_26111F4C8();
        swift_bridgeObjectRetain();
        sub_26111EC48();
        uint64_t v10 = sub_26111F508();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BD978(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_26111F4B8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BDB10(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26111E778();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_26111F128();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      BOOL v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_2610C1ED0(&qword_26A90FF58, MEMORY[0x263F07508]);
        uint64_t v17 = sub_26111EB88();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (_DWORD *)(v22 + 4 * a1);
            unint64_t v24 = (_DWORD *)(v22 + 4 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    char v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    char v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *char v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BDE08(unint64_t a1, uint64_t a2)
{
  return sub_2610BE4A8(a1, a2, MEMORY[0x263F07508]);
}

unint64_t sub_2610BDE20(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26111E778();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_26111F128();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      BOOL v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_2610C1ED0(&qword_26A90FF58, MEMORY[0x263F07508]);
        uint64_t v17 = sub_26111EB88();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            unint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    char v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    char v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *char v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BE118(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_26111F4B8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (_DWORD *)(v15 + 4 * v3);
            uint64_t v17 = (_DWORD *)(v15 + 4 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BE2B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_26111F4B8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A9102D0) - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BE490(unint64_t a1, uint64_t a2)
{
  return sub_2610BE4A8(a1, a2, type metadata accessor for VUStreamingGallery.Label);
}

unint64_t sub_2610BE4A8(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v7);
        unint64_t result = sub_26111F4B8();
        unint64_t v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        uint64_t v16 = (void *)(v11 + 8 * v4);
        if (v4 != v7 || v16 >= v12 + 1) {
          *uint64_t v16 = *v12;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v19 = v18 * v4;
        unint64_t result = v17 + v18 * v4;
        int64_t v20 = v18 * v7;
        unint64_t v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v19 == v20) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BE68C(unint64_t a1, uint64_t a2)
{
  uint64_t v40 = sub_26111E778();
  int64_t v4 = *(void (***)(char *, uint64_t))(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unint64_t v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v6 = *(void *)(v41 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v41);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = a2 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(a2 + 64 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v37 = v4;
    uint64_t v16 = ~v14;
    unint64_t result = sub_26111F128();
    uint64_t v43 = a2 + 64;
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v42 = (result + 1) & v16;
      uint64_t v17 = *(void *)(v6 + 72);
      uint64_t v18 = v37++;
      uint64_t v38 = (void (**)(char *, char *, uint64_t))(v18 + 4);
      uint64_t v19 = v16;
      do
      {
        uint64_t v20 = v19;
        uint64_t v21 = v17;
        int64_t v22 = v17 * v15;
        sub_2610C1288(*(void *)(a2 + 48) + v17 * v15, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        sub_26111F4C8();
        sub_2610C1288((uint64_t)v12, (uint64_t)v9, type metadata accessor for VUStreamingGallery.Label);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v23 = v39;
          uint64_t v24 = v40;
          (*v38)(v39, v9, v40);
          sub_2610C1ED0(&qword_26A90FF58, MEMORY[0x263F07508]);
          sub_26111EB98();
          (*v37)(v23, v24);
        }
        else
        {
          sub_26111F4D8();
        }
        uint64_t v25 = sub_26111F508();
        unint64_t result = sub_2610C1208((uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
        uint64_t v19 = v20;
        unint64_t v26 = v25 & v20;
        if ((uint64_t)a1 >= (uint64_t)v42)
        {
          uint64_t v17 = v21;
          if (v26 < v42) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v17 = v21;
          if (v26 >= v42) {
            goto LABEL_14;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v26)
        {
LABEL_14:
          uint64_t v27 = *(void *)(a2 + 48);
          unint64_t result = v27 + v17 * a1;
          if ((uint64_t)(v17 * a1) < v22 || result >= v27 + v22 + v17)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_19:
            uint64_t v19 = v20;
          }
          else if (v17 * a1 != v22)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
            goto LABEL_19;
          }
          uint64_t v28 = *(void *)(a2 + 56);
          BOOL v29 = (void *)(v28 + 8 * a1);
          uint64_t v30 = (void *)(v28 + 8 * v15);
          if (a1 != v15 || (a1 = v15, v29 >= v30 + 1))
          {
            *BOOL v29 = *v30;
            a1 = v15;
          }
        }
LABEL_5:
        unint64_t v15 = (v15 + 1) & v19;
      }
      while (((*(void *)(v43 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    unint64_t v31 = (uint64_t *)(v43 + 8 * (a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v31 = (uint64_t *)(v13 + 8 * (a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  *unint64_t v31 = v33 & v32;
  uint64_t v34 = *(void *)(a2 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BEAC8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26111E778();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v36 = (result + 1) & v12;
      uint64_t v37 = v13;
      uint64_t v14 = *(void *)(v5 + 72);
      uint64_t v38 = v5 + 16;
      BOOL v35 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v14;
        int64_t v18 = v14 * v11;
        uint64_t v19 = v15;
        v37(v8, *(void *)(a2 + 48) + v14 * v11, v4);
        sub_2610C1ED0(&qword_26A90FF58, MEMORY[0x263F07508]);
        uint64_t v20 = sub_26111EB88();
        unint64_t result = (*v35)(v8, v4);
        uint64_t v15 = v19;
        unint64_t v21 = v20 & v19;
        if (a1 >= (uint64_t)v36)
        {
          if (v21 >= v36 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            unint64_t result = v24 + v17 * a1;
            uint64_t v9 = v16;
            if (v17 * a1 < v18 || (uint64_t v14 = v17, result >= v24 + v18 + v17))
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v14 = v17;
              uint64_t v15 = v19;
            }
            else if (v17 * a1 != v18)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = v25 + 24 * a1;
            uint64_t v27 = (long long *)(v25 + 24 * v11);
            if (a1 != v11 || (a1 = v11, v26 >= (unint64_t)v27 + 24))
            {
              long long v28 = *v27;
              *(void *)(v26 + 16) = *((void *)v27 + 2);
              *(_OWORD *)unint64_t v26 = v28;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v36 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
        uint64_t v14 = v17;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v15;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    BOOL v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *BOOL v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BEDE4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        unint64_t result = sub_26111F4B8();
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1) {
              void *v15 = *v11;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            unint64_t v17 = v16 + 24 * v3;
            int64_t v18 = (long long *)(v16 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              long long v9 = *v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2610BEF90(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_26111F128();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_26111F4C8();
        swift_bridgeObjectRetain();
        sub_26111EC48();
        uint64_t v9 = sub_26111F508();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2610BF168@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 48);
    uint64_t v7 = type metadata accessor for VUStreamingGallery.Label(0);
    return sub_2610C1288(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, type metadata accessor for VUStreamingGallery.Label);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2610BF21C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_2610BF2CC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_26108E970(v3);
    unint64_t v3 = result;
    uint64_t v5 = *(void *)(result + 16);
    if (v5) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v6 = v5 - 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910030);
  uint64_t v9 = *(void *)(v7 - 8);
  sub_261071274(v3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v6, a1, &qword_26A910030);
  *(void *)(v3 + 16) = v6;
  unint64_t *v1 = v3;
  unint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);

  return v8(a1, 0, 1, v7);
}

uint64_t sub_2610BF3EC()
{
  unint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v3 = v1[2];
    if (v3)
    {
LABEL_3:
      uint64_t v4 = v3 - 1;
      uint64_t result = v1[v4 + 4];
      v1[2] = v4;
      *v0 = v1;
      return result;
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_26108E95C(v1);
    unint64_t v1 = (void *)result;
    uint64_t v3 = *(void *)(result + 16);
    if (v3) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s19VisualUnderstanding18VUStreamingGalleryC5LabelO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_26111E778();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v25 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910050);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &v18[*(int *)(v16 + 56)];
  sub_2610C1288(a1, (uint64_t)v18, type metadata accessor for VUStreamingGallery.Label);
  sub_2610C1288(v26, (uint64_t)v19, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2610C1288((uint64_t)v18, (uint64_t)v14, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v22 = *v14 == *(void *)v19;
      goto LABEL_6;
    }
LABEL_8:
    sub_2610718C8((uint64_t)v18, &qword_26A910050);
    char v22 = 0;
    return v22 & 1;
  }
  sub_2610C1288((uint64_t)v18, (uint64_t)v12, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v3);
    goto LABEL_8;
  }
  uint64_t v20 = v25;
  BOOL v21 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v21(v8, v12, v3);
  v21(v6, v19, v3);
  char v22 = sub_26111E758();
  BOOL v23 = *(void (**)(char *, uint64_t))(v20 + 8);
  v23(v6, v3);
  v23(v8, v3);
LABEL_6:
  sub_2610C1208((uint64_t)v18, type metadata accessor for VUStreamingGallery.Label);
  return v22 & 1;
}

uint64_t sub_2610BF780(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x263F8EE78];
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    while (1)
    {
      if (v4 == v7) {
        goto LABEL_24;
      }
      uint64_t v8 = *(void *)(v5 + 8 * v4++);
      uint64_t v9 = *(void *)(a2 + 16);
      if (!v9) {
        goto LABEL_15;
      }
      if (*(void *)(a2 + 32) != v8) {
        break;
      }
LABEL_6:
      if (v4 == v2) {
        return v6;
      }
    }
    if (v9 != 1)
    {
      uint64_t v10 = 5;
      while (1)
      {
        uint64_t v11 = v10 - 3;
        if (__OFADD__(v10 - 4, 1)) {
          break;
        }
        if (*(void *)(a2 + 8 * v10) == v8) {
          goto LABEL_6;
        }
        ++v10;
        if (v11 == v9) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_15:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_26106212C(0, *(void *)(v6 + 16) + 1, 1);
    }
    unint64_t v13 = *(void *)(v6 + 16);
    unint64_t v12 = *(void *)(v6 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t result = sub_26106212C(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v6 + 16) = v13 + 1;
    *(void *)(v6 + 8 * v13 + 32) = v8;
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_2610BF8D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 1) == 0)
  {
LABEL_2:
    return sub_261074318(a1, a2, a3, a4);
  }
  sub_26111F418();
  swift_unknownObjectRetain_n();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_2;
  }
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

unint64_t sub_2610BF9C0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    while (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      if (*(void *)(a4 + 16)) {
        goto LABEL_4;
      }
    }
    BOOL v17 = __OFADD__(v8++, 1);
    if (v17)
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v13) {
      return sub_2610BCC7C(v6, a2, v7, a3);
    }
    unint64_t v18 = *(void *)(v9 + 8 * v8);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
    if (*(void *)(a4 + 16))
    {
LABEL_4:
      uint64_t result = sub_26105D6EC(*(void *)(*(void *)(a3 + 48) + 8 * v16));
      if (v14)
      {
        *(unint64_t *)((char *)v6 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        BOOL v17 = __OFADD__(v7++, 1);
        if (v17)
        {
          __break(1u);
          return sub_2610BCC7C(v6, a2, v7, a3);
        }
      }
    }
  }
  int64_t v19 = v8 + 1;
  if (v8 + 1 >= v13) {
    return sub_2610BCC7C(v6, a2, v7, a3);
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v19 = v8 + 2;
  if (v8 + 2 >= v13) {
    return sub_2610BCC7C(v6, a2, v7, a3);
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v19 = v8 + 3;
  if (v8 + 3 >= v13) {
    return sub_2610BCC7C(v6, a2, v7, a3);
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v13) {
      return sub_2610BCC7C(v6, a2, v7, a3);
    }
    unint64_t v18 = *(void *)(v9 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2610BFB68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  BOOL v29 = a1;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E0);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v30 = 0;
  uint64_t v31 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v16)
      {
        unint64_t v17 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v18 = v17 | (v12 << 6);
      }
      else
      {
        int64_t v19 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_34;
        }
        if (v19 >= v32) {
          return sub_2610BC90C(v29, v28, v30, (void *)a3);
        }
        unint64_t v20 = *(void *)(v31 + 8 * v19);
        ++v12;
        if (!v20)
        {
          int64_t v12 = v19 + 1;
          if (v19 + 1 >= v32) {
            return sub_2610BC90C(v29, v28, v30, (void *)a3);
          }
          unint64_t v20 = *(void *)(v31 + 8 * v12);
          if (!v20)
          {
            int64_t v12 = v19 + 2;
            if (v19 + 2 >= v32) {
              return sub_2610BC90C(v29, v28, v30, (void *)a3);
            }
            unint64_t v20 = *(void *)(v31 + 8 * v12);
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v32) {
                return sub_2610BC90C(v29, v28, v30, (void *)a3);
              }
              unint64_t v20 = *(void *)(v31 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  int64_t v12 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_35;
                  }
                  if (v12 >= v32) {
                    return sub_2610BC90C(v29, v28, v30, (void *)a3);
                  }
                  unint64_t v20 = *(void *)(v31 + 8 * v12);
                  ++v21;
                  if (v20) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v12 = v21;
            }
          }
        }
LABEL_20:
        unint64_t v16 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
      }
      uint64_t v22 = *(void *)(*(void *)(a3 + 48) + 8 * v18);
      sub_2610C1288(*(void *)(a3 + 56) + *(void *)(v33 + 72) * v18, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
      *uint64_t v7 = v22;
      uint64_t result = sub_2610C1288((uint64_t)v11, (uint64_t)v7 + *(int *)(v34 + 48), type metadata accessor for VUStreamingGallery.Label);
      uint64_t v23 = *(void *)(a4 + 16);
      if (v23) {
        break;
      }
LABEL_4:
      sub_2610718C8((uint64_t)v7, &qword_26A9103E0);
      uint64_t result = sub_2610C1208((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    }
    if (*(void *)(a4 + 32) != v22) {
      break;
    }
LABEL_29:
    sub_2610718C8((uint64_t)v7, &qword_26A9103E0);
    uint64_t result = sub_2610C1208((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    *(unint64_t *)((char *)v29 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    if (__OFADD__(v30++, 1))
    {
      __break(1u);
      return sub_2610BC90C(v29, v28, v30, (void *)a3);
    }
  }
  if (v23 == 1) {
    goto LABEL_4;
  }
  uint64_t v24 = 5;
  while (1)
  {
    uint64_t v25 = v24 - 3;
    if (__OFADD__(v24 - 4, 1)) {
      break;
    }
    if (*(void *)(a4 + 8 * v24) == v22) {
      goto LABEL_29;
    }
    ++v24;
    if (v25 == v23) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2610BFED4(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2610BFB68((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2610BFB68((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x26122E4F0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_2610C0090(float *__src, float *a2, unint64_t a3, float *__dst, uint64_t a5)
{
  unsigned int v6 = __dst;
  unint64_t v7 = a2;
  size_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 4;
  unint64_t v60 = __dst;
  BOOL v61 = __src;
  unint64_t v57 = (unsigned char *)a3;
  if (v11 < v14)
  {
    if (v9 < -15) {
      goto LABEL_60;
    }
    size_t v15 = 4 * v11;
    if (__dst != __src || &__src[v15] <= __dst)
    {
      memmove(__dst, __src, v15 * 4);
      a3 = (unint64_t)v57;
    }
    unint64_t v16 = (char *)&v6[v15];
    double v59 = (char *)&v6[v15];
    if ((unint64_t)v7 < a3 && (unint64_t)(v9 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      unint64_t v17 = (uint64_t *)(a5 + 32);
      swift_beginAccess();
      unint64_t v18 = (unint64_t)v57;
      while (1)
      {
        float v19 = v7[2];
        float v20 = v6[2];
        if (v19 == v20)
        {
          uint64_t v21 = *v17;
          if (!*(void *)(*v17 + 16)) {
            goto LABEL_57;
          }
          uint64_t v22 = *(void *)v6;
          unint64_t v23 = sub_26105D6EC(*(void *)v7);
          if ((v24 & 1) == 0) {
            goto LABEL_58;
          }
          uint64_t v25 = v8;
          uint64_t v26 = v6;
          uint64_t v27 = *(void *)(v21 + 56);
          double v28 = *(double *)(v27 + 8 * v23);
          unint64_t v29 = sub_26105D6EC(v22);
          if ((v30 & 1) == 0) {
            goto LABEL_59;
          }
          double v31 = *(double *)(v27 + 8 * v29);
          unsigned int v6 = v26;
          size_t v8 = v25;
          unint64_t v18 = (unint64_t)v57;
          if (v31 >= v28)
          {
LABEL_23:
            if (v8 != v6) {
              *(_OWORD *)size_t v8 = *(_OWORD *)v6;
            }
            v6 += 4;
            unint64_t v60 = v6;
            int64_t v32 = v7;
            goto LABEL_26;
          }
        }
        else if (v20 >= v19)
        {
          goto LABEL_23;
        }
        int64_t v32 = v7 + 4;
        if (v8 < v7 || v8 >= v32 || v8 != v7) {
          *(_OWORD *)size_t v8 = *(_OWORD *)v7;
        }
LABEL_26:
        v8 += 4;
        if (v6 < (float *)v16)
        {
          unint64_t v7 = v32;
          if ((unint64_t)v32 < v18) {
            continue;
          }
        }
        BOOL v61 = v8;
        break;
      }
    }
LABEL_53:
    sub_26108B9F0(&v61, &v60, &v59);
    return 1;
  }
  if (v12 < -15) {
    goto LABEL_60;
  }
  uint64_t v33 = 4 * v14;
  if (__dst != a2 || &a2[v33] <= __dst) {
    memmove(__dst, a2, 16 * v14);
  }
  uint64_t v34 = (char *)&v6[v33];
  double v59 = (char *)&v6[v33];
  BOOL v61 = v7;
  if (v8 >= v7 || (unint64_t)(v12 - 16) > 0xFFFFFFFFFFFFFFE0) {
    goto LABEL_53;
  }
  char v58 = (uint64_t *)(a5 + 32);
  swift_beginAccess();
  BOOL v35 = v57;
  unint64_t v36 = v7;
  while (1)
  {
    uint64_t v37 = v34 - 16;
    float v38 = *((float *)v34 - 2);
    uint64_t v40 = *((void *)v36 - 2);
    v36 -= 4;
    uint64_t v39 = v40;
    float v41 = v36[2];
    if (v38 != v41)
    {
      uint64_t v55 = v35 - 16;
      if (v41 < v38) {
        goto LABEL_41;
      }
      goto LABEL_47;
    }
    uint64_t v42 = *v58;
    if (!*(void *)(*v58 + 16)) {
      break;
    }
    unint64_t v43 = sub_26105D6EC(*((void *)v34 - 2));
    if ((v44 & 1) == 0) {
      goto LABEL_55;
    }
    uint64_t v45 = v39;
    uint64_t v46 = v7;
    uint64_t v47 = v34;
    unint64_t v48 = v8;
    char v49 = v6;
    uint64_t v50 = *(void *)(v42 + 56);
    double v51 = *(double *)(v50 + 8 * v43);
    unint64_t v52 = sub_26105D6EC(v45);
    if ((v53 & 1) == 0) {
      goto LABEL_56;
    }
    double v54 = *(double *)(v50 + 8 * v52);
    uint64_t v55 = v35 - 16;
    unsigned int v6 = v49;
    size_t v8 = v48;
    uint64_t v34 = v47;
    unint64_t v7 = v46;
    if (v54 < v51)
    {
LABEL_41:
      if (v35 != (unsigned char *)v7 || v55 >= (_OWORD *)v7) {
        *uint64_t v55 = *(_OWORD *)v36;
      }
      BOOL v61 = v36;
      if (v36 <= v8) {
        goto LABEL_53;
      }
      goto LABEL_52;
    }
LABEL_47:
    double v59 = v37;
    if (v35 < v34 || v55 >= (_OWORD *)v34 || v35 != v34) {
      *uint64_t v55 = *(_OWORD *)v37;
    }
    unint64_t v36 = v7;
    uint64_t v34 = v37;
    if (v7 <= v8) {
      goto LABEL_53;
    }
LABEL_52:
    unint64_t v7 = v36;
    BOOL v35 = v55;
    if (v34 <= (char *)v6) {
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  swift_release();
  uint64_t result = sub_26111F398();
  __break(1u);
  return result;
}

uint64_t sub_2610C0440(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  swift_retain_n();
  uint64_t v5 = sub_26111F3D8();
  uint64_t v158 = v4;
  uint64_t v159 = a2;
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_183;
    }
    if ((unint64_t)v4 > 1)
    {
      uint64_t v124 = *a1;
      uint64_t v125 = a2 + 32;
      swift_retain();
      uint64_t v126 = v124 + 16;
      uint64_t v127 = -1;
      for (uint64_t i = 1; i != v4; ++i)
      {
        swift_beginAccess();
        uint64_t v165 = v127;
        uint64_t v167 = v126;
        do
        {
          float v129 = *(float *)(v126 + 8);
          uint64_t v130 = *(void *)(v126 - 16);
          float v131 = *(float *)(v126 - 8);
          if (v129 == v131)
          {
            uint64_t v132 = *(void *)v125;
            if (!*(void *)(*(void *)v125 + 16))
            {
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
              goto LABEL_181;
            }
            unint64_t v133 = sub_26105D6EC(*(void *)v126);
            if ((v134 & 1) == 0) {
              goto LABEL_154;
            }
            uint64_t v135 = *(void *)(v132 + 56);
            double v136 = *(double *)(v135 + 8 * v133);
            unint64_t v137 = sub_26105D6EC(v130);
            if ((v138 & 1) == 0) {
              goto LABEL_155;
            }
            if (*(double *)(v135 + 8 * v137) >= v136) {
              break;
            }
          }
          else if (v131 >= v129)
          {
            break;
          }
          if (!v124) {
            goto LABEL_190;
          }
          uint64_t v139 = *(void *)v126;
          int v140 = *(_DWORD *)(v126 + 8);
          *(_OWORD *)uint64_t v126 = *(_OWORD *)(v126 - 16);
          *(_DWORD *)(v126 - 8) = v140;
          *(void *)(v126 - 16) = v139;
          v126 -= 16;
        }
        while (!__CFADD__(v127++, 1));
        uint64_t v126 = v167 + 16;
        uint64_t v127 = v165 - 1;
      }
    }
    swift_release_n();
    return swift_release();
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_195;
  }
  uint64_t v7 = v5;
  v150 = a1;
  if (v4 >= 2)
  {
    uint64_t v8 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A910448);
    uint64_t v9 = sub_26111EDD8();
    *(void *)(v9 + 16) = v8;
    uint64_t v152 = v9;
    __dst = (float *)(v9 + 32);
    goto LABEL_12;
  }
  __dst = (float *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v152 = MEMORY[0x263F8EE78];
  if (v4 != 1)
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    unint64_t v70 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_137:
    v162 = v13;
    if (v70 >= 2)
    {
      uint64_t v142 = *v150;
      do
      {
        unint64_t v143 = v70 - 2;
        if (v70 < 2) {
          goto LABEL_177;
        }
        if (!v142) {
          goto LABEL_194;
        }
        uint64_t v144 = *(void *)&v162[16 * v143 + 32];
        uint64_t v145 = *(void *)&v162[16 * v70 + 24];
        v146 = (float *)(v142 + 16 * *(void *)&v162[16 * v70 + 16]);
        swift_retain();
        sub_2610C0090((float *)(v142 + 16 * v144), v146, v142 + 16 * v145, __dst, v159);
        if (v163) {
          goto LABEL_152;
        }
        swift_release();
        if (v145 < v144) {
          goto LABEL_178;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v162 = sub_26108BD80((uint64_t)v162);
        }
        if (v143 >= *((void *)v162 + 2)) {
          goto LABEL_179;
        }
        v147 = &v162[16 * v143 + 32];
        *(void *)v147 = v144;
        *((void *)v147 + 1) = v145;
        unint64_t v148 = *((void *)v162 + 2);
        if (v70 > v148) {
          goto LABEL_180;
        }
        memmove(&v162[16 * v70 + 16], &v162[16 * v70 + 32], 16 * (v148 - v70));
        *((void *)v162 + 2) = v148 - 1;
        unint64_t v70 = v148 - 1;
      }
      while (v148 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v152 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_12:
  uint64_t v10 = *a1;
  uint64_t v164 = a2 + 32;
  swift_beginAccess();
  uint64_t v11 = v10;
  uint64_t v12 = 0;
  uint64_t v151 = v10 + 24;
  uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  uint64_t v166 = v11;
  uint64_t v154 = v7;
  while (2)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v12 + 1;
    uint64_t v155 = v12;
    if (v12 + 1 >= v4)
    {
LABEL_45:
      if (v15 >= v4) {
        goto LABEL_71;
      }
      goto LABEL_46;
    }
    uint64_t v16 = v11 + 16 * v15;
    float v17 = *(float *)(v16 + 8);
    uint64_t v18 = v11 + 16 * v12;
    float v19 = *(float *)(v18 + 8);
    if (v17 == v19)
    {
      uint64_t v20 = *(void *)v164;
      if (!*(void *)(*(void *)v164 + 16)) {
        goto LABEL_184;
      }
      uint64_t v21 = *(void *)v18;
      unint64_t v22 = sub_26105D6EC(*(void *)v16);
      if ((v23 & 1) == 0) {
        goto LABEL_185;
      }
      char v24 = v13;
      uint64_t v25 = *(void *)(v20 + 56);
      double v26 = *(double *)(v25 + 8 * v22);
      unint64_t v27 = sub_26105D6EC(v21);
      if ((v28 & 1) == 0) {
        goto LABEL_186;
      }
      int v29 = *(double *)(v25 + 8 * v27) < v26;
      uint64_t v11 = v166;
    }
    else
    {
      char v24 = v13;
      int v29 = v19 < v17;
    }
    uint64_t v15 = v14 + 2;
    if (v14 + 2 >= v4)
    {
LABEL_31:
      if (!v29) {
        goto LABEL_44;
      }
      goto LABEL_32;
    }
    uint64_t v30 = v151 + 16 * v14;
    uint64_t v31 = v30;
    while (1)
    {
      float v32 = *(float *)(v31 + 16);
      v31 += 16;
      float v33 = v32;
      if (v32 == *(float *)v30) {
        break;
      }
      if (v29 != *(float *)v30 < v33) {
        goto LABEL_43;
      }
LABEL_29:
      ++v15;
      uint64_t v30 = v31;
      if (v158 == v15)
      {
        uint64_t v4 = v158;
        uint64_t v15 = v158;
        goto LABEL_31;
      }
    }
    uint64_t v34 = *(void *)v164;
    if (!*(void *)(*(void *)v164 + 16)) {
      goto LABEL_173;
    }
    uint64_t v35 = *(void *)(v30 - 8);
    unint64_t v36 = sub_26105D6EC(*(void *)(v30 + 8));
    if ((v37 & 1) == 0) {
      goto LABEL_174;
    }
    uint64_t v38 = *(void *)(v34 + 56);
    double v39 = *(double *)(v38 + 8 * v36);
    unint64_t v40 = sub_26105D6EC(v35);
    if ((v41 & 1) == 0) {
      goto LABEL_175;
    }
    int v42 = *(double *)(v38 + 8 * v40) < v39;
    uint64_t v11 = v166;
    uint64_t v14 = v155;
    if (v29 == v42) {
      goto LABEL_29;
    }
LABEL_43:
    uint64_t v4 = v158;
    if (!v29)
    {
LABEL_44:
      uint64_t v13 = v24;
      goto LABEL_45;
    }
LABEL_32:
    if (v15 < v14) {
      goto LABEL_189;
    }
    if (v14 < v15)
    {
      uint64_t v43 = 16 * v15 - 16;
      uint64_t v44 = 16 * v14;
      uint64_t v45 = v15;
      uint64_t v46 = v14;
      uint64_t v13 = v24;
      while (1)
      {
        if (v46 != --v45)
        {
          if (!v11) {
            goto LABEL_193;
          }
          unint64_t v48 = (_OWORD *)(v11 + v44);
          char v49 = (_OWORD *)(v11 + v43);
          uint64_t v50 = *(void *)(v11 + v44);
          int v51 = *(_DWORD *)(v11 + v44 + 8);
          if (v44 != v43 || v48 >= v49 + 1) {
            *unint64_t v48 = *v49;
          }
          uint64_t v47 = v11 + v43;
          *(void *)uint64_t v47 = v50;
          *(_DWORD *)(v47 + 8) = v51;
        }
        ++v46;
        v43 -= 16;
        v44 += 16;
        if (v46 >= v45) {
          goto LABEL_45;
        }
      }
    }
    uint64_t v13 = v24;
    if (v15 >= v4) {
      goto LABEL_71;
    }
LABEL_46:
    if (!__OFSUB__(v15, v14))
    {
      if (v15 - v14 >= v7) {
        goto LABEL_71;
      }
      if (__OFADD__(v14, v7)) {
        goto LABEL_187;
      }
      if (v14 + v7 >= v4) {
        uint64_t v52 = v4;
      }
      else {
        uint64_t v52 = v14 + v7;
      }
      if (v52 < v14) {
        goto LABEL_188;
      }
      if (v15 == v52) {
        goto LABEL_70;
      }
      v160 = v13;
      uint64_t v53 = v11 + 16 * v15;
      while (2)
      {
        uint64_t v54 = v53;
        uint64_t v55 = v14;
        while (2)
        {
          float v56 = *(float *)(v54 + 8);
          uint64_t v57 = *(void *)(v54 - 16);
          float v58 = *(float *)(v54 - 8);
          if (v56 != v58)
          {
            if (v58 >= v56) {
              goto LABEL_55;
            }
LABEL_64:
            if (!v11) {
              goto LABEL_191;
            }
            uint64_t v66 = *(void *)v54;
            int v67 = *(_DWORD *)(v54 + 8);
            *(_OWORD *)uint64_t v54 = *(_OWORD *)(v54 - 16);
            *(_DWORD *)(v54 - 8) = v67;
            *(void *)(v54 - 16) = v66;
            v54 -= 16;
            if (v15 == ++v55) {
              goto LABEL_55;
            }
            continue;
          }
          break;
        }
        uint64_t v59 = *(void *)v164;
        if (!*(void *)(*(void *)v164 + 16)) {
          goto LABEL_156;
        }
        unint64_t v60 = sub_26105D6EC(*(void *)v54);
        if ((v61 & 1) == 0) {
          goto LABEL_157;
        }
        uint64_t v62 = *(void *)(v59 + 56);
        double v63 = *(double *)(v62 + 8 * v60);
        unint64_t v64 = sub_26105D6EC(v57);
        if ((v65 & 1) == 0) {
          goto LABEL_158;
        }
        uint64_t v11 = v166;
        if (*(double *)(v62 + 8 * v64) < v63) {
          goto LABEL_64;
        }
LABEL_55:
        ++v15;
        v53 += 16;
        uint64_t v14 = v155;
        if (v15 != v52) {
          continue;
        }
        break;
      }
      uint64_t v15 = v52;
      uint64_t v13 = v160;
LABEL_70:
      uint64_t v7 = v154;
LABEL_71:
      if (v15 >= v14)
      {
        uint64_t v153 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_26108B8F4(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v69 = *((void *)v13 + 2);
        unint64_t v68 = *((void *)v13 + 3);
        unint64_t v70 = v69 + 1;
        uint64_t v11 = v166;
        if (v69 >= v68 >> 1)
        {
          v123 = sub_26108B8F4((char *)(v68 > 1), v69 + 1, 1, v13);
          uint64_t v11 = v166;
          uint64_t v13 = v123;
        }
        *((void *)v13 + 2) = v70;
        v71 = v13 + 32;
        uint64_t v72 = &v13[16 * v69 + 32];
        *(void *)uint64_t v72 = v14;
        *((void *)v72 + 1) = v153;
        if (!v69)
        {
          unint64_t v70 = 1;
LABEL_120:
          uint64_t v4 = v158;
          uint64_t v12 = v153;
          if (v153 >= v158) {
            goto LABEL_137;
          }
          continue;
        }
        v161 = v13;
        v156 = v13 + 32;
        while (2)
        {
          unint64_t v73 = v70 - 1;
          if (v70 >= 4)
          {
            v78 = &v71[16 * v70];
            uint64_t v79 = *((void *)v78 - 8);
            uint64_t v80 = *((void *)v78 - 7);
            BOOL v84 = __OFSUB__(v80, v79);
            uint64_t v81 = v80 - v79;
            if (v84) {
              goto LABEL_163;
            }
            uint64_t v83 = *((void *)v78 - 6);
            uint64_t v82 = *((void *)v78 - 5);
            BOOL v84 = __OFSUB__(v82, v83);
            uint64_t v76 = v82 - v83;
            char v77 = v84;
            if (v84) {
              goto LABEL_164;
            }
            unint64_t v85 = v70 - 2;
            v86 = &v71[16 * v70 - 32];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v84 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v84) {
              goto LABEL_166;
            }
            BOOL v84 = __OFADD__(v76, v89);
            uint64_t v90 = v76 + v89;
            if (v84) {
              goto LABEL_169;
            }
            if (v90 >= v81)
            {
              v108 = &v71[16 * v73];
              uint64_t v110 = *(void *)v108;
              uint64_t v109 = *((void *)v108 + 1);
              BOOL v84 = __OFSUB__(v109, v110);
              uint64_t v111 = v109 - v110;
              if (v84) {
                goto LABEL_176;
              }
              BOOL v101 = v76 < v111;
            }
            else
            {
LABEL_91:
              if (v77) {
                goto LABEL_165;
              }
              unint64_t v85 = v70 - 2;
              v91 = &v71[16 * v70 - 32];
              uint64_t v93 = *(void *)v91;
              uint64_t v92 = *((void *)v91 + 1);
              BOOL v94 = __OFSUB__(v92, v93);
              uint64_t v95 = v92 - v93;
              char v96 = v94;
              if (v94) {
                goto LABEL_168;
              }
              v97 = &v71[16 * v73];
              uint64_t v99 = *(void *)v97;
              uint64_t v98 = *((void *)v97 + 1);
              BOOL v84 = __OFSUB__(v98, v99);
              uint64_t v100 = v98 - v99;
              if (v84) {
                goto LABEL_171;
              }
              if (__OFADD__(v95, v100)) {
                goto LABEL_172;
              }
              if (v95 + v100 < v76) {
                goto LABEL_103;
              }
              BOOL v101 = v76 < v100;
            }
            if (v101) {
              unint64_t v73 = v85;
            }
          }
          else
          {
            if (v70 == 3)
            {
              uint64_t v75 = *((void *)v13 + 4);
              uint64_t v74 = *((void *)v13 + 5);
              BOOL v84 = __OFSUB__(v74, v75);
              uint64_t v76 = v74 - v75;
              char v77 = v84;
              goto LABEL_91;
            }
            uint64_t v102 = *((void *)v13 + 4);
            uint64_t v103 = *((void *)v13 + 5);
            BOOL v84 = __OFSUB__(v103, v102);
            uint64_t v95 = v103 - v102;
            char v96 = v84;
LABEL_103:
            if (v96) {
              goto LABEL_167;
            }
            v104 = &v71[16 * v73];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v84 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v84) {
              goto LABEL_170;
            }
            if (v107 < v95) {
              goto LABEL_120;
            }
          }
          unint64_t v112 = v73 - 1;
          if (v73 - 1 >= v70) {
            goto LABEL_159;
          }
          if (!v11) {
            goto LABEL_192;
          }
          v113 = &v71[16 * v112];
          v114 = v71;
          uint64_t v115 = *(void *)v113;
          unint64_t v116 = v73;
          v117 = &v114[16 * v73];
          uint64_t v118 = *((void *)v117 + 1);
          v119 = (float *)(v11 + 16 * *(void *)v113);
          v120 = (float *)(v11 + 16 * *(void *)v117);
          unint64_t v121 = v11 + 16 * v118;
          swift_retain();
          sub_2610C0090(v119, v120, v121, __dst, v159);
          if (v163)
          {
LABEL_152:
            swift_bridgeObjectRelease();
            swift_release();
            *(void *)(v152 + 16) = 0;
            swift_release_n();
            return swift_bridgeObjectRelease();
          }
          swift_release();
          if (v118 < v115) {
            goto LABEL_160;
          }
          uint64_t v13 = v161;
          if (v116 > *((void *)v161 + 2)) {
            goto LABEL_161;
          }
          *(void *)v113 = v115;
          v71 = v156;
          *(void *)&v156[16 * v112 + 8] = v118;
          unint64_t v122 = *((void *)v161 + 2);
          if (v116 >= v122) {
            goto LABEL_162;
          }
          unint64_t v70 = v122 - 1;
          memmove(v117, v117 + 16, 16 * (v122 - 1 - v116));
          *((void *)v161 + 2) = v122 - 1;
          uint64_t v7 = v154;
          uint64_t v11 = v166;
          if (v122 <= 2) {
            goto LABEL_120;
          }
          continue;
        }
      }
LABEL_181:
      __break(1u);
    }
    break;
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  swift_release_n();
  __break(1u);
LABEL_192:
  swift_release_n();
  __break(1u);
LABEL_193:
  swift_release_n();
  __break(1u);
LABEL_194:
  swift_release_n();
  __break(1u);
LABEL_195:
  swift_release_n();
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2610C0E4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_26108BE20(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_2610C0440(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t type metadata accessor for VUStreamingGallery(uint64_t a1)
{
  return sub_26106A630(a1, qword_26B40A2C8);
}

uint64_t sub_2610C0F10(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(int64x2_t *)(v4 + 48) = vdupq_n_s64(0x64uLL);
  *(void *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 72) = 1;
  *(_OWORD *)(v4 + 80) = xmmword_261121160;
  *(_WORD *)(v4 + 96) = 0;
  *(_OWORD *)(v4 + 100) = xmmword_261121170;
  *(void *)(v4 + 120) = 100;
  uint64_t v9 = v4 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_logger;
  sub_26111EAD8();
  uint64_t v10 = v4 + OBJC_IVAR____TtC19VisualUnderstanding18VUStreamingGallery_signposter;
  sub_26111EA58();
  type metadata accessor for VUStreamingIndex();
  swift_allocObject();
  uint64_t v11 = sub_261099F08();
  if (v5)
  {
    uint64_t v13 = sub_26111EAE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v9, v13);
    uint64_t v14 = sub_26111EA68();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v10, v14);
    type metadata accessor for VUStreamingGallery(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v4 + 16) = v11;
    swift_allocObject();
    uint64_t v12 = sub_261099F08();
    uint64_t v16 = MEMORY[0x263F8EE80];
    *(void *)(v4 + 24) = v12;
    *(void *)(v4 + 32) = v16;
    *(void *)(v4 + 40) = v16;
    *(void *)(v4 + 48) = a1;
    *(void *)(v4 + 56) = a2;
    *(unsigned char *)(v4 + 97) = a3 & 1;
    *(unsigned char *)(v4 + 96) = a4 & 1;
  }
  return v4;
}

uint64_t type metadata accessor for VUStreamingGallery.Label(uint64_t a1)
{
  return sub_26106A630(a1, qword_26B40A500);
}

uint64_t type metadata accessor for VUStreamingGallery.Tag(uint64_t a1)
{
  return sub_26106A630(a1, (uint64_t *)&unk_26A910410);
}

uint64_t sub_2610C11A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2610C1208(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2610C1268@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2610B6BC8(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t sub_2610C1288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s19VisualUnderstanding18VUStreamingGalleryC5LabelO09isUnknownE05labelSbAE_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_26111E778();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9105B0);
  MEMORY[0x270FA5388](v47);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v44 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char **)((char *)&v44 - v20);
  MEMORY[0x270FA5388](v19);
  char v23 = (char *)&v44 - v22;
  sub_2610C1288(a1, (uint64_t)&v44 - v22, type metadata accessor for VUStreamingGallery.Label);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = v9;
    uint64_t v45 = v23;
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    sub_2610C1288(a1, (uint64_t)v18, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v24;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v14, v18, v25);
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v27 = 1;
      uint64_t v26 = v24;
    }
    uint64_t v29 = (uint64_t)v5;
    uint64_t v30 = v25;
    uint64_t v31 = (uint64_t)v12;
    uint64_t v32 = (uint64_t)v14;
    uint64_t v33 = (uint64_t)v45;
    uint64_t v34 = v47;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v32, v27, 1, v25);
    sub_26111E728();
    uint64_t v35 = v29 + *(int *)(v34 + 48);
    unint64_t v36 = &qword_26B40AC70;
    sub_261071864(v32, v29, &qword_26B40AC70);
    sub_261071864(v31, v35, &qword_26B40AC70);
    char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v37(v29, 1, v30) == 1)
    {
      sub_2610718C8(v31, &qword_26B40AC70);
      sub_2610718C8(v32, &qword_26B40AC70);
      if (v37(v35, 1, v30) == 1)
      {
        char v28 = -1;
      }
      else
      {
        unint64_t v36 = (uint64_t *)&unk_26A9105B0;
        char v28 = 0;
      }
    }
    else
    {
      uint64_t v38 = (uint64_t)v44;
      sub_261071864(v29, (uint64_t)v44, &qword_26B40AC70);
      unsigned int v39 = v37(v35, 1, v30);
      uint64_t v40 = v38;
      if (v39 == 1)
      {
        sub_2610718C8(v31, &qword_26B40AC70);
        sub_2610718C8(v32, &qword_26B40AC70);
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v38, v30);
        char v28 = 0;
        unint64_t v36 = (uint64_t *)&unk_26A9105B0;
      }
      else
      {
        char v41 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v46, v35, v30);
        sub_2610C1ED0(&qword_26A90FF60, MEMORY[0x263F07508]);
        char v28 = sub_26111EBB8();
        int v42 = *(void (**)(char *, uint64_t))(v26 + 8);
        v42(v41, v30);
        unint64_t v36 = &qword_26B40AC70;
        sub_2610718C8(v31, &qword_26B40AC70);
        sub_2610718C8(v32, &qword_26B40AC70);
        v42((char *)v40, v30);
      }
    }
    sub_2610718C8(v29, v36);
    sub_2610C1208(v33, type metadata accessor for VUStreamingGallery.Label);
  }
  else
  {
    sub_2610C1288(a1, (uint64_t)v21, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2610C1208((uint64_t)v21, type metadata accessor for VUStreamingGallery.Label);
      char v28 = 0;
    }
    else
    {
      char v28 = *v21 == -1;
    }
  }
  return v28 & 1;
}

uint64_t sub_2610C188C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2610C18DC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for VUStreamingGallery.Recognition(uint64_t a1)
{
  return sub_26106A630(a1, (uint64_t *)&unk_26A910420);
}

uint64_t sub_2610C190C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E0);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0;
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v31 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v32 = (unint64_t)(v15 + 63) >> 6;
LABEL_4:
  uint64_t v30 = v12;
  while (v17)
  {
    unint64_t v18 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v19 = v18 | (v13 << 6);
LABEL_19:
    uint64_t v23 = *(void *)(*(void *)(a3 + 48) + 8 * v19);
    sub_2610C1288(*(void *)(a3 + 56) + *(void *)(v33 + 72) * v19, (uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    *uint64_t v7 = v23;
    sub_2610C1288((uint64_t)v11, (uint64_t)v7 + *(int *)(v34 + 48), type metadata accessor for VUStreamingGallery.Label);
    if (*(void *)(a4 + 16))
    {
      sub_26105D6EC(v23);
      char v25 = v24;
      sub_2610718C8((uint64_t)v7, &qword_26A9103E0);
      uint64_t result = sub_2610C1208((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
      if (v25)
      {
        uint64_t v26 = v30;
        *(unint64_t *)((char *)v29 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        BOOL v20 = __OFADD__(v26, 1);
        uint64_t v12 = v26 + 1;
        if (!v20) {
          goto LABEL_4;
        }
        __break(1u);
        return sub_2610BC90C(v29, v28, v30, (void *)a3);
      }
    }
    else
    {
      sub_2610718C8((uint64_t)v7, &qword_26A9103E0);
      uint64_t result = sub_2610C1208((uint64_t)v11, type metadata accessor for VUStreamingGallery.Label);
    }
  }
  BOOL v20 = __OFADD__(v13++, 1);
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v13 >= v32) {
    return sub_2610BC90C(v29, v28, v30, (void *)a3);
  }
  unint64_t v21 = *(void *)(v31 + 8 * v13);
  if (v21)
  {
LABEL_18:
    unint64_t v17 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
    goto LABEL_19;
  }
  int64_t v22 = v13 + 1;
  if (v13 + 1 >= v32) {
    return sub_2610BC90C(v29, v28, v30, (void *)a3);
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v13 + 2;
  if (v13 + 2 >= v32) {
    return sub_2610BC90C(v29, v28, v30, (void *)a3);
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v13 + 3;
  if (v13 + 3 >= v32) {
    return sub_2610BC90C(v29, v28, v30, (void *)a3);
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v13 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v32) {
      return sub_2610BC90C(v29, v28, v30, (void *)a3);
    }
    unint64_t v21 = *(void *)(v31 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2610C1C44(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2610C190C((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2610C190C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x26122E4F0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_2610C1E00(void *a1, uint64_t a2)
{
  return sub_2610B761C(a1, a2, *(void *)(v2 + 16)) & 1;
}

uint64_t sub_2610C1E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2610C1E88()
{
  return sub_2610C1ED0(&qword_26A910400, (void (*)(uint64_t))type metadata accessor for VUStreamingGallery.Label);
}

uint64_t sub_2610C1ED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2610C1F1C()
{
  unint64_t result = qword_26A910408;
  if (!qword_26A910408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910408);
  }
  return result;
}

uint64_t sub_2610C1F70()
{
  return type metadata accessor for VUStreamingGallery(0);
}

uint64_t sub_2610C1F78()
{
  uint64_t result = sub_26111EAE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26111EA68();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for VUStreamingGallery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VUStreamingGallery);
}

uint64_t dispatch thunk of VUStreamingGallery.observationsByEntity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of VUStreamingGallery.__allocating_init(maximumIdentities:maximumObservationsPerIdentity:autoUpdate:isStreamingEnabled:expirationInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 488))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of VUStreamingGallery.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of VUStreamingGallery.add(observations:observationIdentifiers:trackIdentifiers:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of VUStreamingGallery.add(observation:observationIdentifier:trackIdentifier:context:ignoreLowConfidence:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 520))(a1, a2, a3 & 1);
}

{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 528))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of VUStreamingGallery.add(observation:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of VUStreamingGallery.add(observations:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of VUStreamingGallery.tag(_:with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of VUStreamingGallery.update(maxKeyFacesPerCluster:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of VUStreamingGallery.update(maxKeyFacesPerCluster:sortBy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of VUStreamingGallery.tag(observationIdentifier:tag:tagType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of VUStreamingGallery.recognize(observation:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of VUStreamingGallery.recognize(observation:context:k:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of VUStreamingGallery.recognize(observation:k:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of VUStreamingGallery.autoUpdate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of VUStreamingGallery.update()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of VUStreamingGallery.observationsCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of VUStreamingGallery.torsoObservationsCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of VUStreamingGallery.trackID(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of VUStreamingGallery.observations(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of VUStreamingGallery.entities()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of VUStreamingGallery.remove(trackIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of VUStreamingGallery.needUpdate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of VUStreamingGallery.remove(identifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of VUStreamingGallery.removeTorsoObservations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of VUStreamingGallery.removeTorsoObservations(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of VUStreamingGallery.expirationEligiblePersonObservations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of VUStreamingGallery.expirationEligibleTorsoObservations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of VUStreamingGallery.expirationEligibleObservationsByEntity()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t *initializeBufferWithCopyOfBuffer for VUStreamingGallery.Label(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_26111E778();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for VUStreamingGallery.Label(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_26111E778();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26111E778();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26111E778();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_26111E778();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VUStreamingGallery.Label(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_26111E778();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2610C2CAC()
{
  uint64_t result = sub_26111E778();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.Configuration()
{
  return &type metadata for VUStreamingGallery.Configuration;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUStreamingGallery.Tag(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_26111E778();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VUStreamingGallery.Tag(uint64_t a1)
{
  uint64_t v2 = sub_26111E778();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for VUStreamingGallery.Tag(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_26111E778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for VUStreamingGallery.Tag(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2610C1208(a1, type metadata accessor for VUStreamingGallery.Tag);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_26111E778();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for VUStreamingGallery.Tag(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_26111E778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for VUStreamingGallery.Tag(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2610C1208(a1, type metadata accessor for VUStreamingGallery.Tag);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_26111E778();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2610C31F8()
{
  uint64_t result = sub_26111E778();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VUStreamingGallery.ObservationMatchType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610C334CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.ObservationMatchType()
{
  return &type metadata for VUStreamingGallery.ObservationMatchType;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.ClusterResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.ClusterResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.ClusterResult()
{
  return &type metadata for VUStreamingGallery.ClusterResult;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.RecognitionResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.RecognitionResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VUStreamingGallery.RecognitionResult()
{
  return &type metadata for VUStreamingGallery.RecognitionResult;
}

uint64_t *initializeBufferWithCopyOfBuffer for VUStreamingGallery.Recognition(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for VUStreamingGallery.Label(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910300);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_26111E778();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    int64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for VUStreamingGallery.Tag(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v18 = sub_26111E778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for VUStreamingGallery.Recognition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VUStreamingGallery.Label(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_26111E778();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for VUStreamingGallery.Tag(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = sub_26111E778();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v6, v9);
  }
  return result;
}

char *initializeWithCopy for VUStreamingGallery.Recognition(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910300);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26111E778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[6];
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for VUStreamingGallery.Tag(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithCopy for VUStreamingGallery.Recognition(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_26111E778();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v12 = *(void *)(v7 + 64);
LABEL_8:
      memcpy(a1, a2, v12);
      goto LABEL_14;
    }
    sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A910300) - 8) + 64);
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for VUStreamingGallery.Tag(0);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v22 = sub_26111E778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v16, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_20;
  }
  if (v21)
  {
    sub_2610C1208((uint64_t)v15, type metadata accessor for VUStreamingGallery.Tag);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_2610C1208((uint64_t)v15, type metadata accessor for VUStreamingGallery.Tag);
    swift_getEnumCaseMultiPayload();
    uint64_t v25 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v15, v16, v25);
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for VUStreamingGallery.Recognition(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910300);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_26111E778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[6];
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  uint64_t v11 = &a1[v10];
  size_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for VUStreamingGallery.Tag(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithTake for VUStreamingGallery.Recognition(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_26111E778();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v12 = *(void *)(v7 + 64);
LABEL_8:
      memcpy(a1, a2, v12);
      goto LABEL_14;
    }
    sub_2610C1208((uint64_t)a1, type metadata accessor for VUStreamingGallery.Label);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A910300) - 8) + 64);
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v14 = a3[6];
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for VUStreamingGallery.Tag(0);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v22 = sub_26111E778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v15, v16, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_20;
  }
  if (v21)
  {
    sub_2610C1208((uint64_t)v15, type metadata accessor for VUStreamingGallery.Tag);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_2610C1208((uint64_t)v15, type metadata accessor for VUStreamingGallery.Tag);
    swift_getEnumCaseMultiPayload();
    uint64_t v25 = sub_26111E778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v15, v16, v25);
    swift_storeEnumTagMultiPayload();
  }
LABEL_20:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for VUStreamingGallery.Recognition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2610C46EC);
}

uint64_t sub_2610C46EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910300);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
      if (v14 >= 4) {
        return v14 - 3;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VUStreamingGallery.Recognition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2610C4818);
}

uint64_t sub_2610C4818(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910300);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9103E8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 3;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2610C4930()
{
  sub_2610C4A44(319, &qword_26A910430, (void (*)(uint64_t))type metadata accessor for VUStreamingGallery.Label);
  if (v0 <= 0x3F)
  {
    sub_2610C4A44(319, &qword_26A910438, (void (*)(uint64_t))type metadata accessor for VUStreamingGallery.Tag);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2610C4A44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_26111F0C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2610C4A98(unint64_t a1)
{
  return sub_2610B6B20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_2610C4AB4()
{
  sub_2610EF038(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_2610C4AD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

unint64_t Int.entityClass.getter@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  if (HIBYTE(result) == 6) {
    char v2 = 3;
  }
  else {
    char v2 = HIBYTE(result) == 2;
  }
  if (HIBYTE(result) == 63) {
    char v3 = 2;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

uint64_t Int.rawValue.getter(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

BOOL static VUError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VUError.hash(into:)()
{
  return sub_26111F4D8();
}

uint64_t VUError.hashValue.getter()
{
  return sub_26111F508();
}

unint64_t sub_2610C4BD0()
{
  unint64_t result = qword_26A910458;
  if (!qword_26A910458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910458);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VUError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VUError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610C4D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUError()
{
  return &type metadata for VUError;
}

unsigned char *storeEnumTagSinglePayload for VUIndexStoreTagType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610C4E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUIndexStoreTagType()
{
  return &type metadata for VUIndexStoreTagType;
}

unsigned __int16 *sub_2610C4ECC@<X0>(unsigned __int16 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_2610C4EE8()
{
  unint64_t result = qword_26A910460;
  if (!qword_26A910460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910460);
  }
  return result;
}

uint64_t sub_2610C4F3C(unsigned __int8 a1)
{
  if (a1 > 5u)
  {
    if (a1 != 6)
    {
      if (a1 == 63) {
        return 2;
      }
      return 4;
    }
    return 3;
  }
  else
  {
    if (a1)
    {
      if (a1 == 2) {
        return 1;
      }
      return 4;
    }
    return 0;
  }
}

uint64_t sub_2610C4F8C()
{
  return sub_26111F508();
}

uint64_t sub_2610C5014()
{
  return sub_26111F508();
}

unint64_t VUPluginType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000013;
  }
}

VisualUnderstanding::VUPluginType_optional __swiftcall VUPluginType.init(rawValue:)(Swift::String rawValue)
{
  unsigned int v2 = v1;
  uint64_t v3 = sub_26111F3B8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unsigned int v2 = v5;
  return result;
}

void *static VUPluginType.allCases.getter()
{
  return &unk_270D2E2D0;
}

uint64_t sub_2610C5148(char *a1, char *a2)
{
  return sub_2610A4F50(*a1, *a2);
}

unint64_t sub_2610C5158()
{
  unint64_t result = qword_26A910468;
  if (!qword_26A910468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910468);
  }
  return result;
}

uint64_t sub_2610C51AC()
{
  return sub_2610C4F8C();
}

uint64_t sub_2610C51B4()
{
  sub_26111EC48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2610C5228()
{
  return sub_2610C5014();
}

VisualUnderstanding::VUPluginType_optional sub_2610C5230(Swift::String *a1)
{
  return VUPluginType.init(rawValue:)(*a1);
}

void sub_2610C523C(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000017;
  }
  else {
    unint64_t v2 = 0xD000000000000013;
  }
  unint64_t v3 = 0x8000000261122590;
  if (*v1) {
    unint64_t v3 = 0x80000002611225B0;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_2610C5284()
{
  unint64_t result = qword_26A910470;
  if (!qword_26A910470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A910478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910470);
  }
  return result;
}

void sub_2610C52E0(void *a1@<X8>)
{
  *a1 = &unk_270D2E3D8;
}

unsigned char *storeEnumTagSinglePayload for VUPluginType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610C53BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUPluginType()
{
  return &type metadata for VUPluginType;
}

uint64_t dispatch thunk of VUPlugin.init(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of VUPlugin.update(progressHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2610C5430(unint64_t a1)
{
  if (HIBYTE(a1) == 6) {
    unsigned int v1 = 3;
  }
  else {
    unsigned int v1 = HIBYTE(a1) == 2;
  }
  if (HIBYTE(a1) == 63) {
    return 2;
  }
  else {
    return v1;
  }
}

BOOL sub_2610C545C(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  if (v2 < v3) {
    return 1;
  }
  if (v2 == v3) {
    return *(void *)a1 < *(void *)a2;
  }
  return 0;
}

BOOL sub_2610C5490(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  if (v3 < v2) {
    return 0;
  }
  if (v3 == v2) {
    return *(void *)a2 >= *(void *)a1;
  }
  return 1;
}

BOOL sub_2610C54C8(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  if (v2 < v3) {
    return 0;
  }
  if (v2 == v3) {
    return *(void *)a1 >= *(void *)a2;
  }
  return 1;
}

BOOL sub_2610C5500(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  if (v3 < v2) {
    return 1;
  }
  if (v3 == v2) {
    return *(void *)a2 < *(void *)a1;
  }
  return 0;
}

BOOL sub_2610C5534(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(float *)(a1 + 8) == *(float *)(a2 + 8);
}

uint64_t sub_2610C5560()
{
  BOOL v7 = v0 + 2;
  uint64_t result = swift_beginAccess();
  uint64_t v9 = v0[2];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v10 - 2;
    unint64_t v12 = v10 - 1;
    if (v10 < 2) {
      uint64_t v11 = v10 - 1;
    }
    uint64_t v13 = v11 >> 1;
    if (v13 < (unint64_t)v10) {
      goto LABEL_10;
    }
LABEL_5:
    __break(1u);
LABEL_6:
    uint64_t v14 = &v0[v3];
    v14[4] = v4;
    *((_DWORD *)v14 + 10) = v6;
    uint64_t v15 = *v7 + v2 * 8;
    *(void *)(v15 + 32) = v12;
    *(_DWORD *)(v15 + 40) = v5;
    while (1)
    {
      uint64_t result = swift_endAccess();
      uint64_t v16 = v1 - 1;
      if (v1 < 1) {
        uint64_t v16 = v1;
      }
      uint64_t v13 = v16 >> 1;
      uint64_t v9 = *v7;
      uint64_t v10 = *(void *)(*v7 + 16);
      unint64_t v12 = v1;
      if (v13 >= v10) {
        goto LABEL_5;
      }
LABEL_10:
      if (v12 >= v10) {
        break;
      }
      uint64_t v1 = v13;
      uint64_t v17 = v9 + 32;
      uint64_t v3 = 2 * v13;
      uint64_t v18 = v9 + 32 + 16 * v13;
      float v19 = *(float *)(v18 + 8);
      uint64_t v2 = 2 * v12;
      int v20 = (float *)(v17 + 16 * v12);
      float v21 = v20[2];
      if (v21 >= v19)
      {
        uint64_t v22 = *(void *)v18;
        uint64_t v23 = *(void *)v20;
        if (v21 != v19 || v23 >= v22) {
          return result;
        }
      }
      uint64_t result = swift_beginAccess();
      if (v1 != v12)
      {
        uint64_t v0 = (void *)*v7;
        uint64_t v25 = *(void *)(*v7 + 16);
        if (v1 >= v25) {
          goto LABEL_24;
        }
        if (v12 >= v25) {
          goto LABEL_25;
        }
        uint64_t v26 = &v0[v3 + 4];
        unint64_t v12 = *v26;
        int v5 = *((_DWORD *)v26 + 2);
        uint64_t v27 = &v0[v2 + 4];
        uint64_t v4 = *v27;
        int v6 = *((_DWORD *)v27 + 2);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *BOOL v7 = v0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v0 = sub_26108E8F8(v0);
          *BOOL v7 = v0;
        }
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  return result;
}

uint64_t sub_2610C56E8()
{
  uint64_t v1 = (uint64_t *)(v0 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  while (1)
  {
    uint64_t v7 = v3 | 1;
    uint64_t v8 = *v1;
    uint64_t v9 = *(void *)(*v1 + 16);
    if ((v3 | 1) >= v9) {
      return result;
    }
    int64_t v10 = v3 + 2;
    if (__OFADD__(v3, 2))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v10 >= v9)
    {
      unint64_t v15 = v3 | 1;
    }
    else
    {
      if (v10 < 0) {
        goto LABEL_32;
      }
      if (v3 < 0) {
        goto LABEL_33;
      }
      uint64_t v11 = v8 + 32 + 16 * v10;
      float v12 = *(float *)(v11 + 8);
      uint64_t v13 = v8 + 32 + 16 * v7;
      float v14 = *(float *)(v13 + 8);
      unint64_t v15 = v10;
      if (v12 >= v14)
      {
        unint64_t v15 = v7;
        if (v12 == v14)
        {
          if (*(void *)v11 >= *(void *)v13) {
            unint64_t v15 = v7;
          }
          else {
            unint64_t v15 = v10;
          }
        }
      }
    }
    if (v4 >= v9) {
      goto LABEL_29;
    }
    if (v15 >= v9) {
      goto LABEL_30;
    }
    uint64_t v16 = v8 + 32;
    uint64_t v17 = 2 * v4;
    uint64_t v18 = v8 + 32 + 16 * v4;
    float v19 = *(float *)(v18 + 8);
    uint64_t v20 = 2 * v15;
    float v21 = (float *)(v16 + 16 * v15);
    float v22 = v21[2];
    if (v19 < v22) {
      return result;
    }
    uint64_t v23 = *(void *)v18;
    uint64_t v24 = *(void *)v21;
    if (v19 == v22 && v23 < v24) {
      return result;
    }
    uint64_t result = swift_beginAccess();
    if (v4 != v15)
    {
      uint64_t v26 = (void *)*v1;
      unint64_t v27 = *(void *)(*v1 + 16);
      if (v4 >= v27) {
        goto LABEL_34;
      }
      if (v15 >= v27) {
        goto LABEL_35;
      }
      uint64_t v28 = &v26[v17 + 4];
      uint64_t v29 = *v28;
      int v30 = *((_DWORD *)v28 + 2);
      uint64_t v31 = &v26[v20 + 4];
      uint64_t v32 = *v31;
      int v33 = *((_DWORD *)v31 + 2);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v1 = (uint64_t)v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v26 = sub_26108E8F8(v26);
        uint64_t *v1 = (uint64_t)v26;
      }
      int v5 = &v26[v17];
      v5[4] = v32;
      *((_DWORD *)v5 + 10) = v33;
      uint64_t v6 = *v1 + v20 * 8;
      *(void *)(v6 + 32) = v29;
      *(_DWORD *)(v6 + 40) = v30;
    }
    uint64_t result = swift_endAccess();
    uint64_t v3 = 2 * v15;
    unint64_t v4 = v15;
    if ((uint64_t)(v15 + 0x4000000000000000) < 0) {
      goto LABEL_31;
    }
  }
}

uint64_t sub_2610C58CC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MinHeap()
{
  return self;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MinHeap.Element(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MinHeap.Element(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MinHeap.Element()
{
  return &type metadata for MinHeap.Element;
}

unint64_t sub_2610C599C()
{
  unint64_t result = qword_26A910480;
  if (!qword_26A910480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910480);
  }
  return result;
}

uint64_t sub_2610C59F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2610C5A60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_2610C5A98()
{
  sub_2610C5A60();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcurrentCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for CacheEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);

  return sub_26106899C(v2, v3);
}

void *_s19VisualUnderstanding10CacheEntryVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_26106A67C(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for CacheEntry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_26106A67C(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_26106899C(v6, v7);
  return a1;
}

void *assignWithTake for CacheEntry(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_26106899C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for CacheEntry()
{
  return &type metadata for CacheEntry;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2610C5C5C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void *sub_2610C5CE0(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_26111EFA8();
  uint64_t v14 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26111EB38();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_26111EF88();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = MEMORY[0x263F8EE78];
  v1[3] = MEMORY[0x263F8EE80];
  v1[4] = v8;
  v1[5] = 0;
  uint64_t v15 = sub_261071924(0, (unint64_t *)&qword_26B40AD90);
  sub_26111EF78();
  sub_26111EB28();
  uint64_t v9 = *MEMORY[0x263F8F130];
  int64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v13[1] = v3 + 104;
  v10(v5, v9, v2);
  uint64_t v11 = sub_26111EFE8();
  v1[7] = 0;
  v1[8] = 0;
  v1[6] = v11;
  sub_26111EB28();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_2610CAD38((unint64_t *)&qword_26B40AD88, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AD60);
  sub_2610712F0((unint64_t *)&qword_26B40AD68, &qword_26B40AD60);
  sub_26111F118();
  v10(v5, v9, v14);
  v1[9] = sub_26111EFE8();
  v1[2] = v16;
  return v1;
}

uint64_t sub_2610C5FDC(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (uint64_t)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_26111EFA8();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26111EF88();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_26111EB38();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v33 = v1 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
  uint64_t v34 = v1;
  sub_26111EA58();
  v31[1] = 0x8000000261122700;
  uint64_t v32 = v1 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_logger;
  sub_26111EAD8();
  uint64_t v36 = OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_callbackQueue;
  uint64_t v35 = sub_261071924(0, (unint64_t *)&qword_26B40AD90);
  sub_26111EB28();
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_2610CAD38((unint64_t *)&qword_26B40AD88, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AD60);
  uint64_t v9 = v40;
  sub_2610712F0((unint64_t *)&qword_26B40AD68, &qword_26B40AD60);
  uint64_t v10 = v34;
  sub_26111F118();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v37);
  uint64_t v11 = v36;
  *(void *)(v10 + v11) = sub_26111EFE8();
  uint64_t v12 = v38;
  sub_261071864(v9, v38, (uint64_t *)&unk_26B40AC60);
  type metadata accessor for VUIndexCoreDataStore();
  swift_allocObject();
  uint64_t v13 = v39;
  uint64_t v14 = sub_2610E8FD0(v12);
  if (v13)
  {
    sub_2610718C8(v9, (uint64_t *)&unk_26B40AC60);
    uint64_t v15 = sub_26111EA68();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v33, v15);
    uint64_t v16 = sub_26111EAE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v32, v16);

    type metadata accessor for VUPersistedIndex();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v17 = v14;
    *(void *)(v10 + 16) = v14;
    type metadata accessor for VUIndexQuantizer();
    swift_allocObject();
    uint64_t v18 = swift_retain();
    uint64_t v19 = sub_26109A9C0(v18, 100);
    *(void *)(v10 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_quantizer) = v19;
    uint64_t v20 = type metadata accessor for VUIndexScanner();
    uint64_t v21 = swift_allocObject();
    swift_retain();
    swift_retain();
    sub_26111EAD8();
    uint64_t v22 = OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_partitionCache;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AB50);
    swift_allocObject();
    *(void *)(v21 + v22) = sub_2610C5CE0(80000000);
    uint64_t v23 = OBJC_IVAR____TtC19VisualUnderstanding14VUIndexScanner_contextCache;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AB48);
    swift_allocObject();
    *(void *)(v21 + v23) = sub_2610C5CE0(80000000);
    sub_26111EA58();
    *(void *)(v21 + 16) = v17;
    *(void *)(v21 + 24) = v19;
    uint64_t v24 = (uint64_t *)(v10 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner);
    v24[3] = v20;
    v24[4] = (uint64_t)&off_270D2E400;
    *uint64_t v24 = v21;
    type metadata accessor for VUIndexClusterer(0);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = swift_retain();
    *(void *)(v10 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_clusterer) = sub_2610999D4(v26, v25);
    swift_retain();
    uint64_t v27 = sub_2610EE5FC(256);
    char v29 = v28;
    swift_release();
    if ((v29 & 1) == 0 && v27 <= 8) {
      sub_2610C6638();
    }
    sub_2610718C8(v40, (uint64_t *)&unk_26B40AC60);
  }
  return v10;
}

void sub_2610C6638()
{
  uint64_t v1 = sub_26111EAC8();
  os_log_type_t v2 = sub_26111EF38();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_261042000, v1, v2, "Starting mapping migration...", v3, 2u);
    MEMORY[0x26122E4F0](v3, -1, -1);
  }

  CFAbsoluteTimeGetCurrent();
  sub_261071924(0, &qword_26B40ABC8);
  uint64_t v4 = (void *)sub_26111EEF8();
  MEMORY[0x270FA5388](v4);
  id v6 = v5;
  sub_26111F028();

  if (!v0)
  {
    sub_2610F7DBC();
    CFAbsoluteTimeGetCurrent();
    uint64_t v7 = sub_26111EAC8();
    os_log_type_t v8 = sub_26111EF38();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v7, v8, "Mapping migration took %fs", v9, 0xCu);
      MEMORY[0x26122E4F0](v9, -1, -1);
    }
  }
}

void sub_2610C68B4(void *a1, uint64_t a2)
{
  type metadata accessor for VUIndexMapping();
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(*(void *)(a2 + 16) + 16));
  objc_msgSend(v4, sel_setLabel_, objc_msgSend(a1, sel_legacyLabel));
  objc_msgSend(v4, sel_setPartition_, objc_msgSend(a1, sel_legacyPartition));
  objc_msgSend(a1, sel_setMapping_, v4);
}

uint64_t sub_2610C697C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unsigned __int8 a6, uint64_t *a7)
{
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    return 1;
  }
  uint64_t v11 = a3 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  while (1)
  {
    uint64_t v14 = a2 + 4 * v13;
    if (a4)
    {
      float v15 = *(float *)(v14 + 32);
      uint64_t v16 = (uint64_t *)(*(void *)(a5 + 16) + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
      uint64_t result = swift_beginAccess();
      uint64_t v17 = *v16;
      if (!*(void *)(v17 + 16)) {
        goto LABEL_16;
      }
      uint64_t result = sub_26105D5E8(a6);
      if ((v18 & 1) == 0) {
        goto LABEL_17;
      }
      if (v15 < *(float *)(*(void *)(*(void *)(v17 + 56) + 8 * result) + 56)) {
        goto LABEL_13;
      }
    }
    if (v13 >= *(void *)(a3 + 16)) {
      break;
    }
    uint64_t v19 = *(void *)(v11 + 8 * v13);
    int v20 = *(_DWORD *)(v14 + 32);
    uint64_t v21 = (void *)*a7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a7 = (uint64_t)v21;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_26105C8E4(0, v21[2] + 1, 1, v21);
      uint64_t v21 = (void *)result;
      *a7 = result;
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t result = (uint64_t)sub_26105C8E4((void *)(v22 > 1), v23 + 1, 1, v21);
      uint64_t v21 = (void *)result;
    }
    v21[2] = v23 + 1;
    uint64_t v24 = &v21[2 * v23];
    v24[4] = v19;
    ++v13;
    *((_DWORD *)v24 + 10) = v20;
    *a7 = (uint64_t)v21;
    if (v7 == v13)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2610C6B18(unsigned int a1, uint64_t a2, int *a3, int a4)
{
  int v98 = a4;
  uint64_t v100 = a3;
  uint64_t v93 = a2;
  unsigned int v101 = a1;
  uint64_t v84 = sub_26111EA78();
  uint64_t v91 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v89 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_queue_t v103 = (dispatch_queue_t)sub_26111EFA8();
  Class isa = v103[-1].isa;
  MEMORY[0x270FA5388](v103);
  char v96 = (char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_26111EF88();
  MEMORY[0x270FA5388](v94);
  uint64_t v95 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26111EB38();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_26111EA38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  float v15 = (char *)v82 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v82 - v16;
  uint64_t v99 = v4;
  uint64_t v18 = v4 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
  sub_26111EA28();
  uint64_t v86 = v18;
  uint64_t v19 = sub_26111EA48();
  os_signpost_type_t v20 = sub_26111F018();
  char v21 = sub_26111F0B8();
  uint64_t v102 = v9;
  if (v21)
  {
    unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    unint64_t v23 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v22(v15, v17, v9);
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    os_signpost_id_t v25 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v19, v20, v25, "similarityLabel", "", v24, 2u);
    uint64_t v26 = v24;
    uint64_t v9 = v102;
    MEMORY[0x26122E4F0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {

    unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    unint64_t v23 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v83 = v22;
  v82[1] = v23;
  v22(v15, v17, v9);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v87 = v15;
  uint64_t v92 = sub_26111EA98();
  uint64_t v27 = *(void (**)(void, void))(v10 + 8);
  uint64_t v90 = v10 + 8;
  unint64_t v85 = (void (*)(char *, uint64_t))v27;
  v27(v17, v9);
  sub_261071924(0, (unint64_t *)&qword_26B40AD90);
  sub_26111EB28();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_2610CAD38((unint64_t *)&qword_26B40AD88, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AD60);
  sub_2610712F0((unint64_t *)&qword_26B40AD68, &qword_26B40AD60);
  sub_26111F118();
  (*((void (**)(char *, void, dispatch_queue_t))isa + 13))(v96, *MEMORY[0x263F8F130], v103);
  dispatch_queue_t v103 = (dispatch_queue_t)sub_26111EFE8();
  uint64_t v28 = v99;
  uint64_t v29 = *(void *)(v99 + 16);
  uint64_t v30 = MEMORY[0x263F8EE80];
  v111[0] = MEMORY[0x263F8EE80];
  uint64_t v31 = *(void **)(v29 + 16);
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v101;
  *(unsigned char *)(v32 + 17) = 0;
  *(_WORD *)(v32 + 18) = 0;
  *(unsigned char *)(v32 + 20) = 1;
  *(void *)(v32 + 24) = v100;
  char v33 = v98;
  *(unsigned char *)(v32 + 32) = v98 & 1;
  *(void *)(v32 + 40) = 4096;
  *(void *)(v32 + 48) = v29;
  *(void *)(v32 + 64) = 0;
  *(void *)(v32 + 72) = 0;
  *(void *)(v32 + 56) = v111;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_261071558;
  *(void *)(v34 + 24) = v32;
  uint64_t v109 = sub_2610A40DC;
  uint64_t v110 = v34;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v106 = 1107296256;
  uint64_t v107 = sub_26105A22C;
  v108 = &block_descriptor_21_0;
  uint64_t v35 = _Block_copy(&aBlock);
  id v36 = v31;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v36, sel_performBlockAndWait_, v35);

  _Block_release(v35);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v100 = (int *)v111[0];
  swift_release();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v30;
  uint64_t v38 = (uint64_t *)(v37 + 16);
  uint64_t v39 = v93;
  if ((v33 & 1) == 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t aBlock = v30;
    *uint64_t v38 = 0x8000000000000000;
    sub_26107F4F4(v39, isUniquelyReferenced_nonNull_native, 0.0);
    *uint64_t v38 = aBlock;
    swift_bridgeObjectRelease();
  }
  sub_2610CAE10(v28 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner, (uint64_t)&aBlock);
  uint64_t v41 = v108;
  int v42 = v109;
  __swift_project_boxed_opaque_existential_1Tm(&aBlock, (uint64_t)v108);
  LOBYTE(v111[0]) = 1;
  v111[1] = 0;
  v111[2] = 0;
  v111[3] = v39;
  __int16 v112 = 512;
  uint64_t v43 = (uint64_t *)(v29 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
  swift_beginAccess();
  uint64_t v44 = *v43;
  if (!*(void *)(v44 + 16)) {
    goto LABEL_25;
  }
  uint64_t v45 = v101;
  unint64_t v46 = sub_26105D5E8(v101);
  if ((v47 & 1) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v48 = *(void *)(*(void *)(v44 + 56) + 8 * v46);
  MEMORY[0x270FA5388](v46);
  uint64_t v79 = v100;
  dispatch_queue_t v80 = v103;
  uint64_t v99 = v37;
  uint64_t v81 = v37;
  uint64_t v49 = (void (*)(uint64_t, void *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t (*)(uint64_t, uint64_t, uint64_t)))*((void *)v42 + 1);
  swift_retain();
  dispatch_queue_t v80 = v41;
  uint64_t v81 = (uint64_t)v42;
  uint64_t v79 = &v78;
  LOBYTE(v78) = 1;
  v49(v45, v111, 2, 0, 1, 128, 16, v48, v78, sub_2610CAE74);
  uint64_t v50 = v102;
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  uint64_t v109 = (uint64_t (*)())nullsub_1;
  uint64_t v110 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v106 = 1107296256;
  uint64_t v107 = sub_26105A22C;
  v108 = &block_descriptor_27_0;
  int v51 = _Block_copy(&aBlock);
  swift_release();
  dispatch_sync(v103, v51);
  _Block_release(v51);
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_27:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_beginAccess();
  uint64_t v52 = *v38;
  swift_bridgeObjectRetain_n();
  uint64_t v53 = sub_261074AC4(v52);
  swift_bridgeObjectRelease();
  v104 = v53;
  sub_2610C5C5C((uint64_t *)&v104, sub_26108BE20, sub_2610CB568);
  swift_bridgeObjectRelease();
  uint64_t v54 = (uint64_t)v104;
  int64_t v55 = v104[2];
  if (v55)
  {
    v104 = (void *)MEMORY[0x263F8EE78];
    sub_2610623DC(0, v55, 0);
    uint64_t v56 = 0;
    uint64_t v57 = (uint64_t)v104;
    unint64_t v58 = v104[2];
    uint64_t v59 = 16 * v58;
    do
    {
      uint64_t v60 = *(void *)(v54 + v56 + 32);
      int v61 = *(_DWORD *)(v54 + v56 + 40);
      v104 = (void *)v57;
      unint64_t v62 = *(void *)(v57 + 24);
      unint64_t v63 = v58 + 1;
      if (v58 >= v62 >> 1)
      {
        sub_2610623DC(v62 > 1, v58 + 1, 1);
        uint64_t v57 = (uint64_t)v104;
      }
      *(void *)(v57 + 16) = v63;
      uint64_t v64 = v57 + v59 + v56;
      *(void *)(v64 + 32) = v60;
      *(_DWORD *)(v64 + 40) = v61;
      v56 += 16;
      unint64_t v58 = v63;
      --v55;
    }
    while (v55);
    swift_release();
    swift_release();

    uint64_t v50 = v102;
  }
  else
  {
    swift_release();
    swift_release();

    uint64_t v57 = MEMORY[0x263F8EE78];
  }
  char v65 = sub_26111EA48();
  uint64_t v66 = v88;
  sub_26111EA88();
  os_signpost_type_t v67 = sub_26111F008();
  char v68 = sub_26111F0B8();
  uint64_t v69 = v91;
  unint64_t v70 = v89;
  v71 = v87;
  if (v68)
  {
    swift_retain();
    sub_26111EAB8();
    swift_release();
    uint64_t v72 = v84;
    if ((*(unsigned int (**)(char *, uint64_t))(v69 + 88))(v70, v84) == *MEMORY[0x263F90238])
    {
      unint64_t v73 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v72);
      unint64_t v73 = "";
    }
    v83(v71, v66, v50);
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v74 = 0;
    os_signpost_id_t v75 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v65, v67, v75, "similarityLabel", v73, v74, 2u);
    MEMORY[0x26122E4F0](v74, -1, -1);

    uint64_t v76 = v85;
    v85(v66, v50);
    v76(v71, v50);
  }
  else
  {

    v85(v66, v50);
  }
  swift_release();
  return v57;
}

uint64_t sub_2610C77CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v40 = sub_26111EB18();
  uint64_t v9 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_26111EB38();
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[4] = MEMORY[0x263F8EE88];
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 16);
    if (v14)
    {
      uint64_t v15 = *(void *)(a3 + 32);
      char v33 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v34 = v45;
      uint64_t v32 = (void (**)(char *, uint64_t))(v11 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      uint64_t v17 = v13 - 1;
      uint64_t v35 = a3;
      uint64_t v18 = v40;
      do
      {
        if (*(void *)(a4 + 16))
        {
          int v19 = *(_DWORD *)(a2 + 4 * v16 + 32);
          unint64_t v20 = sub_26105D6EC(v15);
          if (v21)
          {
            uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v20);
            if (sub_26105E524(aBlock, v22))
            {
              uint64_t v23 = swift_allocObject();
              *(void *)(v23 + 16) = v42;
              *(void *)(v23 + 24) = v22;
              *(_DWORD *)(v23 + 32) = v19;
              v45[2] = sub_2610CBF10;
              v45[3] = v23;
              aBlock[0] = MEMORY[0x263EF8330];
              aBlock[1] = 1107296256;
              v45[0] = sub_2610FD8FC;
              v45[1] = &block_descriptor_33;
              id v36 = _Block_copy(aBlock);
              swift_retain();
              uint64_t v24 = v37;
              sub_26111EB28();
              uint64_t v43 = MEMORY[0x263F8EE78];
              sub_2610CAD38((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
              sub_2610712F0((unint64_t *)&qword_26B40A348, &qword_26B40A340);
              uint64_t v25 = v14;
              uint64_t v26 = a2;
              uint64_t v27 = v39;
              sub_26111F118();
              uint64_t v28 = v36;
              MEMORY[0x26122D850](0, v24, v27, v36);
              _Block_release(v28);
              uint64_t v29 = v27;
              a2 = v26;
              uint64_t v14 = v25;
              (*v33)(v29, v18);
              uint64_t v30 = v24;
              a3 = v35;
              (*v32)(v30, v38);
              swift_release();
            }
          }
        }
        if (v17 == v16) {
          break;
        }
        uint64_t v15 = *(void *)(a3 + 8 * v16++ + 40);
      }
      while (v14 != v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_2610C7BA4(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 16);
  float v8 = 0.0;
  if (*(void *)(v7 + 16))
  {
    unint64_t v9 = sub_26105D6EC(a2);
    if (v10) {
      float v8 = *(float *)(*(void *)(v7 + 56) + 4 * v9);
    }
  }
  swift_endAccess();
  if (v8 > a3) {
    a3 = v8;
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  sub_26107F4F4(a2, isUniquelyReferenced_nonNull_native, a3);
  *uint64_t v6 = v13;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

unint64_t sub_2610C7C88(void (*a1)(char *, uint64_t), NSObject *a2)
{
  dispatch_queue_t v121 = a2;
  uint64_t v124 = a1;
  uint64_t v115 = sub_26111EFA8();
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v113 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_26111EF88();
  MEMORY[0x270FA5388](v111);
  __int16 v112 = (char *)v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26111EB38();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v110 = (char *)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_26111EA78();
  uint64_t v120 = *(void *)(v119 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v119);
  uint64_t v107 = (char *)v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v105 = (char *)v103 - v10;
  MEMORY[0x270FA5388](v9);
  v108 = (char *)v103 - v11;
  uint64_t v12 = sub_26111EA38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v109 = (char *)v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v106 = (char *)v103 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)v103 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)v103 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v103 - v24;
  unint64_t v116 = v2;
  uint64_t v26 = (char *)v2 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
  sub_26111EA28();
  unint64_t v122 = v26;
  uint64_t v27 = sub_26111EA48();
  os_signpost_type_t v28 = sub_26111F018();
  char v29 = sub_26111F0B8();
  v123 = v23;
  if (v29)
  {
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    unint64_t v31 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v30(v23, v25, v12);
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    os_signpost_id_t v33 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v27, v28, v33, "similarity", "", v32, 2u);
    uint64_t v34 = v32;
    uint64_t v23 = v123;
    MEMORY[0x26122E4F0](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
  }
  else
  {

    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    unint64_t v31 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v118 = v30;
  unint64_t v117 = v31;
  v30(v23, v25, v12);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v35 = sub_26111EA98();
  id v36 = *(void (**)(char *, uint64_t))(v13 + 8);
  v36(v25, v12);
  if (!*((void *)v124 + 2) || !v121[2].isa)
  {
    char v47 = sub_26111EA48();
    sub_26111EA88();
    os_signpost_type_t v48 = sub_26111F008();
    if (sub_26111F0B8())
    {
      uint64_t v124 = v36;
      swift_retain();
      uint64_t v49 = v108;
      sub_26111EAB8();
      swift_release();
      uint64_t v50 = v120;
      uint64_t v51 = v119;
      if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v49, v119) == *MEMORY[0x263F90238])
      {
        uint64_t v52 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
        uint64_t v52 = "";
      }
      uint64_t v53 = v123;
      v118(v123, v20, v12);
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      os_signpost_id_t v55 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v47, v48, v55, "similarity", v52, v54, 2u);
      MEMORY[0x26122E4F0](v54, -1, -1);

      uint64_t v56 = v124;
      v124(v20, v12);
      v56(v53, v12);
    }
    else
    {

      v36(v20, v12);
    }
    goto LABEL_26;
  }
  v108 = (char *)v35;
  v103[1] = v13 + 8;
  uint64_t v104 = v12;
  sub_261071924(0, (unint64_t *)&qword_26B40AD90);
  sub_26111EB28();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2610CAD38((unint64_t *)&qword_26B40AD88, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AD60);
  sub_2610712F0((unint64_t *)&qword_26B40AD68, &qword_26B40AD60);
  sub_26111F118();
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v113, *MEMORY[0x263F8F130], v115);
  uint64_t v37 = (void *)sub_26111EFE8();
  uint64_t v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  __int16 v126 = 256;
  uint64_t v39 = v116[2];
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_261120090;
  uint64_t v41 = MEMORY[0x263F8D750];
  *(void *)(v40 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v40 + 64) = v41;
  *(void *)(v40 + 32) = *((void *)v124 + 4);
  uint64_t v42 = (void *)sub_26111EEF8();
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  v103[-10] = MEMORY[0x270FA5388](v43);
  v103[-9] = 0;
  v103[-8] = &unk_270D2FA28;
  v103[-7] = 1;
  LOBYTE(v97) = 0;
  uint64_t v98 = 0;
  LOBYTE(v99) = 1;
  uint64_t v100 = v39;
  unsigned int v101 = sub_2610CACC8;
  uint64_t v102 = v44;
  id v46 = v45;
  sub_26111F028();

  if ((v126 & 0x100) != 0
    || (uint64_t v57 = v126,
        uint64_t v58 = v39 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters,
        swift_beginAccess(),
        uint64_t v59 = *(void *)v58,
        !*(void *)(*(void *)v58 + 16))
    || (unint64_t v60 = sub_26105D5E8(v57), (v61 & 1) == 0))
  {
    swift_release();

    dispatch_queue_t v80 = sub_26111EA48();
    uint64_t v81 = v109;
    sub_26111EA88();
    os_signpost_type_t v82 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v83 = v107;
      sub_26111EAB8();
      swift_release();
      uint64_t v84 = v120;
      uint64_t v85 = v119;
      int v86 = (*(uint64_t (**)(char *, uint64_t))(v120 + 88))(v83, v119);
      uint64_t v87 = v104;
      if (v86 == *MEMORY[0x263F90238])
      {
        uint64_t v88 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
        uint64_t v88 = "";
      }
      uint64_t v89 = v123;
      v118(v123, v81, v87);
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      os_signpost_id_t v91 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v80, v82, v91, "similarity", v88, v90, 2u);
      MEMORY[0x26122E4F0](v90, -1, -1);

      v36(v81, v87);
      v36(v89, v87);
    }
    else
    {

      v36(v81, v104);
    }
LABEL_26:
    swift_release();
    uint64_t v69 = 0;
    unsigned __int8 v92 = 1;
LABEL_27:
    v127[0] = v92;
    return v69 | ((unint64_t)v92 << 32);
  }
  uint64_t v62 = *(void *)(*(void *)(v59 + 56) + 8 * v60);
  uint64_t v63 = *(void *)((char *)v116 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner + 32);
  uint64_t v114 = *(void *)((char *)v116 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner + 24);
  uint64_t v115 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm((void *)((char *)v116 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner), v114);
  unint64_t v116 = v103;
  v127[0] = 2;
  uint64_t v129 = 0;
  uint64_t v130 = 0;
  v128 = v124;
  __int16 v131 = 513;
  MEMORY[0x270FA5388](v115);
  dispatch_queue_t v99 = v121;
  uint64_t v100 = (uint64_t)v64;
  dispatch_queue_t v121 = v64;
  unsigned int v101 = (uint64_t (*)(void *))v38;
  v113 = *(char **)(v63 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  unsigned int v101 = (uint64_t (*)(void *))v63;
  dispatch_queue_t v99 = (dispatch_queue_t)&v97;
  uint64_t v100 = v114;
  LOBYTE(v97) = 0;
  ((void (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v113)(v57, v127, 2, 0, 1, 128, 16, v62, v97, sub_2610CACD0);
  swift_bridgeObjectRelease();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_3;
  char v65 = _Block_copy(aBlock);
  swift_release();
  dispatch_queue_t v66 = v121;
  dispatch_sync(v121, v65);
  swift_release();

  _Block_release(v65);
  unint64_t result = swift_isEscapingClosureAtFileLocation();
  uint64_t v68 = v120;
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v69 = *(unsigned int *)(v38 + 16);
    swift_release();
    unint64_t v70 = sub_26111EA48();
    v71 = v106;
    sub_26111EA88();
    os_signpost_type_t v72 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      unint64_t v73 = v105;
      sub_26111EAB8();
      uint64_t v74 = v73;
      swift_release();
      os_signpost_id_t v75 = v73;
      uint64_t v76 = v119;
      int v77 = (*(uint64_t (**)(char *, uint64_t))(v68 + 88))(v75, v119);
      uint64_t v78 = v104;
      if (v77 == *MEMORY[0x263F90238])
      {
        uint64_t v79 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v74, v76);
        uint64_t v79 = "";
      }
      uint64_t v93 = v123;
      v118(v123, v71, v78);
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v95 = 0;
      os_signpost_id_t v96 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v70, v72, v96, "similarity", v79, v95, 2u);
      uint64_t v94 = v104;
      MEMORY[0x26122E4F0](v95, -1, -1);

      v36(v71, v94);
    }
    else
    {

      uint64_t v93 = v71;
      uint64_t v94 = v104;
    }
    v36(v93, v94);
    swift_release();
    unsigned __int8 v92 = 0;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_2610C8BD8(void *a1, unsigned char *a2)
{
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_type);
  if ((result & 0x80000000) != 0 || result >= 0x100)
  {
    uint64_t result = sub_26111F328();
    __break(1u);
  }
  else
  {
    *a2 = result;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_2610C8CA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v37 = sub_26111EB18();
  uint64_t v9 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_26111EB38();
  MEMORY[0x270FA5388](v38);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return 1;
  }
  uint64_t v16 = *(void *)(a2 + 16);
  if (!v16) {
    return 1;
  }
  uint64_t v17 = *(void *)(a3 + 32);
  uint64_t v18 = a4[2];
  uint64_t v41 = a2 + 32;
  uint64_t v34 = v44;
  uint64_t v35 = v15;
  uint64_t v32 = (void (**)(char *, uint64_t))(v12 + 8);
  os_signpost_id_t v33 = (void (**)(char *, uint64_t))(v9 + 8);
  v31[1] = a3;
  uint64_t v36 = v16;
  swift_bridgeObjectRetain();
  v31[0] = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = v35;
  uint64_t v20 = v36;
  uint64_t v22 = 0;
  uint64_t v23 = 1;
  while (1)
  {
    if (!v18) {
      goto LABEL_9;
    }
    int v24 = *(_DWORD *)(v41 + 4 * v22);
    if (a4[4] == v17) {
      goto LABEL_8;
    }
    if (v18 == 1) {
      goto LABEL_9;
    }
    if (a4[5] == v17)
    {
LABEL_8:
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v40;
      *(_DWORD *)(v25 + 24) = v24;
      v44[2] = sub_2610CAD2C;
      v44[3] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      v44[0] = sub_2610FD8FC;
      v44[1] = &block_descriptor_12_0;
      uint64_t v26 = _Block_copy(aBlock);
      swift_retain();
      sub_26111EB28();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_2610CAD38((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
      sub_2610712F0((unint64_t *)&qword_26B40A348, &qword_26B40A340);
      uint64_t v27 = v37;
      sub_26111F118();
      MEMORY[0x26122D850](0, v14, v11, v26);
      _Block_release(v26);
      (*v33)(v11, v27);
      (*v32)(v14, v38);
      uint64_t result = swift_release();
      uint64_t v21 = v35;
      uint64_t v20 = v36;
      goto LABEL_9;
    }
    if (v18 != 2) {
      break;
    }
LABEL_9:
    if (v23 != v21)
    {
      uint64_t v17 = *(void *)(a3 + 32 + 8 * v23);
      uint64_t v22 = v23;
      if (v23++ != v20) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v29 = 6;
  while (1)
  {
    uint64_t v30 = v29 - 3;
    if (__OFADD__(v29 - 4, 1)) {
      break;
    }
    if (a4[v29] == v17) {
      goto LABEL_8;
    }
    ++v29;
    if (v30 == v18) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2610C9088(uint64_t a1, float a2)
{
  swift_beginAccess();
  if (*(float *)(a1 + 16) > a2) {
    a2 = *(float *)(a1 + 16);
  }
  uint64_t result = swift_beginAccess();
  *(float *)(a1 + 16) = a2;
  return result;
}

uint64_t sub_2610C90F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v8 = HIBYTE(a2);
  uint64_t v41 = MEMORY[0x263F8EE78];
  if (HIBYTE(a2) > 0x3F || ((1 << SHIBYTE(a2)) & 0x8000000000000044) == 0) {
    unint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(v3 + 16) + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters;
  swift_beginAccess();
  if (!*(void *)(*(void *)v9 + 16) || (sub_26105D5E8(v8), (v10 & 1) == 0))
  {
    uint64_t v16 = sub_26111EAC8();
    os_log_type_t v17 = sub_26111EF58();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 16777472;
      LOBYTE(v42[0]) = v8;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v16, v17, "Cannot obtain parameters for type %hhu", v18, 5u);
      MEMORY[0x26122E4F0](v18, -1, -1);
    }

    uint64_t v19 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    return v19;
  }
  int v40 = 1065336439;
  int v39 = 1064346583;
  uint64_t v38 = a3;
  id v11 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  swift_retain();
  uint64_t v12 = (void *)sub_26111EBC8();
  id v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

  if (v13)
  {
    uint64_t v14 = (void *)sub_26111EBC8();
    id v15 = objc_msgSend(v13, sel_objectForKey_, v14);

    if (v15)
    {
      sub_26111F108();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_261071274((uint64_t)&v36, (uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    if (v43)
    {
      if (swift_dynamicCast())
      {
        uint64_t v20 = sub_26111EAC8();
        os_log_type_t v21 = sub_26111EF58();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 134217984;
          v42[0] = v35;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v20, v21, "Overriding number of neighbors to %ld", v22, 0xCu);
          MEMORY[0x26122E4F0](v22, -1, -1);
        }

        if (*(uint64_t *)&v35 < a3) {
          a3 = *(void *)&v35;
        }
        uint64_t v38 = a3;
      }
    }
    else
    {
      sub_2610718C8((uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    }
    uint64_t v23 = (void *)sub_26111EBC8();
    id v24 = objc_msgSend(v13, sel_objectForKey_, v23);

    if (v24)
    {
      sub_26111F108();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_261071274((uint64_t)&v36, (uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    if (v43)
    {
      if (swift_dynamicCast())
      {
        uint64_t v25 = sub_26111EAC8();
        os_log_type_t v26 = sub_26111EF58();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 134217984;
          v42[0] = *(float *)&v35;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v25, v26, "Overriding duplicate threshold to %f", v27, 0xCu);
          MEMORY[0x26122E4F0](v27, -1, -1);
        }

        int v40 = LODWORD(v35);
      }
    }
    else
    {
      sub_2610718C8((uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    }
    os_signpost_type_t v28 = (void *)sub_26111EBC8();
    id v29 = objc_msgSend(v13, sel_objectForKey_, v28);

    if (v29)
    {
      sub_26111F108();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_261071274((uint64_t)&v36, (uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    if (v43)
    {
      if (swift_dynamicCast())
      {
        uint64_t v30 = sub_26111EAC8();
        os_log_type_t v31 = sub_26111EF58();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 134217984;
          v42[0] = *(float *)&v35;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v30, v31, "Overriding modality threshold to %f", v32, 0xCu);
          MEMORY[0x26122E4F0](v32, -1, -1);
        }

        int v39 = LODWORD(v35);
      }
      else
      {
      }
    }
    else
    {

      sub_2610718C8((uint64_t)v42, (uint64_t *)&unk_26B40ADF8);
    }
  }
  uint64_t v33 = *(void *)(v4 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner + 32);
  __swift_project_boxed_opaque_existential_1Tm((void *)(v4 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner), *(void *)(v4 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner + 24));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A6A0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_261120090;
  *(void *)(result + 32) = a1;
  LOBYTE(v42[0]) = 2;
  v42[2] = 0.0;
  uint64_t v43 = 0;
  *(void *)&v42[1] = result;
  __int16 v44 = 513;
  if ((unint64_t)(a3 - 0x2000000000000000) >> 62 == 3)
  {
    MEMORY[0x270FA5388](result);
    (*(void (**)(unint64_t, double *, uint64_t, unint64_t, void))(v33 + 8))(v8, v42, 1, a2, 0);
    swift_bridgeObjectRelease();
    swift_release();
    return v41;
  }
  __break(1u);
  return result;
}

uint64_t sub_2610C98D0(uint64_t a1, uint64_t a2, uint64_t a3, float *a4, char a5, float *a6, void **a7, void *a8)
{
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    if (v10)
    {
      float v12 = *(float *)(a2 + 32);
      if (v12 >= *a4)
      {
        uint64_t v17 = *(void *)(a3 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        uint64_t v26 = v10 - 1;
        uint64_t v27 = v8 - 1;
        float v19 = 1.0;
        uint64_t v25 = a8;
        while ((a5 & 1) == 0)
        {
          uint64_t v20 = *a7;
          if (v12 < (float)(v19 * *a6)) {
            goto LABEL_8;
          }
LABEL_13:
          if (v20[2] != *a8 && v27 != v18 && v26 != v18)
          {
            uint64_t v17 = *(void *)(a3 + 8 * v18 + 40);
            float v19 = v12;
            float v12 = *(float *)(a2 + 4 * v18++ + 36);
            if (v12 >= *a4) {
              continue;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        uint64_t v20 = *a7;
LABEL_8:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a7 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v20 = sub_26105BCEC(0, v20[2] + 1, 1, v20);
          *a7 = v20;
        }
        unint64_t v23 = v20[2];
        unint64_t v22 = v20[3];
        if (v23 >= v22 >> 1) {
          uint64_t v20 = sub_26105BCEC((void *)(v22 > 1), v23 + 1, 1, v20);
        }
        v20[2] = v23 + 1;
        v20[v23 + 4] = v17;
        *a7 = v20;
        a8 = v25;
        goto LABEL_13;
      }
    }
  }
  return 1;
}

id sub_2610C9A84(void *a1)
{
  return objc_msgSend(a1, sel_setUsingVectorStore_, 1);
}

uint64_t sub_2610C9A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26111E778();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = a1 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v28 = v17;
  int64_t v29 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v31 = v5 + 16;
  uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v30 = v5 + 48;
  if ((v20 & v16) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v22 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(void *)(v33 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_26105E620((uint64_t)v10, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v21) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v28 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 3;
          if (v24 + 3 >= v29) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v28 + 8 * v15);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v21 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v29)
  {
LABEL_24:
    (*v32)(v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v34;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2610C9E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned char *a8, void *a9, void (*a10)(double))
{
  uint64_t v11 = v10;
  v71 = a8;
  uint64_t v88 = a7;
  int v87 = a6;
  uint64_t v72 = a4;
  uint64_t v16 = sub_26111E778();
  uint64_t v75 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v95 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v94 = (uint64_t)v64 - v23;
  uint64_t result = MEMORY[0x270FA5388](v22);
  if (__OFADD__(a2, a3))
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (*(void *)(a1 + 16) >= a2 + a3) {
    uint64_t v26 = a2 + a3;
  }
  else {
    uint64_t v26 = *(void *)(a1 + 16);
  }
  if (v26 < a2) {
    goto LABEL_52;
  }
  if (a2 < 0) {
    goto LABEL_53;
  }
  uint64_t v74 = (char *)v64 - v25;
  uint64_t v70 = v26 - a2;
  if (v26 == a2)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
    swift_bridgeObjectRetain_n();
    goto LABEL_9;
  }
  uint64_t v31 = a2;
  uint64_t v68 = a1 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
  uint64_t v90 = v75 + 16;
  uint64_t v83 = OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision;
  uint64_t v32 = v75 + 56;
  uint64_t v67 = v75 + 48;
  dispatch_queue_t v66 = (uint64_t (**)(char *, char *, uint64_t))(v75 + 32);
  char v65 = (uint64_t (**)(char *, uint64_t))(v75 + 8);
  uint64_t v69 = v26;
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v33 = v69;
  uint64_t v34 = v31;
  uint64_t v89 = v32;
  long long v82 = xmmword_261120FE0;
  uint64_t v79 = MEMORY[0x263F8EE60] + 8;
  v64[2] = a1;
  uint64_t v81 = v18;
  v64[1] = v32 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v80 = v16;
  uint64_t v78 = a5;
  uint64_t v35 = v94;
  while (2)
  {
    if (v34 >= v33) {
      goto LABEL_55;
    }
    uint64_t v36 = v75;
    uint64_t v37 = *(void *)(v75 + 72);
    uint64_t v73 = v34;
    uint64_t v38 = v74;
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    v85(v74, v68 + v37 * v34, v16);
    int v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v86((uint64_t)v38, 0, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v38, 1, v16) == 1) {
      goto LABEL_10;
    }
    uint64_t result = (*v66)(v18, v38, v16);
    if (*(void *)(v72 + 16))
    {
      uint64_t result = sub_26105D7C4((uint64_t)v18);
      uint64_t v39 = MEMORY[0x263F8EE88];
      int v40 = v86;
      if (v41)
      {
        uint64_t v39 = *(void *)(*(void *)(v72 + 56) + 8 * result);
        uint64_t result = swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v39 = MEMORY[0x263F8EE88];
      int v40 = v86;
    }
    int64_t v42 = 0;
    ++v73;
    uint64_t v43 = *(void *)(v39 + 56);
    uint64_t v76 = v39 + 56;
    uint64_t v44 = 1 << *(unsigned char *)(v39 + 32);
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    else {
      uint64_t v45 = -1;
    }
    unint64_t v46 = v45 & v43;
    int64_t v77 = (unint64_t)(v44 + 63) >> 6;
    uint64_t v84 = v39;
    if (v46)
    {
LABEL_27:
      char v47 = v18;
      int64_t v92 = v42;
      uint64_t v93 = v11;
      uint64_t v91 = (v46 - 1) & v46;
      unint64_t v48 = __clz(__rbit64(v46)) | (v42 << 6);
      goto LABEL_39;
    }
    while (1)
    {
      BOOL v49 = __OFADD__(v42, 1);
      int64_t v50 = v42 + 1;
      if (v49)
      {
        __break(1u);
        goto LABEL_51;
      }
      if (v50 >= v77) {
        goto LABEL_46;
      }
      unint64_t v51 = *(void *)(v76 + 8 * v50);
      if (!v51) {
        break;
      }
LABEL_38:
      char v47 = v18;
      int64_t v92 = v50;
      uint64_t v93 = v11;
      uint64_t v91 = (v51 - 1) & v51;
      unint64_t v48 = __clz(__rbit64(v51)) + (v50 << 6);
LABEL_39:
      uint64_t v53 = *(void *)(*(void *)(v39 + 48) + 8 * v48);
      uint64_t v54 = *(void *)(a5 + 16);
      uint64_t v55 = *(void *)(v88 + v83);
      v40(v35, 1, 1, v16);
      uint64_t v56 = (uint64_t)v95;
      v85(v95, (uint64_t)v47, v16);
      uint64_t v57 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v40)(v56, 0, 1, v16);
      MEMORY[0x270FA5388](v57);
      v64[-20] = 0;
      LOBYTE(v64[-19]) = 1;
      WORD1(v64[-19]) = -1;
      v64[-18] = v54;
      v64[-17] = v53;
      LOBYTE(v64[-16]) = 0;
      long long v58 = v82;
      *(_OWORD *)&v64[-15] = v82;
      *(_OWORD *)&v64[-13] = v58;
      LOBYTE(v64[-11]) = v87;
      v64[-10] = v35;
      v64[-9] = v56;
      LOBYTE(v64[-8]) = 3;
      HIDWORD(v64[-8]) = 0;
      LOBYTE(v64[-7]) = 1;
      HIDWORD(v64[-7]) = 0;
      LOWORD(v64[-6]) = 257;
      v64[-5] = v55;
      LOBYTE(v64[-4]) = 0;
      v64[-3] = 0;
      LOBYTE(v64[-2]) = 1;
      id v60 = v59;
      uint64_t v61 = v93;
      sub_26111F028();
      uint64_t v11 = v61;
      if (v61)
      {
        swift_bridgeObjectRelease();

        uint64_t v63 = v80;
        sub_2610718C8((uint64_t)v95, &qword_26B40AC70);
        sub_2610718C8(v94, &qword_26B40AC70);
        swift_release();
        (*v65)(v81, v63);
        return swift_bridgeObjectRelease();
      }

      id v62 = *(id *)(v54 + 16);
      sub_26111F028();

      sub_2610718C8((uint64_t)v95, &qword_26B40AC70);
      uint64_t result = sub_2610718C8(v94, &qword_26B40AC70);
      a5 = v78;
      uint64_t v16 = v80;
      uint64_t v18 = v81;
      int v40 = v86;
      uint64_t v39 = v84;
      unint64_t v46 = v91;
      int64_t v42 = v92;
      if (v91) {
        goto LABEL_27;
      }
    }
    int64_t v52 = v50 + 1;
    if (v50 + 1 >= v77) {
      goto LABEL_46;
    }
    unint64_t v51 = *(void *)(v76 + 8 * v52);
    if (v51) {
      goto LABEL_37;
    }
    int64_t v52 = v50 + 2;
    if (v50 + 2 >= v77) {
      goto LABEL_46;
    }
    unint64_t v51 = *(void *)(v76 + 8 * v52);
    if (v51)
    {
LABEL_37:
      int64_t v50 = v52;
      goto LABEL_38;
    }
    int64_t v52 = v50 + 3;
    if (v50 + 3 < v77)
    {
      unint64_t v51 = *(void *)(v76 + 8 * v52);
      if (!v51)
      {
        while (1)
        {
          int64_t v50 = v52 + 1;
          if (__OFADD__(v52, 1)) {
            goto LABEL_54;
          }
          if (v50 >= v77) {
            goto LABEL_46;
          }
          unint64_t v51 = *(void *)(v76 + 8 * v50);
          ++v52;
          if (v51) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_37;
    }
LABEL_46:
    swift_release();
    uint64_t result = (*v65)(v18, v16);
    uint64_t v34 = v73;
    uint64_t v33 = v69;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v86;
    if (v73 != v69) {
      continue;
    }
    break;
  }
LABEL_9:
  v27(v74, 1, 1, v16);
LABEL_10:
  swift_bridgeObjectRelease();
  unsigned char *v71 = 1;
  sub_2610F7DBC();
  if (v11) {
    return swift_bridgeObjectRelease();
  }
  uint64_t result = swift_beginAccess();
  if (!__OFADD__(*a9, v70))
  {
    *a9 += v70;
    uint64_t v28 = sub_26111EAC8();
    os_log_type_t v29 = sub_26111EF38();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134217984;
      swift_beginAccess();
      uint64_t v96 = *a9;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v28, v29, "Added %ld assets, flushing...", v30, 0xCu);
      MEMORY[0x26122E4F0](v30, -1, -1);
    }

    if (a10) {
      a10(0.0);
    }
    return swift_bridgeObjectRelease();
  }
LABEL_56:
  __break(1u);
  return result;
}

id sub_2610CA764(void *a1)
{
  return objc_msgSend(a1, sel_setStaleObservations_, 1);
}

uint64_t sub_2610CA774@<X0>(float *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, float)@<X3>, char *a5@<X8>)
{
  float v9 = (float)a2 * 0.5;
  swift_beginAccess();
  float v10 = (float)(v9 / (float)*a3) * 0.95;
  char v11 = 1;
  uint64_t result = swift_beginAccess();
  float v13 = *a1 + v10;
  *a1 = v13;
  if (a4)
  {
    uint64_t result = a4(result, fminf(v13, 1.0));
    char v11 = result & 1;
  }
  *a5 = v11;
  return result;
}

id sub_2610CA848(void *a1)
{
  return objc_msgSend(a1, sel_setVersion_, 10);
}

uint64_t sub_2610CA858()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
  uint64_t v2 = sub_26111EA68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_logger;
  uint64_t v4 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_2610CA984()
{
  return type metadata accessor for VUPersistedIndex();
}

uint64_t type metadata accessor for VUPersistedIndex()
{
  uint64_t result = qword_26B40AC38;
  if (!qword_26B40AC38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2610CA9D8()
{
  uint64_t result = sub_26111EA68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26111EAE8();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_2610CAAC8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_34;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    uint64_t result = sub_26111F4B8();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_2610CACA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610C98D0(a1, a2, a3, *(float **)(v3 + 16), *(unsigned char *)(v3 + 24), *(float **)(v3 + 32), *(void ***)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_2610CACB8()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

uint64_t sub_2610CACC8(void *a1)
{
  return sub_2610C8BD8(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_2610CACD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610C8CA4(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_2610CACF4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 28, 7);
}

uint64_t sub_2610CAD2C()
{
  return sub_2610C9088(*(void *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_2610CAD38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2610CAD80()
{
  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2610CADC8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610CADD8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2610CAE10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2610CAE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610C77CC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2610CAE80(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26111F3D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v88 = *(unsigned __int8 *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(unsigned __int8 *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          uint64_t v90 = v86 + v89;
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *(unsigned char *)uint64_t v90 = v88;
          *(void *)(v90 + 8) = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  unsigned int v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      int64_t v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_2610CBC5C((unsigned __int8 *)(v93 + 16 * v96), (unsigned __int8 *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_26108BD80((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          uint64_t v98 = &v95[16 * v94 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          int64_t v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910140);
    uint64_t v8 = sub_26111EDD8();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  unint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      unsigned int v17 = *(unsigned __int8 *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v18 = (unsigned __int8 *)(v102 + 16 * v14);
        unsigned int v19 = v15;
        while (1)
        {
          unsigned int v21 = *v18;
          v18 += 16;
          unsigned int v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          unsigned int v19 = v20;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              char v26 = *(unsigned char *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(unsigned char *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      uint64_t v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      os_log_type_t v29 = (unsigned __int8 *)(v100 + 16 * v10);
      do
      {
        unsigned int v30 = *(unsigned __int8 *)(v11 + 16 * v10);
        uint64_t v31 = v14;
        uint64_t v32 = v29;
        do
        {
          if (v30 >= *v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *((void *)v32 + 3);
          *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
          *uint64_t v32 = v30;
          *((void *)v32 + 1) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      uint64_t v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_26108B8F4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      uint64_t v84 = sub_26108B8F4((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      unint64_t v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v36 = v12 + 32;
    uint64_t v37 = &v12[16 * v35 + 32];
    *(void *)uint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          unint64_t v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        id v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        uint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v78 = v12;
        uint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_2610CBC5C((unsigned __int8 *)(v11 + 16 * *(void *)v79), (unsigned __int8 *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        unint64_t v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2610CB568(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26111F3D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  unsigned int v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_261067308((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_26108BD80((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          unint64_t v99 = &v96[16 * v95 + 32];
          *(void *)unint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A910448);
    uint64_t v8 = sub_26111EDD8();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  unint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (float *)(v11 + 16 * v10);
      do
      {
        os_log_type_t v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)os_log_type_t v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_26108B8F4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      unint64_t v83 = sub_26108B8F4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      unint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          char v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          unint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        char v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        unint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_261067308((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        unint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2610CBC5C(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  int64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        float v17 = (unsigned __int8 *)(a3 - 16);
        unint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 16;
          unsigned int v20 = *(v18 - 16);
          v18 -= 16;
          if (*(v16 - 16) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)float v17 = *((_OWORD *)v16 - 1);
            }
            unint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)float v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v23 = v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_26108BAB0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_26111F398();
  __break(1u);
  return result;
}

uint64_t sub_2610CBED8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 36, 7);
}

uint64_t sub_2610CBF10()
{
  return sub_2610C7BA4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(float *)(v0 + 32));
}

void sub_2610CBF1C(void *a1)
{
  sub_2610C68B4(a1, v1);
}

uint64_t sub_2610CBF24(unsigned int a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  unint64_t v124 = a7;
  uint64_t v121 = a6;
  unint64_t v123 = a3;
  uint64_t v122 = a2;
  unsigned int v125 = a1;
  uint64_t v119 = sub_26111EA78();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  unint64_t v18 = (char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_26111EA38();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v120 = (char *)v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v104 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v104 - v26;
  if ((a5 & 1) == 0)
  {
    uint64_t v28 = *(void *)(v13 + 16) + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters;
    swift_beginAccess();
    uint64_t v29 = *(void *)v28;
    if (!*(void *)(*(void *)v28 + 16)
      || (unint64_t v30 = sub_26105D5E8(v125), (v31 & 1) == 0)
      || *(void *)(*(void *)(*(void *)(v29 + 56) + 8 * v30) + 24) != a4)
    {
      swift_retain();
      char v41 = sub_26111EAC8();
      os_log_type_t v42 = sub_26111EF58();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 134218240;
        v126[0] = a4;
        sub_26111F0D8();
        *(_WORD *)(v43 + 12) = 2048;
        uint64_t v44 = *(void *)v28;
        uint64_t v45 = *(void *)(*(void *)v28 + 16);
        if (v45)
        {
          unint64_t v46 = sub_26105D5E8(v125);
          if (v47) {
            uint64_t v45 = *(void *)(*(void *)(*(void *)(v44 + 56) + 8 * v46) + 24);
          }
          else {
            uint64_t v45 = 0;
          }
        }
        v126[0] = v45;
        sub_26111F0D8();
        swift_release();
        _os_log_impl(&dword_261042000, v41, v42, "Embedding revision %ld is different from index revision %ld", (uint8_t *)v43, 0x16u);
        MEMORY[0x26122E4F0](v43, -1, -1);
      }
      else
      {
        swift_release();
      }

      return MEMORY[0x263F8EE78];
    }
  }
  if ((a9 & 1) == 0)
  {
    uint64_t v32 = *(void *)(v13 + 16) + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters;
    swift_beginAccess();
    uint64_t v33 = *(void *)v32;
    if (!*(void *)(*(void *)v32 + 16)
      || (unint64_t v34 = sub_26105D5E8(v125), (v35 & 1) == 0)
      || *(void *)(*(void *)(*(void *)(v33 + 56) + 8 * v34) + 32) != a8)
    {
      swift_retain();
      BOOL v48 = sub_26111EAC8();
      os_log_type_t v49 = sub_26111EF58();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 134218240;
        v126[0] = a8;
        sub_26111F0D8();
        *(_WORD *)(v50 + 12) = 2048;
        uint64_t v51 = *(void *)v32;
        uint64_t v52 = *(void *)(*(void *)v32 + 16);
        if (v52)
        {
          unint64_t v53 = sub_26105D5E8(v125);
          if (v54) {
            uint64_t v52 = *(void *)(*(void *)(*(void *)(v51 + 56) + 8 * v53) + 32);
          }
          else {
            uint64_t v52 = 0;
          }
        }
        v126[0] = v52;
        sub_26111F0D8();
        swift_release();
        _os_log_impl(&dword_261042000, v48, v49, "Contextual embedding revision %ld is different from index revision %ld", (uint8_t *)v50, 0x16u);
        MEMORY[0x26122E4F0](v50, -1, -1);
      }
      else
      {
        swift_release();
      }

      return MEMORY[0x263F8EE78];
    }
  }
  unint64_t v36 = v123;
  if (v123 >> 60 != 15)
  {
    switch(v123 >> 62)
    {
      case 1uLL:
        LODWORD(v55) = HIDWORD(v122) - v122;
        if (__OFSUB__(HIDWORD(v122), v122)) {
          goto LABEL_71;
        }
        uint64_t v55 = (int)v55;
LABEL_31:
        if (v125 != 6) {
          goto LABEL_36;
        }
        if (v55 != 3072) {
          goto LABEL_40;
        }
        goto LABEL_37;
      case 2uLL:
        uint64_t v57 = *(void *)(v122 + 16);
        uint64_t v56 = *(void *)(v122 + 24);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v55 = v56 - v57;
        if (!v58) {
          goto LABEL_31;
        }
        goto LABEL_72;
      case 3uLL:
        if (v125 == 6) {
          goto LABEL_40;
        }
        uint64_t v55 = 0;
LABEL_36:
        if (v55 != 512)
        {
LABEL_40:
          unint64_t v37 = sub_26111EAC8();
          os_log_type_t v38 = sub_26111EF58();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v39 = 0;
            uint64_t v40 = "Unexpected embedding size";
            goto LABEL_54;
          }
LABEL_55:

          return MEMORY[0x263F8EE78];
        }
LABEL_37:
        if (v124 >> 60 != 15) {
          goto LABEL_38;
        }
        goto LABEL_50;
      default:
        uint64_t v55 = BYTE6(v123);
        goto LABEL_31;
    }
  }
  if (v124 >> 60 == 15)
  {
    unint64_t v37 = sub_26111EAC8();
    os_log_type_t v38 = sub_26111EF58();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      uint64_t v40 = "Missing either an embedding or contextual embedding";
LABEL_54:
      _os_log_impl(&dword_261042000, v37, v38, v40, v39, 2u);
      MEMORY[0x26122E4F0](v39, -1, -1);
      goto LABEL_55;
    }
    goto LABEL_55;
  }
LABEL_38:
  uint64_t v59 = 0;
  switch(v124 >> 62)
  {
    case 1uLL:
      LODWORD(v59) = HIDWORD(v121) - v121;
      if (__OFSUB__(HIDWORD(v121), v121)) {
        goto LABEL_73;
      }
      uint64_t v59 = (int)v59;
LABEL_48:
      uint64_t v62 = *(void *)(*(void *)(v13 + 16) + 24);
      if ((unint64_t)(v62 - 0x2000000000000000) >> 62 != 3)
      {
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      if (v59 != 4 * v62)
      {
        unint64_t v37 = sub_26111EAC8();
        os_log_type_t v38 = sub_26111EF58();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          uint64_t v40 = "Unexpected contextual embedding size";
          goto LABEL_54;
        }
        goto LABEL_55;
      }
LABEL_50:
      uint64_t v115 = (void *)a10;
      uint64_t v63 = v13 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
      sub_26111EA28();
      uint64_t v112 = v63;
      uint64_t v64 = sub_26111EA48();
      int v65 = sub_26111F018();
      if (sub_26111F0B8())
      {
        unint64_t v116 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        LODWORD(v117) = v65;
        unint64_t v66 = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v116(v25, v27, v19);
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v67 = 0;
        os_signpost_id_t v68 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v64, (os_signpost_type_t)v117, v68, "search", "", v67, 2u);
        uint64_t v69 = v67;
        unint64_t v36 = v123;
        MEMORY[0x26122E4F0](v69, -1, -1);

        (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
        uint64_t v70 = v116;
      }
      else
      {

        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        unint64_t v66 = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      }
      unint64_t v116 = v70;
      v104[1] = v66;
      v70(v25, v27, v19);
      sub_26111EAA8();
      swift_allocObject();
      uint64_t v113 = sub_26111EA98();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v20 + 8);
      uint64_t v114 = v20 + 8;
      uint64_t v111 = v73;
      v73(v27, v19);
      uint64_t v129 = MEMORY[0x263F8EE78];
      sub_2610CAE10(v13 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner, (uint64_t)v126);
      uint64_t v107 = v128;
      uint64_t v108 = v127;
      uint64_t v109 = __swift_project_boxed_opaque_existential_1Tm(v126, v127);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A398);
      uint64_t inited = swift_initStackObject();
      long long v117 = xmmword_261120090;
      *(_OWORD *)(inited + 16) = xmmword_261120090;
      *(void *)(inited + 32) = v122;
      *(void *)(inited + 40) = v36;
      uint64_t v110 = inited;
      uint64_t v75 = swift_initStackObject();
      *(_OWORD *)(v75 + 16) = v117;
      unint64_t v76 = v124;
      *(void *)(v75 + 32) = v121;
      *(void *)(v75 + 40) = v76;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A3A8);
      uint64_t v77 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70) - 8);
      unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = v117;
      sub_261071864((uint64_t)v115, v79 + v78, &qword_26B40AC70);
      uint64_t v80 = (uint64_t *)(*(void *)(v13 + 16) + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
      swift_beginAccess();
      uint64_t v81 = *v80;
      if (!*(void *)(v81 + 16)) {
        goto LABEL_69;
      }
      *(void *)&long long v117 = v18;
      uint64_t v82 = v125;
      unint64_t v83 = sub_26105D5E8(v125);
      if ((v84 & 1) == 0)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        JUMPOUT(0x2610CCCE8);
      }
      uint64_t v115 = v104;
      uint64_t v106 = a12;
      uint64_t v85 = *(void *)(*(void *)(v81 + 56) + 8 * v83);
      MEMORY[0x270FA5388](v83);
      LOBYTE(v100) = v86 & 1;
      uint64_t v101 = v13;
      LOBYTE(v102) = v82;
      uint64_t v103 = &v129;
      uint64_t v87 = v107;
      uint64_t v105 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __int16, void, int, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v107 + 16);
      sub_26106A668(v122, v123);
      sub_26106A668(v121, v124);
      swift_retain();
      uint64_t v102 = v87;
      unint64_t v100 = &v99;
      uint64_t v101 = v108;
      LOBYTE(v99) = 1;
      v105(v82, &unk_270D2F8D0, v110, v75, v79, a11, v106, v85, 512, 0, v99, sub_2610D3160);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v126);
      uint64_t v71 = v129;
      uint64_t v88 = sub_26111EA48();
      uint64_t v89 = v120;
      sub_26111EA88();
      os_signpost_type_t v90 = sub_26111F008();
      char v91 = sub_26111F0B8();
      uint64_t v92 = v117;
      if (v91)
      {
        swift_retain();
        sub_26111EAB8();
        swift_release();
        uint64_t v93 = v118;
        uint64_t v94 = v119;
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v118 + 88))(v92, v119) == *MEMORY[0x263F90238])
        {
          unint64_t v95 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
          unint64_t v95 = "";
        }
        v116(v25, v89, v19);
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v96 = 0;
        os_signpost_id_t v97 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v88, v90, v97, "search", v95, v96, 2u);
        MEMORY[0x26122E4F0](v96, -1, -1);

        uint64_t v98 = v111;
        v111(v89, v19);
        v98(v25, v19);
      }
      else
      {

        v111(v89, v19);
      }
      swift_release();
      return v71;
    case 2uLL:
      uint64_t v61 = *(void *)(v121 + 16);
      uint64_t v60 = *(void *)(v121 + 24);
      BOOL v58 = __OFSUB__(v60, v61);
      uint64_t v59 = v60 - v61;
      if (!v58) {
        goto LABEL_48;
      }
      goto LABEL_74;
    case 3uLL:
      goto LABEL_48;
    default:
      uint64_t v59 = BYTE6(v124);
      goto LABEL_48;
  }
}

uint64_t sub_2610CCD08(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void (*a6)(double), uint64_t a7)
{
  uint64_t v650 = a7;
  v656 = a6;
  uint64_t v634 = a5;
  int v624 = a4;
  int v625 = a3;
  uint64_t v648 = a2;
  uint64_t v640 = a1;
  uint64_t v607 = sub_26111E778();
  uint64_t v646 = *(void *)(v607 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v607);
  v645 = (char *)&v528 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v644 = (uint64_t)&v528 - v11;
  MEMORY[0x270FA5388](v10);
  v651 = (char *)&v528 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A4F8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  v620 = (char *)&v528 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v658 = (char *)&v528 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v617 = (uint64_t)&v528 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v652 = sub_26111E618();
  uint64_t v653 = *(void *)(v652 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v652);
  v613 = (char *)&v528 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v612 = (char *)&v528 - v22;
  MEMORY[0x270FA5388](v21);
  v621 = (char *)&v528 - v23;
  *(double *)&uint64_t v622 = COERCE_DOUBLE(sub_26111EA78());
  uint64_t v623 = *(void *)(v622 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v622);
  v596 = (char *)&v528 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v597 = (char *)&v528 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v565 = (char *)&v528 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v564 = (char *)&v528 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v575 = (char *)&v528 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v574 = (char *)&v528 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v577 = (char *)&v528 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v576 = ((char *)&v528 - v39);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v571 = (char *)&v528 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v570 = (char *)&v528 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v592 = (char *)&v528 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v649 = (int64_t *)((char *)&v528 - v47);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  v608 = (char *)&v528 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  v595 = (char *)&v528 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v609 = (char *)&v528 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v605 = (char *)&v528 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v567 = (char *)&v528 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v566 = (char *)&v528 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  v569 = (char *)&v528 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  v568 = (char *)&v528 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  v594 = (char *)&v528 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  v593 = (char *)&v528 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  v573 = (char *)&v528 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  v572 = (char *)&v528 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v636 = (char *)&v528 - v73;
  MEMORY[0x270FA5388](v72);
  uint64_t v637 = (uint64_t)&v528 - v74;
  unint64_t v75 = sub_26111EA38();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  v604 = (char *)&v528 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  v600 = (char *)&v528 - v80;
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  v578 = (char *)&v528 - v82;
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  v581 = (char *)&v528 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  v586 = (char *)&v528 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  v590 = (char *)&v528 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  v587 = (char *)&v528 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  v591 = (char *)&v528 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  v583 = (char *)&v528 - v94;
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  v588 = (char *)&v528 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  v599 = (char *)&v528 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  v654 = (char *)&v528 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  v614 = (char *)&v528 - v102;
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  v603 = (char *)&v528 - v104;
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  v611 = (char *)&v528 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  v606 = (char *)&v528 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  v579 = (char *)&v528 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  v582 = (char *)&v528 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  v580 = (char *)&v528 - v114;
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  v584 = (char *)&v528 - v116;
  uint64_t v117 = MEMORY[0x270FA5388](v115);
  v601 = (char *)&v528 - v118;
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  v602 = (char *)&v528 - v120;
  uint64_t v121 = MEMORY[0x270FA5388](v119);
  v585 = (char *)&v528 - v122;
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  v589 = (char *)&v528 - v124;
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  v615 = (char *)&v528 - v126;
  uint64_t v127 = MEMORY[0x270FA5388](v125);
  v638 = (void (**)(uint64_t, uint64_t))((char *)&v528 - v128);
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  int64_t v643 = (int64_t)&v528 - v130;
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  unint64_t v133 = (char *)&v528 - v132;
  MEMORY[0x270FA5388](v131);
  uint64_t v135 = (char *)&v528 - v134;
  uint64_t v655 = v7;
  uint64_t v136 = v7 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_signposter;
  sub_26111EA28();
  uint64_t v642 = v136;
  unint64_t v137 = sub_26111EA48();
  os_signpost_type_t v138 = sub_26111F018();
  char v139 = sub_26111F0B8();
  v647 = v133;
  if (v139)
  {
    int v140 = *(void (**)(char *, char *, unint64_t))(v76 + 16);
    unint64_t v141 = (v76 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v140(v133, v135, v75);
    unint64_t v142 = v75;
    uint64_t v143 = v76;
    uint64_t v144 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v144 = 0;
    os_signpost_id_t v145 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v137, v138, v145, "update", "", v144, 2u);
    v146 = v144;
    uint64_t v76 = v143;
    unint64_t v75 = v142;
    unint64_t v133 = v647;
    MEMORY[0x26122E4F0](v146, -1, -1);

    (*(void (**)(char *, unint64_t))(v76 + 8))(v133, v75);
  }
  else
  {

    int v140 = *(void (**)(char *, char *, unint64_t))(v76 + 16);
    unint64_t v141 = (v76 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  v627 = v140;
  unint64_t v626 = v141;
  v140(v133, v135, v75);
  uint64_t v147 = sub_26111EAA8();
  swift_allocObject();
  uint64_t v148 = sub_26111EA98();
  v150 = *(void (**)(char *, unint64_t))(v76 + 8);
  uint64_t v149 = v76 + 8;
  v641 = v150;
  v150(v135, v75);
  uint64_t v151 = *(uint64_t *)(v655 + 16);
  uint64_t v152 = v657;
  sub_2610F7DBC();
  uint64_t v632 = v148;
  if (v152)
  {
    uint64_t v153 = sub_26111EA48();
    uint64_t v154 = v654;
    sub_26111EA88();
    os_signpost_type_t v155 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      v156 = v649;
      sub_26111EAB8();
      swift_release();
      uint64_t v157 = v623;
      uint64_t v158 = v622;
      if ((*(unsigned int (**)(void *, uint64_t))(v623 + 88))(v156, v622) == *MEMORY[0x263F90238])
      {
        uint64_t v159 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void *, uint64_t))(v157 + 8))(v156, v158);
        uint64_t v159 = "";
      }
      v383 = v647;
      v384 = v654;
      v627(v647, v654, v75);
      unint64_t v385 = v75;
      v386 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v386 = 0;
      os_signpost_id_t v387 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v153, v155, v387, "update", v159, v386, 2u);
      MEMORY[0x26122E4F0](v386, -1, -1);

      v388 = v641;
      v641(v384, v385);
      v388(v383, v385);
    }
    else
    {

      v641(v154, v75);
    }
    return swift_release();
  }
  uint64_t v160 = swift_allocObject();
  *(void *)(v160 + 16) = sub_2610E6F44(0, 0, 1);
  v556 = (void *)(v160 + 16);
  uint64_t v616 = swift_allocObject();
  *(_DWORD *)(v616 + 16) = 0;
  v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v653 + 48);
  uint64_t v629 = v653 + 48;
  v628 = v161;
  uint64_t v162 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v161)(v648, 1, v652);
  uint64_t v558 = v147;
  if (v162 != 1)
  {
    MEMORY[0x270FA5388](v162);
    id v382 = v381;
    sub_26111F028();
    unint64_t v137 = 0;

    id v399 = *(id *)(v151 + 16);
    sub_26111F028();
  }
  uint64_t v163 = (uint64_t *)(v151 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
  swift_beginAccess();
  uint64_t v164 = *v163;
  swift_bridgeObjectRetain_n();
  *(double *)&uint64_t v165 = COERCE_DOUBLE(sub_261074858(v164));
  swift_bridgeObjectRelease();
  double aBlock = *(double *)&v165;
  sub_2610C5C5C((uint64_t *)&aBlock, (uint64_t (*)(uint64_t))sub_26108BDE4, sub_2610CAE80);
  uint64_t v166 = 0;
  swift_bridgeObjectRelease();
  uint64_t v167 = v652;
  v630 = *(char **)(*(void *)&aBlock + 16);
  if (!v630)
  {
LABEL_179:
    swift_release();
    uint64_t v389 = sub_2610EB364();
    v390 = v614;
    if (v656) {
      ((void (*)(uint64_t, float))v656)(v389, 1.0);
    }
    swift_release();
    swift_release();
    v391 = sub_26111EA48();
    sub_26111EA88();
    os_signpost_type_t v392 = sub_26111F008();
    if ((sub_26111F0B8() & 1) == 0) {
      goto LABEL_184;
    }
    swift_retain();
    v393 = v608;
    sub_26111EAB8();
    v394 = v393;
    swift_release();
    uint64_t v395 = v623;
    v396 = v393;
    uint64_t v397 = v622;
    if ((*(unsigned int (**)(char *, uint64_t))(v623 + 88))(v396, v622) == *MEMORY[0x263F90238])
    {
      v398 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v395 + 8))(v394, v397);
      v398 = "";
    }
    v400 = v647;
    v401 = v614;
    v627(v647, v614, v75);
    v402 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v402 = 0;
    os_signpost_id_t v403 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v391, v392, v403, "update", v398, v402, 2u);
    MEMORY[0x26122E4F0](v402, -1, -1);

    v404 = v641;
    v641(v401, v75);
    v404(v400, v75);
    return swift_release();
  }
  uint64_t v553 = OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_quantizer;
  uint64_t v563 = v655 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_logger;
  uint64_t v562 = v655 + OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_scanner;
  uint64_t v560 = OBJC_IVAR____TtC19VisualUnderstanding16VUPersistedIndex_clusterer;
  uint64_t v631 = *(void *)&aBlock + 32;
  double v618 = aBlock;
  swift_beginAccess();
  double v169 = v618;
  unint64_t v170 = 0;
  v559 = v667;
  v547 = &v666;
  v549 = (void (**)(char *, uint64_t, uint64_t))(v653 + 32);
  v542 = (char *)&v661 + 1;
  uint64_t v171 = 1819047270;
  if (v625) {
    uint64_t v171 = 1953718630;
  }
  uint64_t v541 = v171;
  v546 = &v662;
  v548 = (void (**)(char *, char *, uint64_t))(v653 + 16);
  v552 = (void (**)(char *, uint64_t))(v653 + 8);
  v544 = (uint64_t (**)(char *, uint64_t))(v623 + 88);
  int v545 = *MEMORY[0x263F90238];
  v538 = (void (**)(char *, uint64_t))(v623 + 8);
  v536 = (char *)&v662 + 8;
  v654 = (char *)(v646 + 16);
  v554 = (v646 + 32);
  v638 = (void (**)(uint64_t, uint64_t))(v646 + 8);
  *(void *)&long long v168 = 16777986;
  long long v540 = v168;
  *(void *)&long long v168 = 134218496;
  long long v534 = v168;
  *((void *)&v172 + 1) = 2;
  long long v561 = xmmword_261120090;
  *(void *)&long long v172 = 134217984;
  long long v551 = v172;
  *(void *)&long long v172 = 134218240;
  long long v532 = v172;
  *(void *)&long long v172 = 136315138;
  long long v537 = v172;
  unint64_t v530 = 0x8000000261123E40;
  uint64_t v539 = MEMORY[0x263F8EE58] + 8;
  uint64_t v535 = MEMORY[0x263F8EE60] + 8;
  v531 = "bel";
  unint64_t v533 = 0x8000000261123E10;
  uint64_t v610 = v149;
  uint64_t v619 = v160;
  v173 = v656;
  uint64_t v174 = v640;
  uint64_t v639 = v151;
  unint64_t v550 = v75;
  while (1)
  {
    if (v170 >= *(void *)(*(void *)&v169 + 16))
    {
      __break(1u);
LABEL_225:
      v657 = v137;
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v462 = sub_26111EA48();
      sub_26111EA88();
      os_signpost_type_t v463 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        v464 = v568;
        sub_26111EAB8();
        swift_release();
        uint64_t v465 = v622;
        int v466 = (*v544)(v464, v622);
        if (v466 == v545)
        {
          v467 = "[Error] Interval already ended";
        }
        else
        {
          (*v538)(v464, v465);
          v467 = "";
        }
        v509 = v647;
        v510 = v584;
        v627(v647, v584, v75);
        v511 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v511 = 0;
        os_signpost_id_t v512 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v462, v463, v512, "syncAssets", v467, v511, 2u);
        MEMORY[0x26122E4F0](v511, -1, -1);

        v473 = v641;
        v641(v510, v75);
        v473(v509, v75);
      }
      else
      {

        v473 = v641;
        v641(v584, v75);
      }
      swift_release();
      swift_release();
      (*v552)(v621, v652);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
      swift_release();
      swift_release();
      v391 = sub_26111EA48();
      v481 = v580;
      sub_26111EA88();
      os_signpost_type_t v482 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        v513 = v569;
        sub_26111EAB8();
        swift_release();
        uint64_t v514 = v622;
        int v515 = (*v544)(v513, v622);
        if (v515 == v545)
        {
          v486 = "[Error] Interval already ended";
        }
        else
        {
          (*v538)(v513, v514);
          v486 = "";
        }
        v487 = v647;
        v488 = (void (*)(char *, uint64_t, unint64_t))v627;
        v489 = &v612;
LABEL_260:
        v516 = (char *)*(v489 - 32);
        v488(v487, (uint64_t)v516, v75);
        v517 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v517 = 0;
        os_signpost_id_t v518 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v391, v482, v518, "update", v486, v517, 2u);
        MEMORY[0x26122E4F0](v517, -1, -1);

        v519 = v641;
        v641(v516, v75);
        v519(v487, v75);
        return swift_release();
      }
LABEL_266:

      v503 = v481;
      unint64_t v504 = v75;
LABEL_267:
      v473(v503, v504);
      return swift_release();
    }
    v175 = (unsigned __int8 *)(v631 + 16 * v170);
    uint64_t v165 = *v175;
    unint64_t v137 = *((void *)v175 + 1);
    if (v174)
    {
      uint64_t v176 = *(void *)(v174 + 16);
      if (!v176) {
        goto LABEL_16;
      }
      if (*(unsigned __int8 *)(v174 + 32) != v165)
      {
        if (v176 == 1) {
          goto LABEL_16;
        }
        if (*(unsigned __int8 *)(v174 + 33) != v165)
        {
          if (v176 == 2) {
            goto LABEL_16;
          }
          uint64_t v217 = 34;
          while (1)
          {
            uint64_t v218 = v217 - 31;
            if (__OFADD__(v217 - 32, 1)) {
              break;
            }
            if (*(unsigned __int8 *)(v174 + v217) == v165) {
              goto LABEL_21;
            }
            ++v217;
            if (v218 == v176) {
              goto LABEL_16;
            }
          }
          __break(1u);
LABEL_237:
          (*v538)((char *)v166, v165);
          v459 = "";
LABEL_238:
          v477 = v647;
          v478 = v591;
          v627(v647, v591, v75);
          v479 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v479 = 0;
          os_signpost_id_t v480 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v173, (os_signpost_type_t)v137, v480, "syncAssets", v459, v479, 2u);
          MEMORY[0x26122E4F0](v479, -1, -1);

          v473 = v641;
          v641(v478, v75);
          v473(v477, v75);
LABEL_239:
          swift_release();
          swift_release();
          (*v552)(v621, v652);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
          swift_release();
          swift_release();
          v391 = sub_26111EA48();
          v481 = v587;
          sub_26111EA88();
          os_signpost_type_t v482 = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            v483 = v577;
            sub_26111EAB8();
            swift_release();
            uint64_t v484 = v622;
            int v485 = (*v544)(v483, v622);
            if (v485 == v545)
            {
              v486 = "[Error] Interval already ended";
            }
            else
            {
              (*v538)(v483, v484);
              v486 = "";
            }
            v487 = v647;
            v488 = (void (*)(char *, uint64_t, unint64_t))v627;
            v489 = &v619;
            goto LABEL_260;
          }
          goto LABEL_266;
        }
      }
    }
LABEL_21:
    v636 = (char *)v170;
    v657 = v166;
    BOOL v177 = v628(v648, 1, v167) != 1 && v165 == 6;
    BOOL v178 = v177;
    LODWORD(v653) = v178;
    v649 = (void *)v165;
    if (v177) {
      break;
    }
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v181 = swift_allocObject();
    *(_OWORD *)(v181 + 16) = v561;
    *(void *)(v181 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v181 + 64) = MEMORY[0x263F8D750];
    *(double *)(v181 + 32) = *(double *)&v165;
    v182 = v137;
    swift_retain();
    v183 = (void *)sub_26111EEF8();
    *(void *)&long long v662 = 0;
    BYTE8(v662) = 1;
    v184 = *(void **)(v151 + 16);
    *(double *)&uint64_t v165 = COERCE_DOUBLE(swift_allocObject());
    *(void *)(v165 + 16) = v183;
    *(void *)(v165 + 24) = 1;
    *(unsigned char *)(v165 + 32) = 0;
    *(void *)(v165 + 40) = &v662;
    *(double *)(v165 + 48) = *(double *)&v151;
    uint64_t v185 = swift_allocObject();
    *(void *)(v185 + 16) = sub_2610D2E80;
    *(double *)(v185 + 24) = *(double *)&v165;
    v667[2] = sub_2610D3174;
    v667[3] = v185;
    double aBlock = MEMORY[0x263EF8330];
    uint64_t v666 = 1107296256;
    v667[0] = sub_26105A22C;
    v667[1] = &block_descriptor_48;
    v186 = _Block_copy(&aBlock);
    id v187 = v184;
    swift_retain();
    swift_retain();
    unint64_t v137 = v183;
    swift_release();
    objc_msgSend(v187, sel_performBlockAndWait_, v186);

    _Block_release(v186);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
LABEL_245:
      (*v538)((char *)v185, v165);
      v461 = "";
      goto LABEL_246;
    }
    uint64_t v189 = v662;
    int v190 = BYTE8(v662);

    uint64_t v179 = swift_release();
    if (v190 != 1)
    {
      uint64_t v149 = v610;
      unint64_t v137 = v182;
      uint64_t v151 = v639;
      if (v189)
      {
        v173 = v656;
        LOWORD(v165) = (_WORD)v649;
        if ((v624 & 1) == 0) {
          goto LABEL_35;
        }
LABEL_30:
        int v180 = 1;
        goto LABEL_36;
      }
      swift_release();
      uint64_t v166 = v657;
      uint64_t v167 = v652;
LABEL_55:
      v173 = v656;
      uint64_t v174 = v640;
      goto LABEL_15;
    }
    swift_release();
    uint64_t v149 = v610;
    uint64_t v166 = v657;
    uint64_t v167 = v652;
    v173 = v656;
    uint64_t v174 = v640;
    uint64_t v151 = v639;
LABEL_15:
    double v169 = v618;
    unint64_t v170 = (unint64_t)v636;
LABEL_16:
    if ((char *)++v170 == v630) {
      goto LABEL_179;
    }
  }
  uint64_t v179 = swift_retain();
  if (v624) {
    goto LABEL_30;
  }
LABEL_35:
  uint64_t v179 = sub_2610EE5FC(v165);
  int v180 = v191 | (v179 != 10);
LABEL_36:
  int v635 = v180;
  if ((v634 & 0x100000000) == 0) {
    LODWORD(v137[7].isa) = v634;
  }
  v633 = (char *)v137;
  MEMORY[0x270FA5388](v179);
  id v193 = v192;
  v194 = (char *)v657;
  sub_26111F028();

  if (LOBYTE(aBlock) == 1)
  {
    uint64_t v195 = v619;
    int v196 = v653;
    if ((v653 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_46:
    uint64_t v166 = v194;
    uint64_t v167 = v652;
    if (v173) {
      goto LABEL_47;
    }
  }
  else
  {
    int v196 = v653;
    uint64_t v195 = v619;
    if (v653 & 1 | ((v635 & 1) == 0)) {
      goto LABEL_46;
    }
LABEL_40:
    double Current = CFAbsoluteTimeGetCurrent();
    v198 = (uint64_t *)swift_allocObject();
    uint64_t v199 = v650;
    v198[2] = (uint64_t)v173;
    v198[3] = v199;
    sub_261071800((uint64_t)v173);
    sub_26109ACEC(v649, v635 & 1, (uint64_t)sub_2610D3040, v198);
    uint64_t v166 = v194;
    if (v194)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v391 = sub_26111EA48();
      v390 = v599;
      sub_26111EA88();
      os_signpost_type_t v415 = sub_26111F008();
      if ((sub_26111F0B8() & 1) == 0) {
        goto LABEL_184;
      }
      swift_retain();
      v427 = v592;
      sub_26111EAB8();
      swift_release();
      uint64_t v428 = v622;
      int v429 = (*v544)(v427, v622);
      if (v429 == v545)
      {
        v419 = "[Error] Interval already ended";
      }
      else
      {
        (*v538)(v427, v428);
        v419 = "";
      }
      v434 = v647;
      v435 = (void (*)(char *, uint64_t, unint64_t))v627;
      v436 = v647;
      v437 = &v632;
LABEL_187:
      v405 = (char *)*(v437 - 32);
      v435(v436, (uint64_t)v405, v75);
      v406 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v406 = 0;
      os_signpost_id_t v407 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v391, v415, v407, "update", v419, v406, 2u);
      MEMORY[0x26122E4F0](v406, -1, -1);

      v430 = v641;
      v641(v405, v75);
      v430(v434, v75);
      return swift_release();
    }
    swift_release();
    double v200 = CFAbsoluteTimeGetCurrent();
    v201 = sub_26111EAC8();
    os_log_type_t v202 = sub_26111EF48();
    if (os_log_type_enabled(v201, v202))
    {
      v203 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v203 = v551;
      double aBlock = v200 - Current;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v201, v202, "Updating partitions took %fs", v203, 0xCu);
      v204 = v203;
      uint64_t v166 = 0;
      MEMORY[0x26122E4F0](v204, -1, -1);
    }

    uint64_t v167 = v652;
    int v196 = v653;
    if (v173) {
LABEL_47:
    }
      ((void (*)(double))v173)(0.0);
  }
  sub_2610CAE10(v562, (uint64_t)&aBlock);
  if (!v196) {
    goto LABEL_51;
  }
  uint64_t v205 = v617;
  sub_261071864(v648, v617, (uint64_t *)&unk_26B40AC60);
  if (v628(v205, 1, v167) == 1)
  {
    sub_2610718C8(v205, (uint64_t *)&unk_26B40AC60);
LABEL_51:
    unint64_t v206 = v75;
    uint64_t v207 = v149;
    uint64_t v208 = v195;
    uint64_t v209 = v655;
    sub_2610CAE10((uint64_t)&aBlock, (uint64_t)&v662);
    v210 = (void *)swift_allocObject();
    uint64_t v211 = v616;
    v210[2] = v209;
    v210[3] = v211;
    v210[4] = v208;
    v212 = v656;
    uint64_t v213 = v650;
    v210[5] = v656;
    v210[6] = v213;
    sub_261071800((uint64_t)v212);
    swift_retain();
    sub_2610FD9AC(v649, v633, &v662, 0, v625 & 1, v635 & 1, (uint64_t (*)(void))sub_2610D2EF8, (uint64_t)v210);
    if (!v166)
    {
      swift_retain();
      swift_retain();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v662);
      uint64_t v214 = swift_release();
      MEMORY[0x270FA5388](v214);
      unint64_t v137 = (&v528 - 6);
      id v216 = v215;
      sub_26111F028();

      uint64_t v149 = v207;
      unint64_t v75 = v206;
      uint64_t v151 = v639;
      goto LABEL_53;
    }
    swift_retain();
    swift_retain();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v662);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    swift_release();
    swift_release();
    swift_release();
    v408 = sub_26111EA48();
    v409 = v600;
    sub_26111EA88();
    os_signpost_type_t v410 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      v411 = v597;
      sub_26111EAB8();
      swift_release();
      uint64_t v412 = v622;
      int v413 = (*v544)(v411, v622);
      if (v413 == v545)
      {
        v414 = "[Error] Interval already ended";
      }
      else
      {
        (*v538)(v411, v412);
        v414 = "";
      }
      v433 = v647;
      unint64_t v438 = v206;
      v627(v647, v409, v206);
      v439 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v439 = 0;
      os_signpost_id_t v440 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v408, v410, v440, "update", v414, v439, 2u);
      MEMORY[0x26122E4F0](v439, -1, -1);

      v441 = v641;
      v641(v409, v438);
      v441(v433, v438);
    }
    else
    {

      v641(v409, v206);
    }
    return swift_release();
  }
  v657 = v166;
  (*v549)(v621, v205, v167);
  v219 = v615;
  sub_26111EA28();
  v220 = sub_26111EA48();
  os_signpost_type_t v221 = sub_26111F018();
  if (sub_26111F0B8())
  {
    v222 = v647;
    v223 = v627;
    v627(v647, v219, v75);
    v224 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v224 = 0;
    os_signpost_id_t v225 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v220, v221, v225, "syncAssets", "", v224, 2u);
    v226 = v224;
    v219 = v615;
    MEMORY[0x26122E4F0](v226, -1, -1);

    v227 = v641;
    v641(v222, v75);
  }
  else
  {

    v222 = v647;
    v227 = v641;
    v223 = v627;
  }
  v223(v222, v219, v75);
  swift_allocObject();
  uint64_t v555 = sub_26111EA98();
  v227(v219, v75);
  v228 = sub_26111EAC8();
  os_log_type_t v229 = sub_26111EF38();
  if (os_log_type_enabled(v228, v229))
  {
    uint64_t v230 = swift_slowAlloc();
    uint64_t v231 = swift_slowAlloc();
    *(void *)&long long v662 = v231;
    *(_DWORD *)uint64_t v230 = v540;
    LOBYTE(v661) = 6;
    sub_26111F0D8();
    *(_WORD *)(v230 + 5) = 2080;
    uint64_t v661 = sub_26105CFF8(v541, 0xE400000000000000, (uint64_t *)&v662);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v230 + 15) = 2080;
    if (v635) {
      uint64_t v232 = 0x646563726F662820;
    }
    else {
      uint64_t v232 = 0;
    }
    if (v635) {
      unint64_t v233 = 0xE900000000000029;
    }
    else {
      unint64_t v233 = 0xE000000000000000;
    }
    uint64_t v661 = sub_26105CFF8(v232, v233, (uint64_t *)&v662);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v228, v229, "Using vector store to update type %hhu in %s mode%s", (uint8_t *)v230, 0x19u);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v231, -1, -1);
    MEMORY[0x26122E4F0](v230, -1, -1);
  }

  v234 = v657;
  uint64_t v235 = v652;
  uint64_t v236 = (uint64_t)v620;
  v237 = *v548;
  v238 = v612;
  v239 = v621;
  (*v548)(v612, v621, v652);
  uint64_t v240 = type metadata accessor for VUVectorSearchStore();
  swift_allocObject();
  v241 = v234;
  uint64_t v242 = sub_261116924(v238);
  uint64_t v243 = v235;
  v244 = v613;
  if (v241)
  {

    v237(v244, v239, v243);
    v245 = sub_26111EAC8();
    os_log_type_t v246 = sub_26111EF58();
    if (os_log_type_enabled(v245, v246))
    {
      v247 = (uint8_t *)swift_slowAlloc();
      uint64_t v248 = swift_slowAlloc();
      *(void *)&long long v662 = v248;
      *(_DWORD *)v247 = v537;
      uint64_t v249 = sub_26111E528();
      uint64_t v661 = sub_26105CFF8(v249, v250, (uint64_t *)&v662);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      v657 = *v552;
      ((void (*)(char *, uint64_t))v657)(v244, v652);
      _os_log_impl(&dword_261042000, v245, v246, "Cannot open the vector store at %s!", v247, 0xCu);
      swift_arrayDestroy();
      uint64_t v251 = v248;
      uint64_t v167 = v652;
      MEMORY[0x26122E4F0](v251, -1, -1);
      MEMORY[0x26122E4F0](v247, -1, -1);
    }
    else
    {
      uint64_t v167 = v243;

      v657 = *v552;
      ((void (*)(char *, uint64_t))v657)(v244, v243);
    }
    unint64_t v75 = v550;
    uint64_t v149 = v610;
    *(double *)&v259 = COERCE_DOUBLE(sub_26111EA48());
    v260 = v611;
    sub_26111EA88();
    unint64_t v137 = sub_26111F008();
    uint64_t v165 = (uint64_t)v259;
    if (sub_26111F0B8())
    {
      swift_retain();
      v261 = v609;
      sub_26111EAB8();
      swift_release();
      v262 = v261;
      uint64_t v263 = v622;
      int v264 = (*v544)(v262, v622);
      v265 = "[Error] Interval already ended";
      if (v264 != v545)
      {
        (*v538)(v609, v263);
        v265 = "";
      }
      uint64_t v165 = (uint64_t)v647;
      v266 = v611;
      v627(v647, v611, v75);
      v267 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v267 = 0;
      os_signpost_id_t v268 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v259, (os_signpost_type_t)v137, v268, "syncAssets", v265, v267, 2u);
      MEMORY[0x26122E4F0](v267, -1, -1);

      v269 = (void (*)(uint64_t, unint64_t))v641;
      v641(v266, v75);
      uint64_t v270 = v165;
      uint64_t v167 = v652;
    }
    else
    {

      uint64_t v270 = (uint64_t)v260;
      v269 = (void (*)(uint64_t, unint64_t))v641;
    }
    uint64_t v151 = v639;
    v269(v270, v75);
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v657)(v621, v167);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    uint64_t v166 = 0;
    goto LABEL_55;
  }
  uint64_t v529 = v240;
  char v660 = 0;
  v252 = v633;
  uint64_t v253 = *((void *)v633 + 3);
  uint64_t v254 = OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision;
  uint64_t v255 = v242;
  uint64_t v256 = *(void *)(v242 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision);
  uint64_t v543 = swift_retain();
  v657 = 0;
  if (v253 == v256)
  {
    v257 = v656;
    uint64_t v258 = (uint64_t)v651;
    uint64_t v149 = v610;
    goto LABEL_95;
  }
  swift_retain();
  swift_retain();
  v271 = sub_26111EAC8();
  os_log_type_t v272 = sub_26111EF68();
  BOOL v273 = os_log_type_enabled(v271, v272);
  uint64_t v149 = v610;
  if (v273)
  {
    uint64_t v274 = swift_slowAlloc();
    *(_DWORD *)uint64_t v274 = v532;
    *(void *)&long long v662 = *((void *)v252 + 3);
    sub_26111F0D8();
    swift_release();
    *(_WORD *)(v274 + 12) = 2048;
    *(void *)&long long v662 = *(void *)(v255 + v254);
    sub_26111F0D8();
    swift_release();
    _os_log_impl(&dword_261042000, v271, v272, "Resetting index as a new embedding revision is available: %ld -> %ld", (uint8_t *)v274, 0x16u);
    MEMORY[0x26122E4F0](v274, -1, -1);
  }
  else
  {
    swift_release();
    swift_release();
  }

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v275 = swift_allocObject();
  *(_OWORD *)(v275 + 16) = v561;
  *(void *)(v275 + 56) = MEMORY[0x263F8E778];
  *(void *)(v275 + 64) = MEMORY[0x263F8E7C0];
  *(unsigned char *)(v275 + 32) = 6;
  v276 = (void *)sub_26111EEF8();
  MEMORY[0x270FA5388](v276);
  id v278 = v277;
  v279 = v657;
  sub_26111F028();
  if (v279)
  {

    swift_release_n();
    swift_release();

    v182 = sub_26111EA48();
    sub_26111EA88();
    LOBYTE(v186) = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v185 = (uint64_t)v572;
      sub_26111EAB8();
      swift_release();
      uint64_t v165 = v622;
      int v460 = (*v544)((char *)v185, v622);
      if (v460 != v545) {
        goto LABEL_245;
      }
      v461 = "[Error] Interval already ended";
LABEL_246:
      v490 = v647;
      unint64_t v476 = v550;
      v491 = v589;
      v627(v647, v589, v550);
      v492 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v492 = 0;
      os_signpost_id_t v493 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v182, (os_signpost_type_t)v186, v493, "syncAssets", v461, v492, 2u);
      MEMORY[0x26122E4F0](v492, -1, -1);

      v473 = v641;
      v641(v491, v476);
      uint64_t v474 = v652;
      v475 = v585;
      v473(v490, v476);
    }
    else
    {

      v473 = v641;
      uint64_t v474 = v652;
      v475 = v585;
      unint64_t v476 = v550;
      v641(v589, v550);
    }
    swift_release();
    swift_release();
    (*v552)(v621, v474);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    swift_release();
    swift_release();
    v494 = sub_26111EA48();
    sub_26111EA88();
    os_signpost_type_t v495 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      v496 = v573;
      sub_26111EAB8();
      swift_release();
      uint64_t v497 = v622;
      int v498 = (*v544)(v496, v622);
      os_signpost_type_t v499 = v495;
      if (v498 == v545)
      {
        v500 = "[Error] Interval already ended";
      }
      else
      {
        (*v538)(v496, v497);
        v500 = "";
      }
      v501 = v647;
      unint64_t v502 = v550;
      v505 = v585;
      v627(v647, v585, v550);
      v506 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v506 = 0;
      os_signpost_id_t v507 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v494, v499, v507, "update", v500, v506, 2u);
      MEMORY[0x26122E4F0](v506, -1, -1);

      v508 = v641;
      v641(v505, v502);
      v508(v501, v502);
      return swift_release();
    }

    v503 = v475;
    unint64_t v504 = v476;
    goto LABEL_267;
  }

  char v660 = 1;
  uint64_t v280 = sub_2610F7DBC();
  v257 = v656;
  v657 = 0;
  if (v656) {
    ((void (*)(uint64_t, double))v656)(v280, 0.0);
  }
  uint64_t v258 = (uint64_t)v651;
LABEL_95:
  uint64_t v281 = swift_allocObject();
  uint64_t v282 = v650;
  *(void *)(v281 + 16) = v257;
  *(void *)(v281 + 24) = v282;
  sub_261071800((uint64_t)v257);
  uint64_t v283 = sub_2611176DC((void (*)(void))sub_2610D2FC8, v281);
  uint64_t v284 = swift_release();
  MEMORY[0x270FA5388](v284);
  id v286 = v285;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A478);
  v287 = v657;
  sub_26111F028();
  v657 = v287;

  uint64_t v653 = v662;
  uint64_t v661 = MEMORY[0x263F8EE88];
  uint64_t v659 = MEMORY[0x263F8EE88];
  uint64_t v288 = *(void *)(v283 + 64);
  uint64_t v557 = v283 + 64;
  uint64_t v289 = 1 << *(unsigned char *)(v283 + 32);
  if (v289 < 64) {
    uint64_t v290 = ~(-1 << v289);
  }
  else {
    uint64_t v290 = -1;
  }
  unint64_t v75 = v290 & v288;
  int64_t v598 = (unint64_t)(v289 + 63) >> 6;
  int64_t v528 = v598 - 1;
  uint64_t v637 = v283;
  swift_bridgeObjectRetain();
  int64_t v643 = 0;
  uint64_t v167 = v607;
  uint64_t v291 = (uint64_t)v658;
  v292 = v554;
  while (2)
  {
    if (v75)
    {
      unint64_t v297 = __clz(__rbit64(v75));
      v75 &= v75 - 1;
      unint64_t v298 = v297 | (v643 << 6);
      goto LABEL_103;
    }
    int64_t v302 = v643 + 1;
    if (__OFADD__(v643, 1))
    {
      __break(1u);
      goto LABEL_235;
    }
    if (v302 >= v598) {
      goto LABEL_121;
    }
    unint64_t v303 = *(void *)(v557 + 8 * v302);
    if (!v303)
    {
      int64_t v304 = v643 + 2;
      ++v643;
      if (v302 + 1 < v598)
      {
        unint64_t v303 = *(void *)(v557 + 8 * v304);
        if (v303)
        {
LABEL_110:
          int64_t v302 = v304;
          goto LABEL_107;
        }
        int64_t v643 = v302 + 1;
        if (v302 + 2 < v598)
        {
          unint64_t v303 = *(void *)(v557 + 8 * (v302 + 2));
          if (v303)
          {
            v302 += 2;
            goto LABEL_107;
          }
          int64_t v304 = v302 + 3;
          int64_t v643 = v302 + 2;
          if (v302 + 3 < v598)
          {
            unint64_t v303 = *(void *)(v557 + 8 * v304);
            if (!v303)
            {
              while (1)
              {
                int64_t v302 = v304 + 1;
                if (__OFADD__(v304, 1)) {
                  goto LABEL_271;
                }
                if (v302 >= v598)
                {
                  int64_t v643 = v528;
                  goto LABEL_121;
                }
                unint64_t v303 = *(void *)(v557 + 8 * v302);
                ++v304;
                if (v303) {
                  goto LABEL_107;
                }
              }
            }
            goto LABEL_110;
          }
        }
      }
LABEL_121:
      uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910488);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v305 - 8) + 56))(v236, 1, 1, v305);
      unint64_t v75 = 0;
      goto LABEL_122;
    }
LABEL_107:
    unint64_t v75 = (v303 - 1) & v303;
    unint64_t v298 = __clz(__rbit64(v303)) + (v302 << 6);
    int64_t v643 = v302;
LABEL_103:
    uint64_t v299 = v637;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v646 + 16))(v236, *(void *)(v637 + 48) + *(void *)(v646 + 72) * v298, v167);
    uint64_t v300 = *(void *)(v299 + 56);
    uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910488);
    *(void *)(v236 + *(int *)(v301 + 48)) = *(void *)(v300 + 8 * v298);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v301 - 8) + 56))(v236, 0, 1, v301);
    swift_bridgeObjectRetain();
    uint64_t v291 = (uint64_t)v658;
LABEL_122:
    sub_261071274(v236, v291, &qword_26B40A4F8);
    uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910488);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v306 - 8) + 48))(v291, 1, v306) != 1)
    {
      uint64_t v307 = v291;
      uint64_t v308 = *(void *)(v291 + *(int *)(v306 + 48));
      ((void (*)(uint64_t, uint64_t, uint64_t))v292->isa)(v258, v307, v167);
      if (*(void *)(v653 + 16) && (unint64_t v309 = sub_26105D7C4(v258), (v310 & 1) != 0))
      {
        char v311 = sub_2610CAAC8(*(void *)(*(void *)(v653 + 56) + 8 * v309), v308);
        swift_bridgeObjectRelease();
        if (v311)
        {
          (*v638)(v258, v167);
        }
        else
        {
          v312 = *(void (**)(char *, char *, uint64_t))v654;
          v313 = v645;
          (*(void (**)(char *, uint64_t, uint64_t))v654)(v645, v258, v167);
          swift_beginAccess();
          uint64_t v314 = v644;
          sub_26105E620(v644, v313);
          swift_endAccess();
          v315 = *v638;
          (*v638)(v314, v167);
          v312(v313, v651, v167);
          v292 = v554;
          swift_beginAccess();
          v316 = v313;
          uint64_t v236 = (uint64_t)v620;
          sub_26105E620(v314, v316);
          swift_endAccess();
          uint64_t v317 = v314;
          uint64_t v258 = (uint64_t)v651;
          v315(v317, v167);
          v315(v258, v167);
          uint64_t v149 = v610;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v293 = v645;
        (*(void (**)(char *, uint64_t, uint64_t))v654)(v645, v258, v167);
        swift_beginAccess();
        uint64_t v294 = v644;
        sub_26105E620(v644, v293);
        swift_endAccess();
        v295 = *v638;
        uint64_t v296 = v294;
        uint64_t v258 = (uint64_t)v651;
        (*v638)(v296, v167);
        v295(v258, v167);
      }
      uint64_t v291 = (uint64_t)v658;
      continue;
    }
    break;
  }
  uint64_t v318 = v637;
  swift_release();
  uint64_t v319 = sub_261072B84(v653);
  uint64_t v320 = swift_bridgeObjectRetain();
  uint64_t v321 = sub_261072B84(v320);
  if (*(void *)(v321 + 16) <= *(void *)(v319 + 16) >> 3)
  {
    *(void *)&long long v662 = v319;
    sub_26108CB40(v321);
    swift_bridgeObjectRelease();
    uint64_t v322 = v662;
  }
  else
  {
    uint64_t v322 = sub_26108D264(v321, v319);
    swift_bridgeObjectRelease();
  }
  unint64_t v75 = v550;
  uint64_t v323 = v543;
  swift_beginAccess();
  uint64_t v324 = v659;
  swift_bridgeObjectRetain();
  uint64_t v325 = sub_2610C9A94(v322, v324);
  uint64_t v659 = v325;
  swift_bridgeObjectRelease();
  if (!*(void *)(v325 + 16)) {
    goto LABEL_135;
  }
  uint64_t v663 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A448);
  v664 = (_UNKNOWN **)sub_2610712F0(&qword_26A910490, (uint64_t *)&unk_26B40A448);
  *(void *)&long long v662 = v325;
  swift_bridgeObjectRetain();
  v326 = v657;
  sub_2610F3D84(&v662, 6, 0xFFFF);
  if (v326)
  {
    v657 = v326;
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v662);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v173 = sub_26111EA48();
    sub_26111EA88();
    LOBYTE(v137) = sub_26111F008();
    if ((sub_26111F0B8() & 1) == 0)
    {

      v473 = v641;
      v641(v591, v75);
      goto LABEL_239;
    }
    swift_retain();
    uint64_t v166 = v576;
    sub_26111EAB8();
    swift_release();
    uint64_t v165 = v622;
    int v458 = (*v544)((char *)v166, v622);
    if (v458 != v545) {
      goto LABEL_237;
    }
    v459 = "[Error] Interval already ended";
    goto LABEL_238;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v662);
  char v660 = 1;
  uint64_t v327 = sub_2610F7DBC();
  v657 = 0;
  if (v656) {
    ((void (*)(uint64_t, double))v656)(v327, 0.0);
  }
LABEL_135:
  uint64_t v328 = swift_beginAccess();
  if (*(void *)(v661 + 16))
  {
    *(void *)&long long v662 = 0;
    uint64_t v329 = swift_bridgeObjectRetain();
    size_t v330 = sub_261074724(v329);
    uint64_t v331 = swift_bridgeObjectRelease();
    uint64_t v332 = *(void *)(v330 + 16);
    if (v332)
    {
      unint64_t v333 = v75;
      uint64_t v334 = 0;
      while (1)
      {
        v335 = (void *)MEMORY[0x26122DE00](v331);
        v336 = v657;
        sub_2610C9E00(v330, v334, 1024, v637, v655, 6, v323, &v660, &v662, v656);
        v657 = v336;
        if (v336) {
          break;
        }
        if (__OFADD__(v334, 1024)) {
          uint64_t v334 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          v334 += 1024;
        }
        if (v334 >= v332)
        {
          swift_release();
          unint64_t v75 = v333;
          uint64_t v318 = v637;
          goto LABEL_145;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v420 = sub_26111EA48();
      sub_26111EA88();
      os_signpost_type_t v421 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        v422 = v593;
        sub_26111EAB8();
        swift_release();
        uint64_t v423 = v622;
        int v424 = (*v544)(v422, v622);
        unint64_t v425 = v333;
        if (v424 == v545)
        {
          v426 = "[Error] Interval already ended";
        }
        else
        {
          (*v538)(v422, v423);
          v426 = "";
        }
        v432 = v641;
        v442 = v647;
        v443 = v602;
        v627(v647, v602, v425);
        v444 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v444 = 0;
        os_signpost_id_t v445 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v420, v421, v445, "syncAssets", v426, v444, 2u);
        MEMORY[0x26122E4F0](v444, -1, -1);

        v432(v443, v425);
        v432(v442, v425);
      }
      else
      {

        unint64_t v425 = v333;
        v432 = v641;
        v641(v602, v425);
      }
      swift_release();
      swift_release();
      (*v552)(v621, v652);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
      swift_release();
      swift_release();
      v446 = sub_26111EA48();
      v447 = v601;
      sub_26111EA88();
      os_signpost_type_t v448 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        v449 = v594;
        sub_26111EAB8();
        swift_release();
        uint64_t v450 = v622;
        int v451 = (*v544)(v449, v622);
        os_signpost_type_t v452 = v448;
        if (v451 == v545)
        {
          v453 = "[Error] Interval already ended";
        }
        else
        {
          (*v538)(v449, v450);
          v453 = "";
        }
        v454 = v647;
        v455 = v601;
        v627(v647, v601, v425);
        v456 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v456 = 0;
        os_signpost_id_t v457 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v446, v452, v457, "update", v453, v456, 2u);
        MEMORY[0x26122E4F0](v456, -1, -1);

        v432(v455, v425);
        v432(v454, v425);
      }
      else
      {

        v432(v447, v425);
      }
      return swift_release();
    }
    swift_release();
LABEL_145:
    uint64_t v328 = swift_beginAccess();
    if (!__OFADD__(*v556, (void)v662))
    {
      *v556 += v662;
      goto LABEL_147;
    }
    __break(1u);
LABEL_271:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
LABEL_147:
  if (v660 == 1)
  {
    MEMORY[0x270FA5388](v328);
    *(double *)&uint64_t v165 = COERCE_DOUBLE(v337);
    v338 = v657;
    sub_26111F028();
    unint64_t v137 = v338;
    if (v338) {
      goto LABEL_225;
    }

    sub_2610F7DBC();
    v657 = 0;
  }
  swift_bridgeObjectRetain();
  v339 = sub_26111EAC8();
  os_log_type_t v340 = sub_26111EF68();
  if (os_log_type_enabled(v339, v340))
  {
    uint64_t v341 = swift_slowAlloc();
    *(_DWORD *)uint64_t v341 = v534;
    *(void *)&long long v662 = *(void *)(v659 + 16);
    sub_26111F0D8();
    *(_WORD *)(v341 + 12) = 2048;
    *(void *)&long long v662 = *(void *)(v661 + 16);
    sub_26111F0D8();
    *(_WORD *)(v341 + 22) = 2048;
    uint64_t v342 = *(void *)(v318 + 16);
    swift_bridgeObjectRelease();
    *(void *)&long long v662 = v342;
    uint64_t v323 = v543;
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v339, v340, "Removed %ld assets from the index and added %ld, total is %ld assets", (uint8_t *)v341, 0x20u);
    MEMORY[0x26122E4F0](v341, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v167 = v652;
  uint64_t v663 = v529;
  v664 = &off_270D2E4E8;
  *(void *)&long long v662 = v323;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  uint64_t v343 = sub_26109A4CC(&v662, (uint64_t)&aBlock);
  if ((v625 & 1) == 0)
  {
    MEMORY[0x270FA5388](v343);
    id v356 = v355;
    v357 = v657;
    sub_26111F028();
    v657 = v357;

    if (v662) {
      goto LABEL_162;
    }
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v358 = swift_allocObject();
    *(_OWORD *)(v358 + 16) = v561;
    *(void *)(v358 + 56) = MEMORY[0x263F8E778];
    *(void *)(v358 + 64) = MEMORY[0x263F8E7C0];
    *(unsigned char *)(v358 + 32) = 6;
    v359 = (void *)sub_26111EEF8();
    uint64_t v360 = sub_2610E6F44(v359, 0, 1);

    if (v360) {
      goto LABEL_162;
    }
    uint64_t v361 = swift_allocObject();
    *(_OWORD *)(v361 + 16) = v561;
    *(void *)(v361 + 56) = MEMORY[0x263F8E778];
    *(void *)(v361 + 64) = MEMORY[0x263F8E7C0];
    *(unsigned char *)(v361 + 32) = 6;
    v362 = (void *)sub_26111EEF8();
    uint64_t v363 = sub_2610E6F44(v362, 0, 1);

    if (v363)
    {
LABEL_162:
      v364 = sub_26111EAC8();
      os_log_type_t v365 = sub_26111EF68();
      if (os_log_type_enabled(v364, v365))
      {
        v366 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v366 = 0;
        _os_log_impl(&dword_261042000, v364, v365, "Re-clustering as index is stale", v366, 2u);
        MEMORY[0x26122E4F0](v366, -1, -1);
      }

      char v354 = 1;
    }
    else
    {
      char v354 = v635;
    }
    goto LABEL_168;
  }
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v344 = swift_allocObject();
  *(_OWORD *)(v344 + 16) = v561;
  *(void *)(v344 + 56) = MEMORY[0x263F8E778];
  *(void *)(v344 + 64) = MEMORY[0x263F8E7C0];
  *(unsigned char *)(v344 + 32) = 6;
  v345 = (void *)sub_26111EEF8();
  MEMORY[0x270FA5388](v345);
  id v347 = v346;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  v348 = v657;
  sub_26111F028();
  if (v348)
  {

    swift_release_n();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v292 = sub_26111EA48();
    sub_26111EA88();
    os_signpost_type_t v468 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      v469 = v566;
      sub_26111EAB8();
      swift_release();
      uint64_t v470 = v622;
      int v471 = (*v544)(v469, v622);
      if (v471 == v545)
      {
        v472 = "[Error] Interval already ended";
      }
      else
      {
        (*v538)(v469, v470);
        v472 = "";
      }
      v520 = v647;
      v521 = v582;
      v627(v647, v582, v75);
      v522 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v522 = 0;
      os_signpost_id_t v523 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v292, v468, v523, "syncAssets", v472, v522, 2u);
      MEMORY[0x26122E4F0](v522, -1, -1);

      v524 = v521;
      v473 = v641;
      v641(v524, v75);
      uint64_t v167 = v652;
      v473(v520, v75);
      goto LABEL_263;
    }
LABEL_235:

    v473 = v641;
    v641(v582, v75);
LABEL_263:
    swift_release();
    swift_release();
    (*v552)(v621, v167);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    swift_release();
    swift_release();
    v391 = sub_26111EA48();
    v481 = v579;
    sub_26111EA88();
    os_signpost_type_t v415 = sub_26111F008();
    if ((sub_26111F0B8() & 1) == 0) {
      goto LABEL_266;
    }
    swift_retain();
    v525 = v567;
    sub_26111EAB8();
    swift_release();
    uint64_t v526 = v622;
    int v527 = (*v544)(v525, v622);
    if (v527 == v545)
    {
      v419 = "[Error] Interval already ended";
    }
    else
    {
      (*v538)(v525, v526);
      v419 = "";
    }
    v434 = v647;
    v435 = (void (*)(char *, uint64_t, unint64_t))v627;
    v436 = v647;
    v437 = (uint64_t *)&v611;
    goto LABEL_187;
  }

  uint64_t v349 = *(void *)(v662 + 16);
  v657 = 0;
  if (v349)
  {
    uint64_t v350 = OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_secondaryIdentifiers;
    *(void *)(v323 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_secondaryIdentifiers) = v662;
    swift_bridgeObjectRelease();
    swift_retain();
    v351 = sub_26111EAC8();
    os_log_type_t v352 = sub_26111EF68();
    if (os_log_type_enabled(v351, v352))
    {
      v353 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v353 = v551;
      *(void *)&long long v662 = *(void *)(*(void *)(v323 + v350) + 16);
      sub_26111F0D8();
      swift_release();
      _os_log_impl(&dword_261042000, v351, v352, "Queuing %ld for fast clustering", v353, 0xCu);
      MEMORY[0x26122E4F0](v353, -1, -1);
    }

    char v354 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v354 = v635;
  }
LABEL_168:
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v367 = sub_26111EA48();
  v368 = v606;
  sub_26111EA88();
  os_signpost_type_t v369 = sub_26111F008();
  if (sub_26111F0B8())
  {
    swift_retain();
    v370 = v605;
    sub_26111EAB8();
    swift_release();
    v371 = v370;
    uint64_t v372 = v622;
    int v373 = (*v544)(v371, v622);
    v374 = "[Error] Interval already ended";
    if (v373 != v545)
    {
      (*v538)(v605, v372);
      v374 = "";
    }
    v375 = v647;
    v627(v647, v368, v75);
    unint64_t v376 = v75;
    v377 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v377 = 0;
    os_signpost_id_t v378 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v367, v369, v378, "syncAssets", v374, v377, 2u);
    v379 = v377;
    unint64_t v75 = v376;
    MEMORY[0x26122E4F0](v379, -1, -1);

    unint64_t v137 = v641;
    v641(v368, v376);
    v380 = v375;
    uint64_t v167 = v652;
  }
  else
  {

    v380 = v368;
    unint64_t v137 = v641;
  }
  uint64_t v151 = v639;
  ((void (*)(char *, unint64_t))v137)(v380, v75);
  swift_release();
  (*v552)(v621, v167);
  uint64_t v166 = v657;
  uint64_t v195 = v619;
  if (v354) {
    goto LABEL_51;
  }
LABEL_53:
  uint64_t v165 = v151;
  sub_2610F7DBC();
  if (!v166)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
    swift_release();
    goto LABEL_55;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  swift_release();
  swift_release();
  swift_release();
  v391 = sub_26111EA48();
  v390 = v604;
  sub_26111EA88();
  os_signpost_type_t v415 = sub_26111F008();
  if (sub_26111F0B8())
  {
    swift_retain();
    v416 = v596;
    sub_26111EAB8();
    swift_release();
    uint64_t v417 = v622;
    int v418 = (*v544)(v416, v622);
    if (v418 == v545)
    {
      v419 = "[Error] Interval already ended";
    }
    else
    {
      (*v538)(v416, v417);
      v419 = "";
    }
    v434 = v647;
    v435 = (void (*)(char *, uint64_t, unint64_t))v627;
    v436 = v647;
    v437 = &v637;
    goto LABEL_187;
  }
LABEL_184:

  v641(v390, v75);
  return swift_release();
}

uint64_t sub_2610D2E30()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2610D2E40()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_2610D2E80()
{
  sub_2610E70F0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_2610D2E90()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610D2EA0()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2610D2EF8()
{
  sub_26111EFC8();
  return v1;
}

void sub_2610D2F84()
{
  sub_2610EDBFC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(id))(v0 + 32));
}

void sub_2610D2FA8()
{
  sub_2610F3F9C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2610D2FC8()
{
  unsigned __int8 v1 = *(uint64_t (**)(double))(v0 + 16);
  if (v1) {
    return v1(0.0);
  }
  return result;
}

uint64_t objectdestroy_53Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610D3040()
{
  unsigned __int8 v1 = *(uint64_t (**)(double))(v0 + 16);
  if (v1) {
    return v1(0.0) & 1;
  }
  else {
    return 1;
  }
}

void sub_2610D3080(void *a1@<X8>)
{
  sub_2610F2C6C(*(void **)(v1 + 16), *(unsigned char *)(v1 + 24), (id)*(unsigned __int16 *)(v1 + 26), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1, *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(unsigned char *)(v1 + 112), *(unsigned int *)(v1 + 116) | ((unint64_t)*(unsigned __int8 *)(v1 + 120) << 32), *(unsigned int *)(v1 + 124) | ((unint64_t)*(unsigned __int8 *)(v1 + 128) << 32), *(unsigned char *)(v1 + 129), *(void *)(v1 + 136),
    *(unsigned char *)(v1 + 144),
    *(void *)(v1 + 152),
    *(unsigned char *)(v1 + 160));
}

uint64_t sub_2610D313C@<X0>(char *a1@<X8>)
{
  return sub_2610CA774(*(float **)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t (**)(uint64_t, float))(v1 + 40), a1);
}

uint64_t sub_2610D3160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610C697C(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(uint64_t **)(v3 + 40));
}

void sub_2610D318C()
{
}

void sub_2610D31B8(unsigned __int8 *a1@<X8>)
{
}

void sub_2610D31D0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6C8);
    uint64_t v2 = (void *)sub_26111F388();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_26107EF04();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_26105D630(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    uint64_t v23 = (uint64_t *)(v2[6] + 16 * v20);
    *uint64_t v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_2610D3474(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A648);
    uint64_t v2 = (void *)sub_26111F388();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v38;
  uint64_t v7 = &v40;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v34 = 0;
  unint64_t v9 = (unint64_t *)&unk_26A910520;
  unint64_t v10 = 0x263F00D50uLL;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v34 + 1;
  if (__OFADD__(v34, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v32) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v33 + 8 * v19);
  int64_t v21 = v34 + 1;
  if (!v20)
  {
    int64_t v21 = v34 + 2;
    if (v34 + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v34 + 3;
      if (v34 + 3 >= v32) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v34 + 4;
        if (v34 + 4 >= v32) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            unint64_t v20 = *(void *)(v33 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v32) {
                break;
              }
              unint64_t v20 = *(void *)(v33 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_26107EF04();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v34 = v21;
  uint64_t v35 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v24 = *(void **)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v36 = *v23;
    uint64_t v37 = v23[1];
    sub_261071924(0, v9);
    swift_bridgeObjectRetain();
    id v25 = v24;
    swift_dynamicCast();
    sub_261070F60(v6, v7);
    sub_261070F60(v7, v41);
    sub_261070F60(v41, &v39);
    unint64_t result = sub_26105D630(v36, v37);
    unint64_t v26 = result;
    if (v27)
    {
      int64_t v11 = v7;
      unint64_t v12 = v6;
      uint64_t v13 = v1;
      unint64_t v14 = v10;
      uint64_t v15 = v9;
      uint64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v16 = v36;
      v16[1] = v37;
      unint64_t v9 = v15;
      unint64_t v10 = v14;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      uint64_t v7 = v11;
      uint64_t v17 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      unint64_t result = (unint64_t)sub_261070F60(&v39, v17);
      unint64_t v5 = v35;
      if (!v35) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v28 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v28 = v36;
    v28[1] = v37;
    unint64_t result = (unint64_t)sub_261070F60(&v39, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    unint64_t v5 = v35;
    if (!v35) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2610D37F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v50 = a1;
  uint64_t v4 = v3;
  uint64_t v7 = sub_26111E618();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
  swift_bridgeObjectRetain_n();
  unint64_t v10 = sub_26111EAC8();
  os_log_type_t v11 = sub_26111EF48();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v52 = a2;
  if (v12)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v46 = v9;
    unint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    *(void *)&long long v54 = v15;
    *(_DWORD *)unint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_26105CFF8(a2, a3, (uint64_t *)&v54);
    sub_26111F0D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_261042000, v10, v11, "Using model %s for personalization...", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v15, -1, -1);
    MEMORY[0x26122E4F0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v16 = (uint64_t *)(v4 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_cache);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (*(void *)(*v16 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_26105D630(0xD000000000000015, 0x80000002611241F0);
    if (v19)
    {
      sub_26106A31C(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v54);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v55 + 1))
    {
      sub_2610718C8((uint64_t)&v54, (uint64_t *)&unk_26B40ADF8);
      goto LABEL_12;
    }
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_2610718C8((uint64_t)&v54, (uint64_t *)&unk_26B40ADF8);
  *((void *)&v55 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910570);
  *(void *)&long long v54 = MEMORY[0x263F8EE80];
  swift_beginAccess();
  sub_261071D24((uint64_t)&v54, 0xD000000000000015, 0x80000002611241F0);
  swift_endAccess();
LABEL_12:
  uint64_t v20 = *v16;
  if (!*(void *)(*v16 + 16))
  {
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v22 = v52;
LABEL_23:
    sub_2610718C8((uint64_t)&v54, (uint64_t *)&unk_26B40ADF8);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_26105D630(0xD000000000000015, 0x80000002611241F0);
  uint64_t v22 = v52;
  if (v23)
  {
    sub_26106A31C(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v55 + 1)) {
    goto LABEL_23;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A910570);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    unint64_t v53 = 0;
    goto LABEL_25;
  }
  if (v53)
  {
    if (*(void *)(v53 + 16))
    {
      swift_bridgeObjectRetain();
      sub_26105D630(v22, a3);
      char v25 = v24;
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_32;
      }
    }
  }
LABEL_25:
  swift_bridgeObjectRetain_n();
  unint64_t v26 = sub_26111EAC8();
  os_log_type_t v27 = sub_26111EF48();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(void *)&long long v54 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_26105CFF8(v22, a3, (uint64_t *)&v54);
    sub_26111F0D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_261042000, v26, v27, "Loading model %s...", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v29, -1, -1);
    MEMORY[0x26122E4F0](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (!v53) {
    goto LABEL_39;
  }
  sub_261071924(0, &qword_26A910578);
  uint64_t v30 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v50, v49);
  uint64_t v31 = v51;
  id v32 = sub_2610D3FA0(v30);
  if (!v31)
  {
    uint64_t v33 = (uint64_t)v32;
    swift_bridgeObjectRetain();
    uint64_t v51 = 0;
    if (!v33)
    {
      uint64_t v36 = (void *)sub_2610B83F0(v22, a3);
      swift_bridgeObjectRelease();

      unint64_t v35 = v53;
      if (!v53)
      {
LABEL_39:
        swift_bridgeObjectRetain_n();
        uint64_t v41 = sub_26111EAC8();
        os_log_type_t v42 = sub_26111EF58();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          *(void *)&long long v54 = v44;
          *(_DWORD *)uint64_t v43 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v57 = sub_26105CFF8(v22, a3, (uint64_t *)&v54);
          sub_26111F0D8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_261042000, v41, v42, "Cannot load model %s for token personalization", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v44, -1, -1);
          MEMORY[0x26122E4F0](v43, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_261046B60();
        swift_allocError();
        *uint64_t v45 = 9;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
LABEL_35:
      if (*(void *)(v35 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v37 = sub_26105D630(v22, a3);
        if (v38)
        {
          id v39 = *(id *)(*(void *)(v35 + 56) + 8 * v37);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v39;
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_39;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v54 = v53;
    unint64_t v53 = 0x8000000000000000;
    sub_26107EC74(v33, v22, a3, isUniquelyReferenced_nonNull_native);
    unint64_t v53 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_32:
    unint64_t v35 = v53;
    if (!v53) {
      goto LABEL_39;
    }
    goto LABEL_35;
  }
  return swift_bridgeObjectRelease();
}

id sub_2610D3FA0(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_26111E558();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_26111E618();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_26111E518();

    swift_willThrow();
    uint64_t v9 = sub_26111E618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

NSObject *sub_2610D40F8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_26111E618();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v31 - v12;
  type metadata accessor for VUGallery(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v32 = a1;
  unint64_t v34 = a2;
  uint64_t v16 = (void *)sub_26111EBC8();
  uint64_t v17 = (void *)sub_26111EBC8();
  id v18 = objc_msgSend(v15, sel_URLForResource_withExtension_, v16, v17);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_7;
  }
  sub_26111E5A8();

  char v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_7:
    sub_2610718C8((uint64_t)v6, (uint64_t *)&unk_26B40AC60);
    unint64_t v25 = v34;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_26111EAC8();
    os_log_type_t v26 = sub_26111EF58();
    if (os_log_type_enabled(v22, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v36 = v28;
      *(_DWORD *)os_log_type_t v27 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_26105CFF8(v32, v25, &v36);
      sub_26111F0D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_261042000, v22, v26, "Cannot find model %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v28, -1, -1);
      MEMORY[0x26122E4F0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v29 = 9;
    swift_willThrow();
    return v22;
  }
  uint64_t v20 = v13;
  v19(v13, v6, v7);
  uint64_t v21 = (uint64_t)v13;
  uint64_t v22 = v33;
  uint64_t v23 = v31[1];
  uint64_t v24 = sub_2610D37F4(v21, v32, v34);
  if (!v23) {
    uint64_t v22 = v24;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v20, v7);
  return v22;
}

uint64_t sub_2610D4554(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v103 = a6;
  uint64_t v86 = a5;
  unint64_t v104 = a4;
  uint64_t v94 = a3;
  uint64_t v85 = sub_26111E8C8();
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v83 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910538);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910540);
  uint64_t v90 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v88 = (char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910548);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v91 = (uint64_t)v82 - v18;
  uint64_t v101 = sub_26111E858();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = (char *)v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_26111E888();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_26111E618();
  uint64_t v102 = *(void *)(v106 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v106);
  uint64_t v93 = (char *)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)v82 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v87 = (char *)v82 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v82 - v28;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B8);
  uint64_t v98 = *(void *)(v105 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v105);
  uint64_t v92 = (char *)v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)v82 - v32;
  int v34 = *a2;
  sub_26106A31C(a1, (uint64_t)v111);
  LOBYTE(v113) = v34;
  if (v34 == 2)
  {
    if (swift_dynamicCast() && v108 == 5)
    {
      uint64_t v35 = v107;
      uint64_t v36 = sub_2610D40F8(0xD000000000000019, 0x8000000261124190);
      if (!v35)
      {
        uint64_t v6 = (uint64_t)v36;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
        return v6;
      }
LABEL_40:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
      return v6;
    }
    goto LABEL_17;
  }
  if (v34 != 1)
  {
LABEL_17:
    v6 += OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
    sub_26106A31C(a1, (uint64_t)&v108);
    uint64_t v40 = sub_26111EAC8();
    os_log_type_t v41 = sub_26111EF58();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v115 = v42;
      *(_DWORD *)uint64_t v6 = 136315394;
      sub_26106A31C((uint64_t)&v108, (uint64_t)&v114);
      uint64_t v43 = sub_26111EC08();
      uint64_t v114 = sub_26105CFF8(v43, v44, &v115);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v108);
      *(_WORD *)(v6 + 12) = 2080;
      LOBYTE(v114) = v34;
      uint64_t v45 = sub_26111EC08();
      uint64_t v114 = sub_26105CFF8(v45, v46, &v115);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v40, v41, "No model for available for %s, %s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v42, -1, -1);
      MEMORY[0x26122E4F0](v6, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v108);
    }
    sub_261046B60();
    swift_allocError();
    *uint64_t v47 = 5;
    swift_willThrow();
    sub_2610718C8((uint64_t)v111, &qword_26A910550);
    return v6;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_12;
  }
  if ((_BYTE)v108 && v108 != 3)
  {
    if (v108 == 5)
    {
      uint64_t v6 = (uint64_t)sub_2610D40F8(0xD00000000000001ALL, 0x80000002611241D0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
      return v6;
    }
LABEL_12:
    if (swift_dynamicCast() && v108 - 1 <= 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
      unint64_t v37 = v104;
      v82[1] = v6;
      if (!v104)
      {
        uint64_t v54 = v106;
        id v39 = v107;
        uint64_t v55 = v105;
        uint64_t v56 = (uint64_t)v93;
        uint64_t v57 = v92;
        goto LABEL_39;
      }
      sub_26111E828();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_26111E818();
      char v38 = v107;
      sub_26111E808();
      id v39 = v38;
      if (v38)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_release();
      sub_261071864((uint64_t)v111, (uint64_t)&v108, &qword_26A910558);
      if (v110)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A910568);
        uint64_t v58 = sub_26111E8A8();
        uint64_t v59 = v91;
        int v60 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v59, v60 ^ 1u, 1, v58);
      }
      else
      {
        sub_2610718C8((uint64_t)&v108, &qword_26A910558);
        uint64_t v58 = sub_26111E8A8();
        uint64_t v59 = v91;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v91, 1, 1, v58);
      }
      sub_261071864(v59, (uint64_t)v17, &qword_26A910548);
      sub_26111E8A8();
      uint64_t v61 = *(void *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v17, 1, v58) == 1)
      {
        sub_2610718C8((uint64_t)v17, &qword_26A910548);
      }
      else
      {
        sub_26111E898();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v58);
        if (v110)
        {
          __swift_project_boxed_opaque_existential_1Tm(&v108, v110);
          sub_26111E868();
          uint64_t v62 = v90;
          uint64_t v70 = v89;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v12, 0, 1, v89);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v108);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v12, 1, v70) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v88, v12, v70);
            uint64_t v71 = v83;
            uint64_t v72 = sub_26111E7F8();
            MEMORY[0x26122D130](v72);
            (*(void (**)(char *, uint64_t))(v84 + 8))(v71, v85);
            uint64_t v73 = v86;
            sub_26111E568();
            uint64_t v74 = *(void (**)(char *, uint64_t))(v102 + 8);
            v74(v25, v106);
            id v75 = objc_msgSend(self, sel_defaultManager);
            sub_26111E5C8();
            uint64_t v76 = (void *)sub_26111EBC8();
            swift_bridgeObjectRelease();
            unsigned int v77 = objc_msgSend(v75, sel_fileExistsAtPath_, v76);

            if (v77)
            {
              uint64_t v107 = v74;
              swift_bridgeObjectRelease();
              uint64_t v108 = v73;
              unint64_t v109 = v103;
              sub_26111EC88();
              uint64_t v78 = v99;
              uint64_t v79 = v89;
              uint64_t v80 = v88;
              sub_26111E7E8();
              sub_26111E848();
              (*(void (**)(char *, uint64_t))(v100 + 8))(v78, v101);
              sub_26111EC88();
              swift_bridgeObjectRelease();
              uint64_t v81 = (uint64_t)v87;
              uint64_t v6 = sub_2610D37F4((uint64_t)v87, v108, v109);
              swift_bridgeObjectRelease();
              v107((char *)v81, v106);
              (*(void (**)(char *, uint64_t))(v90 + 8))(v80, v79);
              sub_2610718C8((uint64_t)v111, &qword_26A910558);
              sub_2610718C8(v91, &qword_26A910548);
              return v6;
            }
            v74(v87, v106);
            (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
            goto LABEL_35;
          }
LABEL_34:
          sub_2610718C8((uint64_t)v12, &qword_26A910538);
LABEL_35:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v63 = sub_26111EAC8();
          os_log_type_t v64 = sub_26111EF68();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            uint64_t v66 = swift_slowAlloc();
            uint64_t v108 = v66;
            *(_DWORD *)uint64_t v65 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v114 = sub_26105CFF8(v94, v37, &v108);
            sub_26111F0D8();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_261042000, v63, v64, "Cannot get asset for adapter identifier %s - falling back to common conditioning", v65, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x26122E4F0](v66, -1, -1);
            MEMORY[0x26122E4F0](v65, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          sub_2610718C8((uint64_t)v111, &qword_26A910558);
          uint64_t v55 = v105;
          uint64_t v54 = v106;
          uint64_t v57 = v92;
          sub_2610718C8(v91, &qword_26A910548);
          uint64_t v56 = (uint64_t)v93;
LABEL_39:
          sub_26111E788();
          uint64_t v6 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v111, v112);
          sub_26111E868();
          if (!v39)
          {
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
            uint64_t v67 = v95;
            uint64_t v68 = sub_26111E7F8();
            MEMORY[0x26122D0F0](v68);
            (*(void (**)(char *, uint64_t))(v96 + 8))(v67, v97);
            v111[0] = 0;
            v111[1] = 0xE000000000000000;
            sub_26111F228();
            swift_bridgeObjectRelease();
            v111[0] = 0xD00000000000001DLL;
            v111[1] = 0x80000002611241B0;
            uint64_t v69 = v99;
            sub_26111E7E8();
            sub_26111E848();
            (*(void (**)(char *, uint64_t))(v100 + 8))(v69, v101);
            sub_26111EC88();
            swift_bridgeObjectRelease();
            uint64_t v6 = sub_2610D37F4(v56, v111[0], v111[1]);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v56, v54);
            (*(void (**)(char *, uint64_t))(v98 + 8))(v57, v55);
            return v6;
          }
          goto LABEL_40;
        }
        sub_2610718C8((uint64_t)&v108, &qword_26A910560);
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v12, 1, 1, v89);
      goto LABEL_34;
    }
    goto LABEL_17;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
  sub_26111E798();
  uint64_t v6 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v111, v112);
  uint64_t v49 = v107;
  sub_26111E868();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v111);
  if (!v49)
  {
    uint64_t v50 = v95;
    uint64_t v51 = v105;
    uint64_t v52 = sub_26111E7F8();
    MEMORY[0x26122D0F0](v52);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v50, v97);
    v111[0] = 0;
    v111[1] = 0xE000000000000000;
    sub_26111F228();
    swift_bridgeObjectRelease();
    strcpy((char *)v111, "face2word_ota_");
    HIBYTE(v111[1]) = -18;
    unint64_t v53 = v99;
    sub_26111E7E8();
    sub_26111E848();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v53, v101);
    sub_26111EC88();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_2610D37F4((uint64_t)v29, v111[0], v111[1]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v29, v106);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v33, v51);
  }
  return v6;
}

void *VUGallery.selectedModalities(for:client:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_26111E778();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A670);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v43 = v3;
  uint64_t v40 = v13;
  char v44 = v13;
  uint64_t v45 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A2F0);
  sub_26111EFC8();
  uint64_t v14 = v47;
  uint64_t v15 = *(void *)(v47 + 16);
  uint64_t v16 = type metadata accessor for VUGallery.TagView(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if (v15)
  {
    sub_2610E2374(v14+ ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80)), (uint64_t)v12);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v12, v18, 1, v16);
  swift_bridgeObjectRelease();
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16);
  uint64_t v20 = v42;
  if (v19 == 1)
  {
    sub_2610718C8((uint64_t)v12, &qword_26B40A670);
    uint64_t v21 = v41;
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v21);
    uint64_t v29 = sub_26111EAC8();
    os_log_type_t v30 = sub_26111EF58();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v47 = v32;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v33 = sub_26111E738();
      uint64_t v46 = sub_26105CFF8(v33, v34, &v47);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
      *(_WORD *)(v31 + 12) = 2080;
      unint64_t v35 = 0xE600000000000000;
      uint64_t v36 = 0x736F746F6850;
      switch(v40)
      {
        case 1:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v36 = 0x74694B656D6F48;
          break;
        case 2:
          unint64_t v35 = 0xE800000000000000;
          uint64_t v36 = 0x73746361746E6F43;
          break;
        case 3:
          unint64_t v35 = 0x80000002611226E0;
          uint64_t v36 = 0xD000000000000013;
          break;
        case 4:
          unint64_t v35 = 0xE800000000000000;
          uint64_t v36 = 0x6465767265736552;
          break;
        case 5:
          uint64_t v36 = 0x646572616853;
          break;
        default:
          break;
      }
      uint64_t v46 = sub_26105CFF8(v36, v35, &v47);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v29, v30, "Tag %s for client %s not found - cannot fetch selected modalities!", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v32, -1, -1);
      MEMORY[0x26122E4F0](v31, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
    }
    sub_261046B60();
    swift_allocError();
    *unint64_t v37 = 3;
    swift_willThrow();
    return v26;
  }
  uint64_t v22 = *(void *)&v12[*(int *)(v16 + 28)];
  sub_2610E23D8((uint64_t)v12);
  uint64_t v21 = v41;
  if (v22 == -1) {
    goto LABEL_11;
  }
  uint64_t v23 = sub_2610D5EB8(v22);
  if (v24) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v25 = v23;
  uint64_t v26 = sub_26105BCEC(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_26105BCEC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  v26[v28 + 4] = v25;
  return v26;
}

void *VUGallery.selectedModalities(for:)(uint64_t a1)
{
  uint64_t v1 = sub_2610D5EB8(a1);
  if (v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v1;
  uint64_t v4 = sub_26105BCEC(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_26105BCEC((void *)(v5 > 1), v6 + 1, 1, v4);
  }
  v4[2] = v6 + 1;
  v4[v6 + 4] = v3;
  return v4;
}

uint64_t sub_2610D5EB8(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_26111E618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = 0;
  char v28 = 1;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
  sub_26111E568();
  uint64_t v7 = sub_26111E558();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v27;
  *(void *)(v8 + 24) = a1;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_2610E51D0;
  v9[3] = v8;
  aBlock[4] = sub_2610E5220;
  aBlock[5] = v9;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_2610D6408;
  aBlock[3] = &block_descriptor_42;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v6, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v7, 0, aBlock, v10);
  _Block_release(v10);

  id v11 = aBlock[0];
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v7) {
    __break(1u);
  }
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = sub_26111EAC8();
    os_log_type_t v14 = sub_26111EF58();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      char v24 = (void *)swift_slowAlloc();
      uint64_t v25 = a1;
      aBlock[0] = v24;
      *(_DWORD *)uint64_t v15 = 134218242;
      sub_26111F0D8();
      *(_WORD *)(v15 + 12) = 2080;
      id v16 = objc_msgSend(v12, sel_localizedDescription, v15 + 14);
      uint64_t v17 = sub_26111EBF8();
      unint64_t v19 = v18;

      uint64_t v25 = sub_26105CFF8(v17, v19, (uint64_t *)aBlock);
      sub_26111F0D8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v13, v14, "Error loading modalities for entity %ld: %s", (uint8_t *)v15, 0x16u);
      uint64_t v20 = v24;
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v20, -1, -1);
      MEMORY[0x26122E4F0](v15, -1, -1);
    }
    else
    {
    }
  }
  uint64_t v21 = v27;
  swift_release();

  return v21;
}

void sub_2610D62F4()
{
  id v0 = objc_allocWithZone(NSDictionary);
  uint64_t v1 = (void *)sub_26111E558();
  id v2 = objc_msgSend(v0, sel_initWithContentsOfURL_, v1);

  if (v2)
  {
    sub_26111EB58();
  }
}

uint64_t sub_2610D6408(uint64_t a1)
{
  uint64_t v2 = sub_26111E618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void (**)(char *))(a1 + 32);
  sub_26111E5A8();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void VUGallery.setModalities(_:for:client:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unint64_t v5 = v3;
  uint64_t v99 = a1;
  id aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v94 = sub_26111E618();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v97 = (char *)v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_26111E778();
  uint64_t v9 = *(NSObject **)(v100 - 8);
  Class isa = v9[8].isa;
  uint64_t v11 = MEMORY[0x270FA5388](v100);
  id v12 = (char *)v84 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)v84 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)v84 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v95 = (char *)v84 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A670);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a3;
  uint64_t v101 = v5;
  unint64_t v103 = v5;
  os_log_t v98 = v21;
  char v104 = (char)v21;
  uint64_t v22 = a2;
  uint64_t v105 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A2F0);
  sub_26111EFC8();
  uint64_t v92 = v4;
  id v23 = aBlock[0];
  uint64_t v24 = *((void *)aBlock[0] + 2);
  uint64_t v25 = type metadata accessor for VUGallery.TagView(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if (v24)
  {
    sub_2610E2374((uint64_t)v23+ ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80)), (uint64_t)v20);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v20, v27, 1, v25);
  swift_bridgeObjectRelease();
  char v28 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v25) == 1)
  {
    sub_2610718C8((uint64_t)v20, &qword_26B40A670);
    uint64_t v29 = v100;
LABEL_9:
    ((void (*)(char *, uint64_t, uint64_t))v9[2].isa)(v12, v22, v29);
    uint64_t v48 = sub_26111EAC8();
    os_log_type_t v49 = sub_26111EF58();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      aBlock[0] = v51;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v52 = sub_26111E738();
      uint64_t v102 = sub_26105CFF8(v52, v53, (uint64_t *)aBlock);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v9[1].isa)(v12, v29);
      *(_WORD *)(v50 + 12) = 2080;
      unint64_t v54 = 0xE600000000000000;
      uint64_t v55 = 0x736F746F6850;
      switch((unint64_t)v98)
      {
        case 1uLL:
          unint64_t v54 = 0xE700000000000000;
          uint64_t v55 = 0x74694B656D6F48;
          break;
        case 2uLL:
          unint64_t v54 = 0xE800000000000000;
          uint64_t v55 = 0x73746361746E6F43;
          break;
        case 3uLL:
          uint64_t v55 = 0xD000000000000013;
          unint64_t v54 = 0x80000002611226E0;
          break;
        case 4uLL:
          unint64_t v54 = 0xE800000000000000;
          uint64_t v55 = 0x6465767265736552;
          break;
        case 5uLL:
          uint64_t v55 = 0x646572616853;
          break;
        default:
          break;
      }
      uint64_t v102 = sub_26105CFF8(v55, v54, (uint64_t *)aBlock);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v48, v49, "Tag %s for client %s not found - cannot set modalities!", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v51, -1, -1);
      MEMORY[0x26122E4F0](v50, -1, -1);
    }
    else
    {

      ((void (*)(char *, uint64_t))v9[1].isa)(v12, v29);
    }
    sub_261046B60();
    swift_allocError();
    *uint64_t v83 = 3;
    swift_willThrow();
    return;
  }
  uint64_t v30 = *(void *)&v20[*(int *)(v25 + 28)];
  sub_2610E23D8((uint64_t)v20);
  uint64_t v29 = v100;
  if (v30 == -1) {
    goto LABEL_9;
  }
  uint64_t v88 = v30;
  uint64_t v31 = v101;
  uint64_t v32 = &v101[OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger];
  uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v9[2].isa;
  unint64_t v34 = v95;
  uint64_t v89 = v22;
  os_log_t v98 = v9 + 2;
  uint64_t v90 = v33;
  v33(v95, v22, v100);
  swift_bridgeObjectRetain_n();
  uint64_t v87 = v32;
  unint64_t v35 = sub_26111EAC8();
  os_log_type_t v36 = sub_26111EF48();
  int v37 = v36;
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v86 = (void *)swift_slowAlloc();
    aBlock[0] = v86;
    *(_DWORD *)uint64_t v38 = 136315394;
    v84[1] = v38 + 4;
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = MEMORY[0x26122D610](v39, MEMORY[0x263F8D6C8]);
    int v85 = v37;
    uint64_t v41 = v40;
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v102 = sub_26105CFF8(v41, v43, (uint64_t *)aBlock);
    sub_26111F0D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    sub_2610E25D0();
    uint64_t v44 = sub_26111F3E8();
    uint64_t v102 = sub_26105CFF8(v44, v45, (uint64_t *)aBlock);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    uint64_t v95 = (char *)v28[1].isa;
    ((void (*)(char *, uint64_t))v95)(v34, v29);
    _os_log_impl(&dword_261042000, v35, (os_log_type_t)v85, "Setting modality %s for tag %s", (uint8_t *)v38, 0x16u);
    uint64_t v46 = v86;
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v46, -1, -1);
    uint64_t v47 = v38;
    uint64_t v31 = v101;
    MEMORY[0x26122E4F0](v47, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v95 = (char *)v28[1].isa;
    ((void (*)(char *, uint64_t))v95)(v34, v29);
  }
  uint64_t v56 = v94;
  uint64_t v57 = v93;
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
  uint64_t v59 = v97;
  sub_26111E568();
  uint64_t v60 = sub_26111E558();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v56);
  uint64_t v61 = v96;
  v90(v96, v89, v29);
  unint64_t v62 = (LOBYTE(v28[10].isa) + 40) & ~(unint64_t)LOBYTE(v28[10].isa);
  uint64_t v63 = (char *)swift_allocObject();
  uint64_t v64 = v88;
  *((void *)v63 + 2) = v99;
  *((void *)v63 + 3) = v64;
  *((void *)v63 + 4) = v31;
  ((void (*)(char *, char *, uint64_t))v28[4].isa)(&v63[v62], v61, v29);
  uint64_t v65 = (void *)swift_allocObject();
  v65[2] = sub_2610E2508;
  v65[3] = v63;
  aBlock[4] = sub_2610E2590;
  aBlock[5] = v65;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_2610D6408;
  aBlock[3] = &block_descriptor_4;
  uint64_t v66 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v58, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v60, 0, aBlock, v66);
  _Block_release(v66);

  id v67 = aBlock[0];
  LOBYTE(v60) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v60) {
    __break(1u);
  }
  if (v67)
  {
    uint64_t v68 = v91;
    v90(v91, v89, v29);
    id v69 = v67;
    uint64_t v70 = sub_26111EAC8();
    os_log_type_t v71 = sub_26111EF58();
    int v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v97 = (char *)v28;
      uint64_t v74 = v73;
      uint64_t v101 = (char *)swift_slowAlloc();
      aBlock[0] = v101;
      *(_DWORD *)uint64_t v74 = 136315394;
      LODWORD(v99) = v72;
      sub_2610E25D0();
      os_log_t v98 = v70;
      uint64_t v75 = sub_26111F3E8();
      uint64_t v102 = sub_26105CFF8(v75, v76, (uint64_t *)aBlock);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v95)(v68, v29);
      *(_WORD *)(v74 + 12) = 2080;
      id v77 = objc_msgSend(v69, sel_localizedDescription);
      uint64_t v78 = sub_26111EBF8();
      unint64_t v80 = v79;

      uint64_t v102 = sub_26105CFF8(v78, v80, (uint64_t *)aBlock);
      sub_26111F0D8();

      swift_bridgeObjectRelease();
      os_log_t v81 = v98;
      _os_log_impl(&dword_261042000, v98, (os_log_type_t)v99, "Error setting modalities for %s: %s", (uint8_t *)v74, 0x16u);
      uint64_t v82 = v101;
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v82, -1, -1);
      MEMORY[0x26122E4F0](v74, -1, -1);
    }
    else
    {

      ((void (*)(char *, uint64_t))v95)(v68, v29);
    }
  }
  swift_release();
}

void sub_2610D71B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v44 = a5;
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_26111E778();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_allocWithZone(MEMORY[0x263EFF9A0]);
  id v12 = (void *)sub_26111E558();
  id v13 = objc_msgSend(v11, sel_initWithContentsOfURL_, v12);

  if (v13 && (v47 = 0, sub_26111EB58(), v13, (uint64_t v14 = v47) != 0))
  {
    if (!*(void *)(a2 + 16))
    {
LABEL_4:
      id v46 = a3;
      uint64_t v15 = sub_26111F3E8();
      sub_2610B870C(v15, v16);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE80];
    id v47 = (id)MEMORY[0x263F8EE80];
    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
  }
  uint64_t v17 = *(void *)(a2 + 32);
  id v46 = a3;
  uint64_t v18 = sub_26111F3E8();
  uint64_t v20 = v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v46 = v14;
  id v47 = (id)0x8000000000000000;
  sub_26108015C(v17, v18, v20, isUniquelyReferenced_nonNull_native);
  id v47 = v46;
  swift_bridgeObjectRelease();
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v22 = self;
  id v23 = (void *)sub_26111EB48();
  swift_bridgeObjectRelease();
  id v46 = 0;
  id v24 = objc_msgSend(v22, sel_dataWithPropertyList_format_options_error_, v23, 200, 0, &v46);

  id v25 = v46;
  if (v24)
  {
    uint64_t v26 = sub_26111E688();
    unint64_t v28 = v27;

    sub_26111E698();
    sub_26106899C(v26, v28);
  }
  else
  {
    uint64_t v29 = v25;
    uint64_t v30 = (void *)sub_26111E518();

    swift_willThrow();
    (*(void (**)(char *, void *, uint64_t))(v8 + 16))(v10, v44, v7);
    id v31 = v30;
    id v32 = v30;
    uint64_t v33 = sub_26111EAC8();
    os_log_type_t v34 = sub_26111EF58();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      unint64_t v43 = (void *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      id v46 = v44;
      *(_DWORD *)uint64_t v35 = 136315394;
      sub_2610E25D0();
      uint64_t v36 = sub_26111F3E8();
      uint64_t v45 = sub_26105CFF8(v36, v37, (uint64_t *)&v46);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      *(_WORD *)(v35 + 12) = 2112;
      id v38 = v30;
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v45 = v39;
      sub_26111F0D8();
      uint64_t v40 = v43;
      *unint64_t v43 = v39;

      _os_log_impl(&dword_261042000, v33, v34, "Error setting modality for %s: %@", (uint8_t *)v35, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A90FD10);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v40, -1, -1);
      uint64_t v41 = v44;
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v41, -1, -1);
      MEMORY[0x26122E4F0](v35, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

void sub_2610D76F8(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8 = v7;
  if ((a2 & 1) == 0)
  {
    uint64_t v14 = sub_26111EAC8();
    os_log_type_t v15 = sub_26111EF48();
    if (!os_log_type_enabled(v14, v15))
    {
LABEL_5:

      int v20 = 0;
      goto LABEL_11;
    }
    uint64_t v16 = a6;
    uint64_t v17 = a7;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134218240;
    sub_26111F0D8();
    *(_WORD *)(v18 + 12) = 2048;
    unint64_t v42 = a4;
    sub_26111F0D8();
    _os_log_impl(&dword_261042000, v14, v15, "Using provided key observation %ld for entity %ld", (uint8_t *)v18, 0x16u);
    uint64_t v19 = v18;
    a7 = v17;
    a6 = v16;
    uint64_t v8 = v7;
LABEL_4:
    MEMORY[0x26122E4F0](v19, -1, -1);
    goto LABEL_5;
  }
  if ((a5 & 1) == 0)
  {
    uint64_t v21 = sub_2610D5EB8(a4);
    if ((v22 & 1) == 0)
    {
      a1 = v21;
      uint64_t v14 = sub_26111EAC8();
      os_log_type_t v23 = sub_26111EF48();
      if (!os_log_type_enabled(v14, v23)) {
        goto LABEL_5;
      }
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134218240;
      sub_26111F0D8();
      *(_WORD *)(v24 + 12) = 2048;
      unint64_t v42 = a4;
      uint64_t v8 = v7;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v14, v23, "Using selected modality observation %ld for entity %ld", (uint8_t *)v24, 0x16u);
      uint64_t v19 = v24;
      goto LABEL_4;
    }
  }
  a1 = 0;
  int v20 = 1;
LABEL_11:
  id v25 = *(NSObject **)(*(void *)(a3 + 16) + 16);
  swift_retain();
  BOOL v26 = sub_2610E72E0(a1, v20, a4, 0);
  uint64_t v27 = swift_release();
  if (v26)
  {
    if (v20) {
      goto LABEL_28;
    }
  }
  else
  {
    unint64_t v28 = *(void **)(*(void *)(*(void *)(a3 + 16) + 16) + 16);
    MEMORY[0x270FA5388](v27);
    swift_retain();
    id v25 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A288);
    sub_26111F028();
    if (v8)
    {
LABEL_32:

      swift_unexpectedError();
      __break(1u);
      return;
    }
    swift_release();

    if (!*(void *)(v42 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_28:
      id v38 = sub_26111EAC8();
      os_log_type_t v39 = sub_26111EF58();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 134217984;
        sub_26111F0D8();
        _os_log_impl(&dword_261042000, v38, v39, "Cannot find personalization observations for entity %ld", v40, 0xCu);
        MEMORY[0x26122E4F0](v40, -1, -1);
      }

      sub_261046B60();
      swift_allocError();
      *uint64_t v41 = 5;
      swift_willThrow();
      return;
    }
    a1 = *(void *)(v42 + 32);
    swift_bridgeObjectRelease();
    id v25 = sub_26111EAC8();
    os_log_type_t v29 = sub_26111EF58();
    if (os_log_type_enabled(v25, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134218240;
      sub_26111F0D8();
      *(_WORD *)(v30 + 12) = 2048;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v25, v29, "Cannot find key observation, using fallback observation %ld for entity %ld", (uint8_t *)v30, 0x16u);
      MEMORY[0x26122E4F0](v30, -1, -1);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A6A0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_261120090;
  *(void *)(v31 + 32) = a1;
  if (__OFSUB__(a6, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v32 = v31;
  if (a6 - 1 >= 3) {
    uint64_t v33 = 3;
  }
  else {
    uint64_t v33 = a6 - 1;
  }
  swift_retain();
  uint64_t v34 = sub_2610C90F8(a1, a4, v33);
  swift_release();
  sub_2610739C8(v34);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_26111EAC8();
  os_log_type_t v36 = sub_26111EF38();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 134218240;
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    sub_26111F0D8();
    _os_log_impl(&dword_261042000, v35, v36, "Using %ld similar observations for entity %ld", (uint8_t *)v37, 0x16u);
    MEMORY[0x26122E4F0](v37, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  *a7 = v32;
}

unint64_t sub_2610D7D94(char *a1, char *a2, int a3, unint64_t a4, unint64_t a5, int a6)
{
  int v143 = a3;
  int v144 = a6;
  unint64_t v147 = a4;
  unint64_t v148 = a5;
  unint64_t v142 = a2;
  int v140 = a1;
  uint64_t v7 = sub_26111EA78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v134 = v7;
  uint64_t v135 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v129 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v124 = (char *)&v122 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v122 = (char *)&v122 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v125 = (char *)&v122 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v131 = (char *)&v122 - v17;
  uint64_t v18 = sub_26111EA38();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v130 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v127 = (char *)&v122 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v123 = (char *)&v122 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v128 = (char *)&v122 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v136 = (char *)&v122 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v122 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v122 - v33;
  unint64_t v141 = v6;
  uint64_t v35 = &v6[OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter];
  sub_26111EA28();
  os_signpost_type_t v138 = v35;
  os_log_type_t v36 = (__objc2_prot **)sub_26111EA48();
  os_signpost_type_t v37 = sub_26111F018();
  char v38 = sub_26111F0B8();
  v150 = v32;
  if (v38)
  {
    os_log_type_t v39 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    unint64_t v40 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v39(v32, v34, v18);
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    os_signpost_id_t v42 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, (os_log_t)v36, v37, v42, "personalizationInputArray", "", v41, 2u);
    unint64_t v43 = v41;
    uint64_t v32 = v150;
    MEMORY[0x26122E4F0](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
  }
  else
  {

    os_log_type_t v39 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    unint64_t v40 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v132 = v40;
  unint64_t v133 = (void (*)(char *, unint64_t, uint64_t))v39;
  v39(v32, v34, v18);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v44 = sub_26111EA98();
  id v46 = *(void (**)(unint64_t, uint64_t))(v19 + 8);
  uint64_t v45 = v19 + 8;
  unint64_t v137 = v46;
  v46((unint64_t)v34, v18);
  uint64_t v47 = v147;
  uint64_t v139 = v44;
  if (v147 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = (char *)sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = *(char **)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v49 = v148;
  uint64_t v50 = v48 - 2;
  if (__OFSUB__(v48, 2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = (char *)(v47 & 0xC000000000000001);
    if ((v47 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v50 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v50 < *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v51 = *(id *)(v47 + 8 * (void)v50 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_64;
    }
  }
  id v51 = (id)MEMORY[0x26122DAE0](v48 - 2, v47);
LABEL_11:
  uint64_t v52 = v51;
  os_log_type_t v36 = &off_265576000;
  uint64_t v48 = (char *)objc_msgSend(v51, sel_integerValue);

  uint64_t v149 = v18;
  uint64_t v146 = v45;
  uint64_t v126 = v32;
  if (v49)
  {
    uint64_t v45 = v49 & 0xFFFFFFFFFFFFFF8;
    if (!(v49 >> 62))
    {
      uint64_t v54 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v55 = v54 - 2;
      if (!__OFSUB__(v54, 2)) {
        goto LABEL_14;
      }
      goto LABEL_66;
    }
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_26111F348();
    swift_bridgeObjectRelease();
    unint64_t v55 = v54 - 2;
    if (!__OFSUB__(v54, 2))
    {
LABEL_14:
      if ((v49 & 0xC000000000000001) == 0)
      {
        if ((v55 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v55 < *(void *)(v45 + 16))
        {
          id v56 = *(id *)(v49 + 8 * v55 + 32);
LABEL_18:
          uint64_t v57 = v56;
          id v58 = (char *)[v56 (SEL)v36[62]];

          goto LABEL_20;
        }
        __break(1u);
        goto LABEL_70;
      }
LABEL_67:
      id v56 = (id)MEMORY[0x26122DAE0](v55, v49);
      goto LABEL_18;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  id v58 = 0;
LABEL_20:
  uint64_t v60 = v140;
  uint64_t v59 = v141;
  MEMORY[0x270FA5388](v53);
  *(&v122 - 6) = v142;
  *((unsigned char *)&v122 - 40) = v143 & 1;
  *(&v122 - 4) = v59;
  *(&v122 - 3) = v60;
  *((unsigned char *)&v122 - 16) = v144 & 1;
  *(&v122 - 1) = v48;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  unint64_t v61 = v145;
  uint64_t v62 = sub_26111EFC8();
  if (v61)
  {
    unint64_t v147 = v61;
    uint64_t v63 = sub_26111EA48();
    unint64_t v49 = (unint64_t)v136;
    sub_26111EA88();
    os_signpost_type_t v64 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v65 = v131;
      sub_26111EAB8();
      swift_release();
      uint64_t v67 = v134;
      uint64_t v66 = v135;
      int v68 = (*(uint64_t (**)(char *, uint64_t))(v135 + 88))(v65, v134);
      id v69 = v137;
      if (v68 == *MEMORY[0x263F90238])
      {
        uint64_t v70 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
        uint64_t v70 = "";
      }
      uint64_t v74 = v149;
      v133(v150, v49, v149);
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v75 = 0;
      os_signpost_id_t v76 = sub_26111EA18();
      uint64_t v77 = v74;
      uint64_t v78 = v150;
      _os_signpost_emit_with_name_impl(&dword_261042000, v63, v64, v76, "personalizationInputArray", v70, v75, 2u);
      MEMORY[0x26122E4F0](v75, -1, -1);

      unint64_t v79 = v49;
      goto LABEL_32;
    }

    v137(v49, v149);
    goto LABEL_34;
  }
  os_log_type_t v71 = v152;
  uint64_t v152 = (char *)MEMORY[0x263F8EE78];
  uint64_t v151 = MEMORY[0x263F8EE78];
  MEMORY[0x270FA5388](v62);
  *(&v122 - 8) = v71;
  *(&v122 - 7) = v48;
  *(&v122 - 6) = v72;
  *(&v122 - 5) = (char *)&v151;
  *(&v122 - 4) = v58;
  *(&v122 - 3) = v60;
  *(&v122 - 2) = (char *)&v152;
  sub_26111EFC8();
  swift_bridgeObjectRelease();
  unint64_t v80 = v152;
  id v81 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v49 = (unint64_t)sub_2610A4C18(v47, 65568);
  if (v126) {
    id v89 = (id)MEMORY[0x26122DAE0](v50, v147);
  }
  else {
    id v89 = *(id *)(v147 + 8 * (void)v50 + 32);
  }
  uint64_t v90 = v89;
  uint64_t v91 = (char *)objc_msgSend(v89, sel_integerValue);

  MEMORY[0x270FA5388](v92);
  *(&v122 - 2) = v91;
  *(&v122 - 1) = v80;
  sub_26111EF18();
  unint64_t v147 = 0;
  swift_bridgeObjectRelease();
  uint64_t v47 = v151;
  if (!v148 || !*(void *)(v151 + 16))
  {
LABEL_45:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = sub_26111EA48();
    uint64_t v101 = v127;
    sub_26111EA88();
    int v102 = sub_26111F008();
    char v103 = sub_26111F0B8();
    char v104 = v150;
    uint64_t v106 = v134;
    uint64_t v105 = v135;
    if (v103)
    {
      LODWORD(v148) = v102;
      swift_retain();
      uint64_t v107 = v124;
      sub_26111EAB8();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v105 + 88))(v107, v106) == *MEMORY[0x263F90238])
      {
        uint64_t v108 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v106);
        uint64_t v108 = "";
      }
      uint64_t v112 = v101;
      uint64_t v110 = v149;
      v133(v104, (unint64_t)v112, v149);
      uint64_t v113 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v113 = 0;
      os_signpost_id_t v114 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v100, (os_signpost_type_t)v148, v114, "personalizationInputArray", v108, v113, 2u);
      unint64_t v109 = v150;
      MEMORY[0x26122E4F0](v113, -1, -1);

      uint64_t v111 = (void (*)(char *, uint64_t))v137;
      v137((unint64_t)v127, v110);
    }
    else
    {

      unint64_t v109 = v101;
      uint64_t v110 = v149;
      uint64_t v111 = (void (*)(char *, uint64_t))v137;
    }
    v111(v109, v110);
    swift_release();
    return v49;
  }
  id v93 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  unint64_t v94 = v148;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v95 = v147;
  sub_2610A4C18(v94, 65568);
  unint64_t v147 = v95;
  if (v95)
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_26111EA48();
    uint64_t v97 = v123;
    sub_26111EA88();
    unint64_t v49 = sub_26111F008();
    char v98 = sub_26111F0B8();
    uint64_t v99 = v149;
    if (v98)
    {
      swift_retain();
      uint64_t v82 = v122;
      sub_26111EAB8();
      swift_release();
      uint64_t v84 = v134;
      uint64_t v83 = v135;
      int v85 = (*(uint64_t (**)(char *, uint64_t))(v135 + 88))(v82, v134);
      id v69 = v137;
      if (v85 == *MEMORY[0x263F90238])
      {
        uint64_t v73 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
        uint64_t v73 = "";
      }
      uint64_t v78 = v150;
      v133(v150, (unint64_t)v97, v99);
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      os_signpost_id_t v87 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v96, (os_signpost_type_t)v49, v87, "personalizationInputArray", v73, v86, 2u);
      uint64_t v77 = v149;
      MEMORY[0x26122E4F0](v86, -1, -1);

      unint64_t v79 = (unint64_t)v97;
LABEL_32:
      v69(v79, v77);
      v69((unint64_t)v78, v77);
      goto LABEL_34;
    }

    v137((unint64_t)v97, v99);
LABEL_34:
    swift_release();
    return v49;
  }
  uint64_t v54 = v94 & 0xFFFFFFFFFFFFFF8;
  if (!(v94 >> 62))
  {
    uint64_t v115 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = v115 - 2;
    if (!__OFSUB__(v115, 2)) {
      goto LABEL_54;
    }
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
LABEL_70:
  swift_bridgeObjectRetain();
  uint64_t v121 = sub_26111F348();
  swift_bridgeObjectRelease();
  unint64_t result = v121 - 2;
  if (__OFSUB__(v121, 2)) {
    goto LABEL_72;
  }
LABEL_54:
  if ((v148 & 0xC000000000000001) != 0)
  {
LABEL_73:
    id v116 = (id)MEMORY[0x26122DAE0](result, v148);
    goto LABEL_58;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v54 + 16))
  {
    id v116 = *(id *)(v148 + 8 * result + 32);
LABEL_58:
    uint64_t v117 = v116;
    uint64_t v118 = (char *)objc_msgSend(v116, sel_integerValue);

    MEMORY[0x270FA5388](v119);
    *(&v122 - 2) = v118;
    *(&v122 - 1) = (char *)v47;
    unint64_t v120 = v147;
    sub_26111EF18();
    unint64_t v147 = v120;
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_2610D8C38(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, uint64_t a5, uint64_t a6, void **a7)
{
  uint64_t v8 = v7;
  long long v168 = a7;
  uint64_t v154 = a6;
  long long v172 = a4;
  uint64_t v177 = a2;
  uint64_t v179 = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v147 = (uint64_t)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v151 = (uint64_t)&v146 - v14;
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910530);
  uint64_t v15 = MEMORY[0x270FA5388](v178);
  v150 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v153 = (uint64_t)&v146 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v146 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v167 = (uint64_t *)((char *)&v146 - v23);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v164 = (char *)&v146 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v146 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v171 = (_OWORD *)((char *)&v146 - v30);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v146 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  os_log_type_t v36 = (uint64_t *)((char *)&v146 - v35);
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  os_log_type_t v39 = (uint64_t *)((char *)&v146 - v38);
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (uint64_t *)((char *)&v146 - v40);
  uint64_t v45 = sub_26109A978(v177, v179);
  if (v43 == v44 >> 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v160 = v39;
    v161 = v36;
    uint64_t v159 = (uint64_t *)v33;
    double v169 = v28;
    uint64_t v149 = (uint64_t *)v21;
    unint64_t v165 = v44 >> 1;
    uint64_t v170 = a3 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_logger;
    uint64_t v166 = v42;
    uint64_t v46 = v43;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v48 = v46;
    *(void *)&long long v49 = 134218498;
    long long v152 = v49;
    uint64_t v50 = v165;
    uint64_t v148 = MEMORY[0x263F8EE58] + 8;
    uint64_t v163 = v45;
    uint64_t v158 = a5;
    uint64_t v157 = a3;
    uint64_t v162 = (char *)v41;
    while (1)
    {
      if (v48 >= v50)
      {
        __break(1u);
        return result;
      }
      uint64_t v175 = v48;
      uint64_t v51 = v178;
      uint64_t v52 = (uint64_t)v41 + *(int *)(v178 + 64);
      uint64_t v53 = *(void *)(*(void *)(a3 + 16) + 16);
      uint64_t v54 = *(void **)(v53 + 16);
      MEMORY[0x270FA5388](result);
      uint64_t v173 = v55;
      *(&v146 - 4) = v55;
      *((unsigned char *)&v146 - 24) = v56;
      *(&v146 - 2) = v53;
      swift_retain();
      id v57 = v54;
      id v58 = v160;
      sub_26111F028();
      uint64_t v176 = v8;

      uint64_t v59 = v58;
      uint64_t v60 = *v58;
      unint64_t v61 = v58[1];
      uint64_t v62 = v41;
      uint64_t v63 = v59[2];
      unint64_t v64 = v59[3];
      sub_261071274((uint64_t)v59 + *(int *)(v51 + 64), v52, &qword_26B40AC70);
      swift_release();
      *uint64_t v62 = v60;
      v62[1] = v61;
      v62[2] = v63;
      v62[3] = v64;
      uint64_t v65 = *(int *)(v51 + 64);
      uint64_t v66 = v161;
      uint64_t v67 = (uint64_t)v161 + v65;
      uint64_t *v161 = v60;
      v66[1] = v61;
      v66[2] = v63;
      v66[3] = v64;
      uint64_t v179 = v52;
      sub_261071864(v52, (uint64_t)v66 + v65, &qword_26B40AC70);
      if (v61 >> 60 == 15) {
        break;
      }
      sub_26106A668(v60, v61);
      sub_26106A668(v60, v61);
      sub_26106A668(v63, v64);
      sub_2610718C8(v67, &qword_26B40AC70);
      int v68 = v168;
      id v69 = *v168;
      sub_26106A67C(v60, v61);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int v68 = v69;
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v71 = v68;
      }
      else
      {
        uint64_t v136 = sub_26105CB64(0, v69[2] + 1, 1, v69);
        os_log_type_t v71 = v168;
        id v69 = v136;
        *long long v168 = v136;
      }
      int v72 = v164;
      uint64_t v73 = v159;
      unint64_t v75 = v69[2];
      unint64_t v74 = v69[3];
      unint64_t v76 = v64;
      if (v75 >= v74 >> 1)
      {
        unint64_t v137 = sub_26105CB64((void *)(v74 > 1), v75 + 1, 1, v69);
        os_log_type_t v71 = v168;
        id v69 = v137;
        uint64_t v73 = v159;
      }
      v69[2] = v75 + 1;
      uint64_t v77 = &v69[2 * v75];
      v77[4] = v60;
      v77[5] = v61;
      void *v71 = v69;
      uint64_t v79 = v178;
      uint64_t v78 = v179;
      uint64_t v80 = (uint64_t)v73 + *(int *)(v178 + 64);
      *uint64_t v73 = v60;
      v73[1] = v61;
      v73[2] = v63;
      v73[3] = v76;
      uint64_t v81 = (uint64_t)v73;
      sub_261071864(v78, v80, &qword_26B40AC70);
      uint64_t v82 = v171;
      sub_261071864(v81, (uint64_t)v171, &qword_26A910530);
      uint64_t v83 = v81;
      uint64_t v84 = (uint64_t)v169;
      sub_261071274(v83, (uint64_t)v169, &qword_26A910530);
      sub_26106A668(v60, v61);
      uint64_t v177 = v63;
      unint64_t v174 = v76;
      sub_26106A668(v63, v76);
      int v85 = sub_26111EAC8();
      int v86 = sub_26111EF48();
      if (os_log_type_enabled(v85, (os_log_type_t)v86))
      {
        LODWORD(v156) = v86;
        uint64_t v87 = swift_slowAlloc();
        uint64_t v155 = swift_slowAlloc();
        uint64_t v180 = v155;
        *(_DWORD *)uint64_t v87 = v152;
        *(void *)(v87 + 4) = v173;
        *(_WORD *)(v87 + 12) = 2080;
        uint64_t v88 = *(int *)(v79 + 64);
        id v89 = (char *)v72 + v88;
        long long v90 = v82[1];
        *int v72 = *v82;
        v72[1] = v90;
        sub_261071864((uint64_t)v82 + v88, (uint64_t)v72 + v88, &qword_26B40AC70);
        uint64_t v91 = (uint64_t)v89;
        uint64_t v92 = v151;
        sub_261071274(v91, v151, &qword_26B40AC70);
        uint64_t v93 = sub_26111E778();
        uint64_t v94 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93) == 1)
        {
          sub_2610718C8(v92, &qword_26B40AC70);
          unint64_t v95 = 0xE300000000000000;
          uint64_t v96 = 4935253;
        }
        else
        {
          char v98 = v85;
          uint64_t v99 = v92;
          uint64_t v96 = sub_26111E738();
          unint64_t v95 = v100;
          uint64_t v101 = v99;
          int v85 = v98;
          uint64_t v79 = v178;
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v101, v93);
        }
        uint64_t v8 = v176;
        *(void *)(v87 + 14) = sub_26105CFF8(v96, v95, &v180);
        swift_bridgeObjectRelease();
        sub_2610718C8((uint64_t)v169, &qword_26A910530);
        sub_2610718C8((uint64_t)v171, &qword_26A910530);
        *(_WORD *)(v87 + 22) = 2048;
        *(void *)(v87 + 24) = v154;
        _os_log_impl(&dword_261042000, v85, (os_log_type_t)v156, "Using faceprint %ld from asset %s for entity %ld", (uint8_t *)v87, 0x20u);
        uint64_t v102 = v155;
        swift_arrayDestroy();
        MEMORY[0x26122E4F0](v102, -1, -1);
        MEMORY[0x26122E4F0](v87, -1, -1);

        uint64_t v97 = v167;
      }
      else
      {

        sub_2610718C8(v84, &qword_26A910530);
        sub_2610718C8((uint64_t)v82, &qword_26A910530);
        uint64_t v97 = v167;
        uint64_t v8 = v176;
      }
      uint64_t v103 = (uint64_t)v97 + *(int *)(v79 + 64);
      uint64_t *v97 = v60;
      v97[1] = v61;
      uint64_t v104 = v177;
      unint64_t v105 = v174;
      v97[2] = v177;
      v97[3] = v105;
      sub_261071864(v179, v103, &qword_26B40AC70);
      if (v105 >> 60 == 15)
      {
        uint64_t v41 = (uint64_t *)v162;
        sub_2610718C8((uint64_t)v162, &qword_26A910530);
        sub_261068AB0(v60, v61);
        sub_261068AB0(v60, v61);
        uint64_t result = sub_2610718C8(v103, &qword_26B40AC70);
      }
      else
      {
        sub_26106A67C(v104, v105);
        sub_2610718C8(v103, &qword_26B40AC70);
        uint64_t v106 = v172;
        uint64_t v107 = *v172;
        sub_26106A67C(v104, v105);
        char v108 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v106 = v107;
        if (v108)
        {
          unint64_t v109 = v106;
        }
        else
        {
          os_signpost_type_t v138 = sub_26105CB64(0, v107[2] + 1, 1, v107);
          unint64_t v109 = v172;
          uint64_t v107 = v138;
          *long long v172 = v138;
        }
        uint64_t v110 = v149;
        unint64_t v112 = v107[2];
        unint64_t v111 = v107[3];
        if (v112 >= v111 >> 1)
        {
          uint64_t v139 = sub_26105CB64((void *)(v111 > 1), v112 + 1, 1, v107);
          unint64_t v109 = v172;
          uint64_t v107 = v139;
          uint64_t v110 = v149;
        }
        uint64_t v113 = v150;
        v107[2] = v112 + 1;
        os_signpost_id_t v114 = &v107[2 * v112];
        uint64_t v116 = v177;
        uint64_t v115 = v178;
        v114[4] = v177;
        v114[5] = v105;
        *unint64_t v109 = v107;
        uint64_t v117 = (uint64_t)v110 + *(int *)(v115 + 64);
        *uint64_t v110 = v60;
        v110[1] = v61;
        v110[2] = v116;
        v110[3] = v105;
        uint64_t v118 = v110;
        sub_261071864(v179, v117, &qword_26B40AC70);
        uint64_t v119 = (uint64_t)v118;
        uint64_t v120 = v153;
        sub_261071274(v119, v153, &qword_26A910530);
        uint64_t v121 = sub_26111EAC8();
        LODWORD(v179) = sub_26111EF48();
        if (os_log_type_enabled(v121, (os_log_type_t)v179))
        {
          os_log_t v156 = v121;
          uint64_t v122 = (_OWORD *)v120;
          uint64_t v123 = swift_slowAlloc();
          uint64_t v155 = swift_slowAlloc();
          uint64_t v180 = v155;
          *(_DWORD *)uint64_t v123 = v152;
          *(void *)(v123 + 4) = v173;
          *(_WORD *)(v123 + 12) = 2080;
          uint64_t v124 = *(int *)(v115 + 64);
          uint64_t v125 = (uint64_t)v113 + v124;
          long long v126 = v122[1];
          _OWORD *v113 = *v122;
          v113[1] = v126;
          sub_261071864((uint64_t)v122 + v124, (uint64_t)v113 + v124, &qword_26B40AC70);
          uint64_t v127 = v147;
          sub_261071274(v125, v147, &qword_26B40AC70);
          uint64_t v128 = sub_26111E778();
          uint64_t v129 = *(void *)(v128 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128) == 1)
          {
            sub_2610718C8(v127, &qword_26B40AC70);
            unint64_t v130 = 0xE300000000000000;
            uint64_t v131 = 4935253;
          }
          else
          {
            uint64_t v131 = sub_26111E738();
            unint64_t v130 = v132;
            (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v127, v128);
          }
          uint64_t v133 = v177;
          *(void *)(v123 + 14) = sub_26105CFF8(v131, v130, &v180);
          swift_bridgeObjectRelease();
          sub_2610718C8(v153, &qword_26A910530);
          *(_WORD *)(v123 + 22) = 2048;
          *(void *)(v123 + 24) = v154;
          os_log_t v134 = v156;
          _os_log_impl(&dword_261042000, v156, (os_log_type_t)v179, "Using torsoprint %ld from asset %s for entity %ld", (uint8_t *)v123, 0x20u);
          uint64_t v135 = v155;
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v135, -1, -1);
          MEMORY[0x26122E4F0](v123, -1, -1);

          sub_261068AB0(v133, v105);
          sub_261068AB0(v60, v61);
        }
        else
        {
          sub_261068AB0(v60, v61);
          sub_261068AB0(v116, v105);
          sub_2610718C8(v120, &qword_26A910530);
        }
        uint64_t v41 = (uint64_t *)v162;
        uint64_t result = sub_2610718C8((uint64_t)v162, &qword_26A910530);
        uint64_t v8 = v176;
      }
      uint64_t v48 = v175 + 1;
      uint64_t v50 = v165;
      a3 = v157;
      if (v165 == v175 + 1) {
        return swift_unknownObjectRelease();
      }
    }
    sub_2610718C8(v67, &qword_26B40AC70);
    int v140 = sub_26111EAC8();
    os_log_type_t v141 = sub_26111EF58();
    BOOL v142 = os_log_type_enabled(v140, v141);
    uint64_t v143 = v154;
    if (v142)
    {
      uint64_t v144 = swift_slowAlloc();
      *(_DWORD *)uint64_t v144 = 134218240;
      uint64_t v180 = v173;
      sub_26111F0D8();
      *(_WORD *)(v144 + 12) = 2048;
      uint64_t v180 = v143;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v140, v141, "Cannot get faceprint %ld for entity %ld", (uint8_t *)v144, 0x16u);
      MEMORY[0x26122E4F0](v144, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *unint64_t v145 = 5;
    swift_willThrow();
    sub_2610718C8((uint64_t)v162, &qword_26A910530);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_2610D9984(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4 < 0) {
    goto LABEL_50;
  }
  if (a4)
  {
    unint64_t v6 = *(void *)(a5 + 16);
    if (!v6)
    {
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      JUMPOUT(0x2610D9C6CLL);
    }
    uint64_t v7 = result;
    unint64_t v8 = 0;
    uint64_t v9 = a5 + 32;
    uint64_t v39 = result;
    uint64_t v31 = a5 + 32;
    unint64_t v32 = v6;
    while (a4 != v8)
    {
      unint64_t v10 = v8++;
      uint64_t v11 = v9 + 16 * (v10 % v6);
      uint64_t v13 = *(void *)v11;
      unint64_t v12 = *(void *)(v11 + 8);
      switch(v12 >> 62)
      {
        case 1uLL:
          if (v13 >> 32 < (int)v13) {
            goto LABEL_44;
          }
          swift_retain();
          uint64_t v15 = (char *)sub_26111E4A8();
          if (!v15) {
            goto LABEL_16;
          }
          uint64_t v16 = sub_26111E4D8();
          if (__OFSUB__((int)v13, v16)) {
            goto LABEL_49;
          }
          v15 += (int)v13 - v16;
LABEL_16:
          uint64_t v17 = sub_26111E4C8();
          uint64_t v7 = v39;
          if (!v39) {
            goto LABEL_54;
          }
          if (v17 >= (v13 >> 32) - (int)v13) {
            uint64_t v18 = (v13 >> 32) - (int)v13;
          }
          else {
            uint64_t v18 = v17;
          }
          uint64_t v19 = &v15[v18];
          if (v15)
          {
            uint64_t v20 = v19 - v15;
          }
          else
          {
            uint64_t v19 = 0;
            uint64_t v20 = 0;
          }
          if ((unsigned __int128)((uint64_t)v10 * (__int128)v20) >> 64 != (uint64_t)(v10 * v20) >> 63) {
            goto LABEL_46;
          }
          if (!v15) {
            goto LABEL_55;
          }
          memmove((void *)(v39 + v10 * v20), v15, v19 - v15);
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v13 + 16);
          uint64_t v22 = *(void *)(v13 + 24);
          sub_26106A67C(*(void *)v11, *(void *)(v11 + 8));
          swift_retain();
          swift_retain();
          uint64_t v23 = (char *)sub_26111E4A8();
          if (!v23) {
            goto LABEL_29;
          }
          uint64_t v24 = sub_26111E4D8();
          if (__OFSUB__(v21, v24)) {
            goto LABEL_48;
          }
          v23 += v21 - v24;
LABEL_29:
          BOOL v25 = __OFSUB__(v22, v21);
          uint64_t v26 = v22 - v21;
          if (v25) {
            goto LABEL_45;
          }
          uint64_t v27 = sub_26111E4C8();
          uint64_t v7 = v39;
          if (!v39) {
            goto LABEL_56;
          }
          if (v27 >= v26) {
            uint64_t v28 = v26;
          }
          else {
            uint64_t v28 = v27;
          }
          uint64_t v29 = &v23[v28];
          if (v23)
          {
            uint64_t v30 = v29 - v23;
          }
          else
          {
            uint64_t v29 = 0;
            uint64_t v30 = 0;
          }
          if ((unsigned __int128)((uint64_t)v10 * (__int128)v30) >> 64 != (uint64_t)(v10 * v30) >> 63) {
            goto LABEL_47;
          }
          if (!v23) {
            goto LABEL_57;
          }
          memmove((void *)(v39 + v10 * v30), v23, v29 - v23);
          swift_release();
          swift_release();
          break;
        case 3uLL:
          if (v7) {
            goto LABEL_6;
          }
          goto LABEL_52;
        default:
          uint64_t __src = *(void *)v11;
          __int16 v34 = v12;
          char v35 = BYTE2(v12);
          char v36 = BYTE3(v12);
          char v37 = BYTE4(v12);
          char v38 = BYTE5(v12);
          if (!v7) {
            goto LABEL_53;
          }
          uint64_t v14 = v10 * BYTE6(v12);
          if (((uint64_t)v10 * (unsigned __int128)BYTE6(v12)) >> 64 != v14 >> 63) {
            goto LABEL_43;
          }
          memcpy((void *)(v7 + v14), &__src, BYTE6(v12));
LABEL_6:
          uint64_t result = sub_26106899C(v13, v12);
          if (a4 != v8) {
            continue;
          }
          return result;
      }
      uint64_t result = sub_26106899C(v13, v12);
      uint64_t v9 = v31;
      unint64_t v6 = v32;
      if (a4 == v8) {
        return result;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  return result;
}

uint64_t VUGallery.TokenEmbeddingType.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = result;
  if ((unsigned __int16)result >= 6u) {
    char v2 = 6;
  }
  *a2 = v2;
  return result;
}

uint64_t VUGallery.TokenEmbeddingType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_2610D9C9C@<X0>(unsigned __int16 *a1@<X0>, char *a2@<X8>)
{
  return VUGallery.TokenEmbeddingType.init(rawValue:)(*a1, a2);
}

char *VUGallery.tokenEmbeddings(for:client:type:)(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v5 = v3;
  uint64_t v131 = sub_26111E778();
  uint64_t v9 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26111EA78();
  uint64_t v122 = *(void *)(v12 - 8);
  uint64_t v123 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v116 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v118 = (char *)&v111 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v120 = (char *)&v111 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v115 = (char *)&v111 - v19;
  uint64_t v20 = sub_26111EA38();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v129 = v20;
  uint64_t v130 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v119 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v121 = (char *)&v111 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v124 = (char *)&v111 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v117 = (char *)&v111 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v127 = (char *)&v111 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v111 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A670);
  MEMORY[0x270FA5388](v34 - 8);
  char v36 = (char *)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v37 = (void (*)(char *, uint64_t))*a2;
  int v125 = *a3;
  uint64_t v132 = v5;
  uint64_t v133 = v5;
  uint64_t v128 = v37;
  char v134 = (char)v37;
  uint64_t v38 = a1;
  uint64_t v135 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A2F0);
  sub_26111EFC8();
  uint64_t v126 = v4;
  uint64_t v39 = v136[0];
  uint64_t v40 = *(void *)(v136[0] + 16);
  uint64_t v41 = type metadata accessor for VUGallery.TagView(0);
  uint64_t v42 = *(void *)(v41 - 8);
  if (v40)
  {
    sub_2610E2374(v39+ ((*(unsigned __int8 *)(*(void *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v41 - 8) + 80)), (uint64_t)v36);
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v43 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v36, v43, 1, v41);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v36, 1, v41) != 1)
  {
    unint64_t v44 = *(char **)&v36[*(int *)(v41 + 28)];
    sub_2610E23D8((uint64_t)v36);
    os_signpost_id_t v114 = v44;
    if (v44 == (char *)-1) {
      goto LABEL_9;
    }
    uint64_t v45 = v132 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
    sub_26111EA28();
    uint64_t v131 = v45;
    uint64_t v46 = sub_26111EA48();
    os_signpost_type_t v47 = sub_26111F018();
    if (sub_26111F0B8())
    {
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
      uint64_t v51 = v127;
      v50(v127, v33, v129);
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v46, v47, v53, "tokenEmbeddings", "", v52, 2u);
      MEMORY[0x26122E4F0](v52, -1, -1);

      uint64_t v54 = v49;
      uint64_t v55 = v51;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v54);
    }
    else
    {

      uint64_t v54 = v129;
      uint64_t v48 = v130;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
      uint64_t v55 = v127;
    }
    unint64_t v112 = v50;
    v50(v55, v33, v54);
    sub_26111EAA8();
    swift_allocObject();
    uint64_t v63 = sub_26111EA98();
    uint64_t v65 = *(void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v64 = v48 + 8;
    uint64_t v128 = v65;
    v65(v33, v54);
    v136[3] = (uint64_t)&type metadata for VUGallery.TokenEmbeddingType;
    LOBYTE(v136[0]) = v125;
    unint64_t v66 = (unint64_t)v114 >> 56;
    if ((unint64_t)v114 >> 56 == 2)
    {
      char v67 = 1;
    }
    else if (v66 == 6)
    {
      char v67 = 3;
    }
    else if (v66 == 63)
    {
      char v67 = 2;
    }
    else
    {
      char v67 = 0;
    }
    LOBYTE(v137) = v67;
    uint64_t v68 = v126;
    uint64_t v69 = sub_2610D4554((uint64_t)v136, (unsigned __int8 *)&v137, 0, 0, 0, 0);
    if (v68)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v136);
      uint64_t v70 = sub_26111EA48();
      os_log_type_t v71 = v124;
      sub_26111EA88();
      uint64_t v33 = (char *)sub_26111F008();
      if (sub_26111F0B8())
      {
        uint64_t v130 = v64;
        swift_retain();
        int v72 = v120;
        sub_26111EAB8();
        swift_release();
        uint64_t v74 = v122;
        uint64_t v73 = v123;
        BOOL v75 = (*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v72, v123) == *MEMORY[0x263F90238];
        uint64_t v113 = v63;
        if (v75)
        {
          uint64_t v88 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
          uint64_t v88 = "";
        }
        id v89 = v55;
        long long v90 = v124;
        uint64_t v94 = v55;
        uint64_t v95 = v129;
        v112(v89, v124, v129);
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v96 = 0;
        os_signpost_id_t v97 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v70, (os_signpost_type_t)v33, v97, "tokenEmbeddings", v88, v96, 2u);
        MEMORY[0x26122E4F0](v96, -1, -1);

        char v98 = v128;
        v128(v90, v95);
        v98(v94, v95);
        goto LABEL_38;
      }
LABEL_30:

      v128(v71, v129);
LABEL_38:
      swift_release();
      return v33;
    }
    unint64_t v76 = (void *)v69;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v136);
    id v77 = objc_msgSend(v76, sel_modelDescription);
    id v78 = objc_msgSend(v77, sel_inputDescriptionsByName);

    sub_261071924(0, &qword_26A9104A0);
    uint64_t v79 = sub_26111EB68();

    if (*(void *)(v79 + 16) && (unint64_t v80 = sub_26105D630(0xD000000000000011, 0x80000002611226C0), (v81 & 1) != 0))
    {
      uint64_t v113 = v63;
      id v82 = *(id *)(*(void *)(v79 + 56) + 8 * v80);
      swift_bridgeObjectRelease();
      id v83 = objc_msgSend(v82, sel_multiArrayConstraint);

      if (v83)
      {
        id v84 = objc_msgSend(v83, sel_shape);

        sub_261071924(0, (unint64_t *)&qword_26B40AC30);
        unint64_t v85 = sub_26111ED88();

        uint64_t v91 = (char *)sub_2610D7D94(v114, 0, 1, v85, 0, 1);
        uint64_t v93 = v92;
        swift_bridgeObjectRelease();

        uint64_t v33 = (char *)sub_2610DACD4(v91, v76);
        uint64_t v130 = v64;

        uint64_t v70 = sub_26111EA48();
        os_log_type_t v71 = v117;
        sub_26111EA88();
        os_signpost_type_t v100 = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v101 = v115;
          sub_26111EAB8();
          swift_release();
          uint64_t v103 = v122;
          uint64_t v102 = v123;
          if ((*(unsigned int (**)(char *, uint64_t))(v122 + 88))(v101, v123) == *MEMORY[0x263F90238])
          {
            uint64_t v104 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v102);
            uint64_t v104 = "";
          }
          unint64_t v105 = v117;
          uint64_t v106 = v129;
          v112(v127, v117, v129);
          uint64_t v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v107 = 0;
          os_signpost_id_t v108 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v70, v100, v108, "tokenEmbeddings", v104, v107, 2u);
          unint64_t v109 = v127;
          MEMORY[0x26122E4F0](v107, -1, -1);

          uint64_t v110 = v128;
          v128(v105, v106);
          v110(v109, v106);
          goto LABEL_38;
        }
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x2610DACBCLL);
  }
  sub_2610718C8((uint64_t)v36, &qword_26B40A670);
LABEL_9:
  uint64_t v56 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v38, v131);
  id v57 = sub_26111EAC8();
  os_log_type_t v58 = sub_26111EF58();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v33 = (char *)swift_slowAlloc();
    uint64_t v132 = swift_slowAlloc();
    v136[0] = v132;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v59 = sub_26111E738();
    uint64_t v137 = sub_26105CFF8(v59, v60, v136);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v56);
    *((_WORD *)v33 + 6) = 2080;
    unint64_t v61 = 0xE600000000000000;
    uint64_t v62 = 0x736F746F6850;
    switch((unint64_t)v128)
    {
      case 1uLL:
        unint64_t v61 = 0xE700000000000000;
        uint64_t v62 = 0x74694B656D6F48;
        break;
      case 2uLL:
        unint64_t v61 = 0xE800000000000000;
        uint64_t v62 = 0x73746361746E6F43;
        break;
      case 3uLL:
        uint64_t v62 = 0xD000000000000013;
        unint64_t v61 = 0x80000002611226E0;
        break;
      case 4uLL:
        unint64_t v61 = 0xE800000000000000;
        uint64_t v62 = 0x6465767265736552;
        break;
      case 5uLL:
        uint64_t v62 = 0x646572616853;
        break;
      default:
        break;
    }
    uint64_t v137 = sub_26105CFF8(v62, v61, v136);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v57, v58, "Tag %s for client %s not found - cannot fetch token embeddings!", (uint8_t *)v33, 0x16u);
    uint64_t v86 = v132;
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v86, -1, -1);
    MEMORY[0x26122E4F0](v33, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v56);
  }
  sub_261046B60();
  swift_allocError();
  *uint64_t v87 = 3;
  swift_willThrow();
  return v33;
}

void (*sub_2610DACD4(char *a1, void *a2))(char *, uint64_t)
{
  id v111 = a2;
  uint64_t v116 = a1;
  v122[11] = *(id *)MEMORY[0x263EF8340];
  uint64_t v113 = sub_26111EA78();
  uint64_t v3 = *(void *)(v113 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v113);
  uint64_t v104 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v105 = (char *)&v103 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v103 = (char *)&v103 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v110 = (char *)&v103 - v10;
  uint64_t v11 = sub_26111EA38();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  os_signpost_id_t v108 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v109 = (char *)&v103 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v106 = (char *)&v103 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v115 = (char *)&v103 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v103 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v103 - v24;
  uint64_t v107 = v2;
  uint64_t v26 = v2 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
  sub_26111EA28();
  uint64_t v117 = v26;
  uint64_t v27 = sub_26111EA48();
  os_signpost_type_t v28 = sub_26111F018();
  char v29 = sub_26111F0B8();
  uint64_t v114 = v3;
  if (v29)
  {
    uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v121(v23, v25, v11);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v27, v28, v31, "tokenEmbeddingsInference", "", v30, 2u);
    MEMORY[0x26122E4F0](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
    unint64_t v32 = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v33 = v121;
  }
  else
  {

    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    unint64_t v32 = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v121 = v33;
  unint64_t v112 = v32;
  v33(v23, v25, v11);
  sub_26111EAA8();
  swift_allocObject();
  sub_26111EA98();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v35 = v12 + 8;
  uint64_t v36 = v11;
  uint64_t v119 = v34;
  uint64_t v120 = v35;
  v34(v25, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A910528);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261120090;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x80000002611226C0;
  id v38 = objc_msgSend(self, sel_featureValueWithMultiArray_, v116);
  *(void *)(inited + 72) = sub_261071924(0, &qword_26A910520);
  *(void *)(inited + 48) = v38;
  sub_2610487A0(inited);
  id v39 = objc_allocWithZone(MEMORY[0x263F00D38]);
  uint64_t v40 = v118;
  id v41 = sub_2610E1C8C();
  uint64_t v42 = v23;
  uint64_t v118 = v40;
  if (v40)
  {
    uint64_t v43 = sub_26111EA48();
    unint64_t v44 = v115;
    sub_26111EA88();
    os_signpost_type_t v45 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v46 = v110;
      sub_26111EAB8();
      swift_release();
      uint64_t v47 = v113;
      uint64_t v48 = v114;
      if ((*(unsigned int (**)(char *, uint64_t))(v114 + 88))(v46, v113) == *MEMORY[0x263F90238])
      {
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
        uint64_t v49 = "";
      }
      v121(v42, v44, v11);
      unint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v66 = 0;
      os_signpost_id_t v67 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v43, v45, v67, "tokenEmbeddingsInference", v49, v66, 2u);
      MEMORY[0x26122E4F0](v66, -1, -1);

      uint64_t v68 = v44;
      uint64_t v56 = v119;
      v119(v68, v36);
      v56(v42, v36);
    }
    else
    {

      uint64_t v65 = v44;
      uint64_t v56 = v119;
      v119(v65, v11);
    }
    goto LABEL_33;
  }
  uint64_t v50 = v41;
  v122[0] = 0;
  id v51 = objc_msgSend(v111, sel_predictionFromFeatures_error_, v41, v122);
  if (!v51)
  {
    id v84 = v122[0];
    uint64_t v85 = sub_26111E518();

    swift_willThrow();
    unint64_t v76 = sub_26111EA48();
    id v77 = v108;
    sub_26111EA88();
    os_signpost_type_t v78 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v86 = v104;
      sub_26111EAB8();
      swift_release();
      uint64_t v87 = v113;
      uint64_t v88 = v114;
      int v89 = (*(uint64_t (**)(char *, uint64_t))(v114 + 88))(v86, v113);
      int v90 = *MEMORY[0x263F90238];
      uint64_t v118 = v85;
      if (v89 == v90)
      {
        id v83 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v86, v87);
        id v83 = "";
      }
      uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))v121;
      uint64_t v92 = v42;
      uint64_t v93 = &v123;
      goto LABEL_31;
    }
LABEL_25:

    uint64_t v56 = v119;
    v119(v77, v11);
    goto LABEL_33;
  }
  uint64_t v52 = v51;
  id v53 = v122[0];
  uint64_t v54 = (void *)sub_26111EBC8();
  id v55 = objc_msgSend(v52, sel_featureValueForName_, v54);

  swift_unknownObjectRelease();
  if (!v55
    || (uint64_t v56 = (void (*)(char *, uint64_t))objc_msgSend(v55, sel_multiArrayValue),
        v55,
        !v56))
  {
    uint64_t v69 = sub_26111EAC8();
    os_log_type_t v70 = sub_26111EF58();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = v114;
    if (v71)
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl(&dword_261042000, v69, v70, "Cannot get the personalized embedding from the model", v73, 2u);
      MEMORY[0x26122E4F0](v73, -1, -1);
    }

    sub_261046B60();
    uint64_t v74 = swift_allocError();
    *BOOL v75 = 5;
    swift_willThrow();

    unint64_t v76 = sub_26111EA48();
    id v77 = v109;
    sub_26111EA88();
    os_signpost_type_t v78 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v79 = v105;
      sub_26111EAB8();
      swift_release();
      uint64_t v80 = v113;
      int v81 = (*(uint64_t (**)(char *, uint64_t))(v72 + 88))(v79, v113);
      int v82 = *MEMORY[0x263F90238];
      uint64_t v118 = v74;
      if (v81 == v82)
      {
        id v83 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v79, v80);
        id v83 = "";
      }
      uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))v121;
      uint64_t v92 = v42;
      uint64_t v93 = &v124;
LABEL_31:
      uint64_t v94 = (char *)*(v93 - 32);
      v91(v92, (uint64_t)v94, v11);
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v95 = 0;
      os_signpost_id_t v96 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v76, v78, v96, "tokenEmbeddingsInference", v83, v95, 2u);
      MEMORY[0x26122E4F0](v95, -1, -1);

      uint64_t v56 = v119;
      v119(v94, v11);
      v56(v42, v11);
      goto LABEL_33;
    }
    goto LABEL_25;
  }
  uint64_t v116 = v42;

  id v57 = sub_26111EA48();
  os_log_type_t v58 = v106;
  sub_26111EA88();
  os_signpost_type_t v59 = sub_26111F008();
  char v60 = sub_26111F0B8();
  uint64_t v61 = v114;
  if (v60)
  {
    swift_retain();
    uint64_t v62 = v103;
    sub_26111EAB8();
    swift_release();
    uint64_t v63 = v113;
    if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v62, v113) == *MEMORY[0x263F90238])
    {
      uint64_t v64 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
      uint64_t v64 = "";
    }
    char v98 = v106;
    uint64_t v99 = v116;
    v121(v116, v106, v11);
    os_signpost_type_t v100 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_type_t v100 = 0;
    os_signpost_id_t v101 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v57, v59, v101, "tokenEmbeddingsInference", v64, v100, 2u);
    MEMORY[0x26122E4F0](v100, -1, -1);

    uint64_t v102 = v119;
    v119(v98, v36);
    v102(v99, v36);
  }
  else
  {

    v119(v58, v11);
  }
LABEL_33:
  swift_release();
  return v56;
}

void VUGallery.tokenEmbeddings(for:type:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_26111EA78();
  uint64_t v130 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v123 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v127 = (char *)&v114 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v122 = (char *)&v114 - v10;
  MEMORY[0x270FA5388](v9);
  int v125 = (char *)&v114 - v11;
  uint64_t v12 = sub_26111EA38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v135 = v12;
  uint64_t v136 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v132 = (char *)&v114 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v114 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v126 = (char *)&v114 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v114 - v25;
  MEMORY[0x270FA5388](v24);
  os_signpost_type_t v28 = (char *)&v114 - v27;
  int v29 = *a2;
  id v30 = sub_2610DC820();
  if (v31 >> 60 == 15)
  {
LABEL_2:
    unint64_t v32 = sub_26111EAC8();
    os_log_type_t v33 = sub_26111EF58();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_261042000, v32, v33, "Cannot extract embedding data from observation!", v34, 2u);
      MEMORY[0x26122E4F0](v34, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v35 = 8;
    swift_willThrow();
    return;
  }
  uint64_t v36 = (uint64_t)v30;
  unint64_t v37 = v31;
  uint64_t v133 = v2;
  self;
  uint64_t v38 = swift_dynamicCastObjCClass();
  uint64_t v128 = v26;
  unint64_t v124 = v37;
  uint64_t v129 = v36;
  if (v38)
  {
    LODWORD(v121) = v29;
    int v139 = 1;
    uint64_t v39 = v136;
  }
  else
  {
    self;
    uint64_t v40 = swift_dynamicCastObjCClass();
    uint64_t v39 = v136;
    if (!v40)
    {
      sub_261068AB0(v36, v37);
      goto LABEL_2;
    }
    LODWORD(v121) = v29;
    int v139 = 2;
  }
  uint64_t v116 = v21;
  uint64_t v117 = v16;
  uint64_t v41 = v133 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
  sub_26111EA28();
  uint64_t v120 = v41;
  uint64_t v42 = sub_26111EA48();
  os_signpost_type_t v43 = sub_26111F018();
  if (sub_26111F0B8())
  {
    unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    unint64_t v45 = (v39 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v46 = v128;
    uint64_t v47 = v135;
    v44(v128, v28, v135);
    uint64_t v48 = v39;
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    os_signpost_id_t v50 = sub_26111EA18();
    os_signpost_type_t v51 = v43;
    uint64_t v52 = v46;
    _os_signpost_emit_with_name_impl(&dword_261042000, v42, v51, v50, "tokenEmbeddingsObservation", "", v49, 2u);
    id v53 = v49;
    uint64_t v39 = v48;
    MEMORY[0x26122E4F0](v53, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
  }
  else
  {

    unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    unint64_t v45 = (v39 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v47 = v135;
    uint64_t v52 = v128;
  }
  uint64_t v119 = v44;
  unint64_t v118 = v45;
  v44(v52, v28, v47);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v54 = sub_26111EA98();
  uint64_t v55 = v39 + 8;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v136 = v55;
  v56(v28, v47);
  os_signpost_type_t v138 = &type metadata for VUGallery.TokenEmbeddingType;
  v137[0] = (_BYTE)v121;
  unsigned __int8 v140 = v139;
  uint64_t v57 = v134;
  uint64_t v58 = sub_2610D4554((uint64_t)v137, &v140, 0, 0, 0, 0);
  uint64_t v59 = v129;
  if (v57)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v137);
    char v60 = sub_26111EA48();
    uint64_t v61 = v132;
    sub_26111EA88();
    os_signpost_type_t v62 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v63 = v127;
      sub_26111EAB8();
      uint64_t v134 = v54;
      swift_release();
      uint64_t v65 = v130;
      uint64_t v64 = v131;
      if ((*(unsigned int (**)(char *, uint64_t))(v130 + 88))(v63, v131) == *MEMORY[0x263F90238])
      {
        unint64_t v66 = v56;
        os_signpost_id_t v67 = "[Error] Interval already ended";
      }
      else
      {
        id v83 = v63;
        unint64_t v66 = v56;
        (*(void (**)(char *, uint64_t))(v65 + 8))(v83, v64);
        os_signpost_id_t v67 = "";
      }
      id v84 = v128;
      uint64_t v85 = v135;
      v119(v128, v61, v135);
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      os_signpost_id_t v87 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v60, v62, v87, "tokenEmbeddingsObservation", v67, v86, 2u);
      MEMORY[0x26122E4F0](v86, -1, -1);

      v66(v61, v85);
      v66(v84, v85);
      swift_release();
      uint64_t v82 = v129;
    }
    else
    {

      v56(v61, v135);
      swift_release();
      uint64_t v82 = v59;
    }
    sub_261068AB0(v82, v124);
    return;
  }
  uint64_t v68 = (void *)v58;
  uint64_t v134 = v54;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v137);
  id v69 = objc_msgSend(v68, sel_modelDescription);
  id v70 = objc_msgSend(v69, sel_inputDescriptionsByName);

  sub_261071924(0, &qword_26A9104A0);
  uint64_t v71 = sub_26111EB68();

  if (!*(void *)(v71 + 16) || (unint64_t v72 = sub_26105D630(0xD000000000000011, 0x80000002611226C0), (v73 & 1) == 0))
  {
LABEL_45:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_46;
  }
  id v74 = *(id *)(*(void *)(v71 + 56) + 8 * v72);
  swift_bridgeObjectRelease();
  id v75 = objc_msgSend(v74, sel_multiArrayConstraint);

  if (!v75)
  {
LABEL_46:
    __break(1u);
    return;
  }
  id v76 = objc_msgSend(v75, sel_shape);

  sub_261071924(0, (unint64_t *)&qword_26B40AC30);
  unint64_t v77 = sub_26111ED88();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A90FF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_261120090;
  *(void *)(inited + 32) = v59;
  unint64_t v79 = v124;
  *(void *)(inited + 40) = v124;
  id v80 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  sub_26106A668(v59, v79);
  uint64_t v81 = swift_bridgeObjectRetain();
  uint64_t v88 = (char *)sub_2610A4C18(v81, 65568);
  if (!(v77 >> 62))
  {
    uint64_t v89 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v90 = v89 - 2;
    if (!__OFSUB__(v89, 2)) {
      goto LABEL_26;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v113 = sub_26111F348();
  swift_bridgeObjectRelease();
  unint64_t v90 = v113 - 2;
  if (__OFSUB__(v113, 2)) {
    goto LABEL_41;
  }
LABEL_26:
  uint64_t v121 = v68;
  if ((v77 & 0xC000000000000001) == 0)
  {
    if ((v90 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v90 < *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v91 = *(id *)(v77 + 8 * v90 + 32);
      goto LABEL_30;
    }
    __break(1u);
    goto LABEL_45;
  }
LABEL_42:
  id v91 = (id)MEMORY[0x26122DAE0](v90, v77);
LABEL_30:
  uint64_t v92 = v91;
  id v93 = objc_msgSend(v91, sel_integerValue);

  MEMORY[0x270FA5388](v94);
  *(&v114 - 2) = (uint64_t)v93;
  *(&v114 - 1) = inited;
  sub_26111EF18();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v95 = v121;
  sub_2610DACD4(v88, v121);

  os_signpost_id_t v96 = sub_26111EA48();
  os_signpost_id_t v97 = v116;
  sub_26111EA88();
  int v98 = sub_26111F008();
  if (sub_26111F0B8())
  {
    swift_retain();
    uint64_t v99 = v122;
    sub_26111EAB8();
    swift_release();
    uint64_t v101 = v130;
    uint64_t v100 = v131;
    BOOL v102 = (*(unsigned int (**)(char *, uint64_t))(v130 + 88))(v99, v131) == *MEMORY[0x263F90238];
    uint64_t v115 = v56;
    LODWORD(v133) = v98;
    if (v102)
    {
      uint64_t v106 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v101 + 8))(v99, v100);
      uint64_t v106 = "";
    }
    uint64_t v104 = v128;
    uint64_t v107 = v116;
    uint64_t v108 = v135;
    v119(v128, v116, v135);
    unint64_t v109 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v109 = 0;
    os_signpost_id_t v110 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v96, (os_signpost_type_t)v133, v110, "tokenEmbeddingsObservation", v106, v109, 2u);
    MEMORY[0x26122E4F0](v109, -1, -1);

    uint64_t v105 = v108;
    id v111 = v107;
    uint64_t v103 = v115;
    v115(v111, v108);
  }
  else
  {

    uint64_t v103 = v56;
    uint64_t v104 = v97;
    uint64_t v105 = v135;
  }
  uint64_t v112 = v129;
  v103(v104, v105);
  swift_release();
  sub_261068AB0(v112, v124);
}

id sub_2610DC820()
{
  uint64_t v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    self;
    id v8 = (id)swift_dynamicCastObjCClass();
    if (!v8) {
      return v8;
    }
    id v4 = v1;
    id v9 = objc_msgSend(v8, sel_animalprint);
    id v8 = v9;
    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_descriptorData);
      goto LABEL_11;
    }
LABEL_14:

    return v8;
  }
  uint64_t v3 = (void *)v2;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel_faceprint);
  if (!v5
    || (uint64_t v6 = v5, v7 = objc_msgSend(v5, sel_descriptorData), v6, !v7))
  {
    id v11 = objc_msgSend(v3, sel_faceTorsoprint);
    if (!v11) {
      goto LABEL_13;
    }
    uint64_t v12 = v11;
    id v8 = objc_msgSend(v11, sel_faceprint);

    if (v8)
    {
      id v10 = objc_msgSend(v8, sel_descriptorData);
LABEL_11:
      id v13 = v10;

      if (v13)
      {
        id v8 = (id)sub_26111E688();

        return v8;
      }
LABEL_13:

      return 0;
    }
    goto LABEL_14;
  }
  id v8 = (id)sub_26111E688();

  return v8;
}

BOOL static VUGallery.TokenEmbeddingPersonalizationType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VUGallery.TokenEmbeddingPersonalizationType.hash(into:)()
{
  return sub_26111F4D8();
}

uint64_t VUGallery.TokenEmbeddingPersonalizationType.hashValue.getter()
{
  return sub_26111F508();
}

uint64_t VUGallery.PersonalizationOptions.seed.getter()
{
  return *(void *)v0;
}

uint64_t VUGallery.PersonalizationOptions.seed.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*VUGallery.PersonalizationOptions.seed.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.PersonalizationOptions.boundingBox.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VUGallery.PersonalizationOptions.boundingBox.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VUGallery.PersonalizationOptions.boundingBox.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.PersonalizationOptions.adapterIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VUGallery.PersonalizationOptions.adapterIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VUGallery.PersonalizationOptions.adapterIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.PersonalizationOptions.keyObservation.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t VUGallery.PersonalizationOptions.keyObservation.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*VUGallery.PersonalizationOptions.keyObservation.modify())()
{
  return nullsub_1;
}

uint64_t VUGallery.PersonalizationOptions.init(seed:boundingBox:adapterIdentifier:keyObservation:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(unsigned char *)(a8 + 8) = a2 & 1;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7 & 1;
  return result;
}

uint64_t sub_2610DCBC8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_26111E7C8();
  __swift_project_boxed_opaque_existential_1Tm(v14, v15);
  if (sub_26111E838() == v2 && v1 == v3) {
    goto LABEL_17;
  }
  char v5 = sub_26111F408();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  if (v5)
  {
LABEL_18:
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_26111F228();
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "personalized_");
    HIWORD(v14[1]) = -4864;
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    return v2;
  }
  sub_26111E7A8();
  __swift_project_boxed_opaque_existential_1Tm(v14, v15);
  if (sub_26111E838() == v2 && v1 == v6) {
    goto LABEL_17;
  }
  char v8 = sub_26111F408();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  if (v8) {
    goto LABEL_18;
  }
  sub_26111E7D8();
  __swift_project_boxed_opaque_existential_1Tm(v14, v15);
  if (sub_26111E838() == v2 && v1 == v9) {
    goto LABEL_17;
  }
  char v11 = sub_26111F408();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  if (v11) {
    goto LABEL_18;
  }
  sub_26111E7B8();
  __swift_project_boxed_opaque_existential_1Tm(v14, v15);
  if (sub_26111E838() == v2 && v1 == v12)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
    goto LABEL_18;
  }
  char v13 = sub_26111F408();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  if (v13) {
    goto LABEL_18;
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_26111F228();
  swift_bridgeObjectRelease();
  v14[0] = 0xD000000000000024;
  v14[1] = 0x8000000261124070;
  sub_26111EC88();
  swift_bridgeObjectRelease();
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

uint64_t VUGallery.PersonalizationOptions.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 48);
  if ((*(unsigned char *)(v0 + 8) & 1) == 0)
  {
    sub_26111F3E8();
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
  }
  if (v1)
  {
    MEMORY[0x26122D610](v1, MEMORY[0x263F8D538]);
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
  }
  if (v2)
  {
    sub_26111EC88();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
  }
  if ((v3 & 1) == 0)
  {
    sub_26111F228();
    swift_bridgeObjectRelease();
    sub_26111F3E8();
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void VUGallery.personalize(embeddingLayer:at:for:client:type:options:)(id *a1, uint64_t a2, NSObject *a3, unsigned __int8 *a4, unsigned __int8 *a5, uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v186 = a2;
  uint64_t v185 = a1;
  uint64_t v189 = sub_26111EA78();
  uint64_t v190 = *(void *)(v189 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v189);
  uint64_t v180 = (char *)&v172 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v184 = (char *)&v172 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v188 = (char *)&v172 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v179 = (char *)&v172 - v19;
  uint64_t v20 = sub_26111E778();
  uint64_t v203 = *(void *)(v20 - 8);
  uint64_t v204 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v172 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v183 = (char *)&v172 - v24;
  uint64_t v200 = sub_26111EA38();
  uint64_t v201 = *(void *)(v200 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v200);
  v182 = (char *)&v172 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v187 = (char *)&v172 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  int v191 = (char *)&v172 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v181 = (char *)&v172 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v199 = (char *)&v172 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v172 - v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A670);
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v39 = (char *)&v172 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *a4;
  int v217 = *a5;
  uint64_t v196 = *(void *)a6;
  uint64_t v197 = *(void *)(a6 + 8);
  uint64_t v198 = *(void *)(a6 + 16);
  uint64_t v195 = *(void *)(a6 + 24);
  uint64_t v192 = *(void *)(a6 + 32);
  id v193 = *(char **)(a6 + 40);
  int v194 = *(unsigned __int8 *)(a6 + 48);
  uint64_t v205 = v8;
  uint64_t v206 = v8;
  char v207 = v40;
  os_log_t v202 = a3;
  uint64_t v208 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A2F0);
  sub_26111EFC8();
  uint64_t v41 = v209;
  uint64_t v42 = *(void *)(v209 + 16);
  uint64_t v43 = type metadata accessor for VUGallery.TagView(0);
  uint64_t v44 = *(void *)(v43 - 8);
  if (v42)
  {
    sub_2610E2374(v41+ ((*(unsigned __int8 *)(*(void *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v43 - 8) + 80)), (uint64_t)v39);
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v45 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v39, v45, 1, v43);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v39, 1, v43) == 1)
  {
    sub_2610718C8((uint64_t)v39, &qword_26B40A670);
    uint64_t v46 = v204;
LABEL_10:
    uint64_t v63 = v203;
    (*(void (**)(char *, os_log_t, uint64_t))(v203 + 16))(v23, v202, v46);
    uint64_t v64 = sub_26111EAC8();
    os_log_type_t v65 = sub_26111EF58();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v205 = swift_slowAlloc();
      uint64_t v209 = v205;
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v67 = sub_26111E738();
      v216[0] = sub_26105CFF8(v67, v68, &v209);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v23, v46);
      *(_WORD *)(v66 + 12) = 2080;
      unint64_t v69 = 0xE600000000000000;
      uint64_t v70 = 0x736F746F6850;
      switch(v40)
      {
        case 1:
          unint64_t v69 = 0xE700000000000000;
          uint64_t v70 = 0x74694B656D6F48;
          break;
        case 2:
          unint64_t v69 = 0xE800000000000000;
          uint64_t v70 = 0x73746361746E6F43;
          break;
        case 3:
          uint64_t v70 = 0xD000000000000013;
          unint64_t v69 = 0x80000002611226E0;
          break;
        case 4:
          unint64_t v69 = 0xE800000000000000;
          uint64_t v70 = 0x6465767265736552;
          break;
        case 5:
          uint64_t v70 = 0x646572616853;
          break;
        default:
          break;
      }
      v216[0] = sub_26105CFF8(v70, v69, &v209);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v64, v65, "Tag %s for client %s not found - cannot personalize!", (uint8_t *)v66, 0x16u);
      uint64_t v114 = v205;
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v114, -1, -1);
      MEMORY[0x26122E4F0](v66, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v63 + 8))(v23, v46);
    }
    sub_261046B60();
    swift_allocError();
    *uint64_t v115 = 3;
    swift_willThrow();
    return;
  }
  uint64_t v47 = *(char **)&v39[*(int *)(v43 + 28)];
  sub_2610E23D8((uint64_t)v39);
  uint64_t v46 = v204;
  if (v47 == (char *)-1) {
    goto LABEL_10;
  }
  unint64_t v48 = (unint64_t)v47 >> 56;
  if ((unint64_t)v47 >> 56 == 2)
  {
    uint64_t v49 = v205 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
    sub_26111EA28();
    uint64_t v176 = v49;
    os_signpost_id_t v50 = sub_26111EA48();
    os_signpost_type_t v51 = sub_26111F018();
    char v52 = sub_26111F0B8();
    uint64_t v177 = v7;
    uint64_t v173 = v47;
    if (v52)
    {
      uint64_t v53 = v201;
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v201 + 16);
      unint64_t v55 = (v201 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v56 = v199;
      uint64_t v57 = v200;
      v54(v199, v36, v200);
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      os_signpost_id_t v59 = sub_26111EA18();
      os_signpost_type_t v60 = v51;
      uint64_t v61 = v56;
      _os_signpost_emit_with_name_impl(&dword_261042000, v50, v60, v59, "personalizeEmbeddingLayer", "", v58, 2u);
      MEMORY[0x26122E4F0](v58, -1, -1);

      uint64_t v62 = v57;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v57);
    }
    else
    {

      uint64_t v53 = v201;
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v201 + 16);
      unint64_t v55 = (v201 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v62 = v200;
      uint64_t v61 = v199;
    }
    unint64_t v174 = v54;
    v54(v61, v36, v62);
    sub_26111EAA8();
    swift_allocObject();
    uint64_t v178 = sub_26111EA98();
    uint64_t v175 = *(void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v201 = v53 + 8;
    v175(v36, v62);
    uint64_t v78 = 0;
    unint64_t v79 = 0;
    uint64_t v80 = 0;
    unint64_t v81 = 0;
    v216[3] = (uint64_t)&type metadata for VUGallery.TokenEmbeddingPersonalizationType;
    LOBYTE(v216[0]) = v217;
    unsigned __int8 v218 = 1;
    if (v198 != 1)
    {
      uint64_t v209 = v196;
      LOBYTE(v210) = v197 & 1;
      uint64_t v211 = v198;
      uint64_t v212 = v195;
      uint64_t v213 = v192;
      uint64_t v214 = v193;
      char v215 = v194 & 1;
      uint64_t v78 = sub_2610DCBC8();
      unint64_t v79 = v82;
      uint64_t v80 = v83;
      unint64_t v81 = v84;
    }
    uint64_t v85 = v177;
    uint64_t v86 = sub_2610D4554((uint64_t)v216, &v218, v78, v79, v80, v81);
    if (v85)
    {
      sub_2610E2B2C(v78, v79);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v216);
      os_signpost_id_t v87 = sub_26111EA48();
      uint64_t v88 = v191;
      sub_26111EA88();
      os_signpost_type_t v89 = sub_26111F008();
      if ((sub_26111F0B8() & 1) == 0)
      {

        v175(v88, v200);
        swift_release();
        return;
      }
      swift_retain();
      unint64_t v90 = v188;
      sub_26111EAB8();
      swift_release();
      uint64_t v91 = v190;
      uint64_t v92 = v189;
      if ((*(unsigned int (**)(char *, uint64_t))(v190 + 88))(v90, v189) == *MEMORY[0x263F90238])
      {
        id v93 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
        id v93 = "";
      }
      uint64_t v116 = v199;
      uint64_t v117 = v200;
      v174(v199, v88, v200);
      unint64_t v118 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v118 = 0;
      os_signpost_id_t v119 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v87, v89, v119, "personalizeEmbeddingLayer", v93, v118, 2u);
      MEMORY[0x26122E4F0](v118, -1, -1);

      uint64_t v120 = v175;
      v175(v88, v117);
      v120(v116, v117);
      goto LABEL_52;
    }
    uint64_t v94 = (char *)v86;
    sub_2610E2B2C(v78, v79);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v216);
    id v95 = objc_msgSend(v94, sel_modelDescription);
    id v96 = objc_msgSend(v95, sel_inputDescriptionsByName);

    sub_261071924(0, &qword_26A9104A0);
    uint64_t v97 = sub_26111EB68();

    if (*(void *)(v97 + 16) && (unint64_t v98 = sub_26105D630(0xD000000000000011, 0x80000002611226C0), (v99 & 1) != 0))
    {
      int v191 = v94;
      id v100 = *(id *)(*(void *)(v97 + 56) + 8 * v98);
      swift_bridgeObjectRelease();
      id v101 = objc_msgSend(v100, sel_multiArrayConstraint);

      if (v101)
      {
        id v102 = objc_msgSend(v101, sel_shape);

        sub_261071924(0, (unint64_t *)&qword_26B40AC30);
        unint64_t v103 = sub_26111ED88();

        id v104 = objc_msgSend(v191, sel_modelDescription);
        id v105 = objc_msgSend(v104, sel_inputDescriptionsByName);

        uint64_t v106 = sub_26111EB68();
        uint64_t v107 = *(void *)(v106 + 16);
        unint64_t v172 = v55;
        if (v107 && (unint64_t v108 = sub_26105D630(0xD000000000000017, 0x8000000261123F50), (v109 & 1) != 0))
        {
          id v110 = *(id *)(*(void *)(v106 + 56) + 8 * v108);
          swift_bridgeObjectRelease();
          id v111 = objc_msgSend(v110, sel_multiArrayConstraint, v172, v173);

          if (v111)
          {
            id v112 = objc_msgSend(v111, sel_shape);

            unint64_t v113 = sub_26111ED88();
          }
          else
          {
            unint64_t v113 = 0;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v113 = 0;
        }
        uint64_t v121 = v198;
        uint64_t v122 = v193;
        if (v198 == 1) {
          uint64_t v123 = 0;
        }
        else {
          uint64_t v123 = v193;
        }
        char v124 = v194;
        int v125 = (char *)sub_2610D7D94(v173, v123, (v198 == 1) | (v194 & 1), v103, v113, 0);
        uint64_t v126 = v121;
        uint64_t v128 = v127;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v209 = v196;
        uint64_t v210 = v197;
        uint64_t v129 = v195;
        uint64_t v211 = v126;
        uint64_t v212 = v195;
        uint64_t v213 = v192;
        uint64_t v214 = v122;
        char v215 = v124;
        sub_2610DEB08(v185, v186, (uint64_t)v125, (uint64_t)v128, (unint64_t)&v209, v191);
        id v187 = v125;
        v188 = v128;
        uint64_t v130 = v129;
        (*(void (**)(char *, os_log_t, uint64_t))(v203 + 16))(v183, v202, v204);
        uint64_t v131 = v196;
        uint64_t v132 = v197;
        uint64_t v133 = v198;
        sub_2610E2B70(v196, v197, v198);
        uint64_t v134 = v131;
        uint64_t v135 = v130;
        sub_2610E2B70(v134, v132, v133);
        uint64_t v136 = sub_26111EAC8();
        os_log_type_t v137 = sub_26111EF68();
        int v138 = v137;
        if (os_log_type_enabled(v136, v137))
        {
          uint64_t v139 = swift_slowAlloc();
          uint64_t v205 = swift_slowAlloc();
          v216[0] = v205;
          *(_DWORD *)uint64_t v139 = 134218754;
          uint64_t v209 = v186;
          os_log_t v202 = v136;
          uint64_t v140 = v203;
          sub_26111F0D8();
          *(_WORD *)(v139 + 12) = 2080;
          sub_2610E25D0();
          LODWORD(v186) = v138;
          os_log_type_t v141 = v183;
          uint64_t v142 = v204;
          uint64_t v143 = sub_26111F3E8();
          uint64_t v209 = sub_26105CFF8(v143, v144, v216);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v142);
          *(_WORD *)(v139 + 22) = 2080;
          LOBYTE(v209) = v217;
          uint64_t v145 = sub_26111EC08();
          uint64_t v209 = sub_26105CFF8(v145, v146, v216);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v139 + 32) = 2080;
          uint64_t v204 = v139 + 34;
          uint64_t v147 = v196;
          uint64_t v148 = v197;
          uint64_t v209 = v196;
          uint64_t v210 = v197;
          uint64_t v149 = v198;
          uint64_t v211 = v198;
          uint64_t v212 = v135;
          uint64_t v213 = v192;
          uint64_t v214 = v193;
          char v215 = v194;
          sub_2610E2B70(v196, v197, v198);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104A8);
          uint64_t v150 = sub_26111EC08();
          uint64_t v209 = sub_26105CFF8(v150, v151, v216);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          sub_2610E2BB8(v147, v148, v149);
          sub_2610E2BB8(v147, v148, v149);
          os_log_t v152 = v202;
          _os_log_impl(&dword_261042000, v202, (os_log_type_t)v186, "Personalizing embedding layer at position %ld for %s type %s with options %s", (uint8_t *)v139, 0x2Au);
          uint64_t v153 = v205;
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v153, -1, -1);
          MEMORY[0x26122E4F0](v139, -1, -1);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v203 + 8))(v183, v204);
          uint64_t v154 = v196;
          uint64_t v155 = v197;
          uint64_t v156 = v198;
          sub_2610E2BB8(v196, v197, v198);
          sub_2610E2BB8(v154, v155, v156);
        }
        uint64_t v157 = v181;
        uint64_t v158 = sub_26111EA48();
        sub_26111EA88();
        os_signpost_type_t v159 = sub_26111F008();
        char v160 = sub_26111F0B8();
        uint64_t v161 = v190;
        if ((v160 & 1) == 0)
        {

          v175(v157, v200);
          swift_release();
          return;
        }
        swift_retain();
        uint64_t v162 = v179;
        sub_26111EAB8();
        uint64_t v163 = v162;
        swift_release();
        uint64_t v164 = v162;
        uint64_t v165 = v189;
        if ((*(unsigned int (**)(char *, uint64_t))(v161 + 88))(v164, v189) == *MEMORY[0x263F90238])
        {
          uint64_t v166 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v161 + 8))(v163, v165);
          uint64_t v166 = "";
        }
        uint64_t v167 = v199;
        uint64_t v168 = v200;
        v174(v199, v157, v200);
        double v169 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v169 = 0;
        os_signpost_id_t v170 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v158, v159, v170, "personalizeEmbeddingLayer", v166, v169, 2u);
        MEMORY[0x26122E4F0](v169, -1, -1);

        uint64_t v171 = v175;
        v175(v157, v168);
        v171(v167, v168);
LABEL_52:
        swift_release();
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x2610DEAF0);
  }
  uint64_t v71 = sub_26111EAC8();
  os_log_type_t v72 = sub_26111EF38();
  if (os_log_type_enabled(v71, v72))
  {
    char v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v209 = v74;
    *(_DWORD *)char v73 = 136315138;
    if (v48 == 6) {
      char v75 = 3;
    }
    else {
      char v75 = 0;
    }
    if (v48 == 63) {
      char v75 = 2;
    }
    LOBYTE(v216[0]) = v75;
    uint64_t v76 = sub_26111EC08();
    v216[0] = sub_26105CFF8(v76, v77, &v209);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v71, v72, "Skipping personalization for entity of type %s", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v74, -1, -1);
    MEMORY[0x26122E4F0](v73, -1, -1);
  }
}

void sub_2610DEB08(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v132 = a4;
  uint64_t v138 = a2;
  id v137 = a6;
  uint64_t v131 = a3;
  uint64_t v9 = (void *)sub_26111EA78();
  uint64_t v128 = *(v9 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v126 = (char *)v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  int v125 = (char *)v121 - v12;
  uint64_t v13 = (void *)sub_26111EA38();
  uint64_t v136 = *(v13 - 1);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v129 = (char *)v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v127 = (char *)v121 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v134 = (char *)v121 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v121 - v20;
  sub_261071274(a5, (uint64_t)v142, &qword_26A9104A8);
  uint64_t v130 = a1;
  uint64_t v22 = (char *)*a1;
  id v23 = objc_msgSend(*a1, sel_shape);
  id v140 = (id)sub_261071924(0, (unint64_t *)&qword_26B40AC30);
  unint64_t v24 = sub_26111ED88();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = (char *)sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(char **)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v135 = v13;
  if (v25 == (char *)3)
  {
    uint64_t v6 = v22;
    uint64_t v22 = v21;
    uint64_t v21 = (char *)(v24 & 0xC000000000000001);
    if ((v24 & 0xC000000000000001) != 0) {
      goto LABEL_78;
    }
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v27 = v9;
      id v28 = *(id *)(v24 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_80;
  }
  if (v25 != (char *)2)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_26111EAC8();
    os_log_type_t v42 = sub_26111EF58();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v143 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = swift_bridgeObjectRetain();
      uint64_t v46 = MEMORY[0x26122D610](v45, v140);
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      id v141 = (id)sub_26105CFF8(v46, v48, &v143);
      sub_26111F0D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v41, v42, "Cannot personalize layer of shape %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v44, -1, -1);
      MEMORY[0x26122E4F0](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

LABEL_27:
    sub_261046B60();
    swift_allocError();
    *char v52 = 8;
    swift_willThrow();
    return;
  }
  unint64_t v26 = v24 & 0xC000000000000001;
  while (1)
  {
    uint64_t v32 = v25 - 2;
    if (v26) {
      break;
    }
    if ((unint64_t)v32 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v33 = *(id *)(v24 + 8 * (void)v32 + 32);
      goto LABEL_13;
    }
    __break(1u);
LABEL_78:
    uint64_t v27 = v9;
    id v28 = (id)MEMORY[0x26122DAE0](0, v24);
LABEL_9:
    uint64_t v29 = v28;
    uint64_t v30 = (void *)sub_26111F088();
    char v31 = sub_26111F0A8();

    uint64_t v9 = v27;
    unint64_t v26 = (unint64_t)v21;
    uint64_t v21 = v22;
    uint64_t v22 = v6;
    if ((v31 & 1) == 0) {
      goto LABEL_20;
    }
  }
  id v33 = (id)MEMORY[0x26122DAE0](v32, v24);
LABEL_13:
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_integerValue);

  if (v138 < 0 || (uint64_t)v35 <= v138)
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_26111EAC8();
    os_log_type_t v50 = sub_26111EF58();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 134218240;
      uint64_t v143 = v138;
      sub_26111F0D8();
      *(_WORD *)(v51 + 12) = 2048;
      uint64_t v143 = (uint64_t)v35;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v49, v50, "Cannot personalize embedding at position %ld as input layer has %ld tokens", (uint8_t *)v51, 0x16u);
      MEMORY[0x26122E4F0](v51, -1, -1);
    }

    goto LABEL_27;
  }
  char v124 = (void (*)(char *, char *, void *))v26;
  uint64_t v123 = v9;
  id v36 = objc_msgSend(v137, sel_modelDescription);
  uint64_t v9 = objc_msgSend(v36, sel_outputDescriptionsByName);

  sub_261071924(0, &qword_26A9104A0);
  a5 = sub_26111EB68();

  if (!*(void *)(a5 + 16) || (unint64_t v37 = sub_26105D630(0xD000000000000016, 0x80000002611240C0), (v38 & 1) == 0))
  {
LABEL_93:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v39 = *(id *)(*(void *)(a5 + 56) + 8 * v37);
  swift_bridgeObjectRelease();
  uint64_t v13 = [v39 multiArrayConstraint];

  if (!v13)
  {
LABEL_94:
    __break(1u);
    return;
  }
  uint64_t v6 = v25 - 1;
  if (v124)
  {
    uint64_t v40 = (char *)MEMORY[0x26122DAE0](v25 - 1, v24);
  }
  else
  {
    if ((unint64_t)v6 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_86;
    }
    uint64_t v40 = (char *)*(id *)(v24 + 8 * (void)v6 + 32);
  }
  uint64_t v25 = v40;
  id v53 = objc_msgSend(v13, sel_shape);
  a5 = sub_26111ED88();

  if (!(a5 >> 62))
  {
    uint64_t v39 = *(NSObject **)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v39) {
      goto LABEL_33;
    }
LABEL_81:
    unint64_t v54 = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_82;
  }
LABEL_80:
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_81;
  }
LABEL_33:
  unint64_t v54 = (unint64_t)&v39[-1].isa + 7;
  if (__OFSUB__(v39, 1))
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if ((a5 & 0xC000000000000001) == 0)
  {
    if ((v54 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v54 < *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v55 = *(id *)(a5 + 8 * v54 + 32);
      goto LABEL_38;
    }
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_83:
  id v55 = (id)MEMORY[0x26122DAE0](v54, a5);
LABEL_38:
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  char v57 = sub_26111F0A8();

  if ((v57 & 1) == 0)
  {
    unint64_t v69 = v13;
    swift_bridgeObjectRetain();
    uint64_t v25 = v69;
    uint64_t v39 = sub_26111EAC8();
    LOBYTE(v21) = sub_26111EF58();
    if (!os_log_type_enabled(v39, (os_log_type_t)v21))
    {

      swift_bridgeObjectRelease_n();
LABEL_65:

      sub_261046B60();
      swift_allocError();
      *id v101 = 8;
      swift_willThrow();

      return;
    }
    a5 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)a5 = 138412546;
    if (v124) {
      id v70 = (id)MEMORY[0x26122DAE0](v6, v24);
    }
    else {
      id v70 = *(id *)(v24 + 8 * (void)v6 + 32);
    }
    id v95 = v70;
    uint64_t v143 = (uint64_t)v70;
    sub_26111F0D8();
    *uint64_t v9 = v95;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(a5 + 12) = 2112;
    id v96 = objc_msgSend(v25, sel_shape);
    unint64_t v24 = sub_26111ED88();

    if (!(v24 >> 62))
    {
      uint64_t v97 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v97) {
        goto LABEL_59;
      }
      goto LABEL_88;
    }
LABEL_87:
    swift_bridgeObjectRetain();
    uint64_t v97 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v97)
    {
LABEL_59:
      unint64_t v98 = v97 - 1;
      if (!__OFSUB__(v97, 1))
      {
        if ((v24 & 0xC000000000000001) == 0)
        {
          if ((v98 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v98 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v99 = *(id *)(v24 + 8 * v98 + 32);
LABEL_64:
            uint64_t v100 = (uint64_t)v99;
            swift_bridgeObjectRelease();
            uint64_t v143 = v100;
            sub_26111F0D8();
            v9[1] = v100;

            _os_log_impl(&dword_261042000, v39, (os_log_type_t)v21, "Cannot personalize layer of embedding size %@, expected %@", (uint8_t *)a5, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A90FD10);
            swift_arrayDestroy();
            MEMORY[0x26122E4F0](v9, -1, -1);
            MEMORY[0x26122E4F0](a5, -1, -1);
            goto LABEL_65;
          }
          __break(1u);
          goto LABEL_93;
        }
LABEL_90:
        id v99 = (id)MEMORY[0x26122DAE0](v98, v24);
        goto LABEL_64;
      }
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
LABEL_88:
    swift_bridgeObjectRelease();

    __break(1u);
    goto LABEL_89;
  }
  id v58 = objc_msgSend(v22, sel_dataType);
  if (v58 == objc_msgSend(v13, sel_dataType))
  {
    uint64_t v122 = v6;
    id v140 = v13;
    uint64_t v59 = v139 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
    sub_26111EA28();
    v121[1] = v59;
    os_signpost_type_t v60 = sub_26111EA48();
    os_signpost_type_t v61 = sub_26111F018();
    if (sub_26111F0B8())
    {
      char v124 = *(void (**)(char *, char *, void *))(v136 + 16);
      unint64_t v62 = (v136 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v64 = v134;
      uint64_t v63 = v135;
      v124(v134, v21, v135);
      os_log_type_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v65 = 0;
      os_signpost_id_t v66 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v60, v61, v66, "personalizeEmbeddingLayerInference", "", v65, 2u);
      MEMORY[0x26122E4F0](v65, -1, -1);

      uint64_t v67 = v136;
      (*(void (**)(char *, void *))(v136 + 8))(v64, v63);
      unint64_t v68 = v124;
    }
    else
    {

      uint64_t v63 = v135;
      uint64_t v67 = v136;
      unint64_t v68 = *(void (**)(char *, char *, void *))(v136 + 16);
      unint64_t v62 = (v136 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v64 = v134;
    }
    unint64_t v78 = v133;
    char v124 = v68;
    unint64_t v133 = v62;
    v68(v64, v21, v63);
    sub_26111EAA8();
    swift_allocObject();
    sub_26111EA98();
    unint64_t v79 = *(uint64_t (**)(char *, void *))(v67 + 8);
    uint64_t v136 = v67 + 8;
    uint64_t v80 = v79(v21, v63);
    MEMORY[0x270FA5388](v80);
    uint64_t v81 = v138;
    v121[-10] = v140;
    v121[-9] = v81;
    unint64_t v82 = v122;
    v121[-8] = v24;
    v121[-7] = v82;
    uint64_t v83 = v131;
    v121[-6] = v84;
    v121[-5] = v83;
    v121[-4] = v137;
    v121[-3] = v142;
    v121[-2] = v139;
    v121[-1] = v132;
    id v86 = v85;
    sub_26111EF18();
    if (v78)
    {

      swift_bridgeObjectRelease();
      os_signpost_id_t v87 = sub_26111EA48();
      uint64_t v88 = v129;
      sub_26111EA88();
      int v89 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        unint64_t v90 = v126;
        sub_26111EAB8();
        swift_release();
        uint64_t v91 = v128;
        uint64_t v92 = v123;
        BOOL v93 = (*(unsigned int (**)(char *, void *))(v128 + 88))(v90, v123) == *MEMORY[0x263F90238];
        v121[0] = v79;
        LODWORD(v139) = v89;
        if (v93)
        {
          unint64_t v108 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, void *))(v91 + 8))(v90, v92);
          unint64_t v108 = "";
        }
        char v109 = v134;
        id v110 = v135;
        v124(v134, v88, v135);
        id v111 = v88;
        id v112 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v112 = 0;
        os_signpost_id_t v113 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v87, (os_signpost_type_t)v139, v113, "personalizeEmbeddingLayerInference", v108, v112, 2u);
        MEMORY[0x26122E4F0](v112, -1, -1);

        uint64_t v114 = (void (*)(char *, void *))v121[0];
        ((void (*)(char *, void *))v121[0])(v111, v110);
        v114(v109, v110);
      }
      else
      {

        v79(v88, v135);
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      id v102 = sub_26111EA48();
      unint64_t v103 = v127;
      sub_26111EA88();
      int v104 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        id v105 = v125;
        sub_26111EAB8();
        swift_release();
        uint64_t v106 = v128;
        uint64_t v107 = v123;
        BOOL v93 = (*(unsigned int (**)(char *, void *))(v128 + 88))(v105, v123) == *MEMORY[0x263F90238];
        v121[0] = v79;
        LODWORD(v139) = v104;
        if (v93)
        {
          uint64_t v115 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, void *))(v106 + 8))(v105, v107);
          uint64_t v115 = "";
        }
        uint64_t v116 = v134;
        uint64_t v117 = v135;
        v124(v134, v103, v135);
        unint64_t v118 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v118 = 0;
        os_signpost_id_t v119 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v102, (os_signpost_type_t)v139, v119, "personalizeEmbeddingLayerInference", v115, v118, 2u);
        MEMORY[0x26122E4F0](v118, -1, -1);

        uint64_t v120 = (void (*)(char *, void *))v121[0];
        ((void (*)(char *, void *))v121[0])(v103, v117);
        v120(v116, v117);
      }
      else
      {

        v79(v103, v135);
      }
    }

    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = v13;
    os_log_type_t v72 = sub_26111EAC8();
    os_log_type_t v73 = sub_26111EF58();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v143 = v75;
      *(_DWORD *)uint64_t v74 = 136315138;
      id v141 = objc_msgSend(v71, sel_dataType);
      type metadata accessor for MLMultiArrayDataType(0);
      uint64_t v76 = sub_26111EC08();
      id v141 = (id)sub_26105CFF8(v76, v77, &v143);
      sub_26111F0D8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v72, v73, "Cannot personalize layer, expected type %s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v75, -1, -1);
      MEMORY[0x26122E4F0](v74, -1, -1);
    }
    else
    {
    }
    sub_261046B60();
    swift_allocError();
    *uint64_t v94 = 8;
    swift_willThrow();
  }
}

void VUGallery.personalize(embeddingLayer:at:for:with:type:options:)(id *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6)
{
}

id sub_2610DFCF0()
{
  uint64_t v1 = v0;
  self;
  id v2 = (id)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = v1;
    id v4 = objc_msgSend(v2, sel_torsoprint);
    if (v4
      && (v5 = v4, id v6 = objc_msgSend(v4, sel_descriptorData), v5, v6))
    {
      id v2 = (id)sub_26111E688();
    }
    else
    {
      id v7 = objc_msgSend(v2, sel_faceTorsoprint);
      if (!v7) {
        goto LABEL_9;
      }
      uint64_t v8 = v7;
      id v2 = objc_msgSend(v7, sel_torsoprint);

      if (!v2)
      {

        return v2;
      }
      id v9 = objc_msgSend(v2, sel_descriptorData);

      if (v9)
      {
        id v2 = (id)sub_26111E688();
      }
      else
      {
LABEL_9:

        return 0;
      }
    }
  }
  return v2;
}

void sub_2610DFE3C(unint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, int64_t a6, char *a7, id *a8, uint64_t a9, void *a10, uint64_t *a11, uint64_t *a12, void *a13)
{
  uint64_t v143 = a8;
  unint64_t v144 = a7;
  uint64_t v160 = *MEMORY[0x263EF8340];
  uint64_t v139 = a11;
  sub_261071274((uint64_t)a11, (uint64_t)v157, &qword_26A9104A8);
  uint64_t v134 = v157[2];
  uint64_t v132 = v157[0];
  uint64_t v133 = v157[3];
  uint64_t v135 = (uint8_t *)v157[4];
  id v136 = (id)v157[1];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104E8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *(void *)(a3 + 16);
  id v24 = objc_msgSend(a4, sel_dataType);
  uint64_t v25 = 2;
  if (v24 == (id)65568) {
    uint64_t v25 = 4;
  }
  uint64_t v142 = (char *)a1;
  if (!a1) {
    __break(1u);
  }
  if (v23 < 2) {
    goto LABEL_108;
  }
  uint64_t v138 = v22;
  a1 = v23 - 2;
  uint64_t v22 = (char *)(a3 + 32);
  uint64_t v26 = *(void *)(a3 + 32 + 8 * (v23 - 2));
  uint64_t v27 = a5 * v26;
  if ((unsigned __int128)(a5 * (__int128)v26) >> 64 != (a5 * v26) >> 63) {
    goto LABEL_109;
  }
  unint64_t v23 = v27 * v25;
  if ((unsigned __int128)(v27 * (__int128)v25) >> 64 != (v27 * v25) >> 63) {
    goto LABEL_110;
  }
  uint64_t v137 = v20;
  id v28 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  a3 = swift_allocObject();
  long long v141 = xmmword_2611200E0;
  *(_OWORD *)(a3 + 16) = xmmword_2611200E0;
  uint64_t v29 = (void *)sub_261071924(0, (unint64_t *)&qword_26B40AC30);
  uint64_t v30 = v29;
  *(void *)(a3 + 32) = sub_26111F088();
  if ((a6 & 0xC000000000000001) != 0) {
    goto LABEL_111;
  }
  if (((unint64_t)v144 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  unint64_t v31 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v31 <= (unint64_t)v144) {
    goto LABEL_113;
  }
  for (id i = *(id *)(a6 + 8 * (void)v144 + 32); ; id i = (id)MEMORY[0x26122DAE0](v144, a6))
  {
    unint64_t v144 = &v142[v23];
    *(void *)(a3 + 40) = i;
    v152[0] = (id)a3;
    sub_26111EDA8();
    uint64_t v143 = (id *)objc_msgSend(*v143, sel_dataType);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v141;
    *(void *)(v33 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)&v22[8 * a1]);
    *(void *)(v33 + 40) = sub_26111F088();
    v152[0] = (id)v33;
    sub_26111EDA8();
    id v34 = objc_allocWithZone(MEMORY[0x263F00DA8]);
    id v35 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    id v36 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    v152[0] = 0;
    id v28 = objc_msgSend(v34, sel_initWithDataPointer_shape_dataType_strides_deallocator_error_, v144, v35, v143, v36, 0, v152);

    id v37 = v152[0];
    if (!v28)
    {
      id v46 = v152[0];
      sub_26111E518();

      swift_willThrow();
      return;
    }
    uint64_t v29 = a10;
    uint64_t v22 = (char *)0xD000000000000017;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2611200A0;
    *(void *)(inited + 32) = 0xD000000000000011;
    *(void *)(inited + 40) = 0x80000002611226C0;
    a3 = self;
    id v39 = v37;
    *(void *)(inited + 48) = objc_msgSend((id)a3, sel_featureValueWithMultiArray_, a9);
    *(void *)(inited + 56) = 0x6D655F6E656B6F74;
    *(void *)(inited + 64) = 0xEF676E6964646562;
    *(void *)(inited + 72) = objc_msgSend((id)a3, sel_featureValueWithMultiArray_, v28);
    unint64_t v146 = (int64_t *)sub_2610488D8(inited);
    uint64_t v40 = &off_265576000;
    id v41 = objc_msgSend(a10, sel_modelDescription);
    unint64_t v23 = (unint64_t)&off_265576000;
    id v42 = objc_msgSend(v41, sel_inputDescriptionsByName);

    uint64_t v143 = (id *)sub_261071924(0, &qword_26A9104A0);
    uint64_t v43 = sub_26111EB68();

    if (!*(void *)(v43 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
    *(void *)&long long v141 = "dingLayerInference";
    uint64_t v142 = (char *)0xD000000000000010;
    sub_26105D630(0xD000000000000010, 0x8000000261124110);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0) {
      goto LABEL_69;
    }
    sub_261071274((uint64_t)v139, (uint64_t)v158, &qword_26A9104A8);
    if (v159 == (int64_t *)1)
    {
      v156[0] = 0;
      goto LABEL_21;
    }
    v156[0] = v159;
    if ((v136 & 1) != 0 || v159)
    {
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_26111E7A8();
    __swift_project_boxed_opaque_existential_1Tm(v152, v153);
    uint64_t v66 = sub_26111E838();
    if (v135)
    {
      if (v66 == v133 && v135 == v67)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v152);
        sub_2610E510C(v139);
        goto LABEL_21;
      }
      char v116 = sub_26111F408();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v152);
      sub_2610E510C(v139);
      if (v116) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v152);
      sub_2610E510C(v139);
    }
    unint64_t v23 = a3;
    v147[0] = 0x3FC3333333333333;
    v147[1] = &unk_270D2FB90;
    uint64_t v148 = 0x3FC3333333333333;
    uint64_t v149 = &unk_270D2FBD0;
    uint64_t v150 = 0x3FE6666666666666;
    unint64_t v151 = &unk_270D2FC10;
    srand48(v132);
    double v13 = drand48();
    double v14 = *(double *)v147;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_26105CC74(0, 1, 1, MEMORY[0x263F8EE78]);
    a3 = v30[2];
    unint64_t v31 = v30[3];
    a6 = a3 + 1;
    if (a3 >= v31 >> 1) {
LABEL_115:
    }
      uint64_t v30 = sub_26105CC74((void *)(v31 > 1), a6, 1, v30);
    double v117 = 0.0;
    v30[2] = a6;
    *(double *)&v30[a3 + 4] = v14 + 0.0;
    swift_bridgeObjectRelease();
    double v118 = *(double *)&v148;
    unint64_t v119 = v30[2];
    if (v119) {
      double v117 = *(double *)&v30[v119 + 3];
    }
    swift_bridgeObjectRetain();
    double v120 = v118 + v117;
    unint64_t v121 = v30[3];
    if (v119 >= v121 >> 1) {
      uint64_t v30 = sub_26105CC74((void *)(v121 > 1), v119 + 1, 1, v30);
    }
    v30[2] = v119 + 1;
    *(double *)&v30[v119 + 4] = v120;
    swift_bridgeObjectRelease();
    double v122 = *(double *)&v150;
    unint64_t v123 = v30[2];
    if (v123) {
      double v124 = *(double *)&v30[v123 + 3];
    }
    else {
      double v124 = 0.0;
    }
    swift_bridgeObjectRetain();
    double v14 = v122 + v124;
    unint64_t v125 = v30[3];
    if (v123 >= v125 >> 1) {
      uint64_t v30 = sub_26105CC74((void *)(v125 > 1), v123 + 1, 1, v30);
    }
    v30[2] = v123 + 1;
    a6 = (int64_t)(v30 + 4);
    *(double *)&v30[v123 + 4] = v14;
    swift_bridgeObjectRelease();
    unint64_t v31 = v30[2];
    a3 = v23;
    unint64_t v23 = 0x265576000;
    if (!v31 || v13 < *(double *)a6 || v31 == 1) {
      break;
    }
    uint64_t v126 = 5;
    while (1)
    {
      a1 = v126 - 4;
      uint64_t v127 = v126 - 3;
      if (__OFADD__(v126 - 4, 1)) {
        goto LABEL_114;
      }
      if (v13 < *(double *)&v30[v126]) {
        break;
      }
      ++v126;
      if (v127 == v31) {
        goto LABEL_104;
      }
    }
    swift_bridgeObjectRelease();
    if (a1 <= 2) {
      goto LABEL_105;
    }
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    ;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  a1 = 0;
LABEL_105:
  uint64_t v128 = (int64_t *)v147[2 * a1 + 1];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A910518);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  v156[0] = v128;
  uint64_t v40 = &off_265576000;
LABEL_21:
  uint64_t v139 = a12;
  id v47 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  unint64_t v48 = (void *)sub_26111EBC8();
  id v49 = objc_msgSend(v47, sel_initWithSuiteName_, v48);

  if (v49)
  {
    os_log_type_t v50 = (void *)sub_26111EBC8();
    id v136 = v49;
    id v51 = objc_msgSend(v49, sel_objectForKey_, v50);

    if (v51)
    {
      sub_26111F108();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v154, 0, 32);
    }
    sub_261071274((uint64_t)v154, (uint64_t)v152, (uint64_t *)&unk_26B40ADF8);
    id v52 = v136;
    if (v153)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AD50);
      if (swift_dynamicCast())
      {
        uint64_t v53 = (uint64_t)v155;
        int64_t v54 = v155[2];
        id v130 = v28;
        uint64_t v131 = v29;
        if (v54)
        {
          unint64_t v55 = a3;
          v154[0] = MEMORY[0x263F8EE78];
          uint64_t isUniquelyReferenced_nonNull_native = sub_261062544(0, v54, 0);
          char v57 = (uint64_t *)(v53 + 40);
          while (1)
          {
            unint64_t v59 = *(v57 - 1);
            uint64_t v58 = *v57;
            uint64_t v155 = 0;
            MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
            *(&v129 - 2) = (uint64_t)&v155;
            if ((v58 & 0x1000000000000000) == 0)
            {
              if ((v58 & 0x2000000000000000) != 0)
              {
                v152[0] = (id)v59;
                v152[1] = (id)(v58 & 0xFFFFFFFFFFFFFFLL);
                switch((char)v59)
                {
                  case 0:
                  case 9:
                  case 10:
                  case 11:
                  case 12:
                  case 13:
                  case 32:
LABEL_36:
                    swift_bridgeObjectRetain();
                    goto LABEL_37;
                  default:
                    swift_bridgeObjectRetain();
                    os_signpost_type_t v60 = (unsigned char *)_swift_stdlib_strtod_clocale();
                    if (v60) {
LABEL_48:
                    }
                      LOBYTE(v145) = *v60 == 0;
                    else {
LABEL_37:
                    }
                      LOBYTE(v145) = 0;
                    break;
                }
                goto LABEL_38;
              }
              if ((v59 & 0x1000000000000000) != 0)
              {
                switch(*(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFFLL) + 0x20))
                {
                  case 0:
                  case 9:
                  case 0xA:
                  case 0xB:
                  case 0xC:
                  case 0xD:
                  case 0x20:
                    goto LABEL_36;
                  default:
                    swift_bridgeObjectRetain();
                    os_signpost_type_t v60 = (unsigned char *)_swift_stdlib_strtod_clocale();
                    if (!v60) {
                      goto LABEL_37;
                    }
                    goto LABEL_48;
                }
              }
            }
            swift_bridgeObjectRetain();
            uint64_t v65 = v140;
            sub_26111F218();
            uint64_t v140 = v65;
LABEL_38:
            swift_bridgeObjectRelease();
            if ((_BYTE)v145) {
              double v61 = *(double *)&v155;
            }
            else {
              double v61 = 0.0;
            }
            unint64_t v62 = (int64_t *)v154[0];
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t isUniquelyReferenced_nonNull_native = sub_261062544(0, v62[2] + 1, 1);
              unint64_t v62 = (int64_t *)v154[0];
            }
            unint64_t v64 = v62[2];
            unint64_t v63 = v62[3];
            if (v64 >= v63 >> 1)
            {
              uint64_t isUniquelyReferenced_nonNull_native = sub_261062544(v63 > 1, v64 + 1, 1);
              unint64_t v62 = (int64_t *)v154[0];
            }
            v57 += 2;
            v62[2] = v64 + 1;
            *(double *)&v62[v64 + 4] = v61;
            if (!--v54)
            {
              swift_bridgeObjectRelease();
              id v28 = v130;
              uint64_t v29 = v131;
              a3 = v55;
              unint64_t v23 = 0x265576000;
              goto LABEL_57;
            }
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v62 = (int64_t *)MEMORY[0x263F8EE78];
LABEL_57:
        swift_bridgeObjectRelease();
        v156[0] = v62;
        unint64_t v68 = sub_26111EAC8();
        os_log_type_t v69 = sub_26111EF58();
        if (!os_log_type_enabled(v68, v69))
        {

          uint64_t v40 = &off_265576000;
          goto LABEL_61;
        }
        unint64_t v70 = a3;
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v72 = (void *)swift_slowAlloc();
        v152[0] = v72;
        *(_DWORD *)uint64_t v71 = 136315138;
        swift_beginAccess();
        if (v156[0])
        {
          uint64_t v135 = v71 + 4;
          uint64_t v73 = swift_bridgeObjectRetain();
          uint64_t v74 = MEMORY[0x26122D610](v73, MEMORY[0x263F8D538]);
          unint64_t v76 = v75;
          swift_bridgeObjectRelease();
          uint64_t v155 = (int64_t *)sub_26105CFF8(v74, v76, (uint64_t *)v152);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_261042000, v68, v69, "Overriding bounding box to %s", v71, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v72, -1, -1);
          MEMORY[0x26122E4F0](v71, -1, -1);

          id v28 = v130;
          uint64_t v29 = v131;
          a3 = v70;
          uint64_t v40 = &off_265576000;
          unint64_t v23 = 0x265576000;
          goto LABEL_61;
        }
LABEL_119:
        __break(1u);
        JUMPOUT(0x2610E115CLL);
      }
    }
    else
    {

      sub_2610718C8((uint64_t)v152, (uint64_t *)&unk_26B40ADF8);
    }
  }
LABEL_61:
  swift_beginAccess();
  unint64_t v77 = (int64_t *)v156[0];
  if (v156[0])
  {
    sub_261071924(0, &qword_26A9104F8);
    uint64_t v155 = v77;
    swift_bridgeObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A910500);
    sub_2610712F0(&qword_26A910508, &qword_26A910500);
    sub_26111EAF8();
    sub_2610712F0(&qword_26A910510, &qword_26A9104E8);
    unint64_t v78 = (char *)sub_26111EF28();
    uint64_t v138 = (char *)a3;
    id v79 = objc_msgSend((id)a3, sel_featureValueWithMultiArray_, v78);
    uint64_t v131 = v29;
    if (v79)
    {
      uint64_t v80 = (uint64_t)v79;
      uint64_t v81 = (uint64_t)v146;
      char v82 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v155 = (int64_t *)v81;
      sub_2610802C0(v80, (uint64_t)v142, v141 | 0x8000000000000000, v82);
      unint64_t v146 = v155;
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_26111EAC8();
    os_log_type_t v84 = sub_26111EF38();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v142 = v78;
      id v85 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      id v130 = v28;
      uint64_t v87 = v86;
      uint64_t v155 = (int64_t *)v86;
      *(_DWORD *)id v85 = 136315138;
      *(void *)&long long v141 = v85 + 4;
      uint64_t v88 = swift_bridgeObjectRetain();
      uint64_t v89 = MEMORY[0x26122D610](v88, MEMORY[0x263F8D538]);
      unint64_t v91 = v90;
      swift_bridgeObjectRelease();
      uint64_t v145 = sub_26105CFF8(v89, v91, (uint64_t *)&v155);
      sub_26111F0D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v83, v84, "Using bounding box to ground face to %s", v85, 0xCu);
      swift_arrayDestroy();
      uint64_t v92 = v87;
      id v28 = v130;
      MEMORY[0x26122E4F0](v92, -1, -1);
      MEMORY[0x26122E4F0](v85, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = v131;
    a3 = (unint64_t)v138;
    uint64_t v40 = &off_265576000;
    unint64_t v23 = (unint64_t)&off_265576000;
  }
LABEL_69:
  if (a13)
  {
    id v93 = a13;
    id v94 = [v29 (SEL)v40[108]];
    id v95 = [v94 *(SEL *)(v23 + 872)];

    uint64_t v96 = sub_26111EB68();
    if (*(void *)(v96 + 16) && (sub_26105D630(0xD000000000000017, 0x8000000261123F50), (v97 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      id v98 = objc_msgSend((id)a3, sel_featureValueWithMultiArray_, v93);
      if (v98)
      {
        uint64_t v99 = (uint64_t)v98;
        uint64_t v100 = v146;
        char v101 = swift_isUniquelyReferenced_nonNull_native();
        v156[0] = v100;
        sub_2610802C0(v99, 0xD000000000000017, 0x8000000261123F50, v101);
        unint64_t v146 = (int64_t *)v156[0];

        goto LABEL_75;
      }
      uint64_t v115 = (void *)sub_2610B87EC(0xD000000000000017, 0x8000000261123F50);
    }
    else
    {

LABEL_75:
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v102 = swift_bridgeObjectRetain();
  sub_2610D3474(v102);
  swift_bridgeObjectRelease();
  id v103 = objc_allocWithZone(MEMORY[0x263F00D38]);
  uint64_t v104 = v140;
  id v105 = sub_2610E1C8C();
  if (v104)
  {

    goto LABEL_82;
  }
  uint64_t v106 = v105;
  v156[0] = 0;
  id v107 = objc_msgSend(v29, sel_predictionFromFeatures_error_, v105, v156);
  if (!v107)
  {
    uint64_t v114 = (int64_t *)v156[0];
    swift_bridgeObjectRelease();
    sub_26111E518();

    swift_willThrow();
    return;
  }
  unint64_t v108 = v107;
  char v109 = (int64_t *)v156[0];
  id v110 = (void *)sub_26111EBC8();
  id v111 = objc_msgSend(v108, sel_featureValueForName_, v110);

  swift_unknownObjectRelease();
  if (!v111)
  {
    __break(1u);
    goto LABEL_118;
  }
  id v112 = objc_msgSend(v111, sel_multiArrayValue);

  if (!v112)
  {
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  MEMORY[0x270FA5388](v113);
  *(&v129 - 2) = (uint64_t)v144;
  sub_26111EF08();

LABEL_82:
  swift_bridgeObjectRelease();
}

uint64_t VUGallery.isTokenEmbeddingAvailable(for:)(unsigned char *a1)
{
  uint64_t v2 = sub_26111E618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26111E888();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  if (*a1 != 3) {
    return 1;
  }
  uint64_t v25 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v6;
  uint64_t v27 = v5;
  uint64_t v28 = v7;
  uint64_t v29 = v3;
  uint64_t v30 = v2;
  sub_26111E798();
  __swift_project_boxed_opaque_existential_1Tm(v31, v31[3]);
  sub_26111E868();
  uint64_t v17 = v14;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2610718C8((uint64_t)v12, &qword_26A9104B0);
    return 0;
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v19 = v25;
    v18(v25, v12, v13);
    id v20 = objc_msgSend(self, sel_defaultManager);
    uint64_t v21 = sub_26111E7F8();
    uint64_t v22 = v27;
    MEMORY[0x26122D0F0](v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v26);
    sub_26111E5D8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
    unint64_t v23 = (void *)sub_26111EBC8();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v20, sel_fileExistsAtPath_, v23);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v13);
  }
  return (uint64_t)v16;
}

uint64_t VUGallery.personalizationVersion(for:)(unsigned char *a1)
{
  uint64_t v2 = sub_26111E858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  if (*a1 == 2)
  {
    sub_26111E788();
    __swift_project_boxed_opaque_existential_1Tm(v19, v20);
    sub_26111E868();
    sub_26111E7E8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v11 = sub_26111E848();
    unint64_t v13 = v12;
    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v18[0] = 46;
    v18[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v14);
    v18[-2] = v18;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2610E1D74(0x7FFFFFFFFFFFFFFFLL, 1, sub_2610E4A08, (uint64_t)&v18[-4], v11, v13);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
    unint64_t v16 = *(void *)(v15 + 16);
    if (v16 >= 3) {
      unint64_t v16 = 3;
    }
    v19[0] = v15;
    v19[1] = v15 + 32;
    v19[2] = 0;
    unint64_t v20 = (2 * v16) | 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104C0);
    sub_2610712F0(&qword_26A9104C8, &qword_26A9104C0);
    sub_2610E4A24();
    uint64_t v10 = sub_26111ED48();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t VUGallery.tokenEmbeddingVersion(for:)(unsigned __int8 *a1)
{
  uint64_t v2 = sub_26111E858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a1;
  if (v10 == 5) {
    return 3223089;
  }
  uint64_t v11 = 0;
  if (v10 == 3)
  {
    sub_26111E798();
    __swift_project_boxed_opaque_existential_1Tm(v20, v21);
    sub_26111E868();
    sub_26111E7E8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = sub_26111E848();
    unint64_t v14 = v13;
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v19[0] = 46;
    v19[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v15);
    v19[-2] = v19;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2610E1D74(0x7FFFFFFFFFFFFFFFLL, 1, sub_2610E4A08, (uint64_t)&v19[-4], v12, v14);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
    unint64_t v17 = *(void *)(v16 + 16);
    if (v17 >= 3) {
      unint64_t v17 = 3;
    }
    v20[0] = v16;
    v20[1] = v16 + 32;
    v20[2] = 0;
    unint64_t v21 = (2 * v17) | 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104C0);
    sub_2610712F0(&qword_26A9104C8, &qword_26A9104C0);
    sub_2610E4A24();
    uint64_t v11 = sub_26111ED48();
    swift_bridgeObjectRelease();
  }
  return v11;
}

id sub_2610E1C8C()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_26111EB48();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_26111E518();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_2610E1D74(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_2610E2218(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_26111ED08();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_26111EC58();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_26111EC58();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_26111ED28();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v13 = sub_26105BDFC(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    unint64_t v13 = sub_26105BDFC((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_26111EC58();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_26111ED28();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_26105BDFC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      unint64_t v13 = sub_26105BDFC((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_26111F328();
  __break(1u);
LABEL_42:
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2610E2218(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_26111ED28();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_26105BDFC(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_26105BDFC((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2610E2374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VUGallery.TagView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2610E23D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VUGallery.TagView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2610E2434()
{
  uint64_t v1 = sub_26111E778();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_2610E2508(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_26111E778() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void *)v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (char *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_2610D71B8(a1, v4, v5, v6, v7);
}

uint64_t sub_2610E2580()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610E2590()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_2610E25D0()
{
  unint64_t result = qword_26A910498;
  if (!qword_26A910498)
  {
    sub_26111E778();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910498);
  }
  return result;
}

uint64_t sub_2610E2628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610D9984(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_2610E2644(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_26111F408() & 1;
  }
}

uint64_t _s19VisualUnderstanding9VUGalleryC26isPersonalizationAvailable3forSbAC014TokenEmbeddingE4TypeO_tF_0(unsigned char *a1)
{
  uint64_t v2 = sub_26111E618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26111E888();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  if (*a1 != 2) {
    return 1;
  }
  uint64_t v25 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v6;
  unint64_t v27 = v5;
  uint64_t v28 = v7;
  uint64_t v29 = v3;
  uint64_t v30 = v2;
  sub_26111E788();
  __swift_project_boxed_opaque_existential_1Tm(v31, v31[3]);
  sub_26111E868();
  uint64_t v17 = v14;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2610718C8((uint64_t)v12, &qword_26A9104B0);
    return 0;
  }
  else
  {
    char v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    char v19 = v25;
    v18(v25, v12, v13);
    id v20 = objc_msgSend(self, sel_defaultManager);
    uint64_t v21 = sub_26111E7F8();
    uint64_t v22 = v27;
    MEMORY[0x26122D0F0](v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v26);
    sub_26111E5D8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
    uint64_t v23 = (void *)sub_26111EBC8();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v20, sel_fileExistsAtPath_, v23);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v13);
  }
  return (uint64_t)v16;
}

uint64_t sub_2610E2A90(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_26111EC68();
    return sub_26111ED28();
  }
  return result;
}

uint64_t sub_2610E2B2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2610E2B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2610E2BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2610E2C00(id *a1, uint64_t a2, void *a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v235 = a2;
  v234 = a1;
  uint64_t v238 = sub_26111EA78();
  uint64_t v239 = *(void *)(v238 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v238);
  uint64_t v231 = (char *)&v217 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v237 = (char *)&v217 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v230 = (char *)&v217 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v228 = (char *)&v217 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v233 = (char *)&v217 - v18;
  uint64_t v249 = sub_26111EA38();
  uint64_t v250 = *(void *)(v249 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v249);
  uint64_t v232 = (char *)&v217 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v240 = (char *)&v217 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v217 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  os_log_type_t v229 = (char *)&v217 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v236 = (char *)&v217 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v217 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v217 - v33;
  LODWORD(v246) = *a4;
  uint64_t v245 = *(void *)a5;
  uint64_t v241 = *(void *)(a5 + 8);
  uint64_t v248 = *(void *)(a5 + 16);
  uint64_t v242 = *(void *)(a5 + 24);
  uint64_t v244 = *(void *)(a5 + 32);
  id v243 = *(id *)(a5 + 40);
  int v35 = *(unsigned __int8 *)(a5 + 48);
  id v36 = sub_2610DC820();
  if (v37 >> 60 == 15)
  {
LABEL_2:
    unint64_t v38 = sub_26111EAC8();
    os_log_type_t v39 = sub_26111EF58();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_261042000, v38, v39, "Cannot extract embedding data from observation!", v40, 2u);
      MEMORY[0x26122E4F0](v40, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *id v41 = 8;
    swift_willThrow();
    return;
  }
  uint64_t v42 = (uint64_t)v36;
  unint64_t v43 = v37;
  v247 = v6;
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v219 = a3;
    int v260 = v35;
    unsigned __int8 v218 = v25;
    uint64_t v44 = (char *)v247 + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_signposter;
    sub_26111EA28();
    v223 = v44;
    uint64_t v45 = sub_26111EA48();
    os_signpost_type_t v46 = sub_26111F018();
    char v47 = sub_26111F0B8();
    uint64_t v225 = v42;
    unint64_t v227 = v43;
    if (v47)
    {
      uint64_t v48 = v250;
      v226 = *(void (**)(char *, char *, uint64_t))(v250 + 16);
      unint64_t v49 = (v250 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      os_log_type_t v50 = v32;
      uint64_t v51 = v249;
      v226(v32, v34, v249);
      id v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v52 = 0;
      os_signpost_id_t v53 = sub_26111EA18();
      uint64_t v54 = v48;
      _os_signpost_emit_with_name_impl(&dword_261042000, v45, v46, v53, "personalizeEmbeddingLayerObservation", "", v52, 2u);
      MEMORY[0x26122E4F0](v52, -1, -1);

      uint64_t v32 = v50;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v51);
      unint64_t v55 = v226;
    }
    else
    {

      uint64_t v54 = v250;
      unint64_t v55 = *(void (**)(char *, char *, uint64_t))(v250 + 16);
      unint64_t v49 = (v250 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v51 = v249;
    }
    v226 = v55;
    unint64_t v220 = v49;
    v55(v32, v34, v51);
    sub_26111EAA8();
    swift_allocObject();
    os_signpost_type_t v221 = v32;
    uint64_t v224 = sub_26111EA98();
    unint64_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
    uint64_t v250 = v54 + 8;
    v222 = v62;
    v62(v34, v51);
    uint64_t v63 = 0;
    unint64_t v64 = 0;
    uint64_t v65 = 0;
    unint64_t v66 = 0;
    v259[3] = (uint64_t)&type metadata for VUGallery.TokenEmbeddingPersonalizationType;
    LOBYTE(v259[0]) = (_BYTE)v246;
    unsigned __int8 v261 = 1;
    if (v248 != 1)
    {
      uint64_t v252 = v245;
      LOBYTE(v253) = v241 & 1;
      uint64_t v254 = v248;
      uint64_t v255 = v242;
      uint64_t v256 = v244;
      id v257 = v243;
      char v258 = v260 & 1;
      uint64_t v63 = sub_2610DCBC8();
      unint64_t v64 = v67;
      uint64_t v65 = v68;
      unint64_t v66 = v69;
    }
    uint64_t v70 = v251;
    uint64_t v71 = sub_2610D4554((uint64_t)v259, &v261, v63, v64, v65, v66);
    unint64_t v72 = v227;
    uint64_t v251 = v70;
    if (v70)
    {
      sub_2610E2B2C(v63, v64);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v259);
      uint64_t v73 = sub_26111EA48();
      uint64_t v74 = v240;
      sub_26111EA88();
      os_signpost_type_t v75 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        unint64_t v76 = v237;
        sub_26111EAB8();
        swift_release();
        uint64_t v77 = v239;
        uint64_t v78 = v238;
        if ((*(unsigned int (**)(char *, uint64_t))(v239 + 88))(v76, v238) == *MEMORY[0x263F90238])
        {
          id v79 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
          id v79 = "";
        }
        unint64_t v108 = v221;
        uint64_t v109 = v249;
        ((void (*)(void))v226)();
        id v110 = v74;
        id v111 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v111 = 0;
        os_signpost_id_t v112 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v73, v75, v112, "personalizeEmbeddingLayerObservation", v79, v111, 2u);
        MEMORY[0x26122E4F0](v111, -1, -1);

        uint64_t v113 = v222;
        v222(v110, v109);
        v113(v108, v109);
      }
      else
      {

        v222(v74, v249);
      }
      swift_release();
      uint64_t v114 = v225;
      unint64_t v115 = v72;
      goto LABEL_32;
    }
    uint64_t v80 = (void *)v71;
    sub_2610E2B2C(v63, v64);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v259);
    id v81 = objc_msgSend(v80, sel_modelDescription);
    id v82 = objc_msgSend(v81, sel_inputDescriptionsByName);

    uint64_t v83 = sub_261071924(0, &qword_26A9104A0);
    uint64_t v84 = sub_26111EB68();

    if (!*(void *)(v84 + 16) || (unint64_t v85 = sub_26105D630(0xD000000000000011, 0x80000002611226C0), (v86 & 1) == 0))
    {
LABEL_91:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v240 = (char *)v83;
    os_log_type_t v246 = v80;
    id v87 = *(id *)(*(void *)(v84 + 56) + 8 * v85);
    swift_bridgeObjectRelease();
    id v88 = objc_msgSend(v87, sel_multiArrayConstraint);

    if (!v88)
    {
LABEL_92:
      __break(1u);
      return;
    }
    id v89 = objc_msgSend(v88, sel_shape);

    uint64_t v90 = sub_261071924(0, (unint64_t *)&qword_26B40AC30);
    unint64_t v91 = sub_26111ED88();

    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A90FF48);
    uint64_t inited = swift_initStackObject();
    long long v217 = xmmword_261120090;
    *(_OWORD *)(inited + 16) = xmmword_261120090;
    uint64_t v94 = v225;
    *(void *)(inited + 32) = v225;
    uint64_t v95 = inited + 32;
    unint64_t v96 = v227;
    *(void *)(inited + 40) = v227;
    id v97 = objc_allocWithZone(MEMORY[0x263F00DA8]);
    sub_26106A668(v94, v96);
    uint64_t v98 = swift_bridgeObjectRetain();
    uint64_t v99 = v251;
    uint64_t v100 = (char *)sub_2610A4C18(v98, 65568);
    if (v99)
    {
      swift_setDeallocating();
      swift_arrayDestroy();

      swift_bridgeObjectRelease();
      char v101 = sub_26111EA48();
      uint64_t v102 = v236;
      sub_26111EA88();
      os_signpost_type_t v103 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        uint64_t v104 = v233;
        sub_26111EAB8();
        swift_release();
        uint64_t v105 = v239;
        uint64_t v106 = v238;
        if ((*(unsigned int (**)(char *, uint64_t))(v239 + 88))(v104, v238) == *MEMORY[0x263F90238])
        {
          id v107 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
          id v107 = "";
        }
        uint64_t v137 = v221;
        uint64_t v138 = v249;
        v226(v221, v102, v249);
        uint64_t v139 = v102;
        uint64_t v140 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v140 = 0;
        os_signpost_id_t v141 = sub_26111EA18();
        _os_signpost_emit_with_name_impl(&dword_261042000, v101, v103, v141, "personalizeEmbeddingLayerObservation", v107, v140, 2u);
        MEMORY[0x26122E4F0](v140, -1, -1);

        uint64_t v142 = v222;
        v222(v139, v138);
        v142(v137, v138);
      }
      else
      {

        v222(v102, v249);
      }
      swift_release();
      sub_261068AB0(v225, v227);
      return;
    }
    char v116 = v100;
    uint64_t v236 = (char *)v92;
    if (v91 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v117 = sub_26111F348();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v117 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v118 = v117 - 2;
    if (__OFSUB__(v117, 2))
    {
      __break(1u);
    }
    else
    {
      unint64_t v119 = v90;
      v237 = v116;
      if ((v91 & 0xC000000000000001) == 0)
      {
        if ((v118 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v118 < *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v120 = *(id *)(v91 + 8 * v118 + 32);
          goto LABEL_40;
        }
        __break(1u);
        goto LABEL_85;
      }
    }
    id v120 = (id)MEMORY[0x26122DAE0](v118, v91);
LABEL_40:
    unint64_t v121 = v120;
    id v122 = objc_msgSend(v120, sel_integerValue);

    MEMORY[0x270FA5388](v123);
    *((void *)&v217 - 2) = v122;
    *((void *)&v217 - 1) = inited;
    sub_26111EF18();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    id v124 = objc_msgSend(v246, sel_modelDescription);
    id v125 = objc_msgSend(v124, sel_inputDescriptionsByName);

    uint64_t v126 = sub_26111EB68();
    uint64_t v127 = *(void *)(v126 + 16);
    uint64_t v251 = 0;
    if (!v127)
    {
      swift_bridgeObjectRelease();
      uint64_t v143 = 0;
LABEL_50:
      id v129 = v243;
      uint64_t v144 = v244;
      uint64_t v145 = v242;
      uint64_t v146 = v248;
      uint64_t v147 = v241;
      uint64_t v130 = v245;
      goto LABEL_53;
    }
    unint64_t v128 = sub_26105D630(0xD000000000000017, 0x8000000261123F50);
    id v129 = v243;
    uint64_t v130 = v245;
    if ((v131 & 1) == 0) {
      goto LABEL_51;
    }
    id v132 = *(id *)(*(void *)(v126 + 56) + 8 * v128);
    swift_bridgeObjectRelease();
    id v133 = objc_msgSend(v132, sel_multiArrayConstraint);

    if (!v133)
    {
LABEL_52:
      uint64_t v143 = 0;
      uint64_t v144 = v244;
      uint64_t v145 = v242;
      uint64_t v146 = v248;
      uint64_t v147 = v241;
LABEL_53:
      uint64_t v252 = v130;
      uint64_t v253 = v147;
      uint64_t v254 = v146;
      uint64_t v255 = v145;
      uint64_t v256 = v144;
      id v257 = v129;
      char v258 = v260;
      uint64_t v148 = v237;
      uint64_t v149 = (uint64_t)v143;
      id v150 = v129;
      unint64_t v151 = v143;
      os_log_t v152 = v246;
      uint64_t v153 = v251;
      sub_2610DEB08(v234, v235, (uint64_t)v237, v149, (unint64_t)&v252, v246);
      uint64_t v251 = v153;
      if (v153)
      {

        uint64_t v154 = sub_26111EA48();
        uint64_t v155 = v232;
        sub_26111EA88();
        os_signpost_type_t v156 = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v157 = v231;
          sub_26111EAB8();
          swift_release();
          uint64_t v158 = v239;
          uint64_t v159 = v238;
          int v160 = (*(uint64_t (**)(char *, uint64_t))(v239 + 88))(v157, v238);
          unint64_t v161 = v227;
          if (v160 == *MEMORY[0x263F90238])
          {
            uint64_t v162 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v158 + 8))(v157, v159);
            uint64_t v162 = "";
          }
          int v194 = v221;
          uint64_t v195 = v249;
          v226(v221, v155, v249);
          uint64_t v196 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v196 = 0;
          os_signpost_id_t v197 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v154, v156, v197, "personalizeEmbeddingLayerObservation", v162, v196, 2u);
          MEMORY[0x26122E4F0](v196, -1, -1);

          uint64_t v198 = v222;
          v222(v155, v195);
          v198(v194, v195);
          swift_release();
          sub_261068AB0(v225, v161);
          return;
        }

        v222(v155, v249);
        swift_release();
        uint64_t v114 = v225;
        unint64_t v115 = v227;
      }
      else
      {
        uint64_t v163 = v147;
        id v243 = v151;
        id v164 = v219;
        sub_2610E2B70(v130, v163, v248);
        id v165 = v164;
        uint64_t v166 = v248;
        uint64_t v167 = v130;
        id v168 = v165;
        sub_2610E2B70(v167, v163, v248);
        double v169 = sub_26111EAC8();
        os_log_type_t v170 = sub_26111EF68();
        int v171 = v170;
        v247 = v169;
        unint64_t v172 = v150;
        if (os_log_type_enabled(v169, v170))
        {
          uint64_t v173 = swift_slowAlloc();
          unint64_t v174 = (char *)swift_slowAlloc();
          uint64_t v240 = v174;
          uint64_t v242 = swift_slowAlloc();
          v259[0] = v242;
          *(_DWORD *)uint64_t v173 = 134218498;
          uint64_t v252 = v235;
          LODWORD(v241) = v171;
          sub_26111F0D8();
          *(_WORD *)(v173 + 12) = 2112;
          uint64_t v236 = (char *)(v173 + 22);
          uint64_t v252 = (uint64_t)v168;
          id v175 = v168;
          sub_26111F0D8();
          *(void *)unint64_t v174 = v168;

          *(_WORD *)(v173 + 22) = 2080;
          uint64_t v236 = (char *)(v173 + 24);
          uint64_t v176 = v245;
          uint64_t v252 = v245;
          uint64_t v253 = v163;
          uint64_t v254 = v248;
          uint64_t v255 = v145;
          uint64_t v256 = v244;
          id v257 = v172;
          char v258 = v260;
          uint64_t v177 = v248;
          sub_2610E2B70(v245, v163, v248);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A9104A8);
          uint64_t v178 = sub_26111EC08();
          uint64_t v252 = sub_26105CFF8(v178, v179, v259);
          sub_26111F0D8();
          uint64_t v180 = v249;
          swift_bridgeObjectRelease();
          sub_2610E2BB8(v176, v163, v177);
          sub_2610E2BB8(v176, v163, v177);
          uint64_t v181 = v247;
          _os_log_impl(&dword_261042000, v247, (os_log_type_t)v241, "Personalizing embedding layer at position %ld for %@ with options %s", (uint8_t *)v173, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A90FD10);
          v182 = v240;
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v182, -1, -1);
          uint64_t v183 = v242;
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v183, -1, -1);
          MEMORY[0x26122E4F0](v173, -1, -1);
        }
        else
        {

          uint64_t v184 = v245;
          sub_2610E2BB8(v245, v163, v166);
          sub_2610E2BB8(v184, v163, v166);
          uint64_t v180 = v249;
        }
        uint64_t v185 = sub_26111EA48();
        uint64_t v186 = v218;
        sub_26111EA88();
        os_signpost_type_t v187 = sub_26111F008();
        char v188 = sub_26111F0B8();
        unint64_t v189 = v227;
        if (v188)
        {
          swift_retain();
          uint64_t v190 = v230;
          sub_26111EAB8();
          swift_release();
          uint64_t v191 = v239;
          uint64_t v192 = v238;
          if ((*(unsigned int (**)(char *, uint64_t))(v239 + 88))(v190, v238) == *MEMORY[0x263F90238])
          {
            id v193 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v191 + 8))(v190, v192);
            id v193 = "";
          }
          uint64_t v201 = v221;
          os_log_t v202 = v218;
          v226(v221, v218, v180);
          uint64_t v203 = v180;
          uint64_t v204 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v204 = 0;
          os_signpost_id_t v205 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v185, v187, v205, "personalizeEmbeddingLayerObservation", v193, v204, 2u);
          MEMORY[0x26122E4F0](v204, -1, -1);

          uint64_t v206 = v222;
          v222(v202, v203);
          v206(v201, v203);
        }
        else
        {

          v222(v186, v180);
        }
        swift_release();
        uint64_t v114 = v225;
        unint64_t v115 = v189;
      }
LABEL_32:
      sub_261068AB0(v114, v115);
      return;
    }
    id v134 = [v133 (SEL)0x265576E18];

    unint64_t v119 = sub_26111ED88();
    id v135 = sub_2610DFCF0();
    if (v136 >> 60 == 15)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
    uint64_t v95 = (uint64_t)v135;
    unint64_t v91 = v136;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v217;
    *(void *)(inited + 32) = v95;
    *(void *)(inited + 40) = v91;
    id v199 = objc_allocWithZone(MEMORY[0x263F00DA8]);
    sub_26106A668(v95, v91);
    uint64_t v200 = swift_bridgeObjectRetain();
    uint64_t v117 = (uint64_t)sub_2610A4C18(v200, 65568);
    if (!(v119 >> 62))
    {
      uint64_t v207 = *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v208 = v207 - 2;
      if (!__OFSUB__(v207, 2)) {
        goto LABEL_73;
      }
      goto LABEL_87;
    }
LABEL_85:
    swift_bridgeObjectRetain();
    uint64_t v216 = sub_26111F348();
    swift_bridgeObjectRelease();
    unint64_t v208 = v216 - 2;
    if (!__OFSUB__(v216, 2))
    {
LABEL_73:
      if ((v119 & 0xC000000000000001) == 0)
      {
        if ((v208 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v208 < *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v209 = *(id *)(v119 + 8 * v208 + 32);
LABEL_77:
          uint64_t v210 = v209;
          id v211 = objc_msgSend(v209, sel_integerValue);

          MEMORY[0x270FA5388](v212);
          *((void *)&v217 - 2) = v211;
          *((void *)&v217 - 1) = inited;
          uint64_t v143 = (void *)v117;
          sub_26111EF18();
          uint64_t v251 = 0;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v213 = sub_26111EAC8();
          os_log_type_t v214 = sub_26111EF38();
          if (os_log_type_enabled(v213, v214))
          {
            char v215 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v215 = 0;
            _os_log_impl(&dword_261042000, v213, v214, "Using provided torsoprint", v215, 2u);
            MEMORY[0x26122E4F0](v215, -1, -1);
          }
          sub_261068AB0(v95, v91);

          goto LABEL_50;
        }
        __break(1u);
        goto LABEL_91;
      }
LABEL_88:
      id v209 = (id)MEMORY[0x26122DAE0](v208, v119);
      goto LABEL_77;
    }
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    sub_261068AB0(v42, v43);
    goto LABEL_2;
  }
  uint64_t v56 = sub_26111EAC8();
  os_log_type_t v57 = sub_26111EF38();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v252 = v59;
    *(_DWORD *)uint64_t v58 = 136315138;
    LOBYTE(v259[0]) = 2;
    unint64_t v227 = v43;
    uint64_t v60 = sub_26111EC08();
    v259[0] = sub_26105CFF8(v60, v61, &v252);
    sub_26111F0D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v56, v57, "Skipping personalization for entity of type %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v59, -1, -1);
    MEMORY[0x26122E4F0](v58, -1, -1);
    sub_261068AB0(v42, v227);
  }
  else
  {
    sub_261068AB0(v42, v43);
  }
}

uint64_t sub_2610E4A08(void *a1)
{
  return sub_2610E4A78(a1) & 1;
}

unint64_t sub_2610E4A24()
{
  unint64_t result = qword_26A9104D0;
  if (!qword_26A9104D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9104D0);
  }
  return result;
}

uint64_t sub_2610E4A78(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_26111F408() & 1;
  }
}

unint64_t sub_2610E4AD4()
{
  unint64_t result = qword_26A9104D8;
  if (!qword_26A9104D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9104D8);
  }
  return result;
}

unint64_t sub_2610E4B2C()
{
  unint64_t result = qword_26A9104E0;
  if (!qword_26A9104E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9104E0);
  }
  return result;
}

unsigned char *_s18TokenEmbeddingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610E4C4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.TokenEmbeddingType()
{
  return &type metadata for VUGallery.TokenEmbeddingType;
}

unsigned char *_s33TokenEmbeddingPersonalizationTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2610E4D50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.TokenEmbeddingPersonalizationType()
{
  return &type metadata for VUGallery.TokenEmbeddingPersonalizationType;
}

uint64_t _s22PersonalizationOptionsVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s22PersonalizationOptionsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22PersonalizationOptionsVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v5;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22PersonalizationOptionsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s22PersonalizationOptionsVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s22PersonalizationOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGallery.PersonalizationOptions()
{
  return &type metadata for VUGallery.PersonalizationOptions;
}

uint64_t sub_2610E4FF8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2610E5030()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2610E5040(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2610DFE3C(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(char **)(v3 + 40), *(id **)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(uint64_t **)(v3 + 72), *(uint64_t **)(v3 + 80), *(void **)(v3 + 88));
}

void *sub_2610E5080(void *__src, uint64_t a2)
{
  if (__src) {
    return memmove(*(void **)(v2 + 16), __src, a2 - (void)__src);
  }
  __break(1u);
  return __src;
}

unsigned char *sub_2610E509C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (__n128 result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t *sub_2610E510C(uint64_t *a1)
{
  return a1;
}

void sub_2610E5148(uint64_t *a1@<X8>)
{
  sub_2610D76F8(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_2610E5174()
{
  return sub_2610D8C38(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void ***)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void ***)(v0 + 64));
}

void sub_2610E519C(uint64_t a1@<X8>)
{
  sub_2610F3774(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_2610E51C0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2610E51D0()
{
}

uint64_t sub_2610E51D8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610E51EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2610E2628(a1, a2, a3);
}

uint64_t sub_2610E5208@<X0>(void *a1@<X8>)
{
  return sub_26106A56C(a1);
}

unint64_t MLMultiArray.data.getter()
{
  unint64_t result = (unint64_t)objc_msgSend(v0, sel_count);
  if ((result - 0x2000000000000000) >> 62 == 3)
  {
    v3[0] = sub_2610E59E8(4 * result);
    v3[1] = v2;
    sub_2610E5578(v3, v0);
    return v3[0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2610E5298(uint64_t a1, int a2, id a3, uint64_t a4, uint64_t a5)
{
  id v9 = objc_msgSend(a3, sel_shape);
  sub_2610A4E0C();
  uint64_t v10 = sub_26111ED88();

  if ((v10 & 0xC000000000000001) != 0) {
    goto LABEL_33;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v10 + 32); ; id i = (id)MEMORY[0x26122DAE0](0, v10))
    {
      uint64_t v12 = i;
      swift_bridgeObjectRelease();
      uint64_t v10 = (uint64_t)objc_msgSend(v12, sel_integerValue);

      if (v10 < 0) {
        break;
      }
      if (!v10) {
        return;
      }
      uint64_t v13 = 0;
      uint64_t v25 = a5;
      while (v10 != v13)
      {
        id v14 = objc_msgSend(a3, sel_shape);
        uint64_t v15 = sub_26111ED88();

        if ((v15 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = (id *)MEMORY[0x26122DAE0](1, v15);
        }
        else
        {
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_28;
          }
          uint64_t v16 = (id *)*(id *)(v15 + 40);
        }
        a5 = (uint64_t)v16;
        swift_bridgeObjectRelease();
        uint64_t v17 = (uint64_t)objc_msgSend((id)a5, sel_integerValue);

        int64_t v18 = v17 * a4;
        if ((unsigned __int128)(v17 * (__int128)a4) >> 64 != (v17 * a4) >> 63) {
          goto LABEL_27;
        }
        if (!a1) {
          goto LABEL_36;
        }
        id v19 = objc_msgSend(a3, sel_strides);
        a5 = sub_26111ED88();

        if ((a5 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x26122DAE0](0, a5);
        }
        else
        {
          if (!*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_30;
          }
          id v20 = *(id *)(a5 + 32);
        }
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        a5 = (uint64_t)objc_msgSend(v21, sel_integerValue);

        uint64_t v22 = v13 * a5;
        if ((unsigned __int128)(v13 * (__int128)a5) >> 64 != (v13 * a5) >> 63) {
          goto LABEL_29;
        }
        uint64_t v23 = v22 * a4;
        if ((unsigned __int128)(v22 * (__int128)a4) >> 64 != (v22 * a4) >> 63) {
          goto LABEL_31;
        }
        if (!v25) {
          goto LABEL_37;
        }
        int64_t v24 = v13 * v18;
        if ((unsigned __int128)(v13 * (__int128)v18) >> 64 != (v13 * v18) >> 63) {
          goto LABEL_32;
        }
        if (v18 < 0) {
          goto LABEL_38;
        }
        ++v13;
        memmove((void *)(v25 + v24), (const void *)(a1 + v23), v18);
        if (v10 == v13) {
          return;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      ;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  sub_26111F398();
  __break(1u);
}

void sub_2610E5578(void *a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      id v6 = a2;
      sub_2610E58E0((int *)&v11, v6);

      uint64_t v7 = *((void *)&v11 + 1) | 0x4000000000000000;
      *a1 = v11;
      a1[1] = v7;
      return;
    case 2uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_26111E628();
      uint64_t v8 = *(void *)(v11 + 16);
      uint64_t v9 = *(void *)(v11 + 24);
      if (!sub_26111E4A8())
      {
        __break(1u);
        JUMPOUT(0x2610E58D0);
      }
      if (__OFSUB__(v8, sub_26111E4D8()))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      if (__OFSUB__(v9, v8)) {
        goto LABEL_12;
      }
      uint64_t v10 = sub_26111E4C8();
      MEMORY[0x270FA5388](v10);
      sub_26111EF08();

      unint64_t v5 = *((void *)&v11 + 1) | 0x8000000000000000;
      *a1 = v11;
LABEL_8:
      a1[1] = v5;
      return;
    case 3uLL:
      *(void *)((char *)&v11 + 7) = 0;
      *(void *)&long long v11 = 0;
      MEMORY[0x270FA5388](a1);
      sub_26111EF08();

      return;
    default:
      *(void *)&long long v11 = *a1;
      WORD4(v11) = v2;
      BYTE10(v11) = BYTE2(v2);
      BYTE11(v11) = BYTE3(v2);
      BYTE12(v11) = BYTE4(v2);
      BYTE13(v11) = BYTE5(v2);
      BYTE14(v11) = BYTE6(v2);
      MEMORY[0x270FA5388](a1);
      sub_26111EF08();

      unint64_t v5 = DWORD2(v11) | ((unint64_t)BYTE12(v11) << 32) | ((unint64_t)BYTE13(v11) << 40) | ((unint64_t)BYTE14(v11) << 48);
      *a1 = v11;
      goto LABEL_8;
  }
}

void sub_2610E58E0(int *a1, void *a2)
{
  sub_26111E638();
  uint64_t v4 = *a1;
  if (a1[1] < (int)v4)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (sub_26111E4A8())
  {
    if (!__OFSUB__(v4, sub_26111E4D8()))
    {
      uint64_t v5 = sub_26111E4C8();
      MEMORY[0x270FA5388](v5);
      sub_26111EF08();

      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2610E59E8(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_26111E4F8();
      swift_allocObject();
      sub_26111E4B8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_26111E648();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void sub_2610E5A88(uint64_t a1, int a2)
{
  sub_2610E5298(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_2610E5AA8(uint64_t a1, int a2)
{
}

uint64_t sub_2610E5AC0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  unint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_26111EEB8();
  if (!v20) {
    return sub_26111EDC8();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_26111F2F8();
  uint64_t v35 = sub_26111F308();
  sub_26111F2A8();
  id v41 = v19;
  uint64_t result = sub_26111EEA8();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    unint64_t v37 = v23;
    int64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_26111EED8();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_26111F2E8();
      sub_26111EEC8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t sub_2610E5EBC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_26108BE0C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2610F8F54((uint64_t)v6);
  return sub_26111F298();
}

void sub_2610E5F38(uint64_t a1)
{
  uint64_t v2 = a1;
  unint64_t v3 = a1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters;
  swift_beginAccess();
  *(void *)unint64_t v3 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v5 = (void *)sub_26111EBC8();
  id v6 = (char *)objc_msgSend(v4, sel_initWithEntityName_, v5);

  uint64_t v7 = *(void **)(v2 + 16);
  type metadata accessor for VUIndexSubset();
  id v8 = v7;
  uint64_t v9 = sub_26111F048();
  if (v1)
  {

    return;
  }
  unint64_t v10 = v9;

  if (v10 >> 62) {
    goto LABEL_65;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v48 = (char *)v11;
    os_log_type_t v50 = (void **)v3;
    char v47 = v6;
    if (!v11) {
      break;
    }
    uint64_t v2 = 4;
    while (1)
    {
      id v12 = (v10 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x26122DAE0](v2 - 4, v10)
          : *(id *)(v10 + 8 * v2);
      unint64_t v3 = (unint64_t)v12;
      id v6 = (char *)(v2 - 3);
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      unsigned int v13 = objc_msgSend(v12, sel_type);
      if ((v13 & 0x80000000) != 0) {
        goto LABEL_71;
      }
      unsigned __int8 v14 = v13;
      if (v13 >= 0x100) {
        goto LABEL_71;
      }
      id v15 = objc_msgSend((id)v3, sel_embeddingRevision);
      id v16 = objc_msgSend((id)v3, sel_contextualEmbeddingRevision);
      type metadata accessor for VUIndexParameters();
      swift_allocObject();
      uint64_t v17 = sub_261089B10(v14, (unint64_t)v15, 0, (uint64_t)v16, 0, 0);
      swift_beginAccess();
      swift_retain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = (char *)*v50;
      *os_log_type_t v50 = (void *)0x8000000000000000;
      sub_26107F768(v17, v14, isUniquelyReferenced_nonNull_native);
      *os_log_type_t v50 = v54;
      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_release_n();
      ++v2;
      if (v6 == v48) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = (uint64_t)&off_265576000;
  id v20 = objc_msgSend(*(id *)(v2 + 16), sel_persistentStoreCoordinator);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, sel_persistentStores);

    sub_261071924(0, &qword_26B40AD80);
    unint64_t v23 = sub_26111ED88();

    if (v23 >> 62) {
      goto LABEL_67;
    }
    unint64_t v10 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
    {
LABEL_15:

      swift_bridgeObjectRelease();
      return;
    }
LABEL_19:
    if ((v23 & 0xC000000000000001) != 0)
    {
      id v24 = (id)MEMORY[0x26122DAE0](0, v23);
      goto LABEL_22;
    }
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v24 = *(id *)(v23 + 32);
LABEL_22:
      uint64_t v45 = v24;
      swift_bridgeObjectRelease();
      id v25 = [*(id *)(v2 + 16) *(SEL *)(v19 + 648)];
      if (v25
        && (uint64_t v26 = v25,
            unint64_t v10 = (unint64_t)objc_msgSend(v25, sel_metadataForPersistentStore_, v45),
            v26,
            unint64_t v23 = sub_26111EB68(),
            (id)v10,
            v23))
      {
        if (*(void *)(v23 + 16) && (unint64_t v27 = sub_26105D630(0xD000000000000010, 0x80000002611243E0), (v28 & 1) != 0))
        {
          sub_26106A31C(*(void *)(v23 + 56) + 32 * v27, (uint64_t)&v52);
        }
        else
        {
          long long v52 = 0u;
          long long v53 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v53 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AB78);
          if (swift_dynamicCast())
          {
            id v6 = v54;
            goto LABEL_31;
          }
LABEL_30:
          id v6 = (char *)sub_2610489FC(MEMORY[0x263F8EE78]);
LABEL_31:
          uint64_t v19 = 0;
          unint64_t v49 = v6 + 64;
          uint64_t v29 = 1 << v6[32];
          uint64_t v30 = -1;
          if (v29 < 64) {
            uint64_t v30 = ~(-1 << v29);
          }
          unint64_t v3 = v30 & *((void *)v6 + 8);
          int64_t v51 = (unint64_t)(v29 + 63) >> 6;
          os_signpost_type_t v46 = v6;
          while (1)
          {
            if (v3)
            {
              unint64_t v31 = __clz(__rbit64(v3));
              v3 &= v3 - 1;
              unint64_t v32 = v31 | (v19 << 6);
            }
            else
            {
              if (__OFADD__(v19++, 1)) {
                goto LABEL_64;
              }
              if (v19 >= v51)
              {
LABEL_56:

                swift_release();
                return;
              }
              unint64_t v34 = *(void *)&v49[8 * v19];
              if (!v34)
              {
                uint64_t v35 = v19 + 1;
                if (v19 + 1 >= v51) {
                  goto LABEL_56;
                }
                unint64_t v34 = *(void *)&v49[8 * v35];
                if (!v34)
                {
                  uint64_t v35 = v19 + 2;
                  if (v19 + 2 >= v51) {
                    goto LABEL_56;
                  }
                  unint64_t v34 = *(void *)&v49[8 * v35];
                  if (!v34)
                  {
                    uint64_t v35 = v19 + 3;
                    if (v19 + 3 >= v51) {
                      goto LABEL_56;
                    }
                    unint64_t v34 = *(void *)&v49[8 * v35];
                    if (!v34)
                    {
                      while (1)
                      {
                        uint64_t v19 = v35 + 1;
                        if (__OFADD__(v35, 1)) {
                          break;
                        }
                        if (v19 >= v51) {
                          goto LABEL_56;
                        }
                        unint64_t v34 = *(void *)&v49[8 * v19];
                        ++v35;
                        if (v34) {
                          goto LABEL_47;
                        }
                      }
                      __break(1u);
LABEL_67:
                      swift_bridgeObjectRetain();
                      unint64_t v10 = sub_26111F348();
                      swift_bridgeObjectRelease();
                      if (!v10) {
                        goto LABEL_15;
                      }
                      goto LABEL_19;
                    }
                  }
                }
                uint64_t v19 = v35;
              }
LABEL_47:
              unint64_t v3 = (v34 - 1) & v34;
              unint64_t v32 = __clz(__rbit64(v34)) + (v19 << 6);
            }
            id v36 = (uint64_t *)(*((void *)v6 + 6) + 16 * v32);
            uint64_t v37 = *v36;
            unint64_t v23 = v36[1];
            unint64_t v38 = *(void **)(*((void *)v6 + 7) + 8 * v32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __int16 v39 = sub_2610E679C(v37, v23);
            if ((v39 & 0x100) != 0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v40 = v38[2];
              if (!v40) {
                goto LABEL_62;
              }
              if (v40 == 1) {
                goto LABEL_63;
              }
              unsigned __int8 v41 = v39;
              unint64_t v42 = v38[4];
              uint64_t v43 = v38[5];
              type metadata accessor for VUIndexParameters();
              swift_allocObject();
              unint64_t v10 = sub_261089B10(v41, v42, 0, v43, 0, 0);
              swift_beginAccess();
              swift_retain_n();
              char v44 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v54 = (char *)*v50;
              *os_log_type_t v50 = (void *)0x8000000000000000;
              unint64_t v23 = (unint64_t)&v54;
              sub_26107F768(v10, v41, v44);
              *os_log_type_t v50 = v54;
              swift_bridgeObjectRelease();
              swift_endAccess();
              swift_bridgeObjectRetain();
              sub_2610FBEC0(v41, v2, v38);
              swift_release_n();
              swift_bridgeObjectRelease_n();
              id v6 = v46;
            }
          }
        }
      }
      else
      {
        long long v52 = 0u;
        long long v53 = 0u;
      }
      sub_2610718C8((uint64_t)&v52, (uint64_t *)&unk_26B40ADF8);
      goto LABEL_30;
    }
    __break(1u);
LABEL_71:
    sub_26111F328();
    __break(1u);
  }
  else
  {
  }
}

uint64_t sub_2610E679C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v17 = 0;
    int v8 = 1;
    return v17 | (v8 << 8);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        id v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        id v6 = (unsigned __int8 *)sub_26111F278();
      }
      unsigned int v7 = sub_2610FB0E8(v6, v4, 10);
      int v8 = (v7 >> 8) & 1;
      goto LABEL_38;
    }
    v21[0] = a1;
    v21[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    char v9 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LOBYTE(v7) = BYTE1(a1) - 48;
          if ((BYTE1(a1) - 48) <= 9u)
          {
            uint64_t v13 = v3 - 2;
            if (v13)
            {
              unsigned __int8 v14 = (unsigned __int8 *)v21 + 2;
              while (1)
              {
                unsigned int v15 = *v14 - 48;
                if (v15 > 9) {
                  goto LABEL_35;
                }
                if (((10 * v7) & 0xF00) != 0) {
                  goto LABEL_35;
                }
                unsigned int v7 = (10 * v7) + v15;
                if ((v7 >> 8)) {
                  goto LABEL_35;
                }
                int v8 = 0;
                ++v14;
                if (!--v13) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LOBYTE(v7) = a1 - 48;
          if ((a1 - 48) <= 9u)
          {
            uint64_t v16 = v3 - 1;
            if (v16)
            {
              uint64_t v19 = (unsigned __int8 *)v21 + 1;
              while (1)
              {
                unsigned int v20 = *v19 - 48;
                if (v20 > 9) {
                  goto LABEL_35;
                }
                if (((10 * v7) & 0xF00) != 0) {
                  goto LABEL_35;
                }
                unsigned int v7 = (10 * v7) + v20;
                if ((v7 >> 8)) {
                  goto LABEL_35;
                }
                int v8 = 0;
                ++v19;
                if (!--v16) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          char v9 = 0;
          unsigned int v7 = -(BYTE1(a1) - 48);
          if ((v7 & 0xFFFFFF00) == 0)
          {
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v21 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_35;
                }
                if (((10 * v7) & 0xF00) != 0) {
                  goto LABEL_35;
                }
                unsigned int v7 = (10 * v7) - v12;
                if ((v7 & 0xFFFFFF00) != 0) {
                  goto LABEL_35;
                }
                int v8 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_38;
                }
              }
            }
LABEL_37:
            int v8 = 0;
            goto LABEL_38;
          }
LABEL_54:
          int v8 = 1;
          LOBYTE(v7) = v9;
          goto LABEL_38;
        }
LABEL_35:
        LOBYTE(v7) = 0;
        int v8 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
  unsigned int v7 = sub_2610FAD88(a1, a2, 10);
  swift_bridgeObjectRelease();
  int v8 = (v7 >> 8) & 1;
LABEL_39:
  if (v8) {
    unsigned __int8 v17 = 0;
  }
  else {
    unsigned __int8 v17 = v7;
  }
  return v17 | (v8 << 8);
}

void sub_2610E6A10(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (!v4) {
    return;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_persistentStores);

  sub_261071924(0, &qword_26B40AD80);
  unint64_t v7 = sub_26111ED88();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x26122DAE0](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  char v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_metadataForPersistentStore_, v9);

    uint64_t v13 = sub_26111EB68();
    *(void *)&long long v17 = 0x2E7865646E495556;
    *((void *)&v17 + 1) = 0xE800000000000000;
    sub_26111EC88();
    if (*(void *)(v13 + 16) && (unint64_t v14 = sub_26105D630(v17, *((uint64_t *)&v17 + 1)), (v15 & 1) != 0))
    {
      sub_26106A31C(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {

    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_2610FBB44((uint64_t)&v17, a2);
}

void sub_2610E6C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (!v6) {
    return;
  }
  unint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_persistentStores);

  sub_261071924(0, &qword_26B40AD80);
  unint64_t v9 = sub_26111ED88();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_4:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x26122DAE0](0, v9);
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v10 = *(id *)(v9 + 32);
  }
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  uint64_t v13 = v12;
  if (v12)
  {
    id v14 = objc_msgSend(v12, sel_metadataForPersistentStore_, v11);

    uint64_t v15 = sub_26111EB68();
    *(void *)&v21[0] = 0x2E7865646E495556;
    *((void *)&v21[0] + 1) = 0xE800000000000000;
    sub_26111EC88();
    sub_26106A31C(a4, (uint64_t)v21);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_26107EC80(v21, 0x2E7865646E495556, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = (void *)v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v17 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (v17)
  {
    long long v18 = v17;
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)sub_26111EB48();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = 0;
    }
    objc_msgSend(v18, sel_setMetadata_forPersistentStore_, v19, v11);
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2610E6F44(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = 0;
  unsigned __int8 v19 = 1;
  id v8 = *(void **)(v4 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(unsigned char *)(v9 + 32) = a3 & 1;
  *(void *)(v9 + 40) = &v18;
  *(void *)(v9 + 48) = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_2610D2E80;
  *(void *)(v10 + 24) = v9;
  v17[4] = sub_2610D3174;
  v17[5] = v10;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = sub_26105A22C;
  v17[3] = &block_descriptor_161;
  uint64_t v11 = _Block_copy(v17);
  id v12 = a1;
  id v13 = v8;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v18;
    int v16 = v19;
    swift_release();
    if (v16) {
      return 0;
    }
    else {
      return v15;
    }
  }
  return result;
}

void sub_2610E70F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v10 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v11 = (void *)sub_26111EBC8();
  id v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  if (a1) {
    objc_msgSend(v12, sel_setPredicate_, a1);
  }
  if ((a3 & 1) == 0) {
    objc_msgSend(v12, sel_setFetchLimit_, a2);
  }
  id v13 = *(void **)(a5 + 16);
  type metadata accessor for VUIndexObservation();
  id v14 = v13;
  uint64_t v15 = sub_26111F038();

  *(void *)a4 = v15;
  *(unsigned char *)(a4 + 8) = 0;
}

BOOL sub_2610E7214(char a1)
{
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8E778];
  *(_OWORD *)(v2 + 16) = xmmword_261120090;
  uint64_t v4 = MEMORY[0x263F8E7C0];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(unsigned char *)(v2 + 32) = a1;
  uint64_t v5 = (void *)sub_26111EEF8();
  uint64_t v6 = sub_2610E6F44(v5, 0, 1);

  return v6 != 0;
}

BOOL sub_2610E72E0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2611200D0;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v8 + 16) = xmmword_261120090;
  uint64_t v10 = MEMORY[0x263F8D750];
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = a1;
  *(void *)(v7 + 32) = sub_26111EEF8();
  sub_26111EDA8();
  if ((a4 & 1) == 0)
  {
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_261120090;
    *(void *)(v11 + 56) = v9;
    *(void *)(v11 + 64) = v10;
    *(void *)(v11 + 32) = a3;
    sub_26111EEF8();
    MEMORY[0x26122D5E0]();
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_26111EDB8();
    }
    sub_26111EDE8();
    sub_26111EDA8();
  }
  id v12 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v12);

  uint64_t v14 = sub_2610E6F44(v13, 1, 0);
  return v14 > 0;
}

uint64_t sub_2610E7510(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_261120090;
  uint64_t v5 = MEMORY[0x263F8D750];
  *(void *)(v4 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = a1;
  uint64_t v6 = (void *)sub_26111EEF8();
  uint64_t v17 = MEMORY[0x263F8EE80];
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v2;
  v8[4] = &v17;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_261071134;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_2610D3174;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_151;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v7;
  id v12 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_performBlockAndWait_, v10);

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v17;

    swift_release();
    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

void sub_2610E773C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v5 = (void *)sub_26111EBC8();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  uint64_t v7 = (void *)sub_26111EBC8();
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_expressionForKeyPath_, v7);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF248]), sel_init);
  id v11 = (void *)sub_26111EBC8();
  objc_msgSend(v10, sel_setName_, v11);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_261120090;
  *(void *)(v12 + 56) = sub_261071924(0, &qword_26B40A638);
  *(void *)(v12 + 32) = v9;
  id v53 = v9;
  id v13 = (void *)sub_26111EBC8();
  uint64_t v14 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v8, sel_expressionForFunction_arguments_, v13, v14);

  objc_msgSend(v10, sel_setExpression_, v15);
  objc_msgSend(v10, sel_setExpressionResultType_, 300);
  objc_msgSend(v6, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2611200D0;
  id v17 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v18 = (void *)sub_26111EBC8();
  id v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

  unint64_t v20 = 0x6C6562616CLL;
  *(void *)(v16 + 32) = v19;
  v59[0] = v16;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  uint64_t v21 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v21);

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_261120090;
  uint64_t v23 = MEMORY[0x263F8D310];
  *(void *)(v22 + 56) = MEMORY[0x263F8D310];
  *(void *)(v22 + 32) = 0x6C6562616CLL;
  *(void *)(v22 + 40) = 0xE500000000000000;
  id v24 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToGroupBy_, v24);

  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2611200A0;
  *(void *)(v25 + 56) = v23;
  *(void *)(v25 + 32) = 0x6C6562616CLL;
  *(void *)(v25 + 40) = 0xE500000000000000;
  *(void *)(v25 + 88) = sub_261071924(0, &qword_26B40A640);
  *(void *)(v25 + 64) = v10;
  uint64_t v26 = v6;
  id v27 = v10;
  char v28 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v28);

  if (a1) {
    objc_msgSend(v6, sel_setPredicate_, a1);
  }
  uint64_t v29 = *(void **)(a2 + 16);
  sub_261071924(0, &qword_26B40A630);
  id v30 = v29;
  unint64_t v31 = sub_26111F048();

  if (v31 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v32)
  {
    int64_t v51 = v27;
    long long v52 = v26;
    if (v32 >= 1)
    {
      uint64_t v33 = 0;
      while (1)
      {
        id v34 = (v31 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x26122DAE0](v33, v31)
            : *(id *)(v31 + 8 * v33 + 32);
        uint64_t v26 = v34;
        *(void *)&long long v57 = v20;
        *((void *)&v57 + 1) = 0xE500000000000000;
        id v35 = objc_msgSend(v34, sel___swift_objectForKeyedSubscript_, sub_26111F428());
        swift_unknownObjectRelease();
        if (v35)
        {
          sub_26111F108();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v57 = 0u;
          long long v58 = 0u;
        }
        sub_261071274((uint64_t)&v57, (uint64_t)v59, (uint64_t *)&unk_26B40ADF8);
        if (v60)
        {
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_29;
          }
          *(void *)&long long v57 = 0x746E756F63;
          *((void *)&v57 + 1) = 0xE500000000000000;
          id v36 = objc_msgSend(v26, sel___swift_objectForKeyedSubscript_, sub_26111F428(), v51);
          swift_unknownObjectRelease();
          if (v36)
          {
            sub_26111F108();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v57 = 0u;
            long long v58 = 0u;
          }
          sub_261071274((uint64_t)&v57, (uint64_t)v59, (uint64_t *)&unk_26B40ADF8);
          if (v60) {
            break;
          }
        }

        sub_2610718C8((uint64_t)v59, (uint64_t *)&unk_26B40ADF8);
LABEL_9:
        if (v32 == ++v33)
        {

          swift_bridgeObjectRelease();
          uint64_t v26 = v52;
          goto LABEL_38;
        }
      }
      if (swift_dynamicCast())
      {
        id v27 = a3;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v59[0] = *a3;
        uint64_t v38 = v59[0];
        *a3 = 0x8000000000000000;
        unint64_t v20 = sub_26105D6EC(v56);
        uint64_t v40 = *(void *)(v38 + 16);
        BOOL v41 = (v39 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41))
        {
          __break(1u);
          goto LABEL_40;
        }
        char v43 = v39;
        if (*(void *)(v38 + 24) >= v42)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            os_signpost_type_t v46 = (void *)v59[0];
            if ((v39 & 1) == 0) {
              goto LABEL_27;
            }
          }
          else
          {
            sub_26107B9C8();
            os_signpost_type_t v46 = (void *)v59[0];
            if ((v43 & 1) == 0) {
              goto LABEL_27;
            }
          }
        }
        else
        {
          sub_261077078(v42, isUniquelyReferenced_nonNull_native);
          unint64_t v44 = sub_26105D6EC(v56);
          if ((v43 & 1) != (v45 & 1)) {
            goto LABEL_43;
          }
          unint64_t v20 = v44;
          os_signpost_type_t v46 = (void *)v59[0];
          if ((v43 & 1) == 0)
          {
LABEL_27:
            v46[(v20 >> 6) + 8] |= 1 << v20;
            uint64_t v47 = 8 * v20;
            *(void *)(v46[6] + v47) = v56;
            *(void *)(v46[7] + v47) = v56;
            uint64_t v48 = v46[2];
            BOOL v49 = __OFADD__(v48, 1);
            uint64_t v50 = v48 + 1;
            if (v49)
            {
              __break(1u);
              goto LABEL_42;
            }
            v46[2] = v50;
            goto LABEL_33;
          }
        }
        *(void *)(v46[7] + 8 * v20) = v56;
LABEL_33:
        *a3 = v46;

        swift_bridgeObjectRelease();
        unint64_t v20 = 0x6C6562616CLL;
        goto LABEL_9;
      }
LABEL_29:

      goto LABEL_9;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    sub_26111F448();
    __break(1u);
  }
  else
  {

    swift_bridgeObjectRelease();
LABEL_38:
  }
}

uint64_t sub_2610E7F44(void *a1)
{
  uint64_t v14 = 0;
  unsigned __int8 v15 = 1;
  uint64_t v3 = *(void **)(v1 + 16);
  id v4 = (void *)swift_allocObject();
  v4[2] = a1;
  v4[3] = &v14;
  v4[4] = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_2610FBD14;
  *(void *)(v5 + 24) = v4;
  v13[4] = sub_2610D3174;
  v13[5] = v5;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_26105A22C;
  v13[3] = &block_descriptor_141;
  id v6 = _Block_copy(v13);
  id v7 = a1;
  id v8 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v14;
    int v12 = v15;
    swift_release();
    if (v12) {
      return 0;
    }
    else {
      return v11;
    }
  }
  return result;
}

void sub_2610E80E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if (a1) {
    objc_msgSend(v8, sel_setPredicate_, a1);
  }
  id v9 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexTag();
  id v10 = v9;
  uint64_t v11 = sub_26111F038();

  *(void *)a2 = v11;
  *(unsigned char *)(a2 + 8) = 0;
}

uint64_t sub_2610E81DC()
{
  uint64_t v11 = 0;
  unsigned __int8 v12 = 1;
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v11;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_2610FBCBC;
  *(void *)(v3 + 24) = v2;
  v10[4] = sub_2610D3174;
  v10[5] = v3;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_26105A22C;
  v10[3] = &block_descriptor_131;
  id v4 = _Block_copy(v10);
  id v5 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v4);

  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v11;
    int v9 = v12;
    swift_release();
    if (v9) {
      return 0;
    }
    else {
      return v8;
    }
  }
  return result;
}

void sub_2610E8364(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v5 = (void *)sub_26111EBC8();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_261071924(0, &qword_26B40ABC8);
  id v7 = (void *)sub_26111EEF8();
  objc_msgSend(v6, sel_setPredicate_, v7);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8D310];
  *(_OWORD *)(v8 + 16) = xmmword_261120090;
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 32) = 0x6C6562616CLL;
  *(void *)(v8 + 40) = 0xE500000000000000;
  id v10 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPropertiesToFetch_, v10);

  objc_msgSend(v6, sel_setReturnsDistinctResults_, 1);
  objc_msgSend(v6, sel_setResultType_, 2);
  uint64_t v11 = *(void **)(a2 + 16);
  sub_261071924(0, &qword_26B40A630);
  id v12 = v11;
  unint64_t v13 = sub_26111F048();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_26111F348();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_2610E85B8@<X0>(__int16 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v5 = (uint64_t)v4;
  unint64_t v61 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_26111E778();
  uint64_t v62 = *(void *)(v67 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v67);
  uint64_t v74 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v71 = (char *)&v59 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v70 = (char *)&v59 - v16;
  id v17 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v18 = (void *)sub_26111EBC8();
  id v19 = objc_msgSend(v17, sel_initWithEntityName_, v18);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v20 = swift_allocObject();
  long long v77 = xmmword_2611200A0;
  *(_OWORD *)(v20 + 16) = xmmword_2611200A0;
  uint64_t v21 = MEMORY[0x263F8E538];
  *(void *)(v20 + 56) = MEMORY[0x263F8E4F0];
  *(void *)(v20 + 64) = v21;
  *(_WORD *)(v20 + 32) = a1;
  uint64_t v22 = MEMORY[0x263F8D750];
  *(void *)(v20 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v20 + 104) = v22;
  *(void *)(v20 + 72) = a2;
  uint64_t v23 = (void *)sub_26111EEF8();
  objc_msgSend(v19, sel_setPredicate_, v23);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v77;
  uint64_t v25 = MEMORY[0x263F8D310];
  *(void *)(v24 + 32) = 0x7465737361;
  *(void *)(v24 + 40) = 0xE500000000000000;
  *(void *)(v24 + 88) = v25;
  *(void *)(v24 + 56) = v25;
  *(void *)(v24 + 64) = 0x696669746E656469;
  *(void *)(v24 + 72) = 0xEA00000000007265;
  uint64_t v26 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setPropertiesToFetch_, v26);

  id v27 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  id v28 = v27;
  id v60 = v19;
  uint64_t v29 = sub_26111F048();
  if (v4)
  {

    uint64_t v5 = 0;
LABEL_3:
    unint64_t v30 = MEMORY[0x263F8EE78];
    goto LABEL_5;
  }
  unint64_t v31 = (uint64_t *)v29;

  unint64_t v30 = (unint64_t)v31;
  if (!v31) {
    goto LABEL_3;
  }
LABEL_5:
  unint64_t v32 = v67;
  if (v30 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33)
    {
LABEL_7:
      uint64_t v59 = v5;
      unint64_t v72 = 0;
      uint64_t v73 = (void (**)(uint64_t, char *, unint64_t))(v62 + 32);
      unint64_t v76 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v62 + 56);
      *(void *)&long long v77 = v30 & 0xC000000000000001;
      unint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v62 + 48);
      unint64_t v66 = (void (**)(uint64_t, char *, unint64_t))(v62 + 16);
      uint64_t v63 = (void (**)(uint64_t, uint64_t))(v62 + 8);
      id v34 = (uint64_t *)MEMORY[0x263F8EE80];
      uint64_t v35 = 4;
      unint64_t v64 = (uint64_t *)v30;
      uint64_t v75 = v33;
      while (1)
      {
        uint64_t v5 = v35 - 4;
        if ((void)v77) {
          id v37 = (id)MEMORY[0x26122DAE0](v35 - 4, v30);
        }
        else {
          id v37 = *(id *)(v30 + 8 * v35);
        }
        uint64_t v38 = v37;
        uint64_t v39 = v35 - 3;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        id v40 = objc_msgSend(v37, sel_asset);
        if (!v40) {
          break;
        }
        BOOL v41 = v40;
        uint64_t v42 = v71;
        sub_26111E768();

        char v43 = *v73;
        (*v73)(isUniquelyReferenced_nonNull_native, v42, v32);
        (*v76)(isUniquelyReferenced_nonNull_native, 0, 1, v32);
        if ((*v69)(isUniquelyReferenced_nonNull_native, 1, v32) == 1) {
          goto LABEL_9;
        }
        unint64_t v44 = v70;
        uint64_t v45 = isUniquelyReferenced_nonNull_native;
        v43((uint64_t)v70, (char *)isUniquelyReferenced_nonNull_native, v32);
        uint64_t v5 = (uint64_t)v74;
        uint64_t v65 = *v66;
        v65((uint64_t)v74, v44, v32);
        id v68 = objc_msgSend(v38, sel_identifier);
        sub_2610C18DC((uint64_t)v72);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v78 = v34;
        unint64_t v30 = (unint64_t)v34;
        unint64_t v32 = sub_26105D7C4(v5);
        uint64_t v47 = v34[2];
        BOOL v48 = (v46 & 1) == 0;
        uint64_t v49 = v47 + v48;
        if (__OFADD__(v47, v48)) {
          goto LABEL_30;
        }
        uint64_t v5 = v46;
        if (v34[3] >= v49)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v30 = (unint64_t)&v78;
            sub_26107BD04();
          }
        }
        else
        {
          sub_2610775EC(v49, isUniquelyReferenced_nonNull_native);
          unint64_t v30 = (unint64_t)v78;
          unint64_t v50 = sub_26105D7C4((uint64_t)v74);
          if ((v5 & 1) != (v51 & 1))
          {
            uint64_t result = sub_26111F448();
            __break(1u);
            return result;
          }
          unint64_t v32 = v50;
        }
        uint64_t isUniquelyReferenced_nonNull_native = v45;
        id v34 = v78;
        swift_bridgeObjectRelease();
        uint64_t v36 = v75;
        if (v5)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v34[(v32 >> 6) + 8] |= 1 << v32;
          unint64_t v52 = v34[6] + *(void *)(v62 + 72) * v32;
          swift_bridgeObjectRetain();
          v65(v52, v74, v67);
          *(void *)(v34[7] + 8 * v32) = MEMORY[0x263F8EE88];
          uint64_t v53 = v34[2];
          BOOL v54 = __OFADD__(v53, 1);
          uint64_t v55 = v53 + 1;
          if (v54) {
            goto LABEL_31;
          }
          v34[2] = v55;
        }
        swift_bridgeObjectRelease();
        sub_26105E524((uint64_t *)&v78, (uint64_t)v68);

        uint64_t v56 = *v63;
        unint64_t v32 = v67;
        (*v63)((uint64_t)v74, v67);
        v56((uint64_t)v70, v32);
        unint64_t v72 = sub_2610E8D1C;
        unint64_t v30 = (unint64_t)v64;
LABEL_10:
        ++v35;
        if (v39 == v36)
        {

          swift_bridgeObjectRelease();
          long long v57 = v72;
          goto LABEL_34;
        }
      }
      (*v76)(isUniquelyReferenced_nonNull_native, 1, 1, v32);
LABEL_9:

      sub_2610718C8(isUniquelyReferenced_nonNull_native, &qword_26B40AC70);
      uint64_t v36 = v75;
      goto LABEL_10;
    }
  }

  swift_bridgeObjectRelease();
  long long v57 = 0;
  id v34 = (uint64_t *)MEMORY[0x263F8EE80];
LABEL_34:
  uint64_t result = sub_2610C18DC((uint64_t)v57);
  *unint64_t v61 = v34;
  return result;
}

void sub_2610E8D1C(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE88];
}

void sub_2610E8D2C(__int16 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v9 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v10 = (void *)sub_26111EBC8();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2611200A0;
  uint64_t v13 = MEMORY[0x263F8E538];
  *(void *)(v12 + 56) = MEMORY[0x263F8E4F0];
  *(void *)(v12 + 64) = v13;
  *(_WORD *)(v12 + 32) = a1;
  uint64_t v14 = MEMORY[0x263F8D750];
  *(void *)(v12 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 72) = a2;
  uint64_t v15 = (void *)sub_26111EEF8();
  objc_msgSend(v11, sel_setPredicate_, v15);

  objc_msgSend(v11, sel_setResultType_, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = MEMORY[0x263F8D310];
  *(_OWORD *)(v16 + 16) = xmmword_261120090;
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 32) = 0x7465737361;
  *(void *)(v16 + 40) = 0xE500000000000000;
  uint64_t v18 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setPropertiesToFetch_, v18);

  objc_msgSend(v11, sel_setReturnsDistinctResults_, 1);
  id v19 = *(id *)(a3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A4F0);
  uint64_t v20 = sub_26111F048();
  if (v4)
  {

    uint64_t v21 = 0;
  }
  else
  {
    unint64_t v22 = v20;

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_26111F348();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v21 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
  }
  *a4 = v21;
}

uint64_t sub_2610E8FD0(uint64_t a1)
{
  uint64_t v187 = a1;
  uint64_t v200 = *MEMORY[0x263EF8340];
  uint64_t v167 = sub_26111E538();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  id v165 = (char *)&v163 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v178 = (uint64_t)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v177 = (uint64_t)&v163 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v164 = (char *)&v163 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v176 = (uint64_t)&v163 - v11;
  MEMORY[0x270FA5388](v10);
  char v188 = (char *)&v163 - v12;
  uint64_t v189 = sub_26111E618();
  uint64_t v185 = *(char **)(v189 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v189);
  unint64_t v179 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v168 = (char *)&v163 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v174 = (char *)&v163 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v175 = (char *)&v163 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v181 = (char *)&v163 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v184 = (char *)&v163 - v23;
  uint64_t v191 = (void *)sub_26111EFA8();
  uint64_t v190 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*(v191 - 1);
  MEMORY[0x270FA5388](v191);
  uint64_t v25 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_26111EF88();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_26111EB38();
  MEMORY[0x270FA5388](v27 - 8);
  *(void *)(v1 + 24) = 128;
  uint64_t v183 = (char *)0x8000000261122700;
  uint64_t v186 = v1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_logger;
  sub_26111EAD8();
  uint64_t v28 = OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_lockQueue;
  v182 = (void (*)(char *, uint64_t))sub_261071924(0, (unint64_t *)&qword_26B40AD90);
  sub_26111EB28();
  *(void *)&long long aBlock = MEMORY[0x263F8EE78];
  sub_2610FC7D8((unint64_t *)&qword_26B40AD88, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AD60);
  sub_2610712F0((unint64_t *)&qword_26B40AD68, &qword_26B40AD60);
  uint64_t v29 = v1;
  sub_26111F118();
  (*((void (**)(char *, void, void *))v190 + 13))(v25, *MEMORY[0x263F8F130], v191);
  uint64_t v30 = sub_26111EFE8();
  uint64_t v171 = v28;
  *(void *)(v1 + v28) = v30;
  uint64_t v170 = v1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_signposter;
  sub_26111EA58();
  *(void *)(v1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters) = MEMORY[0x263F8EE80];
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v32 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v33 = (void *)sub_26111EBC8();
  id v34 = (void *)sub_26111EBC8();
  id v35 = objc_msgSend(v32, sel_URLForResource_withExtension_, v33, v34);

  if (!v35)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v185 + 7))(v188, 1, 1, v189);
    goto LABEL_65;
  }
  id v173 = v32;
  uint64_t v36 = v181;
  sub_26111E5A8();

  id v37 = v185;
  uint64_t v38 = v185 + 32;
  uint64_t v39 = (void (*)(char *, char *, uint64_t))*((void *)v185 + 4);
  id v40 = v188;
  uint64_t v41 = v189;
  v39(v188, v36, v189);
  uint64_t v42 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v37 + 7);
  v42(v40, 0, 1, v41);
  char v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v37 + 6);
  uint64_t v191 = v37 + 48;
  uint64_t v190 = v43;
  if (v43((uint64_t)v40, 1, v41) == 1)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
  }
  uint64_t v181 = v38;
  uint64_t v180 = (void (*)(char *, uint64_t, uint64_t))v39;
  v39(v184, v40, v41);
  id v44 = objc_allocWithZone(MEMORY[0x263EFF298]);
  uint64_t v45 = (void *)sub_26111E558();
  id v46 = objc_msgSend(v44, sel_initWithContentsOfURL_, v45);

  uint64_t v47 = v187;
  if (!v46) {
    goto LABEL_66;
  }
  id v48 = objc_allocWithZone(MEMORY[0x263EFF2E8]);
  id v49 = v46;
  unint64_t v50 = (void *)sub_26111EBC8();
  char v188 = (char *)objc_msgSend(v48, sel_initWithName_managedObjectModel_, v50, v49);

  id v172 = v49;
  id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF328]), sel_init);
  uint64_t v52 = v176;
  sub_261071864(v47, v176, (uint64_t *)&unk_26B40AC60);
  if (v190(v52, 1, v41) == 1)
  {
    v42(v164, 1, 1, v41);
    (*(void (**)(char *, void, uint64_t))(v166 + 104))(v165, *MEMORY[0x263F06E50], v167);
    uint64_t v53 = v175;
    sub_26111E5E8();
    sub_2610718C8(v52, (uint64_t *)&unk_26B40AC60);
  }
  else
  {
    uint64_t v53 = v175;
    v180(v175, v52, v41);
  }
  BOOL v54 = (void *)sub_26111E558();
  uint64_t v55 = (void (**)(char *, char *, uint64_t))v185;
  uint64_t v56 = (void (*)(char *, uint64_t))*((void *)v185 + 1);
  uint64_t v183 = v185 + 8;
  v182 = v56;
  v56(v53, v41);
  objc_msgSend(v51, sel_setURL_, v54);

  uint64_t v57 = v177;
  sub_261071864(v47, v177, (uint64_t *)&unk_26B40AC60);
  if (v190(v57, 1, v41) == 1)
  {
    sub_2610718C8(v57, (uint64_t *)&unk_26B40AC60);
  }
  else
  {
    long long v58 = v174;
    v180(v174, v57, v41);
    uint64_t v59 = self;
    id v60 = v55;
    id v61 = objc_msgSend(v59, sel_defaultManager);
    sub_26111E5D8();
    uint64_t v62 = (void *)sub_26111EBC8();
    swift_bridgeObjectRelease();
    unsigned int v63 = objc_msgSend(v61, sel_fileExistsAtPath_, v62);

    unint64_t v64 = v168;
    v60[2](v168, v58, v41);
    if (v63)
    {
      id v65 = objc_msgSend(v59, sel_defaultManager);
      sub_26111E5D8();
      unint64_t v66 = (void *)sub_26111EBC8();
      swift_bridgeObjectRelease();
      unsigned __int8 v67 = objc_msgSend(v65, sel_isWritableFileAtPath_, v66);

      id v68 = v64;
      unint64_t v69 = v182;
      v182(v68, v41);
      if ((v67 & 1) == 0)
      {
        id v70 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 1);
        objc_msgSend(v51, sel_setOption_forKey_, v70, *MEMORY[0x263EFF138]);
      }
    }
    else
    {
      uint64_t v71 = v64;
      unint64_t v69 = v182;
      v182(v71, v41);
    }
    v69(v174, v41);
    uint64_t v47 = v187;
  }
  if (v190(v47, 1, v41) == 1)
  {
    *(unsigned char *)(v29 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_historySupport) = 0;
  }
  else
  {
    *(unsigned char *)(v29 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_historySupport) = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40ADE0);
    uint64_t inited = swift_initStackObject();
    uint64_t v73 = (void **)MEMORY[0x263EFF0A8];
    *(_OWORD *)(inited + 16) = xmmword_261120090;
    uint64_t v74 = *v73;
    *(void *)(inited + 32) = v74;
    *(void *)(inited + 40) = &unk_270D2F840;
    id v75 = v74;
    sub_2610484A4(inited);
    type metadata accessor for NSPersistentHistoryTrackingOptionKey(0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AD50);
    sub_2610FC7D8(&qword_26B40ADA8, type metadata accessor for NSPersistentHistoryTrackingOptionKey);
    unint64_t v76 = (void *)sub_26111EB48();
    swift_bridgeObjectRelease();
    objc_msgSend(v51, sel_setOption_forKey_, v76, *MEMORY[0x263EFF0B0]);
  }
  long long v77 = v188;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_2611200D0;
  *(void *)(v78 + 32) = v51;
  *(void *)&long long aBlock = v78;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40ADA0);
  id v79 = v51;
  uint64_t v80 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v77, sel_setPersistentStoreDescriptions_, v80);

  id v81 = (char *)v79;
  id v82 = sub_26111EAC8();
  os_log_type_t v83 = sub_26111EF38();
  BOOL v84 = os_log_type_enabled(v82, v83);
  uint64_t v185 = v81;
  if (v84)
  {
    uint64_t v85 = swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(void *)&long long aBlock = v86;
    *(_DWORD *)uint64_t v85 = 136315394;
    unsigned int v87 = objc_msgSend(v81, sel_isReadOnly);
    BOOL v88 = v87 == 0;
    if (v87) {
      uint64_t v89 = 0x6C6E6F2D64616572;
    }
    else {
      uint64_t v89 = 0x6972772D64616572;
    }
    if (v88) {
      unint64_t v90 = 0xEA00000000006574;
    }
    else {
      unint64_t v90 = 0xE900000000000079;
    }
    uint64_t v177 = v29;
    uint64_t v195 = sub_26105CFF8(v89, v90, (uint64_t *)&aBlock);
    sub_26111F0D8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 12) = 2080;
    id v91 = objc_msgSend(self, sel_processInfo);
    id v92 = objc_msgSend(v91, sel_processName);

    uint64_t v93 = sub_26111EBF8();
    unint64_t v95 = v94;

    uint64_t v96 = v93;
    uint64_t v29 = v177;
    uint64_t v195 = sub_26105CFF8(v96, v95, (uint64_t *)&aBlock);
    long long v77 = v188;
    sub_26111F0D8();
    uint64_t v47 = v187;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_261042000, v82, v83, "Loading persistent store as %s from %s", (uint8_t *)v85, 0x16u);
    swift_arrayDestroy();
    uint64_t v97 = v86;
    uint64_t v41 = v189;
    MEMORY[0x26122E4F0](v97, -1, -1);
    MEMORY[0x26122E4F0](v85, -1, -1);
  }
  else
  {
  }
  uint64_t v98 = swift_allocObject();
  *(void *)(v98 + 16) = 0;
  uint64_t v99 = (id *)(v98 + 16);
  uint64_t v198 = sub_2610FC7D0;
  uint64_t v199 = v98;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v197 = sub_2610EAD28;
  *((void *)&v197 + 1) = &block_descriptor_173;
  uint64_t v100 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v77, sel_loadPersistentStoresWithCompletionHandler_, v100);
  _Block_release(v100);
  swift_beginAccess();
  id v101 = *v99;
  uint64_t v102 = *v99;
  swift_release();
  uint64_t v103 = v178;
  sub_261071864(v47, v178, (uint64_t *)&unk_26B40AC60);
  if (v190(v103, 1, v41) == 1)
  {
    sub_2610718C8(v103, (uint64_t *)&unk_26B40AC60);
    if (!v101) {
      goto LABEL_59;
    }
    goto LABEL_44;
  }
  v180(v179, v103, v41);
  unint64_t v104 = sub_261068828(qword_270D2F880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AB68);
  swift_arrayDestroy();
  if (!v101)
  {
    long long aBlock = 0u;
    long long v197 = 0u;
    long long v77 = v188;
LABEL_41:
    swift_bridgeObjectRelease();
    sub_2610718C8((uint64_t)&aBlock, (uint64_t *)&unk_26B40ADF8);
    goto LABEL_43;
  }
  uint64_t v191 = v102;
  id v105 = objc_msgSend(v102, sel_userInfo);
  uint64_t v106 = sub_26111EB68();

  uint64_t v107 = sub_26111EBF8();
  if (*(void *)(v106 + 16) && (unint64_t v109 = sub_26105D630(v107, v108), (v110 & 1) != 0))
  {
    sub_26106A31C(*(void *)(v106 + 56) + 32 * v109, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v197 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v77 = v188;
  if (!*((void *)&v197 + 1)) {
    goto LABEL_41;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    v182(v179, v41);
    if (!v101)
    {
LABEL_59:
      id v156 = objc_msgSend(v77, sel_newBackgroundContext);
      *(void *)(v29 + 16) = v156;
      uint64_t v157 = self;
      id v158 = v156;
      id v159 = objc_msgSend(v157, sel_mergeByPropertyObjectTrumpMergePolicy);
      objc_msgSend(v158, sel_setMergePolicy_, v159);

      id v160 = *(id *)(v29 + 16);
      uint64_t v161 = v169;
      sub_26111F028();
      if (v161)
      {
        swift_release();

        v182(v184, v41);
      }
      else
      {

        v182(v184, v41);
      }
      sub_2610718C8(v47, (uint64_t *)&unk_26B40AC60);
      return v29;
    }
    goto LABEL_44;
  }
  if (!*(void *)(v104 + 16) || (unint64_t v111 = sub_26105D6EC(v192), (v112 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v182(v179, v41);
    id v120 = v191;
    goto LABEL_45;
  }
  uint64_t v177 = v29;
  uint64_t v113 = (uint64_t *)(*(void *)(v104 + 56) + 16 * v111);
  uint64_t v115 = *v113;
  unint64_t v114 = v113[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  char v116 = sub_26111EAC8();
  os_log_type_t v117 = sub_26111EF58();
  if (os_log_type_enabled(v116, v117))
  {
    unint64_t v118 = (uint8_t *)swift_slowAlloc();
    uint64_t v119 = swift_slowAlloc();
    *(void *)&long long aBlock = v119;
    *(_DWORD *)unint64_t v118 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v192 = sub_26105CFF8(v115, v114, (uint64_t *)&aBlock);
    sub_26111F0D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_261042000, v116, v117, "Error: index store is corrupted (%s) - resetting", v118, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v119, -1, -1);
    MEMORY[0x26122E4F0](v118, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v190 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v194;
  v194[0] = sub_26111E5D8();
  v194[1] = v134;
  uint64_t v135 = sub_26111E5D8();
  *(void *)&long long aBlock = 1835561773;
  *((void *)&aBlock + 1) = 0xE400000000000000;
  uint64_t v192 = v135;
  uint64_t v193 = v136;
  swift_bridgeObjectRetain();
  uint64_t v192 = sub_26111ED18();
  uint64_t v193 = v137;
  sub_26111EC78();
  swift_bridgeObjectRelease();
  v194[2] = v192;
  v194[3] = v193;
  uint64_t v138 = sub_26111E5D8();
  *(void *)&long long aBlock = 1818326829;
  *((void *)&aBlock + 1) = 0xE400000000000000;
  uint64_t v192 = v138;
  uint64_t v193 = v139;
  swift_bridgeObjectRetain();
  uint64_t v192 = sub_26111ED18();
  uint64_t v193 = v140;
  sub_26111EC78();
  swift_bridgeObjectRelease();
  v194[4] = v192;
  v194[5] = v193;
  os_signpost_id_t v141 = self;
  for (uint64_t i = 0; i != 48; i += 16)
  {
    swift_bridgeObjectRetain();
    id v143 = objc_msgSend(v141, sel_defaultManager);
    uint64_t v144 = (void *)sub_26111EBC8();
    unsigned __int8 v145 = objc_msgSend(v143, sel_fileExistsAtPath_, v144);

    if (v145)
    {
      id v146 = objc_msgSend(v141, sel_defaultManager);
      uint64_t v147 = (void *)sub_26111EBC8();
      swift_bridgeObjectRelease();
      *(void *)&long long aBlock = 0;
      unsigned int v148 = objc_msgSend(v146, sel_removeItemAtPath_error_, v147, &aBlock);

      if (v148)
      {
        id v149 = (id)aBlock;
      }
      else
      {
        id v150 = (id)aBlock;
        unint64_t v151 = (void *)sub_26111E518();

        swift_willThrow();
        uint64_t v169 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v41 = v189;
  }
  swift_arrayDestroy();
  uint64_t v152 = swift_allocObject();
  *(void *)(v152 + 16) = 0;
  uint64_t v153 = (id *)(v152 + 16);
  uint64_t v198 = sub_2610FC7D0;
  uint64_t v199 = v152;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v197 = sub_2610EAD28;
  *((void *)&v197 + 1) = &block_descriptor_180;
  uint64_t v154 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  long long v77 = v188;
  objc_msgSend(v188, sel_loadPersistentStoresWithCompletionHandler_, v154);
  _Block_release(v154);
  swift_beginAccess();
  id v101 = *v153;
  id v155 = *v153;
  swift_release();
  v182(v179, v41);

  uint64_t v29 = v177;
  uint64_t v47 = v187;
  if (!v101) {
    goto LABEL_59;
  }
LABEL_44:
  id v120 = v101;
LABEL_45:
  unint64_t v121 = v120;
  id v122 = sub_26111EAC8();
  os_log_type_t v123 = sub_26111EF58();
  if (os_log_type_enabled(v122, v123))
  {
    id v124 = (uint8_t *)swift_slowAlloc();
    uint64_t v125 = swift_slowAlloc();
    uint64_t v191 = v101;
    uint64_t v190 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v125;
    *(_DWORD *)id v124 = 138412290;
    uint64_t v192 = (uint64_t)v121;
    uint64_t v126 = v121;
    uint64_t v127 = v121;
    uint64_t v41 = v189;
    uint64_t v47 = v187;
    sub_26111F0D8();
    unint64_t v128 = v190;
    *(void *)uint64_t v190 = v191;

    unint64_t v121 = v126;
    _os_log_impl(&dword_261042000, v122, v123, "%@", v124, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A90FD10);
    swift_arrayDestroy();
    MEMORY[0x26122E4F0](v128, -1, -1);
    MEMORY[0x26122E4F0](v124, -1, -1);
  }
  else
  {

    id v122 = v121;
  }
  uint64_t v129 = v171;
  uint64_t v130 = v170;

  sub_261046B60();
  swift_allocError();
  *char v131 = 0;
  swift_willThrow();

  v182(v184, v41);
  sub_2610718C8(v47, (uint64_t *)&unk_26B40AC60);

  uint64_t v132 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v132 - 8) + 8))(v186, v132);

  uint64_t v133 = sub_26111EA68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v133 - 8) + 8))(v130, v133);
  swift_bridgeObjectRelease();
  type metadata accessor for VUIndexCoreDataStore();
  swift_deallocPartialClassInstance();
  return v29;
}

void sub_2610EACC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = sub_26111E508();
    swift_beginAccess();
    uint64_t v5 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = v4;
  }
}

void sub_2610EAD28(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void sub_2610EADB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  id v14 = objc_msgSend(self, sel_fetchRequest);
  if (v14)
  {
    uint64_t v15 = v14;
    id v40 = a7;
    id v16 = objc_msgSend(self, sel_fetchHistoryAfterToken_, a2);
    objc_msgSend(v16, sel_setResultType_, 4);
    if ((a4 & 1) == 0) {
      objc_msgSend(v16, sel_setFetchLimit_, a3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_2611200D0;
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v18 + 16) = xmmword_261120090;
    uint64_t v20 = MEMORY[0x263F8D750];
    *(void *)(v18 + 56) = v19;
    *(void *)(v18 + 64) = v20;
    *(void *)(v18 + 32) = 0;
    *(void *)(v17 + 32) = sub_26111EEF8();
    *(void *)&long long v42 = v17;
    sub_26111EDA8();
    if ((a6 & 1) == 0)
    {
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x263F8E5C0];
      *(_OWORD *)(v21 + 16) = xmmword_261120090;
      uint64_t v23 = MEMORY[0x263F8E620];
      *(void *)(v21 + 56) = v22;
      *(void *)(v21 + 64) = v23;
      *(void *)(v21 + 32) = a5;
      sub_26111EEF8();
      MEMORY[0x26122D5E0]();
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_26111EDB8();
      }
      sub_26111EDE8();
      sub_26111EDA8();
    }
    uint64_t v24 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v24);

    objc_msgSend(v15, sel_setPredicate_, v25);
    objc_msgSend(v16, sel_setFetchRequest_, v15);
    uint64_t v26 = *(void **)(a1 + 16);
    *(void *)&long long v42 = 0;
    id v27 = objc_msgSend(v26, sel_executeRequest_error_, v16, &v42);
    uint64_t v28 = (void *)v42;
    if (v27)
    {
      uint64_t v29 = v27;
      self;
      uint64_t v30 = (void *)swift_dynamicCastObjCClass();
      id v31 = v28;
      if (v30)
      {
        if (objc_msgSend(v30, sel_result))
        {
          sub_26111F108();

          swift_unknownObjectRelease();
        }
        else
        {

          memset(v41, 0, sizeof(v41));
        }
        sub_261071274((uint64_t)v41, (uint64_t)&v42, (uint64_t *)&unk_26B40ADF8);
        id v37 = v40;
        if (*((void *)&v43 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A498);
          int v38 = swift_dynamicCast();
          uint64_t v39 = *(void *)&v41[0];
          if (!v38) {
            uint64_t v39 = 0;
          }
          *id v40 = v39;
          return;
        }
LABEL_18:
        sub_2610718C8((uint64_t)&v42, (uint64_t *)&unk_26B40ADF8);
        *id v37 = 0;
        return;
      }
    }
    else
    {
      id v35 = (id)v42;
      uint64_t v36 = (void *)sub_26111E518();

      swift_willThrow();
    }

    long long v42 = 0u;
    long long v43 = 0u;
    id v37 = v40;
    goto LABEL_18;
  }
  id v32 = sub_26111EAC8();
  os_log_type_t v33 = sub_26111EF58();
  if (os_log_type_enabled(v32, v33))
  {
    id v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v34 = 0;
    _os_log_impl(&dword_261042000, v32, v33, "Cannot create a NSPersistentHistoryChange request", v34, 2u);
    MEMORY[0x26122E4F0](v34, -1, -1);
  }

  *a7 = 0;
}

void sub_2610EB2A4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)(a1 + 16);
  v9[0] = 0;
  id v5 = objc_msgSend(v4, sel_existingObjectWithID_error_, a2, v9);
  id v6 = v9[0];
  if (!v5)
  {
    id v7 = v6;
    uint64_t v8 = (void *)sub_26111E518();

    swift_willThrow();
  }
  *a3 = v5;
}

uint64_t sub_2610EB364()
{
  uint64_t v1 = v0;
  v56[7] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_26111E718();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_historySupport) != 1) {
    return result;
  }
  uint64_t v52 = (char *)&v49 - v8;
  if (sub_2610E6F44(0, 0, 1) <= 5000) {
    uint64_t v9 = 100;
  }
  else {
    uint64_t v9 = 50;
  }
  uint64_t result = sub_2610EB7EC(-129600);
  if (v10)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v50 = v3;
  uint64_t v51 = v2;
  sub_26111E6E8();
  uint64_t result = sub_2610EB7EC(-2592800);
  if (v11)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  sub_26111E6E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2611200E0;
  uint64_t v13 = self;
  id v14 = (void *)sub_26111E6D8();
  id v15 = objc_msgSend(v13, sel_deleteHistoryBeforeDate_whenHistoryPercentageOfStoreIsGreaterThan_, v14, v9);

  *(void *)(inited + 32) = v15;
  id v49 = v6;
  id v16 = (void *)sub_26111E6D8();
  id v17 = objc_msgSend(v13, sel_deleteHistoryBeforeDate_, v16);

  *(void *)(inited + 40) = v17;
  v56[0] = (id)inited;
  sub_26111EDA8();
  id v19 = v56[0];
  unint64_t v20 = (unint64_t)v56[0] & 0xC000000000000001;
  if (((unint64_t)v56[0] & 0xC000000000000001) == 0
    && *(void *)(((unint64_t)v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
  }
  char v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = (char *)v56[0] + 32;
  uint64_t v24 = &off_265576000;
  *(void *)&long long v18 = 138412290;
  long long v53 = v18;
  BOOL v54 = (char *)v56[0] + 32;
  uint64_t v55 = v1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_logger;
  do
  {
    char v27 = v21;
    if (v20) {
      id v28 = (id)MEMORY[0x26122DAE0](v22, v19);
    }
    else {
      id v28 = *(id *)&v23[8 * v22];
    }
    uint64_t v29 = v28;
    uint64_t v30 = *(void **)(v1 + 16);
    v56[0] = 0;
    id v31 = objc_msgSend(v30, (SEL)v24[155], v29, v56);
    if (v31)
    {
      id v25 = v31;
      id v26 = v56[0];
    }
    else
    {
      id v32 = v56[0];
      os_log_type_t v33 = (void *)sub_26111E518();

      swift_willThrow();
      id v34 = v33;
      id v35 = v33;
      uint64_t v36 = sub_26111EAC8();
      os_log_type_t v37 = sub_26111EF58();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        unint64_t v39 = v20;
        id v40 = v19;
        uint64_t v41 = v1;
        long long v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = v53;
        id v43 = v33;
        uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v38 + 4) = v44;
        *long long v42 = v44;

        _os_log_impl(&dword_261042000, v36, v37, "Could not purge history: %@", (uint8_t *)v38, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A90FD10);
        swift_arrayDestroy();
        uint64_t v45 = v42;
        uint64_t v1 = v41;
        id v19 = v40;
        unint64_t v20 = v39;
        MEMORY[0x26122E4F0](v45, -1, -1);
        uint64_t v46 = v38;
        uint64_t v23 = v54;
        MEMORY[0x26122E4F0](v46, -1, -1);
      }
      else
      {
      }
      uint64_t v24 = &off_265576000;
    }
    char v21 = 1;
    uint64_t v22 = 1;
  }
  while ((v27 & 1) == 0);
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v48 = v51;
  v47(v49, v51);
  return ((uint64_t (*)(char *, uint64_t))v47)(v52, v48);
}

uint64_t sub_2610EB7EC(uint64_t result)
{
  double v1 = (double)result;
  if ((double)result >= 9.22337204e18)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v1 == result) {
    *(double *)&uint64_t result = (double)result;
  }
  else {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_2610EB84C(char a1)
{
  uint64_t v12 = MEMORY[0x263F8EE80];
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 17) = 0;
  *(_WORD *)(v4 + 18) = 0;
  *(unsigned char *)(v4 + 20) = 1;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = 1;
  *(void *)(v4 + 40) = 4096;
  *(void *)(v4 + 48) = v1;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  *(void *)(v4 + 56) = &v12;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_261071558;
  *(void *)(v5 + 24) = v4;
  aBlock[4] = sub_2610D3174;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_120;
  id v6 = _Block_copy(aBlock);
  id v7 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

void sub_2610EB9F4(__int16 a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(void))
{
  id v11 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v12 = (void *)sub_26111EBC8();
  id v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v14 = MEMORY[0x263F8D6C8];
  uint64_t v15 = MEMORY[0x263F8D750];
  uint64_t v16 = swift_allocObject();
  if ((a1 & 0x100) != 0)
  {
    *(_OWORD *)(v16 + 16) = xmmword_2611200A0;
    *(void *)(v16 + 56) = v14;
    *(void *)(v16 + 64) = v15;
    *(void *)(v16 + 32) = 2;
    uint64_t v19 = v15;
    uint64_t v18 = v14;
    *(void *)(v16 + 96) = v14;
    *(void *)(v16 + 104) = v19;
    *(void *)(v16 + 72) = 63;
  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_261120090;
    uint64_t v17 = v15;
    uint64_t v18 = v14;
    *(void *)(v16 + 56) = v14;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 32) = a1;
  }
  sub_26111EEF8();
  MEMORY[0x26122D5E0]();
  if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_26111EDB8();
  }
  sub_26111EDE8();
  sub_26111EDA8();
  if ((a2 & 0x10000) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = MEMORY[0x263F8E4F0];
    *(_OWORD *)(v20 + 16) = xmmword_261120090;
    uint64_t v22 = MEMORY[0x263F8E538];
    *(void *)(v20 + 56) = v21;
    *(void *)(v20 + 64) = v22;
    *(_WORD *)(v20 + 32) = a2;
    sub_26111EEF8();
    MEMORY[0x26122D5E0]();
    if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_26111EDB8();
    }
    sub_26111EDE8();
    sub_26111EDA8();
  }
  if ((a4 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_261120090;
    *(void *)(v23 + 56) = v18;
    *(void *)(v23 + 64) = MEMORY[0x263F8D750];
    *(void *)(v23 + 32) = a3;
  }
  sub_26111EEF8();
  MEMORY[0x26122D5E0]();
  if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_26111EDB8();
  }
  sub_26111EDE8();
  sub_26111EDA8();
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v24);

  objc_msgSend(v13, sel_setPredicate_, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = MEMORY[0x263F8D310];
  *(_OWORD *)(v26 + 16) = xmmword_261120090;
  *(void *)(v26 + 56) = v27;
  *(void *)(v26 + 32) = 0x696669746E656469;
  *(void *)(v26 + 40) = 0xEA00000000007265;
  id v28 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setPropertiesToFetch_, v28);

  uint64_t v29 = (void *)sub_26111ED78();
  objc_msgSend(v13, sel_setRelationshipKeyPathsForPrefetching_, v29);

  objc_msgSend(v13, sel_setFetchBatchSize_, a5);
  uint64_t v30 = *(void **)(a6 + 16);
  type metadata accessor for VUIndexObservation();
  id v31 = v30;
  unint64_t v32 = sub_26111F048();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_16;
    }
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!a5) {
    goto LABEL_32;
  }
LABEL_16:
  BOOL v34 = v33 >= 0;
  if (a5 > 0) {
    BOOL v34 = v33 < 1;
  }
  if (!v34)
  {
    uint64_t v35 = 0;
    do
    {
      if (__OFADD__(v35, a5)) {
        int64_t v37 = ((v35 + a5) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v37 = v35 + a5;
      }
      uint64_t v38 = (void *)MEMORY[0x26122DE00]();
      sub_2610EC004(v35, a5, v32, a7);
      if (a8) {
        a8();
      }
      BOOL v36 = v33 >= v37;
      if (a5 > 0) {
        BOOL v36 = v37 >= v33;
      }
      uint64_t v35 = v37;
    }
    while (!v36);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t sub_2610EC004(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v8 = a1 + a2;
  if (__OFADD__(a1, a2)) {
    goto LABEL_44;
  }
  uint64_t v5 = a4;
  unint64_t v4 = a3;
  uint64_t v6 = a1;
  unint64_t v7 = a3 >> 62;
  if (!(a3 >> 62))
  {
    uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 < v8) {
      uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v8 < a1) {
      goto LABEL_50;
    }
    if (v9 >= a1) {
      goto LABEL_7;
    }
    goto LABEL_49;
  }
LABEL_45:
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (v35 < v8) {
    uint64_t v8 = v35;
  }
  if (v8 < v6) {
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (v36 < v6)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_7:
  if (v6 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v8) {
    goto LABEL_52;
  }
  if (v8 < 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((v4 & 0xC000000000000001) == 0 || v8 == v6) {
    goto LABEL_18;
  }
  if (v8 <= (unint64_t)v6)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    uint64_t result = sub_26111F448();
    __break(1u);
    return result;
  }
  type metadata accessor for VUIndexObservation();
  uint64_t v11 = v6;
  do
  {
    uint64_t v12 = v11 + 1;
    sub_26111F258();
    uint64_t v11 = v12;
  }
  while (v8 != v12);
LABEL_18:
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_26111F358();
    uint64_t v38 = v13;
    uint64_t v6 = v14;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v8 = v16 >> 1;
    if (v6 != v16 >> 1)
    {
LABEL_23:
      uint64_t v37 = v8;
      do
      {
        if (v6 >= v8)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        id v18 = *(id *)(v38 + 8 * v6);
        id v19 = objc_msgSend(v18, sel_identifier);
        id v20 = objc_msgSend(v18, sel_mapping);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = (uint64_t)objc_msgSend(v20, sel_label);
        }
        else
        {
          uint64_t v22 = -1;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v39 = (void *)*v5;
        unint64_t v4 = (unint64_t)v39;
        *uint64_t v5 = 0x8000000000000000;
        uint64_t v8 = sub_26105D6EC((uint64_t)v19);
        uint64_t v25 = *(void *)(v4 + 16);
        BOOL v26 = (v24 & 1) == 0;
        uint64_t v27 = v25 + v26;
        if (__OFADD__(v25, v26)) {
          goto LABEL_42;
        }
        unint64_t v7 = v24;
        if (*(void *)(v4 + 24) >= v27)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v30 = v39;
            if (v24) {
              goto LABEL_24;
            }
          }
          else
          {
            unint64_t v4 = (unint64_t)&v39;
            sub_26107B9C8();
            uint64_t v30 = v39;
            if (v7) {
              goto LABEL_24;
            }
          }
        }
        else
        {
          sub_261077078(v27, isUniquelyReferenced_nonNull_native);
          unint64_t v4 = (unint64_t)v39;
          unint64_t v28 = sub_26105D6EC((uint64_t)v19);
          if ((v7 & 1) != (v29 & 1)) {
            goto LABEL_55;
          }
          uint64_t v8 = v28;
          uint64_t v30 = v39;
          if (v7)
          {
LABEL_24:
            *(void *)(v30[7] + 8 * v8) = v22;
            goto LABEL_25;
          }
        }
        v30[((unint64_t)v8 >> 6) + 8] |= 1 << v8;
        uint64_t v31 = 8 * v8;
        *(void *)(v30[6] + v31) = v19;
        *(void *)(v30[7] + v31) = v22;
        uint64_t v32 = v30[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_43;
        }
        v30[2] = v34;
LABEL_25:
        ++v6;
        *uint64_t v5 = v30;

        swift_bridgeObjectRelease();
        uint64_t v8 = v37;
      }
      while (v37 != v6);
    }
  }
  else
  {
    uint64_t v38 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
    if (v6 != v8) {
      goto LABEL_23;
    }
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_2610EC394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  unint64_t v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_261120090;
  *(void *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  *(void *)(v9 + 64) = sub_2610712F0((unint64_t *)&qword_26B40A370, (uint64_t *)&unk_26B40A360);
  *(void *)(v9 + 32) = a1;
  uint64_t v57 = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_26111EEF8();
  objc_msgSend(v8, sel_setPredicate_, v10);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8D310];
  *(_OWORD *)(v11 + 16) = xmmword_261120090;
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 32) = 0x696669746E656469;
  *(void *)(v11 + 40) = 0xEA00000000007265;
  uint64_t v13 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setPropertiesToFetch_, v13);

  uint64_t v14 = (void *)sub_26111ED78();
  objc_msgSend(v8, sel_setRelationshipKeyPathsForPrefetching_, v14);

  unint64_t v15 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  id v16 = v15;
  uint64_t v56 = v8;
  uint64_t v17 = sub_26111F048();
  if (v3)
  {

LABEL_3:
    unint64_t v18 = MEMORY[0x263F8EE78];
    goto LABEL_5;
  }
  unint64_t v18 = v17;

  if (!v18) {
    goto LABEL_3;
  }
LABEL_5:
  if (v18 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v20 = (void *)MEMORY[0x263F8EE80];
  if (v19)
  {
    unint64_t v21 = v18 & 0xC000000000000001;
    uint64_t v22 = 4;
    uint64_t v23 = &off_265576000;
    uint64_t v60 = v19;
    unint64_t v61 = v18;
    unint64_t v59 = v18 & 0xC000000000000001;
    do
    {
      if (v21) {
        id v24 = (id)MEMORY[0x26122DAE0](v22 - 4, v18);
      }
      else {
        id v24 = *(id *)(v18 + 8 * v22);
      }
      uint64_t v25 = v24;
      uint64_t v26 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      id v27 = [v24 (SEL)v23[56]];
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v29 = v19;
        unint64_t v30 = v18;
        id v31 = objc_msgSend(v27, sel_label);

        id v62 = v31;
        if (v31 == (id)-1)
        {

          unint64_t v18 = v30;
          uint64_t v19 = v29;
          uint64_t v26 = v22 - 3;
        }
        else
        {
          id v32 = objc_msgSend(v25, sel_identifier);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v18 = sub_26105D6EC((uint64_t)v32);
          uint64_t v35 = v20[2];
          BOOL v36 = (v34 & 1) == 0;
          uint64_t v37 = v35 + v36;
          if (__OFADD__(v35, v36)) {
            goto LABEL_42;
          }
          char v38 = v34;
          if (v20[3] >= v37)
          {
            uint64_t v26 = v22 - 3;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_26107B9C8();
            }
          }
          else
          {
            sub_261077078(v37, isUniquelyReferenced_nonNull_native);
            unint64_t v39 = sub_26105D6EC((uint64_t)v32);
            uint64_t v26 = v22 - 3;
            if ((v38 & 1) != (v40 & 1))
            {
              uint64_t result = sub_26111F448();
              __break(1u);
              return result;
            }
            unint64_t v18 = v39;
          }
          uint64_t v23 = &off_265576000;
          if (v38)
          {
            *(void *)(v20[7] + 8 * v18) = v62;
          }
          else
          {
            v20[(v18 >> 6) + 8] |= 1 << v18;
            uint64_t v41 = 8 * v18;
            *(void *)(v20[6] + v41) = v32;
            *(void *)(v20[7] + v41) = v62;
            uint64_t v42 = v20[2];
            BOOL v43 = __OFADD__(v42, 1);
            uint64_t v44 = v42 + 1;
            if (v43) {
              goto LABEL_43;
            }
            v20[2] = v44;
          }

          swift_bridgeObjectRelease();
          uint64_t v19 = v60;
          unint64_t v18 = v61;
          unint64_t v21 = v59;
        }
      }
      else
      {
      }
      ++v22;
    }
    while (v26 != v19);
  }
  swift_bridgeObjectRelease();
  int64_t v45 = *(void *)(v57 + 16);
  if (v45)
  {
    uint64_t v63 = MEMORY[0x263F8EE78];
    sub_26106229C(0, v45, 0);
    uint64_t v46 = v63;
    uint64_t v47 = (uint64_t *)(v57 + 32);
    do
    {
      if (v20[2] && (unint64_t v48 = sub_26105D6EC(*v47), (v49 & 1) != 0))
      {
        char v50 = 0;
        uint64_t v51 = *(void *)(v20[7] + 8 * v48);
      }
      else
      {
        uint64_t v51 = 0;
        char v50 = 1;
      }
      unint64_t v53 = *(void *)(v63 + 16);
      unint64_t v52 = *(void *)(v63 + 24);
      if (v53 >= v52 >> 1) {
        sub_26106229C(v52 > 1, v53 + 1, 1);
      }
      *(void *)(v63 + 16) = v53 + 1;
      uint64_t v54 = v63 + 16 * v53;
      *(void *)(v54 + 32) = v51;
      *(unsigned char *)(v54 + 40) = v50;
      ++v47;
      --v45;
    }
    while (v45);
  }
  else
  {

    uint64_t v46 = MEMORY[0x263F8EE78];
  }
  *a3 = v46;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2610EC934(__int16 a1)
{
  uint64_t v2 = v1;
  uint64_t v13 = 0;
  unsigned __int8 v14 = 1;
  unint64_t v4 = *(void **)(v2 + 16);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 17) = HIBYTE(a1) & 1;
  *(void *)(v5 + 24) = &v13;
  *(void *)(v5 + 32) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_2610FBC00;
  *(void *)(v6 + 24) = v5;
  v12[4] = sub_2610D3174;
  v12[5] = v6;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_26105A22C;
  v12[3] = &block_descriptor_110;
  unint64_t v7 = _Block_copy(v12);
  id v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v13;
    int v11 = v14;
    swift_release();
    if (v11) {
      return 0;
    }
    else {
      return v10;
    }
  }
  return result;
}

void sub_2610ECACC(__int16 a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  unint64_t v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_261071924(0, &qword_26B40ABC8);
  if ((a1 & 0x100) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_261120090;
    uint64_t v10 = MEMORY[0x263F8E7C0];
    *(void *)(v9 + 56) = MEMORY[0x263F8E778];
    *(void *)(v9 + 64) = v10;
    *(unsigned char *)(v9 + 32) = a1;
  }
  int v11 = (void *)sub_26111EEF8();
  objc_msgSend(v8, sel_setPredicate_, v11);

  uint64_t v12 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  id v13 = v12;
  uint64_t v14 = sub_26111F038();

  *(void *)a2 = v14;
  *(unsigned char *)(a2 + 8) = 0;
}

uint64_t sub_2610ECC8C(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  id v10 = objc_allocWithZone(MEMORY[0x263EFF260]);
  int v11 = (void *)sub_26111EBC8();
  id v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  if ((a2 & 1) == 0)
  {
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_261120090;
    uint64_t v14 = MEMORY[0x263F8D750];
    *(void *)(v13 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v13 + 64) = v14;
    *(void *)(v13 + 32) = a1;
    unint64_t v15 = (void *)sub_26111EEF8();
    objc_msgSend(v12, sel_setPredicate_, v15);
  }
  if (a3)
  {
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_261120090;
    *(void *)(v16 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
    *(void *)(v16 + 64) = sub_2610712F0((unint64_t *)&qword_26B40A370, (uint64_t *)&unk_26B40A360);
    *(void *)(v16 + 32) = a3;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_26111EEF8();
    objc_msgSend(v12, sel_setPredicate_, v17);
  }
  unint64_t v18 = *(void **)(a5 + 16);
  type metadata accessor for VUIndexObservation();
  id v19 = v18;
  uint64_t v20 = sub_26111F048();

  *a4 = v20;

  return swift_bridgeObjectRelease();
}

void sub_2610ECEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, void (*a9)(void))
{
  id v16 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v17 = (void *)sub_26111EBC8();
  id v18 = objc_msgSend(v16, sel_initWithEntityName_, v17);

  objc_msgSend(v18, sel_setPredicate_, a1);
  if (a2)
  {
    sub_261071924(0, &qword_26B40A6B0);
    id v19 = (void *)sub_26111ED78();
    objc_msgSend(v18, sel_setSortDescriptors_, v19);
  }
  if (a3)
  {
    sub_2611166CC(a3);
    uint64_t v20 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setPropertiesToFetch_, v20);
  }
  if ((a5 & 1) == 0) {
    objc_msgSend(v18, sel_setFetchLimit_, a4);
  }
  if ((a7 & 1) == 0) {
    objc_msgSend(v18, sel_setFetchOffset_, a6);
  }
  unint64_t v21 = *(void **)(a8 + 16);
  type metadata accessor for VUIndexObservation();
  id v22 = v21;
  uint64_t v23 = sub_26111F048();
  if (v9)
  {

    id v18 = v22;
LABEL_21:

    return;
  }
  unint64_t v24 = v23;

  id v31 = (void *)MEMORY[0x26122DE00]();
  if (!(v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_13;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_26111F348();
  if (!v25) {
    goto LABEL_20;
  }
LABEL_13:
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x26122DAE0](i, v24);
      }
      else {
        id v27 = *(id *)(v24 + 8 * i + 32);
      }
      unint64_t v28 = v27;
      a9();
    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_2610ED174(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v9 = (void *)sub_26111EBC8();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_261120090;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 32) = 0x696669746E656469;
  *(void *)(v11 + 40) = 0xEA00000000007265;
  id v12 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setPropertiesToFetch_, v12);

  id v13 = objc_msgSend(v10, sel_setResultType_, 2);
  if (a2)
  {
    sub_261071924(0, &qword_26B40A6B0);
    uint64_t v14 = (void *)sub_26111ED78();
    objc_msgSend(v10, sel_setSortDescriptors_, v14);
  }
  unint64_t v15 = MEMORY[0x26122DE00](v13);
  id v16 = *(void **)(a3 + 16);
  sub_261071924(0, &qword_26B40A630);
  id v17 = v16;
  uint64_t v18 = sub_26111F048();
  if (v4)
  {
  }
  else
  {
    unint64_t v19 = v18;

    if (v19 >> 62) {
      goto LABEL_21;
    }
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20)
    {
      while (1)
      {
        unint64_t v29 = v15;
        id v30 = v10;
        uint64_t v35 = MEMORY[0x263F8EE78];
        sub_26106212C(0, v20 & ~(v20 >> 63), 0);
        if (v20 < 0) {
          break;
        }
        uint64_t v21 = 0;
        id v10 = (id)(v19 & 0xC000000000000001);
        while (v20 != v21)
        {
          if (v10) {
            id v22 = (id)MEMORY[0x26122DAE0](v21, v19);
          }
          else {
            id v22 = *(id *)(v19 + 8 * v21 + 32);
          }
          uint64_t v23 = v22;
          *(void *)&long long v33 = 0x696669746E656469;
          *((void *)&v33 + 1) = 0xEA00000000007265;
          id v24 = objc_msgSend(v22, sel___swift_objectForKeyedSubscript_, sub_26111F428());
          swift_unknownObjectRelease();
          if (!v24) {
            goto LABEL_25;
          }
          sub_26111F108();
          swift_unknownObjectRelease();
          sub_261070F60(&v32, &v33);
          swift_dynamicCast();

          uint64_t v25 = v34;
          uint64_t v26 = v35;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_26106212C(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v35;
          }
          unint64_t v15 = *(void *)(v26 + 16);
          unint64_t v27 = *(void *)(v26 + 24);
          if (v15 >= v27 >> 1)
          {
            sub_26106212C(v27 > 1, v15 + 1, 1);
            uint64_t v26 = v35;
          }
          ++v21;
          *(void *)(v26 + 16) = v15 + 1;
          *(void *)(v26 + 8 * v15 + 32) = v25;
          if (v20 == v21)
          {
            swift_bridgeObjectRelease();
            id v10 = v30;
            unint64_t v28 = a4;
            unint64_t v15 = v29;
            goto LABEL_23;
          }
        }
        __break(1u);
LABEL_21:
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_26111F348();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v26 = MEMORY[0x263F8EE78];
      unint64_t v28 = a4;
LABEL_23:

      *unint64_t v28 = v26;
    }
  }
}

void sub_2610ED574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, id), uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v27 = a6;
  unint64_t v28 = a7;
  id v13 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v14 = (void *)sub_26111EBC8();
  id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  if (a1) {
    objc_msgSend(v15, sel_setPredicate_, a1, v27, v28);
  }
  sub_2611166CC(a2);
  id v16 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setPropertiesToFetch_, v16);

  id v17 = (void *)sub_26111ED78();
  objc_msgSend(v15, sel_setRelationshipKeyPathsForPrefetching_, v17);

  objc_msgSend(v15, sel_setFetchBatchSize_, a3);
  uint64_t v18 = *(void **)(a4 + 16);
  type metadata accessor for VUIndexObservation();
  id v19 = v18;
  uint64_t v20 = sub_26111F048();
  if (v7)
  {

    return;
  }
  unint64_t v21 = v20;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_7;
    }
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!a3) {
    goto LABEL_19;
  }
LABEL_7:
  BOOL v23 = v22 >= 0;
  if (a3 > 0) {
    BOOL v23 = v22 < 1;
  }
  if (!v23)
  {
    int64_t v24 = 0;
    do
    {
      uint64_t v25 = (void *)MEMORY[0x26122DE00]();
      sub_2610ED7F8(v24, a3, v21, a5, v27, a4, v28);
      if (__OFADD__(v24, a3)) {
        int64_t v24 = ((v24 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        v24 += a3;
      }
      BOOL v26 = v22 >= v24;
      if (a3 > 0) {
        BOOL v26 = v24 >= v22;
      }
    }
    while (!v26);
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_2610ED7F8(int64_t a1, uint64_t a2, unint64_t a3, void (*a4)(id, id), uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  v33[1] = *(id *)MEMORY[0x263EF8340];
  int64_t v11 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a3;
    uint64_t v8 = a1;
    uint64_t v31 = a6;
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v7 = a3 >> 62;
    if (!(a3 >> 62))
    {
      uint64_t v12 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= v11) {
        int64_t v13 = a1 + a2;
      }
      else {
        int64_t v13 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v13 < a1) {
        goto LABEL_50;
      }
      if (v12 >= a1) {
        goto LABEL_8;
      }
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
  }
  if (v9 < 0) {
    uint64_t v12 = v9;
  }
  else {
    uint64_t v12 = v10;
  }
  BOOL v26 = a7;
  swift_bridgeObjectRetain();
  int64_t v13 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (v13 >= v11) {
    int64_t v13 = v11;
  }
  if (v13 < v8) {
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_26111F348();
  swift_bridgeObjectRelease();
  a7 = v26;
  if (v12 < v8) {
    goto LABEL_49;
  }
LABEL_8:
  if (v8 < 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  id v30 = a7;
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 < v13) {
    goto LABEL_52;
  }
  if (v13 < 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((v9 & 0xC000000000000001) != 0 && v13 != v8)
  {
    if (v13 <= (unint64_t)v8) {
      goto LABEL_63;
    }
    type metadata accessor for VUIndexObservation();
    uint64_t v14 = v8;
    do
    {
      uint64_t v15 = v14 + 1;
      sub_26111F258();
      uint64_t v14 = v15;
    }
    while (v13 != v15);
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_26111F358();
    uint64_t v12 = v16;
    uint64_t v8 = v17;
    int64_t v13 = v18;
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v7 = v9 & 0xFFFFFFFFFFFFFF8;
    uint64_t v12 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
    int64_t v13 = (2 * v13) | 1;
    swift_bridgeObjectRetain();
    if ((v13 & 1) == 0) {
      goto LABEL_23;
    }
  }
  sub_26111F418();
  swift_unknownObjectRetain_n();
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19)
  {
    swift_unknownObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  uint64_t v20 = *(void *)(v19 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v13 >> 1, v8)) {
    goto LABEL_64;
  }
  if (v20 != ((unint64_t)v13 >> 1) - v8) {
    goto LABEL_65;
  }
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
    {
LABEL_54:
      uint64_t v7 = sub_26111F348();
      if (!v7) {
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(v8 + 16);
      if (!v7) {
        goto LABEL_55;
      }
    }
    if (v7 >= 1) {
      break;
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_unknownObjectRelease();
LABEL_23:
    uint64_t v8 = sub_261074FE4(v7, v12, v8, v13);
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x26122DAE0](i, v8);
    }
    else {
      id v22 = *(id *)(v8 + 8 * i + 32);
    }
    BOOL v23 = v22;
    id v24 = objc_msgSend(v22, sel_mapping);
    if (v24)
    {
      id v25 = v24;
      a4(objc_msgSend(v23, sel_identifier), v24);

      BOOL v23 = v25;
    }
  }
LABEL_55:
  swift_release();
  uint64_t result = (uint64_t)objc_msgSend(*(id *)(v31 + 16), sel_hasChanges);
  if (result)
  {
    unint64_t v28 = *(void **)(v31 + 16);
    v33[0] = 0;
    if (!objc_msgSend(v28, sel_save_, v33))
    {
      id v29 = v33[0];
      sub_26111E518();

      return swift_willThrow();
    }
    uint64_t result = (uint64_t)v33[0];
  }
  if (v30) {
    return v30(result);
  }
  return result;
}

void sub_2610EDBFC(uint64_t a1, unsigned __int8 a2, void (*a3)(id))
{
}

void sub_2610EDC2C(unsigned __int8 a1, void (*a2)(id))
{
  uint64_t v4 = v2;
  id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v8 = (void *)sub_26111EBC8();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_261120090;
  uint64_t v11 = MEMORY[0x263F8D750];
  *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = a1;
  uint64_t v12 = (void *)sub_26111EEF8();
  objc_msgSend(v9, sel_setPredicate_, v12);

  int64_t v13 = *(void **)(v4 + 16);
  type metadata accessor for VUIndexSubset();
  id v14 = v13;
  unint64_t v15 = sub_26111F048();

  if (v3) {
    goto LABEL_11;
  }
  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v4 + 16));
    objc_msgSend(v18, sel_setType_, a1);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x26122DAE0](0, v15);
    goto LABEL_7;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v15 + 32);
LABEL_7:
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = v17;
LABEL_10:
    a2(v18);

    id v9 = v18;
LABEL_11:

    return;
  }
  __break(1u);
}

void sub_2610EDE90(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
}

uint64_t sub_2610EDEB0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + 16);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_2610FBBAC;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_2610D3174;
  v10[5] = v6;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_26105A22C;
  v10[3] = &block_descriptor_100;
  id v7 = _Block_copy(v10);
  id v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void sub_2610EE020(unsigned __int8 a1, uint64_t a2)
{
  v27[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_26111E718();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v9 = (void *)sub_26111EBC8();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_261120090;
  uint64_t v12 = MEMORY[0x263F8D750];
  *(void *)(v11 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 32) = a1;
  int64_t v13 = (void *)sub_26111EEF8();
  objc_msgSend(v10, sel_setPredicate_, v13);

  id v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v15 = v14;
  unint64_t v16 = sub_26111F048();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    id v19 = 0;
    goto LABEL_7;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x26122DAE0](0, v16);
  }
  else
  {
    if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v17 = *(id *)(v16 + 32);
  }
  id v18 = v17;
  swift_bridgeObjectRelease();
  id v19 = v18;
  objc_msgSend(v19, sel_setStaleObservations_, 0);
  objc_msgSend(v19, sel_setStaleTags_, 0);
  sub_26111E708();
  uint64_t v20 = (void *)sub_26111E6D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v19, sel_setLastUpdated_, v20);

LABEL_7:
  unint64_t v21 = *(void **)(a2 + 16);
  v27[0] = 0;
  if (objc_msgSend(v21, sel_save_, v27))
  {
    id v22 = v27[0];
  }
  else
  {
    id v23 = v27[0];
    id v24 = (void *)sub_26111E518();

    swift_willThrow();
  }
}

void sub_2610EE3A0(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
}

void sub_2610EE3C0(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, SEL *a3@<X2>, unsigned __int8 *a4@<X8>)
{
  id v9 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v10 = (void *)sub_26111EBC8();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_261120090;
  uint64_t v13 = MEMORY[0x263F8D750];
  *(void *)(v12 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v12 + 64) = v13;
  *(void *)(v12 + 32) = a1;
  id v14 = (void *)sub_26111EEF8();
  objc_msgSend(v11, sel_setPredicate_, v14);

  id v15 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v16 = v15;
  uint64_t v17 = sub_26111F048();
  if (v4)
  {

LABEL_3:
    unsigned __int8 v18 = 1;
LABEL_10:
    *a4 = v18;
    return;
  }
  unint64_t v19 = v17;

  if (!(v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_12:

    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (id)MEMORY[0x26122DAE0](0, v19);
    goto LABEL_9;
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v19 + 32);
LABEL_9:
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    unsigned __int8 v18 = [v21 *a3];

    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_2610EE5FC(__int16 a1)
{
  uint64_t v25 = 0;
  char v26 = 1;
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 17) = HIBYTE(a1) & 1;
  *(void *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = &v25;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_2610FBAC8;
  *(void *)(v5 + 24) = v4;
  id v23 = sub_2610D3174;
  uint64_t v24 = v5;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v20 = 1107296256;
  unint64_t v21 = sub_26105A22C;
  uint64_t v22 = &block_descriptor_80_0;
  uint64_t v6 = _Block_copy(&aBlock);
  id v7 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performBlockAndWait_, v6);

  _Block_release(v6);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    if (v26 != 1)
    {
LABEL_8:
      uint64_t v14 = v25;
      swift_release();
      return v14;
    }
    long long v15 = 0u;
    long long v16 = 0u;
    id v9 = *(void **)(v1 + 16);
    id v10 = (void *)swift_allocObject();
    v10[2] = v1;
    v10[3] = &v15;
    v10[4] = 0x6E6F6973726576;
    v10[5] = 0xE700000000000000;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_261071190;
    *(void *)(v11 + 24) = v10;
    id v23 = sub_2610D3174;
    uint64_t v24 = v11;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    unint64_t v21 = sub_26105A22C;
    uint64_t v22 = &block_descriptor_90;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_retain();
    id v13 = v9;
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_performBlockAndWait_, v12, v15, v16);

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v13 & 1) == 0)
    {
      sub_261071274((uint64_t)&v15, (uint64_t)v17, (uint64_t *)&unk_26B40ADF8);
      swift_release();
      if (v18)
      {
        if (swift_dynamicCast())
        {
          uint64_t v25 = aBlock;
          char v26 = 0;
        }
      }
      else
      {
        sub_2610718C8((uint64_t)v17, (uint64_t *)&unk_26B40ADF8);
      }
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

void sub_2610EE958(__int16 a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if ((a1 & 0x100) == 0)
  {
    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_261120090;
    uint64_t v10 = MEMORY[0x263F8D750];
    *(void *)(v9 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v9 + 64) = v10;
    *(void *)(v9 + 32) = a1;
    uint64_t v11 = (void *)sub_26111EEF8();
    objc_msgSend(v8, sel_setPredicate_, v11);
  }
  uint64_t v12 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v21 = v12;
  unint64_t v13 = sub_26111F048();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_5;
    }
LABEL_21:

    goto LABEL_22;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14) {
    goto LABEL_21;
  }
LABEL_5:
  if (v14 < 1)
  {
    __break(1u);
    return;
  }
  id v22 = v8;
  for (uint64_t i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x26122DAE0](i, v13);
    }
    else {
      id v19 = *(id *)(v13 + 8 * i + 32);
    }
    uint64_t v20 = v19;
    if ((int)objc_msgSend(v19, sel_version, v22) >= 1)
    {
      if (*(unsigned char *)(a3 + 8)) {
        uint64_t v16 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v16 = *(void *)a3;
      }
      signed int v17 = objc_msgSend(v20, sel_version);

      uint64_t v18 = v17;
      if (v16 < v17) {
        uint64_t v18 = v16;
      }
      *(void *)a3 = v18;
      *(unsigned char *)(a3 + 8) = 0;
    }
    else
    {
    }
  }

LABEL_22:

  swift_bridgeObjectRelease();
}

void sub_2610EEC24(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  id v13 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v14 = (void *)sub_26111EBC8();
  id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_261120090;
  uint64_t v17 = MEMORY[0x263F8D750];
  *(void *)(v16 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 32) = a1;
  uint64_t v18 = (void *)sub_26111EEF8();
  objc_msgSend(v15, sel_setPredicate_, v18);

  id v19 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v20 = v19;
  uint64_t v21 = sub_26111F048();
  if (v3)
  {

LABEL_3:
    uint64_t v22 = sub_26111E718();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
    id v23 = 0;
LABEL_4:
    sub_26111E6C8();

    sub_2610718C8((uint64_t)v12, &qword_26A910640);
    return;
  }
  unint64_t v24 = v21;

  if (!(v24 >> 62))
  {
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_17;
  }
LABEL_7:
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v25 = (id)MEMORY[0x26122DAE0](0, v24);
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v25 = *(id *)(v24 + 32);
  }
  id v23 = v25;
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_3;
  }
  id v26 = objc_msgSend(v23, sel_lastUpdated);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_26111E6F8();

    uint64_t v28 = sub_26111E718();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
  }
  else
  {
    uint64_t v28 = sub_26111E718();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
  }
  sub_261071274((uint64_t)v10, (uint64_t)v12, &qword_26A910640);
  sub_26111E718();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v28) == 1) {
    goto LABEL_4;
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(a3, v12, v28);
}

void sub_2610EF038(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v8 = (void *)sub_26111EBC8();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_261120090;
  *(void *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  *(void *)(v10 + 64) = sub_2610712F0((unint64_t *)&qword_26B40A370, (uint64_t *)&unk_26B40A360);
  *(void *)(v10 + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_26111EEF8();
  objc_msgSend(v9, sel_setPredicate_, v11);

  uint64_t v12 = (void *)sub_26111ED78();
  objc_msgSend(v9, sel_setRelationshipKeyPathsForPrefetching_, v12);

  id v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  id v14 = v13;
  uint64_t v15 = sub_26111F048();
  if (v3)
  {
  }
  else
  {
    uint64_t v16 = v15;

    a3(v16);
    swift_bridgeObjectRelease();
  }
}

void sub_2610EF260(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x2610EF370);
    case 2uLL:
      if (!__OFSUB__(*(void *)(a2 + 24), *(void *)(a2 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      MEMORY[0x270FA5388](a1);
      id v4 = v3;
      sub_26111F028();

      return;
  }
}

void sub_2610EF380(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v63[1] = *(id *)MEMORY[0x263EF8340];
  id v8 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v9 = (void *)sub_26111EBC8();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8E778];
  *(_OWORD *)(v11 + 16) = xmmword_261120090;
  uint64_t v13 = MEMORY[0x263F8E7C0];
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 64) = v13;
  unsigned __int8 v56 = a1;
  *(unsigned char *)(v11 + 32) = a1;
  id v14 = (void *)sub_26111EEF8();
  objc_msgSend(v10, sel_setPredicate_, v14);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2611200D0;
  id v16 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v17 = (void *)sub_26111EBC8();
  id v18 = objc_msgSend(v16, sel_initWithKey_ascending_, v17, 1);

  *(void *)(v15 + 32) = v18;
  v63[0] = (id)v15;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  id v19 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSortDescriptors_, v19);

  id v20 = *(void **)(a2 + 16);
  uint64_t v21 = type metadata accessor for VUIndexPartition();
  id v22 = v20;
  uint64_t v55 = v21;
  uint64_t v23 = sub_26111F048();
  if (v4)
  {

    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    unint64_t v24 = v23;

    uint64_t v57 = v10;
    Class v59 = (Class)(v24 >> 62);
    if (v24 >> 62) {
      goto LABEL_19;
    }
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (uint64_t i = a2; v25; uint64_t i = a2)
    {
      if (v25 < 1) {
        goto LABEL_45;
      }
      uint64_t v26 = 0;
      unint64_t v27 = v24 & 0xC000000000000001;
      uint64_t v28 = &off_265576000;
      uint64_t v58 = a4;
      while (1)
      {
        if (v27) {
          id v30 = (id)MEMORY[0x26122DAE0](v26, v24);
        }
        else {
          id v30 = *(id *)(v24 + 8 * v26 + 32);
        }
        uint64_t v31 = v30;
        if ((int)objc_msgSend(v30, (SEL)v28[92], v55) >= a3)
        {
          id v29 = *(id *)(a2 + 16);
          objc_msgSend(v29, sel_deleteObject_, v31);
          goto LABEL_7;
        }
        uint64_t v32 = (int)[v31 (SEL)v28[92]];
        uint64_t v33 = v32 * a4;
        if ((unsigned __int128)(v32 * (__int128)a4) >> 64 != (v32 * a4) >> 63) {
          break;
        }
        if (__OFADD__(v33, a4)) {
          goto LABEL_17;
        }
        if (v33 + a4 < v33) {
          goto LABEL_18;
        }
        uint64_t v34 = sub_26111E668();
        unint64_t v35 = v27;
        uint64_t v36 = v25;
        unint64_t v37 = v24;
        char v38 = v28;
        unint64_t v40 = v39;
        id v29 = (id)sub_26111E678();
        uint64_t v41 = v34;
        a2 = i;
        unint64_t v42 = v40;
        uint64_t v28 = v38;
        unint64_t v24 = v37;
        uint64_t v25 = v36;
        unint64_t v27 = v35;
        a4 = v58;
        sub_26106899C(v41, v42);
        objc_msgSend(v31, sel_setCentroid_, v29);
LABEL_7:
        ++v26;

        if (v25 == v26) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_26111F348();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (v59)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_26111F348();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v43 < a3)
    {
      uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      if (v43 <= 0x80000000) {
        uint64_t v44 = 0x80000000;
      }
      else {
        uint64_t v44 = v43;
      }
      uint64_t v45 = v43;
      while (1)
      {
        id v46 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithContext_, *(void *)(a2 + 16));
        uint64_t v47 = v45 * a4;
        if ((unsigned __int128)(v45 * (__int128)a4) >> 64 != (v45 * a4) >> 63) {
          break;
        }
        ++v45;
        if ((unsigned __int128)(v45 * (__int128)a4) >> 64 != (v45 * a4) >> 63) {
          goto LABEL_41;
        }
        if (v45 * a4 < v47) {
          goto LABEL_42;
        }
        uint64_t v48 = sub_26111E668();
        unint64_t v50 = v49;
        uint64_t v51 = (void *)sub_26111E678();
        sub_26106899C(v48, v50);
        objc_msgSend(v46, sel_setCentroid_, v51);

        if (v43 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_43;
        }
        if (v45 - 1 == v44) {
          goto LABEL_44;
        }
        objc_msgSend(v46, sel_setPartition_, v45 - 1);
        objc_msgSend(v46, sel_setType_, v56);

        a2 = i;
        if (v45 == a3) {
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
    }
LABEL_34:
    if (objc_msgSend(*(id *)(a2 + 16), sel_hasChanges, v55))
    {
      unint64_t v52 = *(void **)(a2 + 16);
      v63[0] = 0;
      if (objc_msgSend(v52, sel_save_, v63))
      {
        id v53 = v63[0];
      }
      else
      {
        id v54 = v63[0];
        sub_26111E518();

        swift_willThrow();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_2610EF9A0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_261120090;
  uint64_t v10 = MEMORY[0x263F8D750];
  *(void *)(v9 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = a1;
  uint64_t v11 = (void *)sub_26111EEF8();
  objc_msgSend(v8, sel_setPredicate_, v11);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2611200D0;
  id v13 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v14 = (void *)sub_26111EBC8();
  id v15 = objc_msgSend(v13, sel_initWithKey_ascending_, v14, 1);

  *(void *)(v12 + 32) = v15;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  id v16 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSortDescriptors_, v16);

  uint64_t v17 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexPartition();
  id v18 = v17;
  uint64_t v36 = v8;
  uint64_t v19 = sub_26111F048();
  if (v3)
  {

    unint64_t v20 = MEMORY[0x263F8EE78];
  }
  else
  {
    unint64_t v20 = v19;
  }

  if (a1 == 6) {
    uint64_t v21 = 3072;
  }
  else {
    uint64_t v21 = 512;
  }
  unint64_t v22 = v20 >> 62;
  if (v20 >> 62) {
    goto LABEL_24;
  }
  uint64_t v23 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = v21 * v23;
    if ((unsigned __int128)(v21 * (__int128)v23) >> 64 != (v21 * v23) >> 63)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v25 = sub_2610FBDD0(result);
    uint64_t v27 = v26;
    uint64_t v37 = v25;
    uint64_t v38 = v26;
    if (v22) {
      break;
    }
    uint64_t v28 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v28) {
      goto LABEL_21;
    }
LABEL_12:
    unint64_t v22 = v20 & 0xC000000000000001;
    uint64_t v21 = 4;
    while (1)
    {
      id v29 = v22 ? (id)MEMORY[0x26122DAE0](v21 - 4, v20) : *(id *)(v20 + 8 * v21);
      id v30 = v29;
      uint64_t v31 = v21 - 3;
      if (__OFADD__(v21 - 4, 1)) {
        break;
      }
      uint64_t result = (uint64_t)objc_msgSend(v29, sel_centroid);
      if (!result) {
        goto LABEL_26;
      }
      uint64_t v32 = (void *)result;
      uint64_t v33 = sub_26111E688();
      unint64_t v35 = v34;

      sub_26111E6A8();
      sub_26106899C(v33, v35);

      ++v21;
      if (v31 == v28)
      {

        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v25 = v37;
        uint64_t v27 = v38;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_12;
  }
LABEL_21:

  uint64_t result = swift_bridgeObjectRelease();
LABEL_22:
  *a3 = v25;
  a3[1] = v27;
  return result;
}

void sub_2610EFD70(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v53[2] = *(id *)MEMORY[0x263EF8340];
  id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
  id v8 = (void *)sub_26111EBC8();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8E538];
  *(void *)(v10 + 56) = MEMORY[0x263F8E4F0];
  *(void *)(v10 + 64) = v11;
  *(_WORD *)(v10 + 32) = 1;
  uint64_t v12 = MEMORY[0x263F8E778];
  uint64_t v13 = MEMORY[0x263F8E7C0];
  *(_OWORD *)(v10 + 16) = xmmword_2611200A0;
  *(void *)(v10 + 96) = v12;
  *(void *)(v10 + 104) = v13;
  *(unsigned char *)(v10 + 72) = a1;
  id v14 = (void *)sub_26111EEF8();
  objc_msgSend(v9, sel_setPredicate_, v14);

  id v15 = (void *)sub_26111ED78();
  objc_msgSend(v9, sel_setRelationshipKeyPathsForPrefetching_, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_261121A80;
  id v17 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v18 = (void *)sub_26111EBC8();
  id v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 1);

  *(void *)(v16 + 32) = v19;
  id v20 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v21 = (void *)sub_26111EBC8();
  id v22 = objc_msgSend(v20, sel_initWithKey_ascending_, v21, 1);

  *(void *)(v16 + 40) = v22;
  id v23 = objc_allocWithZone(MEMORY[0x263F08B30]);
  unint64_t v24 = (void *)sub_26111EBC8();
  id v25 = objc_msgSend(v23, sel_initWithKey_ascending_, v24, 1);

  *(void *)(v16 + 48) = v25;
  id v26 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v27 = (void *)sub_26111EBC8();
  id v28 = objc_msgSend(v26, sel_initWithKey_ascending_, v27, 1);

  *(void *)(v16 + 56) = v28;
  v53[0] = (id)v16;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  id v29 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setSortDescriptors_, v29);

  id v30 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  id v31 = v30;
  uint64_t v32 = sub_26111F048();
  if (v3)
  {

    return;
  }
  unint64_t v33 = v32;

  uint64_t v52 = MEMORY[0x263F8EE88];
  uint64_t v51 = v9;
  uint64_t v50 = a2;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_26111F348();
    if (v34)
    {
LABEL_5:
      if (v34 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v35 = 0;
        while (1)
        {
          id v37 = (v33 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x26122DAE0](v35, v33)
              : *(id *)(v33 + 8 * v35 + 32);
          uint64_t v38 = v37;
          id v39 = objc_msgSend(v37, sel_observation);
          if (!v39) {
            break;
          }
          unint64_t v40 = v39;
          id v41 = objc_msgSend(v39, sel_client);

          id v42 = objc_msgSend(v38, sel_observation);
          if (!v42) {
            goto LABEL_25;
          }
          uint64_t v43 = v42;
          id v44 = objc_msgSend(v42, sel_mapping);

          if (v44)
          {
            uint64_t v36 = (uint64_t)objc_msgSend(v44, sel_label);
          }
          else
          {
            uint64_t v36 = -1;
          }
          ++v35;
          objc_msgSend(v38, sel_setResolved_, sub_26105F06C((uint64_t)v53, (uint64_t)v41, v36) & 1);

          if (v34 == v35) {
            goto LABEL_17;
          }
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34) {
      goto LABEL_5;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  if ((objc_msgSend(*(id *)(v50 + 16), sel_hasChanges) & 1) == 0)
  {

    id v46 = a3;
    goto LABEL_21;
  }
  uint64_t v45 = *(void **)(v50 + 16);
  v53[0] = 0;
  id v46 = a3;
  if (objc_msgSend(v45, sel_save_, v53))
  {
    id v47 = v53[0];

LABEL_21:
    uint64_t v48 = *(void *)(v52 + 16);
    swift_bridgeObjectRelease();
    *id v46 = v48;
    return;
  }
  id v49 = v53[0];
  sub_26111E518();

  swift_willThrow();
  swift_bridgeObjectRelease();
}

uint64_t sub_2610F0310(char a1)
{
  uint64_t v2 = v1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void **)(v2 + 16);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = &v12;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_2610FBA6C;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_2610A40DC;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_5;
  id v7 = _Block_copy(aBlock);
  id v8 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

id sub_2610F0498(char a1, uint64_t a2, unint64_t *a3)
{
  id v81 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910590);
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v88 = (id *)((char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_26111E778();
  uint64_t v86 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  BOOL v84 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v73 - v11;
  id v12 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v13 = (void *)sub_26111EBC8();
  id v14 = objc_msgSend(v12, sel_initWithEntityName_, v13);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = MEMORY[0x263F8E778];
  *(_OWORD *)(v15 + 16) = xmmword_261120090;
  uint64_t v17 = MEMORY[0x263F8E7C0];
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = v17;
  *(unsigned char *)(v15 + 32) = a1;
  id v18 = (void *)sub_26111EEF8();
  objc_msgSend(v14, sel_setPredicate_, v18);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2611200E0;
  id v20 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v21 = (void *)sub_26111EBC8();
  id v22 = objc_msgSend(v20, sel_initWithKey_ascending_, v21, 1);

  *(void *)(v19 + 32) = v22;
  id v23 = objc_allocWithZone(MEMORY[0x263F08B30]);
  unint64_t v24 = (void *)sub_26111EBC8();
  id v25 = objc_msgSend(v23, sel_initWithKey_ascending_, v24, 1);

  *(void *)(v19 + 40) = v25;
  uint64_t v89 = v19;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  id v26 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSortDescriptors_, v26);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2611200A0;
  uint64_t v28 = MEMORY[0x263F8D310];
  *(void *)(v27 + 32) = 1701869940;
  *(void *)(v27 + 40) = 0xE400000000000000;
  *(void *)(v27 + 88) = v28;
  *(void *)(v27 + 56) = v28;
  *(void *)(v27 + 64) = 1684632949;
  *(void *)(v27 + 72) = 0xE400000000000000;
  id v29 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setPropertiesToFetch_, v29);

  id v30 = (void *)sub_26111ED78();
  objc_msgSend(v14, sel_setRelationshipKeyPathsForPrefetching_, v30);

  id v31 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  id v32 = v31;
  unint64_t v33 = sub_26111F048();

  uint64_t v34 = v82;
  uint64_t v35 = v74;
  if (!(v33 >> 62))
  {
    uint64_t v36 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36) {
      goto LABEL_3;
    }
LABEL_24:

    return (id)swift_bridgeObjectRelease();
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v36) {
    goto LABEL_24;
  }
LABEL_3:
  id v73 = v14;
  uint64_t v76 = v36;
  unint64_t v77 = v33 & 0xC000000000000001;
  id v37 = (void (**)(char *, char *, uint64_t))(v86 + 32);
  unsigned int v87 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
  os_log_type_t v83 = (uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
  uint64_t v38 = 4;
  unint64_t v75 = v33;
  while (1)
  {
    if (v77) {
      id v39 = (id)MEMORY[0x26122DAE0](v38 - 4, v33);
    }
    else {
      id v39 = *(id *)(v33 + 8 * v38);
    }
    unint64_t v40 = v39;
    if (__OFADD__(v38 - 4, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v86 = v38 - 3;
    id v41 = objc_msgSend(v39, sel_observation);
    if (!v41) {
      break;
    }
    id v42 = v41;
    uint64_t v85 = v38;
    id v43 = objc_msgSend(v41, sel_identifier);

    id v14 = v40;
    id v44 = objc_msgSend(v40, sel_uuid);
    if (!v44) {
      goto LABEL_28;
    }
    uint64_t v45 = v44;
    id v46 = v84;
    sub_26111E768();

    id v47 = *v37;
    uint64_t v48 = v37;
    (*v37)(v35, v46, v34);
    id v49 = *v87;
    (*v87)(v35, 0, 1, v34);
    uint64_t v50 = v34;
    uint64_t v51 = *v83;
    id result = (id)(*v83)(v35, 1, v50);
    if (result == 1) {
      goto LABEL_29;
    }
    id result = objc_msgSend(v14, sel_type);
    if (result > 2) {
      goto LABEL_30;
    }
    char v53 = (char)result;
    id result = objc_msgSend(v14, sel_observation);
    if (!result) {
      goto LABEL_31;
    }
    id v54 = result;
    id v55 = objc_msgSend(result, sel_asset);

    if (v55)
    {
      unsigned __int8 v56 = v84;
      sub_26111E768();

      uint64_t v57 = v78;
      uint64_t v58 = v82;
      v47(v78, v56, v82);
      v49(v57, 0, 1, v58);
      int v59 = v51(v57, 1, v58);
      uint64_t v34 = v58;
      uint64_t v60 = (uint64_t)v57;
      uint64_t v35 = v74;
      BOOL v61 = v59 == 1;
    }
    else
    {
      BOOL v61 = 1;
      uint64_t v60 = (uint64_t)v78;
      uint64_t v34 = v82;
      v49(v78, 1, 1, v82);
    }
    sub_2610718C8(v60, &qword_26B40AC70);
    id v62 = (char *)v88 + *(int *)(v80 + 48);
    *BOOL v88 = v43;
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9105A0);
    uint64_t v64 = *(int *)(v63 + 48);
    uint64_t v65 = *(int *)(v63 + 64);
    v47(v62, v35, v34);
    v62[v64] = v53;
    v62[v65] = v61;
    unint64_t v66 = v81;
    unint64_t v67 = *v81;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v66 = v67;
    id v37 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v67 = sub_26105C050(0, *(void *)(v67 + 16) + 1, 1, v67);
      *id v81 = v67;
    }
    uint64_t v69 = v76;
    uint64_t v70 = v85;
    unint64_t v72 = *(void *)(v67 + 16);
    unint64_t v71 = *(void *)(v67 + 24);
    if (v72 >= v71 >> 1)
    {
      unint64_t v67 = sub_26105C050(v71 > 1, v72 + 1, 1, v67);
      *id v81 = v67;
    }
    *(void *)(v67 + 16) = v72 + 1;
    sub_261071274((uint64_t)v88, v67+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v72, (uint64_t *)&unk_26A910590);

    uint64_t v38 = v70 + 1;
    unint64_t v33 = v75;
    if (v86 == v69)
    {

      return (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_28:
  id result = (id)(*v87)(v35, 1, 1, v34);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2610F0D74@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_26111E778();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v79 = v6;
  uint64_t v80 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unsigned int v87 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  BOOL v88 = (char *)&v73 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  id v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v73 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v73 - v18;
  id v20 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v21 = (void *)sub_26111EBC8();
  id v22 = objc_msgSend(v20, sel_initWithEntityName_, v21);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v23 = swift_allocObject();
  long long v93 = xmmword_261120090;
  uint64_t v24 = MEMORY[0x263F8E4F0];
  *(_OWORD *)(v23 + 16) = xmmword_261120090;
  uint64_t v25 = MEMORY[0x263F8E538];
  *(void *)(v23 + 56) = v24;
  *(void *)(v23 + 64) = v25;
  *(_WORD *)(v23 + 32) = a1;
  id v26 = (void *)sub_26111EEF8();
  objc_msgSend(v22, sel_setPredicate_, v26);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = MEMORY[0x263F8D310];
  *(_OWORD *)(v27 + 16) = v93;
  *(void *)(v27 + 56) = v28;
  *(void *)(v27 + 32) = 1684632949;
  *(void *)(v27 + 40) = 0xE400000000000000;
  id v29 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setPropertiesToFetch_, v29);

  id v30 = (void *)sub_26111ED78();
  objc_msgSend(v22, sel_setRelationshipKeyPathsForPrefetching_, v30);

  id v31 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexTag();
  id v32 = v31;
  id v76 = v22;
  id v33 = v94;
  uint64_t v34 = sub_26111F048();
  if (v33)
  {

    uint64_t v75 = 0;
LABEL_3:
    unint64_t v35 = MEMORY[0x263F8EE78];
    goto LABEL_5;
  }
  unint64_t v35 = v34;
  uint64_t v75 = 0;

  if (!v35) {
    goto LABEL_3;
  }
LABEL_5:
  uint64_t v36 = v79;
  if (!(v35 >> 62))
  {
    uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v37) {
      goto LABEL_7;
    }
LABEL_43:

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE80];
LABEL_44:
    *(void *)a3 = v38;
    return result;
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_43;
  }
LABEL_7:
  uint64_t v85 = v17;
  uint64_t v78 = v14;
  uint64_t v74 = a3;
  unint64_t v86 = v35 & 0xC000000000000001;
  uint64_t v89 = (char **)(v80 + 32);
  os_log_type_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  BOOL v84 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
  uint64_t v77 = v80 + 40;
  uint64_t v38 = MEMORY[0x263F8EE80];
  a3 = 4;
  uint64_t v81 = v37;
  unint64_t v82 = v35;
  while (1)
  {
    uint64_t v41 = a3 - 4;
    if (v86)
    {
      id v42 = (id)MEMORY[0x26122DAE0](a3 - 4, v35);
      id v14 = (char *)(a3 - 3);
      if (__OFADD__(v41, 1)) {
        goto LABEL_39;
      }
    }
    else
    {
      id v42 = *(id *)(v35 + 8 * a3);
      id v14 = (char *)(a3 - 3);
      if (__OFADD__(v41, 1))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    id v94 = v42;
    id v43 = objc_msgSend(v42, sel_observation);
    if (!v43) {
      break;
    }
    id v44 = v43;
    id v45 = objc_msgSend(v43, sel_mapping);

    if (v45)
    {
      uint64_t v46 = (uint64_t)objc_msgSend(v45, sel_label);
    }
    else
    {
      uint64_t v46 = -1;
    }
    uint64_t v92 = v46;
    *(void *)&long long v93 = v38;
    unint64_t v90 = v14;
    uint64_t v91 = a3;
    uint64_t v47 = (uint64_t)v19;
    id v48 = objc_msgSend(v94, sel_uuid);
    if (!v48) {
      goto LABEL_46;
    }
    id v49 = v48;
    uint64_t v50 = v88;
    sub_26111E768();

    id v14 = (char *)v89;
    uint64_t v17 = *v89;
    uint64_t v51 = v85;
    ((void (*)(char *, char *, uint64_t))*v89)(v85, v50, v36);
    uint64_t v52 = *v84;
    (*v84)(v51, 0, 1, v36);
    a3 = (uint64_t)v83;
    char v53 = *v83;
    if ((*v83)(v51, 1, v36) == 1) {
      goto LABEL_47;
    }
    id v54 = v51;
    uint64_t v19 = (char *)v47;
    ((void (*)(uint64_t, char *, uint64_t))v17)(v47, v54, v36);
    v52((char *)v47, 0, 1, v36);
    if (v53((char *)v47, 1, v36) == 1)
    {
      sub_2610718C8(v47, &qword_26B40AC70);
      uint64_t v38 = v93;
      unint64_t v55 = sub_26105D6EC(v92);
      if (v56)
      {
        unint64_t v57 = v55;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v95 = (void *)v38;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_26107C3F8();
          uint64_t v38 = (uint64_t)v95;
        }
        uint64_t v40 = (uint64_t)v78;
        ((void (*)(char *, unint64_t, uint64_t))v17)(v78, *(void *)(v38 + 56) + *(void *)(v80 + 72) * v57, v36);
        sub_2610BDE08(v57, v38);
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = 1;
        uint64_t v40 = (uint64_t)v78;
      }
      v52((char *)v40, v39, 1, v36);
      sub_2610718C8(v40, &qword_26B40AC70);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t))v17)(v87, v47, v36);
      int v59 = (void *)v93;
      uint64_t v36 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v95 = v59;
      unint64_t v35 = v92;
      unint64_t v61 = sub_26105D6EC(v92);
      uint64_t v62 = v59[2];
      BOOL v63 = (v60 & 1) == 0;
      uint64_t v64 = v62 + v63;
      if (__OFADD__(v62, v63)) {
        goto LABEL_40;
      }
      char v65 = v60;
      if (v59[3] >= v64)
      {
        if ((v36 & 1) == 0) {
          sub_26107C3F8();
        }
      }
      else
      {
        sub_2610780FC(v64, v36);
        unint64_t v66 = sub_26105D6EC(v35);
        if ((v65 & 1) != (v67 & 1)) {
          goto LABEL_48;
        }
        unint64_t v61 = v66;
      }
      uint64_t v36 = v79;
      id v68 = v95;
      if (v65)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v80 + 40))(v95[7] + *(void *)(v80 + 72) * v61, v87, v79);
      }
      else
      {
        v95[(v61 >> 6) + 8] |= 1 << v61;
        *(void *)(v68[6] + 8 * v61) = v35;
        ((void (*)(unint64_t, char *, uint64_t))v17)(v68[7] + *(void *)(v80 + 72) * v61, v87, v36);
        uint64_t v69 = v68[2];
        BOOL v70 = __OFADD__(v69, 1);
        uint64_t v71 = v69 + 1;
        if (v70) {
          goto LABEL_41;
        }
        v68[2] = v71;
      }
      uint64_t v38 = (uint64_t)v95;

      swift_bridgeObjectRelease();
    }
    unint64_t v35 = v82;
    a3 = v91 + 1;
    if (v90 == (char *)v81)
    {

      uint64_t result = swift_bridgeObjectRelease();
      a3 = v74;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_46:
  (*v84)(v85, 1, 1, v36);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_26111F448();
  __break(1u);
  return result;
}

uint64_t sub_2610F159C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v74 = a5;
  uint64_t v80 = a4;
  LODWORD(v6) = a3;
  LODWORD(v79) = a2;
  uint64_t v69 = a1;
  BOOL v70 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A680);
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  MEMORY[0x270FA5388](v7);
  os_log_type_t v83 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v82 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (unint64_t)&v68 - v12;
  uint64_t v84 = sub_26111E778();
  uint64_t v71 = *(void *)(v84 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v84);
  uint64_t v81 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v73 = (char *)&v68 - v16;
  id v17 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v18 = (void *)sub_26111EBC8();
  id v72 = objc_msgSend(v17, sel_initWithEntityName_, v18);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2611200E0;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v20 = swift_allocObject();
  long long v76 = xmmword_261120090;
  *(_OWORD *)(v20 + 16) = xmmword_261120090;
  uint64_t v21 = MEMORY[0x263F8E4F0];
  id v22 = (__objc2_prot **)MEMORY[0x263F8E538];
  *(void *)(v20 + 56) = MEMORY[0x263F8E4F0];
  *(void *)(v20 + 64) = v22;
  *(_WORD *)(v20 + 32) = 1;
  *(void *)(v19 + 32) = sub_26111EEF8();
  *(void *)(v19 + 40) = sub_26111EEF8();
  uint64_t v86 = v19;
  sub_26111EDA8();
  if (v79) {
    goto LABEL_4;
  }
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v76;
  uint64_t v24 = MEMORY[0x263F8D750];
  *(void *)(v23 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v23 + 64) = v24;
  *(void *)(v23 + 32) = v69;
  id v25 = (id)sub_26111EEF8();
  MEMORY[0x26122D5E0]();
  if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_39;
  }
  while (1)
  {
    sub_26111EDE8();
    sub_26111EDA8();

LABEL_4:
    if ((v6 & 0x10000) == 0)
    {
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v76;
      *(void *)(v26 + 56) = v21;
      *(void *)(v26 + 64) = v22;
      *(_WORD *)(v26 + 32) = v6;
      id v27 = (id)sub_26111EEF8();
      MEMORY[0x26122D5E0]();
      if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_26111EDB8();
      }
      sub_26111EDE8();
      sub_26111EDA8();
    }
    sub_261071864(v80, v13, &qword_26B40AC70);
    uint64_t v28 = v71;
    uint64_t v29 = v84;
    uint64_t v79 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v71 + 48);
    uint64_t v80 = v71 + 48;
    if (v79(v13, 1, v84) == 1)
    {
      sub_2610718C8(v13, &qword_26B40AC70);
    }
    else
    {
      id v30 = v73;
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 32))(v73, v13, v29);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v76;
      uint64_t v32 = sub_26111E738();
      uint64_t v34 = v33;
      *(void *)(v31 + 56) = MEMORY[0x263F8D310];
      *(void *)(v31 + 64) = sub_2610FBE6C();
      *(void *)(v31 + 32) = v32;
      *(void *)(v31 + 40) = v34;
      id v35 = (id)sub_26111EEF8();
      MEMORY[0x26122D5E0]();
      if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_26111EDB8();
      }
      sub_26111EDE8();
      sub_26111EDA8();

      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
    }
    swift_bridgeObjectRetain();
    uint64_t v36 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    id v37 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v36);

    id v25 = v72;
    objc_msgSend(v72, sel_setPredicate_, v37);

    uint64_t v38 = *(void **)(v74 + 16);
    type metadata accessor for VUIndexTag();
    id v39 = v38;
    uint64_t v40 = v75;
    uint64_t v41 = sub_26111F048();
    if (v40)
    {

      goto LABEL_15;
    }
    unint64_t v13 = v41;

    if (v13 >> 62) {
      break;
    }
    uint64_t v21 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v21) {
      goto LABEL_41;
    }
LABEL_18:
    uint64_t v69 = 0;
    uint64_t v85 = MEMORY[0x263F8EE78];
    sub_261062584(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      uint64_t result = (*v75)(v82, 1, 1, v84);
LABEL_46:
      __break(1u);
      return result;
    }
    uint64_t v43 = 0;
    uint64_t v42 = v85;
    uint64_t v73 = (char *)v21;
    uint64_t v74 = v28 + 32;
    uint64_t v75 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    *(void *)&long long v76 = v13 & 0xC000000000000001;
    id v22 = &off_265576000;
    uint64_t v6 = (uint64_t)v83;
    while (v21 != v43)
    {
      if ((void)v76) {
        id v44 = (id)MEMORY[0x26122DAE0](v43, v13);
      }
      else {
        id v44 = *(id *)(v13 + 8 * v43 + 32);
      }
      id v45 = v44;
      id v46 = [v44 (SEL)v22[55]];
      if (!v46) {
        goto LABEL_43;
      }
      uint64_t v47 = v46;
      id v48 = objc_msgSend(v46, sel_mapping);

      if (v48)
      {
        uint64_t v49 = (uint64_t)objc_msgSend(v48, sel_label);
      }
      else
      {
        uint64_t v49 = -1;
      }
      *(void *)uint64_t v6 = v49;
      id v50 = [v45 (SEL)v22[55]];
      if (!v50) {
        goto LABEL_44;
      }
      uint64_t v51 = v50;
      unint64_t v52 = v13;
      unsigned __int16 v53 = (unsigned __int16)objc_msgSend(v50, sel_client);

      *(_WORD *)(v6 + 8) = v53;
      id v54 = objc_msgSend(v45, sel_uuid);
      if (!v54) {
        goto LABEL_45;
      }
      unint64_t v55 = v54;
      char v56 = v81;
      sub_26111E768();

      unint64_t v57 = *(void (**)(char *, char *, uint64_t))v74;
      uint64_t v58 = v82;
      int v59 = v56;
      uint64_t v60 = v84;
      (*(void (**)(char *, char *, uint64_t))v74)(v82, v59, v84);
      (*v75)(v58, 0, 1, v60);
      uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v79)(v58, 1, v60);
      if (result == 1) {
        goto LABEL_46;
      }
      uint64_t v62 = *(int *)(v78 + 80);
      BOOL v63 = v58;
      uint64_t v6 = (uint64_t)v83;
      v57(&v83[*(int *)(v78 + 64)], v63, v60);
      unsigned int v64 = objc_msgSend(v45, sel_type);

      *(unsigned char *)(v6 + v62) = v64 == 0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v85 = v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_261062584(0, *(void *)(v42 + 16) + 1, 1);
        uint64_t v42 = v85;
      }
      unint64_t v13 = v52;
      id v22 = &off_265576000;
      unint64_t v67 = *(void *)(v42 + 16);
      unint64_t v66 = *(void *)(v42 + 24);
      id v25 = (id)(v67 + 1);
      uint64_t v21 = (uint64_t)v73;
      if (v67 >= v66 >> 1)
      {
        sub_261062584(v66 > 1, v67 + 1, 1);
        uint64_t v42 = v85;
      }
      ++v43;
      *(void *)(v42 + 16) = v25;
      sub_261071274(v6, v42+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v67, (uint64_t *)&unk_26B40A680);
      if (v21 == v43)
      {
        swift_bridgeObjectRelease();
        id v25 = v72;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_39:
    sub_26111EDB8();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_18;
  }
LABEL_41:
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v42 = MEMORY[0x263F8EE78];
LABEL_37:

  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v70 = v42;
  return result;
}

uint64_t sub_2610F1F88@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v84 = a9;
  id v17 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v18 = (void *)sub_26111EBC8();
  unint64_t v90 = (__objc2_prot **)objc_msgSend(v17, sel_initWithEntityName_, v18);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ADF0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2611200E0;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v20 = swift_allocObject();
  long long v88 = xmmword_261120090;
  *(_OWORD *)(v20 + 16) = xmmword_261120090;
  uint64_t v21 = MEMORY[0x263F8D750];
  *(void *)(v20 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v20 + 64) = v21;
  *(void *)(v20 + 32) = a1;
  *(void *)(v19 + 32) = sub_26111EEF8();
  *(void *)(v19 + 40) = sub_26111EEF8();
  sub_26111EDA8();
  unint64_t v93 = v19;
  if (a2)
  {
    sub_26111EEF8();
    MEMORY[0x26122D5E0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_26111EDB8();
    }
    sub_26111EDE8();
    sub_26111EDA8();
    uint64_t v22 = a6;
    if ((a3 & 1) == 0)
    {
LABEL_3:
      if ((a4 & 0x10000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v22 = a6;
    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
  }
  sub_26111EEF8();
  MEMORY[0x26122D5E0]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_26111EDB8();
  }
  sub_26111EDE8();
  sub_26111EDA8();
  if ((a4 & 0x10000) != 0)
  {
LABEL_4:
    int v23 = a5;
    if ((a5 & 0x100000000) != 0) {
      goto LABEL_5;
    }
LABEL_16:
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_261120090;
    uint64_t v26 = MEMORY[0x263F8D648];
    *(void *)(v25 + 56) = MEMORY[0x263F8D5C8];
    *(void *)(v25 + 64) = v26;
    *(_DWORD *)(v25 + 32) = v23;
    sub_26111EEF8();
    MEMORY[0x26122D5E0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_26111EDB8();
    }
    sub_26111EDE8();
    sub_26111EDA8();
    if ((v22 & 0x100000000) != 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_261120090;
  *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v24 + 64) = MEMORY[0x263F8D750];
  *(void *)(v24 + 32) = (__int16)a4;
  sub_26111EEF8();
  MEMORY[0x26122D5E0]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_26111EDB8();
  }
  sub_26111EDE8();
  sub_26111EDA8();
  int v23 = a5;
  if ((a5 & 0x100000000) == 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v22 & 0x100000000) == 0)
  {
LABEL_19:
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_261120090;
    uint64_t v28 = MEMORY[0x263F8D648];
    *(void *)(v27 + 56) = MEMORY[0x263F8D5C8];
    *(void *)(v27 + 64) = v28;
    *(_DWORD *)(v27 + 32) = v22;
    sub_26111EEF8();
    MEMORY[0x26122D5E0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_26111EDB8();
    }
    sub_26111EDE8();
    sub_26111EDA8();
  }
LABEL_22:
  unint64_t v29 = (unint64_t)&off_265576000;
  id v30 = &off_265576000;
  uint64_t v31 = &off_265576000;
  if ((a7 & 1) == 0) {
    goto LABEL_29;
  }
  id v32 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v33 = (void *)sub_26111EBC8();
  id v34 = objc_msgSend(v32, sel_initWithEntityName_, v33);

  swift_bridgeObjectRetain();
  id v35 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v35);

  objc_msgSend(v34, sel_setPredicate_, v36);
  id v37 = (void *)sub_26111ED78();
  objc_msgSend(v34, sel_setRelationshipKeyPathsForPrefetching_, v37);

  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_2611200D0;
  id v39 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v40 = (void *)sub_26111EBC8();
  id v41 = objc_msgSend(v39, sel_initWithKey_ascending_, v40, 0);

  *(void *)(v38 + 32) = v41;
  sub_26111EDA8();
  sub_261071924(0, &qword_26B40A6B0);
  uint64_t v42 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v42);

  uint64_t v43 = *(void **)(a8 + 16);
  type metadata accessor for VUIndexObservation();
  id v44 = v43;
  uint64_t v45 = sub_26111F038();
  if (v89)
  {

    uint64_t v89 = 0;
    unint64_t v29 = (unint64_t)&off_265576000;
    goto LABEL_29;
  }
  uint64_t v46 = v45;

  objc_msgSend(v34, sel_setFetchLimit_, 1);
  if (v46 >= 0) {
    uint64_t v47 = v46;
  }
  else {
    uint64_t v47 = v46 + 1;
  }
  objc_msgSend(v34, sel_setFetchOffset_, v47 >> 1, v84);
  id v48 = *(id *)(a8 + 16);
  unint64_t v49 = sub_26111F048();

  unint64_t v29 = 0x265576000;
  uint64_t v89 = 0;
  if (v49 >> 62) {
    goto LABEL_61;
  }
  if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_62;
  }
LABEL_51:
  if ((v49 & 0xC000000000000001) != 0)
  {
    id v76 = (id)MEMORY[0x26122DAE0](0, v49);
  }
  else
  {
    if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_65;
    }
    id v76 = *(id *)(v49 + 32);
  }
  uint64_t v77 = v76;
  swift_bridgeObjectRelease();
  id v78 = objc_msgSend(v77, sel_mapping);

  if (v78)
  {
    objc_msgSend(v78, sel_density);
    float v80 = v79;

    if (v80 > -1.0)
    {
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = v88;
      uint64_t v82 = MEMORY[0x263F8D648];
      *(void *)(v81 + 56) = MEMORY[0x263F8D5C8];
      *(void *)(v81 + 64) = v82;
      *(float *)(v81 + 32) = v80;
      sub_26111EEF8();
      MEMORY[0x26122D5E0]();
      if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_57:
        sub_26111EDE8();
        sub_26111EDA8();

        goto LABEL_29;
      }
LABEL_65:
      sub_26111EDB8();
      goto LABEL_57;
    }
  }

  while (1)
  {
LABEL_29:
    *(void *)&long long v88 = a12;
    id v34 = a10;
    unint64_t v49 = v93;
    swift_bridgeObjectRetain();
    id v50 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(self, *(SEL *)(v29 + 624), v50);

    unint64_t v52 = (const char *)v30[131];
    id v30 = v90;
    objc_msgSend(v90, v52, v51);

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2611200A0;
    uint64_t v54 = MEMORY[0x263F8D310];
    *(void *)(v53 + 32) = 0x696669746E656469;
    *(void *)(v53 + 40) = 0xEA00000000007265;
    *(void *)(v53 + 88) = v54;
    *(void *)(v53 + 56) = v54;
    *(void *)(v53 + 64) = 0x7974696C617571;
    *(void *)(v53 + 72) = 0xE700000000000000;
    unint64_t v55 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    objc_msgSend(v90, sel_setPropertiesToFetch_, v55);

    uint64_t v56 = a10[2];
    if (v56)
    {
      uint64_t v91 = MEMORY[0x263F8EE78];
      sub_26111F2B8();
      unint64_t v57 = a10 + 5;
      do
      {
        id v58 = objc_allocWithZone(MEMORY[0x263F08B30]);
        swift_bridgeObjectRetain();
        int v59 = (void *)sub_26111EBC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v58, (SEL)v31[90], v59, 0);

        sub_26111F288();
        id v34 = *(id *)(v91 + 16);
        sub_26111F2C8();
        sub_26111F2D8();
        sub_26111F298();
        v57 += 2;
        --v56;
      }
      while (v56);
      id v30 = v90;
    }
    sub_261071924(0, &qword_26B40A6B0);
    uint64_t v60 = (void *)sub_26111ED78();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setSortDescriptors_, v60);

    objc_msgSend(v30, sel_setFetchLimit_, a11);
    objc_msgSend(v30, sel_setFetchOffset_, a12);
    unint64_t v61 = *(void **)(a8 + 16);
    type metadata accessor for VUIndexObservation();
    id v62 = v61;
    uint64_t v63 = sub_26111F048();
    uint64_t v31 = (__objc2_prot **)v89;
    if (v89)
    {

      return swift_bridgeObjectRelease();
    }
    unint64_t v29 = v63;

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_26111F348();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v65 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v89 = 0;
    if (!v65)
    {

      uint64_t v67 = MEMORY[0x263F8EE78];
      goto LABEL_48;
    }
    uint64_t v92 = MEMORY[0x263F8EE78];
    sub_26106216C(0, v65 & ~(v65 >> 63), 0);
    if ((v65 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_61:
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_51;
    }
LABEL_62:

    swift_bridgeObjectRelease();
  }
  uint64_t v66 = 0;
  uint64_t v67 = v92;
  do
  {
    if ((v29 & 0xC000000000000001) != 0) {
      uint64_t v68 = (__objc2_prot *)MEMORY[0x26122DAE0](v66, v29);
    }
    else {
      uint64_t v68 = (__objc2_prot *)*(id *)(v29 + 8 * v66 + 32);
    }
    uint64_t v69 = v68;
    id v70 = [(__objc2_prot *)v68 identifier];
    [(__objc2_prot *)v69 quality];
    int v72 = v71;

    unint64_t v74 = *(void *)(v92 + 16);
    unint64_t v73 = *(void *)(v92 + 24);
    if (v74 >= v73 >> 1) {
      sub_26106216C(v73 > 1, v74 + 1, 1);
    }
    ++v66;
    *(void *)(v92 + 16) = v74 + 1;
    uint64_t v75 = v92 + 16 * v74;
    *(void *)(v75 + 32) = v70;
    *(_DWORD *)(v75 + 40) = v72;
  }
  while (v65 != v66);

LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v84 = v67;
  return result;
}

void sub_2610F2C6C(void *a1@<X0>, char a2@<W1>, id a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, unint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, char a20,uint64_t a21,char a22)
{
  uint64_t v103 = a7;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  id v105 = &v93[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v32);
  unint64_t v104 = &v93[-v34];
  if ((a2 & 1) == 0)
  {
    uint64_t v101 = a8;
    id v35 = objc_allocWithZone(MEMORY[0x263EFF260]);
    id v36 = (void *)sub_26111EBC8();
    id v37 = objc_msgSend(v35, sel_initWithEntityName_, v36);

    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = MEMORY[0x263F8D6C8];
    uint64_t v40 = MEMORY[0x263F8D750];
    *(_OWORD *)(v38 + 16) = xmmword_2611200A0;
    *(void *)(v38 + 56) = v39;
    *(void *)(v38 + 64) = v40;
    *(void *)(v38 + 32) = a1;
    uint64_t v41 = MEMORY[0x263F8E538];
    *(void *)(v38 + 96) = MEMORY[0x263F8E4F0];
    *(void *)(v38 + 104) = v41;
    *(_WORD *)(v38 + 72) = (_WORD)a3;
    uint64_t v42 = (void *)sub_26111EEF8();
    objc_msgSend(v37, sel_setPredicate_, v42);

    objc_msgSend(v37, sel_setFetchLimit_, 1);
    uint64_t v43 = *(void **)(a4 + 16);
    type metadata accessor for VUIndexObservation();
    id v44 = v43;
    uint64_t v45 = sub_26111F048();
    if (v22)
    {

      return;
    }
    unint64_t v55 = v45;

    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_26111F348();
      swift_bridgeObjectRelease();
      a8 = v101;
      if (v84) {
        goto LABEL_13;
      }
    }
    else
    {
      a8 = v101;
      if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        uint64_t v98 = a9;
        int v102 = (int)a3;
        if ((v55 & 0xC000000000000001) != 0)
        {
          id v56 = (id)MEMORY[0x26122DAE0](0, v55);
        }
        else
        {
          if (!*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_68;
          }
          id v56 = *(id *)(v55 + 32);
        }
        a3 = v56;

        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v100 = a4;
        unint64_t v96 = a8 >> 60;
        if (a8 >> 60 == 15) {
          unint64_t v57 = 0;
        }
        else {
          unint64_t v57 = (void *)sub_26111E678();
        }
        uint64_t v99 = a14;
        objc_msgSend(a3, sel_setEmbedding_, v57);

        unint64_t v95 = a11 >> 60;
        if (a11 >> 60 == 15) {
          id v58 = 0;
        }
        else {
          id v58 = (void *)sub_26111E678();
        }
        uint64_t v101 = a17;
        objc_msgSend(a3, sel_setContextualEmbedding_, v58);

        uint64_t v97 = a1;
        objc_msgSend(a3, sel_setIdentifier_, a1);
        uint64_t v103 = a12;
        unsigned int v94 = a12;
        objc_msgSend(a3, sel_setType_);
        int v59 = v104;
        sub_261071864(a13, (uint64_t)v104, &qword_26B40AC70);
        uint64_t v60 = sub_26111E778();
        uint64_t v61 = *(void *)(v60 - 8);
        id v62 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v61 + 48);
        uint64_t v63 = 0;
        if (v62(v59, 1, v60) != 1)
        {
          uint64_t v63 = (void *)sub_26111E748();
          (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v59, v60);
        }
        LODWORD(v106) = a18;
        objc_msgSend(a3, sel_setMoment_, v63);

        unsigned int v64 = v105;
        sub_261071864(v99, (uint64_t)v105, &qword_26B40AC70);
        if (v62(v64, 1, v60) == 1)
        {
          uint64_t v65 = 0;
        }
        else
        {
          uint64_t v66 = v64;
          uint64_t v65 = (void *)sub_26111E748();
          (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v66, v60);
        }
        objc_msgSend(a3, sel_setAsset_, v65);

        if (a15 == 3) {
          unsigned __int8 v67 = 2;
        }
        else {
          unsigned __int8 v67 = a15;
        }
        objc_msgSend(a3, sel_setSource_, v67);
        LODWORD(v68) = a16;
        if ((a16 & 0x100000000) != 0) {
          *(float *)&double v68 = 1.0;
        }
        objc_msgSend(a3, sel_setConfidence_, v68);
        LODWORD(v69) = v101;
        if ((v101 & 0x100000000) != 0) {
          *(float *)&double v69 = 1.0;
        }
        objc_msgSend(a3, sel_setQuality_, v69);
        objc_msgSend(a3, sel_setIsPrimary_, v106 & 1);
        objc_msgSend(a3, sel_setClient_, (__int16)v102);
        type metadata accessor for VUIndexMapping();
        uint64_t v70 = v100;
        id v71 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v100 + 16));
        objc_msgSend(a3, sel_setMapping_, v71);

        id v72 = objc_allocWithZone(MEMORY[0x263EFF260]);
        unint64_t v73 = (void *)sub_26111EBC8();
        id v37 = objc_msgSend(v72, sel_initWithEntityName_, v73);

        sub_261071924(0, &qword_26B40ABC8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_261120090;
        uint64_t v75 = MEMORY[0x263F8D750];
        *(void *)(v74 + 56) = MEMORY[0x263F8D6C8];
        *(void *)(v74 + 64) = v75;
        *(void *)(v74 + 32) = v103;
        id v76 = (void *)sub_26111EEF8();
        objc_msgSend(v37, sel_setPredicate_, v76);

        uint64_t v77 = *(void **)(v70 + 16);
        type metadata accessor for VUIndexSubset();
        id v78 = v77;
        uint64_t v79 = sub_26111F048();
        if (v22)
        {

LABEL_37:
          return;
        }
        unint64_t v55 = v79;

        if (v55 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v89 = sub_26111F348();
          swift_bridgeObjectRelease();
          a9 = v97;
          if (v89)
          {
LABEL_40:
            if ((v55 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              id v80 = *(id *)(v55 + 32);
              goto LABEL_43;
            }
LABEL_68:
            id v80 = (id)MEMORY[0x26122DAE0](0, v55);
LABEL_43:
            uint64_t v81 = v80;
            char v82 = v106;
            swift_bridgeObjectRelease();
            id v83 = v81;
LABEL_51:
            unint64_t v90 = v95;
            BOOL v92 = v96 < 0xF || v95 > 0xE;
            if ((a20 & 1) == 0 && v92) {
              objc_msgSend(v83, sel_setEmbeddingRevision_, a19);
            }
            if (v90 <= 0xE && (a22 & 1) == 0) {
              objc_msgSend(v83, sel_setContextualEmbeddingRevision_, a21);
            }
            if (v82) {
              objc_msgSend(v83, sel_setStaleObservations_, 1);
            }

            *uint64_t v98 = a9;
            return;
          }
        }
        else
        {
          a9 = v97;
          if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_40;
          }
        }
        swift_bridgeObjectRelease();
        id v83 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v100 + 16));
        objc_msgSend(v83, sel_setType_, v94);
        char v82 = v106;
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_26111EAC8();
    os_log_type_t v86 = sub_26111EF58();
    if (os_log_type_enabled(v85, v86))
    {
      unsigned int v87 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unsigned int v87 = 134217984;
      unint64_t v107 = (unint64_t)a1;
      sub_26111F0D8();
      _os_log_impl(&dword_261042000, v85, v86, "Unable to update embedding: no existing embedding available for %ld", v87, 0xCu);
      MEMORY[0x26122E4F0](v87, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *long long v88 = 2;
    swift_willThrow();
    goto LABEL_37;
  }
  int v102 = (int)a3;
  uint64_t v98 = a9;
  if ((a6 & 1) == 0)
  {
LABEL_10:
    type metadata accessor for VUIndexObservation();
    a3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(a4 + 16));
    a1 = a5;
    goto LABEL_17;
  }
  uint64_t v101 = a8;
  sub_261071924(0, &qword_26B40ABC8);
  long long v106 = xmmword_261120090;
  while (1)
  {
    do
    {
      unint64_t v107 = 0;
      MEMORY[0x26122E510](&v107, 8);
    }
    while (((0x7FFFFFFFFFFFFFFELL * v107) & 0xFFFFFFFFFFFFFFFCLL) == 0);
    a5 = (void *)(((v107 * (unsigned __int128)0x7FFFFFFFFFFFFFFEuLL) >> 64) + 1);
    id v46 = objc_allocWithZone(MEMORY[0x263EFF260]);
    uint64_t v47 = (void *)sub_26111EBC8();
    id v48 = objc_msgSend(v46, sel_initWithEntityName_, v47);

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v106;
    *(void *)(v49 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v49 + 64) = MEMORY[0x263F8D750];
    *(void *)(v49 + 32) = a5;
    id v50 = (void *)sub_26111EEF8();
    objc_msgSend(v48, sel_setPredicate_, v50);

    objc_msgSend(v48, sel_setFetchLimit_, 1);
    id v51 = *(void **)(a4 + 16);
    type metadata accessor for VUIndexObservation();
    id v52 = v51;
    uint64_t v53 = sub_26111F038();
    if (v22) {
      break;
    }
    uint64_t v54 = v53;

    if (!v54)
    {
      a8 = v101;
      goto LABEL_10;
    }
  }
}

void sub_2610F3774(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v11 = (void *)sub_26111EBC8();
  id v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v13 + 16) = xmmword_261120090;
  uint64_t v15 = MEMORY[0x263F8D750];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  *(void *)(v13 + 32) = a1;
  uint64_t v16 = (void *)sub_26111EEF8();
  objc_msgSend(v12, sel_setPredicate_, v16);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2611200A0;
  uint64_t v18 = MEMORY[0x263F8D310];
  *(void *)(v17 + 32) = 0x6E69646465626D65;
  *(void *)(v17 + 40) = 0xE900000000000067;
  *(void *)(v17 + 88) = v18;
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = 0x7465737361;
  *(void *)(v17 + 72) = 0xE500000000000000;
  uint64_t v19 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPropertiesToFetch_, v19);

  if (a2)
  {
    id v20 = objc_msgSend(v12, sel_propertiesToFetch);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = (void *)sub_26111ED88();

      uint64_t v55 = v18;
      *(void *)&long long v54 = 0xD000000000000013;
      *((void *)&v54 + 1) = 0x8000000261122570;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_26105CD84(0, v22[2] + 1, 1, v22);
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1) {
        uint64_t v22 = sub_26105CD84((void *)(v23 > 1), v24 + 1, 1, v22);
      }
      v22[2] = v24 + 1;
      sub_261070F60(&v54, &v22[4 * v24 + 4]);
      uint64_t v25 = (void *)sub_26111ED78();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setPropertiesToFetch_, v25);
    }
    else
    {
      objc_msgSend(v12, sel_setPropertiesToFetch_, 0);
    }
  }
  objc_msgSend(v12, sel_setFetchLimit_, 1);
  uint64_t v26 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexObservation();
  id v27 = v26;
  uint64_t v28 = v56;
  uint64_t v29 = sub_26111F048();
  if (v28)
  {

LABEL_11:
    *(_OWORD *)a4 = xmmword_261120FE0;
    if (a2)
    {
LABEL_12:

      *(_OWORD *)(a4 + 16) = xmmword_261120FE0;
LABEL_15:
      uint64_t v30 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A910530) + 64);
      uint64_t v31 = sub_26111E778();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
      return;
    }
    *(_OWORD *)(a4 + 16) = xmmword_261120FE0;
LABEL_14:

    goto LABEL_15;
  }
  unint64_t v32 = v29;

  if (!(v32 >> 62))
  {
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v51) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v32 & 0xC000000000000001) != 0)
  {
    id v33 = (id)MEMORY[0x26122DAE0](0, v32);
  }
  else
  {
    if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v33 = *(id *)(v32 + 32);
  }
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v34, sel_embedding);
  if (!v35)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0xF000000000000000;
    if (a2) {
      goto LABEL_23;
    }
LABEL_27:
    *(_OWORD *)(a4 + 16) = xmmword_261120FE0;
    uint64_t v45 = (uint64_t)v53;
    if (!v34) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
  id v36 = v35;
  uint64_t v37 = sub_26111E688();
  uint64_t v39 = v38;

  *(void *)a4 = v37;
  *(void *)(a4 + 8) = v39;
  if ((a2 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_23:
  if (!v34) {
    goto LABEL_12;
  }
  id v40 = objc_msgSend(v34, sel_contextualEmbedding);
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = sub_26111E688();
    unint64_t v44 = v43;
  }
  else
  {
    uint64_t v42 = 0;
    unint64_t v44 = 0xF000000000000000;
  }
  uint64_t v45 = (uint64_t)v53;
  *(void *)(a4 + 16) = v42;
  *(void *)(a4 + 24) = v44;
LABEL_31:
  id v46 = objc_msgSend(v34, sel_asset);
  if (v46)
  {
    uint64_t v47 = v46;
    sub_26111E768();

    uint64_t v48 = sub_26111E778();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v45, 0, 1, v48);
  }
  else
  {

    uint64_t v49 = sub_26111E778();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v45, 1, 1, v49);
  }
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910530);
  sub_261071274(v45, a4 + *(int *)(v50 + 64), &qword_26B40AC70);
}

void sub_2610F3D84(void *a1, char a2, __int16 a3)
{
  uint64_t v4 = v3;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2611200B0;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  uint64_t v12 = sub_2610E5AC0((void (*)(char *, char *))sub_2610F3F60, 0, v9, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v10, MEMORY[0x263F8E658], v11);
  *(void *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AD50);
  *(void *)(v8 + 64) = sub_2610712F0((unint64_t *)&unk_26A910580, (uint64_t *)&unk_26B40AD50);
  *(void *)(v8 + 32) = v12;
  uint64_t v13 = MEMORY[0x263F8E7C0];
  *(void *)(v8 + 96) = MEMORY[0x263F8E778];
  *(void *)(v8 + 104) = v13;
  uint64_t v14 = MEMORY[0x263F8E4F0];
  *(unsigned char *)(v8 + 72) = a2;
  uint64_t v15 = MEMORY[0x263F8E538];
  *(void *)(v8 + 136) = v14;
  *(void *)(v8 + 144) = v15;
  *(_WORD *)(v8 + 112) = a3;
  uint64_t v17 = (void *)sub_26111EEF8();
  id v16 = *(id *)(v4 + 16);
  sub_26111F028();
}

uint64_t sub_2610F3F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26111E738();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_2610F3F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = 0x263EFF000uLL;
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v7 = (void *)sub_26111EBC8();
  uint64_t v8 = (uint64_t)&off_265576000;
  id v9 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  objc_msgSend(v9, sel_setPredicate_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A6E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2611200A0;
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(v10 + 32) = 1701869940;
  *(void *)(v10 + 40) = 0xE400000000000000;
  *(void *)(v10 + 88) = v11;
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = 0x72616D6972507369;
  *(void *)(v10 + 72) = 0xE900000000000079;
  uint64_t v12 = (void *)sub_26111ED78();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setPropertiesToFetch_, v12);

  uint64_t v78 = MEMORY[0x263F8EE88];
  uint64_t v77 = MEMORY[0x263F8EE88];
  uint64_t v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  id v14 = v13;
  uint64_t v15 = sub_26111F048();
  if (v2)
  {

    return;
  }
  unint64_t v16 = v15;
  uint64_t v75 = a2;

  if (v16 >> 62) {
    goto LABEL_22;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = v9; v17; uint64_t i = v9)
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v18 = (v16 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x26122DAE0](v8 - 4, v16)
          : *(id *)(v16 + 8 * v8);
      uint64_t v19 = v18;
      id v9 = (id)(v8 - 3);
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v18, sel_isPrimary))
      {
        uint64_t v20 = (uint64_t)objc_msgSend(v19, sel_type);
        if ((v20 & 0x80000000) != 0 || v20 >= 0x100) {
          goto LABEL_93;
        }
        sub_26105F1B4(&v76, v20);
      }
      id v21 = objc_msgSend(v19, sel_tags);
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v5 = (uint64_t)objc_msgSend(v21, sel_count);

        if (v5 >= 1)
        {
          uint64_t v23 = (uint64_t)objc_msgSend(v19, sel_type);
          if ((v23 & 0x80000000) != 0 || v23 >= 0x100) {
            goto LABEL_93;
          }
          sub_26105F1B4(&v76, v23);
        }
      }
      objc_msgSend(*(id *)(v75 + 16), sel_deleteObject_, v19);

      ++v8;
      if (v9 == (id)v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v78;
        uint64_t v5 = 0x263EFF000;
        uint64_t v8 = 0x265576000;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x263F8EE88];
LABEL_24:
  int64_t v25 = 0;
  uint64_t v71 = v24 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v24 + 56);
  int64_t v73 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      unint64_t v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v31 = v30 | (v25 << 6);
      goto LABEL_42;
    }
    BOOL v32 = __OFADD__(v25++, 1);
    if (v32) {
      goto LABEL_88;
    }
    if (v25 >= v73) {
      break;
    }
    unint64_t v33 = *(void *)(v71 + 8 * v25);
    if (!v33)
    {
      int64_t v34 = v25 + 1;
      if (v25 + 1 >= v73) {
        break;
      }
      unint64_t v33 = *(void *)(v71 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v25 + 2;
        if (v25 + 2 >= v73) {
          break;
        }
        unint64_t v33 = *(void *)(v71 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v25 + 3;
          if (v25 + 3 >= v73) {
            break;
          }
          unint64_t v33 = *(void *)(v71 + 8 * v34);
          if (!v33)
          {
            while (1)
            {
              int64_t v25 = v34 + 1;
              if (__OFADD__(v34, 1)) {
                goto LABEL_91;
              }
              if (v25 >= v73) {
                goto LABEL_55;
              }
              unint64_t v33 = *(void *)(v71 + 8 * v25);
              ++v34;
              if (v33) {
                goto LABEL_41;
              }
            }
          }
        }
      }
      int64_t v25 = v34;
    }
LABEL_41:
    unint64_t v28 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v25 << 6);
LABEL_42:
    uint64_t v35 = v24;
    uint64_t v36 = *(unsigned __int8 *)(*(void *)(v24 + 48) + v31);
    id v37 = objc_allocWithZone(*(Class *)(v5 + 608));
    uint64_t v38 = (void *)sub_26111EBC8();
    id v39 = objc_msgSend(v37, *(SEL *)(v8 + 1040), v38);

    sub_261071924(0, &qword_26B40ABC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_261120090;
    *(void *)(v40 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v40 + 64) = MEMORY[0x263F8D750];
    *(void *)(v40 + 32) = v36;
    uint64_t v41 = (void *)sub_26111EEF8();
    objc_msgSend(v39, sel_setPredicate_, v41);

    uint64_t v42 = *(void **)(v75 + 16);
    type metadata accessor for VUIndexSubset();
    id v43 = v42;
    unint64_t v44 = sub_26111F048();

    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_26111F348();
      swift_bridgeObjectRelease();
      if (!v47)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v75 + 16));
        objc_msgSend(v29, sel_setType_, v36);
        goto LABEL_28;
      }
    }
    else if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_27;
    }
    if ((v44 & 0xC000000000000001) != 0)
    {
      id v45 = (id)MEMORY[0x26122DAE0](0, v44);
    }
    else
    {
      if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      id v45 = *(id *)(v44 + 32);
    }
    id v46 = v45;
    swift_bridgeObjectRelease();
    id v29 = v46;
LABEL_28:
    objc_msgSend(v29, sel_setStaleObservations_, 1);

    uint64_t v5 = 0x263EFF000uLL;
    uint64_t v8 = (uint64_t)&off_265576000;
    uint64_t v24 = v35;
  }
LABEL_55:
  swift_release();
  int64_t v48 = 0;
  uint64_t v49 = v77;
  uint64_t v72 = v77 + 56;
  uint64_t v50 = 1 << *(unsigned char *)(v77 + 32);
  uint64_t v51 = -1;
  if (v50 < 64) {
    uint64_t v51 = ~(-1 << v50);
  }
  unint64_t v52 = v51 & *(void *)(v77 + 56);
  int64_t v74 = (unint64_t)(v50 + 63) >> 6;
  while (2)
  {
    if (v52)
    {
      unint64_t v54 = __clz(__rbit64(v52));
      v52 &= v52 - 1;
      unint64_t v55 = v54 | (v48 << 6);
      goto LABEL_73;
    }
    BOOL v32 = __OFADD__(v48++, 1);
    if (v32) {
      goto LABEL_90;
    }
    if (v48 >= v74)
    {
LABEL_86:

      swift_release();
      return;
    }
    unint64_t v56 = *(void *)(v72 + 8 * v48);
    if (v56)
    {
LABEL_72:
      unint64_t v52 = (v56 - 1) & v56;
      unint64_t v55 = __clz(__rbit64(v56)) + (v48 << 6);
LABEL_73:
      uint64_t v58 = *(unsigned __int8 *)(*(void *)(v49 + 48) + v55);
      id v59 = objc_allocWithZone(*(Class *)(v5 + 608));
      uint64_t v60 = (void *)sub_26111EBC8();
      id v61 = objc_msgSend(v59, *(SEL *)(v8 + 1040), v60);

      sub_261071924(0, &qword_26B40ABC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_261120090;
      *(void *)(v62 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v62 + 64) = MEMORY[0x263F8D750];
      *(void *)(v62 + 32) = v58;
      uint64_t v63 = (void *)sub_26111EEF8();
      objc_msgSend(v61, sel_setPredicate_, v63);

      unsigned int v64 = *(void **)(v75 + 16);
      type metadata accessor for VUIndexSubset();
      id v65 = v64;
      unint64_t v66 = sub_26111F048();

      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_26111F348();
        swift_bridgeObjectRelease();
        if (v69) {
          goto LABEL_75;
        }
      }
      else if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_75:
        if ((v66 & 0xC000000000000001) != 0)
        {
          id v67 = (id)MEMORY[0x26122DAE0](0, v66);
        }
        else
        {
          if (!*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_89;
          }
          id v67 = *(id *)(v66 + 32);
        }
        double v68 = v67;
        swift_bridgeObjectRelease();
        id v53 = v68;
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      id v53 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v75 + 16));
      objc_msgSend(v53, sel_setType_, v58);
LABEL_59:
      objc_msgSend(v53, sel_setStaleTags_, 1);

      uint64_t v5 = 0x263EFF000uLL;
      uint64_t v8 = (uint64_t)&off_265576000;
      continue;
    }
    break;
  }
  int64_t v57 = v48 + 1;
  if (v48 + 1 >= v74) {
    goto LABEL_86;
  }
  unint64_t v56 = *(void *)(v72 + 8 * v57);
  if (v56) {
    goto LABEL_71;
  }
  int64_t v57 = v48 + 2;
  if (v48 + 2 >= v74) {
    goto LABEL_86;
  }
  unint64_t v56 = *(void *)(v72 + 8 * v57);
  if (v56) {
    goto LABEL_71;
  }
  int64_t v57 = v48 + 3;
  if (v48 + 3 >= v74) {
    goto LABEL_86;
  }
  unint64_t v56 = *(void *)(v72 + 8 * v57);
  if (v56)
  {
LABEL_71:
    int64_t v48 = v57;
    goto LABEL_72;
  }
  while (1)
  {
    int64_t v48 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v48 >= v74) {
      goto LABEL_86;
    }
    unint64_t v56 = *(void *)(v72 + 8 * v48);
    ++v57;
    if (v56) {
      goto LABEL_72;
    }
  }
LABEL_92:
  __break(1u);
LABEL_93:
  sub_26111F328();
  __break(1u);
}

void sub_2610F4A18(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  double v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v62 - v8;
  id v10 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v11 = (void *)sub_26111EBC8();
  uint64_t v12 = (uint64_t)objc_msgSend(v10, sel_initWithEntityName_, v11);

  uint64_t v13 = sub_261071924(0, &qword_26B40ABC8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2611200A0;
  uint64_t v16 = sub_26111E738();
  uint64_t v18 = v17;
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  *(void *)(v15 + 64) = sub_2610FBE6C();
  uint64_t v19 = MEMORY[0x263F8E4F0];
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  uint64_t v20 = MEMORY[0x263F8E538];
  *(void *)(v15 + 96) = v19;
  *(void *)(v15 + 104) = v20;
  *(_WORD *)(v15 + 72) = a2;
  id v21 = (void *)sub_26111EEF8();
  objc_msgSend((id)v12, sel_setPredicate_, v21);

  uint64_t v22 = *(void **)(a3 + 16);
  type metadata accessor for VUIndexTag();
  id v23 = v22;
  uint64_t v24 = v72;
  unint64_t v25 = sub_26111F048();
  uint64_t v26 = v24;

  if (v24)
  {

    return;
  }
  uint64_t v65 = v14;
  uint64_t v66 = v13;
  uint64_t v72 = a3;
  unint64_t v67 = v25;
  if (v25 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_5;
    }
LABEL_37:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v27) {
    goto LABEL_37;
  }
LABEL_5:
  uint64_t v63 = v26;
  id v64 = (id)v12;
  unint64_t v28 = v67;
  uint64_t v70 = v27;
  unint64_t v71 = v67 & 0xC000000000000001;
  uint64_t v12 = 4;
  do
  {
    uint64_t v26 = v12 - 4;
    if (v71) {
      id v30 = (id)MEMORY[0x26122DAE0](v12 - 4, v28);
    }
    else {
      id v30 = *(id *)(v28 + 8 * v12);
    }
    unint64_t v31 = v30;
    uint64_t v32 = v12 - 3;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v33 = objc_msgSend(v30, sel_observation);
    int64_t v34 = v33;
    if (v33)
    {
      id v69 = objc_msgSend(v33, sel_type);
    }
    else
    {
      id v69 = 0;
    }
    id v35 = objc_msgSend(v31, sel_observation);
    if (v35)
    {
      uint64_t v36 = v35;
      id v37 = objc_msgSend(v35, sel_asset);

      if (v37)
      {
        uint64_t v38 = (uint64_t)v68;
        sub_26111E768();

        uint64_t v39 = sub_26111E778();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
      }
      else
      {
        uint64_t v39 = sub_26111E778();
        uint64_t v38 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v68, 1, 1, v39);
      }
      sub_261071274(v38, (uint64_t)v9, &qword_26B40AC70);
      sub_26111E778();
      int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v9, 1, v39);
      unint64_t v28 = v67;
      if (v41 != 1)
      {
        sub_2610718C8((uint64_t)v9, &qword_26B40AC70);
        id v29 = *(id *)(v72 + 16);
        objc_msgSend(v29, sel_deleteObject_, v31);
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v40 = sub_26111E778();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v9, 1, 1, v40);
    }
    sub_2610718C8((uint64_t)v9, &qword_26B40AC70);
    id v42 = *(id *)(v72 + 16);
    id v43 = objc_msgSend(v31, sel_observation);
    if (!v43) {
      goto LABEL_43;
    }
    id v29 = v43;
    objc_msgSend(v42, sel_deleteObject_, v43);

LABEL_7:
    ++v12;
  }
  while (v32 != v70);
  swift_bridgeObjectRelease();
  if (!v34)
  {

    return;
  }
  id v44 = v64;
  id v45 = v69;
  if ((v69 & 0x80000000) == 0)
  {
    uint64_t v46 = v72;
    if (v69 < 0x100)
    {
      id v47 = objc_allocWithZone(MEMORY[0x263EFF260]);
      int64_t v48 = (void *)sub_26111EBC8();
      id v49 = objc_msgSend(v47, sel_initWithEntityName_, v48);

      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_261120090;
      uint64_t v51 = MEMORY[0x263F8D750];
      *(void *)(v50 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v50 + 64) = v51;
      *(void *)(v50 + 32) = (unsigned __int16)v45;
      unint64_t v52 = (void *)sub_26111EEF8();
      objc_msgSend(v49, sel_setPredicate_, v52);

      id v53 = *(void **)(v46 + 16);
      type metadata accessor for VUIndexSubset();
      id v54 = v53;
      uint64_t v55 = v63;
      uint64_t v56 = sub_26111F048();
      if (v55)
      {

        return;
      }
      unint64_t v57 = v56;

      if (!(v57 >> 62))
      {
        if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
LABEL_39:
        swift_bridgeObjectRelease();
        id v60 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v46 + 16));
        objc_msgSend(v60, sel_setType_, v45);
LABEL_40:
        objc_msgSend(v60, sel_setStaleTags_, 1);

        return;
      }
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_26111F348();
      swift_bridgeObjectRelease();
      if (!v61) {
        goto LABEL_39;
      }
LABEL_31:
      if ((v57 & 0xC000000000000001) != 0)
      {
        id v58 = (id)MEMORY[0x26122DAE0](0, v57);
        goto LABEL_34;
      }
      if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v58 = *(id *)(v57 + 32);
LABEL_34:
        id v59 = v58;
        swift_bridgeObjectRelease();
        id v60 = v59;
        goto LABEL_40;
      }
      __break(1u);
LABEL_43:
      __break(1u);
    }
  }
  sub_26111F328();
  __break(1u);
}

uint64_t sub_2610F5200(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v11 = MEMORY[0x263F8EE80];
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2611200A0;
  uint64_t v7 = MEMORY[0x263F8D750];
  *(void *)(v6 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  *(void *)(v6 + 104) = sub_2610712F0((unint64_t *)&qword_26B40A370, (uint64_t *)&unk_26B40A360);
  *(void *)(v6 + 72) = a2;
  swift_bridgeObjectRetain();
  id v10 = (void *)sub_26111EEF8();
  id v8 = *(id *)(v3 + 16);
  sub_26111F028();

  return v11;
}

uint64_t sub_2610F53DC(uint64_t a1, id a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  id v10 = objc_msgSend(a2, sel_partner);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a3;
  *a3 = 0x8000000000000000;
  sub_26107EDD4((uint64_t)v10, a1, isUniquelyReferenced_nonNull_native);
  *a3 = v19;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_similarity);
  float v13 = v12;
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *a4;
  *a4 = 0x8000000000000000;
  sub_26107F4F4(a1, v14, v13);
  *a4 = v20;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_density);
  float v16 = v15;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *a5;
  *a5 = 0x8000000000000000;
  sub_26107F4F4(a1, v17, v16);
  *a5 = v21;

  return swift_bridgeObjectRelease();
}

uint64_t sub_2610F5528(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_261120090;
  uint64_t v5 = MEMORY[0x263F8D750];
  *(void *)(v4 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = a1;
  id v8 = (void *)sub_26111EEF8();
  id v6 = *(id *)(v2 + 16);
  sub_26111F028();

  return 0;
}

unint64_t sub_2610F56CC(unint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = result;
  if (*(void *)(a3 + 16)
    && (uint64_t result = sub_26105D6EC(result), (v16 & 1) != 0)
    && (float v17 = *(float *)(*(void *)(a3 + 56) + 4 * result),
        uint64_t result = (unint64_t)objc_msgSend(a2, sel_density),
        v17 != *(float *)&v18))
  {
    *(float *)&double v18 = v17;
    uint64_t result = (unint64_t)objc_msgSend(a2, sel_setDensity_, v18);
    int v19 = 1;
    if (!*(void *)(a4 + 16)) {
      goto LABEL_9;
    }
  }
  else
  {
    int v19 = 0;
    if (!*(void *)(a4 + 16)) {
      goto LABEL_9;
    }
  }
  uint64_t result = sub_26105D6EC(v14);
  if (v20)
  {
    uint64_t v21 = *(void *)(*(void *)(a4 + 56) + 8 * result);
    uint64_t result = (unint64_t)objc_msgSend(a2, sel_partner);
    if (v21 != result)
    {
      uint64_t result = (unint64_t)objc_msgSend(a2, sel_setPartner_, v21);
      int v19 = 1;
    }
  }
LABEL_9:
  if (*(void *)(a5 + 16))
  {
    uint64_t result = sub_26105D6EC(v14);
    if (v22)
    {
      float v23 = *(float *)(*(void *)(a5 + 56) + 4 * result);
      uint64_t result = (unint64_t)objc_msgSend(a2, sel_similarity);
      if (v23 != *(float *)&v24)
      {
        *(float *)&double v24 = v23;
        uint64_t result = (unint64_t)objc_msgSend(a2, sel_setSimilarity_, v24);
        int v19 = 1;
      }
    }
  }
  if (*(void *)(a6 + 16))
  {
    uint64_t result = sub_26105D6EC(v14);
    if (v25)
    {
      uint64_t v26 = *(void *)(*(void *)(a6 + 56) + 8 * result);
      uint64_t result = (unint64_t)objc_msgSend(a2, sel_label);
      if (v26 != result)
      {
        uint64_t result = (unint64_t)objc_msgSend(a2, sel_setLabel_, v26);
        int v19 = 1;
      }
    }
  }
  if (*(void *)(a7 + 16)
    && (uint64_t result = sub_26105D6EC(v14), (v27 & 1) != 0)
    && (float v28 = *(float *)(*(void *)(a7 + 56) + 4 * result),
        uint64_t result = (unint64_t)objc_msgSend(a2, sel_diversity),
        v28 != *(float *)&v29))
  {
    *(float *)&double v29 = v28;
    uint64_t result = (unint64_t)objc_msgSend(a2, sel_setDiversity_, v29);
  }
  else if (!v19)
  {
    return result;
  }
  if (__OFADD__(*a8, 1)) {
    __break(1u);
  }
  else {
    ++*a8;
  }
  return result;
}

void sub_2610F58E4(uint64_t a1, void *a2, int a3, uint64_t a4, int a5)
{
  int v91 = a5;
  uint64_t v92 = a4;
  LODWORD(v90) = a3;
  uint64_t v7 = sub_26111E778();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  uint64_t v94 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v85 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9105B0);
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = (uint64_t)v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v86 = (uint64_t)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v16 = (char *)v80 - v15;
  MEMORY[0x270FA5388](v14);
  double v18 = (char *)v80 - v17;
  id v19 = objc_allocWithZone(MEMORY[0x263EFF260]);
  char v20 = (void *)sub_26111EBC8();
  id v21 = objc_msgSend(v19, sel_initWithEntityName_, v20);

  uint64_t v22 = sub_261071924(0, &qword_26B40ABC8);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8D6C8];
  long long v89 = xmmword_261120090;
  *(_OWORD *)(v24 + 16) = xmmword_261120090;
  uint64_t v26 = MEMORY[0x263F8D750];
  *(void *)(v24 + 56) = v25;
  *(void *)(v24 + 64) = v26;
  *(void *)(v24 + 32) = a1;
  char v27 = (void *)sub_26111EEF8();
  objc_msgSend(v21, sel_setPredicate_, v27);

  float v28 = (void *)sub_26111ED78();
  objc_msgSend(v21, sel_setRelationshipKeyPathsForPrefetching_, v28);

  objc_msgSend(v21, sel_setFetchLimit_, 1);
  double v29 = (void *)a2[2];
  type metadata accessor for VUIndexObservation();
  id v30 = v29;
  id v31 = v95;
  uint64_t v32 = sub_26111F048();
  id v95 = v31;
  if (v31)
  {

    return;
  }
  unint64_t v33 = v32;
  id v83 = v16;
  uint64_t v84 = v18;
  v80[1] = v22;
  id v81 = v21;
  uint64_t v34 = v93;
  v80[0] = v23;
  char v82 = a2;

  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v36 = (void *)v34;
  id v37 = (void *)v94;
  id v38 = v95;
  uint64_t v40 = (uint64_t)v83;
  uint64_t v39 = (uint64_t)v84;
  if (v35)
  {
    if ((v33 & 0xC000000000000001) != 0)
    {
      id v41 = (id)MEMORY[0x26122DAE0](0, v33);
    }
    else
    {
      if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_44;
      }
      id v41 = *(id *)(v33 + 32);
    }
    id v42 = v41;
    swift_bridgeObjectRelease();
    id v43 = (void *)sub_2610F648C();
    id v44 = &off_265576000;
    id v45 = v42;
    if (!v43)
    {
      uint64_t v47 = v90;
      goto LABEL_16;
    }
    id v46 = v43;
    LODWORD(v93) = v90;
    if (v90 == 1)
    {

      uint64_t v47 = 1;
LABEL_16:
      type metadata accessor for VUIndexTag();
      uint64_t v36 = v82;
      id v46 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v82[2]);
      objc_msgSend(v46, sel_setObservation_, v42);
      objc_msgSend(v46, sel_setResolved_, 0);

      LOBYTE(v52) = v91;
      id v53 = &off_265576000;
      goto LABEL_17;
    }
    unint64_t v90 = v42;
    id v65 = objc_msgSend(v43, sel_uuid);
    if (v65)
    {
      uint64_t v66 = v65;
      sub_26111E768();

      unint64_t v67 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v37[7];
      v67(v39, 0, 1, v36);
    }
    else
    {
      unint64_t v67 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v37[7];
      v67(v39, 1, 1, v36);
    }
    uint64_t v68 = v87;
    ((void (*)(uint64_t, uint64_t, void *))v37[2])(v40, v92, v36);
    v67(v40, 0, 1, v36);
    uint64_t v69 = *(int *)(v68 + 48);
    uint64_t v70 = v88;
    uint64_t v71 = v88 + v69;
    sub_261071864(v39, v88, &qword_26B40AC70);
    sub_261071864(v40, v71, &qword_26B40AC70);
    uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t, void *))v37[6];
    if (v72(v70, 1, v36) == 1)
    {
      sub_2610718C8(v40, &qword_26B40AC70);
      sub_2610718C8(v39, &qword_26B40AC70);
      int v73 = v72(v71, 1, v36);
      int v52 = v91;
      id v45 = v90;
      id v53 = &off_265576000;
      if (v73 == 1)
      {
        sub_2610718C8(v88, &qword_26B40AC70);
        uint64_t v36 = v82;
        id v44 = &off_265576000;
        uint64_t v47 = v93;
LABEL_37:
        if ([v46 (SEL)v44[66]] == v47
          && ((objc_msgSend(v46, sel_isPrimary) ^ v52) & 1) == 0)
        {
          id v37 = v46;
          id v78 = v81;
LABEL_47:

          return;
        }
LABEL_17:
        objc_msgSend(v46, sel_setType_, v47);
        id v54 = (void *)sub_26111E748();
        objc_msgSend(v46, sel_setUuid_, v54);

        id v95 = v46;
        objc_msgSend(v46, sel_setIsPrimary_, v52 & 1);
        id v55 = [v45 (SEL)v44[66]];
        if ((v55 & 0x80000000) != 0 || (uint64_t v22 = (uint64_t)v55, v55 >= 0x100))
        {
LABEL_50:
          sub_26111F328();
          __break(1u);
          return;
        }
        a2 = v45;
        id v56 = objc_allocWithZone(MEMORY[0x263EFF260]);
        unint64_t v57 = (void *)sub_26111EBC8();
        id v37 = objc_msgSend(v56, (SEL)v53[130], v57);

        uint64_t v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = v89;
        *(void *)(v58 + 56) = MEMORY[0x263F8D6C8];
        *(void *)(v58 + 64) = MEMORY[0x263F8D750];
        *(void *)(v58 + 32) = (unsigned __int16)v22;
        id v59 = (void *)sub_26111EEF8();
        objc_msgSend(v37, sel_setPredicate_, v59);

        id v60 = (void *)v36[2];
        type metadata accessor for VUIndexSubset();
        id v61 = v60;
        uint64_t v62 = sub_26111F048();
        if (v38)
        {

          return;
        }
        unint64_t v35 = v62;

        if (!(v35 >> 62))
        {
          if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_23:
            if ((v35 & 0xC000000000000001) != 0)
            {
              id v63 = (id)MEMORY[0x26122DAE0](0, v35);
              goto LABEL_26;
            }
            if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v63 = *(id *)(v35 + 32);
LABEL_26:
              id v64 = v63;
              swift_bridgeObjectRelease();
              id v45 = v64;
LABEL_46:
              objc_msgSend(v45, sel_setStaleTags_, 1);

              id v78 = v45;
              goto LABEL_47;
            }
            __break(1u);
            goto LABEL_50;
          }
LABEL_45:
          swift_bridgeObjectRelease();
          id v45 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, v36[2]);
          objc_msgSend(v45, sel_setType_, v22);
          goto LABEL_46;
        }
LABEL_44:
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_26111F348();
        swift_bridgeObjectRelease();
        if (v79) {
          goto LABEL_23;
        }
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v74 = v86;
      sub_261071864(v70, v86, &qword_26B40AC70);
      if (v72(v71, 1, v36) != 1)
      {
        uint64_t v75 = v94;
        char v76 = v85;
        (*(void (**)(char *, uint64_t, void *))(v94 + 32))(v85, v71, v36);
        sub_2610FC7D8(&qword_26A90FF60, MEMORY[0x263F07508]);
        LODWORD(v87) = sub_26111EBB8();
        uint64_t v77 = *(void (**)(char *, void *))(v75 + 8);
        v77(v76, v36);
        sub_2610718C8((uint64_t)v83, &qword_26B40AC70);
        sub_2610718C8((uint64_t)v84, &qword_26B40AC70);
        v77((char *)v74, v36);
        id v38 = v95;
        sub_2610718C8(v70, &qword_26B40AC70);
        uint64_t v36 = v82;
        int v52 = v91;
        id v45 = v90;
        id v53 = &off_265576000;
        id v44 = &off_265576000;
        uint64_t v47 = v93;
        if ((v87 & 1) == 0) {
          goto LABEL_17;
        }
        goto LABEL_37;
      }
      sub_2610718C8((uint64_t)v83, &qword_26B40AC70);
      sub_2610718C8((uint64_t)v84, &qword_26B40AC70);
      (*(void (**)(uint64_t, void *))(v94 + 8))(v74, v36);
      LOBYTE(v52) = v91;
      id v45 = v90;
      id v53 = &off_265576000;
    }
    sub_2610718C8(v88, (uint64_t *)&unk_26A9105B0);
    uint64_t v36 = v82;
    id v44 = &off_265576000;
    uint64_t v47 = v93;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  int64_t v48 = sub_26111EAC8();
  os_log_type_t v49 = sub_26111EF58();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl(&dword_261042000, v48, v49, "Unable to find observation for given identifier", v50, 2u);
    MEMORY[0x26122E4F0](v50, -1, -1);
  }

  sub_261046B60();
  swift_allocError();
  *uint64_t v51 = 2;
  swift_willThrow();
}

uint64_t sub_2610F648C()
{
  id v1 = objc_msgSend(v0, sel_tags);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_allObjects);

  uint64_t v4 = sub_26111ED88();
  unint64_t v5 = sub_261116564(v4);
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  unint64_t v16 = MEMORY[0x263F8EE78];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v10 = MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_16;
  }
LABEL_5:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x26122DAE0](i, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    if (objc_msgSend(v8, sel_type) == 1)
    {
    }
    else
    {
      sub_26111F288();
      sub_26111F2C8();
      sub_26111F2D8();
      sub_26111F298();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v16;
LABEL_17:
  swift_bridgeObjectRetain();
  if ((v10 & 0x8000000000000000) != 0 || (uint64_t v11 = (void *)v10, (v10 & 0x4000000000000000) != 0))
  {
    uint64_t v11 = sub_2610749CC(v10);
    swift_release();
  }
  unint64_t v16 = (unint64_t)v11;
  sub_2610E5EBC((uint64_t *)&v16);
  swift_release();
  unint64_t v5 = v16;
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v16 + 16)) {
      goto LABEL_22;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_26111F348();
  swift_release();
  if (!v14)
  {
LABEL_28:
    swift_release();
    return 0;
  }
LABEL_22:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_32:
    id v12 = (id)MEMORY[0x26122DAE0](0, v5);
    goto LABEL_25;
  }
  if (*(void *)(v5 + 16))
  {
    id v12 = *(id *)(v5 + 32);
LABEL_25:
    id v13 = v12;
    swift_release();
    return (uint64_t)v13;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_2610F6708(uint64_t a1, uint64_t a2)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v7 = (void *)sub_26111EBC8();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_261071924(0, &qword_26B40ABC8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v10 + 16) = xmmword_261120090;
  uint64_t v12 = MEMORY[0x263F8D750];
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 32) = a1;
  id v13 = (void *)sub_26111EEF8();
  objc_msgSend(v8, sel_setPredicate_, v13);

  objc_msgSend(v8, sel_setFetchLimit_, 1);
  uint64_t v14 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexObservation();
  id v15 = v14;
  uint64_t v16 = sub_26111F048();
  if (v2)
  {

    id v8 = v15;
LABEL_3:

    return;
  }
  unint64_t v17 = v16;

  if (!(v17 >> 62))
  {
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    float v28 = sub_26111EAC8();
    os_log_type_t v29 = sub_26111EF58();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v30 = 0;
      _os_log_impl(&dword_261042000, v28, v29, "Unable to find observation for given identifier", v30, 2u);
      MEMORY[0x26122E4F0](v30, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *id v31 = 2;
    swift_willThrow();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_21;
  }
LABEL_6:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v18 = (id)MEMORY[0x26122DAE0](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    id v18 = *(id *)(v17 + 32);
  }
  id v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v19, sel_tags);
  if (!v20
    || (id v21 = v20,
        id v22 = objc_msgSend(v20, sel_allObjects),
        v21,
        uint64_t v23 = sub_26111ED88(),
        v22,
        unint64_t v17 = sub_261116564(v23),
        swift_bridgeObjectRelease(),
        !v17))
  {
    swift_bridgeObjectRelease();
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  id v44 = v19;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_26;
    }
  }
  if (v3 < 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0) {
      id v25 = (id)MEMORY[0x26122DAE0](i, v17);
    }
    else {
      id v25 = *(id *)(v17 + 8 * i + 32);
    }
    uint64_t v26 = v25;
    objc_msgSend(*(id *)(a2 + 16), sel_deleteObject_, v25);
  }
LABEL_26:
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v19, sel_type);
  if ((v32 & 0x80000000) != 0) {
    goto LABEL_41;
  }
  uint64_t v9 = (uint64_t)v32;
  uint64_t v33 = MEMORY[0x263F8D6C8];
  if (v32 >= 0x100) {
    goto LABEL_41;
  }
  id v34 = objc_allocWithZone(MEMORY[0x263EFF260]);
  unint64_t v35 = (void *)sub_26111EBC8();
  uint64_t v3 = (uint64_t)objc_msgSend(v34, sel_initWithEntityName_, v35);

  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_261120090;
  *(void *)(v36 + 56) = v33;
  *(void *)(v36 + 64) = MEMORY[0x263F8D750];
  *(void *)(v36 + 32) = (unsigned __int16)v9;
  id v37 = (void *)sub_26111EEF8();
  objc_msgSend((id)v3, sel_setPredicate_, v37);

  id v38 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v39 = v38;
  unint64_t v17 = sub_26111F048();

  if (v17 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_30;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    id v42 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(a2 + 16));
    objc_msgSend(v42, sel_setType_, v9);
    uint64_t v40 = v44;
    goto LABEL_38;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_37;
  }
LABEL_30:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v41 = (id)MEMORY[0x26122DAE0](0, v17);
    uint64_t v40 = v44;
    goto LABEL_33;
  }
  uint64_t v40 = v44;
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v41 = *(id *)(v17 + 32);
LABEL_33:
    swift_bridgeObjectRelease();
    id v42 = v41;
LABEL_38:
    objc_msgSend(v42, sel_setStaleTags_, 1);

    return;
  }
  __break(1u);
LABEL_41:
  sub_26111F328();
  __break(1u);
}

void sub_2610F6DCC(uint64_t a1)
{
  v42[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_26111E778();
  uint64_t v36 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v10 = (void *)sub_26111EBC8();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  uint64_t v12 = *(void **)(a1 + 16);
  type metadata accessor for VUIndexTag();
  id v13 = v12;
  uint64_t v14 = sub_26111F048();
  if (v1)
  {

    return;
  }
  unint64_t v15 = v14;
  id v38 = v5;
  v35[1] = 0;
  uint64_t v40 = a1;

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_26111F348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = v40;
  id v18 = v38;
  id v19 = v36;
  if (v16)
  {
    uint64_t v39 = v3;
    v35[0] = v11;
    if (v16 < 1) {
      __break(1u);
    }
    uint64_t v20 = 0;
    unint64_t v41 = v15 & 0xC000000000000001;
    id v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 7);
    v36 += 6;
    id v37 = (void (**)(char *, char *, uint64_t))(v19 + 4);
    uint64_t v22 = v16;
    while (1)
    {
      if (v41) {
        id v25 = (id)MEMORY[0x26122DAE0](v20, v15);
      }
      else {
        id v25 = *(id *)(v15 + 8 * v20 + 32);
      }
      uint64_t v26 = v25;
      objc_msgSend(*(id *)(v17 + 16), sel_deleteObject_, v25, v35[0]);
      id v27 = objc_msgSend(v26, sel_observation);
      if (v27)
      {
        float v28 = v27;
        id v29 = objc_msgSend(v27, sel_asset);
        if (v29)
        {
          id v30 = v29;
          sub_26111E768();

          uint64_t v31 = v39;
          (*v37)(v8, v18, v39);
          (*v21)(v8, 0, 1, v31);
          if ((*v36)(v8, 1, v31) != 1)
          {

            sub_2610718C8((uint64_t)v8, &qword_26B40AC70);
            uint64_t v17 = v40;
            goto LABEL_11;
          }
        }
        else
        {
          (*v21)(v8, 1, 1, v39);
        }
        sub_2610718C8((uint64_t)v8, &qword_26B40AC70);
        uint64_t v23 = v40;
        id v24 = *(id *)(v40 + 16);
        objc_msgSend(v24, sel_deleteObject_, v28);

        uint64_t v17 = v23;
        id v18 = v38;
      }

LABEL_11:
      if (v22 == ++v20)
      {
        swift_bridgeObjectRelease();
        id v11 = (id)v35[0];
        goto LABEL_21;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  if ((objc_msgSend(*(id *)(v17 + 16), sel_hasChanges) & 1) == 0) {
    goto LABEL_24;
  }
  id v32 = *(void **)(v17 + 16);
  v42[0] = 0;
  if (objc_msgSend(v32, sel_save_, v42))
  {
    id v33 = v42[0];
LABEL_24:

    return;
  }
  id v34 = v42[0];
  sub_26111E518();

  swift_willThrow();
}

void sub_2610F722C(uint64_t a1)
{
  uint64_t v2 = v1;
  v70[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_26111E718();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  MEMORY[0x270FA5388](v4);
  id v59 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  do
  {
    id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_26111EBC8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

    objc_msgSend(v9, sel_setIncludesPropertyValues_, 0);
    uint64_t v10 = *(SEL **)(a1 + 16);
    sub_261071924(0, &qword_26A910628);
    id v11 = v10;
    uint64_t v12 = sub_26111F048();
    if (v2)
    {
      swift_arrayDestroy();

      return;
    }
    unint64_t v13 = v12;
    uint64_t v64 = 0;

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_26111F348();
      if (!v14) {
        goto LABEL_2;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v14) {
        goto LABEL_2;
      }
    }
    if (v14 < 1)
    {
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x26122DAE0](i, v13);
      }
      else {
        id v16 = *(id *)(v13 + 8 * i + 32);
      }
      uint64_t v17 = v16;
      objc_msgSend(*(id *)(a1 + 16), sel_deleteObject_, v16);
    }
LABEL_2:
    ++v6;

    swift_bridgeObjectRelease_n();
    uint64_t v2 = v64;
  }
  while (v6 != 4);
  swift_arrayDestroy();
  uint64_t v10 = (SEL *)&off_265576000;
  id v18 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (!v18) {
    goto LABEL_65;
  }
  id v19 = v18;
  id v20 = objc_msgSend(v18, sel_persistentStores);

  sub_261071924(0, &qword_26B40AD80);
  unint64_t v13 = sub_26111ED88();

  if (!(v13 >> 62))
  {
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
LABEL_64:
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
LABEL_63:
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_26111F348();
  swift_bridgeObjectRelease();
  if (!v44) {
    goto LABEL_64;
  }
LABEL_18:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v21 = (id)MEMORY[0x26122DAE0](0, v13);
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_74:
      __break(1u);
    }
    id v21 = *(id *)(v13 + 32);
  }
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = (id *)[*(id *)(a1 + 16) v10[81]];
  id v58 = v22;
  if (v23)
  {
    unint64_t v13 = (unint64_t)v23;
    id v24 = objc_msgSend(v23, sel_metadataForPersistentStore_, v22);

    unint64_t v25 = sub_26111EB68();
    v70[0] = v25;
  }
  else
  {
    v70[0] = 0;
    unint64_t v25 = sub_2610487A0(MEMORY[0x263F8EE78]);
  }
  uint64_t v26 = *(void *)(v25 + 64);
  unint64_t v62 = v25 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  id v63 = v66;
  uint64_t v10 = (SEL *)((unint64_t)(v27 + 63) >> 6);
  unint64_t v57 = (char *)v10 - 1;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  while (2)
  {
    if (v29)
    {
      unint64_t v31 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v32 = v31 | (v30 << 6);
      goto LABEL_32;
    }
    uint64_t v35 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_62;
    }
    if (v35 >= (uint64_t)v10) {
      goto LABEL_50;
    }
    unint64_t v36 = *(void *)(v62 + 8 * v35);
    if (!v36)
    {
      uint64_t v37 = v30 + 2;
      ++v30;
      if (v35 + 1 < (uint64_t)v10)
      {
        unint64_t v36 = *(void *)(v62 + 8 * v37);
        if (v36)
        {
LABEL_39:
          uint64_t v35 = v37;
          goto LABEL_36;
        }
        uint64_t v30 = v35 + 1;
        if (v35 + 2 < (uint64_t)v10)
        {
          unint64_t v36 = *(void *)(v62 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_36;
          }
          uint64_t v37 = v35 + 3;
          uint64_t v30 = v35 + 2;
          if (v35 + 3 < (uint64_t)v10)
          {
            unint64_t v36 = *(void *)(v62 + 8 * v37);
            if (v36) {
              goto LABEL_39;
            }
            while (1)
            {
              uint64_t v35 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_74;
              }
              if (v35 >= (uint64_t)v10) {
                break;
              }
              unint64_t v36 = *(void *)(v62 + 8 * v35);
              ++v37;
              if (v36) {
                goto LABEL_36;
              }
            }
            uint64_t v30 = (uint64_t)v57;
          }
        }
      }
LABEL_50:
      unint64_t v29 = 0;
      memset(v66, 0, sizeof(v66));
      long long v65 = 0u;
      goto LABEL_51;
    }
LABEL_36:
    unint64_t v29 = (v36 - 1) & v36;
    unint64_t v32 = __clz(__rbit64(v36)) + (v35 << 6);
    uint64_t v30 = v35;
LABEL_32:
    uint64_t v33 = *(void *)(v25 + 56);
    id v34 = (void *)(*(void *)(v25 + 48) + 16 * v32);
    unint64_t v13 = v34[1];
    *(void *)&long long v65 = *v34;
    *((void *)&v65 + 1) = v13;
    sub_26106A31C(v33 + 32 * v32, (uint64_t)v63);
    swift_bridgeObjectRetain();
LABEL_51:
    sub_261071274((uint64_t)&v65, (uint64_t)&v67, (uint64_t *)&unk_26A910630);
    uint64_t v38 = v68;
    if (v68)
    {
      uint64_t v39 = (uint64_t)v67;
      if (sub_2610F7A74())
      {
        if (!v70[0])
        {
          swift_bridgeObjectRelease();
          long long v65 = 0u;
          v66[0] = 0u;
          sub_2610718C8((uint64_t)&v65, (uint64_t *)&unk_26B40ADF8);
          goto LABEL_29;
        }
        unint64_t v13 = (unint64_t)v70;
        sub_2610B8408(v39, v38, &v65);
        sub_2610718C8((uint64_t)&v65, (uint64_t *)&unk_26B40ADF8);
      }
      swift_bridgeObjectRelease();
LABEL_29:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
      continue;
    }
    break;
  }
  swift_release();
  id v40 = objc_msgSend(*(id *)(a1 + 16), sel_persistentStoreCoordinator);
  if (v40)
  {
    unint64_t v41 = v40;
    id v42 = v58;
    if (v70[0])
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = (void *)sub_26111EB48();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = 0;
    }
    objc_msgSend(v41, sel_setMetadata_forPersistentStore_, v43, v42);
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
LABEL_65:
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_historySupport) == 1)
  {
    id v45 = self;
    id v46 = v59;
    sub_26111E708();
    uint64_t v47 = (void *)sub_26111E6D8();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v46, v61);
    id v48 = objc_msgSend(v45, sel_deleteHistoryBeforeDate_, v47);

    os_log_type_t v49 = *(void **)(a1 + 16);
    id v67 = 0;
    id v50 = objc_msgSend(v49, sel_executeRequest_error_, v48, &v67);
    if (v50)
    {
      uint64_t v51 = v50;
      id v52 = v67;

      goto LABEL_68;
    }
    id v56 = v67;
    sub_26111E518();

    swift_willThrow();
  }
  else
  {
LABEL_68:
    id v53 = *(void **)(a1 + 16);
    id v67 = 0;
    if (objc_msgSend(v53, sel_save_, &v67))
    {
      id v54 = v67;
    }
    else
    {
      id v55 = v67;
      sub_26111E518();

      swift_willThrow();
    }
  }
}

uint64_t sub_2610F7A74()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_26111EC98();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_26111EC98();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_26111F408();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_26111EC98();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_26111EC98();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_2610F7BDC(char a1, uint64_t a2)
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  id v4 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v5 = (void *)sub_26111EBC8();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8E778];
  *(_OWORD *)(v7 + 16) = xmmword_261120090;
  uint64_t v9 = MEMORY[0x263F8E7C0];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(unsigned char *)(v7 + 32) = a1;
  BOOL v10 = (void *)sub_26111EEF8();
  objc_msgSend(v6, sel_setPredicate_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF1D0]), sel_initWithFetchRequest_, v6);
  uint64_t v12 = *(void **)(a2 + 16);
  v17[0] = 0;
  id v13 = objc_msgSend(v12, sel_executeRequest_error_, v11, v17);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = v17[0];
  }
  else
  {
    id v16 = v17[0];
    sub_26111E518();

    swift_willThrow();
  }
}

uint64_t sub_2610F7DBC()
{
  uint64_t v2 = sub_26111EA78();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v56 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v54 - v5;
  uint64_t v7 = sub_26111EA38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v57 = (char *)&v54 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v54 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v64 = v0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_signposter;
  sub_26111EA28();
  uint64_t v63 = v18;
  id v19 = sub_26111EA48();
  os_signpost_type_t v20 = sub_26111F018();
  char v21 = sub_26111F0B8();
  id v55 = v6;
  uint64_t v65 = v1;
  if (v21)
  {
    uint64_t v22 = v15;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v23(v15, v17, v7);
    uint64_t v24 = v8;
    uint64_t v25 = v7;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v19, v20, v27, "flush", "", v26, 2u);
    uint64_t v28 = v26;
    uint64_t v7 = v25;
    uint64_t v8 = v24;
    MEMORY[0x26122E4F0](v28, -1, -1);

    unint64_t v29 = *(void (**)(char *, uint64_t))(v24 + 8);
    id v15 = v22;
    v29(v22, v7);
  }
  else
  {

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  }
  uint64_t v30 = v66;
  id v58 = v23;
  v23(v15, v17, v7);
  sub_26111EAA8();
  swift_allocObject();
  sub_26111EA98();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v8 + 8);
  v61(v17, v7);
  id v31 = *(id *)(v64 + 16);
  uint64_t v32 = v65;
  sub_26111F028();
  uint64_t v62 = v8 + 8;
  if (v32)
  {

    uint64_t v33 = sub_26111EA48();
    sub_26111EA88();
    int v34 = sub_26111F008();
    if (sub_26111F0B8())
    {
      LODWORD(v65) = v34;
      swift_retain();
      uint64_t v35 = v56;
      sub_26111EAB8();
      swift_release();
      uint64_t v37 = v59;
      uint64_t v36 = v60;
      if ((*(unsigned int (**)(char *, uint64_t))(v59 + 88))(v35, v60) == *MEMORY[0x263F90238])
      {
        uint64_t v38 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
        uint64_t v38 = "";
      }
      uint64_t v44 = v66;
      v58(v15, v66, v7);
      uint64_t v45 = v7;
      id v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v46 = 0;
      os_signpost_id_t v47 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v33, (os_signpost_type_t)v65, v47, "flush", v38, v46, 2u);
      MEMORY[0x26122E4F0](v46, -1, -1);

      id v48 = v61;
      v61(v44, v45);
      v48(v15, v45);
      return swift_release();
    }
LABEL_11:

    v61(v30, v7);
    return swift_release();
  }

  uint64_t v33 = sub_26111EA48();
  uint64_t v30 = v57;
  sub_26111EA88();
  int v39 = sub_26111F008();
  if ((sub_26111F0B8() & 1) == 0) {
    goto LABEL_11;
  }
  LODWORD(v65) = v39;
  uint64_t v66 = 0;
  swift_retain();
  id v40 = v55;
  sub_26111EAB8();
  swift_release();
  uint64_t v42 = v59;
  uint64_t v41 = v60;
  if ((*(unsigned int (**)(char *, uint64_t))(v59 + 88))(v40, v60) == *MEMORY[0x263F90238])
  {
    uint64_t v43 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
    uint64_t v43 = "";
  }
  v58(v15, v30, v7);
  os_log_type_t v49 = v30;
  id v50 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)id v50 = 0;
  os_signpost_id_t v51 = sub_26111EA18();
  _os_signpost_emit_with_name_impl(&dword_261042000, v33, (os_signpost_type_t)v65, v51, "flush", v43, v50, 2u);
  MEMORY[0x26122E4F0](v50, -1, -1);

  id v52 = v61;
  v61(v49, v7);
  v52(v15, v7);
  return swift_release();
}

id sub_2610F8420(uint64_t a1)
{
  v4[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(a1 + 16);
  v4[0] = 0;
  if (objc_msgSend(v1, sel_save_, v4)) {
    return v4[0];
  }
  id v3 = v4[0];
  sub_26111E518();

  return (id)swift_willThrow();
}

uint64_t sub_2610F84C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_logger;
  uint64_t v2 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_signposter;
  uint64_t v4 = sub_26111EA68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2610F85D4()
{
  return type metadata accessor for VUIndexCoreDataStore();
}

uint64_t type metadata accessor for VUIndexCoreDataStore()
{
  uint64_t result = qword_26B40AB58;
  if (!qword_26B40AB58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2610F8628()
{
  uint64_t result = sub_26111EAE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26111EA68();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_2610F8724()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2610F8774(char a1)
{
  return sub_2610EB84C(a1);
}

uint64_t sub_2610F8798(char a1)
{
  return sub_2610F0310(a1);
}

uint64_t sub_2610F87BC()
{
  return sub_2610F87EC();
}

uint64_t sub_2610F87D4()
{
  return sub_2610F87EC();
}

uint64_t sub_2610F87EC()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  sub_26111F028();

  return v3;
}

uint64_t sub_2610F8858(char a1)
{
  return sub_2610EDEB0(a1);
}

BOOL sub_2610F887C(char a1)
{
  return sub_2610E7214(a1);
}

uint64_t sub_2610F88A4(unsigned __int8 a1)
{
  return sub_2610F5528(a1);
}

void sub_2610F88C8()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  sub_26111F028();
}

uint64_t sub_2610F894C(unsigned __int8 a1, uint64_t a2)
{
  return sub_2610F5200(a1, a2);
}

void sub_2610F8970(void *a1@<X8>)
{
  sub_2610EFD70(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_2610F8990(void **a1, void **a2)
{
  uint64_t v5 = sub_26111E778();
  uint64_t v37 = *(void **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = *a1;
  id v15 = *a2;
  unsigned int v16 = objc_msgSend(v14, sel_type);
  if (v16 != objc_msgSend(v15, sel_type))
  {
    int v30 = objc_msgSend(v14, sel_type);
    char v29 = v30 < (int)objc_msgSend(v15, sel_type);
    return v29 & 1;
  }
  uint64_t v35 = v2;
  id v17 = objc_msgSend(v14, sel_uuid);
  if (!v17)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37[7])(v13, 1, 1, v5);
    goto LABEL_13;
  }
  uint64_t v18 = v17;
  sub_26111E768();

  id v19 = v37;
  int v34 = (void (*)(char *, char *, uint64_t))v37[4];
  v34(v13, v7, v5);
  uint64_t v36 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
  v36(v13, 0, 1, v5);
  uint64_t v33 = (unsigned int (*)(char *, uint64_t, uint64_t))v19[6];
  if (v33(v13, 1, v5) == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v31 = sub_26111E738();
  uint64_t v32 = v20;
  char v21 = v19 + 1;
  uint64_t v22 = (void (*)(char *, uint64_t))v19[1];
  uint64_t v37 = v21;
  v22(v13, v5);
  id v23 = objc_msgSend(v15, sel_uuid);
  if (!v23)
  {
LABEL_14:
    uint64_t result = v36(v11, 1, 1, v5);
    goto LABEL_15;
  }
  uint64_t v24 = v23;
  sub_26111E768();

  v34(v11, v7, v5);
  v36(v11, 0, 1, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v33)(v11, 1, v5);
  if (result != 1)
  {
    uint64_t v26 = sub_26111E738();
    uint64_t v28 = v27;
    v22(v11, v5);
    if (v31 == v26 && v32 == v28)
    {
      swift_bridgeObjectRelease_n();
      char v29 = 0;
    }
    else
    {
      char v29 = sub_26111F408();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return v29 & 1;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2610F8D48()
{
  return sub_26111F508();
}

uint64_t sub_2610F8DA8()
{
  return sub_26111F4D8();
}

uint64_t sub_2610F8DE8()
{
  return sub_26111F508();
}

BOOL sub_2610F8E44(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

void *sub_2610F8E70(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC00);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  id v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2610F8ED8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_26111ECF8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x26122D540](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

void sub_2610F8F54(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_26111E778();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v177 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v166 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (unint64_t)&v152 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v157 = (char *)&v152 - v15;
  MEMORY[0x270FA5388](v14);
  id v158 = (char *)&v152 - v16;
  id v156 = (void (**)(char *, uint64_t, uint64_t, uint64_t))a1;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = sub_26111F3D8();
  if (v18 >= v17)
  {
    if (v17 < 0) {
      goto LABEL_159;
    }
    if (v17) {
      sub_2610F9E3C(0, v17, 1, v156);
    }
    return;
  }
  if (v17 >= 0) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = v17 + 1;
  }
  if (v17 < -1) {
    goto LABEL_175;
  }
  uint64_t v154 = v18;
  uint64_t v162 = v17;
  if (v17 < 2)
  {
    id v23 = (char *)MEMORY[0x263F8EE78];
    uint64_t v181 = MEMORY[0x263F8EE78];
    uint64_t v22 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v17 != 1)
    {
      unint64_t v99 = *(void *)(MEMORY[0x263F8EE78] + 16);
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v20 = v19 >> 1;
    type metadata accessor for VUIndexTag();
    uint64_t v21 = sub_26111EDD8();
    *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
    uint64_t v22 = (void **)((v21 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v181 = v21;
  }
  uint64_t v24 = 0;
  uint64_t v2 = (uint64_t)*v156;
  id v175 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v176 = (unint64_t *)(v6 + 56);
  id v173 = (unint64_t *)(v6 + 8);
  unint64_t v174 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v152 = (char *)(v2 + 16);
  uint64_t v153 = (char *)(v2 - 8);
  id v23 = (char *)MEMORY[0x263F8EE78];
  uint64_t v25 = &off_265576000;
  id v164 = v22;
  uint64_t v159 = v5;
  unint64_t v167 = v13;
  id v168 = (char *)v2;
  uint64_t v26 = v162;
  do
  {
    uint64_t v27 = v24;
    uint64_t v28 = v24 + 1;
    uint64_t v165 = v24;
    if (v24 + 1 < v26)
    {
      id v155 = v23;
      char v29 = *(void **)(v2 + 8 * v28);
      unint64_t v179 = *(void **)(v2 + 8 * v24);
      int v30 = v179;
      uint64_t v180 = v29;
      id v31 = v29;
      id v32 = v30;
      int v33 = sub_2610F8990(&v180, &v179);
      if (v3)
      {
        swift_bridgeObjectRelease();

        goto LABEL_134;
      }
      int v34 = v33;

      uint64_t v28 = v27 + 2;
      LODWORD(v169) = v34;
      if (v27 + 2 >= v162)
      {
        id v23 = v155;
        if ((v169 & 1) == 0) {
          goto LABEL_42;
        }
      }
      else
      {
        uint64_t v35 = (id *)&v152[8 * v27];
        uint64_t v5 = v162;
        uint64_t v161 = 0;
        do
        {
          uint64_t v38 = *(v35 - 1);
          id v39 = *v35;
          id v40 = v38;
          LODWORD(v38) = [v39 (SEL)v25[66]];
          unsigned int v41 = [v40 (SEL)v25[66]];
          uint64_t v178 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v28;
          if (v38 == v41)
          {
            id v172 = v40;
            id v42 = objc_msgSend(v39, sel_uuid);
            if (!v42) {
              goto LABEL_170;
            }
            uint64_t v43 = v42;
            id v171 = v39;
            uint64_t v44 = v177;
            sub_26111E768();

            uint64_t v45 = *v175;
            id v46 = v158;
            uint64_t v5 = v159;
            (*v175)(v158, v44, v159);
            unint64_t v13 = *v176;
            ((void (*)(char *, void, uint64_t, uint64_t))*v176)(v46, 0, 1, v5);
            os_signpost_id_t v47 = *v174;
            if ((*v174)(v46, 1, v5) == 1) {
              goto LABEL_171;
            }
            uint64_t v48 = sub_26111E738();
            uint64_t v170 = v49;
            id v50 = (void (*)(char *, uint64_t))*v173;
            ((void (*)(char *, uint64_t))*v173)(v46, v5);
            id v51 = objc_msgSend(v172, sel_uuid);
            if (!v51) {
              goto LABEL_172;
            }
            id v52 = v51;
            id v53 = v177;
            sub_26111E768();

            uint64_t v54 = v157;
            v45(v157, v53, v5);
            ((void (*)(char *, void, uint64_t, uint64_t))v13)(v54, 0, 1, v5);
            if (v47(v54, 1, v5) == 1) {
              goto LABEL_173;
            }
            id v55 = v54;
            uint64_t v56 = sub_26111E738();
            uint64_t v58 = v57;
            v50(v55, v5);
            uint64_t v25 = &off_265576000;
            id v59 = v172;
            if (v48 == v56 && v170 == v58)
            {

              swift_bridgeObjectRelease_n();
              uint64_t v3 = v161;
              uint64_t v5 = v162;
              unint64_t v13 = v167;
              uint64_t v27 = v165;
              int v34 = v169;
              if (v169)
              {
                uint64_t v5 = v159;
                id v23 = v155;
                uint64_t v2 = (uint64_t)v168;
                uint64_t v28 = (uint64_t)v178;
                if ((uint64_t)v178 < v165) {
                  goto LABEL_160;
                }
                goto LABEL_35;
              }
            }
            else
            {
              char v60 = sub_26111F408();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int v34 = v169;
              char v61 = v169 ^ v60;
              uint64_t v3 = v161;
              uint64_t v5 = v162;
              unint64_t v13 = v167;
              uint64_t v27 = v165;
              if (v61)
              {
LABEL_29:
                uint64_t v5 = v159;
                id v23 = v155;
                uint64_t v2 = (uint64_t)v168;
                uint64_t v28 = (uint64_t)v178;
                if (v169) {
                  goto LABEL_34;
                }
                goto LABEL_42;
              }
            }
          }
          else
          {
            signed int v36 = [v39 (SEL)v25[66]];
            signed int v37 = [v40 (SEL)v25[66]];

            uint64_t v3 = v161;
            uint64_t v27 = v165;
            if (((v34 ^ (v36 >= v37)) & 1) == 0) {
              goto LABEL_29;
            }
          }
          uint64_t v28 = (uint64_t)v178 + 1;
          ++v35;
        }
        while ((void (*)(char *, uint64_t, uint64_t, uint64_t))v5 != (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v178 + 1));
        uint64_t v28 = v5;
        uint64_t v5 = v159;
        id v23 = v155;
        uint64_t v2 = (uint64_t)v168;
        if ((v169 & 1) == 0) {
          goto LABEL_42;
        }
      }
LABEL_34:
      if (v28 < v27) {
        goto LABEL_160;
      }
LABEL_35:
      if (v27 < v28)
      {
        uint64_t v62 = &v153[8 * v28];
        uint64_t v63 = v28;
        uint64_t v64 = v27;
        uint64_t v65 = (char *)(v2 + 8 * v27);
        do
        {
          if (v64 != --v63)
          {
            if (!v2) {
              goto LABEL_169;
            }
            uint64_t v66 = *(void *)v65;
            *(void *)uint64_t v65 = *(void *)v62;
            *(void *)uint64_t v62 = v66;
          }
          ++v64;
          v62 -= 8;
          v65 += 8;
        }
        while (v64 < v63);
      }
    }
LABEL_42:
    if (v28 >= v162) {
      goto LABEL_69;
    }
    if (__OFSUB__(v28, v27)) {
      goto LABEL_158;
    }
    if (v28 - v27 >= v154) {
      goto LABEL_69;
    }
    if (__OFADD__(v27, v154)) {
      goto LABEL_161;
    }
    uint64_t v67 = v162;
    if (v27 + v154 < v162) {
      uint64_t v67 = v27 + v154;
    }
    if (v67 < v27)
    {
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v2)(v166, 1, 1, v5);
LABEL_165:
      __break(1u);
LABEL_166:
      ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))*v176)(v13, 1, 1, v5);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v176)(v158, 1, 1, v159);
LABEL_171:
      __break(1u);
LABEL_172:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v157, 1, 1, v5);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      sub_26111F328();
      __break(1u);
      return;
    }
    if (v28 == v67) {
      goto LABEL_69;
    }
    id v155 = v23;
    uint64_t v161 = v3;
    uint64_t v68 = &v153[8 * v28];
    uint64_t v160 = v67;
    while (2)
    {
      uint64_t v178 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v28;
      uint64_t v70 = *(void **)(v2 + 8 * v28);
      uint64_t v71 = v27;
      uint64_t v163 = v68;
      while (1)
      {
        uint64_t v72 = *(void **)v68;
        id v73 = v70;
        id v74 = v72;
        LODWORD(v72) = [v73 (SEL)v25[66]];
        if (v72 != [v74 (SEL)v25[66]])
        {
          signed int v91 = [v73 (SEL)v25[66]];
          unsigned int v92 = [v74 (SEL)v25[66]];
          uint64_t v93 = v73;
          signed int v94 = v92;

          if (v91 >= v94) {
            goto LABEL_52;
          }
          goto LABEL_65;
        }
        id v172 = v73;
        id v75 = objc_msgSend(v73, sel_uuid);
        if (!v75) {
          goto LABEL_166;
        }
        char v76 = v75;
        uint64_t v77 = v177;
        sub_26111E768();

        id v78 = *v175;
        (*v175)((char *)v13, v77, v5);
        uint64_t v2 = *v176;
        ((void (*)(unint64_t, void, uint64_t, uint64_t))*v176)(v13, 0, 1, v5);
        uint64_t v79 = *v174;
        if ((*v174)((char *)v13, 1, v5) == 1) {
          goto LABEL_167;
        }
        uint64_t v169 = sub_26111E738();
        uint64_t v170 = v80;
        unint64_t v81 = v13;
        unint64_t v13 = *v173;
        ((void (*)(unint64_t, uint64_t))*v173)(v81, v5);
        id v171 = v74;
        id v82 = objc_msgSend(v74, sel_uuid);
        if (!v82) {
          goto LABEL_164;
        }
        id v83 = v82;
        uint64_t v84 = v177;
        sub_26111E768();

        uint64_t v85 = v166;
        v78(v166, v84, v5);
        ((void (*)(char *, void, uint64_t, uint64_t))v2)(v85, 0, 1, v5);
        if (v79(v85, 1, v5) == 1) {
          goto LABEL_165;
        }
        uint64_t v86 = v85;
        uint64_t v87 = sub_26111E738();
        uint64_t v89 = v88;
        ((void (*)(char *, uint64_t))v13)(v86, v5);
        uint64_t v25 = &off_265576000;
        if (v169 == v87 && v170 == v89) {
          break;
        }
        char v90 = sub_26111F408();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v13 = v167;
        uint64_t v2 = (uint64_t)v168;
        if ((v90 & 1) == 0) {
          goto LABEL_52;
        }
LABEL_65:
        uint64_t v69 = v178;
        if (!v2) {
          goto LABEL_163;
        }
        id v95 = *(void **)v68;
        uint64_t v70 = (void *)*((void *)v68 + 1);
        *(void *)uint64_t v68 = v70;
        *((void *)v68 + 1) = v95;
        v68 -= 8;
        if (v69 == (void (*)(char *, uint64_t, uint64_t, uint64_t))++v71) {
          goto LABEL_53;
        }
      }

      swift_bridgeObjectRelease_n();
      unint64_t v13 = v167;
      uint64_t v2 = (uint64_t)v168;
LABEL_52:
      uint64_t v69 = v178;
LABEL_53:
      uint64_t v28 = (uint64_t)v69 + 1;
      uint64_t v68 = v163 + 8;
      uint64_t v27 = v165;
      if (v28 != v160) {
        continue;
      }
      break;
    }
    uint64_t v28 = v160;
    uint64_t v3 = v161;
    id v23 = v155;
LABEL_69:
    if (v28 < v27) {
      goto LABEL_154;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v178 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v23 = sub_26108B8F4(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v98 = *((void *)v23 + 2);
    unint64_t v97 = *((void *)v23 + 3);
    unint64_t v99 = v98 + 1;
    uint64_t v22 = v164;
    if (v98 >= v97 >> 1)
    {
      id v146 = sub_26108B8F4((char *)(v97 > 1), v98 + 1, 1, v23);
      uint64_t v22 = v164;
      id v23 = v146;
    }
    *((void *)v23 + 2) = v99;
    uint64_t v5 = (uint64_t)(v23 + 32);
    uint64_t v100 = &v23[16 * v98 + 32];
    uint64_t v101 = v178;
    *(void *)uint64_t v100 = v27;
    *((void *)v100 + 1) = v101;
    if (v98)
    {
      while (2)
      {
        unint64_t v13 = v99 - 1;
        if (v99 >= 4)
        {
          unint64_t v106 = v5 + 16 * v99;
          uint64_t v107 = *(void *)(v106 - 64);
          uint64_t v108 = *(void *)(v106 - 56);
          BOOL v112 = __OFSUB__(v108, v107);
          uint64_t v109 = v108 - v107;
          if (v112) {
            goto LABEL_142;
          }
          uint64_t v111 = *(void *)(v106 - 48);
          uint64_t v110 = *(void *)(v106 - 40);
          BOOL v112 = __OFSUB__(v110, v111);
          uint64_t v104 = v110 - v111;
          char v105 = v112;
          if (v112) {
            goto LABEL_143;
          }
          unint64_t v113 = v99 - 2;
          unint64_t v114 = (uint64_t *)(v5 + 16 * (v99 - 2));
          uint64_t v116 = *v114;
          uint64_t v115 = v114[1];
          BOOL v112 = __OFSUB__(v115, v116);
          uint64_t v117 = v115 - v116;
          if (v112) {
            goto LABEL_145;
          }
          BOOL v112 = __OFADD__(v104, v117);
          uint64_t v118 = v104 + v117;
          if (v112) {
            goto LABEL_148;
          }
          if (v118 >= v109)
          {
            uint64_t v136 = (uint64_t *)(v5 + 16 * v13);
            uint64_t v138 = *v136;
            uint64_t v137 = v136[1];
            BOOL v112 = __OFSUB__(v137, v138);
            uint64_t v139 = v137 - v138;
            if (v112) {
              goto LABEL_152;
            }
            BOOL v129 = v104 < v139;
          }
          else
          {
LABEL_88:
            if (v105) {
              goto LABEL_144;
            }
            unint64_t v113 = v99 - 2;
            uint64_t v119 = (uint64_t *)(v5 + 16 * (v99 - 2));
            uint64_t v121 = *v119;
            uint64_t v120 = v119[1];
            BOOL v122 = __OFSUB__(v120, v121);
            uint64_t v123 = v120 - v121;
            char v124 = v122;
            if (v122) {
              goto LABEL_147;
            }
            uint64_t v125 = (uint64_t *)(v5 + 16 * v13);
            uint64_t v127 = *v125;
            uint64_t v126 = v125[1];
            BOOL v112 = __OFSUB__(v126, v127);
            uint64_t v128 = v126 - v127;
            if (v112) {
              goto LABEL_150;
            }
            if (__OFADD__(v123, v128)) {
              goto LABEL_151;
            }
            if (v123 + v128 < v104) {
              goto LABEL_100;
            }
            BOOL v129 = v104 < v128;
          }
          if (v129) {
            unint64_t v13 = v113;
          }
        }
        else
        {
          if (v99 == 3)
          {
            uint64_t v103 = *((void *)v23 + 4);
            uint64_t v102 = *((void *)v23 + 5);
            BOOL v112 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            char v105 = v112;
            goto LABEL_88;
          }
          uint64_t v130 = *((void *)v23 + 4);
          uint64_t v131 = *((void *)v23 + 5);
          BOOL v112 = __OFSUB__(v131, v130);
          uint64_t v123 = v131 - v130;
          char v124 = v112;
LABEL_100:
          if (v124) {
            goto LABEL_146;
          }
          uint64_t v132 = (uint64_t *)(v5 + 16 * v13);
          uint64_t v134 = *v132;
          uint64_t v133 = v132[1];
          BOOL v112 = __OFSUB__(v133, v134);
          uint64_t v135 = v133 - v134;
          if (v112) {
            goto LABEL_149;
          }
          if (v135 < v123) {
            goto LABEL_117;
          }
        }
        unint64_t v140 = v13 - 1;
        if (v13 - 1 >= v99)
        {
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
          goto LABEL_162;
        }
        if (!v2) {
          goto LABEL_168;
        }
        uint64_t v141 = v2;
        uint64_t v142 = (uint64_t *)(v5 + 16 * v140);
        uint64_t v143 = *v142;
        uint64_t v144 = (void *)(v5 + 16 * v13);
        uint64_t v2 = v144[1];
        sub_2610FA2C4((id *)(v141 + 8 * *v142), (id *)(v141 + 8 * *v144), (id *)(v141 + 8 * v2), v22);
        if (v3) {
          goto LABEL_133;
        }
        if (v2 < v143) {
          goto LABEL_139;
        }
        if (v13 > *((void *)v23 + 2)) {
          goto LABEL_140;
        }
        *uint64_t v142 = v143;
        *(void *)(v5 + 16 * v140 + 8) = v2;
        unint64_t v145 = *((void *)v23 + 2);
        if (v13 >= v145) {
          goto LABEL_141;
        }
        unint64_t v99 = v145 - 1;
        memmove((void *)(v5 + 16 * v13), v144 + 2, 16 * (v145 - 1 - v13));
        *((void *)v23 + 2) = v145 - 1;
        BOOL v129 = v145 > 2;
        uint64_t v2 = (uint64_t)v168;
        uint64_t v25 = &off_265576000;
        uint64_t v22 = v164;
        if (!v129) {
          goto LABEL_117;
        }
        continue;
      }
    }
    unint64_t v99 = 1;
LABEL_117:
    uint64_t v26 = v162;
    uint64_t v24 = (uint64_t)v178;
    uint64_t v5 = v159;
    unint64_t v13 = v167;
  }
  while ((uint64_t)v178 < v162);
LABEL_122:
  if (v99 >= 2)
  {
    uint64_t v147 = *v156;
    uint64_t v178 = *v156;
    do
    {
      unint64_t v13 = v99 - 2;
      if (v99 < 2) {
        goto LABEL_153;
      }
      if (!v147) {
        goto LABEL_174;
      }
      uint64_t v5 = v99 - 1;
      uint64_t v2 = (uint64_t)v23;
      uint64_t v148 = *(void *)&v23[16 * v13 + 32];
      uint64_t v149 = *(void *)&v23[16 * v99 + 24];
      id v150 = v22;
      sub_2610FA2C4((id *)v147 + v148, (id *)v147 + *(void *)&v23[16 * v99 + 16], (id *)v147 + v149, v22);
      if (v3) {
        break;
      }
      if (v149 < v148) {
        goto LABEL_155;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = (uint64_t)sub_26108BD80((uint64_t)v23);
      }
      if (v13 >= *(void *)(v2 + 16)) {
        goto LABEL_156;
      }
      unint64_t v151 = (char *)(v2 + 32 + 16 * v13);
      *(void *)unint64_t v151 = v148;
      *((void *)v151 + 1) = v149;
      unint64_t v13 = *(void *)(v2 + 16);
      if (v99 > v13) {
        goto LABEL_157;
      }
      memmove((void *)(v2 + 32 + 16 * v5), (const void *)(v2 + 32 + 16 * v99), 16 * (v13 - v99));
      id v23 = (char *)v2;
      *(void *)(v2 + 16) = v13 - 1;
      unint64_t v99 = v13 - 1;
      uint64_t v22 = v150;
      uint64_t v147 = v178;
    }
    while (v13 > 2);
  }
LABEL_133:
  swift_bridgeObjectRelease();
LABEL_134:
  *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_26111EDA8();
  swift_bridgeObjectRelease();
}

void sub_2610F9E3C(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v46 = a1;
  uint64_t v51 = sub_26111E778();
  uint64_t v7 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v60 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v50 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v44 - v12;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *a4;
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    id v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v56 = (void (**)(char *, id))(v7 + 8);
    uint64_t v57 = (unsigned int (**)(char *, uint64_t, id))(v7 + 48);
    uint64_t v15 = (uint64_t)v14 + 8 * a3 - 8;
    uint64_t v48 = v14;
    uint64_t v49 = (char *)&v44 - v12;
LABEL_6:
    uint64_t v16 = (void *)*((void *)v14 + a3);
    uint64_t v17 = v46;
    uint64_t v47 = v15;
    uint64_t v52 = a3;
    while (1)
    {
      uint64_t v18 = *(void **)v15;
      id v19 = v16;
      id v20 = v18;
      unsigned int v21 = objc_msgSend(v19, sel_type);
      if (v21 == objc_msgSend(v20, sel_type))
      {
        id v61 = v20;
        id v55 = v19;
        id v22 = objc_msgSend(v19, sel_uuid);
        if (!v22) {
          goto LABEL_21;
        }
        id v23 = v22;
        uint64_t v24 = v60;
        sub_26111E768();

        uint64_t v25 = *v58;
        id v19 = (id)v51;
        (*v58)(v13, v24, v51);
        uint64_t v14 = *v59;
        (*v59)(v13, 0, 1, (uint64_t)v19);
        uint64_t v26 = *v57;
        if ((*v57)(v13, 1, v19) == 1) {
          goto LABEL_22;
        }
        uint64_t v53 = sub_26111E738();
        uint64_t v54 = v27;
        uint64_t v28 = v13;
        char v29 = *v56;
        (*v56)(v28, v19);
        id v30 = objc_msgSend(v61, sel_uuid);
        if (!v30) {
          goto LABEL_23;
        }
        id v31 = v30;
        id v32 = v60;
        sub_26111E768();

        int v33 = v50;
        v25(v50, v32, (uint64_t)v19);
        v14(v33, 0, 1, (uint64_t)v19);
        if (v26(v33, 1, v19) == 1) {
          goto LABEL_24;
        }
        int v34 = v33;
        uint64_t v35 = sub_26111E738();
        signed int v37 = v36;
        v29(v34, v19);
        id v19 = v54;
        id v38 = v55;
        if (v53 == v35 && v54 == v37)
        {

          swift_bridgeObjectRelease_n();
          a3 = v52;
          uint64_t v14 = v48;
          unint64_t v13 = v49;
LABEL_5:
          ++a3;
          uint64_t v15 = v47 + 8;
          if (a3 == v45) {
            return;
          }
          goto LABEL_6;
        }
        char v39 = sub_26111F408();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v52;
        uint64_t v14 = v48;
        unint64_t v13 = v49;
        if ((v39 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        signed int v40 = objc_msgSend(v19, sel_type);
        unsigned int v41 = v20;
        signed int v42 = objc_msgSend(v20, sel_type);

        if (v40 >= v42) {
          goto LABEL_5;
        }
      }
      if (!v14) {
        break;
      }
      uint64_t v43 = *(void **)v15;
      uint64_t v16 = *(void **)(v15 + 8);
      *(void *)uint64_t v15 = v16;
      *(void *)(v15 + 8) = v43;
      v15 -= 8;
      if (a3 == ++v17) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_21:
    (*v59)(v13, 1, 1, v51);
LABEL_22:
    __break(1u);
LABEL_23:
    v14(v50, 1, 1, (uint64_t)v19);
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_2610FA2C4(id *a1, id *a2, id *a3, void **a4)
{
  uint64_t v91 = sub_26111E778();
  uint64_t v8 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  unint64_t v99 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v82 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v83 = (char *)&v81 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v86 = (void **)((char *)&v81 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v87 = (char *)&v81 - v17;
  uint64_t v18 = (char *)a2 - (char *)a1;
  uint64_t v19 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v19 = (char *)a2 - (char *)a1;
  }
  uint64_t v20 = v19 >> 3;
  unint64_t v96 = a3;
  uint64_t v21 = (char *)a3 - (char *)a2;
  uint64_t v22 = v21 / 8;
  uint64_t v102 = a1;
  uint64_t v101 = a4;
  if (v19 >> 3 < v21 / 8)
  {
    if (v18 < -7) {
      goto LABEL_68;
    }
    if (a4 != a1 || &a1[v20] <= a4) {
      memmove(a4, a1, 8 * v20);
    }
    id v23 = &a4[v20];
    uint64_t v100 = v23;
    if (v18 >= 8 && a2 < v96)
    {
      unsigned int v92 = (id *)(v8 + 32);
      uint64_t v93 = (id *)(v8 + 56);
      uint64_t v89 = (void (**)(char *, __objc2_prot **))(v8 + 8);
      char v90 = (void ***)(v8 + 48);
      uint64_t v24 = &off_265576000;
      uint64_t v85 = &a4[v20];
      uint64_t v25 = (__objc2_prot **)v91;
      while (1)
      {
        uint64_t v26 = *a4;
        uint64_t v27 = (void **)*a2;
        uint64_t v28 = v26;
        unsigned int v29 = [v27 (SEL)v24[66]];
        if (v29 == [v28 (SEL)v24[66]])
        {
          unint64_t v98 = v28;
          uint64_t v88 = v27;
          id v30 = objc_msgSend(v27, sel_uuid);
          if (!v30) {
            goto LABEL_62;
          }
          id v31 = v30;
          signed int v94 = a1;
          id v95 = a4;
          id v32 = v99;
          sub_26111E768();

          int v33 = (void (*)(void **, char *, __objc2_prot **))*v92;
          int v34 = v87;
          ((void (*)(char *, char *, __objc2_prot **))*v92)(v87, v32, v25);
          uint64_t v27 = (void **)*v93;
          ((void (*)(char *, void, uint64_t, __objc2_prot **))*v93)(v34, 0, 1, v25);
          uint64_t v35 = *v90;
          if (((unsigned int (*)(char *, uint64_t, __objc2_prot **))*v90)(v34, 1, v25) == 1) {
            goto LABEL_63;
          }
          unint64_t v97 = a2;
          uint64_t v36 = sub_26111E738();
          uint64_t v38 = v37;
          char v39 = *v89;
          (*v89)(v34, v25);
          id v40 = objc_msgSend(v98, sel_uuid);
          if (!v40) {
            goto LABEL_64;
          }
          unsigned int v41 = v40;
          signed int v42 = v99;
          sub_26111E768();

          uint64_t v43 = v86;
          v33(v86, v42, v25);
          ((void (*)(void **, void, uint64_t, __objc2_prot **))v27)(v43, 0, 1, v25);
          if (((unsigned int (*)(void **, uint64_t, __objc2_prot **))v35)(v43, 1, v25) == 1) {
            goto LABEL_65;
          }
          uint64_t v44 = (char *)v43;
          uint64_t v45 = sub_26111E738();
          uint64_t v47 = v46;
          v39(v44, v25);
          a2 = v97;
          uint64_t v24 = &off_265576000;
          if (v36 == v45 && v38 == v47)
          {

            swift_bridgeObjectRelease_n();
            a1 = v94;
            a4 = v95;
            id v23 = v85;
          }
          else
          {
            char v53 = sub_26111F408();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v94;
            a4 = v95;
            id v23 = v85;
            if (v53)
            {
LABEL_20:
              uint64_t v52 = a2 + 1;
              if (a1 < a2 || a1 >= v52 || a1 != a2) {
                *a1 = *a2;
              }
              goto LABEL_28;
            }
          }
        }
        else
        {
          signed int v48 = [v27 (SEL)v24[66]];
          unsigned int v49 = [v28 (SEL)v24[66]];
          id v50 = v27;
          signed int v51 = v49;

          if (v48 < v51) {
            goto LABEL_20;
          }
        }
        if (a1 != a4) {
          *a1 = *a4;
        }
        uint64_t v101 = ++a4;
        uint64_t v52 = a2;
LABEL_28:
        uint64_t v102 = ++a1;
        if (a4 < v23)
        {
          a2 = v52;
          if (v52 < v96) {
            continue;
          }
        }
        break;
      }
    }
LABEL_59:
    sub_26108B9F4((void **)&v102, (const void **)&v101, &v100);
    return 1;
  }
  if (v21 < -7) {
    goto LABEL_68;
  }
  if (a4 != a2 || &a2[v22] <= a4) {
    memmove(a4, a2, 8 * v22);
  }
  uint64_t v27 = &a4[v22];
  uint64_t v100 = v27;
  uint64_t v102 = a2;
  if (v21 < 8 || a1 >= a2) {
    goto LABEL_59;
  }
  uint64_t v89 = (void (**)(char *, __objc2_prot **))(v8 + 32);
  char v90 = (void ***)(v8 + 56);
  uint64_t v87 = (char *)(v8 + 8);
  uint64_t v88 = (void **)(v8 + 48);
  uint64_t v54 = v96 - 1;
  id v55 = a2;
  signed int v94 = a1;
  id v95 = a4;
  while (1)
  {
    unint64_t v98 = v54 + 1;
    uint64_t v56 = *(v27 - 1);
    unint64_t v96 = v27 - 1;
    uint64_t v57 = *(v55 - 1);
    unsigned int v92 = v55 - 1;
    id v58 = v56;
    id v59 = v57;
    uint64_t v25 = &off_265576000;
    LODWORD(v57) = objc_msgSend(v58, sel_type);
    if (v57 != objc_msgSend(v59, sel_type))
    {
      LODWORD(v97) = objc_msgSend(v58, sel_type);
      int v77 = objc_msgSend(v59, sel_type);

      if ((int)v97 >= v77) {
        goto LABEL_53;
      }
      goto LABEL_47;
    }
    uint64_t v93 = (id *)v59;
    uint64_t v85 = (void **)v58;
    uint64_t v86 = v27;
    id v60 = objc_msgSend(v58, sel_uuid);
    if (!v60) {
      break;
    }
    id v61 = v60;
    uint64_t v62 = v99;
    sub_26111E768();

    uint64_t v63 = *v89;
    uint64_t v64 = v83;
    uint64_t v25 = (__objc2_prot **)v91;
    ((void (*)(char *, char *, uint64_t))*v89)(v83, v62, v91);
    uint64_t v27 = *v90;
    ((void (*)(char *, void, uint64_t, __objc2_prot **))*v90)(v64, 0, 1, v25);
    uint64_t v65 = (unsigned int (*)(char *, uint64_t, __objc2_prot **))*v88;
    if (((unsigned int (*)(char *, uint64_t, __objc2_prot **))*v88)(v64, 1, v25) == 1) {
      goto LABEL_61;
    }
    unint64_t v97 = a2;
    uint64_t v66 = sub_26111E738();
    uint64_t v84 = v67;
    uint64_t v68 = *(void (**)(char *, __objc2_prot **))v87;
    (*(void (**)(char *, __objc2_prot **))v87)(v64, v25);
    id v69 = objc_msgSend(v93, sel_uuid);
    if (!v69) {
      goto LABEL_66;
    }
    uint64_t v70 = v69;
    uint64_t v71 = v99;
    sub_26111E768();

    uint64_t v72 = v82;
    ((void (*)(char *, char *, __objc2_prot **))v63)(v82, v71, v25);
    ((void (*)(char *, void, uint64_t, __objc2_prot **))v27)(v72, 0, 1, v25);
    if (v65(v72, 1, v25) == 1) {
      goto LABEL_67;
    }
    id v73 = v72;
    uint64_t v74 = sub_26111E738();
    uint64_t v76 = v75;
    v68(v73, v25);
    a1 = v94;
    a2 = v97;
    if (v66 == v74 && v84 == v76)
    {

      swift_bridgeObjectRelease_n();
      a4 = v95;
      uint64_t v27 = v86;
LABEL_53:
      uint64_t v79 = v96;
      uint64_t v100 = v96;
      if (v98 < v27 || v54 >= v27 || v98 != v27) {
        *uint64_t v54 = *v96;
      }
      id v55 = a2;
      uint64_t v27 = v79;
      if (v79 <= a4) {
        goto LABEL_59;
      }
      goto LABEL_58;
    }
    char v78 = sub_26111F408();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a4 = v95;
    uint64_t v27 = v86;
    if ((v78 & 1) == 0) {
      goto LABEL_53;
    }
LABEL_47:
    id v55 = v92;
    if (v98 != a2 || v54 >= a2) {
      *uint64_t v54 = *v92;
    }
    uint64_t v102 = v55;
    if (v27 <= a4) {
      goto LABEL_59;
    }
LABEL_58:
    --v54;
    a2 = v55;
    if (v55 <= a1) {
      goto LABEL_59;
    }
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v90)(v83, 1, 1, v91);
LABEL_61:
  __break(1u);
LABEL_62:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v93)(v87, 1, 1, v91);
LABEL_63:
  __break(1u);
LABEL_64:
  ((void (*)(void **, uint64_t, uint64_t, __objc2_prot **))v27)(v86, 1, 1, v25);
LABEL_65:
  __break(1u);
LABEL_66:
  ((void (*)(char *, uint64_t, uint64_t, __objc2_prot **))v27)(v82, 1, 1, v25);
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_26111F398();
  __break(1u);
  return result;
}

unsigned __int8 *sub_2610FAC88(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_2610FAE6C(a1, a2, a3);
}

unsigned __int8 *sub_2610FACA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26111ED18();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2610FB390();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_26111F278();
  }
LABEL_7:
  uint64_t v11 = sub_2610FAE6C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_2610FAD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26111ED18();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2610FB390();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_26111F278();
  }
LABEL_7:
  unsigned __int16 v11 = (unsigned __int16)sub_2610FB0E8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_2610FAE6C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_2610FB0E8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2610FB390()
{
  unint64_t v0 = sub_26111ED28();
  uint64_t v4 = sub_2610FB410(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2610FB410(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2610FB568(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_2610F8E70(v9, 0);
      unint64_t v12 = sub_2610FB668((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_26111F278();
LABEL_4:
        JUMPOUT(0x26122D4B0);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x26122D4B0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x26122D4B0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2610FB568(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2610F8ED8(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2610F8ED8(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2610FB668(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    id v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_2610F8ED8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_26111ECE8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_26111F278();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_2610F8ED8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_26111ECB8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void (*sub_2610FB87C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2610FB92C(v6, a2, a3);
  return sub_2610FB8E4;
}

void sub_2610FB8E4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2610FB92C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x26122DAE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return destroy for VUEnrollmentGallery.EnrollmentObservation;
  }
  __break(1u);
  return result;
}

void sub_2610FB9AC(unsigned __int8 *a1@<X8>)
{
  sub_2610EE3C0(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_staleTags, a1);
}

void sub_2610FB9D4(unsigned __int8 *a1@<X8>)
{
  sub_2610EE3C0(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_staleObservations, a1);
}

id sub_2610FB9FC()
{
  return sub_2610F8420(v0);
}

unint64_t sub_2610FBA18(unint64_t a1, void *a2)
{
  return sub_2610F56CC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_2610FBA28(uint64_t a1, void *a2)
{
  return sub_2610F53DC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_2610FBA34()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_2610FBA6C()
{
  return sub_2610F0498(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32));
}

uint64_t sub_2610FBA78()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

void sub_2610FBAA0()
{
  sub_2610EF380(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_2610FBAC8()
{
  sub_2610EE958(*(unsigned __int8 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 17) << 8), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2610FBAE4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBAF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2610FBB34()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40ADF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2610FBBAC()
{
  sub_2610EE020(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2610FBBB8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBBC8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2610FBC00()
{
  sub_2610ECACC(*(unsigned __int8 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 17) << 8), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2610FBC1C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBC2C()
{
  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2610FBC74()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBC84()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2610FBCBC()
{
  sub_2610E8364(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2610FBCC4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBCD4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2610FBD14()
{
  sub_2610E80E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_2610FBD20()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBD30()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2610FBD70()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBD80()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2610FBDC0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2610FBDD0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_26111E4F8();
      swift_allocObject();
      sub_26111E4E8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_26111E648();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_2610FBE6C()
{
  unint64_t result = qword_26B40A2E0;
  if (!qword_26B40A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B40A2E0);
  }
  return result;
}

void sub_2610FBEC0(unsigned __int8 a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v8 = (void *)sub_26111EBC8();
  id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_261120090;
  uint64_t v11 = MEMORY[0x263F8D750];
  *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = a1;
  unint64_t v12 = (void *)sub_26111EEF8();
  objc_msgSend(v9, sel_setPredicate_, v12);

  uint64_t v13 = *(void **)(a2 + 16);
  type metadata accessor for VUIndexSubset();
  id v14 = v13;
  unint64_t v15 = sub_26111F048();

  if (v3)
  {
    id v16 = v9;
    goto LABEL_11;
  }
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(a2 + 16));
    objc_msgSend(v16, sel_setType_, a1);
    uint64_t v19 = a3[2];
    if (!v19) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v15 & 0xC000000000000001) != 0) {
    goto LABEL_16;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  for (id i = *(id *)(v15 + 32); ; id i = (id)MEMORY[0x26122DAE0](0, v15))
  {
    unint64_t v18 = i;
    swift_bridgeObjectRelease();
    id v16 = v18;
    uint64_t v19 = a3[2];
    if (!v19)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_9:
    objc_msgSend(v16, sel_setEmbeddingRevision_, a3[4]);
    if (v19 != 1) {
      break;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    ;
  }
  objc_msgSend(v16, sel_setContextualEmbeddingRevision_, a3[5]);

LABEL_11:
}

uint64_t *sub_2610FC150(unsigned __int8 a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t *a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = v14;
  unint64_t v18 = a3;
  if (a4 >> 60 != 15)
  {
    switch(a4 >> 62)
    {
      case 1uLL:
        LODWORD(v20) = HIDWORD(a3) - a3;
        if (__OFSUB__(HIDWORD(a3), a3)) {
          goto LABEL_55;
        }
        uint64_t v20 = (int)v20;
LABEL_7:
        if (a1 != 6) {
          goto LABEL_12;
        }
        if (v20 != 3072) {
          goto LABEL_16;
        }
        goto LABEL_13;
      case 2uLL:
        uint64_t v22 = a3[2];
        uint64_t v21 = a3[3];
        BOOL v23 = __OFSUB__(v21, v22);
        uint64_t v20 = v21 - v22;
        if (!v23) {
          goto LABEL_7;
        }
        goto LABEL_56;
      case 3uLL:
        if (a1 == 6) {
          goto LABEL_16;
        }
        uint64_t v20 = 0;
LABEL_12:
        if (v20 == 512) {
          goto LABEL_13;
        }
LABEL_16:
        unsigned int v25 = sub_26111EAC8();
        os_log_type_t v26 = sub_26111EF58();
        if (!os_log_type_enabled(v25, v26)) {
          goto LABEL_48;
        }
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v27 = 0;
        uint64_t v28 = "Unable to add embedding: embedding size does not match expected size";
        break;
      default:
        uint64_t v20 = BYTE6(a4);
        goto LABEL_7;
    }
    goto LABEL_45;
  }
LABEL_13:
  if (a8 >> 60 != 15)
  {
    uint64_t v24 = 0;
    switch(a8 >> 62)
    {
      case 1uLL:
        LODWORD(v24) = HIDWORD(a7) - a7;
        if (__OFSUB__(HIDWORD(a7), a7)) {
          goto LABEL_57;
        }
        uint64_t v24 = (int)v24;
LABEL_21:
        uint64_t v31 = *(void *)(v14 + 24);
        if ((unint64_t)(v31 - 0x2000000000000000) >> 62 != 3)
        {
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          JUMPOUT(0x2610FC778);
        }
        if (v24 == 4 * v31) {
          goto LABEL_23;
        }
        unsigned int v25 = sub_26111EAC8();
        os_log_type_t v26 = sub_26111EF58();
        if (!os_log_type_enabled(v25, v26)) {
          goto LABEL_48;
        }
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v27 = 0;
        uint64_t v28 = "Unable to add contextual embedding: contextual embedding size does not match expected size";
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(a7 + 16);
        uint64_t v29 = *(void *)(a7 + 24);
        BOOL v23 = __OFSUB__(v29, v30);
        uint64_t v24 = v29 - v30;
        if (!v23) {
          goto LABEL_21;
        }
        goto LABEL_58;
      case 3uLL:
        goto LABEL_21;
      default:
        uint64_t v24 = BYTE6(a8);
        goto LABEL_21;
    }
LABEL_45:
    uint64_t v46 = v25;
    os_log_type_t v47 = v26;
    signed int v48 = v27;
    uint32_t v49 = 2;
LABEL_46:
    _os_log_impl(&dword_261042000, v46, v47, v28, v48, v49);
    id v50 = v27;
LABEL_47:
    MEMORY[0x26122E4F0](v50, -1, -1);
LABEL_48:

    sub_261046B60();
    swift_allocError();
    *signed int v51 = 1;
    swift_willThrow();
    return v18;
  }
LABEL_23:
  if (a4 >> 60 != 15 && (a6 & 1) == 0)
  {
    id v32 = (uint64_t *)(v14 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
    swift_beginAccess();
    uint64_t v33 = *v32;
    if (*(void *)(v33 + 16))
    {
      unint64_t v34 = sub_26105D5E8(a1);
      if (v35)
      {
        uint64_t v36 = *(void *)(*(void *)(*(void *)(v33 + 56) + 8 * v34) + 24);
        if (v36 && v36 != a5)
        {
          unsigned int v25 = sub_26111EAC8();
          os_log_type_t v53 = sub_26111EF58();
          if (!os_log_type_enabled(v25, v53)) {
            goto LABEL_48;
          }
          unint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v27 = 134218240;
          unint64_t v18 = &v59;
          sub_26111F0D8();
          *((_WORD *)v27 + 6) = 2048;
          sub_26111F0D8();
          uint64_t v28 = "Unable to add embedding: provided embedding revision (%ld) does not match the current embedding revision (%ld)";
          uint64_t v46 = v25;
          os_log_type_t v47 = v53;
          signed int v48 = v27;
          uint32_t v49 = 22;
          goto LABEL_46;
        }
      }
    }
  }
  if (a8 >> 60 != 15 && (a10 & 1) == 0)
  {
    uint64_t v38 = (uint64_t *)(v16 + OBJC_IVAR____TtC19VisualUnderstanding20VUIndexCoreDataStore_parameters);
    swift_beginAccess();
    uint64_t v39 = *v38;
    if (*(void *)(v39 + 16))
    {
      unint64_t v40 = sub_26105D5E8(a1);
      if (v41)
      {
        signed int v42 = *(uint64_t **)(*(void *)(*(void *)(v39 + 56) + 8 * v40) + 32);
        if (v42 && v42 != a9)
        {
          unsigned int v25 = sub_26111EAC8();
          os_log_type_t v55 = sub_26111EF58();
          if (!os_log_type_enabled(v25, v55)) {
            goto LABEL_48;
          }
          uint64_t v57 = swift_slowAlloc();
          *(_DWORD *)uint64_t v57 = 134218240;
          unint64_t v18 = &v61;
          sub_26111F0D8();
          *(_WORD *)(v57 + 12) = 2048;
          id v60 = v42;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v25, v55, "Unable to add embedding: provided contextual embedding revision (%ld) does not match the current embedding revision (%ld)", (uint8_t *)v57, 0x16u);
          id v50 = (uint8_t *)v57;
          goto LABEL_47;
        }
      }
    }
  }
  MEMORY[0x270FA5388](a14);
  unint64_t v18 = (uint64_t *)v44;
  sub_26111F028();

  if (!v15)
  {
    unint64_t v18 = v60;
    id v45 = *(id *)(v16 + 16);
    sub_26111F028();
  }
  return v18;
}

uint64_t sub_2610FC798()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2610FC7D0(uint64_t a1, uint64_t a2)
{
  sub_2610EACC0(a1, a2, v2);
}

uint64_t sub_2610FC7D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for VUIndexCoreDataStore.ClientLabel()
{
  return &type metadata for VUIndexCoreDataStore.ClientLabel;
}

unint64_t sub_2610FC834()
{
  unint64_t result = qword_26A910648;
  if (!qword_26A910648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910648);
  }
  return result;
}

uint64_t sub_2610FC8E8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_2610622F4(0, v1, 0);
  uint64_t v4 = v28;
  uint64_t result = sub_2610BF218(a1);
  uint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  int64_t v24 = v1;
  int v25 = v6;
  uint64_t v26 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_28;
    }
    uint64_t v27 = *(void *)(*(void *)(a1 + 48) + 8 * v7);
    type metadata accessor for VUIndexClusterer.NodeTags(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v13
        + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
    uint64_t v15 = sub_26111E778();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    *(_DWORD *)(v13
              + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore) = 0;
    *(unsigned char *)(v13
             + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) = 0;
    *(void *)(v13
              + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores) = MEMORY[0x263F8EE80];
    *(void *)(v13
              + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_localRejectionTags) = v2;
    unint64_t v17 = *(void *)(v28 + 16);
    unint64_t v16 = *(void *)(v28 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_2610622F4(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v28 + 16) = v17 + 1;
    uint64_t v18 = v28 + 16 * v17;
    *(void *)(v18 + 32) = v27;
    *(void *)(v18 + 40) = v13;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 >= v10) {
      goto LABEL_29;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v19 = *(void *)(v26 + 8 * v12);
    if ((v19 & (1 << v7)) == 0) {
      goto LABEL_30;
    }
    int v6 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_31;
    }
    unint64_t v20 = v19 & (-2 << (v7 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v7 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v2 = MEMORY[0x263F8EE78];
      int64_t v11 = v24;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      uint64_t v2 = MEMORY[0x263F8EE78];
      int64_t v11 = v24;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v26 + 8 * v21);
        if (!v23)
        {
          unint64_t v21 = v12 + 2;
          if (v12 + 2 >= v22) {
            goto LABEL_4;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v21);
          if (!v23)
          {
            while (v22 - 3 != v12)
            {
              unint64_t v23 = *(void *)(a1 + 88 + 8 * v12++);
              if (v23)
              {
                unint64_t v21 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    ++v8;
    uint64_t v7 = v10;
    if (v8 == v11) {
      return v4;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2610FCBB8(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_26106229C(0, v2, 0);
    uint64_t v3 = v19;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(sub_26111E778() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v18 = v7;
    do
    {
      uint64_t v8 = *a2;
      if (*(void *)(*a2 + 16) && (unint64_t v9 = sub_26105D7C4(v17 + *(void *)(v18 + 72) * v6), (v10 & 1) != 0))
      {
        char v11 = 0;
        uint64_t v12 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      }
      else
      {
        uint64_t v12 = 0;
        char v11 = 1;
      }
      unint64_t v14 = *(void *)(v19 + 16);
      unint64_t v13 = *(void *)(v19 + 24);
      if (v14 >= v13 >> 1) {
        sub_26106229C(v13 > 1, v14 + 1, 1);
      }
      ++v6;
      *(void *)(v19 + 16) = v14 + 1;
      uint64_t v15 = v19 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(unsigned char *)(v15 + 40) = v11;
    }
    while (v2 != v6);
  }
  return v3;
}

uint64_t sub_2610FCD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v45 = sub_26111E778();
  uint64_t v3 = *(void *)(v45 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v45);
  signed int v42 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v41 = (char *)&v35 - v6;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910050);
  MEMORY[0x270FA5388](v46);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (uint64_t *)((char *)&v35 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = *(void *)(a2 + 16);
  if (!v19) {
    return 0;
  }
  uint64_t v20 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  id v44 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v21 = *(void *)(v16 + 72);
  uint64_t v35 = a2;
  swift_bridgeObjectRetain();
  uint64_t v22 = v43;
  uint64_t v39 = v12;
  uint64_t v40 = v9;
  uint64_t v38 = v15;
  uint64_t v36 = v21;
  do
  {
    sub_26108102C(v20, (uint64_t)v18);
    unint64_t v23 = &v8[*(int *)(v46 + 48)];
    sub_26108102C((uint64_t)v18, (uint64_t)v8);
    sub_26108102C(v22, (uint64_t)v23);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_26108102C((uint64_t)v8, (uint64_t)v12);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*v44)(v12, v45);
LABEL_4:
        sub_2610718C8((uint64_t)v8, &qword_26A910050);
        sub_2610811A4((uint64_t)v18);
        goto LABEL_5;
      }
      int64_t v24 = *v37;
      int v25 = v41;
      uint64_t v26 = v12;
      uint64_t v27 = v45;
      (*v37)(v41, v26, v45);
      uint64_t v28 = v42;
      v24(v42, v23, v27);
      char v29 = sub_26111E758();
      uint64_t v30 = *v44;
      (*v44)(v28, v27);
      uint64_t v31 = v25;
      uint64_t v32 = v27;
      uint64_t v15 = v38;
      uint64_t v12 = v39;
      v30(v31, v32);
      uint64_t v21 = v36;
      uint64_t v22 = v43;
    }
    else
    {
      sub_26108102C((uint64_t)v8, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_4;
      }
      char v29 = *v15 == *(void *)v23;
    }
    sub_2610811A4((uint64_t)v8);
    sub_2610811A4((uint64_t)v18);
    if (v29)
    {
      uint64_t v33 = 1;
      goto LABEL_14;
    }
LABEL_5:
    v20 += v21;
    --v19;
  }
  while (v19);
  uint64_t v33 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v33;
}

BOOL sub_2610FD0E8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_26111F4B8();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_2610FD1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_26111E778();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_26110A9BC(&qword_26A90FF58, MEMORY[0x263F07508]),
        uint64_t v7 = sub_26111EB88(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_26110A9BC(&qword_26A90FF60, MEMORY[0x263F07508]);
      char v15 = sub_26111EBB8();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_2610FD3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910050);
  MEMORY[0x270FA5388](v64);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_26111E778();
  uint64_t v6 = *(void *)(v60 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v60);
  uint64_t v56 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v51 - v9;
  uint64_t v10 = type metadata accessor for VUStreamingGallery.Label(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v61 = (uint64_t *)((char *)&v51 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v51 - v20;
  if (*(void *)(a2 + 16))
  {
    sub_26111F4C8();
    sub_26108102C(a1, (uint64_t)v21);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    os_log_type_t v55 = v14;
    uint64_t v59 = v6;
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v24 = a1;
      uint64_t v25 = v6;
      uint64_t v26 = v57;
      uint64_t v27 = v60;
      v23(v57, v21, v60);
      sub_26110A9BC(&qword_26A90FF58, MEMORY[0x263F07508]);
      sub_26111EB98();
      uint64_t v28 = v25;
      a1 = v24;
      uint64_t v29 = v27;
      uint64_t v14 = v55;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v29);
    }
    else
    {
      sub_26111F4D8();
    }
    uint64_t v30 = sub_26111F508();
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v32 = v30 & ~v31;
    uint64_t v33 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32))
    {
      uint64_t v63 = a1;
      uint64_t v34 = ~v31;
      uint64_t v62 = *(void *)(v11 + 72);
      id v58 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v52 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v59 = a2;
      uint64_t v53 = v10;
      uint64_t v54 = ~v31;
      do
      {
        sub_26108102C(*(void *)(a2 + 48) + v62 * v32, (uint64_t)v19);
        uint64_t v35 = &v5[*(int *)(v64 + 48)];
        sub_26108102C((uint64_t)v19, (uint64_t)v5);
        sub_26108102C(v63, (uint64_t)v35);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_26108102C((uint64_t)v5, (uint64_t)v14);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            (*v58)(v14, v60);
LABEL_8:
            sub_2610718C8((uint64_t)v5, &qword_26A910050);
            sub_2610811A4((uint64_t)v19);
            goto LABEL_9;
          }
          uint64_t v36 = *v52;
          uint64_t v37 = v57;
          uint64_t v38 = v14;
          uint64_t v39 = v60;
          (*v52)(v57, v38, v60);
          uint64_t v40 = v33;
          char v41 = v56;
          v36(v56, v35, v39);
          char v42 = sub_26111E758();
          uint64_t v43 = *v58;
          id v44 = v41;
          uint64_t v33 = v40;
          (*v58)(v44, v39);
          uint64_t v45 = v37;
          uint64_t v46 = v39;
          uint64_t v34 = v54;
          uint64_t v14 = v55;
          v43(v45, v46);
          a2 = v59;
          sub_2610811A4((uint64_t)v5);
          sub_2610811A4((uint64_t)v19);
          if (v42) {
            return 1;
          }
        }
        else
        {
          sub_26108102C((uint64_t)v5, (uint64_t)v61);
          if (swift_getEnumCaseMultiPayload() == 1) {
            goto LABEL_8;
          }
          uint64_t v47 = *v61;
          uint64_t v48 = *(void *)v35;
          sub_2610811A4((uint64_t)v5);
          sub_2610811A4((uint64_t)v19);
          BOOL v49 = v47 == v48;
          a2 = v59;
          if (v49) {
            return 1;
          }
        }
LABEL_9:
        unint64_t v32 = (v32 + 1) & v34;
      }
      while (((*(void *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_2610FD8FC(uint64_t a1)
{
  int64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_2610FD940(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = *a2;
  for (id i = (unsigned char *)(a1 + 40); (*i & 1) == 0; i += 16)
  {
    if (*((void *)i - 1) == result) {
      char v6 = *((unsigned char *)a2 + 8);
    }
    else {
      char v6 = 1;
    }
    if ((v6 & 1) == 0) {
      return result;
    }
LABEL_7:
    if (!--v2) {
      return 0;
    }
  }
  if (!*((unsigned char *)a2 + 8)) {
    goto LABEL_7;
  }
  return *((void *)i - 1);
}

uint64_t sub_2610FD9AC(unsigned int a1, char *a2, void *a3, int a4, int a5, int a6, uint64_t (*a7)(void), uint64_t a8)
{
  v393 = a3;
  uint64_t v387 = a8;
  os_signpost_type_t v392 = a7;
  LODWORD(v388) = a6;
  LODWORD(v395) = a5;
  int v367 = a4;
  double v383 = *(double *)&a2;
  unsigned int v384 = a1;
  uint64_t v9 = sub_26111EA78();
  unint64_t v10 = *(void *)(v9 - 8);
  unint64_t v377 = v9;
  unint64_t v378 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v348 = (char *)&v344 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v371 = (char *)&v344 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v362 = (char *)&v344 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v372 = (char *)&v344 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  os_log_type_t v365 = (char *)&v344 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v344 = (char *)&v344 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v346 = (char *)&v344 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v350 = (char *)&v344 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  os_log_type_t v352 = (char *)&v344 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  id v347 = (char *)&v344 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v353 = (char *)&v344 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v358 = (char *)&v344 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v349 = (char *)&v344 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v359 = (char *)&v344 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v363 = (char *)&v344 - v39;
  uint64_t v40 = sub_26111EA38();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  char v354 = (char *)&v344 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  int v373 = (char *)&v344 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v368 = (char *)&v344 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  *(void *)&double v374 = (char *)&v344 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  v364 = (char *)&v344 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v345 = (char *)&v344 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v351 = (char *)&v344 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v357 = (char *)&v344 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v360 = (char *)&v344 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  id v356 = (char *)&v344 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v361 = (char *)&v344 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  v366 = (char *)&v344 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  id v355 = (char *)&v344 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  os_signpost_type_t v369 = (char *)&v344 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  v370 = (char *)&v344 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v344 - v73;
  MEMORY[0x270FA5388](v72);
  uint64_t v76 = (char *)&v344 - v75;
  v391 = v8;
  int v77 = (char *)v8 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  sub_26111EA28();
  id v382 = v77;
  char v78 = sub_26111EA48();
  os_signpost_type_t v79 = sub_26111F018();
  if (sub_26111F0B8())
  {
    uint64_t v80 = v41 + 16;
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
    uint64_t v390 = v41;
    uint64_t v82 = v40;
    unint64_t v83 = v80 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v81(v74, v76, v82);
    uint64_t v84 = v74;
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v85 = 0;
    os_signpost_id_t v86 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v78, v79, v86, "cluster", "", v85, 2u);
    uint64_t v87 = v85;
    uint64_t v74 = v84;
    MEMORY[0x26122E4F0](v87, -1, -1);

    uint64_t v88 = v390;
    uint64_t v89 = v84;
    uint64_t v90 = v82;
    (*(void (**)(char *, uint64_t))(v390 + 8))(v89, v82);
    unint64_t v91 = v83;
    uint64_t v41 = v88;
    uint64_t v40 = v90;
  }
  else
  {

    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
    unint64_t v91 = (v41 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v375 = v91;
  unint64_t v376 = (void (*)(char *, void, uint64_t))v81;
  v81(v74, v76, v40);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v389 = sub_26111EA98();
  unsigned int v92 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v381 = v40;
  uint64_t v390 = v41 + 8;
  v92(v76, v40);
  uint64_t v93 = swift_allocObject();
  uint64_t v94 = (uint64_t)v392;
  uint64_t v95 = v387;
  uint64_t v385 = v93;
  *(void *)(v93 + 16) = v392;
  *(void *)(v93 + 24) = v95;
  *(double *)&unint64_t v400 = MEMORY[0x263F8EE80];
  *(double *)&unint64_t v401 = MEMORY[0x263F8EE80];
  v379 = v74;
  v380 = (void (*)(void, void))v92;
  if (v395)
  {
    sub_261071800(v94);
    unsigned int v96 = v384;
    unint64_t v97 = v391;
    goto LABEL_8;
  }
  unint64_t v97 = v391;
  uint64_t v98 = v391[5];
  uint64_t v99 = v391[6];
  v386 = v391 + 2;
  __swift_project_boxed_opaque_existential_1Tm(v391 + 2, v98);
  uint64_t v100 = *(uint64_t (**)(void, uint64_t, uint64_t))(v99 + 40);
  sub_261071800(v94);
  uint64_t v101 = v384;
  unsigned int v96 = v384;
  if ((v100(v384, v98, v99) & 1) == 0)
  {
    uint64_t v102 = v97[5];
    uint64_t v103 = v97[6];
    __swift_project_boxed_opaque_existential_1Tm(v386, v102);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 64))(v101, v102, v103) & 1) == 0)
    {
LABEL_8:
      if ((v388 & 1) == 0)
      {
        uint64_t v104 = sub_26111EAC8();
        os_log_type_t v105 = sub_26111EF68();
        if (os_log_type_enabled(v104, v105))
        {
          uint64_t v106 = swift_slowAlloc();
          *(double *)&uint64_t v107 = COERCE_DOUBLE(swift_slowAlloc());
          double v398 = *(double *)&v107;
          *(_DWORD *)uint64_t v106 = 16777730;
          LOBYTE(v397[0]) = v96;
          sub_26111F0D8();
          *(_WORD *)(v106 + 5) = 2080;
          if (v395) {
            uint64_t v108 = 0xD000000000000023;
          }
          else {
            uint64_t v108 = 0xD000000000000013;
          }
          if (v395) {
            unint64_t v109 = 0x80000002611248C0;
          }
          else {
            unint64_t v109 = 0x80000002611248A0;
          }
          v397[0] = sub_26105CFF8(v108, v109, (uint64_t *)&v398);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_261042000, v104, v105, "Skipping primary partners for type %hhu as %s", (uint8_t *)v106, 0xFu);
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v107, -1, -1);
          MEMORY[0x26122E4F0](v106, -1, -1);
        }

        unsigned int v110 = 0;
        *(double *)&uint64_t v111 = MEMORY[0x263F8EE80];
        BOOL v112 = v394;
        goto LABEL_18;
      }
    }
  }
  double Current = CFAbsoluteTimeGetCurrent();
  v413[0] = 1;
  uint64_t v415 = 0;
  uint64_t v416 = 0;
  uint64_t v414 = 0;
  __int16 v417 = 513;
  uint64_t v123 = swift_allocObject();
  uint64_t v124 = v385;
  *(void *)(v123 + 16) = sub_26110A8BC;
  *(void *)(v123 + 24) = v124;
  swift_retain();
  uint64_t v125 = v394;
  *(double *)&uint64_t v126 = COERCE_DOUBLE(sub_2611004E0(v96, (uint64_t)v413, *(char **)&v383, v393, (uint64_t)sub_26110A954, v123));
  v386 = v125;
  if (v125)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v128 = sub_26111EA48();
    double v129 = v374;
    sub_26111EA88();
    os_signpost_type_t v130 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v131 = v372;
      sub_26111EAB8();
      swift_release();
      unint64_t v133 = v377;
      unint64_t v132 = v378;
      if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v131, v377) == *MEMORY[0x263F90238])
      {
        uint64_t v134 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, unint64_t))(v132 + 8))(v131, v133);
        uint64_t v134 = "";
      }
      uint64_t v244 = v379;
      uint64_t v245 = v381;
      v376(v379, *(void *)&v129, v381);
      double v246 = v129;
      v247 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v247 = 0;
      os_signpost_id_t v248 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v128, v130, v248, "cluster", v134, v247, 2u);
      MEMORY[0x26122E4F0](v247, -1, -1);

      double v249 = v246;
      uint64_t v250 = (void (*)(char *, uint64_t))v380;
      v380(*(void *)&v249, v245);
      v250(v244, v245);
      return swift_release();
    }

    double v171 = v129;
    goto LABEL_219;
  }
  unint64_t v135 = v126;
  uint64_t v136 = v127;
  swift_release();
  unint64_t v401 = v135;
  swift_bridgeObjectRelease();
  if (v392 && (v392(0) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v118 = sub_26111EA48();
    uint64_t v119 = v370;
    sub_26111EA88();
    LOBYTE(v120) = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v121 = v363;
      goto LABEL_216;
    }
    goto LABEL_218;
  }
  uint64_t v388 = v136;
  double v137 = CFAbsoluteTimeGetCurrent();
  v370 = (char *)v391 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_logger;
  uint64_t v138 = sub_26111EAC8();
  os_log_type_t v139 = sub_26111EF68();
  if (os_log_type_enabled(v138, v139))
  {
    uint64_t v140 = swift_slowAlloc();
    *(_DWORD *)uint64_t v140 = 134218496;
    swift_beginAccess();
    double v398 = *(double *)(v401 + 16);
    unint64_t v97 = &v399;
    sub_26111F0D8();
    *(_WORD *)(v140 + 12) = 256;
    LOBYTE(v398) = v384;
    sub_26111F0D8();
    *(_WORD *)(v140 + 15) = 2048;
    double v398 = v137 - Current;
    sub_26111F0D8();
    _os_log_impl(&dword_261042000, v138, v139, "Updating %ld primary densities for type %hhu took %fs", (uint8_t *)v140, 0x19u);
    MEMORY[0x26122E4F0](v140, -1, -1);
  }

  swift_beginAccess();
  uint64_t v118 = v401;
  uint64_t v141 = swift_bridgeObjectRetain();
  unint64_t v142 = sub_2610B5894(v141);
  swift_bridgeObjectRelease();
  float v143 = *(float *)&v142;
  if ((v142 & 0x100000000) != 0) {
    float v143 = 1.0;
  }
  uint64_t v144 = *(void *)(v118 + 64);
  v394 = (void *)(v118 + 64);
  uint64_t v145 = 1 << *(unsigned char *)(v118 + 32);
  uint64_t v146 = -1;
  if (v145 < 64) {
    uint64_t v146 = ~(-1 << v145);
  }
  unint64_t v147 = v146 & v144;
  int64_t v395 = (unint64_t)(v145 + 63) >> 6;
  if (v143 > 1.0) {
    float v148 = v143;
  }
  else {
    float v148 = 1.0;
  }
  swift_bridgeObjectRetain();
  int64_t v149 = 0;
  while (1)
  {
    if (v147)
    {
      unint64_t v150 = __clz(__rbit64(v147));
      v147 &= v147 - 1;
      unint64_t v151 = v150 | (v149 << 6);
      goto LABEL_55;
    }
    int64_t v152 = v149 + 1;
    if (__OFADD__(v149, 1)) {
      goto LABEL_226;
    }
    uint64_t v153 = v388;
    if (v152 >= v395)
    {
LABEL_65:
      swift_release();
      int64_t v172 = 0;
      uint64_t v173 = *(void *)(v153 + 64);
      v394 = (void *)(v153 + 64);
      uint64_t v174 = 1 << *(unsigned char *)(v153 + 32);
      uint64_t v175 = -1;
      if (v174 < 64) {
        uint64_t v175 = ~(-1 << v174);
      }
      unint64_t v176 = v175 & v173;
      int64_t v395 = (unint64_t)(v174 + 63) >> 6;
      double v177 = MEMORY[0x263F8EE80];
      if ((v175 & v173) != 0) {
        goto LABEL_71;
      }
LABEL_72:
      int64_t v180 = v172 + 1;
      if (__OFADD__(v172, 1))
      {
LABEL_227:
        __break(1u);
        goto LABEL_228;
      }
      uint64_t v181 = v393;
      if (v180 < v395)
      {
        unint64_t v182 = v394[v180];
        ++v172;
        if (v182) {
          goto LABEL_85;
        }
        int64_t v172 = v180 + 1;
        if (v180 + 1 >= v395) {
          goto LABEL_125;
        }
        unint64_t v182 = v394[v172];
        if (v182) {
          goto LABEL_85;
        }
        int64_t v172 = v180 + 2;
        if (v180 + 2 >= v395) {
          goto LABEL_125;
        }
        unint64_t v182 = v394[v172];
        if (v182)
        {
LABEL_85:
          unint64_t v176 = (v182 - 1) & v182;
          for (unint64_t i = __clz(__rbit64(v182)) + (v172 << 6); ; unint64_t i = v178 | (v172 << 6))
          {
            uint64_t v184 = *(void *)(*(void *)(v153 + 48) + 8 * i);
            uint64_t v185 = *(void *)(v153 + 56) + 16 * i;
            uint64_t v186 = *(void *)v185;
            int v187 = *(_DWORD *)(v185 + 8);
            swift_beginAccess();
            unint64_t v188 = v401;
            if (!*(void *)(v401 + 16))
            {
              swift_endAccess();
              if (v184 >= v186) {
                goto LABEL_70;
              }
              goto LABEL_102;
            }
            unint64_t v189 = sub_26105D6EC(v186);
            float v190 = 0.0;
            if (v191) {
              float v190 = *(float *)(*(void *)(v188 + 56) + 4 * v189);
            }
            swift_endAccess();
            unint64_t v192 = sub_26105D6EC(v184);
            if (v193) {
              BOOL v194 = *(float *)(*(void *)(v188 + 56) + 4 * v192) < v190;
            }
            else {
              BOOL v194 = v190 > 0.0;
            }
            unint64_t v195 = sub_26105D6EC(v186);
            if (v196)
            {
              float v197 = *(float *)(*(void *)(v188 + 56) + 4 * v195);
              unint64_t v198 = sub_26105D6EC(v184);
              if ((v199 & 1) == 0 || v197 != *(float *)(*(void *)(v188 + 56) + 4 * v198))
              {
LABEL_101:
                if (!v194) {
                  goto LABEL_70;
                }
                goto LABEL_102;
              }
            }
            else
            {
              sub_26105D6EC(v184);
              if (v201) {
                goto LABEL_101;
              }
            }
            char v200 = v184 < v186 || v194;
            if ((v200 & 1) == 0)
            {
LABEL_70:
              if (!v176) {
                goto LABEL_72;
              }
              goto LABEL_71;
            }
LABEL_102:
            double v374 = v177;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v203 = v400;
            double v398 = *(double *)&v400;
            *(double *)&unint64_t v400 = -0.0;
            unint64_t v205 = sub_26105D6EC(v184);
            uint64_t v206 = *(void *)(v203 + 16);
            BOOL v207 = (v204 & 1) == 0;
            uint64_t v208 = v206 + v207;
            if (__OFADD__(v206, v207)) {
              goto LABEL_230;
            }
            if (*(void *)(v203 + 24) >= v208)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                char v227 = v204;
                sub_26107B9C8();
                LOBYTE(v204) = v227;
              }
            }
            else
            {
              LODWORD(v372) = v204;
              sub_261077078(v208, isUniquelyReferenced_nonNull_native);
              unint64_t v209 = sub_26105D6EC(v184);
              int v210 = v204 & 1;
              LOBYTE(v204) = (_BYTE)v372;
              if ((v372 & 1) != v210) {
                goto LABEL_234;
              }
              unint64_t v205 = v209;
            }
            double v211 = v374;
            double v212 = v398;
            if (v204)
            {
              *(void *)(*(void *)(*(void *)&v398 + 56) + 8 * v205) = v186;
            }
            else
            {
              *(void *)(*(void *)&v398 + 8 * (v205 >> 6) + 64) |= 1 << v205;
              uint64_t v213 = 8 * v205;
              *(void *)(*(void *)(*(void *)&v212 + 48) + v213) = v184;
              *(void *)(*(void *)(*(void *)&v212 + 56) + v213) = v186;
              uint64_t v214 = *(void *)(*(void *)&v212 + 16);
              BOOL v169 = __OFADD__(v214, 1);
              uint64_t v215 = v214 + 1;
              if (v169) {
                goto LABEL_232;
              }
              *(void *)(*(void *)&v212 + 16) = v215;
            }
            *(double *)&unint64_t v400 = v212;
            swift_bridgeObjectRelease();
            char v216 = swift_isUniquelyReferenced_nonNull_native();
            double v398 = v211;
            unint64_t v218 = sub_26105D6EC(v184);
            uint64_t v219 = *(void *)(*(void *)&v211 + 16);
            BOOL v220 = (v217 & 1) == 0;
            uint64_t v221 = v219 + v220;
            if (__OFADD__(v219, v220)) {
              goto LABEL_231;
            }
            char v222 = v217;
            if (*(void *)(*(void *)&v211 + 24) >= v221)
            {
              if (v216)
              {
                double v177 = v398;
                if (v217) {
                  goto LABEL_120;
                }
              }
              else
              {
                sub_26107CAC0();
                double v177 = v398;
                if (v222) {
                  goto LABEL_120;
                }
              }
            }
            else
            {
              sub_261078B80(v221, v216);
              unint64_t v223 = sub_26105D6EC(v184);
              if ((v222 & 1) != (v224 & 1)) {
                goto LABEL_234;
              }
              unint64_t v218 = v223;
              double v177 = v398;
              if (v222)
              {
LABEL_120:
                *(_DWORD *)(*(void *)(*(void *)&v177 + 56) + 4 * v218) = v187;
                goto LABEL_121;
              }
            }
            *(void *)(*(void *)&v177 + 8 * (v218 >> 6) + 64) |= 1 << v218;
            *(void *)(*(void *)(*(void *)&v177 + 48) + 8 * v218) = v184;
            *(_DWORD *)(*(void *)(*(void *)&v177 + 56) + 4 * v218) = v187;
            uint64_t v225 = *(void *)(*(void *)&v177 + 16);
            BOOL v169 = __OFADD__(v225, 1);
            uint64_t v226 = v225 + 1;
            if (v169) {
              goto LABEL_233;
            }
            *(void *)(*(void *)&v177 + 16) = v226;
LABEL_121:
            swift_bridgeObjectRelease();
            if (!v176) {
              goto LABEL_72;
            }
LABEL_71:
            unint64_t v178 = __clz(__rbit64(v176));
            v176 &= v176 - 1;
          }
        }
        int64_t v183 = v180 + 3;
        if (v183 < v395)
        {
          unint64_t v182 = v394[v183];
          if (!v182)
          {
            while (1)
            {
              int64_t v172 = v183 + 1;
              if (__OFADD__(v183, 1)) {
                goto LABEL_229;
              }
              if (v172 >= v395) {
                goto LABEL_125;
              }
              unint64_t v182 = v394[v172];
              ++v183;
              if (v182) {
                goto LABEL_85;
              }
            }
          }
          int64_t v172 = v183;
          goto LABEL_85;
        }
      }
LABEL_125:
      swift_release();
      if (v392 && (v392(*(void *)(v400 + 16)) & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v251 = v369;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v252 = v359;
          sub_26111EAB8();
          swift_release();
          unint64_t v254 = v377;
          unint64_t v253 = v378;
          if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v252, v377) == *MEMORY[0x263F90238])
          {
            uint64_t v255 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, unint64_t))(v253 + 8))(v252, v254);
            uint64_t v255 = "";
          }
          uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
          uint64_t v324 = v379;
          uint64_t v325 = v379;
          uint64_t v119 = v369;
          goto LABEL_223;
        }
        goto LABEL_196;
      }
      double v228 = v177;
      uint64_t v229 = swift_bridgeObjectRetain();
      uint64_t v230 = sub_261074704(v229);
      swift_bridgeObjectRelease();
      v408[0] = 1;
      uint64_t v409 = 0;
      os_signpost_type_t v410 = v230;
      uint64_t v411 = 0;
      __int16 v412 = 513;
      uint64_t v231 = v401;
      uint64_t v232 = swift_allocObject();
      uint64_t v233 = v385;
      *(void *)(v232 + 16) = sub_26110A8BC;
      *(void *)(v232 + 24) = v233;
      swift_retain();
      swift_bridgeObjectRetain();
      v234 = v386;
      uint64_t v235 = sub_261101464(v384, (uint64_t)v408, *(uint64_t *)&v383, v181, v231, (uint64_t)sub_26110AA60, v232);
      v386 = v234;
      if (v234)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v119 = v368;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v121 = v362;
          goto LABEL_216;
        }
        goto LABEL_218;
      }
      uint64_t v256 = v235;
      uint64_t v257 = v236;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v392 && (v392(0) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v119 = v355;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v121 = v349;
          goto LABEL_216;
        }
        goto LABEL_218;
      }
      char v258 = swift_isUniquelyReferenced_nonNull_native();
      double v398 = *(double *)&v400;
      *(double *)&unint64_t v400 = -0.0;
      v259 = v386;
      sub_261109F10(v256, (uint64_t)sub_26110A6E0, 0, v258, &v398);
      if (v259)
      {
        double v343 = v398;
        goto LABEL_238;
      }
      *(double *)&unint64_t v400 = v398;
      swift_bridgeObjectRelease();
      char v260 = swift_isUniquelyReferenced_nonNull_native();
      double v398 = v228;
      sub_261109760(v257, (uint64_t)sub_26110A3E4, 0, v260, &v398);
      BOOL v112 = 0;
      *(double *)&uint64_t v111 = v398;
      swift_bridgeObjectRelease();
      double v261 = CFAbsoluteTimeGetCurrent();
      v262 = sub_26111EAC8();
      os_log_type_t v263 = sub_26111EF68();
      if (os_log_type_enabled(v262, v263))
      {
        uint64_t v264 = swift_slowAlloc();
        *(_DWORD *)uint64_t v264 = 134218240;
        swift_beginAccess();
        double v398 = *(double *)(v400 + 16);
        sub_26111F0D8();
        *(_WORD *)(v264 + 12) = 2048;
        double v398 = v261 - v137;
        sub_26111F0D8();
        _os_log_impl(&dword_261042000, v262, v263, "Updating %ld primary partners took %fs", (uint8_t *)v264, 0x16u);
        uint64_t v265 = v264;
        BOOL v112 = 0;
        MEMORY[0x26122E4F0](v265, -1, -1);
      }

      unsigned int v110 = 1;
      unsigned int v96 = v384;
LABEL_18:
      double v113 = CFAbsoluteTimeGetCurrent();
      v402[0] = 0;
      uint64_t v403 = 0;
      uint64_t v404 = 0;
      uint64_t v405 = v110 - 1;
      char v406 = v110;
      char v407 = 2;
      uint64_t v114 = swift_allocObject();
      uint64_t v115 = v385;
      *(void *)(v114 + 16) = sub_26110A8BC;
      *(void *)(v114 + 24) = v115;
      swift_retain();
      uint64_t v116 = sub_261102294(v96, (uint64_t)v402, *(uint64_t *)&v383, v393, (uint64_t)sub_26110AA60, v114);
      v386 = v112;
      if (v112)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v119 = v373;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v121 = v371;
LABEL_216:
          sub_26111EAB8();
          swift_release();
          unint64_t v337 = v377;
          unint64_t v336 = v378;
          if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v121, v377) == *MEMORY[0x263F90238]) {
            goto LABEL_217;
          }
          (*(void (**)(char *, unint64_t))(v336 + 8))(v121, v337);
          goto LABEL_221;
        }
        goto LABEL_218;
      }
      uint64_t v237 = v116;
      uint64_t v238 = v117;
      swift_release();
      if (v392 && (v392(0) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v119 = v366;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          uint64_t v121 = v358;
          goto LABEL_216;
        }
        goto LABEL_218;
      }
      double v239 = CFAbsoluteTimeGetCurrent();
      if (*(void *)(v237 + 16))
      {
        double v240 = v239;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v241 = sub_26111EAC8();
        os_log_type_t v242 = sub_26111EF68();
        if (os_log_type_enabled(v241, v242))
        {
          uint64_t v243 = swift_slowAlloc();
          *(_DWORD *)uint64_t v243 = 134218496;
          double v398 = *(double *)(v237 + 16);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v243 + 12) = 256;
          LOBYTE(v398) = v384;
          sub_26111F0D8();
          *(_WORD *)(v243 + 15) = 2048;
          double v398 = v240 - v113;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v241, v242, "Updating %ld secondary partners for type %hhu took %fs", (uint8_t *)v243, 0x19u);
          MEMORY[0x26122E4F0](v243, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        char v269 = swift_isUniquelyReferenced_nonNull_native();
        v397[0] = v400;
        *(double *)&unint64_t v400 = -0.0;
        uint64_t v270 = v386;
        sub_261109F10(v237, (uint64_t)sub_26110A6E0, 0, v269, v397);
        if (v270) {
          goto LABEL_235;
        }
        unint64_t v400 = v397[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        char v271 = swift_isUniquelyReferenced_nonNull_native();
        double v398 = *(double *)&v111;
        sub_261109760(v238, (uint64_t)sub_26110A3E4, 0, v271, &v398);
        v386 = 0;
        uint64_t v266 = v384;
        *(double *)&uint64_t v111 = v398;
        swift_bridgeObjectRelease();
        os_signpost_id_t v268 = *(char **)&v383;
        if (v392 && (v392(0) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v118 = sub_26111EA48();
          uint64_t v251 = v361;
          sub_26111EA88();
          LOBYTE(v120) = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            v315 = v353;
            sub_26111EAB8();
            swift_release();
            unint64_t v317 = v377;
            unint64_t v316 = v378;
            if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v315, v377) == *MEMORY[0x263F90238])
            {
              uint64_t v255 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, unint64_t))(v316 + 8))(v315, v317);
              uint64_t v255 = "";
            }
            uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
            uint64_t v324 = v379;
            uint64_t v325 = v379;
            uint64_t v119 = v361;
            goto LABEL_223;
          }
          goto LABEL_196;
        }
        v267 = v391;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v266 = v384;
        v267 = v391;
        os_signpost_id_t v268 = *(char **)&v383;
      }
      swift_beginAccess();
      if (!*(void *)(v400 + 16))
      {
        uint64_t v272 = v267[5];
        uint64_t v273 = v267[6];
        __swift_project_boxed_opaque_existential_1Tm(v267 + 2, v272);
        uint64_t v274 = v272;
        os_signpost_id_t v268 = *(char **)&v383;
        char v275 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v266, v274, v273);
        v267 = v391;
        if ((v275 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v119 = v364;
          unint64_t v309 = v365;
          goto LABEL_182;
        }
      }
      double v276 = CFAbsoluteTimeGetCurrent();
      if (v110) {
        goto LABEL_162;
      }
      uint64_t v277 = v267[5];
      uint64_t v278 = v267[6];
      __swift_project_boxed_opaque_existential_1Tm(v267 + 2, v277);
      uint64_t v279 = swift_bridgeObjectRetain();
      uint64_t v280 = sub_261074704(v279);
      swift_bridgeObjectRelease();
      uint64_t v281 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v278 + 88))(v266, v280, v277, v278);
      uint64_t v283 = v282;
      uint64_t v285 = v284;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v286 = swift_isUniquelyReferenced_nonNull_native();
      double v396 = *(double *)&v400;
      *(double *)&unint64_t v400 = -0.0;
      v287 = v386;
      sub_261109C74(v281, (uint64_t)sub_26110A6E0, 0, v286, &v396);
      if (v287)
      {
        double v343 = v396;
        goto LABEL_238;
      }
      *(double *)&unint64_t v400 = v396;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRetain();
      char v288 = swift_isUniquelyReferenced_nonNull_native();
      v397[0] = v111;
      sub_2611099E0(v283, (uint64_t)sub_26110A3E4, 0, v288, v397);
      uint64_t v111 = v397[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      char v289 = swift_isUniquelyReferenced_nonNull_native();
      double v396 = *(double *)&v401;
      *(double *)&unint64_t v401 = -0.0;
      sub_2611099E0(v285, (uint64_t)sub_26110A3E4, 0, v289, &v396);
      v386 = 0;
      *(double *)&unint64_t v401 = v396;
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v266 = v384;
      os_signpost_id_t v268 = *(char **)&v383;
      if (!v392 || (v392(0) & 1) != 0)
      {
LABEL_162:
        uint64_t v290 = *((unsigned int *)v268 + 14);
        uint64_t v291 = (void *)v400;
        uint64_t v292 = swift_allocObject();
        *(void *)(v292 + 16) = sub_26110A8BC;
        *(void *)(v292 + 24) = v385;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v397[0]) = 0;
        v293 = (void *)sub_2611032A4(v266, v290, v291, v111, v367 & 1, 0, (void (*)(void))sub_26110A8F8, v292);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v392 && (v392(0) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v118 = sub_26111EA48();
          uint64_t v251 = v360;
          sub_26111EA88();
          LOBYTE(v120) = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            uint64_t v318 = v352;
            sub_26111EAB8();
            swift_release();
            unint64_t v320 = v377;
            unint64_t v319 = v378;
            if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v318, v377) == *MEMORY[0x263F90238])
            {
              uint64_t v255 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, unint64_t))(v319 + 8))(v318, v320);
              uint64_t v255 = "";
            }
            uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
            uint64_t v324 = v379;
            uint64_t v325 = v379;
            uint64_t v119 = v360;
            goto LABEL_223;
          }
        }
        else
        {
          swift_beginAccess();
          uint64_t v294 = v401;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v295 = sub_261105DE4((uint64_t)v293, v294, v111);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v392 || (v392(0) & 1) != 0)
          {
            uint64_t v388 = v295;
            v393 = v293;
            v394 = (void *)v111;
            double v296 = CFAbsoluteTimeGetCurrent();
            int64_t v395 = (int64_t)v391 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_logger;
            unint64_t v297 = sub_26111EAC8();
            os_log_type_t v298 = sub_26111EF68();
            if (os_log_type_enabled(v297, v298))
            {
              uint64_t v299 = swift_slowAlloc();
              *(_DWORD *)uint64_t v299 = 134218496;
              double v396 = *(double *)(v400 + 16);
              sub_26111F0D8();
              *(_WORD *)(v299 + 12) = 256;
              LOBYTE(v396) = v266;
              sub_26111F0D8();
              *(_WORD *)(v299 + 15) = 2048;
              double v396 = v296 - v276;
              sub_26111F0D8();
              _os_log_impl(&dword_261042000, v297, v298, "Labeling %ld pairs for type %hhu took %fs", (uint8_t *)v299, 0x19u);
              MEMORY[0x26122E4F0](v299, -1, -1);
            }

            uint64_t v300 = v391[5];
            uint64_t v301 = v391[6];
            *(void *)&double v374 = v391 + 2;
            double v383 = COERCE_DOUBLE(__swift_project_boxed_opaque_existential_1Tm(v391 + 2, v300));
            unint64_t v302 = v400;
            unint64_t v303 = v401;
            uint64_t v304 = swift_allocObject();
            *(void *)(v304 + 16) = sub_26110A8BC;
            *(void *)(v304 + 24) = v385;
            uint64_t v305 = *(uint64_t (**)(uint64_t, unint64_t, unint64_t, void *, void *, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v301 + 72);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            double v383 = COERCE_DOUBLE(v305(v266, v303, v302, v394, v393, v388, sub_26110A928, v304, v300, v301));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v306 = sub_26111EAC8();
            os_log_type_t v307 = sub_26111EF68();
            if (os_log_type_enabled(v306, v307))
            {
              uint64_t v308 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v308 = 134217984;
              double v396 = v383;
              sub_26111F0D8();
              _os_log_impl(&dword_261042000, v306, v307, "Updated %ld observations after clustering", v308, 0xCu);
              MEMORY[0x26122E4F0](v308, -1, -1);
            }

            uint64_t v119 = v364;
            unint64_t v309 = v365;
            if (v392 && (v392(0) & 1) == 0)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v118 = sub_26111EA48();
              uint64_t v119 = v351;
              sub_26111EA88();
              LOBYTE(v120) = sub_26111F008();
              if (sub_26111F0B8())
              {
                swift_retain();
                uint64_t v121 = v346;
                goto LABEL_216;
              }
              goto LABEL_218;
            }
            uint64_t v310 = v391[5];
            uint64_t v311 = v391[6];
            double v312 = v374;
            __swift_project_boxed_opaque_existential_1Tm(*(void **)&v374, v310);
            v313 = v386;
            *(double *)&uint64_t v314 = COERCE_DOUBLE((*(uint64_t (**)(void, uint64_t, uint64_t))(v311 + 80))(v384, v310, v311));
            v386 = v313;
            if (v313)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v118 = sub_26111EA48();
              uint64_t v119 = v354;
              sub_26111EA88();
              LOBYTE(v120) = sub_26111F008();
              if (sub_26111F0B8())
              {
                swift_retain();
                uint64_t v121 = v348;
                goto LABEL_216;
              }
              goto LABEL_218;
            }
            double v329 = *(double *)&v314;
            size_t v330 = sub_26111EAC8();
            os_log_type_t v331 = sub_26111EF68();
            if (os_log_type_enabled(v330, v331))
            {
              uint64_t v332 = swift_slowAlloc();
              *(_DWORD *)uint64_t v332 = 134218240;
              double v396 = v329;
              sub_26111F0D8();
              *(_WORD *)(v332 + 12) = 256;
              LOBYTE(v396) = v384;
              sub_26111F0D8();
              _os_log_impl(&dword_261042000, v330, v331, "Resolved %ld tags for type %hhu", (uint8_t *)v332, 0xFu);
              MEMORY[0x26122E4F0](v332, -1, -1);
            }

            uint64_t v333 = v391[5];
            uint64_t v334 = v391[6];
            __swift_project_boxed_opaque_existential_1Tm(*(void **)&v312, v333);
            (*(void (**)(void, uint64_t, uint64_t))(v334 + 56))(v384, v333, v334);
            if (v392)
            {
              char v335 = v392(0);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v335 & 1) == 0)
              {
                uint64_t v118 = sub_26111EA48();
                uint64_t v119 = v345;
                sub_26111EA88();
                LOBYTE(v120) = sub_26111F008();
                if (sub_26111F0B8())
                {
                  swift_retain();
                  uint64_t v121 = v344;
                  goto LABEL_216;
                }
                goto LABEL_218;
              }
LABEL_183:
              uint64_t v118 = sub_26111EA48();
              sub_26111EA88();
              LOBYTE(v120) = sub_26111F008();
              if (sub_26111F0B8())
              {
                swift_retain();
                sub_26111EAB8();
                swift_release();
                unint64_t v322 = v377;
                unint64_t v321 = v378;
                if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v309, v377) == *MEMORY[0x263F90238])
                {
LABEL_217:
                  uint64_t v255 = "[Error] Interval already ended";
LABEL_222:
                  uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
                  uint64_t v324 = v379;
                  uint64_t v325 = v379;
                  goto LABEL_223;
                }
                (*(void (**)(char *, unint64_t))(v321 + 8))(v309, v322);
LABEL_221:
                uint64_t v255 = "";
                goto LABEL_222;
              }
LABEL_218:

              double v171 = *(double *)&v119;
              goto LABEL_219;
            }
LABEL_182:
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_183;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v118 = sub_26111EA48();
          uint64_t v251 = v357;
          sub_26111EA88();
          LOBYTE(v120) = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            unint64_t v97 = (uint64_t *)v350;
            sub_26111EAB8();
            swift_release();
            unint64_t v160 = v377;
            unint64_t v158 = v378;
            if ((*(unsigned int (**)(uint64_t *, unint64_t))(v378 + 88))(v97, v377) == *MEMORY[0x263F90238])
            {
              uint64_t v255 = "[Error] Interval already ended";
LABEL_210:
              uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
              uint64_t v324 = v379;
              uint64_t v325 = v379;
              uint64_t v119 = v357;
LABEL_223:
              uint64_t v338 = v381;
              v323(v325, v119, v381);
              v339 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v339 = 0;
              os_signpost_id_t v340 = sub_26111EA18();
              _os_signpost_emit_with_name_impl(&dword_261042000, (os_log_t)v118, (os_signpost_type_t)v120, v340, "cluster", v255, v339, 2u);
              MEMORY[0x26122E4F0](v339, -1, -1);

              uint64_t v341 = (void (*)(char *, uint64_t))v380;
              v380(v119, v338);
              v341(v324, v338);
              return swift_release();
            }
LABEL_209:
            (*(void (**)(uint64_t *, unint64_t))(v158 + 8))(v97, v160);
            uint64_t v255 = "";
            goto LABEL_210;
          }
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v118 = sub_26111EA48();
        uint64_t v251 = v356;
        sub_26111EA88();
        LOBYTE(v120) = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          v326 = v347;
          sub_26111EAB8();
          swift_release();
          unint64_t v328 = v377;
          unint64_t v327 = v378;
          if ((*(unsigned int (**)(char *, unint64_t))(v378 + 88))(v326, v377) == *MEMORY[0x263F90238])
          {
            uint64_t v255 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, unint64_t))(v327 + 8))(v326, v328);
            uint64_t v255 = "";
          }
          uint64_t v323 = (void (*)(char *, char *, uint64_t))v376;
          uint64_t v324 = v379;
          uint64_t v325 = v379;
          uint64_t v119 = v356;
          goto LABEL_223;
        }
      }
LABEL_196:

      double v171 = *(double *)&v251;
LABEL_219:
      v380(*(void *)&v171, v381);
      return swift_release();
    }
    unint64_t v154 = v394[v152];
    ++v149;
    if (v154) {
      goto LABEL_54;
    }
    int64_t v149 = v152 + 1;
    if (v152 + 1 >= v395) {
      goto LABEL_65;
    }
    unint64_t v154 = v394[v149];
    if (v154) {
      goto LABEL_54;
    }
    int64_t v149 = v152 + 2;
    if (v152 + 2 >= v395) {
      goto LABEL_65;
    }
    unint64_t v154 = v394[v149];
    if (v154) {
      goto LABEL_54;
    }
    int64_t v155 = v152 + 3;
    if (v155 >= v395) {
      goto LABEL_65;
    }
    unint64_t v154 = v394[v155];
    if (!v154) {
      break;
    }
    int64_t v149 = v155;
LABEL_54:
    unint64_t v147 = (v154 - 1) & v154;
    unint64_t v151 = __clz(__rbit64(v154)) + (v149 << 6);
LABEL_55:
    uint64_t v120 = *(void *)(*(void *)(v118 + 48) + 8 * v151);
    float v156 = *(float *)(*(void *)(v118 + 56) + 4 * v151);
    swift_beginAccess();
    char v157 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v158 = v401;
    v397[0] = v401;
    *(double *)&unint64_t v401 = -0.0;
    unint64_t v160 = sub_26105D6EC(v120);
    uint64_t v161 = *(void *)(v158 + 16);
    BOOL v162 = (v159 & 1) == 0;
    uint64_t v163 = v161 + v162;
    if (__OFADD__(v161, v162))
    {
      __break(1u);
      goto LABEL_209;
    }
    unint64_t v97 = v159;
    if (*(void *)(v158 + 24) >= v163)
    {
      if ((v157 & 1) == 0) {
        sub_26107CAC0();
      }
    }
    else
    {
      sub_261078B80(v163, v157);
      unint64_t v164 = sub_26105D6EC(v120);
      if ((v97 & 1) != (v165 & 1)) {
        goto LABEL_234;
      }
      unint64_t v160 = v164;
    }
    uint64_t v166 = (void *)v397[0];
    float v167 = v156 / v148;
    if (v97)
    {
      *(float *)(*(void *)(v397[0] + 56) + 4 * v160) = v167;
      goto LABEL_38;
    }
    *(void *)(v397[0] + 8 * (v160 >> 6) + 64) |= 1 << v160;
    *(void *)(v166[6] + 8 * v160) = v120;
    *(float *)(v166[7] + 4 * v160) = v167;
    uint64_t v168 = v166[2];
    BOOL v169 = __OFADD__(v168, 1);
    uint64_t v170 = v168 + 1;
    if (v169)
    {
      __break(1u);
LABEL_226:
      __break(1u);
      goto LABEL_227;
    }
    v166[2] = v170;
LABEL_38:
    unint64_t v401 = (unint64_t)v166;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  while (1)
  {
    int64_t v149 = v155 + 1;
    if (__OFADD__(v155, 1)) {
      break;
    }
    if (v149 >= v395) {
      goto LABEL_65;
    }
    unint64_t v154 = v394[v149];
    ++v155;
    if (v154) {
      goto LABEL_54;
    }
  }
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  sub_26111F448();
  __break(1u);
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_235:
  double v343 = *(double *)v397;
LABEL_238:
  *(double *)&unint64_t v400 = v343;
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2611004E0(unsigned int a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v80 = a5;
  uint64_t v81 = a6;
  os_signpost_type_t v79 = a4;
  uint64_t v83 = a2;
  uint64_t v84 = a3;
  unsigned int v82 = a1;
  uint64_t v72 = sub_26111EA78();
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v72);
  uint64_t v69 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (char *)&v68 - v9;
  uint64_t v10 = sub_26111EA38();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v74 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v73 = (char *)&v68 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v68 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v68 - v19;
  uint64_t v85 = v6;
  uint64_t v21 = v6 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  sub_26111EA28();
  uint64_t v75 = v21;
  uint64_t v22 = sub_26111EA48();
  os_signpost_type_t v23 = sub_26111F018();
  if (sub_26111F0B8())
  {
    uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    unint64_t v24 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v89(v18, v20, v10);
    uint64_t v25 = v11;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v22, v23, v27, "updateDensities", "", v26, 2u);
    uint64_t v28 = v26;
    uint64_t v11 = v25;
    MEMORY[0x26122E4F0](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v10);
    uint64_t v29 = v89;
  }
  else
  {

    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    unint64_t v24 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v89 = v29;
  unint64_t v70 = v24;
  v29(v18, v20, v10);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v87 = sub_26111EA98();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v77 = v11 + 8;
  uint64_t v78 = v10;
  uint64_t v76 = v30;
  v30(v20, v10);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = MEMORY[0x263F8EE80];
  *(void *)(v31 + 16) = MEMORY[0x263F8EE80];
  *(void *)(swift_allocObject() + 16) = v32;
  uint64_t v33 = v79[4];
  uint64_t v34 = __swift_project_boxed_opaque_existential_1Tm(v79, v79[3]);
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = v85;
  uint64_t v36 = v86;
  (*(void (**)(void, uint64_t, uint64_t, void, uint64_t))(v33 + 8))(v82, v83, 2, 0, 1);
  os_signpost_id_t v86 = v18;
  uint64_t v84 = v36;
  if (v36)
  {
    swift_release();
    swift_release();
    uint64_t v37 = sub_26111EA48();
    uint64_t v38 = v74;
    sub_26111EA88();
    os_signpost_type_t v39 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v40 = v69;
      sub_26111EAB8();
      swift_release();
      uint64_t v41 = v71;
      uint64_t v42 = v72;
      int v43 = (*(uint64_t (**)(char *, uint64_t))(v71 + 88))(v40, v72);
      uint64_t v44 = v78;
      if (v43 == *MEMORY[0x263F90238])
      {
        uint64_t v45 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
        uint64_t v45 = "";
      }
      v89(v86, v38, v44);
      uint64_t v58 = v38;
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      os_signpost_id_t v60 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v37, v39, v60, "updateDensities", v45, v59, 2u);
      MEMORY[0x26122E4F0](v59, -1, -1);

      uint64_t v61 = v86;
      uint64_t v62 = v76;
      v76(v58, v44);
      v62(v61, v44);
    }
    else
    {

      v76(v38, v78);
    }
LABEL_18:
    swift_release();
    return (uint64_t)v37;
  }
  uint64_t v46 = *(NSObject **)(v35 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_lockQueue);
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_75;
  uint64_t v47 = _Block_copy(aBlock);
  swift_release();
  dispatch_sync(v46, v47);
  _Block_release(v47);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v37 = *(NSObject **)(v31 + 16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t v49 = sub_26111EA48();
    uint64_t v50 = v73;
    sub_26111EA88();
    int v51 = sub_26111F008();
    if (sub_26111F0B8())
    {
      LODWORD(v85) = v51;
      swift_retain();
      uint64_t v52 = v68;
      sub_26111EAB8();
      swift_release();
      uint64_t v53 = v71;
      uint64_t v54 = v72;
      int v55 = (*(uint64_t (**)(char *, uint64_t))(v71 + 88))(v52, v72);
      uint64_t v56 = v78;
      if (v55 == *MEMORY[0x263F90238])
      {
        uint64_t v57 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
        uint64_t v57 = "";
      }
      uint64_t v63 = v86;
      uint64_t v64 = v73;
      v89(v86, v73, v56);
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      os_signpost_id_t v66 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v49, (os_signpost_type_t)v85, v66, "updateDensities", v57, v65, 2u);
      MEMORY[0x26122E4F0](v65, -1, -1);

      uint64_t v67 = v76;
      v76(v64, v56);
      v67(v63, v56);
    }
    else
    {

      v76(v50, v78);
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_261100DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v62 = a8;
  uint64_t v54 = a7;
  uint64_t v55 = a3;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  uint64_t v53 = a1;
  v52[1] = a9;
  uint64_t v11 = sub_26111EB18();
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_26111EB38();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = *(void *)(a2 + 16);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  uint64_t v20 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v19 <= v17) {
    unint64_t v21 = v17;
  }
  else {
    unint64_t v21 = v19;
  }
  while (v17 != v19)
  {
    unint64_t v22 = v19;
    if (v21 == v19)
    {
      __break(1u);
      return result;
    }
    float v23 = *(float *)(a2 + 32 + 4 * v19);
    if (*(unsigned char *)(a4 + 68) == 1)
    {
      ++v19;
      if (*(float *)(a4 + 56) > v23) {
        continue;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v20;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_26106222C(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v20 = aBlock[0];
    }
    unint64_t v25 = *(void *)(v20 + 16);
    unint64_t v24 = *(void *)(v20 + 24);
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_26106222C(v24 > 1, v25 + 1, 1);
      uint64_t v20 = aBlock[0];
    }
    unint64_t v19 = v22 + 1;
    *(void *)(v20 + 16) = v25 + 1;
    uint64_t v26 = v20 + 16 * v25;
    *(void *)(v26 + 32) = v22;
    *(float *)(v26 + 40) = v23;
    goto LABEL_2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_26110A6EC(v20, a4);
  uint64_t v28 = v27;
  swift_release();
  swift_release();
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v30 = MEMORY[0x263F8EE78];
  if (v29)
  {
    uint64_t v31 = (float *)(v28 + 32);
    do
    {
      float v34 = *v31;
      if (*v31 >= 0.0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_26106214C(0, *(void *)(v30 + 16) + 1, 1);
          uint64_t v30 = aBlock[0];
        }
        unint64_t v33 = *(void *)(v30 + 16);
        unint64_t v32 = *(void *)(v30 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_26106214C(v32 > 1, v33 + 1, 1);
          uint64_t v30 = aBlock[0];
        }
        *(void *)(v30 + 16) = v33 + 1;
        *(float *)(v30 + 4 * v33 + 32) = v34;
      }
      ++v31;
      --v29;
    }
    while (v29);
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v30 + 16);
  if (!v36)
  {
    float v38 = 0.0;
    goto LABEL_32;
  }
  if (v36 == 1)
  {
    uint64_t v37 = 0;
    float v38 = 0.0;
LABEL_30:
    uint64_t v41 = v36 - v37;
    uint64_t v42 = (float *)(v30 + 4 * v37 + 32);
    do
    {
      float v43 = *v42++;
      float v38 = v38 + v43;
      --v41;
    }
    while (v41);
    goto LABEL_32;
  }
  uint64_t v37 = v36 & 0x7FFFFFFFFFFFFFFELL;
  os_signpost_type_t v39 = (float *)(v30 + 36);
  float v38 = 0.0;
  uint64_t v40 = v36 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    float v38 = (float)(v38 + *(v39 - 1)) + *v39;
    v39 += 2;
    v40 -= 2;
  }
  while (v40);
  if (v36 != v37) {
    goto LABEL_30;
  }
LABEL_32:
  swift_release();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v53;
  *(void *)(v44 + 24) = a2;
  uint64_t v45 = v56;
  *(void *)(v44 + 32) = v55;
  *(void *)(v44 + 40) = a4;
  uint64_t v46 = v57;
  *(void *)(v44 + 48) = v45;
  *(void *)(v44 + 56) = v46;
  *(float *)(v44 + 64) = v38;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_26110A848;
  *(void *)(v47 + 24) = v44;
  aBlock[4] = sub_261071B40;
  aBlock[5] = v47;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2610FD8FC;
  aBlock[3] = &block_descriptor_84;
  uint64_t v48 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_26111EB28();
  uint64_t v63 = MEMORY[0x263F8EE78];
  sub_26110A9BC((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
  sub_26110A240();
  uint64_t v49 = v61;
  sub_26111F118();
  MEMORY[0x26122D850](0, v16, v13, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v49);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v59);
  uint64_t v50 = swift_release();
  if (v62) {
    char v51 = v62(v50);
  }
  else {
    char v51 = 1;
  }
  swift_release();
  return v51 & 1;
}

uint64_t sub_26110133C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v9 = result;
  if (!*(void *)(a3 + 16)) {
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16))
  {
    float v10 = *(float *)(a2 + 32);
    if (*(float *)(a4 + 56) <= v10)
    {
      uint64_t v11 = (uint64_t *)(a5 + 16);
      uint64_t v12 = *(void *)(a3 + 32);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = *v11;
      *uint64_t v11 = 0x8000000000000000;
      sub_261080454(v12, v9, isUniquelyReferenced_nonNull_native, v10);
      *uint64_t v11 = v15;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
LABEL_5:
    swift_beginAccess();
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *(void *)(a6 + 16);
    *(void *)(a6 + 16) = 0x8000000000000000;
    sub_26107F4F4(v9, v14, a7);
    *(void *)(a6 + 16) = v16;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

uint64_t sub_261101464(unsigned int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a3;
  uint64_t v84 = a6;
  uint64_t v85 = a7;
  unsigned int v82 = a4;
  uint64_t v83 = a5;
  uint64_t v87 = a2;
  unsigned int v86 = a1;
  uint64_t v77 = sub_26111EA78();
  uint64_t v75 = *(void *)(v77 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v77);
  uint64_t v71 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v69 - v10;
  uint64_t v12 = sub_26111EA38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)&v69 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unsigned int v92 = (char *)&v69 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v69 - v20;
  uint64_t v90 = v7;
  uint64_t v22 = v7 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  sub_26111EA28();
  uint64_t v78 = v22;
  float v23 = sub_26111EA48();
  os_signpost_type_t v24 = sub_26111F018();
  char v25 = sub_26111F0B8();
  unint64_t v70 = v11;
  if (v25)
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    unint64_t v27 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v28 = v92;
    v26(v92, v21, v12);
    uint64_t v29 = v13;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v23, v24, v31, "updatePartners", "", v30, 2u);
    unint64_t v32 = v30;
    uint64_t v13 = v29;
    MEMORY[0x26122E4F0](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v12);
    unint64_t v33 = v26;
  }
  else
  {

    unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    unint64_t v27 = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v74 = v33;
  unint64_t v73 = v27;
  v33(v92, v21, v12);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v34 = sub_26111EA98();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v80 = v13 + 8;
  uint64_t v81 = v12;
  os_signpost_type_t v79 = v35;
  v35(v21, v12);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = MEMORY[0x263F8EE80];
  *(void *)(v36 + 16) = MEMORY[0x263F8EE80];
  *(void *)(swift_allocObject() + 16) = v37;
  uint64_t v38 = v82[4];
  os_signpost_type_t v39 = __swift_project_boxed_opaque_existential_1Tm(v82, v82[3]);
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = v90;
  uint64_t v41 = v89;
  (*(void (**)(void, uint64_t, uint64_t, void, uint64_t))(v38 + 8))(v86, v87, 2, 0, 1);
  uint64_t v89 = v41;
  if (v41)
  {
    swift_release();
    swift_release();
    uint64_t v42 = sub_26111EA48();
    float v43 = v76;
    sub_26111EA88();
    os_signpost_type_t v44 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v45 = v71;
      sub_26111EAB8();
      swift_release();
      uint64_t v46 = v75;
      int v47 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(v45, v77);
      uint64_t v48 = v81;
      if (v47 == *MEMORY[0x263F90238])
      {
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v77);
        uint64_t v49 = "";
      }
      v74(v92, v43, v48);
      uint64_t v61 = v43;
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      os_signpost_id_t v63 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v42, v44, v63, "updatePartners", v49, v62, 2u);
      MEMORY[0x26122E4F0](v62, -1, -1);

      uint64_t v64 = v79;
      v79(v61, v48);
      v64(v92, v48);
    }
    else
    {

      unsigned int v92 = v43;
      v79(v43, v81);
    }
LABEL_18:
    swift_release();
    return (uint64_t)v42;
  }
  uint64_t v88 = v34;
  uint64_t v50 = *(NSObject **)(v40 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_lockQueue);
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_59;
  char v51 = _Block_copy(aBlock);
  swift_release();
  dispatch_sync(v50, v51);
  _Block_release(v51);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v42 = *(NSObject **)(v36 + 16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t v53 = sub_26111EA48();
    uint64_t v54 = v72;
    sub_26111EA88();
    int v55 = sub_26111F008();
    if (sub_26111F0B8())
    {
      LODWORD(v90) = v55;
      swift_retain();
      uint64_t v56 = v70;
      sub_26111EAB8();
      swift_release();
      uint64_t v57 = v75;
      int v58 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(v56, v77);
      uint64_t v59 = v81;
      if (v58 == *MEMORY[0x263F90238])
      {
        uint64_t v60 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v77);
        uint64_t v60 = "";
      }
      v74(v92, v54, v59);
      uint64_t v65 = v54;
      os_signpost_id_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v66 = 0;
      os_signpost_id_t v67 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v53, (os_signpost_type_t)v90, v67, "updatePartners", v60, v66, 2u);
      MEMORY[0x26122E4F0](v66, -1, -1);

      uint64_t v68 = v79;
      v79(v65, v59);
      v68(v92, v59);
    }
    else
    {

      unsigned int v92 = v54;
      v79(v54, v81);
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

unint64_t sub_261101D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v49 = a7;
  uint64_t v50 = a5;
  uint64_t v56 = a2;
  uint64_t v13 = sub_26111EB18();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_26111EB38();
  unint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a3 + 16);
  int v22 = 0;
  unint64_t v54 = result;
  int v55 = a8;
  uint64_t v52 = v23;
  uint64_t v53 = v16;
  uint64_t v51 = a6;
  if (v21)
  {
    uint64_t v47 = v14;
    uint64_t v48 = v13;
    unint64_t v24 = 0;
    uint64_t v25 = *(void *)(a4 + 16);
    while (1)
    {
      uint64_t v26 = *(void *)(a3 + 32 + 8 * v24);
      if (!v25)
      {
        if (v26 > a1) {
          goto LABEL_21;
        }
        goto LABEL_4;
      }
      unint64_t v27 = sub_26105D6EC(*(void *)(a3 + 32 + 8 * v24));
      float v28 = 0.0;
      if (v29) {
        float v28 = *(float *)(*(void *)(a4 + 56) + 4 * v27);
      }
      unint64_t v30 = sub_26105D6EC(a1);
      if (v31) {
        BOOL v32 = *(float *)(*(void *)(a4 + 56) + 4 * v30) < v28;
      }
      else {
        BOOL v32 = v28 > 0.0;
      }
      unint64_t v33 = sub_26105D6EC(v26);
      if (v34)
      {
        float v35 = *(float *)(*(void *)(a4 + 56) + 4 * v33);
        unint64_t result = sub_26105D6EC(a1);
        if ((v36 & 1) == 0 || v35 != *(float *)(*(void *)(a4 + 56) + 4 * result))
        {
LABEL_20:
          if (v32) {
            goto LABEL_21;
          }
          goto LABEL_4;
        }
      }
      else
      {
        unint64_t result = sub_26105D6EC(a1);
        if (v38) {
          goto LABEL_20;
        }
      }
      char v37 = v26 > a1 || v32;
      if (v37)
      {
LABEL_21:
        uint64_t v39 = v56;
        if (v24 < *(void *)(v56 + 16))
        {
          int v22 = *(_DWORD *)(v56 + 4 * v24 + 32);
          uint64_t v14 = v47;
          uint64_t v13 = v48;
          goto LABEL_26;
        }
        __break(1u);
        return result;
      }
LABEL_4:
      if (v21 == ++v24)
      {
        uint64_t v26 = -1;
        uint64_t v14 = v47;
        uint64_t v13 = v48;
        goto LABEL_25;
      }
    }
  }
  uint64_t v26 = -1;
LABEL_25:
  uint64_t v39 = v56;
LABEL_26:
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v51;
  *(void *)(v40 + 16) = v50;
  *(void *)(v40 + 24) = a1;
  *(void *)(v40 + 32) = v39;
  *(void *)(v40 + 40) = a3;
  *(void *)(v40 + 48) = v26;
  *(void *)(v40 + 56) = v41;
  *(_DWORD *)(v40 + 64) = v22;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_26110A378;
  *(void *)(v42 + 24) = v40;
  aBlock[4] = sub_26106A940;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_2610FD8FC;
  aBlock[3] = &block_descriptor_68;
  float v43 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_26111EB28();
  uint64_t v57 = MEMORY[0x263F8EE78];
  sub_26110A9BC((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
  sub_26110A240();
  os_signpost_type_t v44 = v53;
  sub_26111F118();
  MEMORY[0x26122D850](0, v20, v44, v43);
  _Block_release(v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
  (*(void (**)(char *, unint64_t))(v52 + 8))(v20, v54);
  uint64_t v45 = swift_release();
  if (v55) {
    char v46 = v55(v45);
  }
  else {
    char v46 = 1;
  }
  swift_release();
  return v46 & 1;
}

uint64_t sub_26110218C(uint64_t a1, uint64_t a2, float a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_26107EDD4(a6, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(a7 + 16);
  *(void *)(a7 + 16) = 0x8000000000000000;
  sub_26107F4F4(a2, v13, a3);
  *(void *)(a7 + 16) = v16;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_261102294(unsigned int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v81 = a3;
  uint64_t v77 = a5;
  uint64_t v78 = a6;
  uint64_t v76 = a4;
  uint64_t v80 = a2;
  unsigned int v79 = a1;
  uint64_t v71 = sub_26111EA78();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v71);
  os_signpost_id_t v66 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v65 = (char *)&v65 - v9;
  uint64_t v10 = sub_26111EA38();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v70 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unsigned int v86 = (char *)&v65 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v83 = v6;
  uint64_t v21 = v6 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  sub_26111EA28();
  uint64_t v72 = v21;
  int v22 = sub_26111EA48();
  os_signpost_type_t v23 = sub_26111F018();
  char v24 = sub_26111F0B8();
  os_signpost_id_t v67 = v16;
  if (v24)
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v26 = v86;
    v25(v86, v20, v10);
    uint64_t v27 = v11;
    float v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float v28 = 0;
    os_signpost_id_t v29 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v22, v23, v29, "updateSecondaryPartners", "", v28, 2u);
    unint64_t v30 = v28;
    uint64_t v11 = v27;
    MEMORY[0x26122E4F0](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v10);
  }
  else
  {

    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  }
  uint64_t v68 = v25;
  v25(v86, v20, v10);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v84 = sub_26111EA98();
  char v31 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v74 = v11 + 8;
  uint64_t v75 = v10;
  unint64_t v73 = v31;
  v31(v20, v10);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = MEMORY[0x263F8EE80];
  *(void *)(v32 + 16) = MEMORY[0x263F8EE80];
  *(void *)(swift_allocObject() + 16) = v33;
  uint64_t v34 = v76[3];
  uint64_t v35 = v76[4];
  char v36 = __swift_project_boxed_opaque_existential_1Tm(v76, v34);
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = v83;
  uint64_t v64 = v83;
  LOBYTE(v64) = 0;
  uint64_t v38 = v82;
  (*(void (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), char **, uint64_t, uint64_t))(v35 + 8))(v79, v80, 2, 0, 1, 1, 5, v81, v64, sub_26110A198, &v65 - 8, v34, v35);
  uint64_t v82 = v38;
  if (v38)
  {
    swift_release();
    swift_release();
    uint64_t v39 = sub_26111EA48();
    uint64_t v40 = v70;
    sub_26111EA88();
    os_signpost_type_t v41 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v42 = v66;
      sub_26111EAB8();
      swift_release();
      uint64_t v43 = v69;
      int v44 = (*(uint64_t (**)(char *, uint64_t))(v69 + 88))(v42, v71);
      uint64_t v45 = v74;
      if (v44 == *MEMORY[0x263F90238])
      {
        char v46 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v71);
        char v46 = "";
      }
      uint64_t v56 = v75;
      v68(v86, v40, v75);
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      os_signpost_id_t v58 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v39, v41, v58, "updateSecondaryPartners", v46, v57, 2u);
      MEMORY[0x26122E4F0](v57, -1, -1);

      uint64_t v59 = v73;
      v73(v40, v56);
      v59(v86, v56);
    }
    else
    {

      unsigned int v86 = v40;
      uint64_t v45 = v74;
      v73(v40, v75);
    }
LABEL_18:
    swift_release();
    return v45;
  }
  uint64_t v47 = *(NSObject **)(v37 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_lockQueue);
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_26105A22C;
  aBlock[3] = &block_descriptor_6;
  uint64_t v48 = _Block_copy(aBlock);
  swift_release();
  dispatch_sync(v47, v48);
  _Block_release(v48);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v45 = *(void *)(v32 + 16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t v50 = sub_26111EA48();
    uint64_t v51 = v67;
    sub_26111EA88();
    int v52 = sub_26111F008();
    if (sub_26111F0B8())
    {
      LODWORD(v83) = v52;
      swift_retain();
      uint64_t v53 = v65;
      sub_26111EAB8();
      swift_release();
      uint64_t v54 = v69;
      if ((*(unsigned int (**)(char *, uint64_t))(v69 + 88))(v53, v71) == *MEMORY[0x263F90238])
      {
        int v55 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v71);
        int v55 = "";
      }
      uint64_t v60 = v75;
      v68(v86, v51, v75);
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      os_signpost_id_t v62 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v50, (os_signpost_type_t)v83, v62, "updateSecondaryPartners", v55, v61, 2u);
      MEMORY[0x26122E4F0](v61, -1, -1);

      os_signpost_id_t v63 = v73;
      v73(v51, v60);
      v63(v86, v60);
    }
    else
    {

      unsigned int v86 = v51;
      v73(v51, v75);
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_261102B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v37 = a8;
  uint64_t v40 = a5;
  os_signpost_type_t v41 = a7;
  uint64_t v39 = a6;
  uint64_t v42 = a3;
  uint64_t v43 = sub_26111EB18();
  uint64_t v46 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_26111EB38();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = -1;
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  if (*(void *)(a2 + 16))
  {
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v16;
    void v18[3] = a1;
    uint64_t v19 = v42;
    v18[4] = a2;
    v18[5] = v19;
    v18[6] = v17;
    uint64_t v35 = *(void *)(a4 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_lockQueue);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_26110A230;
    *(void *)(v20 + 24) = v18;
    int v52 = sub_261071B40;
    uint64_t v53 = v20;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_2610FD8FC;
    uint64_t v51 = &block_descriptor_45;
    uint64_t v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_26111EB28();
    uint64_t v47 = MEMORY[0x263F8EE78];
    sub_26110A9BC((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
    uint64_t v38 = a4;
    uint64_t v21 = v43;
    uint64_t v36 = v17;
    sub_26110A240();
    sub_26111F118();
    int v22 = v34;
    MEMORY[0x26122D850](0, v15, v12, v34);
    uint64_t v17 = v36;
    _Block_release(v22);
    swift_release();
    uint64_t v23 = v21;
    a4 = v38;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v23);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
    swift_release();
  }
  char v24 = (void *)swift_allocObject();
  uint64_t v25 = v39;
  v24[2] = v40;
  v24[3] = a1;
  uint64_t v26 = v42;
  v24[4] = a2;
  v24[5] = v26;
  v24[6] = v16;
  v24[7] = v25;
  v24[8] = v17;
  uint64_t v38 = *(void *)(a4 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_lockQueue);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_26110A2FC;
  *(void *)(v27 + 24) = v24;
  int v52 = sub_261071B40;
  uint64_t v53 = v27;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_2610FD8FC;
  uint64_t v51 = &block_descriptor_54;
  float v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_26111EB28();
  uint64_t v47 = MEMORY[0x263F8EE78];
  sub_26110A9BC((unint64_t *)&qword_26B40A338, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A340);
  sub_26110A240();
  uint64_t v29 = v43;
  sub_26111F118();
  MEMORY[0x26122D850](0, v15, v12, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v29);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
  uint64_t v30 = swift_release();
  if (v41) {
    char v31 = v41(v30);
  }
  else {
    char v31 = 1;
  }
  swift_release();
  swift_release();
  swift_release();
  return v31 & 1;
}

uint64_t sub_2611030CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a4 + 16))
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(a4 + 32);
    uint64_t result = swift_beginAccess();
    *(void *)(v7 + 16) = v8;
    if (*(void *)(a3 + 16))
    {
      int v9 = *(_DWORD *)(a3 + 32);
      uint64_t result = swift_beginAccess();
      *(_DWORD *)(a5 + 16) = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26110315C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t v12 = *(void *)(a5 + 16);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_26107EDD4(v12, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v18;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  float v14 = *(float *)(a7 + 16);
  swift_beginAccess();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(a6 + 16);
  *(void *)(a6 + 16) = 0x8000000000000000;
  sub_26107F4F4(a2, v15, v14);
  *(void *)(a6 + 16) = v17;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_2611032A4(unsigned int a1, uint64_t a2, void *a3, uint64_t a4, int a5, int a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v417 = a8;
  v420 = a7;
  LODWORD(v459) = a6;
  LODWORD(v444) = a5;
  uint64_t v460 = a4;
  os_signpost_id_t v457 = a3;
  uint64_t v450 = a2;
  unsigned int v453 = a1;
  uint64_t v458 = sub_26111E778();
  uint64_t v441 = *(void *)(v458 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v458);
  uint64_t v454 = (uint64_t)v414 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  os_signpost_type_t v448 = (char *)v414 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910090);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  v455 = (char *)v414 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v443 = (void *)((char *)v414 - v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v430 = (uint64_t)v414 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v451 = (uint64_t)v414 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v423 = (char *)v414 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v421 = (uint64_t)v414 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v425 = (uint64_t)v414 - v25;
  uint64_t v456 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9105A0);
  uint64_t v26 = MEMORY[0x270FA5388](v456);
  int v424 = (char *)v414 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  os_signpost_id_t v440 = (char *)v414 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v427 = (char *)v414 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  int v429 = (char *)v414 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v447 = (char *)v414 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (void (**)(uint64_t, uint64_t))((char *)v414 - v36);
  uint64_t v446 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910590);
  uint64_t v428 = *(void *)(v446 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v446);
  v437 = (void *)((char *)v414 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  os_signpost_id_t v445 = (void *)((char *)v414 - v41);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v431 = (uint64_t)v414 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v438 = (void *)((char *)v414 - v45);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v48 = (void (**)(char *, char *, uint64_t))((char *)v414 - v47);
  MEMORY[0x270FA5388](v46);
  v439 = (void *)((char *)v414 - v49);
  uint64_t v50 = sub_26111EA38();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)v414 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v56 = (char *)v414 - v55;
  v449 = v8;
  sub_26111EA28();
  uint64_t v57 = sub_26111EA48();
  int v58 = sub_26111F018();
  char v59 = sub_26111F0B8();
  v426 = v48;
  v422 = v37;
  if (v59)
  {
    LODWORD(v452) = v58;
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v60(v54, v56, v50);
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    os_signpost_id_t v62 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v57, (os_signpost_type_t)v452, v62, "propagateLabels", "", v61, 2u);
    MEMORY[0x26122E4F0](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v50);
  }
  else
  {

    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  }
  v60(v54, v56, v50);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v63 = sub_26111EA98();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v56, v50);
  uint64_t v64 = v450;
  uint64_t v416 = v63;
  if (v459)
  {
    uint64_t v459 = MEMORY[0x263F8EE80];
    uint64_t v65 = v449;
  }
  else
  {
    uint64_t v65 = v449;
    uint64_t v66 = v449[5];
    uint64_t v67 = v449[6];
    __swift_project_boxed_opaque_existential_1Tm(v449 + 2, v66);
    uint64_t v459 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v67 + 16))(v453, v66, v67);
  }
  uint64_t v68 = *(void *)(v460 + 64);
  os_signpost_type_t v452 = (void *)(v460 + 64);
  uint64_t v69 = 1 << *(unsigned char *)(v460 + 32);
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  else {
    uint64_t v70 = -1;
  }
  unint64_t v71 = v70 & v68;
  uint64_t v72 = v65 + 2;
  int64_t v73 = (unint64_t)(v69 + 63) >> 6;
  float v74 = *(float *)&v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v75 = 0;
  if (v71) {
    goto LABEL_15;
  }
LABEL_16:
  int64_t v80 = v75 + 1;
  if (__OFADD__(v75, 1)) {
    goto LABEL_299;
  }
  uint64_t v81 = (uint64_t)v457;
  if (v80 < v73)
  {
    unint64_t v82 = v452[v80];
    ++v75;
    if (v82) {
      goto LABEL_29;
    }
    int64_t v75 = v80 + 1;
    if (v80 + 1 < v73)
    {
      unint64_t v82 = v452[v75];
      if (v82) {
        goto LABEL_29;
      }
      int64_t v75 = v80 + 2;
      if (v80 + 2 < v73)
      {
        unint64_t v82 = v452[v75];
        if (!v82)
        {
          int64_t v83 = v80 + 3;
          if (v83 < v73)
          {
            unint64_t v82 = v452[v83];
            if (v82)
            {
              int64_t v75 = v83;
              goto LABEL_29;
            }
            while (1)
            {
              int64_t v75 = v83 + 1;
              if (__OFADD__(v83, 1)) {
                goto LABEL_305;
              }
              if (v75 >= v73) {
                break;
              }
              unint64_t v82 = v452[v75];
              ++v83;
              if (v82) {
                goto LABEL_29;
              }
            }
          }
          goto LABEL_46;
        }
LABEL_29:
        unint64_t v71 = (v82 - 1) & v82;
        for (unint64_t i = __clz(__rbit64(v82)) + (v75 << 6); ; unint64_t i = v78 | (v75 << 6))
        {
          uint64_t v84 = *(void *)(*(void *)(v460 + 48) + 8 * i);
          float v85 = *(float *)(*(void *)(v460 + 56) + 4 * i);
          float v77 = v74;
          if ((v64 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          uint64_t v86 = v449[5];
          uint64_t v87 = v449[6];
          __swift_project_boxed_opaque_existential_1Tm(v72, v86);
          uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v86, v87);
          if (*(void *)(v88 + 16))
          {
            unint64_t v89 = sub_26105D5E8(v453);
            if (v90) {
              break;
            }
          }
          swift_bridgeObjectRelease();
          if (v85 >= 0.0)
          {
LABEL_14:
            if (!v71) {
              goto LABEL_16;
            }
            goto LABEL_15;
          }
LABEL_34:
          unint64_t v91 = v72;
          unsigned int v92 = v457;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v465[0] = v92;
          unint64_t v95 = sub_26105D6EC(v84);
          uint64_t v96 = v92[2];
          BOOL v97 = (v94 & 1) == 0;
          uint64_t v98 = v96 + v97;
          if (__OFADD__(v96, v97)) {
            goto LABEL_308;
          }
          char v99 = v94;
          if (v92[3] >= v98)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_26107B9C8();
            }
          }
          else
          {
            sub_261077078(v98, isUniquelyReferenced_nonNull_native);
            unint64_t v100 = sub_26105D6EC(v84);
            if ((v99 & 1) != (v101 & 1)) {
              goto LABEL_323;
            }
            unint64_t v95 = v100;
          }
          uint64_t v72 = v91;
          uint64_t v102 = v465[0];
          os_signpost_id_t v457 = v465[0];
          if (v99)
          {
            *(void *)(v465[0][7] + 8 * v95) = -1;
          }
          else
          {
            v465[0][(v95 >> 6) + 8] |= 1 << v95;
            uint64_t v103 = 8 * v95;
            *(void *)(v102[6] + v103) = v84;
            *(void *)(v102[7] + v103) = -1;
            uint64_t v104 = v102[2];
            BOOL v105 = __OFADD__(v104, 1);
            uint64_t v106 = v104 + 1;
            if (v105) {
              goto LABEL_311;
            }
            v102[2] = v106;
          }
          swift_bridgeObjectRelease();
          uint64_t v64 = v450;
          if (!v71) {
            goto LABEL_16;
          }
LABEL_15:
          unint64_t v78 = __clz(__rbit64(v71));
          v71 &= v71 - 1;
        }
        uint64_t v76 = *(void *)(*(void *)(v88 + 56) + 8 * v89);
        swift_retain();
        swift_bridgeObjectRelease();
        float v77 = *(float *)(v76 + 56);
        swift_release();
LABEL_13:
        if (v85 >= v77) {
          goto LABEL_14;
        }
        goto LABEL_34;
      }
    }
  }
LABEL_46:
  swift_release();
  uint64_t v107 = MEMORY[0x263F8EE80];
  char v108 = (char)v444;
  if (v444)
  {
    unint64_t v109 = v72;
    unsigned int v110 = 0;
    uint64_t v111 = (void *)MEMORY[0x263F8EE80];
    uint64_t v112 = v428;
  }
  else
  {
    uint64_t v113 = swift_bridgeObjectRetain();
    unsigned int v110 = 0;
    uint64_t v114 = sub_2610FC8E8(v113);
    swift_bridgeObjectRelease();
    uint64_t v115 = sub_261072890(v114);
    uint64_t v112 = v428;
    if (v115)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A910280);
      uint64_t v116 = (void *)sub_26111F388();
    }
    else
    {
      uint64_t v116 = (void *)MEMORY[0x263F8EE80];
    }
    v465[0] = v116;
    uint64_t v117 = (void *)swift_bridgeObjectRetain();
    sub_2611093B8(v117, 1, v465);
    unint64_t v109 = v72;
    swift_bridgeObjectRelease();
    uint64_t v111 = v465[0];
  }
  uint64_t v471 = v107;
  uint64_t v118 = MEMORY[0x263F8EE88];
  uint64_t v469 = MEMORY[0x263F8EE88];
  uint64_t v470 = MEMORY[0x263F8EE88];
  uint64_t v119 = swift_allocObject();
  uint64_t v450 = v119;
  *(void *)(v119 + 16) = v118;
  uint64_t v120 = (uint64_t *)(v119 + 16);
  if ((v108 & 1) == 0)
  {
    uint64_t v122 = v449[5];
    uint64_t v121 = v449[6];
    __swift_project_boxed_opaque_existential_1Tm(v109, v122);
    uint64_t v123 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v121 + 24))(v453, v122, v121);
    uint64_t v124 = sub_2610812CC(v123);
    v444 = v120;
    os_signpost_type_t v452 = (void *)v123;
    v442 = (void (*)(void))v124;
    uint64_t v415 = 0;
    if (v124)
    {
      if (v124 < 1) {
        goto LABEL_312;
      }
      uint64_t v436 = (uint64_t)v439 + *(int *)(v446 + 48);
      uint64_t v125 = *(int *)(v456 + 48);
      v434 = (char *)*(int *)(v456 + 64);
      uint64_t v435 = v125;
      uint64_t v126 = v123 + ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80));
      uint64_t v127 = *(void (***)(char *))(v112 + 72);
      uint64_t v432 = v441 + 32;
      v433 = v127;
      uint64_t v128 = v124;
      uint64_t v129 = (uint64_t)v422;
      do
      {
        os_signpost_type_t v130 = v439;
        sub_261071864(v126, (uint64_t)v439, (uint64_t *)&unk_26A910590);
        unsigned __int8 v131 = *(unsigned char *)(v436 + v435);
        uint64_t v132 = *v130;
        int v133 = v434[v436];
        uint64_t v134 = *(int *)(v456 + 48);
        uint64_t v135 = *(int *)(v456 + 64);
        (*(void (**)(uint64_t))v432)(v129);
        *(unsigned char *)(v129 + v134) = v131;
        *(unsigned char *)(v129 + v135) = v133;
        if (v111[2])
        {
          sub_26105D6EC(v132);
          if (v136)
          {
            swift_retain();
            sub_261106E14(v129, v131, v133);
            swift_release();
          }
        }
        sub_2610718C8(v129, (uint64_t *)&unk_26A9105A0);
        v126 += (uint64_t)v433;
        --v128;
      }
      while (v128);
    }
    double v137 = (void *)sub_261071C78();
    v465[0] = v137;
    uint64_t v138 = v452;
    swift_bridgeObjectRetain();
    os_log_type_t v139 = v442;
    if (v442)
    {
      uint64_t v140 = 0;
      uint64_t v141 = v428;
      uint64_t v142 = (uint64_t)v426;
      uint64_t v143 = v431;
      do
      {
        sub_2610B7C9C(v140, 1, v138);
        uint64_t v144 = (void (*)(void))(v140 + 1);
        if (__OFADD__(v140, 1)) {
          goto LABEL_301;
        }
        sub_261071864((uint64_t)v138+ ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80))+ *(void *)(v141 + 72) * v140, v142, (uint64_t *)&unk_26A910590);
        if (*(unsigned char *)(v142 + *(int *)(v446 + 48) + *(int *)(v456 + 48)))
        {
          sub_2610718C8(v142, (uint64_t *)&unk_26A910590);
        }
        else
        {
          sub_261071274(v142, v143, (uint64_t *)&unk_26A910590);
          sub_2610B7CC0();
          uint64_t v145 = v142;
          uint64_t v146 = v465[0][2];
          sub_2610B7D4C(v146);
          uint64_t v147 = v146;
          uint64_t v142 = v145;
          os_log_type_t v139 = v442;
          uint64_t v148 = sub_2610B7D74(v147, v143);
          nullsub_1(v148);
          uint64_t v138 = v452;
        }
        ++v140;
      }
      while (v144 != v139);
      double v137 = v465[0];
    }
    swift_bridgeObjectRelease();
    uint64_t v149 = sub_2610812CC((uint64_t)v137);
    v419 = (void (**)(char *, void, uint64_t, uint64_t))v137;
    if (v149)
    {
      uint64_t v150 = v149;
      if (v149 < 1) {
        goto LABEL_313;
      }
      v439 = (uint64_t *)((char *)v438 + *(int *)(v446 + 48));
      uint64_t v151 = *(int *)(v456 + 48);
      uint64_t v435 = *(int *)(v456 + 64);
      uint64_t v436 = v151;
      uint64_t v152 = (uint64_t)v137
           + ((*(unsigned __int8 *)(v428 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v428 + 80));
      uint64_t v153 = *(char **)(v428 + 72);
      v433 = (void (**)(char *))(v441 + 32);
      v434 = v153;
      v426 = (void (**)(char *, char *, uint64_t))(v441 + 16);
      v422 = (void (**)(uint64_t, uint64_t))(v441 + 8);
      do
      {
        int64_t v155 = v438;
        sub_261071864(v152, (uint64_t)v438, (uint64_t *)&unk_26A910590);
        char v156 = *((unsigned char *)v439 + v436);
        uint64_t v157 = *v155;
        char v158 = *((unsigned char *)v439 + v435);
        uint64_t v159 = *(int *)(v456 + 48);
        uint64_t v160 = *(int *)(v456 + 64);
        uint64_t v161 = v447;
        (*v433)(v447);
        v161[v159] = v156;
        v161[v160] = v158;
        if (!*(void *)(v459 + 16)) {
          goto LABEL_72;
        }
        unint64_t v162 = sub_26105D6EC(v157);
        if ((v163 & 1) == 0) {
          goto LABEL_72;
        }
        uint64_t v432 = *(void *)(*(void *)(v459 + 56) + 8 * v162);
        uint64_t v164 = *(int *)(v456 + 48);
        uint64_t v165 = *(int *)(v456 + 64);
        uint64_t v166 = *v426;
        uint64_t v167 = (uint64_t)v429;
        (*v426)(v429, v447, v458);
        *(unsigned char *)(v167 + v164) = v156;
        *(unsigned char *)(v167 + v165) = v158;
        if (*(void *)(v471 + 16))
        {
          sub_26105D7C4(v167);
          uint64_t v168 = *v422;
          if (v169)
          {
            v168(v167, v458);
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v168 = *v422;
        }
        uint64_t v170 = v458;
        v168((uint64_t)v429, v458);
        uint64_t v171 = v432;
        if (!sub_2610FD0E8(v432, *v444))
        {
          uint64_t v172 = (uint64_t)v427;
          uint64_t v173 = v447;
          v166(v427, v447, v170);
          sub_261071ECC(v171, 0, v172);
          sub_26104A84C((uint64_t *)v465, v171);
          sub_26104A84C((uint64_t *)v465, v171);
          uint64_t v154 = (uint64_t)v173;
          goto LABEL_73;
        }
LABEL_72:
        uint64_t v154 = (uint64_t)v447;
LABEL_73:
        sub_2610718C8(v154, (uint64_t *)&unk_26A9105A0);
        uint64_t v138 = v452;
        v152 += (uint64_t)v434;
        --v150;
      }
      while (v150);
    }
    swift_release();
    v465[0] = (void *)MEMORY[0x263F8EE80];
    uint64_t v174 = sub_261071C78();
    v461[0] = v174;
    if (v442)
    {
      uint64_t v175 = 0;
      unint64_t v176 = v437;
      uint64_t v177 = v428;
      do
      {
        sub_2610B7C9C(v175, 1, v138);
        unint64_t v178 = (void (*)(void))(v175 + 1);
        if (__OFADD__(v175, 1)) {
          goto LABEL_302;
        }
        unint64_t v179 = v445;
        sub_261071864((uint64_t)v138+ ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80))+ *(void *)(v177 + 72) * v175, (uint64_t)v445, (uint64_t *)&unk_26A910590);
        if (*((unsigned char *)v179 + *(int *)(v446 + 48) + *(int *)(v456 + 48)) == 2)
        {
          uint64_t v180 = v431;
          sub_261071274((uint64_t)v445, v431, (uint64_t *)&unk_26A910590);
          sub_2610B7CC0();
          uint64_t v181 = *(void *)(v461[0] + 16);
          sub_2610B7D4C(v181);
          uint64_t v177 = v428;
          uint64_t v182 = sub_2610B7D74(v181, v180);
          nullsub_1(v182);
          uint64_t v138 = v452;
        }
        else
        {
          sub_2610718C8((uint64_t)v445, (uint64_t *)&unk_26A910590);
        }
        ++v175;
      }
      while (v178 != v442);
      uint64_t v183 = v461[0];
    }
    else
    {
      uint64_t v183 = v174;
      unint64_t v176 = v437;
      uint64_t v177 = v428;
    }
    swift_bridgeObjectRelease();
    uint64_t v184 = sub_2610812CC(v183);
    uint64_t v185 = (uint64_t)v440;
    uint64_t v435 = v184;
    if (v184)
    {
      uint64_t v186 = 0;
      v434 = (char *)v176 + *(int *)(v446 + 48);
      int v187 = (void (**)(char *))*(int *)(v456 + 48);
      uint64_t v432 = *(int *)(v456 + 64);
      v433 = v187;
      unint64_t v188 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
      v414[1] = v183;
      uint64_t v189 = v183 + v188;
      os_signpost_id_t v445 = (void *)(v441 + 32);
      float v190 = (char *)(v441 + 48);
      unint64_t v438 = (uint64_t *)(v441 + 16);
      uint64_t v431 = *(void *)(v177 + 72);
      int v418 = (void (**)(uint64_t, uint64_t))(v441 + 8);
      v419 = (void (**)(char *, void, uint64_t, uint64_t))(v441 + 56);
      int v429 = (char *)(v441 + 48);
      while (1)
      {
        sub_261071864(v189, (uint64_t)v176, (uint64_t *)&unk_26A910590);
        if (__OFADD__(v186, 1)) {
          goto LABEL_303;
        }
        uint64_t v446 = v189;
        v447 = v186;
        os_signpost_type_t v452 = v186 + 1;
        int v191 = *((unsigned __int8 *)v433 + (void)v434);
        uint64_t v192 = *v176;
        int v193 = v434[v432];
        uint64_t v194 = *(int *)(v456 + 48);
        uint64_t v195 = *(int *)(v456 + 64);
        v442 = (void (*)(void))*v445;
        v442(v185);
        *(unsigned char *)(v185 + v194) = v191;
        *(unsigned char *)(v185 + v195) = v193;
        uint64_t v196 = sub_2610A5040(v192, v459);
        if (v197) {
          goto LABEL_94;
        }
        uint64_t v198 = v196;
        uint64_t v199 = v425;
        sub_2610A50D0(v196, (uint64_t)v465[0], v425);
        char v200 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v190;
        uint64_t v201 = v458;
        uint64_t v428 = (uint64_t)v200;
        int v202 = v200(v199, 1, v458);
        sub_2610718C8(v199, &qword_26B40AC70);
        uint64_t v203 = *(int *)(v456 + 48);
        uint64_t v204 = *(int *)(v456 + 64);
        uint64_t v205 = (uint64_t)v424;
        uint64_t v436 = *v438;
        ((void (*)(char *, char *, uint64_t))v436)(v424, v440, v201);
        *(unsigned char *)(v205 + v203) = v191;
        LODWORD(v439) = v193;
        *(unsigned char *)(v205 + v204) = v193;
        if (v202 == 1) {
          break;
        }
        LODWORD(v426) = v191;
        uint64_t v215 = v421;
        v422 = (void (**)(uint64_t, uint64_t))v198;
        sub_2610A50D0(v198, (uint64_t)v465[0], v421);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v428)(v215, 1, v201) == 1)
        {
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
          goto LABEL_323;
        }
        uint64_t v428 = sub_26111E738();
        uint64_t v217 = v216;
        unint64_t v218 = *v418;
        (*v418)(v215, v201);
        uint64_t v219 = *(int *)(v456 + 48);
        uint64_t v220 = *(int *)(v456 + 64);
        uint64_t v221 = v427;
        ((void (*)(char *, uint64_t, uint64_t))v436)(v427, v205, v201);
        v221[v219] = (char)v426;
        v221[v220] = (char)v439;
        uint64_t v222 = sub_26111E738();
        uint64_t v224 = v223;
        v218((uint64_t)v221, v201);
        if (v222 != v428 || v224 != v217)
        {
          char v225 = sub_26111F408();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2610718C8(v205, (uint64_t *)&unk_26A9105A0);
          uint64_t v185 = (uint64_t)v440;
          float v190 = v429;
          uint64_t v206 = (uint64_t)v422;
          char v207 = (char)v439;
          LOBYTE(v191) = (_BYTE)v426;
          if ((v225 & 1) == 0) {
            goto LABEL_94;
          }
          goto LABEL_99;
        }
        swift_bridgeObjectRelease_n();
        sub_2610718C8(v205, (uint64_t *)&unk_26A9105A0);
        uint64_t v185 = (uint64_t)v440;
        float v190 = v429;
LABEL_94:
        sub_2610718C8(v185, (uint64_t *)&unk_26A9105A0);
        uint64_t v186 = v447 + 1;
        uint64_t v189 = v446 + v431;
        unint64_t v176 = v437;
        if (v452 == (void *)v435)
        {
          swift_release();
          uint64_t v226 = v465[0];
          goto LABEL_107;
        }
      }
      sub_2610718C8(v205, (uint64_t *)&unk_26A9105A0);
      uint64_t v206 = v198;
      char v207 = (char)v439;
LABEL_99:
      uint64_t v208 = *(int *)(v456 + 48);
      uint64_t v209 = *(int *)(v456 + 64);
      int v210 = v427;
      uint64_t v211 = v458;
      ((void (*)(char *, char *, uint64_t))v436)(v427, v440, v458);
      v210[v208] = v191;
      v210[v209] = v207;
      double v212 = v423;
      uint64_t v213 = v210;
      float v190 = v429;
      ((void (*)(char *, char *, uint64_t))v442)(v423, v213, v211);
      (*v419)(v212, 0, 1, v211);
      uint64_t v214 = (uint64_t)v212;
      uint64_t v185 = (uint64_t)v440;
      sub_26107203C(v214, v206);
      goto LABEL_94;
    }
    swift_release();
    uint64_t v226 = (void *)MEMORY[0x263F8EE80];
LABEL_107:
    uint64_t v227 = v226[8];
    v447 = (char *)(v226 + 8);
    uint64_t v228 = 1 << *((unsigned char *)v226 + 32);
    uint64_t v229 = -1;
    if (v228 < 64) {
      uint64_t v229 = ~(-1 << v228);
    }
    unint64_t v230 = v229 & v227;
    uint64_t v456 = v441 + 16;
    uint64_t v231 = (void (**)(char *, char *, uint64_t))(v441 + 32);
    os_signpost_type_t v452 = (void *)((unint64_t)(v228 + 63) >> 6);
    uint64_t v446 = (uint64_t)v452 - 1;
    swift_bridgeObjectRetain();
    uint64_t v232 = 0;
    if (!v230) {
      goto LABEL_112;
    }
LABEL_110:
    unint64_t v233 = __clz(__rbit64(v230));
    v230 &= v230 - 1;
    unint64_t v234 = v233 | (v232 << 6);
    uint64_t v235 = v455;
LABEL_111:
    uint64_t v236 = v226[7];
    *uint64_t v235 = *(void *)(v226[6] + 8 * v234);
    uint64_t v237 = v441;
    uint64_t v238 = v236 + *(void *)(v441 + 72) * v234;
    uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9100A0);
    double v240 = *(void (**)(char *, uint64_t, uint64_t))(v237 + 16);
    uint64_t v235 = v455;
    v240(&v455[*(int *)(v239 + 48)], v238, v458);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v239 - 8) + 56))(v235, 0, 1, v239);
    while (1)
    {
      uint64_t v244 = (uint64_t)v235;
      uint64_t v245 = v443;
      sub_261071274(v244, (uint64_t)v443, &qword_26A910090);
      uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9100A0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v246 - 8) + 48))(v245, 1, v246) == 1) {
        break;
      }
      uint64_t v247 = *v245;
      os_signpost_id_t v248 = (char *)v245 + *(int *)(v246 + 48);
      uint64_t v249 = (uint64_t)v448;
      (*v231)(v448, v248, v458);
      sub_261071ECC(v247, 0, v249);
      sub_26104A84C(v461, v247);
      if (v230) {
        goto LABEL_110;
      }
LABEL_112:
      uint64_t v241 = v232 + 1;
      if (__OFADD__(v232, 1)) {
        goto LABEL_304;
      }
      uint64_t v235 = v455;
      if (v241 < (uint64_t)v452)
      {
        unint64_t v242 = *(void *)&v447[8 * v241];
        if (v242) {
          goto LABEL_115;
        }
        v232 += 2;
        if (v241 + 1 >= (uint64_t)v452)
        {
          uint64_t v232 = v241;
        }
        else
        {
          unint64_t v242 = *(void *)&v447[8 * v232];
          if (v242)
          {
            ++v241;
LABEL_115:
            unint64_t v230 = (v242 - 1) & v242;
            unint64_t v234 = __clz(__rbit64(v242)) + (v241 << 6);
            uint64_t v232 = v241;
            goto LABEL_111;
          }
          if (v241 + 2 < (uint64_t)v452)
          {
            unint64_t v242 = *(void *)&v447[8 * v241 + 16];
            if (v242)
            {
              v241 += 2;
              goto LABEL_115;
            }
            uint64_t v250 = v241 + 3;
            if (v241 + 3 < (uint64_t)v452)
            {
              unint64_t v242 = *(void *)&v447[8 * v250];
              if (!v242)
              {
                while (1)
                {
                  uint64_t v241 = v250 + 1;
                  if (__OFADD__(v250, 1)) {
                    goto LABEL_314;
                  }
                  if (v241 >= (uint64_t)v452)
                  {
                    uint64_t v232 = v446;
                    goto LABEL_120;
                  }
                  unint64_t v242 = *(void *)&v447[8 * v241];
                  ++v250;
                  if (v242) {
                    goto LABEL_115;
                  }
                }
              }
              v241 += 3;
              goto LABEL_115;
            }
            uint64_t v232 = v241 + 2;
          }
        }
      }
LABEL_120:
      uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A9100A0);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v243 - 8) + 56))(v235, 1, 1, v243);
      unint64_t v230 = 0;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)v457;
    unsigned int v110 = v415;
  }
  if (v420) {
    v420();
  }
  os_signpost_type_t v468 = (void *)sub_26111EB78();
  uint64_t v251 = swift_bridgeObjectRetain();
  uint64_t v252 = sub_261072898(v251);
  uint64_t v253 = swift_bridgeObjectRetain();
  uint64_t v254 = sub_261072A10(v253);
  sub_26108A1A8(v254, v252);
  swift_bridgeObjectRelease();
  uint64_t v255 = swift_bridgeObjectRetain();
  uint64_t v256 = sub_261074618(v255);
  swift_bridgeObjectRelease();
  v465[0] = v256;
  sub_2610A162C((uint64_t *)v465);
  v455 = v110;
  if (v110) {
    goto LABEL_324;
  }
  swift_bridgeObjectRelease();
  os_signpost_type_t v452 = v465[0];
  v447 = (char *)sub_2610812CC((uint64_t)v465[0]);
  if (v447)
  {
    uint64_t v257 = 0;
    uint64_t v446 = (uint64_t)(v452 + 4);
    while (1)
    {
      sub_2610B7C9C(v257, 1, v452);
      double v261 = v257 + 1;
      if (__OFADD__(v257, 1)) {
        goto LABEL_298;
      }
      uint64_t v262 = *(void *)(v446 + 8 * (void)v257);
      if (v262 != -1) {
        break;
      }
      uint64_t v258 = -1;
      uint64_t v456 = -1;
LABEL_143:
      swift_bridgeObjectRelease();
      v259 = v468;
      char v260 = swift_isUniquelyReferenced_nonNull_native();
      v465[0] = v259;
      sub_26107EDD4(v456, v258, v260);
      os_signpost_type_t v468 = v465[0];
      swift_bridgeObjectRelease();
      uint64_t v257 = v261;
      if (v261 == v447) {
        goto LABEL_176;
      }
    }
    uint64_t v263 = -1;
    uint64_t v264 = (void *)MEMORY[0x263F8EE88];
    uint64_t v456 = -1;
    while (1)
    {
      uint64_t v258 = v262;
      if (v264[2])
      {
        uint64_t v265 = sub_26111F4B8();
        uint64_t v266 = -1 << *((unsigned char *)v264 + 32);
        unint64_t v267 = v265 & ~v266;
        os_signpost_id_t v268 = v264 + 7;
        if ((*(void *)((char *)v264 + ((v267 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v267))
        {
          uint64_t v269 = v264[6];
          if (*(void *)(v269 + 8 * v267) == v258) {
            goto LABEL_142;
          }
          uint64_t v270 = ~v266;
          unint64_t v271 = (v267 + 1) & v270;
          if ((*(void *)((char *)v268 + ((v271 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v271))
          {
            if (*(void *)(v269 + 8 * v271) == v258)
            {
LABEL_142:
              uint64_t v258 = v263;
              goto LABEL_143;
            }
            while (1)
            {
              unint64_t v271 = (v271 + 1) & v270;
              if (((*(void *)((char *)v268 + ((v271 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v271) & 1) == 0) {
                break;
              }
              if (*(void *)(v269 + 8 * v271) == v258) {
                goto LABEL_142;
              }
            }
          }
        }
      }
      uint64_t v272 = sub_26111F4B8();
      uint64_t v273 = -1 << *((unsigned char *)v264 + 32);
      unint64_t v274 = v272 & ~v273;
      if (((*(void *)((char *)v264 + ((v274 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v274) & 1) == 0) {
        goto LABEL_161;
      }
      uint64_t v275 = v264[6];
      if (*(void *)(v275 + 8 * v274) != v258) {
        break;
      }
LABEL_162:
      uint64_t v278 = v459;
      if (v263 != -1 && v111[2])
      {
        sub_26105D6EC(v258);
        if (v279)
        {
          uint64_t v280 = sub_2610A4FFC(v263, (uint64_t)v111);
          if (!v280) {
            goto LABEL_316;
          }
          uint64_t v281 = (unsigned char *)v280;
          unint64_t v282 = sub_2610A5208(v263, v460);
          if ((v282 & 0x100000000) != 0)
          {
LABEL_317:
            __break(1u);
LABEL_318:
            __break(1u);
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
            goto LABEL_321;
          }
          float v283 = *(float *)&v282;
          swift_retain();
          sub_2611071AC(v281, v283);
          swift_release();
          swift_release();
        }
        uint64_t v278 = v459;
      }
      if (*(void *)(v278 + 16))
      {
        unint64_t v284 = sub_26105D6EC(v258);
        if (v285) {
          uint64_t v456 = *(void *)(*(void *)(v459 + 56) + 8 * v284);
        }
      }
      uint64_t v262 = sub_2610A5040(v258, v81);
      if ((v286 & 1) == 0)
      {
        uint64_t v263 = v258;
        if (v262 != -1) {
          continue;
        }
      }
      goto LABEL_143;
    }
    uint64_t v276 = ~v273;
    while (1)
    {
      unint64_t v274 = (v274 + 1) & v276;
      if (((*(void *)((char *)v264 + ((v274 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v274) & 1) == 0) {
        break;
      }
      if (*(void *)(v275 + 8 * v274) == v258) {
        goto LABEL_162;
      }
    }
LABEL_161:
    char v277 = swift_isUniquelyReferenced_nonNull_native();
    v465[0] = v264;
    sub_2610603EC(v258, v274, v277);
    uint64_t v264 = v465[0];
    swift_bridgeObjectRelease();
    goto LABEL_162;
  }
LABEL_176:
  uint64_t v287 = swift_release();
  if (v420) {
    ((void (*)(uint64_t))v420)(v287);
  }
  v467 = (void *)MEMORY[0x263F8EE80];
  uint64_t v288 = *(void *)(v81 + 64);
  os_signpost_type_t v452 = (void *)(v81 + 64);
  uint64_t v289 = 1 << *(unsigned char *)(v81 + 32);
  uint64_t v290 = -1;
  if (v289 < 64) {
    uint64_t v290 = ~(-1 << v289);
  }
  unint64_t v291 = v290 & v288;
  uint64_t v456 = (unint64_t)(v289 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v292 = 0;
LABEL_183:
  uint64_t v293 = v458;
  if (v291)
  {
LABEL_184:
    unint64_t v294 = __clz(__rbit64(v291));
    v291 &= v291 - 1;
    unint64_t v295 = v294 | (v292 << 6);
    goto LABEL_199;
  }
  while (1)
  {
    uint64_t v296 = v292 + 1;
    if (__OFADD__(v292, 1)) {
      goto LABEL_300;
    }
    uint64_t v297 = (uint64_t)v457;
    if (v296 >= v456) {
      break;
    }
    unint64_t v298 = v452[v296];
    ++v292;
    if (v298) {
      goto LABEL_198;
    }
    uint64_t v292 = v296 + 1;
    if (v296 + 1 >= v456) {
      break;
    }
    unint64_t v298 = v452[v292];
    if (v298) {
      goto LABEL_198;
    }
    uint64_t v292 = v296 + 2;
    if (v296 + 2 >= v456) {
      break;
    }
    unint64_t v298 = v452[v292];
    if (v298) {
      goto LABEL_198;
    }
    uint64_t v299 = v296 + 3;
    if (v299 >= v456) {
      break;
    }
    unint64_t v298 = v452[v299];
    if (!v298)
    {
      while (1)
      {
        uint64_t v292 = v299 + 1;
        if (__OFADD__(v299, 1)) {
          goto LABEL_306;
        }
        if (v292 >= v456) {
          goto LABEL_212;
        }
        unint64_t v298 = v452[v292];
        ++v299;
        if (v298) {
          goto LABEL_198;
        }
      }
    }
    uint64_t v292 = v299;
LABEL_198:
    unint64_t v291 = (v298 - 1) & v298;
    unint64_t v295 = __clz(__rbit64(v298)) + (v292 << 6);
LABEL_199:
    uint64_t v300 = 8 * v295;
    uint64_t v301 = *(void *)(v457[6] + v300);
    uint64_t v302 = *(void *)(v457[7] + v300);
    if (!v467[2] || (sub_26105D6EC(v302), (v303 & 1) == 0))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A6A0);
      uint64_t v312 = swift_allocObject();
      uint64_t v313 = sub_2610B7C8C(v312, 1);
      *uint64_t v314 = v301;
      v315 = v467;
      char v316 = swift_isUniquelyReferenced_nonNull_native();
      v465[0] = v315;
      v467 = (void *)0x8000000000000000;
      unint64_t v318 = sub_26105D6EC(v302);
      uint64_t v319 = v315[2];
      BOOL v320 = (v317 & 1) == 0;
      uint64_t v321 = v319 + v320;
      if (__OFADD__(v319, v320))
      {
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
LABEL_302:
        __break(1u);
LABEL_303:
        __break(1u);
LABEL_304:
        __break(1u);
LABEL_305:
        __break(1u);
LABEL_306:
        __break(1u);
LABEL_307:
        __break(1u);
LABEL_308:
        __break(1u);
LABEL_309:
        __break(1u);
LABEL_310:
        __break(1u);
LABEL_311:
        __break(1u);
LABEL_312:
        __break(1u);
LABEL_313:
        __break(1u);
LABEL_314:
        __break(1u);
LABEL_315:
        __break(1u);
LABEL_316:
        __break(1u);
        goto LABEL_317;
      }
      char v322 = v317;
      if (v315[3] < v321)
      {
        sub_2610780F0(v321, v316);
        unint64_t v323 = sub_26105D6EC(v302);
        if ((v322 & 1) == (v324 & 1))
        {
          unint64_t v318 = v323;
          goto LABEL_210;
        }
LABEL_323:
        sub_26111F448();
        __break(1u);
LABEL_324:
        swift_release();
        __break(1u);
        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      if ((v316 & 1) == 0) {
        sub_26107C3EC();
      }
LABEL_210:
      uint64_t v325 = nullsub_1(v313);
      v326 = v465[0];
      if (v322)
      {
        uint64_t v327 = v465[0][7];
        swift_bridgeObjectRelease();
        *(void *)(v327 + 8 * v318) = v325;
      }
      else
      {
        sub_26107E810(v318, v302, v325, v465[0]);
      }
      v467 = v326;
      swift_bridgeObjectRelease();
      goto LABEL_183;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A6A0);
    uint64_t inited = swift_initStackObject();
    uint64_t v305 = sub_2610B7C8C(inited, 1);
    *uint64_t v306 = v301;
    os_log_type_t v307 = sub_2610A559C(v465, v302);
    if (!*v308) {
      goto LABEL_318;
    }
    unint64_t v309 = (void (*)(void **, void))v307;
    uint64_t v310 = (uint64_t)v308;
    uint64_t v311 = nullsub_1(v305);
    sub_2610A5890(v310, v311);
    swift_bridgeObjectRelease();
    v309(v465, 0);
    if (v291) {
      goto LABEL_184;
    }
  }
LABEL_212:
  swift_release();
  uint64_t v328 = sub_2610A5264(-1, (uint64_t)v467);
  if (!v328) {
    uint64_t v328 = sub_2610B7BF0(0);
  }
  uint64_t v329 = v328;
  os_signpost_id_t v440 = (char *)sub_2610812CC(v328);
  if (!v440) {
    goto LABEL_294;
  }
  uint64_t v330 = 0;
  os_signpost_type_t v452 = (void *)(v441 + 48);
  v444 = (uint64_t *)(v441 + 16);
  uint64_t v446 = v441 + 8;
  v447 = (char *)(v441 + 32);
  v441 += 56;
  v442 = (void (*)(void))(v329 + 32);
  v439 = (uint64_t *)v329;
  while (1)
  {
    sub_2610B7C9C(v330, 1, v329);
    if (__OFADD__(v330, 1)) {
      goto LABEL_307;
    }
    v443 = (uint64_t *)(v330 + 1);
    uint64_t v331 = *((void *)v442 + v330);
    uint64_t v463 = 0;
    char v464 = 1;
    uint64_t v332 = v468;
    uint64_t v333 = sub_2610A5040(v331, (uint64_t)v468);
    if ((v334 & 1) != 0 || v333 != -1)
    {
      uint64_t v335 = v470;
      uint64_t v336 = sub_2610A5040(v331, (uint64_t)v332);
      if (v337) {
        goto LABEL_322;
      }
      if (!sub_2610FD0E8(v336, v335))
      {
        uint64_t v463 = sub_2610A5040(v331, (uint64_t)v332);
        char v464 = v338 & 1;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A6A0);
    uint64_t v339 = swift_initStackObject();
    uint64_t v340 = sub_2610B7C8C(v339, 1);
    *uint64_t v341 = v331;
    uint64_t v342 = nullsub_1(v340);
    uint64_t v462 = v342;
    if (sub_2610812CC(v342) >= 1) {
      break;
    }
LABEL_216:
    swift_bridgeObjectRelease();
    uint64_t v330 = (uint64_t)v443;
    uint64_t v329 = (uint64_t)v439;
    if (v443 == (uint64_t *)v440) {
      goto LABEL_294;
    }
  }
  int64_t v343 = 0;
  while (2)
  {
    uint64_t v456 = v343;
    unint64_t v344 = sub_2610B5298(v343, v342);
    uint64_t v345 = sub_2610A5040(v344, v297);
    if ((v346 & 1) == 0 && v345 != -1)
    {
      uint64_t v463 = sub_2610A5040(v345, (uint64_t)v468);
      char v464 = v347 & 1;
    }
    if (sub_2610A4FFC(v344, (uint64_t)v111))
    {
      uint64_t v348 = sub_261106D74();
      swift_release();
      uint64_t v349 = v455;
      uint64_t v350 = sub_2610FCBB8(v348, &v471);
      swift_bridgeObjectRelease();
      uint64_t v351 = sub_2610FD940(v350, &v463);
      __int16 v353 = v352;
      v455 = v349;
      swift_bridgeObjectRelease();
      if ((v353 & 0x100) == 0)
      {
        uint64_t v463 = 0;
        char v464 = 1;
        uint64_t v354 = sub_2610A5040(v344, v459);
        if ((v355 & 1) == 0 && ((v353 & 1) != 0 || v354 != v351))
        {
          uint64_t v463 = v354;
          char v464 = 0;
        }
      }
    }
    uint64_t v356 = sub_2610A4FFC(v344, (uint64_t)v111);
    if (!v356)
    {
LABEL_239:
      uint64_t v361 = sub_2610A5040(v344, v297);
      if ((v362 & 1) == 0)
      {
        uint64_t v363 = v361;
        uint64_t v364 = sub_2610A5040(v344, v297);
        if ((v365 & 1) != 0 || v364 != -1)
        {
          uint64_t v366 = sub_2610A4FFC(v363, (uint64_t)v111);
          if (v366)
          {
            uint64_t v367 = v366
                 + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
            swift_beginAccess();
            uint64_t v368 = v367;
            uint64_t v369 = v430;
            sub_261071864(v368, v430, &qword_26B40AC70);
            swift_release();
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v452)(v369, 1, v293) != 1)
            {
              sub_2610718C8(v369, &qword_26B40AC70);
              uint64_t v370 = sub_2610A5040(v344, v459);
              if ((v371 & 1) == 0)
              {
                uint64_t v372 = v370;
                if (!sub_2610FD0E8(v370, v470)) {
                  goto LABEL_269;
                }
              }
              goto LABEL_267;
            }
          }
          else
          {
            uint64_t v369 = v430;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v441)(v430, 1, 1, v293);
          }
          sub_2610718C8(v369, &qword_26B40AC70);
        }
      }
      if (v464 != 1)
      {
        uint64_t v372 = v463;
        goto LABEL_269;
      }
LABEL_267:
      uint64_t v372 = sub_261105C44(v450, v453);
LABEL_269:
      uint64_t v463 = v372;
      char v464 = 0;
      sub_261071DFC(v372, 0, v344);
      goto LABEL_270;
    }
    uint64_t v357 = v356;
    uint64_t v358 = v356
         + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
    swift_beginAccess();
    uint64_t v359 = v358;
    uint64_t v360 = v451;
    sub_261071864(v359, v451, &qword_26B40AC70);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v452)(v360, 1, v293) == 1)
    {
      swift_release();
      sub_2610718C8(v360, &qword_26B40AC70);
      goto LABEL_239;
    }
    uint64_t v373 = v454;
    (*(void (**)(uint64_t, uint64_t, uint64_t))v447)(v454, v360, v293);
    double v374 = (uint64_t *)(v357
                     + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_localRejectionTags);
    swift_beginAccess();
    uint64_t v375 = *v374;
    swift_bridgeObjectRetain();
    uint64_t v466 = v373;
    BOOL v376 = sub_261108FC4((uint64_t (*)(char *))sub_26110930C, (uint64_t)v465, v375);
    os_signpost_id_t v445 = 0;
    swift_bridgeObjectRelease();
    if (v376)
    {
      uint64_t v377 = sub_2610A5040(v344, v459);
      if ((v378 & 1) != 0 || (uint64_t v379 = v377, v380 = sub_2610A5088(v454, v471), (v381 & 1) == 0) && v379 == v380) {
        uint64_t v382 = sub_261105C44(v450, v453);
      }
      else {
        uint64_t v382 = v379;
      }
      sub_261071DFC(v382, 0, v344);
    }
    else
    {
      uint64_t v383 = v463;
      char v384 = v464;
      sub_2610A5040(v344, v297);
      if ((v385 & 1) == 0)
      {
        uint64_t v386 = sub_2610A5040(v344, v297);
        if (v387) {
          goto LABEL_320;
        }
        if (sub_2610A4FFC(v386, (uint64_t)v111))
        {
          uint64_t v388 = sub_261106D74();
          swift_release();
          uint64_t v466 = v454;
          BOOL v389 = sub_261108FC4((uint64_t (*)(char *))sub_26110930C, (uint64_t)v465, v388);
          unint64_t v438 = 0;
          uint64_t v293 = v458;
          swift_bridgeObjectRelease();
          if (v389) {
            uint64_t v383 = 0;
          }
          v384 |= v389;
        }
      }
      uint64_t v390 = v471;
      sub_2610A5088(v454, v471);
      if ((v391 & 1) != 0 && (v384 & 1) == 0)
      {
        if (*(unsigned char *)(v357
                      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) == 1)
        {
          char v384 = sub_2610FD0E8(v383, v469);
          if (v384) {
            uint64_t v383 = 0;
          }
        }
        else
        {
          char v384 = 0;
        }
      }
      uint64_t v404 = sub_2610A5088(v454, v390);
      if (v405)
      {
        uint64_t v404 = v383;
        if (v384) {
          uint64_t v404 = sub_261105C44(v450, v453);
        }
      }
      sub_261071DFC(v404, 0, v344);
      uint64_t v406 = (uint64_t)v448;
      ((void (*)(char *, uint64_t, uint64_t))*v444)(v448, v454, v293);
      uint64_t v407 = sub_2610A5040(v344, (uint64_t)v468);
      sub_261071ECC(v407, v408 & 1, v406);
    }
    if (*(unsigned char *)(v357
                  + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) == 1)
    {
      uint64_t v409 = sub_2610A5040(v344, (uint64_t)v468);
      if (v410) {
        goto LABEL_319;
      }
      sub_26104A84C((uint64_t *)v465, v409);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))v446)(v454, v293);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))v446)(v454, v293);
      swift_release();
    }
LABEL_270:
    uint64_t v392 = sub_2610A5040(v344, (uint64_t)v468);
    if (v393) {
      goto LABEL_315;
    }
    sub_26104A84C((uint64_t *)v465, v392);
    uint64_t v394 = sub_2610A5264(v344, (uint64_t)v467);
    if (!v394) {
      uint64_t v394 = sub_2610B7BF0(0);
    }
    uint64_t v395 = v394;
    uint64_t v396 = sub_2610812CC(v394);
    if (!v396)
    {
LABEL_226:
      sub_2610A5890((uint64_t)&v462, v395);
      swift_bridgeObjectRelease();
      int64_t v343 = v456 + 1;
      uint64_t v342 = v462;
      if (v343 >= sub_2610812CC(v462)) {
        goto LABEL_216;
      }
      continue;
    }
    break;
  }
  uint64_t v397 = v396;
  swift_bridgeObjectRetain();
  uint64_t v398 = 0;
  while (1)
  {
    uint64_t v399 = v398 + 1;
    if (__OFADD__(v398, 1)) {
      break;
    }
    uint64_t v400 = *(void *)(v395 + 8 * v398 + 32);
    if (sub_2610A4FFC(v400, (uint64_t)v111))
    {
      uint64_t v401 = sub_2610A4FFC(v344, (uint64_t)v111);
      if (!v401) {
        goto LABEL_309;
      }
      v402 = (unsigned char *)v401;
      unint64_t v403 = sub_2610A5208(v400, v460);
      if ((v403 & 0x100000000) != 0) {
        goto LABEL_310;
      }
      sub_2611071AC(v402, *(float *)&v403);
      swift_release();
      swift_release();
    }
    ++v398;
    if (v399 == v397)
    {
      swift_bridgeObjectRelease();
      uint64_t v297 = (uint64_t)v457;
      uint64_t v293 = v458;
      goto LABEL_226;
    }
  }
  __break(1u);
LABEL_294:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v411 = swift_bridgeObjectRelease();
  if (v420) {
    ((void (*)(uint64_t))v420)(v411);
  }
  swift_bridgeObjectRelease();
  __int16 v412 = v468;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_261105974();
  swift_release();
  return (uint64_t)v412;
}

uint64_t sub_261105974()
{
  uint64_t v0 = sub_26111EA78();
  uint64_t v19 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_26111EA38();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_26111EA48();
  sub_26111EA88();
  os_signpost_type_t v11 = sub_26111F008();
  if (sub_26111F0B8())
  {
    swift_retain();
    sub_26111EAB8();
    swift_release();
    uint64_t v12 = v19;
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v2, v0) == *MEMORY[0x263F90238])
    {
      uint64_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
      uint64_t v13 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v10, v11, v16, "propagateLabels", v13, v15, 2u);
    MEMORY[0x26122E4F0](v15, -1, -1);

    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_261105C44(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 16);
  uint64_t result = swift_beginAccess();
LABEL_8:
  while (a2 <= 5u)
  {
    char v10 = a2;
    if (a2)
    {
      if (a2 != 2) {
        goto LABEL_20;
      }
      char v10 = 1;
    }
    do
    {
LABEL_16:
      v12[0] = 0;
      uint64_t result = MEMORY[0x26122E510](v12, 8);
    }
    while (((0xFFFFFFFFFFFFFFLL * v12[0]) & 0xFFFFFFFFFFFFFF00) == 0);
    uint64_t v11 = qword_261121C08[v10] | (((v12[0] * (unsigned __int128)0xFFFFFFFFFFFFFFuLL) >> 64) + 1);
    if (v11 != -1)
    {
      uint64_t v5 = *v3;
      if (!*(void *)(*v3 + 16)) {
        goto LABEL_19;
      }
      uint64_t result = sub_26111F4B8();
      uint64_t v6 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v7 = result & ~v6;
      if (((*(void *)(v5 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v8 = *(void *)(v5 + 48);
      if (*(void *)(v8 + 8 * v7) != v11)
      {
        uint64_t v9 = ~v6;
        while (1)
        {
          unint64_t v7 = (v7 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            break;
          }
          if (*(void *)(v8 + 8 * v7) == v11) {
            goto LABEL_8;
          }
        }
LABEL_19:
        swift_beginAccess();
        sub_26105E524(&v13, v11);
        swift_endAccess();
        return v11;
      }
    }
  }
  if (a2 == 63)
  {
    char v10 = 2;
    goto LABEL_16;
  }
  if (a2 == 6)
  {
    char v10 = 3;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_261105DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v172 = a3;
  uint64_t v177 = a2;
  uint64_t v158 = sub_26111EA78();
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v168 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26111EA38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v164 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v156 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v156 - v13;
  uint64_t v15 = v3 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  sub_26111EA28();
  os_signpost_id_t v16 = sub_26111EA48();
  os_signpost_type_t v17 = sub_26111F018();
  char v18 = sub_26111F0B8();
  uint64_t v161 = v15;
  if (v18)
  {
    uint64_t v165 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    unint64_t v19 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v165(v12, v14, v6);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v21 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v16, v17, v21, "updateDiversity", "", v20, 2u);
    MEMORY[0x26122E4F0](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v22 = v165;
  }
  else
  {

    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    unint64_t v19 = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v165 = v22;
  unint64_t v156 = v19;
  v22(v12, v14, v6);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v159 = v12;
  uint64_t v166 = sub_26111EA98();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v163 = v6;
  uint64_t v162 = v7 + 8;
  uint64_t v160 = v23;
  v23(v14, v6);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & *(void *)(a1 + 64);
  int64_t v176 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v28 = v177;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  int64_t v30 = 0;
  uint64_t v31 = (void *)MEMORY[0x263F8EE80];
  uint64_t v173 = (void *)MEMORY[0x263F8EE80];
  char v169 = (void *)MEMORY[0x263F8EE80];
  uint64_t v175 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v167 = v29;
    uint64_t v174 = v31;
    uint64_t v32 = v175;
    do
    {
      do
      {
        while (v27)
        {
          unint64_t v33 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
          unint64_t v34 = v33 | (v30 << 6);
          if (*(void *)(v28 + 16)) {
            goto LABEL_25;
          }
        }
        int64_t v35 = v30 + 1;
        if (__OFADD__(v30, 1))
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        uint64_t v36 = v168;
        uint64_t v37 = v169;
        if (v35 >= v176) {
          goto LABEL_70;
        }
        unint64_t v38 = *(void *)(v24 + 8 * v35);
        ++v30;
        if (!v38)
        {
          int64_t v30 = v35 + 1;
          if (v35 + 1 >= v176) {
            goto LABEL_70;
          }
          unint64_t v38 = *(void *)(v24 + 8 * v30);
          if (!v38)
          {
            int64_t v30 = v35 + 2;
            if (v35 + 2 >= v176) {
              goto LABEL_70;
            }
            unint64_t v38 = *(void *)(v24 + 8 * v30);
            if (!v38)
            {
              int64_t v39 = v35 + 3;
              if (v39 >= v176)
              {
LABEL_70:
                swift_release();
                int64_t v176 = 0;
                uint64_t v91 = v32[8];
                char v90 = v32 + 8;
                uint64_t v89 = v91;
                uint64_t v92 = 1 << *((unsigned char *)v90 - 32);
                uint64_t v93 = -1;
                if (v92 < 64) {
                  uint64_t v93 = ~(-1 << v92);
                }
                unint64_t v94 = v93 & v89;
                uint64_t v170 = v90;
                int64_t v171 = (unint64_t)(v92 + 63) >> 6;
                unint64_t v95 = (void *)MEMORY[0x263F8EE80];
                uint64_t v96 = v172;
                if ((v93 & v89) != 0) {
                  goto LABEL_76;
                }
LABEL_96:
                while (1)
                {
                  int64_t v125 = v176 + 1;
                  unint64_t v100 = v174;
                  if (__OFADD__(v176, 1)) {
                    break;
                  }
                  if (v125 >= v171) {
                    goto LABEL_122;
                  }
                  unint64_t v126 = v170[v125];
                  int64_t v127 = v176 + 1;
                  if (!v126)
                  {
                    int64_t v127 = v176 + 2;
                    if (v176 + 2 >= v171) {
                      goto LABEL_122;
                    }
                    unint64_t v126 = v170[v127];
                    if (!v126)
                    {
                      int64_t v127 = v176 + 3;
                      if (v176 + 3 >= v171) {
                        goto LABEL_122;
                      }
                      unint64_t v126 = v170[v127];
                      if (!v126)
                      {
                        int64_t v128 = v176 + 4;
                        if (v176 + 4 >= v171)
                        {
LABEL_122:
                          swift_bridgeObjectRelease();
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v143 = sub_26111EA48();
                          uint64_t v144 = v164;
                          sub_26111EA88();
                          os_signpost_type_t v145 = sub_26111F008();
                          if (sub_26111F0B8())
                          {
                            swift_retain();
                            sub_26111EAB8();
                            swift_release();
                            uint64_t v146 = v157;
                            uint64_t v147 = v158;
                            if ((*(unsigned int (**)(char *, uint64_t))(v157 + 88))(v36, v158) == *MEMORY[0x263F90238])
                            {
                              uint64_t v148 = "[Error] Interval already ended";
                            }
                            else
                            {
                              (*(void (**)(char *, uint64_t))(v146 + 8))(v36, v147);
                              uint64_t v148 = "";
                            }
                            uint64_t v149 = v164;
                            uint64_t v150 = v159;
                            uint64_t v151 = v163;
                            v165(v159, v164, v163);
                            uint64_t v152 = (uint8_t *)swift_slowAlloc();
                            *(_WORD *)uint64_t v152 = 0;
                            os_signpost_id_t v153 = sub_26111EA18();
                            _os_signpost_emit_with_name_impl(&dword_261042000, v143, v145, v153, "updateDiversity", v148, v152, 2u);
                            MEMORY[0x26122E4F0](v152, -1, -1);

                            uint64_t v154 = v160;
                            v160(v149, v151);
                            v154(v150, v151);
                          }
                          else
                          {

                            v160(v144, v163);
                          }
                          swift_release();
                          sub_2610C18DC((uint64_t)v167);
                          return (uint64_t)v95;
                        }
                        unint64_t v126 = v170[v128];
                        if (!v126)
                        {
                          while (1)
                          {
                            int64_t v127 = v128 + 1;
                            if (__OFADD__(v128, 1)) {
                              goto LABEL_134;
                            }
                            if (v127 >= v171) {
                              goto LABEL_122;
                            }
                            unint64_t v126 = v170[v127];
                            ++v128;
                            if (v126) {
                              goto LABEL_109;
                            }
                          }
                        }
                        int64_t v127 = v176 + 4;
                      }
                    }
                  }
LABEL_109:
                  unint64_t v94 = (v126 - 1) & v126;
                  int64_t v176 = v127;
                  unint64_t v99 = __clz(__rbit64(v126)) + (v127 << 6);
                  while (1)
                  {
                    uint64_t v129 = 8 * v99;
                    uint64_t v130 = *(void *)(v175[6] + v129);
                    uint64_t v131 = *(void *)(v175[7] + v129);
                    float v132 = 1.0;
                    if (v37[2])
                    {
                      unint64_t v133 = sub_26105D6EC(v130);
                      if (v134) {
                        float v132 = *(float *)(v37[7] + 4 * v133);
                      }
                    }
                    if (v100[2] && (unint64_t v135 = sub_26105D6EC(v130), (v136 & 1) != 0)) {
                      float v137 = fmaxf(*(float *)(v100[7] + 4 * v135), 0.8);
                    }
                    else {
                      float v137 = 0.8;
                    }
                    uint64_t v138 = v173;
                    float v139 = 1.0;
                    if (v173[2])
                    {
                      unint64_t v140 = sub_26105D6EC(v130);
                      if (v141)
                      {
                        uint64_t v142 = v138[7];
                        if (*(float *)(v142 + 4 * v140) == 0.0) {
                          float v139 = 1.0;
                        }
                        else {
                          float v139 = *(float *)(v142 + 4 * v140);
                        }
                      }
                    }
                    uint64_t v97 = *(void *)(v131 + 16);
                    if (v97) {
                      break;
                    }
                    if (!v94) {
                      goto LABEL_96;
                    }
LABEL_76:
                    unint64_t v98 = __clz(__rbit64(v94));
                    v94 &= v94 - 1;
                    unint64_t v99 = v98 | (v176 << 6);
                    unint64_t v100 = v174;
                  }
                  float v101 = v139 - v137;
                  float v102 = v132 + 0.00001;
                  swift_bridgeObjectRetain();
                  uint64_t v103 = 0;
                  uint64_t v104 = v177;
                  do
                  {
                    uint64_t v105 = *(void *)(v131 + 8 * v103 + 32);
                    float v106 = 0.0;
                    if (*(void *)(v104 + 16))
                    {
                      unint64_t v107 = sub_26105D6EC(*(void *)(v131 + 8 * v103 + 32));
                      if (v108) {
                        float v106 = *(float *)(*(void *)(v104 + 56) + 4 * v107);
                      }
                    }
                    float v109 = 1.0;
                    if (*(void *)(v96 + 16))
                    {
                      unint64_t v110 = sub_26105D6EC(v105);
                      if (v111) {
                        float v109 = *(float *)(*(void *)(v96 + 56) + 4 * v110);
                      }
                    }
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t v178 = v95;
                    unint64_t v114 = sub_26105D6EC(v105);
                    uint64_t v115 = v95[2];
                    BOOL v116 = (v113 & 1) == 0;
                    uint64_t v117 = v115 + v116;
                    if (__OFADD__(v115, v116))
                    {
                      __break(1u);
LABEL_130:
                      __break(1u);
                      goto LABEL_131;
                    }
                    char v118 = v113;
                    if (v95[3] >= v117)
                    {
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                        sub_26107CAC0();
                      }
                    }
                    else
                    {
                      sub_261078B80(v117, isUniquelyReferenced_nonNull_native);
                      unint64_t v119 = sub_26105D6EC(v105);
                      if ((v118 & 1) != (v120 & 1)) {
                        goto LABEL_137;
                      }
                      unint64_t v114 = v119;
                    }
                    uint64_t v96 = v172;
                    float v121 = (float)-v109 / (float)((float)(v137 + (float)((float)(v101 * v106) / v102)) + 0.00001);
                    unint64_t v95 = v178;
                    if (v118)
                    {
                      *(float *)(v178[7] + 4 * v114) = v121;
                    }
                    else
                    {
                      v178[(v114 >> 6) + 8] |= 1 << v114;
                      *(void *)(v95[6] + 8 * v114) = v105;
                      *(float *)(v95[7] + 4 * v114) = v121;
                      uint64_t v122 = v95[2];
                      BOOL v123 = __OFADD__(v122, 1);
                      uint64_t v124 = v122 + 1;
                      if (v123) {
                        goto LABEL_130;
                      }
                      v95[2] = v124;
                    }
                    ++v103;
                    swift_bridgeObjectRelease();
                    uint64_t v104 = v177;
                  }
                  while (v97 != v103);
                  swift_bridgeObjectRelease();
                  uint64_t v36 = v168;
                  uint64_t v37 = v169;
                  if (v94) {
                    goto LABEL_76;
                  }
                }
LABEL_132:
                __break(1u);
              }
              else
              {
                unint64_t v38 = *(void *)(v24 + 8 * v39);
                if (v38)
                {
                  int64_t v30 = v39;
                  goto LABEL_24;
                }
                while (1)
                {
                  int64_t v30 = v39 + 1;
                  if (__OFADD__(v39, 1)) {
                    break;
                  }
                  if (v30 >= v176) {
                    goto LABEL_70;
                  }
                  unint64_t v38 = *(void *)(v24 + 8 * v30);
                  ++v39;
                  if (v38) {
                    goto LABEL_24;
                  }
                }
              }
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
              goto LABEL_136;
            }
          }
        }
LABEL_24:
        unint64_t v27 = (v38 - 1) & v38;
        unint64_t v34 = __clz(__rbit64(v38)) + (v30 << 6);
        uint64_t v28 = v177;
      }
      while (!*(void *)(v177 + 16));
LABEL_25:
      uint64_t v40 = 8 * v34;
      uint64_t v41 = *(void *)(*(void *)(a1 + 56) + v40);
      uint64_t v42 = *(void *)(*(void *)(a1 + 48) + v40);
      sub_26105D6EC(v42);
    }
    while ((v43 & 1) == 0);
    sub_2610C18DC((uint64_t)v167);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v178 = v32;
    unint64_t v46 = sub_26105D6EC(v41);
    uint64_t v47 = v32[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      goto LABEL_135;
    }
    char v50 = v45;
    if (v32[3] >= v49)
    {
      if ((v44 & 1) == 0)
      {
        char v88 = v45;
        sub_26107C3EC();
        char v50 = v88;
      }
    }
    else
    {
      char v51 = v45;
      sub_2610780F0(v49, v44);
      unint64_t v52 = sub_26105D6EC(v41);
      char v50 = v51;
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_137;
      }
      unint64_t v46 = v52;
    }
    uint64_t v54 = v178;
    swift_bridgeObjectRelease();
    uint64_t v55 = 8 * v46;
    int64_t v171 = v46;
    if (v50)
    {
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    v54[(v46 >> 6) + 8] |= 1 << v46;
    *(void *)(v54[6] + 8 * v46) = v41;
    *(void *)(v54[7] + 8 * v46) = MEMORY[0x263F8EE78];
    uint64_t v56 = v54[2];
    uint64_t v57 = v56 + 1;
    BOOL v58 = __OFADD__(v56, 1);
    swift_bridgeObjectRetain();
    if (v58) {
      break;
    }
    v54[2] = v57;
LABEL_39:
    uint64_t v59 = v54[7];
    uint64_t v175 = v54;
    swift_bridgeObjectRelease();
    uint64_t v60 = *(void **)(v59 + v55);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v59 + v55) = v60;
    if ((v61 & 1) == 0)
    {
      uint64_t v60 = sub_26105BCEC(0, v60[2] + 1, 1, v60);
      *(void *)(v59 + 8 * v171) = v60;
    }
    unint64_t v63 = v60[2];
    unint64_t v62 = v60[3];
    if (v63 >= v62 >> 1)
    {
      uint64_t v60 = sub_26105BCEC((void *)(v62 > 1), v63 + 1, 1, v60);
      *(void *)(v59 + 8 * v171) = v60;
    }
    v60[2] = v63 + 1;
    v60[v63 + 4] = v42;
    uint64_t v64 = v172;
    if (*(void *)(v172 + 16))
    {
      unint64_t v65 = sub_26105D6EC(v42);
      uint64_t v28 = v177;
      uint64_t v31 = v174;
      if (v66)
      {
        float v67 = *(float *)(*(void *)(v64 + 56) + 4 * v65);
        if (v174[2] && (unint64_t v68 = sub_26105D6EC(v41), (v69 & 1) != 0)) {
          float v70 = *(float *)(v31[7] + 4 * v68);
        }
        else {
          float v70 = INFINITY;
        }
        if (v67 >= v70) {
          float v71 = v70;
        }
        else {
          float v71 = v67;
        }
        char v72 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v178 = v31;
        sub_26107F4F4(v41, v72, v71);
        uint64_t v31 = v178;
        swift_bridgeObjectRelease();
        int64_t v73 = v173;
        if (v173[2] && (unint64_t v74 = sub_26105D6EC(v41), (v75 & 1) != 0)) {
          float v76 = *(float *)(v73[7] + 4 * v74);
        }
        else {
          float v76 = -INFINITY;
        }
        if (v76 > v67) {
          float v77 = v76;
        }
        else {
          float v77 = v67;
        }
        unint64_t v78 = v173;
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v178 = v78;
        sub_26107F4F4(v41, v79, v77);
        uint64_t v173 = v178;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v28 = v177;
      uint64_t v31 = v174;
    }
    uint64_t v29 = sub_2610B5880;
    if (*(void *)(v28 + 16))
    {
      unint64_t v80 = sub_26105D6EC(v42);
      uint64_t v29 = sub_2610B5880;
      if (v81)
      {
        float v82 = *(float *)(*(void *)(v28 + 56) + 4 * v80);
        int64_t v83 = v169;
        if (v169[2] && (unint64_t v84 = sub_26105D6EC(v41), (v85 & 1) != 0)) {
          float v86 = *(float *)(v83[7] + 4 * v84);
        }
        else {
          float v86 = -INFINITY;
        }
        if (v86 > v82) {
          float v82 = v86;
        }
        char v87 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v178 = v83;
        sub_26107F4F4(v41, v87, v82);
        char v169 = v178;
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_2610B5880;
      }
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  uint64_t result = sub_26111F448();
  __break(1u);
  return result;
}

uint64_t sub_261106B5C()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_logger;
  uint64_t v2 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC19VisualUnderstanding16VUIndexClusterer_signposter;
  uint64_t v4 = sub_26111EA68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_261106C58()
{
  return type metadata accessor for VUIndexClusterer(0);
}

uint64_t type metadata accessor for VUIndexClusterer(uint64_t a1)
{
  return sub_26106A630(a1, (uint64_t *)&unk_26B40AD10);
}

uint64_t sub_261106C80()
{
  uint64_t result = sub_26111EAE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26111EA68();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_261106D74()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_261074700(v0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_261073B10(v2);
  return v1;
}

uint64_t sub_261106E14(uint64_t a1, unsigned __int8 a2, int a3)
{
  int v31 = a3;
  int v6 = a2;
  uint64_t v7 = sub_26111E778();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v30[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  os_signpost_type_t v17 = &v30[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v20 = &v30[-v19];
  if (!v6)
  {
LABEL_4:
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(&v30[-v19], a1, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    sub_261071274((uint64_t)v20, (uint64_t)v17, &qword_26B40AC70);
    uint64_t v21 = v3
        + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
    swift_beginAccess();
    sub_2611092A4((uint64_t)v17, v21);
    uint64_t result = swift_endAccess();
    *(_DWORD *)(v3
              + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore) = 1065353216;
    *(unsigned char *)(v3
             + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) = a2 == 0;
    return result;
  }
  if (v6 != 1)
  {
    if (v6 != 2) {
      return result;
    }
    goto LABEL_4;
  }
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  if (v31)
  {
    v22(v13, a1, v7);
    uint64_t v23 = (uint64_t *)(v3
                    + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *v23;
    *uint64_t v23 = 0x8000000000000000;
    sub_26107F04C((uint64_t)v13, isUniquelyReferenced_nonNull_native, 1.0);
    *uint64_t v23 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  }
  else
  {
    v22(v11, a1, v7);
    uint64_t v25 = (unint64_t *)(v3
                             + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_localRejectionTags);
    swift_beginAccess();
    unint64_t v26 = *v25;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v25 = v26;
    if ((v27 & 1) == 0)
    {
      unint64_t v26 = sub_26105BF0C(0, *(void *)(v26 + 16) + 1, 1, v26);
      *uint64_t v25 = v26;
    }
    unint64_t v29 = *(void *)(v26 + 16);
    unint64_t v28 = *(void *)(v26 + 24);
    if (v29 >= v28 >> 1)
    {
      unint64_t v26 = sub_26105BF0C(v28 > 1, v29 + 1, 1, v26);
      *uint64_t v25 = v26;
    }
    *(void *)(v26 + 16) = v29 + 1;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v29, v11, v7);
  }
  return swift_endAccess();
}

uint64_t sub_2611071AC(unsigned char *a1, float a2)
{
  uint64_t v157 = 0;
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9105B0);
  MEMORY[0x270FA5388](v165);
  int v6 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910688);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v167 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v170 = (char *)&v156 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v160 = (uint64_t)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v156 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v180 = (char *)&v156 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v166 = (uint64_t)&v156 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v173 = (char *)&v156 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v164 = (char *)&v156 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  char v27 = (char *)&v156 - v26;
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v156 - v28;
  uint64_t v30 = sub_26111E778();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v177 = (char *)&v156 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v158 = (char *)&v156 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v172 = (char *)&v156 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  unint64_t v178 = (char *)&v156 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  int64_t v176 = (void (**)(uint64_t, uint64_t, __n128))((char *)&v156 - v41);
  MEMORY[0x270FA5388](v40);
  char v43 = (char *)&v156 - v42;
  uint64_t v175 = (void (*)(char *, char *, uint64_t))OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore;
  float v44 = *(float *)&a1[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore];
  if (a2 <= 0.9999) {
    float v45 = a2;
  }
  else {
    float v45 = 0.9999;
  }
  uint64_t v181 = a1;
  uint64_t v46 = (uint64_t)&a1[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag];
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = (uint64_t)v6;
  sub_261071864(v47, (uint64_t)v29, &qword_26B40AC70);
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v169 = v31 + 48;
  uint64_t v168 = v49;
  unsigned int v50 = v49(v29, 1, v30);
  uint64_t v162 = v6;
  uint64_t v174 = v16;
  uint64_t v171 = v31;
  if (v50 == 1)
  {
    sub_2610718C8((uint64_t)v29, &qword_26B40AC70);
    uint64_t v51 = v2;
    goto LABEL_29;
  }
  float v52 = v45 * v44;
  char v53 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v53(v43, v29, v30);
  uint64_t v179 = v2;
  uint64_t v54 = v2
      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores;
  swift_beginAccess();
  uint64_t v55 = *(void *)v54;
  if (*(void *)(*(void *)v54 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v56 = sub_26105D7C4((uint64_t)v43);
    if (v57)
    {
      float v58 = *(float *)(*(void *)(v55 + 56) + 4 * v56);
      swift_bridgeObjectRelease();
      if (v58 < v52)
      {
        swift_beginAccess();
        sub_2610B850C((uint64_t)v43);
        swift_endAccess();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (!*(void *)(*(void *)v54 + 16)
    || (swift_bridgeObjectRetain(), sub_26105D7C4((uint64_t)v43), char v60 = v59, swift_bridgeObjectRelease(), (v60 & 1) == 0))
  {
    uint64_t v61 = v179
        + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
    swift_beginAccess();
    sub_261071864(v61, (uint64_t)v27, &qword_26B40AC70);
    int v62 = 1;
    unsigned int v63 = v168(v27, 1, v30);
    sub_2610718C8((uint64_t)v27, &qword_26B40AC70);
    BOOL v64 = v63 == 1;
    unint64_t v65 = v176;
    if (!v64)
    {
      if (v181[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed] == 1)
      {
        if (*(unsigned char *)(v179
                      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed))
          int v62 = *(float *)(v179
                         + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore) < v52;
      }
      else if ((*(unsigned char *)(v179 {
                          + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) & 1) != 0)
      }
      {
        int v62 = 0;
      }
      else
      {
        uint64_t v149 = sub_26111E738();
        uint64_t v151 = v150;
        uint64_t v152 = v164;
        sub_261071864(v61, (uint64_t)v164, &qword_26B40AC70);
        if (v168(v152, 1, v30) == 1) {
          goto LABEL_105;
        }
        uint64_t v153 = sub_26111E738();
        uint64_t v155 = v154;
        (*(void (**)(char *, uint64_t))(v171 + 8))(v152, v30);
        if (v149 == v153 && v151 == v155)
        {
          swift_bridgeObjectRelease_n();
          int v62 = 0;
        }
        else
        {
          int v62 = sub_26111F408();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        unint64_t v65 = v176;
      }
    }
    int64_t v176 = (void (**)(uint64_t, uint64_t, __n128))v61;
    float v66 = *(float *)((char *)v175 + (void)v181);
    uint64_t v67 = v171;
    (*(void (**)(void (**)(uint64_t, uint64_t, __n128), char *, uint64_t))(v171 + 16))(v65, v43, v30);
    if (v66 == 1.0)
    {
      uint64_t v175 = v53;
      unint64_t v68 = (uint64_t *)(v179
                      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_localRejectionTags);
      uint64_t v69 = swift_beginAccess();
      uint64_t v70 = *v68;
      MEMORY[0x270FA5388](v69);
      *(&v156 - 2) = (int64_t)v65;
      swift_bridgeObjectRetain();
      uint64_t v71 = v157;
      BOOL v72 = sub_261108FC4((uint64_t (*)(char *))sub_26110930C, (uint64_t)(&v156 - 4), v70);
      uint64_t v157 = v71;
      swift_bridgeObjectRelease();
      int64_t v73 = *(void (**)(void (**)(uint64_t, uint64_t, __n128), uint64_t))(v67 + 8);
      v73(v65, v30);
      if (v72) {
        goto LABEL_27;
      }
      char v53 = v175;
      if ((v62 ^ 1)) {
        goto LABEL_27;
      }
    }
    else
    {
      int64_t v73 = *(void (**)(void (**)(uint64_t, uint64_t, __n128), uint64_t))(v67 + 8);
      v73(v65, v30);
      if ((v62 & 1) == 0)
      {
LABEL_27:
        v73((void (**)(uint64_t, uint64_t, __n128))v43, v30);
        uint64_t v48 = (uint64_t)v162;
        uint64_t v16 = v174;
        uint64_t v31 = v171;
        goto LABEL_28;
      }
    }
    unint64_t v74 = v173;
    v53(v173, v43, v30);
    uint64_t v31 = v171;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v74, 0, 1, v30);
    uint64_t v75 = (uint64_t)v74;
    uint64_t v76 = v166;
    sub_261071274(v75, v166, &qword_26B40AC70);
    uint64_t v77 = (uint64_t)v176;
    swift_beginAccess();
    sub_2611092A4(v76, v77);
    swift_endAccess();
    uint64_t v51 = v179;
    *(float *)(v179
             + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore) = v52;
    *(unsigned char *)(v51
             + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed) = v181[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagIsConfirmed];
    uint64_t v48 = (uint64_t)v162;
    uint64_t v16 = v174;
    goto LABEL_29;
  }
  uint64_t v31 = v171;
  (*(void (**)(char *, uint64_t))(v171 + 8))(v43, v30);
  uint64_t v48 = (uint64_t)v162;
  uint64_t v16 = v174;
LABEL_28:
  uint64_t v51 = v179;
LABEL_29:
  uint64_t v78 = (uint64_t)v180;
  uint64_t v79 = v51
      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
  swift_beginAccess();
  uint64_t v166 = v79;
  sub_261071864(v79, v78, &qword_26B40AC70);
  unsigned int v80 = v168((char *)v78, 1, v30);
  uint64_t v81 = (uint64_t)v170;
  if (v80 == 1)
  {
    sub_2610718C8(v78, &qword_26B40AC70);
  }
  else
  {
    uint64_t v82 = (uint64_t)v178;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v178, v78, v30);
    int64_t v83 = &v181[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores];
    swift_beginAccess();
    uint64_t v84 = *(void *)v83;
    if (*(void *)(*(void *)v83 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v85 = sub_26105D7C4(v82);
      if (v86)
      {
        float v87 = *(float *)(*(void *)(v84 + 56) + 4 * v85);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v82, v30);
        uint64_t v88 = OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore;
        if (*(float *)(v51
                      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTagScore) <= (float)(v45 * v87))
        {
          uint64_t v89 = (uint64_t)v173;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v173, 1, 1, v30);
          uint64_t v90 = v166;
          swift_beginAccess();
          sub_2611092A4(v89, v90);
          swift_endAccess();
          *(_DWORD *)(v51 + v88) = 0;
        }
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v82, v30);
  }
LABEL_37:
  uint64_t v91 = &v181[OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores];
  swift_beginAccess();
  uint64_t v92 = *(void *)v91;
  uint64_t v93 = *(void *)(*(void *)v91 + 64);
  uint64_t v159 = *(void *)v91 + 64;
  uint64_t v94 = 1 << *(unsigned char *)(v92 + 32);
  uint64_t v95 = -1;
  if (v94 < 64) {
    uint64_t v95 = ~(-1 << v94);
  }
  unint64_t v96 = v95 & v93;
  uint64_t v97 = (char *)(v51
               + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores);
  uint64_t v163 = v92;
  swift_bridgeObjectRetain();
  uint64_t v180 = v97;
  unint64_t v98 = v96;
  swift_beginAccess();
  int64_t v99 = 0;
  uint64_t v181 = (unsigned char *)(v31 + 16);
  uint64_t v173 = (char *)(v31 + 32);
  int64_t v176 = (void (**)(uint64_t, uint64_t, __n128))(v31 + 8);
  uint64_t v164 = (char *)(v31 + 56);
  int64_t v161 = (unint64_t)(v94 + 63) >> 6;
  int64_t v156 = v161 - 1;
  uint64_t v100 = (uint64_t)v167;
  uint64_t v101 = (uint64_t)v172;
  unint64_t v178 = (char *)v30;
  while (1)
  {
    if (v98)
    {
      uint64_t v179 = (v98 - 1) & v98;
      unint64_t v103 = __clz(__rbit64(v98)) | (v99 << 6);
      goto LABEL_45;
    }
    int64_t v107 = v99 + 1;
    if (__OFADD__(v99, 1)) {
      goto LABEL_102;
    }
    if (v107 < v161)
    {
      unint64_t v108 = *(void *)(v159 + 8 * v107);
      if (v108) {
        goto LABEL_49;
      }
      v99 += 2;
      if (v107 + 1 >= v161)
      {
        int64_t v99 = v107;
        goto LABEL_50;
      }
      unint64_t v108 = *(void *)(v159 + 8 * v99);
      if (v108)
      {
        ++v107;
        goto LABEL_49;
      }
      if (v107 + 2 < v161) {
        break;
      }
    }
LABEL_50:
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v100, 1, 1, v109);
    uint64_t v179 = 0;
LABEL_51:
    sub_261071274(v100, v81, &qword_26A910688);
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v81, 1, v110) == 1) {
      return swift_release();
    }
    float v111 = *(float *)(v81 + *(int *)(v110 + 48));
    uint64_t v112 = v81;
    char v113 = *(void (**)(char *, uint64_t, uint64_t))v173;
    (*(void (**)(uint64_t, uint64_t, uint64_t))v173)(v101, v112, v30);
    uint64_t v115 = *(void *)v180;
    if (*(void *)(*(void *)v180 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v116 = sub_26105D7C4(v101);
      if (v117)
      {
        float v118 = *(float *)(*(void *)(v115 + 56) + 4 * v116);
        swift_bridgeObjectRelease();
        if (a2 <= 0.9999)
        {
          v114.n128_f32[0] = v111 * a2;
          if ((float)(v111 * a2) < v118)
          {
LABEL_77:
            (*v176)(v101, v30, v114);
            uint64_t v81 = (uint64_t)v170;
            goto LABEL_42;
          }
        }
        else
        {
          v114.n128_f32[0] = v111 * 0.9999;
          if ((float)(v111 * 0.9999) < v118) {
            goto LABEL_77;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v119 = v30;
    char v120 = (char *)v101;
    uint64_t v175 = *(void (**)(char *, char *, uint64_t))v181;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v175)(v16, v101, v30, v114);
    (*(void (**)(char *, void, uint64_t, uint64_t))v164)(v16, 0, 1, v30);
    uint64_t v121 = v48 + *(int *)(v165 + 48);
    sub_261071864(v166, v48, &qword_26B40AC70);
    sub_261071864((uint64_t)v16, v121, &qword_26B40AC70);
    uint64_t v122 = v30;
    BOOL v123 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v168;
    uint64_t v124 = v48;
    if (v168((char *)v48, 1, v122) == 1)
    {
      sub_2610718C8((uint64_t)v16, &qword_26B40AC70);
      if (v123(v121, 1, v119) == 1)
      {
        sub_2610718C8(v48, &qword_26B40AC70);
        int64_t v125 = *v176;
        uint64_t v16 = v174;
LABEL_75:
        uint64_t v30 = (uint64_t)v178;
        ((void (*)(char *, char *))v125)(v120, v178);
        uint64_t v81 = (uint64_t)v170;
        uint64_t v100 = (uint64_t)v167;
        uint64_t v101 = (uint64_t)v120;
        goto LABEL_42;
      }
      goto LABEL_63;
    }
    uint64_t v126 = v160;
    sub_261071864(v48, v160, &qword_26B40AC70);
    if (v123(v121, 1, v119) == 1)
    {
      sub_2610718C8((uint64_t)v174, &qword_26B40AC70);
      ((void (*)(uint64_t, uint64_t))*v176)(v126, v119);
LABEL_63:
      sub_2610718C8(v48, (uint64_t *)&unk_26A9105B0);
      goto LABEL_64;
    }
    os_signpost_type_t v145 = v158;
    v113(v158, v121, v119);
    sub_26110A9BC(&qword_26A90FF60, MEMORY[0x263F07508]);
    char v146 = sub_26111EBB8();
    int64_t v125 = *v176;
    ((void (*)(char *, uint64_t))*v176)(v145, v119);
    sub_2610718C8((uint64_t)v174, &qword_26B40AC70);
    ((void (*)(uint64_t, uint64_t))v125)(v126, v119);
    sub_2610718C8(v124, &qword_26B40AC70);
    if (v146)
    {
      uint64_t v48 = v124;
      uint64_t v16 = v174;
      char v120 = v172;
      goto LABEL_75;
    }
LABEL_64:
    uint64_t v127 = (uint64_t)v177;
    int64_t v128 = (void (*)(unint64_t, uint64_t, char *))v175;
    v175(v177, v172, (uint64_t)v178);
    uint64_t v129 = v180;
    swift_beginAccess();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v182 = (void *)*v129;
    uint64_t v131 = v182;
    *uint64_t v129 = 0x8000000000000000;
    unint64_t v133 = sub_26105D7C4(v127);
    uint64_t v134 = v131[2];
    BOOL v135 = (v132 & 1) == 0;
    uint64_t v136 = v134 + v135;
    if (__OFADD__(v134, v135))
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    char v137 = v132;
    if (v131[3] >= v136)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_26107C14C();
      }
    }
    else
    {
      sub_261077CC8(v136, isUniquelyReferenced_nonNull_native);
      unint64_t v138 = sub_26105D7C4((uint64_t)v177);
      if ((v137 & 1) != (v139 & 1)) {
        goto LABEL_106;
      }
      unint64_t v133 = v138;
    }
    uint64_t v81 = (uint64_t)v170;
    float v140 = v45 * v111;
    char v141 = v182;
    if (v137)
    {
      *(float *)(v182[7] + 4 * v133) = v140;
    }
    else
    {
      v182[(v133 >> 6) + 8] |= 1 << v133;
      v128(v141[6] + *(void *)(v171 + 72) * v133, (uint64_t)v177, v178);
      *(float *)(v141[7] + 4 * v133) = v140;
      uint64_t v142 = v141[2];
      BOOL v143 = __OFADD__(v142, 1);
      uint64_t v144 = v142 + 1;
      if (v143) {
        goto LABEL_103;
      }
      v141[2] = v144;
    }
    *(void *)uint64_t v180 = v141;
    swift_bridgeObjectRelease();
    float v102 = *v176;
    uint64_t v30 = (uint64_t)v178;
    ((void (*)(char *, char *))*v176)(v177, v178);
    swift_endAccess();
    uint64_t v101 = (uint64_t)v172;
    ((void (*)(char *, uint64_t))v102)(v172, v30);
    uint64_t v48 = (uint64_t)v162;
    uint64_t v100 = (uint64_t)v167;
    uint64_t v16 = v174;
LABEL_42:
    unint64_t v98 = v179;
  }
  unint64_t v108 = *(void *)(v159 + 8 * (v107 + 2));
  if (v108)
  {
    v107 += 2;
    goto LABEL_49;
  }
  int64_t v147 = v107 + 3;
  if (v107 + 3 >= v161)
  {
    int64_t v99 = v107 + 2;
    goto LABEL_50;
  }
  unint64_t v108 = *(void *)(v159 + 8 * v147);
  if (v108)
  {
    v107 += 3;
LABEL_49:
    uint64_t v179 = (v108 - 1) & v108;
    unint64_t v103 = __clz(__rbit64(v108)) + (v107 << 6);
    int64_t v99 = v107;
LABEL_45:
    uint64_t v104 = v163;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v171 + 16))(v100, *(void *)(v163 + 48) + *(void *)(v171 + 72) * v103, v30);
    uint64_t v105 = *(void *)(v104 + 56);
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
    *(_DWORD *)(v100 + *(int *)(v106 + 48)) = *(_DWORD *)(v105 + 4 * v103);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v100, 0, 1, v106);
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v107 = v147 + 1;
    if (__OFADD__(v147, 1)) {
      break;
    }
    if (v107 >= v161)
    {
      int64_t v99 = v156;
      goto LABEL_50;
    }
    unint64_t v108 = *(void *)(v159 + 8 * v107);
    ++v147;
    if (v108) {
      goto LABEL_49;
    }
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  uint64_t result = sub_26111F448();
  __break(1u);
  return result;
}

uint64_t sub_26110869C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910688);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26111E778();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v49 = 40;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v18 = v1
      + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag;
  swift_beginAccess();
  sub_261071864(v18, (uint64_t)v10, &qword_26B40AC70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2610718C8((uint64_t)v10, &qword_26B40AC70);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    sub_26111F228();
    sub_26111EC88();
    sub_26110A9BC((unint64_t *)&qword_26A910498, MEMORY[0x263F07508]);
    sub_26111F3E8();
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    sub_26111EE38();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
    sub_26111EC88();
    sub_26111EC88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  uint64_t v19 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_rejectionTagScores);
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v21 = *(void *)(*v19 + 64);
  uint64_t v39 = *v19 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  uint64_t v41 = v12 + 16;
  uint64_t v42 = v12;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v26 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  int64_t v40 = (unint64_t)(v22 + 63) >> 6;
  int64_t v38 = v40 - 1;
  uint64_t v43 = v20;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v44 = 0;
  if (!v24) {
    goto LABEL_11;
  }
LABEL_9:
  unint64_t v28 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v29 = v28 | (v44 << 6);
  while (2)
  {
    uint64_t v30 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v5, *(void *)(v43 + 48) + *(void *)(v42 + 72) * v29, v11);
    uint64_t v31 = *(void *)(v30 + 56);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
    *(_DWORD *)&v5[*(int *)(v32 + 48)] = *(_DWORD *)(v31 + 4 * v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 0, 1, v32);
    while (1)
    {
      sub_261071274((uint64_t)v5, (uint64_t)v7, &qword_26A910688);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v7, 1, v37) == 1)
      {
        swift_release();
        sub_26111EC88();
        return v49;
      }
      (*v25)(v15, v7, v11);
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_26111F228();
      sub_26111EC88();
      sub_26110A9BC((unint64_t *)&qword_26A910498, MEMORY[0x263F07508]);
      sub_26111F3E8();
      sub_26111EC88();
      swift_bridgeObjectRelease();
      sub_26111EC88();
      sub_26111EE38();
      sub_26111EC88();
      sub_26111EC88();
      swift_bridgeObjectRelease();
      uint64_t result = (*v26)(v15, v11);
      if (v24) {
        goto LABEL_9;
      }
LABEL_11:
      int64_t v33 = v44 + 1;
      if (__OFADD__(v44, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v33 < v40)
      {
        unint64_t v34 = *(void *)(v39 + 8 * v33);
        if (v34) {
          goto LABEL_14;
        }
        int64_t v35 = v44 + 2;
        ++v44;
        if (v33 + 1 < v40)
        {
          unint64_t v34 = *(void *)(v39 + 8 * v35);
          if (v34) {
            goto LABEL_17;
          }
          int64_t v44 = v33 + 1;
          if (v33 + 2 < v40)
          {
            unint64_t v34 = *(void *)(v39 + 8 * (v33 + 2));
            if (v34)
            {
              v33 += 2;
              goto LABEL_14;
            }
            int64_t v35 = v33 + 3;
            int64_t v44 = v33 + 2;
            if (v33 + 3 < v40) {
              break;
            }
          }
        }
      }
LABEL_28:
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A910690);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v5, 1, 1, v36);
      unint64_t v24 = 0;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v35);
    if (v34)
    {
LABEL_17:
      int64_t v33 = v35;
LABEL_14:
      unint64_t v24 = (v34 - 1) & v34;
      unint64_t v29 = __clz(__rbit64(v34)) + (v33 << 6);
      int64_t v44 = v33;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v40)
    {
      int64_t v44 = v38;
      goto LABEL_28;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v33);
    ++v35;
    if (v34) {
      goto LABEL_14;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_261108E34()
{
  sub_2610718C8(v0+ OBJC_IVAR____TtCFC19VisualUnderstanding16VUIndexClusterer15propagateLabelsFT4typeVs5UInt89thresholdGSqSf_8partnersGVs10DictionarySiSi_12similaritiesGS2_SiSf_10ignoreTagsSb19ignorePreviousLabelSb22batchCompletionHandlerGSqFT_Sb__GS2_SiSi_L_8NodeTags_bestTag, &qword_26B40AC70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_261108EC0()
{
  return type metadata accessor for VUIndexClusterer.NodeTags(0);
}

uint64_t type metadata accessor for VUIndexClusterer.NodeTags(uint64_t a1)
{
  return sub_26106A630(a1, (uint64_t *)&unk_26A910678);
}

void sub_261108EE8()
{
  sub_26106CE5C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_261108FA0()
{
  return sub_26110869C();
}

BOOL sub_261108FC4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v38 = a1;
  uint64_t v39 = sub_26111E778();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    unint64_t v34 = v8;
    int64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    int64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      unint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    char v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2611092A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_26110930C()
{
  return sub_261109328() & 1;
}

uint64_t sub_261109328()
{
  return sub_26111EBB8() & 1;
}

void sub_2611093B8(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  unint64_t v10 = sub_26105D6EC(v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v11 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_24;
  }
  unint64_t v15 = v10;
  char v16 = v11;
  uint64_t v17 = v9[3];
  swift_retain();
  if (v17 >= v14)
  {
    if (a2)
    {
      if (v16) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_26107C91C();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = 8 * v15;
    *(void *)(v22[6] + v23) = v8;
    *(void *)(v22[7] + v23) = v7;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v26;
    uint64_t v27 = v4 - 1;
    if (v4 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v28 = a1 + 7;
    while (1)
    {
      uint64_t v30 = *(v28 - 1);
      uint64_t v29 = *v28;
      uint64_t v31 = (void *)*a3;
      unint64_t v32 = sub_26105D6EC(v30);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        break;
      }
      unint64_t v37 = v32;
      char v38 = v33;
      uint64_t v39 = v31[3];
      swift_retain();
      if (v39 < v36)
      {
        sub_2610788C8(v36, 1);
        unint64_t v40 = sub_26105D6EC(v30);
        if ((v38 & 1) != (v41 & 1)) {
          goto LABEL_26;
        }
        unint64_t v37 = v40;
      }
      if (v38) {
        goto LABEL_10;
      }
      uint64_t v42 = (void *)*a3;
      *(void *)(*a3 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      uint64_t v43 = 8 * v37;
      *(void *)(v42[6] + v43) = v30;
      *(void *)(v42[7] + v43) = v29;
      uint64_t v44 = v42[2];
      BOOL v25 = __OFADD__(v44, 1);
      uint64_t v45 = v44 + 1;
      if (v25) {
        goto LABEL_25;
      }
      id v42[2] = v45;
      v28 += 2;
      if (!--v27) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_2610788C8(v14, a2 & 1);
  unint64_t v18 = sub_26105D6EC(v8);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    int v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A9100D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_26111F448();
  __break(1u);
LABEL_27:
  sub_26111F228();
  sub_26111EC88();
  sub_26111F318();
  sub_26111EC88();
  sub_26111F338();
  __break(1u);
}

uint64_t sub_261109728()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_261109760(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_26110A3F8();
  if ((v9 & 0x100000000) != 0) {
    goto LABEL_19;
  }
  uint64_t v10 = v8;
  int v11 = v9;
  uint64_t v12 = (void *)*a5;
  unint64_t v13 = sub_26105D6EC(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17) {
    goto LABEL_20;
  }
  char v5 = v14;
  if (v12[3] >= v18) {
    goto LABEL_6;
  }
  sub_261078B80(v18, a4 & 1);
  unint64_t v13 = sub_26105D6EC(v10);
  if ((v5 & 1) != (v19 & 1))
  {
LABEL_5:
    unint64_t v13 = sub_26111F448();
    __break(1u);
LABEL_6:
    if ((a4 & 1) == 0) {
      goto LABEL_22;
    }
  }
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_10:
  while (1)
  {
    uint64_t v23 = sub_26110A3F8();
    if ((v24 & 0x100000000) != 0) {
      break;
    }
    uint64_t v10 = v23;
    int v11 = v24;
    char v5 = 1;
    while (1)
    {
      uint64_t v26 = (void *)*a5;
      unint64_t v13 = sub_26105D6EC(v10);
      uint64_t v28 = v26[2];
      BOOL v29 = (v27 & 1) == 0;
      BOOL v17 = __OFADD__(v28, v29);
      uint64_t v30 = v28 + v29;
      if (v17) {
        break;
      }
      a4 = v27;
      if (v26[3] < v30)
      {
        sub_261078B80(v30, 1);
        unint64_t v13 = sub_26105D6EC(v10);
        if ((a4 & 1) != (v31 & 1)) {
          goto LABEL_5;
        }
      }
      if ((a4 & 1) == 0)
      {
        unint64_t v32 = (void *)*a5;
        *(void *)(*a5 + 8 * (v13 >> 6) + 64) |= 1 << v13;
        *(void *)(v32[6] + 8 * v13) = v10;
        *(_DWORD *)(v32[7] + 4 * v13) = v11;
        uint64_t v33 = v32[2];
        BOOL v17 = __OFADD__(v33, 1);
        uint64_t v34 = v33 + 1;
        if (v17) {
          goto LABEL_21;
        }
        v32[2] = v34;
      }
      uint64_t v10 = sub_26110A3F8();
      int v11 = v25;
      if ((v25 & 0x100000000) != 0) {
        goto LABEL_19;
      }
    }
LABEL_20:
    __break(1u);
LABEL_21:
    while (1)
    {
      __break(1u);
LABEL_22:
      unint64_t v36 = v13;
      sub_26107CAC0();
      unint64_t v13 = v36;
      if (v5) {
        break;
      }
LABEL_8:
      int v20 = (void *)*a5;
      *(void *)(*a5 + 8 * (v13 >> 6) + 64) |= 1 << v13;
      *(void *)(v20[6] + 8 * v13) = v10;
      *(_DWORD *)(v20[7] + 4 * v13) = v11;
      uint64_t v21 = v20[2];
      BOOL v17 = __OFADD__(v21, 1);
      uint64_t v22 = v21 + 1;
      if (!v17)
      {
        v20[2] = v22;
        goto LABEL_10;
      }
    }
  }
LABEL_19:
  swift_release();
  swift_bridgeObjectRelease();
  sub_26107EF04();
  return swift_release();
}

unint64_t sub_2611099E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_26110A3F8();
  if ((v8 & 0x100000000) != 0) {
    goto LABEL_22;
  }
  uint64_t v9 = v7;
  int v10 = v8;
  int v11 = (void *)*a5;
  unint64_t result = sub_26105D6EC(v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v13 & 1) == 0;
  BOOL v16 = __OFADD__(v14, v15);
  uint64_t v17 = v14 + v15;
  if (v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v18 = v13;
  if (v11[3] < v17)
  {
    sub_261078B80(v17, a4 & 1);
    unint64_t result = sub_26105D6EC(v9);
    if ((v18 & 1) == (v19 & 1)) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t result = sub_26111F448();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    unint64_t v21 = result;
    sub_26107CAC0();
    unint64_t result = v21;
    int v20 = (void *)*a5;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_7:
  int v20 = (void *)*a5;
  if (v18)
  {
LABEL_8:
    *(_DWORD *)(v20[7] + 4 * result) = v10;
    goto LABEL_12;
  }
LABEL_10:
  v20[(result >> 6) + 8] |= 1 << result;
  *(void *)(v20[6] + 8 * result) = v9;
  *(_DWORD *)(v20[7] + 4 * result) = v10;
  uint64_t v22 = v20[2];
  BOOL v16 = __OFADD__(v22, 1);
  uint64_t v23 = v22 + 1;
  if (!v16)
  {
    v20[2] = v23;
LABEL_12:
    uint64_t v24 = sub_26110A3F8();
    if ((v25 & 0x100000000) == 0)
    {
      uint64_t v9 = v24;
      int v10 = v25;
      char v18 = 1;
      do
      {
        char v27 = (void *)*a5;
        unint64_t result = sub_26105D6EC(v9);
        uint64_t v29 = v27[2];
        BOOL v30 = (v28 & 1) == 0;
        BOOL v16 = __OFADD__(v29, v30);
        uint64_t v31 = v29 + v30;
        if (v16) {
          goto LABEL_23;
        }
        a4 = v28;
        if (v27[3] < v31)
        {
          sub_261078B80(v31, 1);
          unint64_t result = sub_26105D6EC(v9);
          if ((a4 & 1) != (v32 & 1)) {
            goto LABEL_5;
          }
        }
        uint64_t v33 = (void *)*a5;
        if (a4)
        {
          *(_DWORD *)(v33[7] + 4 * result) = v10;
        }
        else
        {
          v33[(result >> 6) + 8] |= 1 << result;
          *(void *)(v33[6] + 8 * result) = v9;
          *(_DWORD *)(v33[7] + 4 * result) = v10;
          uint64_t v34 = v33[2];
          BOOL v16 = __OFADD__(v34, 1);
          uint64_t v35 = v34 + 1;
          if (v16) {
            goto LABEL_24;
          }
          id v33[2] = v35;
        }
        uint64_t v9 = sub_26110A3F8();
        int v10 = v26;
      }
      while ((v26 & 0x100000000) == 0);
    }
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    sub_26107EF04();
    return swift_release();
  }
LABEL_24:
  __break(1u);
  return result;
}

unint64_t sub_261109C74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_26110A574();
  if (v9) {
    goto LABEL_22;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = (void *)*a5;
  unint64_t result = sub_26105D6EC(v7);
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v19 = v14;
  if (v12[3] < v18)
  {
    sub_261077078(v18, a4 & 1);
    unint64_t result = sub_26105D6EC(v10);
    if ((v19 & 1) == (v20 & 1)) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t result = sub_26111F448();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    unint64_t v22 = result;
    sub_26107B9C8();
    unint64_t result = v22;
    unint64_t v21 = (void *)*a5;
    if (v19) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
LABEL_7:
  unint64_t v21 = (void *)*a5;
  if (v19)
  {
LABEL_8:
    *(void *)(v21[7] + 8 * result) = v11;
    goto LABEL_12;
  }
LABEL_10:
  v21[(result >> 6) + 8] |= 1 << result;
  uint64_t v23 = 8 * result;
  *(void *)(v21[6] + v23) = v10;
  *(void *)(v21[7] + v23) = v11;
  uint64_t v24 = v21[2];
  BOOL v17 = __OFADD__(v24, 1);
  uint64_t v25 = v24 + 1;
  if (!v17)
  {
    _OWORD v21[2] = v25;
LABEL_12:
    uint64_t v26 = sub_26110A574();
    if ((v28 & 1) == 0)
    {
      uint64_t v10 = v26;
      uint64_t v11 = v27;
      char v19 = 1;
      do
      {
        uint64_t v31 = (void *)*a5;
        unint64_t result = sub_26105D6EC(v10);
        uint64_t v33 = v31[2];
        BOOL v34 = (v32 & 1) == 0;
        BOOL v17 = __OFADD__(v33, v34);
        uint64_t v35 = v33 + v34;
        if (v17) {
          goto LABEL_23;
        }
        a4 = v32;
        if (v31[3] < v35)
        {
          sub_261077078(v35, 1);
          unint64_t result = sub_26105D6EC(v10);
          if ((a4 & 1) != (v36 & 1)) {
            goto LABEL_5;
          }
        }
        unint64_t v37 = (void *)*a5;
        if (a4)
        {
          *(void *)(v37[7] + 8 * result) = v11;
        }
        else
        {
          v37[(result >> 6) + 8] |= 1 << result;
          uint64_t v38 = 8 * result;
          *(void *)(v37[6] + v38) = v10;
          *(void *)(v37[7] + v38) = v11;
          uint64_t v39 = v37[2];
          BOOL v17 = __OFADD__(v39, 1);
          uint64_t v40 = v39 + 1;
          if (v17) {
            goto LABEL_24;
          }
          v37[2] = v40;
        }
        uint64_t v10 = sub_26110A574();
        uint64_t v11 = v29;
      }
      while ((v30 & 1) == 0);
    }
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    sub_26107EF04();
    return swift_release();
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_261109F10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_26110A574();
  if (v10) {
    goto LABEL_19;
  }
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  char v13 = (void *)*a5;
  unint64_t v14 = sub_26105D6EC(v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v15 & 1) == 0;
  BOOL v18 = __OFADD__(v16, v17);
  uint64_t v19 = v16 + v17;
  if (v18) {
    goto LABEL_20;
  }
  char v5 = v15;
  if (v13[3] >= v19) {
    goto LABEL_6;
  }
  sub_261077078(v19, a4 & 1);
  unint64_t v14 = sub_26105D6EC(v11);
  if ((v5 & 1) != (v20 & 1))
  {
LABEL_5:
    unint64_t v14 = sub_26111F448();
    __break(1u);
LABEL_6:
    if ((a4 & 1) == 0) {
      goto LABEL_22;
    }
  }
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_10:
  while (1)
  {
    uint64_t v25 = sub_26110A574();
    if (v27) {
      break;
    }
    uint64_t v11 = v25;
    uint64_t v12 = v26;
    char v5 = 1;
    while (1)
    {
      char v30 = (void *)*a5;
      unint64_t v14 = sub_26105D6EC(v11);
      uint64_t v32 = v30[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v18 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v18) {
        break;
      }
      a4 = v31;
      if (v30[3] < v34)
      {
        sub_261077078(v34, 1);
        unint64_t v14 = sub_26105D6EC(v11);
        if ((a4 & 1) != (v35 & 1)) {
          goto LABEL_5;
        }
      }
      if ((a4 & 1) == 0)
      {
        char v36 = (void *)*a5;
        *(void *)(*a5 + 8 * (v14 >> 6) + 64) |= 1 << v14;
        uint64_t v37 = 8 * v14;
        *(void *)(v36[6] + v37) = v11;
        *(void *)(v36[7] + v37) = v12;
        uint64_t v38 = v36[2];
        BOOL v18 = __OFADD__(v38, 1);
        uint64_t v39 = v38 + 1;
        if (v18) {
          goto LABEL_21;
        }
        v36[2] = v39;
      }
      uint64_t v11 = sub_26110A574();
      uint64_t v12 = v28;
      if (v29) {
        goto LABEL_19;
      }
    }
LABEL_20:
    __break(1u);
LABEL_21:
    while (1)
    {
      __break(1u);
LABEL_22:
      unint64_t v41 = v14;
      sub_26107B9C8();
      unint64_t v14 = v41;
      if (v5) {
        break;
      }
LABEL_8:
      unint64_t v21 = (void *)*a5;
      *(void *)(*a5 + 8 * (v14 >> 6) + 64) |= 1 << v14;
      uint64_t v22 = 8 * v14;
      *(void *)(v21[6] + v22) = v11;
      *(void *)(v21[7] + v22) = v12;
      uint64_t v23 = v21[2];
      BOOL v18 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (!v18)
      {
        _OWORD v21[2] = v24;
        goto LABEL_10;
      }
    }
  }
LABEL_19:
  swift_release();
  swift_bridgeObjectRelease();
  sub_26107EF04();
  return swift_release();
}

uint64_t sub_26110A198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_261102B38(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t (**)(uint64_t))(v3 + 40), *(void *)(v3 + 48));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_26110A1C0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_26110A1D0()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

uint64_t sub_26110A1E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_26110A230()
{
  return sub_2611030CC(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

unint64_t sub_26110A240()
{
  unint64_t result = qword_26B40A348;
  if (!qword_26B40A348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B40A340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B40A348);
  }
  return result;
}

uint64_t sub_26110A29C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_26110A2FC()
{
  return sub_26110315C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_26110A310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26110A3A8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_261101D2C);
}

uint64_t sub_26110A328()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 68, 7);
}

uint64_t sub_26110A378()
{
  return sub_26110A860((uint64_t (*)(void, void, void, void, void, void, float))sub_26110218C);
}

uint64_t sub_26110A390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26110A3A8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_261100DA4);
}

uint64_t sub_26110A3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]) & 1;
}

float sub_26110A3E4@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  float result = *(float *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(float *)(a2 + 8) = result;
  return result;
}

uint64_t sub_26110A3F8()
{
  void (*v9)(uint64_t *__return_ptr, uint64_t *);
  char v10;
  uint64_t result;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = *(void *)(*(void *)(v1 + 48) + 8 * v6);
    int v8 = *(_DWORD *)(*(void *)(v1 + 56) + 4 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v9 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[5];
    uint64_t v19 = v7;
    char v20 = v8;
    v9(&v18, &v19);
    char v10 = 0;
    float result = v18;
LABEL_23:
    LOBYTE(v19) = v10;
    return result;
  }
  uint64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    char v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      unint64_t v14 = v0[1];
      char v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        uint64_t v5 = (v15 - 1) & v15;
        unint64_t v6 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_3;
      }
      uint64_t v16 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        char v15 = *(void *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          uint64_t v12 = v16;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          char v15 = *(void *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            uint64_t v12 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v16 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            char v15 = *(void *)(v14 + 8 * v16);
            if (v15) {
              goto LABEL_10;
            }
            uint64_t v12 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              char v15 = *(void *)(v14 + 8 * v12);
              if (v15) {
                goto LABEL_7;
              }
              int64_t v4 = v13 - 1;
              BOOL v17 = v3 + 6;
              while (v13 != v17)
              {
                char v15 = *(void *)(v14 + 8 * v17++);
                if (v15)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    float result = 0;
    v0[3] = v4;
    v0[4] = 0;
    char v10 = 1;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_26110A574()
{
  void (*v10)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  void v19[2];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 8 * v6;
    uint64_t v8 = *(void *)(*(void *)(v1 + 48) + 8 * v6);
    uint64_t v9 = *(void *)(*(void *)(v1 + 56) + v7);
    v0[3] = v4;
    v0[4] = v5;
    char v10 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v19[0] = v8;
    v19[1] = v9;
    v10(&v18, v19);
    return v18;
  }
  uint64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      unint64_t v14 = v0[1];
      char v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        uint64_t v5 = (v15 - 1) & v15;
        unint64_t v6 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_3;
      }
      uint64_t v16 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        char v15 = *(void *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          uint64_t v12 = v16;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          char v15 = *(void *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            uint64_t v12 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v16 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            char v15 = *(void *)(v14 + 8 * v16);
            if (v15) {
              goto LABEL_10;
            }
            uint64_t v12 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              char v15 = *(void *)(v14 + 8 * v12);
              if (v15) {
                goto LABEL_7;
              }
              int64_t v4 = v13 - 1;
              BOOL v17 = v3 + 6;
              while (v13 != v17)
              {
                char v15 = *(void *)(v14 + 8 * v17++);
                if (v15)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    float result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

__n128 sub_26110A6E0@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_26110A6EC(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_26106214C(0, v2, 0);
    uint64_t v5 = *(void *)(a2 + 48);
    unint64_t v6 = (float *)(a1 + 40);
    float v7 = *(float *)(a2 + 64);
    while (1)
    {
      uint64_t v8 = *((void *)v6 - 1);
      uint64_t v9 = v5 - v8;
      if (__OFSUB__(v5, v8)) {
        break;
      }
      float v10 = *v6;
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_26106214C(v11 > 1, v12 + 1, 1);
      }
      v6 += 4;
      float v13 = powf((float)v9, v7);
      *(void *)(v14 + 16) = v12 + 1;
      *(float *)(v14 + 4 * v12 + 32) = v10 * v13;
      if (!--v2) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_26110A7F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 68, 7);
}

uint64_t sub_26110A848()
{
  return sub_26110A860(sub_26110133C);
}

uint64_t sub_26110A860(uint64_t (*a1)(void, void, void, void, void, void, float))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(float *)(v1 + 64));
}

uint64_t sub_26110A87C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26110A8BC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1() & 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_26110A8F8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0) & 1;
}

uint64_t sub_26110A928()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_26110A954()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1) & 1;
}

uint64_t sub_26110A984()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26110A9BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_26110AA64(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_26111F328();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_26111EDD8();
  *(void *)(result + 16) = a1;
  int64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    int32x4_t *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_26110AB58(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_26111F328();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_26111EDD8();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    int64x2_t *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_26110AC44(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = sub_26111F328();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A320);
      unint64_t v6 = (void *)sub_26111EDD8();
      int64x2_t v7 = v6;
      void v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          unint64_t v9 = v6 + 9;
          do
          {
            sub_26106A668(a1, a2);
            *(v9 - 1) = a1;
            *unint64_t v9 = a2;
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        sub_26106A668(a1, a2);
      }
    }
    else
    {
      sub_261068AB0(a1, a2);
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_26110AD54(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_26111F328();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
      uint64_t v4 = sub_26111EDD8();
      *(void *)(v4 + 16) = a2;
      uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A910640) - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      sub_26110B944(a1, v4 + v6);
      uint64_t v7 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v8 = *(void *)(v5 + 72);
        uint64_t v9 = v4 + v8 + v6;
        do
        {
          sub_26110B944(a1, v9);
          v9 += v8;
          --v7;
        }
        while (v7);
      }
    }
    else
    {
      uint64_t v4 = MEMORY[0x263F8EE78];
    }
    sub_26110B9AC(a1);
    return v4;
  }
  return result;
}

uint64_t sub_26110AE90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char **a8)
{
  v26[2] = *MEMORY[0x263EF8340];
  uint64_t v9 = v8;
  uint64_t v13 = a4;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      uint64_t v21 = v9;
      swift_retain();
      sub_26110B358((int)a3, a3 >> 32, v13 & 0x3FFFFFFFFFFFFFFFLL, a5, a6, a7, a1, a2, a8);
      if (v21) {
        goto LABEL_12;
      }
      uint64_t result = sub_26106899C(a3, v13);
      break;
    case 2uLL:
      uint64_t v13 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)(a3 + 16);
      uint64_t v17 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      sub_26110B358(v18, v17, v13, a5, a6, a7, a1, a2, a8);
      if (v9)
      {
        swift_release();
        swift_release();
        __break(1u);
LABEL_12:
        sub_26106899C(a3, v13);
        __break(1u);
        JUMPOUT(0x26110B10CLL);
      }
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(v26, 0, 14);
      uint64_t v16 = (char *)v26;
      goto LABEL_6;
    default:
      v26[0] = a3;
      LOWORD(v26[1]) = a4;
      BYTE2(v26[1]) = BYTE2(a4);
      BYTE3(v26[1]) = BYTE3(a4);
      BYTE4(v26[1]) = BYTE4(a4);
      BYTE5(v26[1]) = BYTE5(a4);
      uint64_t v16 = (char *)v26 + BYTE6(a4);
LABEL_6:
      uint64_t result = sub_26110B11C((uint64_t)v26, (uint64_t)v16, a5, a6, a7, a1, a2, a8);
      break;
  }
  return result;
}

uint64_t sub_26110B11C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char **a8)
{
  if (a3 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3 < (uint64_t)0xFFFFFFFF80000000 || a4 < (uint64_t)0xFFFFFFFF80000000 || a5 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_14;
  }
  if (a5 > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!a6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v9 = *a8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v9 = sub_26105CE94(0, *((void *)v9 + 2), 0, v9);
  }
  *a8 = v9;
  return cblas_sgemm_NEWLAPACK();
}

uint64_t type metadata accessor for Vector()
{
  return self;
}

uint64_t sub_26110B26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char **a9)
{
  uint64_t result = sub_26111E4A8();
  uint64_t v16 = result;
  if (result)
  {
    uint64_t result = sub_26111E4D8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v16 += a1 - result;
  }
  BOOL v17 = __OFSUB__(a2, a1);
  uint64_t v18 = a2 - a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = sub_26111E4C8();
  if (v19 >= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = v16 + v20;
  if (v16) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  sub_26110AE90(v16, v22, a4, a5, a6, a7, a8, a9);
  return sub_26106899C(a4, a5);
}

uint64_t sub_26110B358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char **a9)
{
  uint64_t result = sub_26111E4A8();
  uint64_t v16 = result;
  if (result)
  {
    uint64_t result = sub_26111E4D8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v16 += a1 - result;
  }
  BOOL v17 = __OFSUB__(a2, a1);
  uint64_t v18 = a2 - a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = sub_26111E4C8();
  if (v19 >= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = v16 + v20;
  if (v16) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  return sub_26110B11C(v16, v22, a4, a5, a6, a7, a8, a9);
}

char *sub_26110B430(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  v49[1] = *(char **)MEMORY[0x263EF8340];
  unint64_t v6 = a2 >> 62;
  uint64_t result = (char *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      uint64_t v12 = (int)v12;
LABEL_6:
      if (v12)
      {
        unint64_t v16 = a4 >> 62;
        switch(a4 >> 62)
        {
          case 1uLL:
            LODWORD(v17) = HIDWORD(a3) - a3;
            if (__OFSUB__(HIDWORD(a3), a3)) {
              goto LABEL_48;
            }
            uint64_t v17 = (int)v17;
LABEL_12:
            if (!v17) {
              return result;
            }
            if ((unint64_t)(a5 - 0x2000000000000000) >> 62 != 3) {
              goto LABEL_45;
            }
            if (v6)
            {
              if (v6 == 1)
              {
                LODWORD(v20) = HIDWORD(a1) - a1;
                if (__OFSUB__(HIDWORD(a1), a1))
                {
LABEL_50:
                  __break(1u);
                  goto LABEL_51;
                }
                uint64_t v20 = (int)v20;
              }
              else
              {
                uint64_t v22 = *(void *)(a1 + 16);
                uint64_t v21 = *(void *)(a1 + 24);
                BOOL v15 = __OFSUB__(v21, v22);
                uint64_t v20 = v21 - v22;
                if (v15)
                {
LABEL_51:
                  __break(1u);
                  goto LABEL_52;
                }
              }
            }
            else
            {
              uint64_t v20 = BYTE6(a2);
            }
            uint64_t v23 = 4 * a5;
            if (!(4 * a5)) {
              goto LABEL_46;
            }
            if (v16)
            {
              if (v16 == 1)
              {
                LODWORD(v24) = HIDWORD(a3) - a3;
                if (__OFSUB__(HIDWORD(a3), a3))
                {
LABEL_52:
                  __break(1u);
                  goto LABEL_53;
                }
                uint64_t v24 = (int)v24;
              }
              else
              {
                uint64_t v26 = *(void *)(a3 + 16);
                uint64_t v25 = *(void *)(a3 + 24);
                BOOL v15 = __OFSUB__(v25, v26);
                uint64_t v24 = v25 - v26;
                if (v15)
                {
LABEL_53:
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  __break(1u);
                }
              }
            }
            else
            {
              uint64_t v24 = BYTE6(a4);
            }
            uint64_t v27 = v20 / v23;
            uint64_t v28 = v24 / v23;
            int64_t v29 = v20 / v23 * (v24 / v23);
            if ((unsigned __int128)(v20 / v23 * (__int128)(v24 / v23)) >> 64 == v29 >> 63)
            {
              v49[0] = (char *)sub_26110AA64(v29, 0);
              if (v6)
              {
                if (v6 == 1)
                {
                  if (a1 >> 32 >= (int)a1)
                  {
                    sub_26106A67C(a3, a4);
                    sub_26106A67C(a1, a2);
                    sub_26110B26C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4, v27, v28, a5, v49);
                    uint64_t v30 = a1;
                    unint64_t v31 = a2;
LABEL_40:
                    sub_26106899C(v30, v31);
                    return v49[0];
                  }
                  goto LABEL_54;
                }
                uint64_t v33 = *(void *)(a1 + 16);
                uint64_t v34 = *(void *)(a1 + 24);
                sub_26106A67C(a3, a4);
                swift_retain();
                swift_retain();
                sub_26110B26C(v33, v34, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4, v27, v28, a5, v49);
                swift_release();
                swift_release();
              }
              else
              {
                uint64_t v43 = a1;
                __int16 v44 = a2;
                char v45 = BYTE2(a2);
                char v46 = BYTE3(a2);
                char v47 = BYTE4(a2);
                char v48 = BYTE5(a2);
                uint64_t v32 = (char *)&v43 + BYTE6(a2);
                if (v16)
                {
                  if (v16 == 1)
                  {
                    if (a3 >> 32 < (int)a3) {
                      goto LABEL_55;
                    }
                    sub_26106A67C(a3, a4);
                    sub_26110B358((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, v27, v28, a5, (uint64_t)&v43, (uint64_t)v32, v49);
                  }
                  else
                  {
                    uint64_t v35 = *(void *)(a3 + 16);
                    uint64_t v36 = *(void *)(a3 + 24);
                    sub_26106A67C(a3, a4);
                    swift_retain();
                    swift_retain();
                    sub_26110B358(v35, v36, a4 & 0x3FFFFFFFFFFFFFFFLL, v27, v28, a5, (uint64_t)&v43, (uint64_t)v32, v49);
                    swift_release();
                    swift_release();
                  }
                  uint64_t v30 = a3;
                  unint64_t v31 = a4;
                  goto LABEL_40;
                }
                uint64_t v37 = a3;
                __int16 v38 = a4;
                char v39 = BYTE2(a4);
                char v40 = BYTE3(a4);
                char v41 = BYTE4(a4);
                char v42 = BYTE5(a4);
                sub_26110B11C((uint64_t)&v37, (uint64_t)&v37 + BYTE6(a4), v27, v28, a5, (uint64_t)&v43, (uint64_t)&v43 + BYTE6(a2), v49);
              }
              return v49[0];
            }
            break;
          case 2uLL:
            uint64_t v19 = *(void *)(a3 + 16);
            uint64_t v18 = *(void *)(a3 + 24);
            BOOL v15 = __OFSUB__(v18, v19);
            uint64_t v17 = v18 - v19;
            if (!v15) {
              goto LABEL_12;
            }
            goto LABEL_49;
          case 3uLL:
            return result;
          default:
            uint64_t v17 = BYTE6(a4);
            goto LABEL_12;
        }
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      return result;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return result;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_26110B944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_26110B9AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_26110BA0C(uint64_t a1)
{
  id v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_26111E618();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  unsigned __int8 v16 = 5;
  type metadata accessor for VUGallery(0);
  swift_allocObject();
  unint64_t v10 = v1;
  uint64_t v11 = VUGallery.init(for:at:)(&v16, (uint64_t)v7);
  if (v2)
  {

    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    type metadata accessor for VUWGallery(v12);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v10[OBJC_IVAR___VUWGallery_gallery] = v11;

    v15.receiver = v10;
    v15.super_class = (Class)VUWGallery;
    id v3 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  return v3;
}

void sub_26110BE34(uint64_t a1, uint64_t a2)
{
  char v2 = a2 - 1;
  if (unint64_t)(a2 - 1) < 6 && ((0x39u >> v2))
  {
    unsigned __int8 v3 = 0x30504040403uLL >> (8 * v2);
    VUGallery.tokenEmbeddings(for:type:)(a1, &v3);
  }
  else
  {
    sub_26111F338();
    __break(1u);
  }
}

void sub_26110BFA8(uint64_t a1@<X8>)
{
  char v2 = v1;
  id v4 = objc_msgSend(v1, sel_seed);
  uint64_t v5 = v4;
  uint64_t v6 = &off_265576000;
  if (v4)
  {
    id v7 = objc_msgSend(v4, sel_integerValue);
  }
  else
  {
    id v7 = 0;
  }
  id v8 = objc_msgSend(v1, sel_boundingBox);
  if (!v8)
  {
    uint64_t v13 = 0;
    goto LABEL_19;
  }
  uint64_t v9 = v8;
  sub_261071924(0, (unint64_t *)&qword_26B40AC30);
  unint64_t v10 = sub_26111ED88();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_26111F348();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_18;
  }
LABEL_7:
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_261062544(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    return;
  }
  id v28 = v2;
  id v29 = v7;
  uint64_t v30 = v5;
  uint64_t v12 = 0;
  uint64_t v13 = v31;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x26122DAE0](v12, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * v12 + 32);
    }
    objc_super v15 = v14;
    objc_msgSend(v14, sel_doubleValue, v28, v29, v30);
    uint64_t v17 = v16;

    unint64_t v19 = *(void *)(v31 + 16);
    unint64_t v18 = *(void *)(v31 + 24);
    if (v19 >= v18 >> 1) {
      sub_261062544(v18 > 1, v19 + 1, 1);
    }
    ++v12;
    *(void *)(v31 + 16) = v19 + 1;
    *(void *)(v31 + 8 * v19 + 32) = v17;
  }
  while (v11 != v12);
  swift_bridgeObjectRelease();
  id v7 = v29;
  uint64_t v5 = v30;
  char v2 = v28;
  uint64_t v6 = &off_265576000;
LABEL_19:
  id v20 = objc_msgSend(v2, sel_adapterIdentifier);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_26111EBF8();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  id v25 = objc_msgSend(v2, sel_keyObservation);
  uint64_t v26 = v25;
  if (v25)
  {
    id v27 = [v25 (SEL)v6[62]];
  }
  else
  {
    id v27 = 0;
  }
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v5 == 0;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v27;
  *(unsigned char *)(a1 + 48) = v26 == 0;
}

id sub_26110C3E8(void **a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v28 = 2;
    if (a5)
    {
      sub_26110BFA8((uint64_t)&v21);
      uint64_t v6 = v21;
      uint64_t v7 = v22;
      uint64_t v8 = v23;
      uint64_t v9 = v24;
      uint64_t v10 = v25;
      uint64_t v11 = v26;
      char v12 = v27;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = 0;
      uint64_t v8 = 1;
    }
    uint64_t v17 = v6;
    uint64_t v21 = v6;
    uint64_t v22 = v7;
    uint64_t v13 = v7;
    uint64_t v23 = v8;
    uint64_t v24 = v9;
    uint64_t v25 = v10;
    uint64_t v26 = v11;
    char v27 = v12;
    id v14 = a1;
    objc_super v15 = *a1;
    if (v15) {
      swift_unknownObjectRetain();
    }
    id v20 = v15;
    sub_2610E2C00(&v20, a2, a3, &v28, (uint64_t)&v21);
    sub_2610E2BB8(v17, v13, v8);
    id result = v15;
    *id v14 = v15;
  }
  return result;
}

uint64_t sub_26110CD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
  {
    uint64_t v11 = &unk_270D2E968;
LABEL_5:
    uint64_t v12 = sub_26111E618();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v10, a2, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    unsigned __int8 v17 = 0;
    swift_retain();
    v16[28] = 1;
    sub_26104C100((uint64_t)v11, (uint64_t)v10, &v17, 0, 0x100000000, (uint64_t)sub_26110F368, v14);
    sub_2610718C8((uint64_t)v10, (uint64_t *)&unk_26B40AC60);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (a1 == 1)
  {
    uint64_t v11 = &unk_270D2E940;
    goto LABEL_5;
  }
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

uint64_t sub_26110D178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 != 1) {
      goto LABEL_9;
    }
    uint64_t v13 = &unk_270D2E990;
  }
  else
  {
    uint64_t v13 = &unk_270D2E9B8;
  }
  uint64_t v14 = sub_26111E618();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v12, a2, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  unsigned __int8 v16 = 0;
  if (!a3)
  {
LABEL_8:
    unsigned __int8 v20 = v16;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a4;
    *(void *)(v17 + 24) = a5;
    swift_retain();
    v19[28] = 1;
    sub_26104C100((uint64_t)v13, (uint64_t)v12, &v20, 0, 0x100000000, (uint64_t)sub_26110F3B4, v17);
    sub_2610718C8((uint64_t)v12, (uint64_t *)&unk_26B40AC60);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (a3 == 1)
  {
    unsigned __int8 v16 = 1;
    goto LABEL_8;
  }
LABEL_9:
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

uint64_t sub_26110D590(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40AC60);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v5 + OBJC_IVAR___VUWGallery_gallery);
  if (!a1)
  {
    char v14 = a3;
    uint64_t v15 = &unk_270D2EA08;
LABEL_5:
    uint64_t v16 = sub_26111E618();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, a2, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a4;
    *(void *)(v18 + 24) = a5;
    unsigned __int8 v22 = 0;
    swift_retain();
    char v21 = 1;
    sub_26104C100((uint64_t)v15, (uint64_t)v13, &v22, v14 & 1, 0x100000000, (uint64_t)sub_26110F3B4, v18);
    sub_2610718C8((uint64_t)v13, (uint64_t *)&unk_26B40AC60);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (a1 == 1)
  {
    char v14 = a3;
    uint64_t v15 = &unk_270D2E9E0;
    goto LABEL_5;
  }
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

uint64_t sub_26110D990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1)
  {
    unsigned __int8 v5 = 0;
LABEL_5:
    unsigned __int8 v8 = v5;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = a3;
    swift_retain();
    sub_26104D598(&v8, (uint64_t)sub_26110F3B4, v6);
    return swift_release();
  }
  if (a1 == 1)
  {
    unsigned __int8 v5 = 1;
    goto LABEL_5;
  }
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

uint64_t sub_26110DB68(uint64_t a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
LABEL_12:
      uint64_t result = sub_26111F338();
      __break(1u);
      return result;
    }
    uint64_t v1 = qword_270D2E900;
    if (qword_270D2E900)
    {
LABEL_3:
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      while (1)
      {
        MEMORY[0x270FA5388](a1);
        a1 = sub_26111EFC8();
        BOOL v4 = __OFADD__(v2, v6);
        v2 += v6;
        if (v4) {
          break;
        }
        if (v1 == ++v3)
        {
          swift_bridgeObjectRelease();
          return v2;
        }
      }
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v1 = qword_270D2E928;
    if (qword_270D2E928) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_26110DD0C(uint64_t a1)
{
  if (!a1)
  {
    uint64_t v1 = (uint8_t *)&unk_270D2FEB0;
LABEL_5:
    sub_26105041C(v1);
    return swift_bridgeObjectRelease();
  }
  if (a1 == 1)
  {
    uint64_t v1 = (uint8_t *)&unk_270D2FED8;
    goto LABEL_5;
  }
  uint64_t result = sub_26111F338();
  __break(1u);
  return result;
}

void __swiftcall VUWGallery.init()(VUWGallery *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

void VUWGallery.init()()
{
}

void __swiftcall VUWGalleryPersonalizationOptions.init(coder:)(VUWGalleryPersonalizationOptions_optional *__return_ptr retstr, NSCoder coder)
{
}

id VUWGalleryPersonalizationOptions.init(coder:)(void *a1)
{
  id v2 = sub_26110F04C();

  return v2;
}

Swift::Void __swiftcall VUWGalleryPersonalizationOptions.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(v1, sel_seed);
  BOOL v4 = (void *)sub_26111EBC8();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  id v5 = objc_msgSend(v1, sel_boundingBox);
  uint64_t v6 = (void *)sub_26111EBC8();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  id v7 = objc_msgSend(v1, sel_adapterIdentifier);
  unsigned __int8 v8 = (void *)sub_26111EBC8();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  id v9 = objc_msgSend(v1, sel_keyObservation);
  id v10 = (id)sub_26111EBC8();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
}

char *sub_26110E500(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v5 = 0;
  char v2 = a2 - 1;
  if (unint64_t)(a2 - 1) < 6 && ((0x39u >> v2))
  {
    unsigned __int8 v4 = 0x30504040403uLL >> (8 * v2);
    return VUGallery.tokenEmbeddings(for:client:type:)(a1, &v5, &v4);
  }
  else
  {
    uint64_t result = (char *)sub_26111F338();
    __break(1u);
  }
  return result;
}

id sub_26110E5BC(void **a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v28 = 0;
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v27 = 2;
    if (a5)
    {
      sub_26110BFA8((uint64_t)&v20);
      uint64_t v6 = v20;
      uint64_t v7 = v21;
      uint64_t v8 = v22;
      uint64_t v9 = v23;
      uint64_t v10 = v24;
      uint64_t v11 = v25;
      char v12 = v26;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = 0;
      uint64_t v8 = 1;
    }
    uint64_t v16 = v6;
    uint64_t v20 = v6;
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    uint64_t v23 = v9;
    uint64_t v24 = v10;
    uint64_t v25 = v11;
    char v26 = v12;
    uint64_t v13 = a1;
    char v14 = *a1;
    if (v14) {
      swift_unknownObjectRetain();
    }
    id v19 = v14;
    VUGallery.personalize(embeddingLayer:at:for:client:type:options:)(&v19, a2, a3, &v28, &v27, (uint64_t)&v20);
    sub_2610E2BB8(v16, v7, v8);
    id result = v14;
    *uint64_t v13 = v14;
  }
  return result;
}

id sub_26110E744(void **a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  unsigned __int8 v13 = 0;
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v12 = 2;
    v10[0] = 0;
    v10[1] = 0;
    v10[2] = 1;
    memset(&v10[3], 0, 24);
    char v11 = 0;
    uint64_t v7 = *a1;
    if (*a1) {
      swift_unknownObjectRetain();
    }
    id v9 = v7;
    VUGallery.personalize(embeddingLayer:at:for:client:type:options:)(&v9, a2, a3, &v13, &v12, (uint64_t)v10);
    id result = v7;
    *a1 = v7;
  }
  return result;
}

id sub_26110E84C(void **a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v17 = 0;
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v16 = 2;
    uint64_t v11 = a5;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = 1;
    uint64_t v8 = *a1;
    if (*a1) {
      swift_unknownObjectRetain();
    }
    id v10 = v8;
    VUGallery.personalize(embeddingLayer:at:for:client:type:options:)(&v10, a2, a3, &v17, &v16, (uint64_t)&v11);
    id result = v8;
    *a1 = v8;
  }
  return result;
}

id sub_26110E958(void **a1, uint64_t a2, NSObject *a3, uint64_t a4, unint64_t a5)
{
  unsigned __int8 v29 = 0;
  if ((unint64_t)(a4 - 1) >= 3) {
    goto LABEL_21;
  }
  unsigned __int8 v28 = 2;
  if (a5)
  {
    if (a5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_26111F348();
      if (v9) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_5:
        *(void *)&long long v22 = MEMORY[0x263F8EE78];
        sub_261062544(0, v9 & ~(v9 >> 63), 0);
        if ((v9 & 0x8000000000000000) == 0)
        {
          uint64_t v20 = a1;
          uint64_t v10 = 0;
          uint64_t v11 = v22;
          do
          {
            if ((a5 & 0xC000000000000001) != 0) {
              id v12 = (id)MEMORY[0x26122DAE0](v10, a5);
            }
            else {
              id v12 = *(id *)(a5 + 8 * v10 + 32);
            }
            long long v13 = v12;
            objc_msgSend(v12, sel_doubleValue);
            uint64_t v15 = v14;

            *(void *)&long long v22 = v11;
            unint64_t v17 = *(void *)(v11 + 16);
            unint64_t v16 = *(void *)(v11 + 24);
            if (v17 >= v16 >> 1)
            {
              sub_261062544(v16 > 1, v17 + 1, 1);
              uint64_t v11 = v22;
            }
            ++v10;
            *(void *)(v11 + 16) = v17 + 1;
            *(void *)(v11 + 8 * v17 + 32) = v15;
          }
          while (v9 != v10);
          swift_bridgeObjectRelease();
          a1 = v20;
          goto LABEL_17;
        }
        __break(1u);
LABEL_21:
        id result = (id)sub_26111F338();
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v11 = 0;
  }
LABEL_17:
  long long v22 = xmmword_261121C40;
  uint64_t v23 = v11;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  char v27 = 1;
  uint64_t v18 = *a1;
  if (*a1) {
    swift_unknownObjectRetain();
  }
  id v21 = v18;
  VUGallery.personalize(embeddingLayer:at:for:client:type:options:)(&v21, a2, a3, &v29, &v28, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = v18;
  *a1 = v18;
  return result;
}

id sub_26110EBD4(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v12 = 2;
    v10[0] = 0;
    v10[1] = 0;
    v10[2] = 1;
    memset(&v10[3], 0, 24);
    char v11 = 0;
    uint64_t v7 = *a1;
    if (*a1) {
      swift_unknownObjectRetain();
    }
    id v9 = v7;
    sub_2610E2C00(&v9, a2, a3, &v12, (uint64_t)v10);
    id result = v7;
    *a1 = v7;
  }
  return result;
}

id sub_26110ECD4(void **a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if ((unint64_t)(a4 - 1) >= 3)
  {
    id result = (id)sub_26111F338();
    __break(1u);
  }
  else
  {
    unsigned __int8 v16 = 2;
    uint64_t v11 = a5;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = 1;
    uint64_t v8 = *a1;
    if (*a1) {
      swift_unknownObjectRetain();
    }
    id v10 = v8;
    sub_2610E2C00(&v10, a2, a3, &v16, (uint64_t)&v11);
    id result = v8;
    *a1 = v8;
  }
  return result;
}

id sub_26110EDD8(void **a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  if ((unint64_t)(a4 - 1) >= 3) {
    goto LABEL_21;
  }
  unsigned __int8 v28 = 2;
  if (a5)
  {
    if (a5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_26111F348();
      if (v9) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_5:
        *(void *)&long long v22 = MEMORY[0x263F8EE78];
        sub_261062544(0, v9 & ~(v9 >> 63), 0);
        if ((v9 & 0x8000000000000000) == 0)
        {
          uint64_t v20 = a1;
          uint64_t v10 = 0;
          uint64_t v11 = v22;
          do
          {
            if ((a5 & 0xC000000000000001) != 0) {
              id v12 = (id)MEMORY[0x26122DAE0](v10, a5);
            }
            else {
              id v12 = *(id *)(a5 + 8 * v10 + 32);
            }
            long long v13 = v12;
            objc_msgSend(v12, sel_doubleValue);
            uint64_t v15 = v14;

            *(void *)&long long v22 = v11;
            unint64_t v17 = *(void *)(v11 + 16);
            unint64_t v16 = *(void *)(v11 + 24);
            if (v17 >= v16 >> 1)
            {
              sub_261062544(v16 > 1, v17 + 1, 1);
              uint64_t v11 = v22;
            }
            ++v10;
            *(void *)(v11 + 16) = v17 + 1;
            *(void *)(v11 + 8 * v17 + 32) = v15;
          }
          while (v9 != v10);
          swift_bridgeObjectRelease();
          a1 = v20;
          goto LABEL_17;
        }
        __break(1u);
LABEL_21:
        id result = (id)sub_26111F338();
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v11 = 0;
  }
LABEL_17:
  long long v22 = xmmword_261121C40;
  uint64_t v23 = v11;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  char v27 = 1;
  uint64_t v18 = *a1;
  if (*a1) {
    swift_unknownObjectRetain();
  }
  id v21 = v18;
  sub_2610E2C00(&v21, a2, a3, &v28, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = v18;
  *a1 = v18;
  return result;
}

id sub_26110F04C()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR___VUWGalleryPersonalizationOptions_seed;
  *(void *)&v0[OBJC_IVAR___VUWGalleryPersonalizationOptions_seed] = 0;
  uint64_t v3 = OBJC_IVAR___VUWGalleryPersonalizationOptions_boundingBox;
  *(void *)&v0[OBJC_IVAR___VUWGalleryPersonalizationOptions_boundingBox] = 0;
  unsigned __int8 v4 = (uint64_t *)&v0[OBJC_IVAR___VUWGalleryPersonalizationOptions_adapterIdentifier];
  *unsigned __int8 v4 = 0;
  v4[1] = 0;
  uint64_t v5 = OBJC_IVAR___VUWGalleryPersonalizationOptions_keyObservation;
  *(void *)&v0[OBJC_IVAR___VUWGalleryPersonalizationOptions_keyObservation] = 0;
  uint64_t v6 = sub_261071924(0, (unint64_t *)&qword_26B40AC30);
  uint64_t v7 = v0;
  uint64_t v8 = sub_26111F058();
  uint64_t v9 = *(void **)&v0[v2];
  *(void *)&v0[v2] = v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A4E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2611200A0;
  *(void *)(v10 + 32) = sub_261071924(0, (unint64_t *)&unk_26A9106F0);
  *(void *)(v10 + 40) = v6;
  sub_26111F068();
  swift_bridgeObjectRelease();
  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A910708);
    int v11 = swift_dynamicCast();
    uint64_t v12 = v21;
    if (!v11) {
      uint64_t v12 = 0;
    }
  }
  else
  {
    sub_2610718C8((uint64_t)v23, (uint64_t *)&unk_26B40ADF8);
    uint64_t v12 = 0;
  }
  *(void *)&v0[v3] = v12;
  swift_bridgeObjectRelease();
  sub_261071924(0, &qword_26A910700);
  uint64_t v13 = sub_26111F058();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    uint64_t v15 = sub_26111EBF8();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  *unsigned __int8 v4 = v15;
  v4[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_26111F058();
  id v19 = *(void **)&v0[v5];
  *(void *)&v1[v5] = v18;

  v22.receiver = v7;
  v22.super_class = (Class)VUWGalleryPersonalizationOptions;
  return objc_msgSendSuper2(&v22, sel_init);
}

uint64_t type metadata accessor for VUWGallery(uint64_t a1)
{
  return sub_261071924(a1, &qword_26A9106B0);
}

uint64_t type metadata accessor for VUWGalleryPersonalizationOptions(uint64_t a1)
{
  return sub_261071924(a1, (unint64_t *)&unk_26A9106E0);
}

uint64_t sub_26110F2D4()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_26110F30C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_26110F330()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26110F368(float *a1)
{
  return (*(uint64_t (**)(float))(v1 + 16))(*a1) & 1;
}

uint64_t VUObservationRevision.rawValue.getter()
{
  return qword_261122020[*v0];
}

uint64_t VUAnimalObservationRevision.rawValue.getter()
{
  return qword_261122050[*v0];
}

void VUObservation.__allocating_init(from:)(void *a1)
{
}

VisualUnderstanding::VUObservationRevision_optional __swiftcall VUObservationRevision.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 1;
  switch(rawValue)
  {
    case 3737841666:
      char *v1 = 5;
      return (VisualUnderstanding::VUObservationRevision_optional)rawValue;
    case 3737841667:
      char *v1 = 2;
      return (VisualUnderstanding::VUObservationRevision_optional)rawValue;
    case 3737841668:
    case 3737841671:
      goto LABEL_6;
    case 3737841669:
      goto LABEL_5;
    case 3737841670:
      char *v1 = 4;
      return (VisualUnderstanding::VUObservationRevision_optional)rawValue;
    case 3737841672:
      char *v1 = 3;
      return (VisualUnderstanding::VUObservationRevision_optional)rawValue;
    default:
      if (rawValue)
      {
LABEL_6:
        char *v1 = 6;
      }
      else
      {
        char v2 = 0;
LABEL_5:
        char *v1 = v2;
      }
      return (VisualUnderstanding::VUObservationRevision_optional)rawValue;
  }
}

BOOL sub_26110F498(char *a1, char *a2)
{
  return qword_261122020[*a1] == qword_261122020[*a2];
}

uint64_t sub_26110F4BC()
{
  return sub_26111F508();
}

uint64_t sub_26110F50C()
{
  return sub_26111F4D8();
}

uint64_t sub_26110F544()
{
  return sub_26111F508();
}

VisualUnderstanding::VUObservationRevision_optional sub_26110F590(Swift::Int *a1)
{
  return VUObservationRevision.init(rawValue:)(*a1);
}

void sub_26110F598(void *a1@<X8>)
{
  *a1 = qword_261122020[*v1];
}

VisualUnderstanding::VUAnimalObservationRevision_optional __swiftcall VUAnimalObservationRevision.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 3737841667) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (rawValue == 1) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (!rawValue) {
    char v3 = 0;
  }
  char *v1 = v3;
  return (VisualUnderstanding::VUAnimalObservationRevision_optional)rawValue;
}

BOOL sub_26110F5E4(char *a1, char *a2)
{
  return qword_261122050[*a1] == qword_261122050[*a2];
}

uint64_t sub_26110F608()
{
  return sub_26111F508();
}

uint64_t sub_26110F658()
{
  return sub_26111F4D8();
}

uint64_t sub_26110F690()
{
  return sub_26111F508();
}

VisualUnderstanding::VUAnimalObservationRevision_optional sub_26110F6DC(Swift::Int *a1)
{
  return VUAnimalObservationRevision.init(rawValue:)(*a1);
}

void sub_26110F6E4(void *a1@<X8>)
{
  *a1 = qword_261122050[*v1];
}

uint64_t VUSceneObservationRevision.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t VUSceneObservationRevision.rawValue.getter()
{
  return 0;
}

void *sub_26110F714@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_26110F728(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t VUObservationType.description.getter()
{
  return sub_26111EC18();
}

VisualUnderstanding::VUObservationType_optional __swiftcall VUObservationType.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_26111F3B8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t VUObservationType.rawValue.getter()
{
  uint64_t v1 = 0x6C616D696E61;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E656373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F73726570;
  }
}

uint64_t sub_26110F810(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2610A4E4C(*a1, *a2);
}

uint64_t sub_26110F81C()
{
  return sub_26111F508();
}

uint64_t sub_26110F8B4()
{
  sub_26111EC48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_26110F938()
{
  return sub_26111F508();
}

VisualUnderstanding::VUObservationType_optional sub_26110F9CC(Swift::String *a1)
{
  return VUObservationType.init(rawValue:)(*a1);
}

void sub_26110F9D8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x6C616D696E61;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656E656373;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F73726570;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void VUObservation.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t VUObservation.embedding.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_26106A668(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t VUObservation.embeddingRevision.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t VUObservation.embeddingExpiration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_26110B944(v1 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration, a1);
}

uint64_t VUObservation.contextualEmbedding.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding);
  sub_26106A668(v1, *(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding + 8));
  return v1;
}

uint64_t VUObservation.contextualEmbeddingRevision.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision);
}

uint64_t VUObservation.contextualEmbeddingExpiration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_26110B944(v1 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration, a1);
}

unint64_t VUObservation.embeddingConfidence.getter()
{
  return sub_26110FB10(&OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence);
}

unint64_t VUObservation.contextualEmbeddingConfidence.getter()
{
  return sub_26110FB10(&OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence);
}

unint64_t sub_26110FB10(void *a1)
{
  return *(unsigned int *)(v1 + *a1) | ((unint64_t)*(unsigned __int8 *)(v1 + *a1 + 4) << 32);
}

uint64_t VUObservation.__allocating_init(type:embedding:embeddingRevision:embeddingExpiration:embeddingConfidence:contextualEmbedding:contextualEmbeddingRevision:contextualEmbeddingExpiration:contextualEmbeddingConfidence:)(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, int a13, char a14)
{
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = *a1;
  *(void *)(v21 + 24) = a2;
  *(void *)(v21 + 32) = a3;
  *(void *)(v21 + 40) = a4;
  *(unsigned char *)(v21 + 48) = a5 & 1;
  sub_261110D00(a6, v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  uint64_t v22 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
  *(_DWORD *)uint64_t v22 = a7;
  *(unsigned char *)(v22 + 4) = BYTE4(a7) & 1;
  uint64_t v23 = (void *)(v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding);
  *uint64_t v23 = a8;
  v23[1] = a9;
  uint64_t v24 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
  *(void *)uint64_t v24 = a10;
  *(unsigned char *)(v24 + 8) = a11 & 1;
  sub_261110D00(a12, v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
  uint64_t v25 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
  *(_DWORD *)uint64_t v25 = a13;
  *(unsigned char *)(v25 + 4) = a14 & 1;
  return v21;
}

uint64_t VUObservation.init(type:embedding:embeddingRevision:embeddingExpiration:embeddingConfidence:contextualEmbedding:contextualEmbeddingRevision:contextualEmbeddingExpiration:contextualEmbeddingConfidence:)(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, int a13, char a14)
{
  *(unsigned char *)(v14 + 16) = *a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  *(unsigned char *)(v14 + 48) = a5 & 1;
  sub_261110D00(a6, v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  uint64_t v17 = v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
  *(_DWORD *)uint64_t v17 = a7;
  *(unsigned char *)(v17 + 4) = BYTE4(a7) & 1;
  uint64_t v18 = (void *)(v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding);
  void *v18 = a8;
  v18[1] = a9;
  uint64_t v19 = v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
  *(void *)uint64_t v19 = a10;
  *(unsigned char *)(v19 + 8) = a11 & 1;
  sub_261110D00(a12, v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
  uint64_t v20 = v14 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
  *(_DWORD *)uint64_t v20 = a13;
  *(unsigned char *)(v20 + 4) = a14 & 1;
  return v14;
}

uint64_t VUObservation.__allocating_init(type:embedding:embeddingRevision:embeddingConfidence:contextualEmbedding:contextualEmbeddingRevision:contextualEmbeddingConfidence:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, int a11, int a12, char a13)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  int v34 = a5;
  uint64_t v33 = a4;
  int v36 = a10;
  uint64_t v35 = a9;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v33 - v21;
  char v23 = *a1;
  uint64_t v24 = sub_26111E718();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v25(v22, 1, 1, v24);
  v25(v20, 1, 1, v24);
  type metadata accessor for VUObservation();
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = v23;
  *(void *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = a3;
  *(void *)(v26 + 40) = v33;
  *(unsigned char *)(v26 + 48) = v34 & 1;
  sub_261110D00((uint64_t)v22, v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  uint64_t v27 = v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
  *(_DWORD *)uint64_t v27 = a6;
  *(unsigned char *)(v27 + 4) = BYTE4(a6) & 1;
  unsigned __int8 v28 = (void *)(v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding);
  uint64_t v29 = v38;
  *unsigned __int8 v28 = v37;
  v28[1] = v29;
  uint64_t v30 = v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
  *(void *)uint64_t v30 = v35;
  *(unsigned char *)(v30 + 8) = v36 & 1;
  sub_261110D00((uint64_t)v20, v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
  uint64_t v31 = v26 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
  *(_DWORD *)uint64_t v31 = a12;
  *(unsigned char *)(v31 + 4) = a13 & 1;
  return v26;
}

__objc2_prot **VUObservation.__allocating_init(personObservation:embeddingExpiration:contextualEmbeddingExpiration:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_261110224(a1, a2, a3);
}

__objc2_prot **VUObservation.__allocating_init(from:embeddingExpiration:contextualEmbeddingExpiration:)(__objc2_prot **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int v11 = (char *)v19 - v10;
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    sub_26110B944(a2, (uint64_t)v11);
    sub_26110B944(a3, (uint64_t)v9);
    a1 = sub_261110224(v13, (uint64_t)v11, (uint64_t)v9);
    sub_26110B9AC(a3);
    sub_26110B9AC(a2);
  }
  else
  {
    self;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    if (v14)
    {
      uint64_t v15 = (__objc2_prot **)_s19VisualUnderstanding13VUObservationC17animalObservationACSo08VNAnimalE0C_tcfC_0(v14);
    }
    else
    {
      self;
      uint64_t v16 = (void *)swift_dynamicCastObjCClass();
      if (!v16)
      {
        sub_261046B60();
        swift_allocError();
        unsigned char *v18 = 1;
        swift_willThrow();

        sub_26110B9AC(a3);
        sub_26110B9AC(a2);
        return a1;
      }
      _s19VisualUnderstanding13VUObservationC16sceneObservationACSo07VNSceneE0C_tcfC_0(v16);
    }
    a1 = v15;
    sub_26110B9AC(a3);
    sub_26110B9AC(a2);
  }
  return a1;
}

uint64_t VUObservation.deinit()
{
  sub_261068AB0(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_26110B9AC(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  sub_261068AB0(*(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding), *(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding + 8));
  sub_26110B9AC(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
  return v0;
}

uint64_t VUObservation.__deallocating_deinit()
{
  sub_261068AB0(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_26110B9AC(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  sub_261068AB0(*(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding), *(void *)(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding + 8));
  sub_26110B9AC(v0 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);

  return swift_deallocClassInstance();
}

__objc2_prot **sub_261110224(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v42 - v9;
  id v11 = objc_msgSend(a1, sel_faceTorsoprint);
  if (!v11
    || (v12 = v11, id v13 = objc_msgSend(v11, sel_faceprint), v12, !v13))
  {
    id v13 = objc_msgSend(a1, sel_faceprint);
  }
  id v14 = objc_msgSend(a1, sel_faceTorsoprint);
  if (!v14
    || (v15 = v14, id v16 = objc_msgSend(v14, sel_torsoprint), v15, !v16))
  {
    id v16 = objc_msgSend(a1, sel_torsoprint);
  }
  uint64_t v17 = &off_265576000;
  if (!v13)
  {
    if (!v16)
    {
      sub_261046B60();
      swift_allocError();
      *char v41 = 1;
      swift_willThrow();

      sub_26110B9AC(v47);
      sub_26110B9AC(v48);
      return v17;
    }
    uint64_t v46 = v3;
    sub_26110B944(v48, (uint64_t)v10);
    uint64_t v43 = 0;
    unint64_t v44 = 0xF000000000000000;
    char v45 = 0;
    int v22 = 0;
    goto LABEL_17;
  }
  id v18 = objc_msgSend(v13, sel_descriptorData);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_26111E688();
    unint64_t v44 = v21;
    char v45 = (__objc2_prot *)v20;
  }
  else
  {
    unint64_t v44 = 0xF000000000000000;
    char v45 = 0;
  }
  unint64_t v23 = ((unint64_t)objc_msgSend(v13, sel_requestRevision) & 0xFFFFFFFFFFFFFFLL) - 3737841666u;
  uint64_t v46 = v3;
  if (v23 > 6) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = (__objc2_prot *)qword_261122068[v23];
  }
  sub_26110B944(v48, (uint64_t)v10);
  objc_msgSend(v13, sel_confidence);
  int v22 = v24;
  if (v16)
  {
LABEL_17:
    id v25 = objc_msgSend(v16, sel_descriptorData, v10);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_26111E688();
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = 0xF000000000000000;
    }
    id v31 = objc_msgSend(v16, sel_requestRevision);
    uint64_t v30 = v47;
    sub_26110B944(v47, (uint64_t)v8);
    objc_msgSend(v16, (SEL)&selRef_setPredicate_);
    int v32 = v34;

    char v33 = 0;
    uint64_t v10 = v42;
    goto LABEL_22;
  }
  uint64_t v30 = v47;
  sub_26110B944(v47, (uint64_t)v8);

  uint64_t v27 = 0;
  id v31 = 0;
  int v32 = 0;
  char v33 = 1;
  unint64_t v29 = 0xF000000000000000;
LABEL_22:
  sub_26110B9AC(v30);
  sub_26110B9AC(v48);
  type metadata accessor for VUObservation();
  uint64_t v17 = (__objc2_prot **)swift_allocObject();
  *((unsigned char *)v17 + 16) = 0;
  uint64_t v35 = (__objc2_prot *)v44;
  v17[3] = v45;
  v17[4] = v35;
  v17[5] = v43;
  *((unsigned char *)v17 + 48) = 0;
  sub_261110D00((uint64_t)v10, (uint64_t)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
  int v36 = (char *)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
  *(_DWORD *)int v36 = v22;
  v36[4] = v13 == 0;
  uint64_t v37 = (uint64_t *)((char *)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding);
  *uint64_t v37 = v27;
  v37[1] = v29;
  uint64_t v38 = (char *)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
  *(void *)uint64_t v38 = v31;
  v38[8] = v33;
  sub_261110D00((uint64_t)v8, (uint64_t)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
  char v39 = (char *)v17 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
  *(_DWORD *)char v39 = v32;
  v39[4] = v33;
  return v17;
}

id _s19VisualUnderstanding13VUObservationC17animalObservationACSo08VNAnimalE0C_tcfC_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v26 - v6;
  id v8 = objc_msgSend(a1, sel_animalprint);
  uint64_t v9 = v8;
  if (!v8)
  {

    uint64_t v12 = 0;
    uint64_t v16 = 0;
    unint64_t v14 = 0xF000000000000000;
    int v19 = 0;
LABEL_8:
    uint64_t v20 = sub_26111E718();
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    v21(v7, 1, 1, v20);
    v21(v5, 1, 1, v20);
    type metadata accessor for VUObservation();
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 1;
    *(void *)(v22 + 24) = v12;
    *(void *)(v22 + 32) = v14;
    *(void *)(v22 + 40) = v16;
    *(unsigned char *)(v22 + 48) = 0;
    sub_261110D00((uint64_t)v7, v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
    uint64_t v23 = v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
    *(_DWORD *)uint64_t v23 = v19;
    *(unsigned char *)(v23 + 4) = v9 == 0;
    *(_OWORD *)(v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding) = xmmword_261120FE0;
    uint64_t v24 = v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    sub_261110D00((uint64_t)v5, v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
    uint64_t v25 = v22 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
    *(_DWORD *)uint64_t v25 = 0;
    *(unsigned char *)(v25 + 4) = 1;
    return (id)v22;
  }
  id result = objc_msgSend(v8, sel_descriptorData);
  if (result)
  {
    id v11 = result;
    uint64_t v12 = sub_26111E688();
    unint64_t v14 = v13;

    unint64_t v15 = (unint64_t)objc_msgSend(v9, sel_requestRevision);
    if ((v15 & 0xFFFFFFFFFFFFFFLL) == 0xDECAF003) {
      uint64_t v16 = 3737841667;
    }
    else {
      uint64_t v16 = (v15 & 0xFFFFFFFFFFFFFFLL) == 1;
    }
    id v17 = v9;
    objc_msgSend(v17, sel_confidence);
    int v19 = v18;

    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void _s19VisualUnderstanding13VUObservationC16sceneObservationACSo07VNSceneE0C_tcfC_0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v25 - v6;
  id v8 = objc_msgSend(a1, sel_sceneprints);
  if (!v8)
  {
    uint64_t v15 = 0;
    unint64_t v17 = 0xF000000000000000;
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  sub_261111398();
  uint64_t v10 = sub_26111ED88();

  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x26122DAE0](0, v10);
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_11;
    }
    id v11 = *(id *)(v10 + 32);
  }
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_descriptorData);
  if (v13)
  {
    unint64_t v14 = v13;
    uint64_t v15 = sub_26111E688();
    unint64_t v17 = v16;

    id v18 = v12;
    objc_msgSend(v18, sel_requestRevision);

LABEL_8:
    uint64_t v19 = sub_26111E718();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    v20(v7, 1, 1, v19);
    v20(v5, 1, 1, v19);
    type metadata accessor for VUObservation();
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 2;
    *(void *)(v21 + 24) = v15;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = 0;
    *(unsigned char *)(v21 + 48) = 0;
    sub_261110D00((uint64_t)v7, v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingExpiration);
    uint64_t v22 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_embeddingConfidence;
    *(_DWORD *)uint64_t v22 = 0;
    *(unsigned char *)(v22 + 4) = 1;
    *(_OWORD *)(v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbedding) = xmmword_261120FE0;
    uint64_t v23 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingRevision;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    sub_261110D00((uint64_t)v5, v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingExpiration);
    uint64_t v24 = v21 + OBJC_IVAR____TtC19VisualUnderstanding13VUObservation_contextualEmbeddingConfidence;
    *(_DWORD *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 4) = 1;
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_261110B38(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v15 - v6;
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = sub_26111E718();
    id v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v7, 1, 1, v10);
    v11(v5, 1, 1, v10);
    sub_261110224(v9, (uint64_t)v7, (uint64_t)v5);
  }
  else
  {
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      _s19VisualUnderstanding13VUObservationC17animalObservationACSo08VNAnimalE0C_tcfC_0(v12);
    }
    else
    {
      self;
      id v13 = (void *)swift_dynamicCastObjCClass();
      if (v13)
      {
        _s19VisualUnderstanding13VUObservationC16sceneObservationACSo07VNSceneE0C_tcfC_0(v13);
      }
      else
      {
        sub_261046B60();
        swift_allocError();
        *unint64_t v14 = 1;
        swift_willThrow();
      }
    }
  }
}

uint64_t sub_261110D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VUObservation()
{
  uint64_t result = qword_26A910730;
  if (!qword_26A910730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_261110DB8()
{
  unint64_t result = qword_26A910710;
  if (!qword_26A910710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910710);
  }
  return result;
}

unint64_t sub_261110E10()
{
  unint64_t result = qword_26A910718;
  if (!qword_26A910718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910718);
  }
  return result;
}

unint64_t sub_261110E68()
{
  unint64_t result = qword_26A910720;
  if (!qword_26A910720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910720);
  }
  return result;
}

unint64_t sub_261110EC0()
{
  unint64_t result = qword_26A910728;
  if (!qword_26A910728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910728);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VUObservationRevision(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261110FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUObservationRevision()
{
  return &type metadata for VUObservationRevision;
}

ValueMetadata *type metadata accessor for VUAnimalObservationRevision()
{
  return &type metadata for VUAnimalObservationRevision;
}

unsigned char *storeEnumTagSinglePayload for VUSceneObservationRevision(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2611110C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VUSceneObservationRevision()
{
  return &type metadata for VUSceneObservationRevision;
}

unsigned char *_s19VisualUnderstanding27VUAnimalObservationRevisionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2611111CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUObservationType()
{
  return &type metadata for VUObservationType;
}

uint64_t sub_261111204()
{
  return type metadata accessor for VUObservation();
}

void sub_26111120C()
{
  sub_261111340();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for VUObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VUObservation);
}

uint64_t dispatch thunk of VUObservation.__allocating_init(type:embedding:embeddingRevision:embeddingExpiration:embeddingConfidence:contextualEmbedding:contextualEmbeddingRevision:contextualEmbeddingExpiration:contextualEmbeddingConfidence:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, unint64_t))(v7 + 152))(a1, a2, a3, a4, a5 & 1, a6, a7 | ((HIDWORD(a7) & 1) << 32));
}

void sub_261111340()
{
  if (!qword_26A910740)
  {
    sub_26111E718();
    unint64_t v0 = sub_26111F0C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A910740);
    }
  }
}

unint64_t sub_261111398()
{
  unint64_t result = qword_26A910748;
  if (!qword_26A910748)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A910748);
  }
  return result;
}

BOOL static VUGalleryTransaction.Priority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VUGalleryTransaction.Priority.hash(into:)()
{
  return sub_26111F4D8();
}

uint64_t VUGalleryTransaction.Priority.hashValue.getter()
{
  return sub_26111F508();
}

void sub_261111464(void *a1, uint64_t a2, char *a3, uint64_t a4, int a5)
{
  LODWORD(v216) = a5;
  uint64_t v215 = a4;
  uint64_t v9 = sub_26111EB18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v218 = v9;
  uint64_t v219 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v213 = (char *)&v200 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v214 = (char *)&v200 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v200 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v209 = ((char *)&v200 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v210 = (uint64_t)&v200 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  double v212 = (char *)&v200 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v200 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A330);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = MEMORY[0x270FA5388]((char *)&v200 - v29);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  int v36 = (char *)&v200 - v35;
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  char v39 = (char *)&v200 - v38;
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v48 = (char *)&v200 - v44;
  Class isa = v5[3].isa;
  if (!isa)
  {
    float v52 = sub_26111EAC8();
    os_log_type_t v53 = sub_26111EF58();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_261042000, v52, v53, "Bad internal state: gallery is not available", v54, 2u);
      MEMORY[0x26122E4F0](v54, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v55 = 4;
    swift_willThrow();
    return;
  }
  uint64_t v201 = v43;
  uint64_t v204 = v42;
  uint64_t v202 = v41;
  uint64_t v203 = v40;
  uint64_t v208 = v36;
  uint64_t v205 = v47;
  uint64_t v207 = v46;
  uint64_t v206 = v45;
  uint64_t v220 = v5;
  char v229 = *a3;
  int v50 = *((unsigned __int8 *)isa + OBJC_IVAR____TtC19VisualUnderstanding9VUGallery_client);
  uint64_t v211 = a2;
  sub_261071864(a2, (uint64_t)&v200 - v44, &qword_26B40A330);
  Class v221 = isa;
  if (v50)
  {
    swift_retain();
    sub_2610718C8((uint64_t)v48, &qword_26B40A330);
    uint64_t v51 = v220;
    goto LABEL_12;
  }
  sub_261115BEC((uint64_t)v48, (uint64_t)v39);
  uint64_t v56 = type metadata accessor for VUGallery.Context(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v39, 1, v56) == 1)
  {
    swift_retain();
    sub_2610718C8((uint64_t)v39, &qword_26B40A330);
    uint64_t v57 = sub_26111E778();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v25, 1, 1, v57);
    uint64_t v51 = v220;
LABEL_10:
    sub_2610718C8((uint64_t)v25, &qword_26B40AC70);
    char v229 = 1;
    goto LABEL_12;
  }
  sub_261071864((uint64_t)&v39[*(int *)(v56 + 20)], (uint64_t)v25, &qword_26B40AC70);
  swift_retain();
  sub_261115B2C((uint64_t)v39);
  uint64_t v58 = sub_26111E778();
  int v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v25, 1, v58);
  uint64_t v51 = v220;
  if (v59 == 1) {
    goto LABEL_10;
  }
  sub_2610718C8((uint64_t)v25, &qword_26B40AC70);
LABEL_12:
  uint64_t v225 = 0;
  char v226 = 1;
  self;
  uint64_t v60 = swift_dynamicCastObjCClass();
  if (!v60)
  {
    self;
    uint64_t v77 = swift_dynamicCastObjCClass();
    if (v77)
    {
      uint64_t v78 = (void *)v77;
      float v66 = a1;
      uint64_t v79 = (char *)objc_msgSend(v78, sel_animalprint);
      if (v79)
      {
        unsigned int v80 = v79;
        LODWORD(v222) = 0;
        id v81 = objc_msgSend(v78, sel_labels);
        sub_261071924(0, &qword_26A910750);
        unint64_t v82 = sub_26111ED88();

        double v212 = v80;
        if (v82 >> 62) {
          goto LABEL_123;
        }
        uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_27;
      }
      uint64_t v144 = sub_26111EAC8();
      os_log_type_t v145 = sub_26111EF58();
      if (os_log_type_enabled(v144, v145))
      {
        char v146 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v146 = 0;
        _os_log_impl(&dword_261042000, v144, v145, "Unable to add observation: observation has no animalprint", v146, 2u);
        MEMORY[0x26122E4F0](v146, -1, -1);
      }

      sub_261046B60();
      swift_allocError();
      unsigned char *v147 = 1;
      swift_willThrow();
    }
    else
    {
      self;
      uint64_t v133 = swift_dynamicCastObjCClass();
      if (v133)
      {
        float v66 = v133;
        id v81 = a1;
        id v134 = [v66 sceneprints];
        if (v134)
        {
          BOOL v135 = v134;
          sub_261071924(0, (unint64_t *)&qword_26A910748);
          unint64_t v82 = sub_26111ED88();

          if (v82 >> 62) {
            goto LABEL_125;
          }
          uint64_t v136 = v213;
          if (*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_78;
          }
LABEL_126:
          swift_bridgeObjectRelease();
        }
        uint64_t v196 = sub_26111EAC8();
        os_log_type_t v197 = sub_26111EF58();
        if (os_log_type_enabled(v196, v197))
        {
          uint64_t v198 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v198 = 0;
          _os_log_impl(&dword_261042000, v196, v197, "Unable to add observation: observation has no sceneprint", v198, 2u);
          MEMORY[0x26122E4F0](v198, -1, -1);
        }

        sub_261046B60();
        swift_allocError();
        *uint64_t v199 = 1;
        swift_willThrow();
      }
      else
      {
        uint64_t v157 = sub_26111EAC8();
        os_log_type_t v158 = sub_26111EF58();
        if (os_log_type_enabled(v157, v158))
        {
          uint64_t v159 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v159 = 0;
          _os_log_impl(&dword_261042000, v157, v158, "Unable to add the observation: given observation is not of type VNAnimalObservation, VNFaceObservation or VNSceneObservation", v159, 2u);
          MEMORY[0x26122E4F0](v159, -1, -1);
        }

        sub_261046B60();
        swift_allocError();
        unsigned char *v160 = 1;
        swift_willThrow();
      }
    }
    goto LABEL_121;
  }
  uint64_t v61 = (void *)v60;
  int v62 = a1;
  id v63 = objc_msgSend(v61, sel_faceTorsoprint);
  if (!v63
    || (BOOL v64 = v63,
        unint64_t v65 = (unint64_t)objc_msgSend(v63, sel_faceprint),
        v64,
        !v65))
  {
    unint64_t v65 = (unint64_t)objc_msgSend(v61, sel_faceprint);
  }
  float v66 = v51;
  id v67 = objc_msgSend(v61, sel_faceTorsoprint);
  if (v67)
  {
    unint64_t v68 = v67;
    uint64_t v69 = (char *)objc_msgSend(v67, sel_torsoprint);

    if (v69)
    {
      uint64_t v213 = v62;
      uint64_t v214 = v69;
      LODWORD(v209) = 0;
      LODWORD(v210) = v65 == 0;
      goto LABEL_49;
    }
  }
  unint64_t v70 = (unint64_t)objc_msgSend(v61, sel_torsoprint);
  if (!(v65 | v70))
  {
    uint64_t v71 = sub_26111EAC8();
    os_log_type_t v72 = sub_26111EF58();
    if (os_log_type_enabled(v71, v72))
    {
      int64_t v73 = v62;
      unint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v74 = 0;
      _os_log_impl(&dword_261042000, v71, v72, "Unable to add observation: observation is missing at least a faceprint or a torsoprint", v74, 2u);
      uint64_t v75 = v74;
      int v62 = v73;
      MEMORY[0x26122E4F0](v75, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v76 = 1;
    swift_willThrow();

LABEL_121:
    swift_release();
    return;
  }
  LODWORD(v209) = v70 == 0;
  LODWORD(v210) = v65 == 0;
  uint64_t v213 = v62;
  uint64_t v214 = (char *)v70;
LABEL_49:
  uint64_t v100 = sub_26111EFF8();
  int v227 = v100;
  char v228 = BYTE4(v100) & 1;
  uint64_t v101 = (uint64_t)v221;
  uint64_t v102 = sub_26111EB08();
  MEMORY[0x270FA5388](v102);
  *(&v200 - 10) = v101;
  *(&v200 - 9) = (uint64_t)v51;
  id v103 = v214;
  *(&v200 - 8) = v65;
  *(&v200 - 7) = (uint64_t)v103;
  uint64_t v104 = v211;
  *(&v200 - 6) = v211;
  *(&v200 - 5) = (uint64_t)&v227;
  *(&v200 - 4) = (uint64_t)&v229;
  *(&v200 - 3) = v215;
  *((unsigned char *)&v200 - 16) = v216 & 1;
  unint64_t v105 = v217;
  sub_26111EFB8();
  if (v105)
  {
    (*(void (**)(char *, uint64_t))(v219 + 8))(v16, v218);
    swift_release();

    uint64_t v106 = v213;
LABEL_73:

    return;
  }
  uint64_t v216 = v65;
  unint64_t v217 = 0;
  (*(void (**)(char *, uint64_t))(v219 + 8))(v16, v218);
  uint64_t v107 = v224[0];
  uint64_t v225 = v224[0];
  char v226 = 0;
  int v108 = (int)v209;
  if (v209) {
    unint64_t v109 = 0xE900000000000079;
  }
  else {
    unint64_t v109 = 0xEA00000000006F73;
  }
  int v110 = v210;
  if (v210) {
    id v81 = (id)0xEA0000000000796CLL;
  }
  else {
    id v81 = (id)v109;
  }
  sub_261071864(v104, (uint64_t)v208, &qword_26B40A330);
  uint64_t v111 = v104;
  uint64_t v112 = v207;
  sub_261071864(v111, v207, &qword_26B40A330);
  swift_bridgeObjectRetain();
  char v113 = sub_26111EAC8();
  int v114 = sub_26111EF48();
  if (!os_log_type_enabled(v113, (os_log_type_t)v114))
  {
    sub_2610718C8(v112, &qword_26B40A330);
    swift_bridgeObjectRelease_n();

    sub_2610718C8((uint64_t)v208, &qword_26B40A330);
    goto LABEL_119;
  }
  uint64_t v219 = (uint64_t)v113;
  LODWORD(v218) = v114;
  uint64_t v115 = 0x726F742B65636166;
  if (v108) {
    uint64_t v115 = 0x6C6E6F2D65636166;
  }
  if (v110) {
    uint64_t v116 = 0x6E6F2D6F73726F74;
  }
  else {
    uint64_t v116 = v115;
  }
  uint64_t v117 = v107;
  uint64_t v118 = swift_slowAlloc();
  uint64_t v215 = swift_slowAlloc();
  v224[0] = v215;
  *(_DWORD *)uint64_t v118 = 136316162;
  swift_beginAccess();
  if (v229) {
    uint64_t v119 = 0x7261646E6F636573;
  }
  else {
    uint64_t v119 = 0x7972616D697270;
  }
  if (v229) {
    unint64_t v120 = 0xE900000000000079;
  }
  else {
    unint64_t v120 = 0xE700000000000000;
  }
  uint64_t v222 = sub_26105CFF8(v119, v120, v224);
  sub_26111F0D8();
  swift_bridgeObjectRelease();
  *(_WORD *)(v118 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v222 = sub_26105CFF8(v116, (unint64_t)v81, v224);
  sub_26111F0D8();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v118 + 22) = 2048;
  uint64_t v222 = v117;
  sub_26111F0D8();
  *(_WORD *)(v118 + 32) = 2080;
  uint64_t v121 = v204;
  sub_261071864((uint64_t)v208, v204, &qword_26B40A330);
  uint64_t v122 = type metadata accessor for VUGallery.Context(0);
  BOOL v123 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 48);
  if (v123(v121, 1, v122) == 1)
  {
    uint64_t v124 = &qword_26B40A330;
    uint64_t v125 = v121;
  }
  else
  {
    int64_t v161 = v212;
    sub_261071864(v121 + *(int *)(v122 + 20), (uint64_t)v212, &qword_26B40AC70);
    sub_261115B2C(v121);
    uint64_t v162 = sub_26111E778();
    uint64_t v163 = *(void *)(v162 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162) != 1)
    {
      uint64_t v166 = v161;
      uint64_t v165 = sub_26111E738();
      unint64_t v164 = v167;
      (*(void (**)(char *, uint64_t))(v163 + 8))(v166, v162);
      goto LABEL_98;
    }
    uint64_t v124 = &qword_26B40AC70;
    uint64_t v125 = (uint64_t)v161;
  }
  sub_2610718C8(v125, v124);
  unint64_t v164 = 0xE200000000000000;
  uint64_t v165 = 16718;
LABEL_98:
  float v66 = v216;
  uint64_t v168 = v219;
  uint64_t v222 = sub_26105CFF8(v165, v164, v224);
  sub_26111F0D8();
  swift_bridgeObjectRelease();
  sub_2610718C8((uint64_t)v208, &qword_26B40A330);
  *(_WORD *)(v118 + 42) = 2048;
  uint64_t v169 = v205;
  sub_261071864(v207, v205, &qword_26B40A330);
  if (v123(v169, 1, v122) == 1)
  {
    sub_2610718C8(v169, &qword_26B40A330);
    uint64_t v170 = 2;
  }
  else
  {
    unsigned int v171 = *(unsigned __int8 *)(v169 + *(int *)(v122 + 24));
    sub_261115B2C(v169);
    if (v171 == 3) {
      uint64_t v170 = 2;
    }
    else {
      uint64_t v170 = v171;
    }
  }
  uint64_t v51 = v220;
  uint64_t v172 = v213;
  sub_2610718C8(v207, &qword_26B40A330);
  uint64_t v222 = v170;
  sub_26111F0D8();
  _os_log_impl(&dword_261042000, v168, (os_log_type_t)v218, "Added %s %s observation %ld for asset %s, source %ld", (uint8_t *)v118, 0x34u);
  id v81 = (id)v215;
  swift_arrayDestroy();
  MEMORY[0x26122E4F0](v81, -1, -1);
  MEMORY[0x26122E4F0](v118, -1, -1);

  while (1)
  {
    while (1)
    {
LABEL_119:
      Class v192 = v51[4].isa;
      BOOL v193 = __OFADD__(v192, 1);
      uint64_t v194 = (Class)((char *)v192 + 1);
      unint64_t v82 = v217;
      if (!v193)
      {
        v51[4].Class isa = v194;
        swift_beginAccess();
        if (v226) {
          goto LABEL_132;
        }
        goto LABEL_121;
      }
      __break(1u);
LABEL_123:
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_26111F348();
      swift_bridgeObjectRelease();
LABEL_27:
      uint64_t v209 = v66;
      if (v83) {
        break;
      }
LABEL_71:
      swift_bridgeObjectRelease();
      uint64_t v126 = (uint64_t)v221;
      uint64_t v127 = v214;
      uint64_t v128 = sub_26111EB08();
      MEMORY[0x270FA5388](v128);
      uint64_t v129 = v220;
      *(&v200 - 8) = v126;
      *(&v200 - 7) = (uint64_t)v129;
      uint64_t v130 = v211;
      uint64_t v131 = v212;
      *(&v200 - 6) = (uint64_t)v212;
      *(&v200 - 5) = v130;
      *(&v200 - 4) = (uint64_t)&v222;
      *(&v200 - 3) = (uint64_t)&v229;
      *(&v200 - 2) = v215;
      *((unsigned char *)&v200 - 8) = v216 & 1;
      unint64_t v132 = v217;
      sub_26111EFB8();
      if (v132)
      {
        (*(void (**)(char *, uint64_t))(v219 + 8))(v127, v218);
        swift_release();

        uint64_t v106 = v209;
        goto LABEL_73;
      }
      unint64_t v217 = 0;
      (*(void (**)(char *, uint64_t))(v219 + 8))(v127, v218);
      id v81 = (id)v224[0];
      uint64_t v225 = v224[0];
      char v226 = 0;
      uint64_t v148 = v206;
      sub_261071864(v130, v206, &qword_26B40A330);
      float v66 = sub_26111EAC8();
      os_log_type_t v149 = sub_26111EF48();
      uint64_t v51 = v129;
      if (os_log_type_enabled(v66, v149))
      {
        uint64_t v150 = swift_slowAlloc();
        uint64_t v151 = swift_slowAlloc();
        v224[0] = v151;
        *(_DWORD *)uint64_t v150 = 134218242;
        uint64_t v223 = (uint64_t)v81;
        sub_26111F0D8();
        *(_WORD *)(v150 + 12) = 2080;
        uint64_t v152 = v148;
        uint64_t v153 = v203;
        sub_261071864(v152, v203, &qword_26B40A330);
        uint64_t v154 = type metadata accessor for VUGallery.Context(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 48))(v153, 1, v154) == 1)
        {
          sub_2610718C8(v153, &qword_26B40A330);
          unint64_t v155 = 0xE200000000000000;
          uint64_t v156 = 16718;
        }
        else
        {
          uint64_t v173 = v210;
          sub_261071864(v153 + *(int *)(v154 + 20), v210, &qword_26B40AC70);
          sub_261115B2C(v153);
          uint64_t v174 = sub_26111E778();
          uint64_t v175 = *(void *)(v174 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v173, 1, v174) == 1)
          {
            sub_2610718C8(v173, &qword_26B40AC70);
            unint64_t v155 = 0xE200000000000000;
            uint64_t v156 = 16718;
          }
          else
          {
            uint64_t v156 = sub_26111E738();
            unint64_t v155 = v186;
            (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v173, v174);
          }
          uint64_t v51 = v220;
        }
        id v81 = (id)(v150 + 14);
        uint64_t v223 = sub_26105CFF8(v156, v155, v224);
        sub_26111F0D8();
        swift_bridgeObjectRelease();
        sub_2610718C8(v206, &qword_26B40A330);
        _os_log_impl(&dword_261042000, v66, v149, "Added animal observation %ld for asset %s", (uint8_t *)v150, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x26122E4F0](v151, -1, -1);
        MEMORY[0x26122E4F0](v150, -1, -1);
      }
      else
      {

        sub_2610718C8(v148, &qword_26B40A330);
      }
    }
    if (v83 >= 1)
    {
      uint64_t v84 = 0;
      uint64_t v213 = (char *)*MEMORY[0x263F1F098];
      while (1)
      {
        if ((v82 & 0xC000000000000001) != 0) {
          id v85 = (id)MEMORY[0x26122DAE0](v84, v82);
        }
        else {
          id v85 = *(id *)(v82 + 8 * v84 + 32);
        }
        char v86 = v85;
        id v87 = objc_msgSend(v85, sel_identifier);
        uint64_t v88 = sub_26111EBF8();
        uint64_t v90 = v89;

        if (v88 == sub_26111EBF8() && v90 == v91)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v93 = sub_26111F408();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v93)
          {
          }
          else
          {
            id v94 = objc_msgSend(v86, sel_identifier);
            uint64_t v95 = sub_26111EBF8();
            uint64_t v97 = v96;

            if (v95 == sub_26111EBF8() && v97 == v98)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v99 = sub_26111F408();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if ((v99 & 1) == 0) {
                goto LABEL_41;
              }
            }
          }
        }
        LODWORD(v222) = 1065353216;
LABEL_41:
        if (v83 == ++v84) {
          goto LABEL_71;
        }
      }
    }
    __break(1u);
LABEL_125:
    swift_bridgeObjectRetain();
    uint64_t v195 = sub_26111F348();
    swift_bridgeObjectRelease();
    uint64_t v136 = v213;
    if (!v195) {
      goto LABEL_126;
    }
LABEL_78:
    if ((v82 & 0xC000000000000001) == 0) {
      break;
    }
    id v137 = (id)MEMORY[0x26122DAE0](0, v82);
LABEL_81:
    unint64_t v138 = v137;
    swift_bridgeObjectRelease();
    uint64_t v139 = (uint64_t)v221;
    uint64_t v140 = sub_26111EB08();
    MEMORY[0x270FA5388](v140);
    char v141 = v220;
    *(&v200 - 8) = v139;
    *(&v200 - 7) = (uint64_t)v141;
    uint64_t v142 = v211;
    *(&v200 - 6) = (uint64_t)v138;
    *(&v200 - 5) = v142;
    *(&v200 - 4) = (uint64_t)v66;
    *(&v200 - 3) = (uint64_t)&v229;
    *(&v200 - 2) = v215;
    *((unsigned char *)&v200 - 8) = v216 & 1;
    unint64_t v143 = v217;
    sub_26111EFB8();
    if (v143)
    {
      (*(void (**)(char *, uint64_t))(v219 + 8))(v136, v218);
      swift_release();

      return;
    }
    unint64_t v217 = 0;
    (*(void (**)(char *, uint64_t))(v219 + 8))(v136, v218);
    uint64_t v176 = v224[0];
    uint64_t v225 = v224[0];
    char v226 = 0;
    uint64_t v177 = v202;
    sub_261071864(v142, v202, &qword_26B40A330);
    float v66 = sub_26111EAC8();
    os_log_type_t v178 = sub_26111EF48();
    if (os_log_type_enabled(v66, v178))
    {
      uint64_t v179 = swift_slowAlloc();
      uint64_t v180 = swift_slowAlloc();
      v224[0] = v180;
      *(_DWORD *)uint64_t v179 = 134218242;
      uint64_t v223 = v176;
      sub_26111F0D8();
      *(_WORD *)(v179 + 12) = 2080;
      uint64_t v181 = v177;
      uint64_t v182 = v201;
      sub_261071864(v181, v201, &qword_26B40A330);
      uint64_t v183 = type metadata accessor for VUGallery.Context(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v183 - 8) + 48))(v182, 1, v183) == 1)
      {
        sub_2610718C8(v182, &qword_26B40A330);
        unint64_t v184 = 0xE200000000000000;
        uint64_t v185 = 16718;
      }
      else
      {
        uint64_t v219 = v180;
        uint64_t v187 = v182 + *(int *)(v183 + 20);
        unint64_t v188 = v209;
        sub_261071864(v187, (uint64_t)v209, &qword_26B40AC70);
        sub_261115B2C(v182);
        uint64_t v189 = sub_26111E778();
        uint64_t v190 = *(void *)(v189 - 8);
        if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189) == 1)
        {
          sub_2610718C8((uint64_t)v188, &qword_26B40AC70);
          unint64_t v184 = 0xE200000000000000;
          uint64_t v185 = 16718;
        }
        else
        {
          uint64_t v185 = sub_26111E738();
          unint64_t v184 = v191;
          (*(void (**)(NSObject *, uint64_t))(v190 + 8))(v209, v189);
        }
        uint64_t v180 = v219;
      }
      uint64_t v223 = sub_26105CFF8(v185, v184, v224);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      sub_2610718C8(v202, &qword_26B40A330);
      _os_log_impl(&dword_261042000, v66, v178, "Added scene observation %ld for asset %s", (uint8_t *)v179, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122E4F0](v180, -1, -1);
      MEMORY[0x26122E4F0](v179, -1, -1);
    }
    else
    {

      sub_2610718C8(v177, &qword_26B40A330);
    }
    uint64_t v51 = v220;
  }
  if (*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v137 = *(id *)(v82 + 32);
    goto LABEL_81;
  }
  __break(1u);
LABEL_132:
  __break(1u);
}

uint64_t sub_261112FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t **a9@<X8>)
{
  uint64_t v64 = a8;
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  id v67 = a4;
  uint64_t v68 = a5;
  uint64_t v54 = a9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A330);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v53 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v53 - v25;
  unsigned int v27 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v66 = *(void *)(*(void *)(a1 + 16) + 16);
  unsigned int v61 = v27;
  if (a3)
  {
    swift_retain();
    id v28 = objc_msgSend(a3, sel_descriptorData);
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = (uint64_t *)sub_26111E688();
      unint64_t v59 = v31;
      uint64_t v60 = v30;
    }
    else
    {
      unint64_t v59 = 0xF000000000000000;
      uint64_t v60 = 0;
    }
    id v32 = objc_msgSend(a3, sel_requestRevision);
  }
  else
  {
    swift_retain();
    id v32 = 0;
    unint64_t v59 = 0xF000000000000000;
    uint64_t v60 = 0;
  }
  uint64_t v58 = (uint64_t)v32;
  if (v67)
  {
    id v33 = objc_msgSend(v67, sel_descriptorData);
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v35 = sub_26111E688();
      unint64_t v56 = v36;
      uint64_t v57 = v35;
    }
    else
    {
      unint64_t v56 = 0xF000000000000000;
      uint64_t v57 = 0;
    }
    uint64_t v55 = (uint64_t *)objc_msgSend(v67, sel_requestRevision);
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v55 = 0;
    unint64_t v56 = 0xF000000000000000;
  }
  sub_261071864(v68, (uint64_t)v20, &qword_26B40A330);
  uint64_t v37 = type metadata accessor for VUGallery.Context(0);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48);
  if (v38(v20, 1, v37) == 1)
  {
    sub_2610718C8((uint64_t)v20, &qword_26B40A330);
    uint64_t v39 = sub_26111E778();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v26, 1, 1, v39);
  }
  else
  {
    sub_261071864((uint64_t)v20, (uint64_t)v26, &qword_26B40AC70);
    sub_261115B2C((uint64_t)v20);
  }
  sub_261071864(v68, (uint64_t)v18, &qword_26B40A330);
  if (v38(v18, 1, v37) == 1)
  {
    sub_2610718C8((uint64_t)v18, &qword_26B40A330);
    uint64_t v40 = sub_26111E778();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v24, 1, 1, v40);
  }
  else
  {
    sub_261071864((uint64_t)&v18[*(int *)(v37 + 20)], (uint64_t)v24, &qword_26B40AC70);
    sub_261115B2C((uint64_t)v18);
  }
  sub_261071864(v68, (uint64_t)v15, &qword_26B40A330);
  if (v38(v15, 1, v37) == 1)
  {
    sub_2610718C8((uint64_t)v15, &qword_26B40A330);
    char v71 = 3;
    if (a3)
    {
LABEL_21:
      objc_msgSend(a3, sel_confidence);
      uint64_t v42 = v41;
      goto LABEL_24;
    }
  }
  else
  {
    char v43 = v15[*(int *)(v37 + 24)];
    sub_261115B2C((uint64_t)v15);
    char v71 = v43;
    if (a3) {
      goto LABEL_21;
    }
  }
  uint64_t v42 = 0;
LABEL_24:
  uint64_t v44 = v65;
  char v45 = *(unsigned char *)(v62 + 4);
  char v70 = a3 == 0;
  char v69 = v45;
  unint64_t v52 = v42 | ((unint64_t)(a3 == 0) << 32);
  unint64_t v47 = v59;
  uint64_t v46 = v60;
  unint64_t v49 = v56;
  uint64_t v48 = v57;
  int v50 = sub_2610FC150(2u, v61, v60, v59, v58, v70, v57, v56, v55, v67 == 0, (uint64_t)v26, (uint64_t)v24, (uint64_t)&v71, v52);
  swift_release();
  sub_261068AB0(v48, v49);
  sub_261068AB0((uint64_t)v46, v47);
  sub_2610718C8((uint64_t)v24, &qword_26B40AC70);
  uint64_t result = sub_2610718C8((uint64_t)v26, &qword_26B40AC70);
  if (!v44) {
    *uint64_t v54 = v50;
  }
  return result;
}

id sub_2611134EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t **a9@<X8>)
{
  uint64_t v54 = a7;
  int v49 = a8;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v44 = a9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A330);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v43 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  unsigned int v27 = (char *)&v43 - v26;
  uint64_t v28 = *(void *)(*(void *)(a1 + 16) + 16);
  unsigned int v50 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v51 = v28;
  swift_retain();
  id result = objc_msgSend(a3, sel_descriptorData);
  if (result)
  {
    uint64_t v30 = result;
    unint64_t v31 = (uint64_t *)sub_26111E688();
    unint64_t v46 = v32;
    unint64_t v47 = v31;

    id v48 = a3;
    id v45 = objc_msgSend(a3, sel_requestRevision);
    sub_261071864(a4, (uint64_t)v21, &qword_26B40A330);
    uint64_t v33 = type metadata accessor for VUGallery.Context(0);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48);
    if (v34(v21, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v21, &qword_26B40A330);
      uint64_t v35 = sub_26111E778();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v27, 1, 1, v35);
    }
    else
    {
      sub_261071864((uint64_t)v21, (uint64_t)v27, &qword_26B40AC70);
      sub_261115B2C((uint64_t)v21);
    }
    sub_261071864(a4, (uint64_t)v19, &qword_26B40A330);
    if (v34(v19, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v19, &qword_26B40A330);
      uint64_t v36 = sub_26111E778();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v25, 1, 1, v36);
    }
    else
    {
      sub_261071864((uint64_t)&v19[*(int *)(v33 + 20)], (uint64_t)v25, &qword_26B40AC70);
      sub_261115B2C((uint64_t)v19);
    }
    sub_261071864(a4, (uint64_t)v16, &qword_26B40A330);
    if (v34(v16, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v16, &qword_26B40A330);
      char v37 = 3;
    }
    else
    {
      char v37 = v16[*(int *)(v33 + 24)];
      sub_261115B2C((uint64_t)v16);
    }
    uint64_t v38 = v55;
    char v58 = v37;
    objc_msgSend(v48, sel_confidence);
    char v57 = 0;
    char v56 = 0;
    unint64_t v41 = v46;
    uint64_t v40 = v47;
    uint64_t v42 = sub_2610FC150(0x3Fu, v50, v47, v46, (uint64_t)v45, 0, 0, 0xF000000000000000, 0, 1, (uint64_t)v27, (uint64_t)v25, (uint64_t)&v58, v39);
    swift_release();
    sub_26106899C((uint64_t)v40, v41);
    sub_2610718C8((uint64_t)v25, &qword_26B40AC70);
    id result = (id)sub_2610718C8((uint64_t)v27, &qword_26B40AC70);
    if (!v38) {
      *uint64_t v44 = v42;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_261113974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t **a9@<X8>)
{
  uint64_t v52 = a7;
  int v47 = a8;
  id v50 = a5;
  uint64_t v51 = a6;
  uint64_t v43 = a9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A330);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v43 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  unsigned int v27 = (char *)&v43 - v26;
  uint64_t v28 = *(void *)(*(void *)(a1 + 16) + 16);
  unsigned int v48 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v49 = v28;
  swift_retain();
  id result = objc_msgSend(a3, sel_descriptorData);
  if (result)
  {
    uint64_t v30 = result;
    unint64_t v31 = (uint64_t *)sub_26111E688();
    unint64_t v45 = v32;
    unint64_t v46 = v31;

    id v44 = objc_msgSend(a3, sel_requestRevision);
    sub_261071864(a4, (uint64_t)v21, &qword_26B40A330);
    uint64_t v33 = type metadata accessor for VUGallery.Context(0);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48);
    if (v34(v21, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v21, &qword_26B40A330);
      uint64_t v35 = sub_26111E778();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v27, 1, 1, v35);
    }
    else
    {
      sub_261071864((uint64_t)v21, (uint64_t)v27, &qword_26B40AC70);
      sub_261115B2C((uint64_t)v21);
    }
    sub_261071864(a4, (uint64_t)v19, &qword_26B40A330);
    if (v34(v19, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v19, &qword_26B40A330);
      uint64_t v36 = sub_26111E778();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v25, 1, 1, v36);
    }
    else
    {
      sub_261071864((uint64_t)&v19[*(int *)(v33 + 20)], (uint64_t)v25, &qword_26B40AC70);
      sub_261115B2C((uint64_t)v19);
    }
    sub_261071864(a4, (uint64_t)v16, &qword_26B40A330);
    if (v34(v16, 1, v33) == 1)
    {
      sub_2610718C8((uint64_t)v16, &qword_26B40A330);
      char v37 = 3;
    }
    else
    {
      char v37 = v16[*(int *)(v33 + 24)];
      sub_261115B2C((uint64_t)v16);
    }
    uint64_t v38 = v53;
    char v56 = v37;
    objc_msgSend(v50, sel_confidence, v43);
    char v55 = 0;
    char v54 = 0;
    unint64_t v41 = v45;
    uint64_t v40 = v46;
    uint64_t v42 = sub_2610FC150(6u, v48, v46, v45, (uint64_t)v44, 0, 0, 0xF000000000000000, 0, 1, (uint64_t)v27, (uint64_t)v25, (uint64_t)&v56, v39);
    swift_release();
    sub_26106899C((uint64_t)v40, v41);
    sub_2610718C8((uint64_t)v25, &qword_26B40AC70);
    id result = (id)sub_2610718C8((uint64_t)v27, &qword_26B40AC70);
    if (!v38) {
      *uint64_t v43 = v42;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_261113DF4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = 0;
  sub_261111464(a1, a2, &v4, a3, a4 & 1);
}

void sub_261113E28(uint64_t a1)
{
  uint64_t v4 = sub_26111EB18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 24);
  if (v8)
  {
    swift_retain();
    uint64_t v9 = sub_26111EB08();
    MEMORY[0x270FA5388](v9);
    v20[-2] = v8;
    v20[-1] = a1;
    sub_26111EFB8();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v14 = *(void *)(v1 + 40);
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v1 + 40) = v16;
        uint64_t v17 = sub_26111EAC8();
        os_log_type_t v18 = sub_26111EF48();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 134217984;
          v20[1] = a1;
          sub_26111F0D8();
          _os_log_impl(&dword_261042000, v17, v18, "Removed observation %ld", v19, 0xCu);
          MEMORY[0x26122E4F0](v19, -1, -1);
        }
        swift_release();
      }
    }
  }
  else
  {
    uint64_t v10 = sub_26111EAC8();
    os_log_type_t v11 = sub_26111EF58();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_261042000, v10, v11, "Bad internal state: gallery is not available", v12, 2u);
      MEMORY[0x26122E4F0](v12, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v13 = 4;
    swift_willThrow();
  }
}

void sub_261114114(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 16);
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v4 + 16) = xmmword_261120090;
  uint64_t v6 = MEMORY[0x263F8D750];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a2;
  swift_retain();
  uint64_t v8 = (void *)sub_26111EEF8();
  id v7 = *(id *)(v3 + 16);
  sub_26111F028();
  swift_release();
}

void sub_261114230(uint64_t a1)
{
  uint64_t v4 = sub_26111EB18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 24);
  if (v8)
  {
    swift_retain();
    uint64_t v9 = sub_26111EB08();
    MEMORY[0x270FA5388](v9);
    v21[-2] = v8;
    v21[-1] = a1;
    sub_26111EFB8();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v15 = *(void *)(v1 + 40);
      BOOL v16 = __OFADD__(v15, v14);
      uint64_t v17 = v15 + v14;
      if (v16)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v1 + 40) = v17;
        swift_bridgeObjectRetain();
        os_log_type_t v18 = sub_26111EAC8();
        os_log_type_t v19 = sub_26111EF48();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 134217984;
          v21[1] = v14;
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_261042000, v18, v19, "Removed %ld observations", v20, 0xCu);
          MEMORY[0x26122E4F0](v20, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_release();
      }
    }
  }
  else
  {
    uint64_t v10 = sub_26111EAC8();
    os_log_type_t v11 = sub_26111EF58();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_261042000, v10, v11, "Bad internal state: gallery is not available", v12, 2u);
      MEMORY[0x26122E4F0](v12, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v13 = 4;
    swift_willThrow();
  }
}

void sub_26111453C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 16);
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_261120090;
  *(void *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A360);
  *(void *)(v4 + 64) = sub_26111635C();
  *(void *)(v4 + 32) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_26111EEF8();
  id v5 = *(id *)(v3 + 16);
  sub_26111F028();
  swift_release();
}

void sub_26111466C(uint64_t a1)
{
}

void sub_2611146A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 16);
  __int16 v4 = *(unsigned __int8 *)(a3 + 16);
  sub_261071924(0, &qword_26B40ABC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B40ABD0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2611200A0;
  swift_retain();
  uint64_t v6 = sub_26111E738();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_2610FBE6C();
  uint64_t v9 = MEMORY[0x263F8E4F0];
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  uint64_t v10 = MEMORY[0x263F8E538];
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = v10;
  *(_WORD *)(v5 + 72) = v4;
  uint64_t v12 = (void *)sub_26111EEF8();
  id v11 = *(id *)(v3 + 16);
  sub_26111F028();
  swift_release();
}

void sub_2611147F4(uint64_t a1)
{
}

void sub_261114828(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = v3;
  uint64_t v34 = a1;
  uint64_t v32 = sub_26111E778();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26111EB18();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v6 + 24);
  if (v13)
  {
    uint64_t v30 = a3;
    uint64_t v31 = v7;
    swift_retain();
    uint64_t v14 = sub_26111EB08();
    MEMORY[0x270FA5388](v14);
    uint64_t v15 = v34;
    v29[-4] = v13;
    v29[-3] = v15;
    v29[-2] = v6;
    sub_26111EFB8();
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v21 = v31;
      uint64_t v20 = v32;
      uint64_t v22 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v34, v32);
      uint64_t v23 = sub_26111EAC8();
      os_log_type_t v24 = sub_26111EF38();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v36 = v34;
        *(_DWORD *)uint64_t v25 = 136315138;
        v29[1] = v25 + 4;
        uint64_t v26 = sub_26111E738();
        uint64_t v35 = sub_26105CFF8(v26, v27, &v36);
        sub_26111F0D8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v33, v20);
        _os_log_impl(&dword_261042000, v23, v24, v30, v25, 0xCu);
        uint64_t v28 = v34;
        swift_arrayDestroy();
        MEMORY[0x26122E4F0](v28, -1, -1);
        MEMORY[0x26122E4F0](v25, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();

        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
      }
    }
  }
  else
  {
    BOOL v16 = sub_26111EAC8();
    os_log_type_t v17 = sub_26111EF58();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v18 = 0;
      _os_log_impl(&dword_261042000, v16, v17, "Bad internal state: gallery is not available", v18, 2u);
      MEMORY[0x26122E4F0](v18, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *os_log_type_t v19 = 4;
    swift_willThrow();
  }
}

void sub_261114C4C(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(a1 + 16) + 16) + 16);
  swift_retain();
  id v2 = v1;
  sub_26111F028();
  swift_release();
}

BOOL static VUGalleryTransaction.TagType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VUGalleryTransaction.TagType.hash(into:)()
{
  return sub_26111F4D8();
}

uint64_t VUGalleryTransaction.TagType.hashValue.getter()
{
  return sub_26111F508();
}

void sub_261114D70(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned __int8 v7 = *a3;
  if (*(unsigned char *)(v3 + 16)) {
    BOOL v4 = *(unsigned char *)(v3 + 16) == 5;
  }
  else {
    BOOL v4 = 1;
  }
  char v5 = !v4;
  char v6 = v5;
  sub_261114DB4(a1, a2, &v7, &v6);
}

void sub_261114DB4(uint64_t a1, uint64_t a2, unsigned __int8 *a3, char *a4)
{
  uint64_t v49 = a1;
  uint64_t v5 = v4;
  uint64_t v9 = sub_26111E778();
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_26111EB18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v5 + 24);
  if (v15)
  {
    int v16 = *a3;
    char v17 = *a4;
    if ((*a4 & 1) != 0 || !*(unsigned char *)(v5 + 16) || *(unsigned char *)(v5 + 16) == 5)
    {
      uint64_t v45 = v9;
      int v52 = v16;
      if (v16)
      {
        if (v16 == 1) {
          char v18 = 1;
        }
        else {
          char v18 = 2;
        }
        char v53 = v18;
      }
      else
      {
        char v53 = 0;
      }
      swift_retain();
      uint64_t v23 = sub_26111EB08();
      MEMORY[0x270FA5388](v23);
      uint64_t v25 = v48;
      uint64_t v24 = v49;
      *(&v44 - 6) = v15;
      *(&v44 - 5) = v24;
      *(&v44 - 4) = a2;
      *(&v44 - 3) = (uint64_t)&v53;
      *((unsigned char *)&v44 - 16) = v17;
      sub_26111EFB8();
      if (v25)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        unint64_t v27 = v46;
        uint64_t v26 = v47;
        uint64_t v28 = a2;
        uint64_t v29 = v45;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v28, v45);
        uint64_t v30 = sub_26111EAC8();
        os_log_type_t v31 = sub_26111EF38();
        int v32 = v31;
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v33 = swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          uint64_t v48 = v34;
          *(_DWORD *)uint64_t v33 = 134218498;
          uint64_t v50 = v49;
          uint64_t v51 = v34;
          sub_26111F0D8();
          *(_WORD *)(v33 + 12) = 2080;
          LODWORD(v49) = v32;
          LOBYTE(v50) = v52;
          uint64_t v35 = sub_26111EC08();
          uint64_t v50 = sub_26105CFF8(v35, v36, &v51);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 22) = 2080;
          uint64_t v37 = sub_26111E738();
          uint64_t v50 = sub_26105CFF8(v37, v38, &v51);
          sub_26111F0D8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v45);
          _os_log_impl(&dword_261042000, v30, (os_log_type_t)v49, "Tagged observation %ld with %s tag %s", (uint8_t *)v33, 0x20u);
          uint64_t v39 = v48;
          swift_arrayDestroy();
          MEMORY[0x26122E4F0](v39, -1, -1);
          MEMORY[0x26122E4F0](v33, -1, -1);
          swift_release();
        }
        else
        {
          swift_release();

          (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
        }
      }
    }
    else
    {
      swift_retain();
      uint64_t v40 = sub_26111EAC8();
      os_log_type_t v41 = sub_26111EF58();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl(&dword_261042000, v40, v41, "Unable to tag observation: primary tags are currently only supported for Photos", v42, 2u);
        MEMORY[0x26122E4F0](v42, -1, -1);
      }

      sub_261046B60();
      swift_allocError();
      *uint64_t v43 = 6;
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    os_log_type_t v19 = sub_26111EAC8();
    os_log_type_t v20 = sub_26111EF58();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_261042000, v19, v20, "Bad internal state: gallery is not available", v21, 2u);
      MEMORY[0x26122E4F0](v21, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v22 = 4;
    swift_willThrow();
  }
}

void sub_261115364(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(a1 + 16) + 16) + 16);
  swift_retain();
  id v2 = v1;
  sub_26111F028();
  swift_release();
}

void sub_26111540C(uint64_t a1)
{
  uint64_t v4 = sub_26111EB18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned __int8 v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 24);
  if (v8)
  {
    swift_retain();
    uint64_t v9 = sub_26111EB08();
    MEMORY[0x270FA5388](v9);
    v17[-2] = v8;
    v17[-1] = a1;
    sub_26111EFB8();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v14 = sub_26111EAC8();
      os_log_type_t v15 = sub_26111EF38();
      if (os_log_type_enabled(v14, v15))
      {
        int v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int v16 = 134217984;
        v17[1] = a1;
        sub_26111F0D8();
        _os_log_impl(&dword_261042000, v14, v15, "Untagged observation %ld", v16, 0xCu);
        MEMORY[0x26122E4F0](v16, -1, -1);
      }
      swift_release();
    }
  }
  else
  {
    uint64_t v10 = sub_26111EAC8();
    os_log_type_t v11 = sub_26111EF58();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_261042000, v10, v11, "Bad internal state: gallery is not available", v12, 2u);
      MEMORY[0x26122E4F0](v12, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v13 = 4;
    swift_willThrow();
  }
}

void sub_2611156E4(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(a1 + 16) + 16) + 16);
  swift_retain();
  id v2 = v1;
  sub_26111F028();
  swift_release();
}

void sub_261115774()
{
  uint64_t v2 = sub_26111EB18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 24))
  {
    swift_retain();
    sub_26111EB08();
    sub_26111EFB8();
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v10 = sub_26111EAC8();
      os_log_type_t v11 = sub_26111EF38();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_261042000, v10, v11, "Persisted the gallery state", v12, 2u);
        MEMORY[0x26122E4F0](v12, -1, -1);
      }
      swift_release();
    }
  }
  else
  {
    uint64_t v6 = sub_26111EAC8();
    os_log_type_t v7 = sub_26111EF58();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_261042000, v6, v7, "Bad internal state: gallery is not available", v8, 2u);
      MEMORY[0x26122E4F0](v8, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *uint64_t v9 = 4;
    swift_willThrow();
  }
}

uint64_t VUGalleryTransaction.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUGalleryTransaction_logger;
  uint64_t v2 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t VUGalleryTransaction.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19VisualUnderstanding20VUGalleryTransaction_logger;
  uint64_t v2 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_261115B00@<X0>(uint64_t **a1@<X8>)
{
  return sub_261113974(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), a1);
}

uint64_t sub_261115B2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VUGallery.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_261115B88@<X0>(uint64_t **a1@<X8>)
{
  return sub_2611134EC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), a1);
}

uint64_t sub_261115BB4@<X0>(uint64_t **a1@<X8>)
{
  return sub_261112FBC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), a1);
}

uint64_t sub_261115BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40A330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_261115C54()
{
  sub_261114114(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_261115C70()
{
  sub_26111453C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_261115C8C()
{
  sub_2611146A0(v0[2], v0[3], v0[4]);
}

void sub_261115CAC()
{
  sub_261114C4C(*(void *)(v0 + 16));
}

void sub_261115CCC()
{
  sub_261115364(*(void *)(v0 + 16));
}

void sub_261115CF0()
{
  sub_2611156E4(*(void *)(v0 + 16));
}

unint64_t sub_261115D10()
{
  unint64_t result = qword_26A910758;
  if (!qword_26A910758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910758);
  }
  return result;
}

unint64_t sub_261115D68()
{
  unint64_t result = qword_26A910760;
  if (!qword_26A910760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910760);
  }
  return result;
}

uint64_t sub_261115DBC()
{
  return type metadata accessor for VUGalleryTransaction();
}

uint64_t type metadata accessor for VUGalleryTransaction()
{
  uint64_t result = qword_26B40A290;
  if (!qword_26B40A290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261115E10()
{
  uint64_t result = sub_26111EAE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VUGalleryTransaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VUGalleryTransaction);
}

uint64_t dispatch thunk of VUGalleryTransaction.add(observation:context:priority:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v5 + 200))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of VUGalleryTransaction.add(observation:context:at:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v4 + 208))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of VUGalleryTransaction.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of VUGalleryTransaction.remove(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of VUGalleryTransaction.removeAll(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of VUGalleryTransaction.tag(_:with:type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of VUGalleryTransaction.tag(_:with:type:priority:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of VUGalleryTransaction.untag(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

unsigned char *storeEnumTagSinglePayload for VUGalleryTransaction.Priority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2611161B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGalleryTransaction.Priority()
{
  return &type metadata for VUGalleryTransaction.Priority;
}

unsigned char *storeEnumTagSinglePayload for VUGalleryTransaction.TagType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2611162BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VUGalleryTransaction.TagType()
{
  return &type metadata for VUGalleryTransaction.TagType;
}

void sub_2611162F4()
{
  sub_2610F6708(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_261116310()
{
  sub_2610F58E4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

void sub_261116338()
{
  sub_2610F4A18(*(void *)(v0 + 16), *(_WORD *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_26111635C()
{
  unint64_t result = qword_26B40A370;
  if (!qword_26B40A370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B40A360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B40A370);
  }
  return result;
}

uint64_t sub_2611163B8()
{
  return swift_release();
}

void sub_2611163F8()
{
}

uint64_t sub_261116410(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_2610621D0(0, v2, 0);
  uint64_t v3 = v9;
  if (v2)
  {
    unsigned int v4 = (unint64_t *)(a1 + 40);
    while (1)
    {
      sub_26106A668(*(v4 - 1), *v4);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A320);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2610621D0(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v9;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2610621D0(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v9;
      }
      v4 += 2;
      *(void *)(v3 + 16) = v6 + 1;
      *(_OWORD *)(v3 + 16 * v6 + 32) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    sub_261068AB0(0, 0xF000000000000000);
    return 0;
  }
  return v3;
}

uint64_t sub_261116564(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_26111F2B8();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_26106A31C(i, (uint64_t)v5);
    type metadata accessor for VUIndexTag();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_26111F288();
    sub_26111F2C8();
    sub_26111F2D8();
    sub_26111F298();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_261116660(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26108BDA8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_261118B90(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2611166CC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_261062564(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_261062564(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_261062564(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_261070F60(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2611167F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_261062254(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      sub_26106A67C(*(v4 - 1), *v4);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B40A320);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_261062254(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_261062254(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 2;
      *(void *)(v2 + 16) = v6 + 1;
      *(_OWORD *)(v2 + 16 * v6 + 32) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_261116924(char *a1)
{
  uint64_t v2 = v1;
  id v94 = a1;
  uint64_t v3 = sub_26111E618();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  id v81 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v76 - v7;
  uint64_t v9 = sub_26111E978();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unsigned int v80 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v76 - v12;
  uint64_t v84 = v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_signposter;
  sub_26111EA58();
  uint64_t v14 = v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_logger;
  sub_26111EAD8();
  *(void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore__identifiersMapping) = MEMORY[0x263F8EE80];
  *(void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_secondaryIdentifiers) = MEMORY[0x263F8EE78];
  os_log_type_t v15 = *(void (**)(char *))(v4 + 16);
  int v16 = v94;
  v15(v8);
  uint64_t v17 = v85;
  sub_26111E948();
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
    uint64_t v18 = sub_26111EA68();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v84, v18);
    uint64_t v19 = sub_26111EAE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v14, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for VUVectorSearchStore();
    swift_deallocPartialClassInstance();
    return v2;
  }
  uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v15;
  uint64_t v79 = v4 + 16;
  uint64_t v20 = v4;
  uint64_t v84 = v3;
  uint64_t v85 = 0;
  uint64_t v21 = v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbConfig;
  uint64_t v23 = v82;
  uint64_t v22 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbConfig, v13, v83);
  uint64_t v76 = v21;
  uint64_t v90 = sub_26111E958();
  uint64_t v91 = v24;
  uint64_t v88 = 46;
  unint64_t v89 = 0xE100000000000000;
  uint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  sub_26111BDB4();
  sub_26111BE08();
  sub_26111EEE8();
  swift_bridgeObjectRelease();
  uint64_t result = v92;
  unint64_t v26 = HIBYTE(v93) & 0xF;
  uint64_t v27 = v92 & 0xFFFFFFFFFFFFLL;
  if ((v93 & 0x2000000000000000) != 0) {
    unint64_t v28 = HIBYTE(v93) & 0xF;
  }
  else {
    unint64_t v28 = v92 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  uint64_t v77 = v20;
  if (!v28)
  {
    uint64_t v55 = v29;
    swift_bridgeObjectRelease();
    uint64_t v50 = v55;
    uint64_t v51 = v94;
    goto LABEL_58;
  }
  if ((v93 & 0x1000000000000000) != 0)
  {
    uint64_t v56 = v29;
    uint64_t v35 = (uint64_t)sub_2610FACA0(v92, v93, 10);
    char v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v50 = v56;
    uint64_t v51 = v94;
    if ((v58 & 1) == 0) {
      goto LABEL_55;
    }
    goto LABEL_58;
  }
  if ((v93 & 0x2000000000000000) == 0)
  {
    uint64_t v31 = v29;
    int v32 = v94;
    if ((v92 & 0x1000000000000000) != 0) {
      uint64_t v33 = (unsigned __int8 *)((v93 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v33 = (unsigned __int8 *)sub_26111F278();
    }
    uint64_t v34 = v85;
    uint64_t v35 = (uint64_t)sub_2610FAC88(v33, v27, 10);
    uint64_t v85 = v34;
    char v37 = v36 & 1;
    goto LABEL_54;
  }
  uint64_t v90 = v92;
  uint64_t v91 = v93 & 0xFFFFFFFFFFFFFFLL;
  int v32 = v94;
  if (v92 == 43)
  {
    if (!v26) {
      goto LABEL_71;
    }
    if (v26 == 1 || (BYTE1(v92) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v35 = (BYTE1(v92) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v92) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v35 = 10 * (BYTE1(v92) - 48) + (BYTE2(v92) - 48);
      unint64_t v38 = v26 - 3;
      if (v38)
      {
        uint64_t v39 = (unsigned __int8 *)&v90 + 3;
        while (1)
        {
          unsigned int v40 = *v39 - 48;
          if (v40 > 9) {
            goto LABEL_52;
          }
          uint64_t v41 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63) {
            goto LABEL_52;
          }
          uint64_t v35 = v41 + v40;
          if (__OFADD__(v41, v40)) {
            goto LABEL_52;
          }
          char v37 = 0;
          ++v39;
          if (!--v38) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_45:
    uint64_t v31 = v29;
    char v37 = 0;
    goto LABEL_54;
  }
  if (v92 != 45)
  {
    if (!v26 || (v92 - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v35 = (v92 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v92) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v35 = 10 * (v92 - 48) + (BYTE1(v92) - 48);
      unint64_t v42 = v26 - 2;
      if (v42)
      {
        uint64_t v43 = (unsigned __int8 *)&v90 + 2;
        while (1)
        {
          unsigned int v44 = *v43 - 48;
          if (v44 > 9) {
            goto LABEL_52;
          }
          uint64_t v45 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63) {
            goto LABEL_52;
          }
          uint64_t v35 = v45 + v44;
          if (__OFADD__(v45, v44)) {
            goto LABEL_52;
          }
          char v37 = 0;
          ++v43;
          if (!--v42) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v92) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        uint64_t v31 = v29;
        char v37 = 0;
        uint64_t v35 = -(uint64_t)(BYTE1(v92) - 48);
        goto LABEL_54;
      }
      if ((BYTE2(v92) - 48) <= 9u)
      {
        uint64_t v35 = -10 * (BYTE1(v92) - 48) - (BYTE2(v92) - 48);
        unint64_t v46 = v26 - 3;
        if (!v46) {
          goto LABEL_45;
        }
        uint64_t v47 = (unsigned __int8 *)&v90 + 3;
        while (1)
        {
          unsigned int v48 = *v47 - 48;
          if (v48 > 9) {
            break;
          }
          uint64_t v49 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63) {
            break;
          }
          uint64_t v35 = v49 - v48;
          if (__OFSUB__(v49, v48)) {
            break;
          }
          char v37 = 0;
          ++v47;
          if (!--v46) {
            goto LABEL_53;
          }
        }
LABEL_52:
        uint64_t v35 = 0;
        char v37 = 1;
LABEL_53:
        uint64_t v31 = v29;
LABEL_54:
        swift_bridgeObjectRelease();
        uint64_t v50 = v31;
        uint64_t v51 = v32;
        if ((v37 & 1) == 0)
        {
LABEL_55:
          *(void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision) = v35;
          char v53 = v80;
          int v52 = v81;
          uint64_t v54 = v84;
LABEL_64:
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v53, v76, v50);
          sub_26111E938();
          swift_allocObject();
          *(void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbClient) = sub_26111E8F8();
          v78(v52, (uint64_t)v51, v54);
          swift_retain_n();
          uint64_t v66 = sub_26111EAC8();
          os_log_type_t v67 = sub_26111EF38();
          int v68 = v67;
          if (os_log_type_enabled(v66, v67))
          {
            uint64_t v69 = swift_slowAlloc();
            uint64_t v83 = swift_slowAlloc();
            uint64_t v92 = v83;
            *(_DWORD *)uint64_t v69 = 136315394;
            sub_26111BE5C(&qword_26A910128, MEMORY[0x263F06EA8]);
            LODWORD(v82) = v68;
            uint64_t v70 = sub_26111F3E8();
            uint64_t v90 = sub_26105CFF8(v70, v71, &v92);
            sub_26111F0D8();
            swift_bridgeObjectRelease();
            os_log_type_t v72 = *(void (**)(char *, uint64_t))(v77 + 8);
            v72(v52, v54);
            *(_WORD *)(v69 + 12) = 2048;
            uint64_t v73 = *(void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision);
            swift_release();
            uint64_t v90 = v73;
            uint64_t v54 = v84;
            sub_26111F0D8();
            swift_release();
            _os_log_impl(&dword_261042000, v66, (os_log_type_t)v82, "Initialized VectorDB client at path %s with revision %ld", (uint8_t *)v69, 0x16u);
            uint64_t v74 = v83;
            swift_arrayDestroy();
            MEMORY[0x26122E4F0](v74, -1, -1);
            uint64_t v75 = v69;
            uint64_t v51 = v94;
            MEMORY[0x26122E4F0](v75, -1, -1);
          }
          else
          {

            swift_release();
            os_log_type_t v72 = *(void (**)(char *, uint64_t))(v77 + 8);
            v72(v52, v54);
            swift_release();
          }
          sub_26111E918();
          v72(v51, v54);
          return v2;
        }
LABEL_58:
        uint64_t v59 = v50;
        uint64_t v92 = sub_26111E548();
        unint64_t v93 = v60;
        uint64_t v90 = 3425357;
        uint64_t v91 = 0xE300000000000000;
        sub_26105CFA4();
        char v61 = sub_26111F0F8();
        swift_bridgeObjectRelease();
        if (v61)
        {
          uint64_t v62 = OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision;
          uint64_t v63 = 4;
        }
        else
        {
          uint64_t v92 = sub_26111E548();
          unint64_t v93 = v64;
          uint64_t v90 = 3359821;
          uint64_t v91 = 0xE300000000000000;
          char v65 = sub_26111F0F8();
          swift_bridgeObjectRelease();
          uint64_t v62 = OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_embeddingRevision;
          if (v65) {
            uint64_t v63 = 3;
          }
          else {
            uint64_t v63 = 2;
          }
        }
        *(void *)(v2 + v62) = v63;
        uint64_t v54 = v84;
        char v53 = v80;
        int v52 = v81;
        uint64_t v50 = v59;
        goto LABEL_64;
      }
    }
LABEL_33:
    uint64_t v31 = v29;
    uint64_t v35 = 0;
    char v37 = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_2611173EC()
{
  uint64_t v1 = v0;
  sub_26111E928();
  uint64_t v2 = v0 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbConfig;
  uint64_t v3 = sub_26111E978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  uint64_t v4 = v1 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_signposter;
  uint64_t v5 = sub_26111EA68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v1 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_logger;
  uint64_t v7 = sub_26111EAE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_261117558()
{
  return type metadata accessor for VUVectorSearchStore();
}

uint64_t type metadata accessor for VUVectorSearchStore()
{
  uint64_t result = qword_26A910770;
  if (!qword_26A910770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2611175AC()
{
  uint64_t result = sub_26111E978();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_26111EA68();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_26111EAE8();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_2611176DC(void (*a1)(void), uint64_t a2)
{
  uint64_t v158 = a2;
  uint64_t v157 = a1;
  unint64_t v3 = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_26111E778();
  uint64_t v161 = *(void *)(v171 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v171);
  unint64_t v164 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v163 = (char *)&v142 - v9;
  uint64_t v155 = sub_26111EA78();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v11 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_26111E9F8();
  uint64_t v159 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_26111EA38();
  uint64_t v160 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v142 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v174 = (char *)&v142 - v22;
  uint64_t v23 = (void *)(v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore__identifiersMapping);
  swift_beginAccess();
  if (!*(void *)(*v23 + 16))
  {
    uint64_t v168 = (void *)v12;
    uint64_t v169 = v14;
    uint64_t v156 = v11;
    os_log_type_t v149 = v21;
    int64_t v147 = v18;
    uint64_t v24 = v160;
    uint64_t v151 = v15;
    uint64_t v25 = v2;
    uint64_t v26 = v2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_signposter;
    sub_26111EA48();
    sub_26111EA08();
    uint64_t v145 = v26;
    uint64_t v27 = sub_26111EA48();
    os_signpost_type_t v28 = sub_26111F018();
    if (sub_26111F0B8())
    {
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      unint64_t v30 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v31 = v149;
      uint64_t v172 = v25;
      uint64_t v32 = v151;
      uint64_t v148 = v29;
      v29(v149, v174, v151);
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      int64_t v173 = (int64_t)v23;
      uint64_t v34 = v33;
      *(_WORD *)uint64_t v33 = 0;
      os_signpost_id_t v35 = sub_26111EA18();
      os_signpost_type_t v36 = v28;
      uint64_t v37 = v32;
      uint64_t v25 = v172;
      _os_signpost_emit_with_name_impl(&dword_261042000, v27, v36, v35, "fetchAssetMapping", "", v34, 2u);
      unint64_t v38 = v34;
      uint64_t v23 = (void *)v173;
      MEMORY[0x26122E4F0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v37);
    }
    else
    {

      uint64_t v148 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
      unint64_t v30 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v37 = v151;
      uint64_t v31 = v149;
    }
    uint64_t v39 = v174;
    unint64_t v142 = v30;
    v148(v31, v174, v37);
    sub_26111EAA8();
    swift_allocObject();
    uint64_t v146 = sub_26111EA98();
    unsigned int v40 = *(void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v160 = v24 + 8;
    v40(v39, v37);
    uint64_t v41 = *(void *)(v25 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbClient);
    uint64_t v42 = sub_26111E8D8();
    uint64_t v144 = v40;
    uint64_t v50 = v42;
    double Current = CFAbsoluteTimeGetCurrent();
    int v52 = v156;
    if (v50 >= 1)
    {
      double v53 = Current;
      uint64_t v54 = 0;
      uint64_t v172 = v159 + 16;
      uint64_t v170 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 8);
      uint64_t v55 = v157;
      uint64_t v56 = v168;
      unint64_t v143 = v6;
      uint64_t v150 = v41;
      uint64_t v162 = v50;
      do
      {
        unint64_t v167 = v54 + 32;
        BOOL v58 = __OFADD__(v54, 256);
        LODWORD(v166) = v58;
        uint64_t v165 = (void (**)(uint64_t, uint64_t))MEMORY[0x26122DE00]();
        uint64_t v59 = sub_26111E8E8();
        if (v3)
        {

          unint64_t v3 = 0;
        }
        else
        {
          uint64_t v60 = *(void *)(v59 + 16);
          if (v60)
          {
            uint64_t v153 = 0;
            unint64_t v61 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
            uint64_t v152 = v59;
            unint64_t v62 = v59 + v61;
            uint64_t v63 = *(char **)(v159 + 16);
            int64_t v173 = *(void *)(v159 + 72);
            uint64_t v174 = v63;
            uint64_t v64 = (uint64_t)v169;
            ((void (*)(char *, unint64_t, void *))v63)(v169, v62, v56);
            while (1)
            {
              uint64_t v66 = sub_26111E9D8();
              if (v67)
              {
                uint64_t v68 = v66;
                uint64_t v69 = v67;
                uint64_t v70 = sub_26111E9C8();
                swift_beginAccess();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v175 = (void *)*v23;
                os_log_type_t v72 = v175;
                uint64_t v73 = v23;
                *uint64_t v23 = 0x8000000000000000;
                unint64_t v75 = sub_26105D6EC(v70);
                uint64_t v76 = v72[2];
                BOOL v77 = (v74 & 1) == 0;
                uint64_t v78 = v76 + v77;
                if (__OFADD__(v76, v77))
                {
LABEL_83:
                  __break(1u);
LABEL_84:
                  __break(1u);
                  goto LABEL_85;
                }
                char v79 = v74;
                if (v72[3] >= v78)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_26107BF9C();
                  }
                }
                else
                {
                  sub_261077A10(v78, isUniquelyReferenced_nonNull_native);
                  unint64_t v80 = sub_26105D6EC(v70);
                  if ((v79 & 1) != (v81 & 1)) {
                    goto LABEL_88;
                  }
                  unint64_t v75 = v80;
                }
                uint64_t v56 = v168;
                uint64_t v82 = v175;
                if (v79)
                {
                  char v65 = (uint64_t *)(v175[7] + 16 * v75);
                  swift_bridgeObjectRelease();
                  *char v65 = v68;
                  v65[1] = v69;
                }
                else
                {
                  v175[(v75 >> 6) + 8] |= 1 << v75;
                  *(void *)(v82[6] + 8 * v75) = v70;
                  uint64_t v83 = (uint64_t *)(v82[7] + 16 * v75);
                  *uint64_t v83 = v68;
                  v83[1] = v69;
                  uint64_t v84 = v82[2];
                  BOOL v85 = __OFADD__(v84, 1);
                  uint64_t v86 = v84 + 1;
                  if (v85) {
                    goto LABEL_84;
                  }
                  void v82[2] = v86;
                }
                uint64_t v23 = v73;
                *uint64_t v73 = v82;
                swift_bridgeObjectRelease();
                swift_endAccess();
                uint64_t v64 = (uint64_t)v169;
              }
              ((void (*)(uint64_t, void *))*v170)(v64, v56);
              v62 += v173;
              if (!--v60) {
                break;
              }
              ((void (*)(uint64_t, unint64_t, void *))v174)(v64, v62, v56);
            }
            swift_bridgeObjectRelease();
            uint64_t v6 = v143;
            unint64_t v3 = v153;
            int v52 = v156;
            uint64_t v55 = v157;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        double v87 = CFAbsoluteTimeGetCurrent();
        if (v87 - v53 <= 1.0)
        {
          BOOL v88 = 1;
        }
        else
        {
          double v53 = v87;
          BOOL v88 = v55 == 0;
        }
        if (!v88)
        {
          v55();
          double v53 = v87;
        }
        uint64_t v54 = v167;
        int v57 = (int)v166;
        if ((uint64_t)v167 >= v162) {
          int v57 = 1;
        }
      }
      while (v57 != 1);
    }
    uint64_t v43 = sub_26111EA48();
    unsigned int v44 = v147;
    sub_26111EA88();
    os_signpost_type_t v45 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      sub_26111EAB8();
      swift_release();
      uint64_t v46 = v154;
      uint64_t v47 = v155;
      if ((*(unsigned int (**)(char *, uint64_t))(v154 + 88))(v52, v155) == *MEMORY[0x263F90238])
      {
        unsigned int v48 = v23;
        uint64_t v49 = "[Error] Interval already ended";
      }
      else
      {
        unint64_t v89 = v52;
        unsigned int v48 = v23;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v89, v47);
        uint64_t v49 = "";
      }
      uint64_t v90 = v149;
      uint64_t v91 = v147;
      uint64_t v92 = v151;
      v148(v149, v147, v151);
      unint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v93 = 0;
      os_signpost_id_t v94 = sub_26111EA18();
      uint64_t v95 = v49;
      uint64_t v96 = v92;
      _os_signpost_emit_with_name_impl(&dword_261042000, v43, v45, v94, "fetchAssetMapping", v95, v93, 2u);
      MEMORY[0x26122E4F0](v93, -1, -1);

      uint64_t v97 = v144;
      v144(v91, v92);
      uint64_t v23 = v48;
      v97(v90, v96);
    }
    else
    {

      v144(v44, v151);
    }
    swift_release();
  }
  uint64_t v98 = (char *)*v23;
  uint64_t v99 = *(void *)(*v23 + 64);
  uint64_t v172 = *v23 + 64;
  uint64_t v100 = 1 << v98[32];
  uint64_t v101 = -1;
  if (v100 < 64) {
    uint64_t v101 = ~(-1 << v100);
  }
  unint64_t v102 = v101 & v99;
  int64_t v173 = (unint64_t)(v100 + 63) >> 6;
  uint64_t v170 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
  uint64_t v166 = (void (**)(char *, uint64_t, uint64_t))(v161 + 32);
  unint64_t v167 = (void (**)(uint64_t, char *, uint64_t))(v161 + 16);
  uint64_t v165 = (void (**)(uint64_t, uint64_t))(v161 + 8);
  uint64_t v174 = v98;
  uint64_t v103 = swift_bridgeObjectRetain();
  uint64_t v104 = 0;
  int64_t v105 = 0;
  uint64_t v168 = (void *)MEMORY[0x263F8EE80];
  while (v102)
  {
    unint64_t v106 = __clz(__rbit64(v102));
    v102 &= v102 - 1;
    unint64_t v107 = v106 | (v105 << 6);
LABEL_63:
    uint64_t v110 = *(void *)(*((void *)v174 + 6) + 8 * v107);
    uint64_t v111 = (uint64_t *)(*((void *)v174 + 7) + 16 * v107);
    uint64_t v112 = *v111;
    unint64_t v113 = v111[1];
    v176[0] = 47;
    v176[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v103);
    *(&v142 - 2) = (unint64_t)v176;
    swift_bridgeObjectRetain_n();
    int v114 = (void *)sub_2610E1D74(0x7FFFFFFFFFFFFFFFLL, 1, sub_26111BD94, (uint64_t)(&v142 - 4), v112, v113);
    swift_bridgeObjectRelease();
    if (v114[2])
    {
      uint64_t v169 = (char *)v110;
      uint64_t v115 = v3;
      uint64_t v116 = v114[4];
      uint64_t v117 = v114[5];
      uint64_t v118 = (uint64_t)v6;
      uint64_t v119 = v114[6];
      uint64_t v120 = v114[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      MEMORY[0x26122D4A0](v116, v117, v119, v120);
      uint64_t v6 = (char *)v118;
      swift_bridgeObjectRelease();
      sub_26111E728();
      swift_bridgeObjectRelease();
      if ((*v170)(v118, 1, v171) == 1)
      {
        uint64_t v103 = sub_261087FE0(v118);
        unint64_t v3 = v115;
      }
      else
      {
        uint64_t v121 = v163;
        uint64_t v122 = v171;
        (*v166)(v163, v118, v171);
        BOOL v123 = *v167;
        uint64_t v124 = (uint64_t)v164;
        (*v167)((uint64_t)v164, v121, v122);
        sub_2610C18DC((uint64_t)v104);
        uint64_t v125 = v168;
        int v126 = swift_isUniquelyReferenced_nonNull_native();
        v176[0] = (uint64_t)v125;
        unint64_t v128 = sub_26105D7C4(v124);
        uint64_t v129 = v125[2];
        BOOL v130 = (v127 & 1) == 0;
        uint64_t v131 = v129 + v130;
        if (__OFADD__(v129, v130)) {
          goto LABEL_86;
        }
        char v132 = v127;
        if (v125[3] >= v131)
        {
          if ((v126 & 1) == 0)
          {
            sub_26107BD04();
            uint64_t v125 = (void *)v176[0];
          }
        }
        else
        {
          sub_2610775EC(v131, v126);
          uint64_t v133 = v176[0];
          unint64_t v134 = sub_26105D7C4((uint64_t)v164);
          if ((v132 & 1) != (v135 & 1)) {
            goto LABEL_89;
          }
          unint64_t v128 = v134;
          uint64_t v125 = (void *)v133;
        }
        swift_bridgeObjectRelease();
        if (v132)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v125[(v128 >> 6) + 8] |= 1 << v128;
          unint64_t v136 = v125[6] + *(void *)(v161 + 72) * v128;
          swift_bridgeObjectRetain();
          v123(v136, v164, v171);
          *(void *)(v125[7] + 8 * v128) = MEMORY[0x263F8EE88];
          uint64_t v137 = v125[2];
          BOOL v85 = __OFADD__(v137, 1);
          uint64_t v138 = v137 + 1;
          if (v85) {
            goto LABEL_87;
          }
          v125[2] = v138;
        }
        uint64_t v168 = v125;
        swift_bridgeObjectRelease();
        sub_26105E524(v176, (uint64_t)v169);
        uint64_t v139 = *v165;
        uint64_t v140 = v171;
        (*v165)((uint64_t)v164, v171);
        uint64_t v103 = ((uint64_t (*)(char *, uint64_t))v139)(v163, v140);
        uint64_t v104 = sub_2610E8D1C;
        unint64_t v3 = v115;
      }
    }
    else
    {
      uint64_t v103 = swift_bridgeObjectRelease();
    }
  }
  BOOL v85 = __OFADD__(v105++, 1);
  if (v85)
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v105 >= v173) {
    goto LABEL_81;
  }
  unint64_t v108 = *(void *)(v172 + 8 * v105);
  if (v108)
  {
LABEL_62:
    unint64_t v102 = (v108 - 1) & v108;
    unint64_t v107 = __clz(__rbit64(v108)) + (v105 << 6);
    goto LABEL_63;
  }
  int64_t v109 = v105 + 1;
  if (v105 + 1 >= v173) {
    goto LABEL_81;
  }
  unint64_t v108 = *(void *)(v172 + 8 * v109);
  if (v108) {
    goto LABEL_61;
  }
  int64_t v109 = v105 + 2;
  if (v105 + 2 >= v173) {
    goto LABEL_81;
  }
  unint64_t v108 = *(void *)(v172 + 8 * v109);
  if (v108) {
    goto LABEL_61;
  }
  int64_t v109 = v105 + 3;
  if (v105 + 3 >= v173)
  {
LABEL_81:
    swift_release();
    sub_2610C18DC((uint64_t)v104);
    return (uint64_t)v168;
  }
  unint64_t v108 = *(void *)(v172 + 8 * v109);
  if (v108)
  {
LABEL_61:
    int64_t v105 = v109;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v105 = v109 + 1;
    if (__OFADD__(v109, 1)) {
      break;
    }
    if (v105 >= v173) {
      goto LABEL_81;
    }
    unint64_t v108 = *(void *)(v172 + 8 * v105);
    ++v109;
    if (v108) {
      goto LABEL_62;
    }
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  sub_26111F448();
  __break(1u);
LABEL_89:
  uint64_t result = sub_26111F448();
  __break(1u);
  return result;
}

uint64_t sub_261118618(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t), uint64_t a12)
{
  uint64_t v56 = a3;
  unint64_t v57 = a5;
  uint64_t v14 = sub_26111E9F8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v54 - v19;
  uint64_t result = sub_26111E8E8();
  uint64_t v22 = v12;
  if (v12) {
    return result;
  }
  BOOL v58 = v18;
  uint64_t v59 = v14;
  int64_t v23 = *(void *)(result + 16);
  uint64_t v24 = MEMORY[0x263F8EE78];
  if (v23)
  {
    v54[0] = 0;
    v54[1] = a1;
    uint64_t v65 = MEMORY[0x263F8EE78];
    uint64_t v25 = result;
    sub_26106212C(0, v23, 0);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v26 = v15 + 16;
    uint64_t v28 = *(unsigned __int8 *)(v26 + 64);
    uint64_t v55 = v25;
    uint64_t v29 = v25 + ((v28 + 32) & ~v28);
    uint64_t v63 = *(void *)(v26 + 56);
    uint64_t v64 = v27;
    unint64_t v62 = (void (**)(char *, uint64_t))(v26 - 8);
    uint64_t v30 = v29;
    uint64_t v60 = v26;
    do
    {
      uint64_t v31 = v59;
      v64(v20, v30, v59);
      uint64_t v32 = sub_26111E9C8();
      unint64_t v61 = *v62;
      v61(v20, v31);
      uint64_t v24 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_26106212C(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v65;
      }
      unint64_t v34 = *(void *)(v24 + 16);
      unint64_t v33 = *(void *)(v24 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_26106212C(v33 > 1, v34 + 1, 1);
        uint64_t v24 = v65;
      }
      *(void *)(v24 + 16) = v34 + 1;
      *(void *)(v24 + 8 * v34 + 32) = v32;
      v30 += v63;
      --v23;
    }
    while (v23);
    uint64_t v35 = *(void *)(v55 + 16);
    uint64_t v36 = v59;
    if (v35)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = (void *)MEMORY[0x263F8EE78];
      unint64_t v38 = v58;
      do
      {
        v64(v38, v29, v36);
        uint64_t v39 = (void *)sub_26111E9E8();
        if (v39[2])
        {
          unsigned int v40 = v38;
          uint64_t v41 = v39[4];
          unint64_t v42 = v39[5];
          sub_26106A67C(v41, v42);
          swift_bridgeObjectRelease();
          v61(v40, v36);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_26105CB64(0, v37[2] + 1, 1, v37);
          }
          unint64_t v44 = v37[2];
          unint64_t v43 = v37[3];
          if (v44 >= v43 >> 1) {
            uint64_t v37 = sub_26105CB64((void *)(v43 > 1), v44 + 1, 1, v37);
          }
          v37[2] = v44 + 1;
          os_signpost_type_t v45 = &v37[2 * v44];
          v45[4] = v41;
          v45[5] = v42;
          unint64_t v38 = v58;
        }
        else
        {
          swift_bridgeObjectRelease();
          v61(v38, v36);
        }
        v29 += v63;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease_n();
      uint64_t v22 = v54[0];
      unint64_t v46 = v57;
      goto LABEL_23;
    }
    uint64_t v22 = v54[0];
    unint64_t v46 = v57;
  }
  else
  {
    unint64_t v46 = v57;
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)MEMORY[0x263F8EE78];
LABEL_23:
  if (v37[2] == *(void *)(v24 + 16))
  {
    uint64_t v47 = sub_2611167F4((uint64_t)v37);
    swift_bridgeObjectRelease();
    char v48 = sub_261119E7C(v24, v47, v46, a11, a12);
    if (v22)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      char v53 = v48;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v56 = v53 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_26111EAC8();
    os_log_type_t v50 = sub_26111EF58();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_261042000, v49, v50, "Vector store is missing embedding!", v51, 2u);
      MEMORY[0x26122E4F0](v51, -1, -1);
    }

    sub_261046B60();
    swift_allocError();
    *int v52 = 5;
    return swift_willThrow();
  }
  return result;
}

void sub_261118B20(unsigned int a1, uint64_t a2, unsigned int a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t), uint64_t a11)
{
}

uint64_t sub_261118B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t), uint64_t a13)
{
  return sub_261119E7C(a2, a3, a6, a12, a13) & 1;
}

uint64_t sub_261118B90(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_26111F3D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_156;
    }
    if (v3) {
      return sub_2611192D4(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_164;
  }
  uint64_t v103 = result;
  uint64_t v104 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_122:
      uint64_t v102 = v8;
      if (v12 >= 2)
      {
        uint64_t v92 = *v2;
        do
        {
          unint64_t v93 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_151;
          }
          if (!v92) {
            goto LABEL_163;
          }
          os_signpost_id_t v94 = v11;
          uint64_t v95 = v11 + 32;
          uint64_t v96 = *(void *)&v11[16 * v93 + 32];
          uint64_t v97 = *(void *)&v11[16 * v12 + 24];
          sub_261119358((char *)(v92 + 16 * v96), (char *)(v92 + 16 * *(void *)&v95[16 * v12 - 16]), v92 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_152;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            os_signpost_id_t v94 = sub_26108BD80((uint64_t)v94);
          }
          if (v93 >= *((void *)v94 + 2)) {
            goto LABEL_153;
          }
          uint64_t v98 = &v94[16 * v93 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v94 + 2);
          if (v12 > v99) {
            goto LABEL_154;
          }
          memmove(&v94[16 * v12 + 16], &v94[16 * v12 + 32], 16 * (v99 - v12));
          uint64_t v11 = v94;
          *((void *)v94 + 2) = v99 - 1;
          unint64_t v12 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_133:
      swift_bridgeObjectRelease();
      *(void *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v102 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A910788);
    uint64_t v7 = sub_26111EDD8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v104;
    uint64_t v102 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v100 = v2;
  uint64_t v101 = *v2 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_51;
    }
    uint64_t v14 = v10 + 16 * v9;
    float v15 = *(float *)(v14 + 8);
    uint64_t v16 = v10 + 16 * v13;
    float v17 = *(float *)(v16 + 8);
    if (v17 >= v15)
    {
      if (v15 == v17)
      {
        BOOL v19 = *(void *)v16 < *(void *)v14;
        uint64_t v18 = v13 + 2;
        if (v13 + 2 >= v3) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v18 = v13 + 2;
        if (v13 + 2 >= v3) {
          goto LABEL_50;
        }
        BOOL v19 = 0;
      }
    }
    else
    {
      uint64_t v18 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_40;
      }
      BOOL v19 = 1;
    }
    uint64_t v20 = v3 <= v18 + 1 ? v18 + 1 : v3;
    uint64_t v21 = (float *)(v101 + 16 * v18);
    do
    {
      uint64_t v22 = v10 + 16 * v9;
      float v23 = *(float *)(v22 + 8);
      if (v23 < *v21)
      {
        if (!v19) {
          goto LABEL_50;
        }
      }
      else if (*v21 == v23)
      {
        if (((v19 ^ (*(void *)v22 >= *((void *)v21 - 1))) & 1) == 0) {
          goto LABEL_38;
        }
      }
      else if (v19)
      {
        goto LABEL_39;
      }
      v21 += 4;
      uint64_t v9 = v18++;
    }
    while (v18 < v3);
    uint64_t v18 = v20;
LABEL_38:
    uint64_t v9 = v18;
    if (v19)
    {
LABEL_39:
      if (v18 < v13) {
        goto LABEL_157;
      }
LABEL_40:
      if (v13 < v18)
      {
        uint64_t v24 = 16 * v18 - 16;
        uint64_t v25 = 16 * v13;
        uint64_t v26 = v18;
        uint64_t v27 = v13;
        do
        {
          if (v27 != --v26)
          {
            if (!v10) {
              goto LABEL_162;
            }
            uint64_t v29 = (_OWORD *)(v10 + v25);
            uint64_t v30 = (_OWORD *)(v10 + v24);
            uint64_t v31 = *(void *)(v10 + v25);
            int v32 = *(_DWORD *)(v10 + v25 + 8);
            if (v25 != v24 || v29 >= v30 + 1) {
              *uint64_t v29 = *v30;
            }
            uint64_t v28 = v10 + v24;
            *(void *)uint64_t v28 = v31;
            *(_DWORD *)(v28 + 8) = v32;
          }
          ++v27;
          v24 -= 16;
          v25 += 16;
        }
        while (v27 < v26);
      }
LABEL_50:
      uint64_t v9 = v18;
    }
LABEL_51:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_155;
      }
      if (v9 - v13 < v103) {
        break;
      }
    }
LABEL_72:
    if (v9 < v13) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_26108B8F4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v42 = *((void *)v11 + 2);
    unint64_t v41 = *((void *)v11 + 3);
    unint64_t v12 = v42 + 1;
    uint64_t v10 = v105;
    if (v42 >= v41 >> 1)
    {
      uint64_t v91 = sub_26108B8F4((char *)(v41 > 1), v42 + 1, 1, v11);
      uint64_t v10 = v105;
      uint64_t v11 = v91;
    }
    *((void *)v11 + 2) = v12;
    unint64_t v43 = v11 + 32;
    unint64_t v44 = &v11[16 * v42 + 32];
    *(void *)unint64_t v44 = v13;
    *((void *)v44 + 1) = v9;
    if (v42)
    {
      while (1)
      {
        unint64_t v45 = v12 - 1;
        if (v12 >= 4)
        {
          os_log_type_t v50 = &v43[16 * v12];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_139;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_140;
          }
          unint64_t v57 = v12 - 2;
          BOOL v58 = &v43[16 * v12 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_142;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_145;
          }
          if (v62 >= v53)
          {
            unint64_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_149;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_109;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v74 = *((void *)v11 + 4);
            uint64_t v75 = *((void *)v11 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_103;
          }
          uint64_t v47 = *((void *)v11 + 4);
          uint64_t v46 = *((void *)v11 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_141;
        }
        unint64_t v57 = v12 - 2;
        uint64_t v63 = &v43[16 * v12 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_144;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_147;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_148;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_109:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_111;
        }
LABEL_103:
        if (v68) {
          goto LABEL_143;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_146;
        }
        if (v79 < v67) {
          goto LABEL_15;
        }
LABEL_111:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v12)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!v10) {
          goto LABEL_161;
        }
        BOOL v85 = &v43[16 * v84];
        uint64_t v86 = *(void *)v85;
        double v87 = v43;
        BOOL v88 = &v43[16 * v45];
        uint64_t v89 = *((void *)v88 + 1);
        sub_261119358((char *)(v10 + 16 * *(void *)v85), (char *)(v10 + 16 * *(void *)v88), v10 + 16 * v89, __dst);
        if (v1) {
          goto LABEL_133;
        }
        if (v89 < v86) {
          goto LABEL_136;
        }
        if (v45 > *((void *)v11 + 2)) {
          goto LABEL_137;
        }
        *(void *)BOOL v85 = v86;
        *(void *)&v87[16 * v84 + 8] = v89;
        unint64_t v90 = *((void *)v11 + 2);
        if (v45 >= v90) {
          goto LABEL_138;
        }
        unint64_t v12 = v90 - 1;
        memmove(v88, v88 + 16, 16 * (v90 - 1 - v45));
        unint64_t v43 = v87;
        *((void *)v11 + 2) = v90 - 1;
        uint64_t v10 = v105;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v104;
    if (v9 >= v104)
    {
      uint64_t v8 = v102;
      uint64_t v2 = v100;
      goto LABEL_122;
    }
  }
  uint64_t v33 = v13 + v103;
  if (__OFADD__(v13, v103)) {
    goto LABEL_158;
  }
  if (v33 >= v3) {
    uint64_t v33 = v3;
  }
  if (v33 >= v13)
  {
    if (v9 != v33)
    {
      uint64_t v34 = v10 + 16 * v9;
      do
      {
        uint64_t v35 = v34;
        uint64_t v36 = v13;
        do
        {
          float v37 = *(float *)(v35 + 8);
          float v38 = *(float *)(v35 - 8);
          if (v38 >= v37 && (v37 != v38 || *(void *)(v35 - 16) >= *(void *)v35)) {
            break;
          }
          if (!v10) {
            goto LABEL_160;
          }
          uint64_t v40 = *(void *)v35;
          *(_OWORD *)uint64_t v35 = *(_OWORD *)(v35 - 16);
          *(float *)(v35 - 8) = v37;
          *(void *)(v35 - 16) = v40;
          v35 -= 16;
          ++v36;
        }
        while (v9 != v36);
        ++v9;
        v34 += 16;
      }
      while (v9 != v33);
      uint64_t v9 = v33;
    }
    goto LABEL_72;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  uint64_t result = sub_26111F328();
  __break(1u);
  return result;
}

uint64_t sub_2611192D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v6 = v5;
    uint64_t v7 = result;
    while (1)
    {
      float v8 = *(float *)(v6 + 8);
      float v9 = *(float *)(v6 - 8);
      if (v9 >= v8 && (v8 != v9 || *(void *)(v6 - 16) >= *(void *)v6))
      {
LABEL_4:
        ++a3;
        v5 += 16;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v11 = *(void *)v6;
      *(_OWORD *)uint64_t v6 = *(_OWORD *)(v6 - 16);
      *(float *)(v6 - 8) = v8;
      *(void *)(v6 - 16) = v11;
      v6 -= 16;
      if (a3 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_261119358(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v30 = __dst;
  uint64_t v31 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v20 = 16 * v13;
      if (__dst != a2 || &a2[v20] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v21 = &v4[v20];
      uint64_t v29 = &v4[v20];
      uint64_t v31 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v22 = (char *)(a3 - 16);
        while (1)
        {
          float v23 = v22 + 16;
          float v24 = *((float *)v21 - 2);
          uint64_t v25 = v6 - 16;
          float v26 = *((float *)v6 - 2);
          if (v26 < v24 || (v24 == v26 ? (BOOL v27 = *(void *)v25 < *((void *)v21 - 2)) : (BOOL v27 = 0), v27))
          {
            if (v23 != v6 || v22 >= v6) {
              *(_OWORD *)uint64_t v22 = *(_OWORD *)v25;
            }
            uint64_t v31 = v6 - 16;
            if (v25 <= v7) {
              goto LABEL_51;
            }
          }
          else
          {
            uint64_t v29 = v21 - 16;
            if (v23 < v21 || v22 >= v21 || v23 != v21) {
              *(_OWORD *)uint64_t v22 = *((_OWORD *)v21 - 1);
            }
            uint64_t v25 = v6;
            v21 -= 16;
            if (v6 <= v7) {
              goto LABEL_51;
            }
          }
          v22 -= 16;
          uint64_t v6 = v25;
          if (v21 <= v4) {
            goto LABEL_51;
          }
        }
      }
      goto LABEL_51;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 16 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    float v15 = &v4[v14];
    uint64_t v29 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      do
      {
        float v16 = *((float *)v6 + 2);
        float v17 = *((float *)v4 + 2);
        if (v17 < v16 || (v16 == v17 ? (BOOL v18 = *(void *)v4 < *(void *)v6) : (BOOL v18 = 0), v18))
        {
          BOOL v19 = v6 + 16;
          if (v7 < v6 || v7 >= v19 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        else
        {
          if (v7 != v4 || v7 >= v4 + 16) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          uint64_t v30 = v4 + 16;
          BOOL v19 = v6;
          v4 += 16;
        }
        v7 += 16;
        if (v4 >= v15) {
          break;
        }
        uint64_t v6 = v19;
      }
      while ((unint64_t)v19 < a3);
      uint64_t v31 = v7;
    }
LABEL_51:
    sub_26108B9F0(&v31, &v30, &v29);
    return 1;
  }
  uint64_t result = sub_26111F398();
  __break(1u);
  return result;
}

unint64_t sub_26111960C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore__identifiersMapping);
  swift_bridgeObjectRetain();
  unint64_t result = swift_beginAccess();
  int64_t v11 = 0;
  int64_t v12 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 >= v12) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v11);
    if (!v17) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_19:
    uint64_t v19 = *v9;
    if (*(void *)(*v9 + 16))
    {
      unint64_t result = sub_26105D6EC(*(void *)(*(void *)(a1 + 48) + 8 * v15));
      if (v20)
      {
        uint64_t v21 = (uint64_t *)(*(void *)(v19 + 56) + 16 * result);
        uint64_t v22 = v21[1];
        uint64_t v27 = *v21;
        swift_bridgeObjectRetain();
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = v3;
        if ((result & 1) == 0)
        {
          unint64_t result = (unint64_t)sub_26105BF40(0, v13[2] + 1, 1, v13);
          uint64_t v13 = (void *)result;
        }
        unint64_t v24 = v13[2];
        unint64_t v23 = v13[3];
        uint64_t v25 = v13;
        if (v24 >= v23 >> 1)
        {
          unint64_t result = (unint64_t)sub_26105BF40((void *)(v23 > 1), v24 + 1, 1, v13);
          uint64_t v25 = (void *)result;
        }
        v25[2] = v24 + 1;
        uint64_t v13 = v25;
        float v26 = &v25[2 * v24];
        v26[4] = v27;
        v26[5] = v22;
        uint64_t v3 = v28;
      }
    }
  }
  int64_t v18 = v11 + 1;
  if (v11 + 1 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v11 + 2;
  if (v11 + 2 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v11 + 3;
  if (v11 + 3 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v11 + 4;
  if (v11 + 4 >= v12)
  {
LABEL_30:
    swift_release();
    return (unint64_t)v13;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17)
  {
LABEL_17:
    int64_t v11 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v12) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_26111983C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v33 = sub_26111E9B8();
  uint64_t v7 = *(void *)(v33 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v33);
  int v32 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v24 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v24 = v3;
    float v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v26 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v27 = v16;
    uint64_t v18 = a1 + v26;
    uint64_t v30 = a2 + 32;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v25 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v28 = v15;
    uint64_t v29 = a2;
    v16(v11, a1 + v26, v33);
    while (1)
    {
      uint64_t result = sub_26111E998();
      if ((a3 & 0x8000000000000000) != 0) {
        break;
      }
      if (*(void *)(a2 + 16) <= a3) {
        goto LABEL_17;
      }
      if (result == *(void *)(v30 + 8 * a3))
      {
        (*v25)(v11, v33);
      }
      else
      {
        uint64_t v19 = *v31;
        (*v31)(v32, v11, v33);
        uint64_t v20 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_261062194(0, *(void *)(v20 + 16) + 1, 1);
          uint64_t v20 = v34;
        }
        uint64_t v21 = v17;
        unint64_t v23 = *(void *)(v20 + 16);
        unint64_t v22 = *(void *)(v20 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_261062194(v22 > 1, v23 + 1, 1);
          uint64_t v21 = v17;
          uint64_t v20 = v34;
        }
        *(void *)(v20 + 16) = v23 + 1;
        uint64_t v17 = v21;
        v19((char *)(v20 + v26 + v23 * v21), v32, v33);
        uint64_t v34 = v20;
        a2 = v29;
        unint64_t v14 = v27;
      }
      v18 += v17;
      if (!--v13) {
        return v34;
      }
      v14(v11, v18, v33);
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_261119AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_26111E988();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - v9;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    v28[1] = v2;
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_26106216C(0, v11, 0);
    uint64_t v13 = *(void *)(sub_26111E9B8() - 8);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v32 = a2 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_vdbConfig;
    uint64_t v31 = *(void *)(v13 + 72);
    unsigned int v30 = *MEMORY[0x263F846A8];
    uint64_t v29 = (void (**)(char *, void, uint64_t))(v6 + 104);
    uint64_t v15 = (void (**)(char *, uint64_t))(v6 + 8);
    while (1)
    {
      sub_26111E9A8();
      if ((~v16 & 0x7FF0000000000000) != 0 || (float v17 = 0.0, (v16 & 0xFFFFFFFFFFFFFLL) == 0))
      {
        sub_26111E9A8();
        float v17 = v18;
      }
      sub_26111E968();
      (*v29)(v33, v30, v5);
      sub_26111BE5C(&qword_26A910780, MEMORY[0x263F846C0]);
      sub_26111ED58();
      sub_26111ED58();
      if (v36 == v34 && v37 == v35) {
        break;
      }
      char v20 = sub_26111F408();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *v15;
      (*v15)(v33, v5);
      v21(v10, v5);
      if (v20) {
        goto LABEL_10;
      }
LABEL_11:
      uint64_t v23 = sub_26111E998();
      uint64_t v12 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_26106216C(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v38;
      }
      unint64_t v25 = *(void *)(v12 + 16);
      unint64_t v24 = *(void *)(v12 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_26106216C(v24 > 1, v25 + 1, 1);
        uint64_t v12 = v38;
      }
      *(void *)(v12 + 16) = v25 + 1;
      uint64_t v26 = v12 + 16 * v25;
      *(void *)(v26 + 32) = v23;
      *(float *)(v26 + 40) = v17;
      v14 += v31;
      if (!--v11) {
        return v12;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v19 = *v15;
    (*v15)(v33, v5);
    v19(v10, v5);
LABEL_10:
    sub_26111E9A8();
    float v17 = v22 * v22 * -0.5 + 1.0;
    goto LABEL_11;
  }
  return v12;
}

uint64_t sub_261119E7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v177 = a1;
  uint64_t v170 = a4;
  uint64_t v171 = a5;
  unint64_t v174 = a3;
  uint64_t v176 = a2;
  uint64_t v159 = sub_26111EA78();
  uint64_t v160 = *(void *)(v159 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v159);
  uint64_t v156 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v155 = (char *)&v150 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v154 = (char *)&v150 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v152 = (char *)&v150 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v163 = (char *)&v150 - v14;
  uint64_t v15 = sub_26111EA38();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v165 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v164 = (char *)&v150 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v157 = (char *)&v150 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v153 = (char *)&v150 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v166 = (char *)&v150 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v150 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v150 - v30;
  uint64_t v173 = v5;
  uint64_t v32 = v5 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_signposter;
  sub_26111EA48();
  sub_26111EA08();
  uint64_t v167 = v32;
  uint64_t v33 = sub_26111EA48();
  os_signpost_type_t v34 = sub_26111F018();
  char v35 = sub_26111F0B8();
  uint64_t v169 = v15;
  if (v35)
  {
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v37 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v36(v29, v31, v15);
    uint64_t v38 = v16;
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    os_signpost_id_t v40 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v33, v34, v40, "vectorSearchBatch", "", v39, 2u);
    unint64_t v41 = v39;
    uint64_t v16 = v38;
    uint64_t v15 = v169;
    MEMORY[0x26122E4F0](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v29, v15);
  }
  else
  {

    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v37 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  unint64_t v161 = v37;
  uint64_t v162 = (void (*)(char *, const char *, uint64_t))v36;
  v36(v29, v31, v15);
  sub_26111EAA8();
  swift_allocObject();
  uint64_t v42 = sub_26111EA98();
  unint64_t v45 = *(void (**)(const char *, uint64_t))(v16 + 8);
  uint64_t v44 = v16 + 8;
  unint64_t v43 = v45;
  v45(v31, v15);
  uint64_t v46 = *(void *)(v177 + 16);
  uint64_t v168 = v44;
  uint64_t v175 = v42;
  uint64_t v172 = v46;
  if (v46)
  {
    uint64_t v151 = v29;
    uint64_t v47 = sub_261116410(v176);
    uint64_t v48 = v178;
    if (v47)
    {
      uint64_t v49 = sub_26111E908();
      uint64_t v50 = v48;
      uint64_t v51 = v175;
      if (v48)
      {
        uint64_t v52 = v43;
        swift_bridgeObjectRelease();
        uint64_t v53 = sub_26111EA48();
        uint64_t v54 = v165;
        sub_26111EA88();
        os_signpost_type_t v55 = sub_26111F008();
        if (sub_26111F0B8())
        {
          swift_retain();
          BOOL v56 = v156;
          sub_26111EAB8();
          swift_release();
          uint64_t v57 = v160;
          uint64_t v58 = v159;
          int v59 = (*(uint64_t (**)(char *, uint64_t))(v160 + 88))(v56, v159);
          int v60 = *MEMORY[0x263F90238];
          uint64_t v178 = v48;
          if (v59 == v60)
          {
            uint64_t v54 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
            uint64_t v54 = "";
          }
          uint64_t v112 = v151;
          unint64_t v113 = v165;
          v162(v151, v165, v15);
          int v114 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v114 = 0;
          os_signpost_id_t v115 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v53, v55, v115, "vectorSearchBatch", v54, v114, 2u);
          MEMORY[0x26122E4F0](v114, -1, -1);

          v52(v113, v15);
          LOBYTE(v54) = (_BYTE)v112;
          v52(v112, v15);
        }
        else
        {

          v52(v54, v15);
        }
      }
      else
      {
        uint64_t v78 = (char *)v49;
        swift_bridgeObjectRelease();
        uint64_t v166 = (char *)*((void *)v78 + 2);
        uint64_t v158 = v43;
        if (v166)
        {
          unint64_t v79 = 0;
          unint64_t v164 = v78;
          uint64_t v165 = v78 + 32;
          uint64_t v163 = (char *)(v177 + 32);
          uint64_t v80 = v173;
          while (1)
          {
            if (v79 >= *((void *)v78 + 2))
            {
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              uint64_t result = swift_release();
              __break(1u);
              return result;
            }
            uint64_t v81 = v44;
            uint64_t v82 = v51;
            uint64_t v83 = v177;
            swift_bridgeObjectRetain();
            uint64_t v84 = swift_bridgeObjectRetain();
            unint64_t v85 = v79;
            unint64_t v86 = v79;
            uint64_t v87 = v50;
            uint64_t v88 = sub_26111983C(v84, v83, v85);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_retain();
            uint64_t v89 = sub_261119AB0(v88, v80);
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v179 = v89;
            swift_bridgeObjectRetain();
            sub_261116660(&v179);
            if (v87) {
              goto LABEL_63;
            }
            swift_bridgeObjectRelease();
            if (v86 == v172) {
              goto LABEL_62;
            }
            uint64_t v90 = v179;
            unint64_t v174 = v86;
            uint64_t v176 = *(void *)&v163[8 * v86];
            int64_t v91 = *(void *)(v179 + 16);
            if (v91)
            {
              uint64_t v178 = 0;
              uint64_t v92 = MEMORY[0x263F8EE78];
              uint64_t v179 = MEMORY[0x263F8EE78];
              sub_26106214C(0, v91, 0);
              uint64_t v93 = v179;
              unint64_t v94 = *(void *)(v179 + 16);
              uint64_t v95 = 40;
              int64_t v96 = v91;
              do
              {
                int v97 = *(_DWORD *)(v90 + v95);
                uint64_t v179 = v93;
                unint64_t v98 = *(void *)(v93 + 24);
                if (v94 >= v98 >> 1)
                {
                  sub_26106214C(v98 > 1, v94 + 1, 1);
                  uint64_t v93 = v179;
                }
                *(void *)(v93 + 16) = v94 + 1;
                *(_DWORD *)(v93 + 4 * v94 + 32) = v97;
                v95 += 16;
                ++v94;
                --v96;
              }
              while (v96);
              uint64_t v179 = v92;
              sub_26106212C(0, v91, 0);
              uint64_t v99 = v179;
              unint64_t v100 = *(void *)(v179 + 16);
              uint64_t v101 = 32;
              do
              {
                uint64_t v102 = *(void *)(v90 + v101);
                uint64_t v179 = v99;
                unint64_t v103 = *(void *)(v99 + 24);
                if (v100 >= v103 >> 1)
                {
                  sub_26106212C(v103 > 1, v100 + 1, 1);
                  uint64_t v99 = v179;
                }
                *(void *)(v99 + 16) = v100 + 1;
                *(void *)(v99 + 8 * v100 + 32) = v102;
                v101 += 16;
                ++v100;
                --v91;
              }
              while (v91);
              swift_release();
              uint64_t v104 = v178;
              uint64_t v44 = v168;
              uint64_t v51 = v175;
              uint64_t v80 = v173;
            }
            else
            {
              uint64_t v104 = 0;
              swift_release();
              uint64_t v93 = MEMORY[0x263F8EE78];
              uint64_t v99 = MEMORY[0x263F8EE78];
              uint64_t v51 = v82;
              uint64_t v44 = v81;
            }
            char v105 = v170(v176, v93, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v78 = (char *)v164;
            if ((v105 & 1) == 0) {
              break;
            }
            unint64_t v79 = v174 + 1;
            uint64_t v50 = v104;
            if ((char *)(v174 + 1) == v166)
            {
              swift_bridgeObjectRelease();
              unint64_t v43 = v158;
              goto LABEL_48;
            }
          }
          swift_bridgeObjectRelease();
          BOOL v130 = sub_26111EA48();
          uint64_t v131 = v153;
          sub_26111EA88();
          os_signpost_type_t v132 = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            uint64_t v133 = v152;
            sub_26111EAB8();
            unint64_t v134 = v133;
            swift_release();
            uint64_t v135 = v160;
            uint64_t v136 = v159;
            if ((*(unsigned int (**)(char *, uint64_t))(v160 + 88))(v134, v159) == *MEMORY[0x263F90238])
            {
              uint64_t v137 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v136);
              uint64_t v137 = "";
            }
            uint64_t v145 = v151;
            uint64_t v146 = v169;
            v162(v151, v131, v169);
            int64_t v147 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v147 = 0;
            os_signpost_id_t v148 = sub_26111EA18();
            _os_signpost_emit_with_name_impl(&dword_261042000, v130, v132, v148, "vectorSearchBatch", v137, v147, 2u);
            MEMORY[0x26122E4F0](v147, -1, -1);

            uint64_t v54 = (const char *)v158;
            v158(v131, v146);
            ((void (*)(char *, uint64_t))v54)(v145, v146);
            LOBYTE(v54) = 0;
          }
          else
          {

            v158(v131, v169);
            LOBYTE(v54) = 0;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_48:
          uint64_t v124 = sub_26111EA48();
          uint64_t v54 = v157;
          sub_26111EA88();
          os_signpost_type_t v125 = sub_26111F008();
          if (sub_26111F0B8())
          {
            swift_retain();
            int v126 = v154;
            sub_26111EAB8();
            char v127 = v126;
            swift_release();
            uint64_t v128 = v160;
            uint64_t v129 = v159;
            if ((*(unsigned int (**)(char *, uint64_t))(v160 + 88))(v127, v159) == *MEMORY[0x263F90238])
            {
              uint64_t v54 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v128 + 8))(v127, v129);
              uint64_t v54 = "";
            }
            uint64_t v138 = v157;
            uint64_t v139 = v151;
            uint64_t v140 = v169;
            v162(v151, v157, v169);
            char v141 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v141 = 0;
            os_signpost_id_t v142 = sub_26111EA18();
            _os_signpost_emit_with_name_impl(&dword_261042000, v124, v125, v142, "vectorSearchBatch", v54, v141, 2u);
            MEMORY[0x26122E4F0](v141, -1, -1);

            unint64_t v143 = v138;
            uint64_t v144 = (void (*)(char *, uint64_t))v158;
            v158(v143, v140);
            v144(v139, v140);
            LOBYTE(v54) = 1;
          }
          else
          {

            v43(v54, v169);
            LOBYTE(v54) = 1;
          }
        }
      }
    }
    else
    {
      uint64_t v67 = sub_26111EAC8();
      os_log_type_t v68 = sub_26111EF58();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v69 = 0;
        _os_log_impl(&dword_261042000, v67, v68, "Embeddings cannot be converted to data!", v69, 2u);
        MEMORY[0x26122E4F0](v69, -1, -1);
      }

      sub_261046B60();
      swift_allocError();
      *uint64_t v70 = 5;
      swift_willThrow();
      uint64_t v71 = sub_26111EA48();
      uint64_t v54 = v164;
      sub_26111EA88();
      os_signpost_type_t v72 = sub_26111F008();
      if (sub_26111F0B8())
      {
        swift_retain();
        BOOL v73 = v155;
        sub_26111EAB8();
        uint64_t v74 = v73;
        swift_release();
        uint64_t v75 = v160;
        uint64_t v76 = v159;
        BOOL v77 = (*(unsigned int (**)(char *, uint64_t))(v160 + 88))(v74, v159) == *MEMORY[0x263F90238];
        uint64_t v158 = v43;
        if (v77)
        {
          uint64_t v116 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
          uint64_t v116 = "";
        }
        uint64_t v117 = v151;
        uint64_t v118 = v164;
        uint64_t v119 = v169;
        v162(v151, v164, v169);
        uint64_t v120 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v120 = 0;
        os_signpost_id_t v121 = sub_26111EA18();
        os_signpost_type_t v122 = v72;
        uint64_t v106 = v119;
        BOOL v123 = v116;
        uint64_t v54 = v117;
        _os_signpost_emit_with_name_impl(&dword_261042000, v71, v122, v121, "vectorSearchBatch", v123, v120, 2u);
        MEMORY[0x26122E4F0](v120, -1, -1);

        unint64_t v43 = v158;
        v158(v118, v119);
      }
      else
      {

        uint64_t v106 = v169;
      }
      v43(v54, v106);
    }
  }
  else
  {
    uint64_t v158 = v43;
    uint64_t v61 = sub_26111EA48();
    uint64_t v62 = v166;
    sub_26111EA88();
    os_signpost_type_t v63 = sub_26111F008();
    if (sub_26111F0B8())
    {
      swift_retain();
      uint64_t v64 = v163;
      sub_26111EAB8();
      swift_release();
      uint64_t v65 = v160;
      uint64_t v66 = v159;
      if ((*(unsigned int (**)(char *, uint64_t))(v160 + 88))(v64, v159) == *MEMORY[0x263F90238])
      {
        uint64_t v54 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
        uint64_t v54 = "";
      }
      uint64_t v107 = v169;
      v162(v29, v62, v169);
      unint64_t v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v108 = 0;
      os_signpost_id_t v109 = sub_26111EA18();
      _os_signpost_emit_with_name_impl(&dword_261042000, v61, v63, v109, "vectorSearchBatch", v54, v108, 2u);
      MEMORY[0x26122E4F0](v108, -1, -1);

      uint64_t v110 = v62;
      uint64_t v111 = (void (*)(char *, uint64_t))v158;
      v158(v110, v107);
      v111(v29, v107);
      LOBYTE(v54) = 1;
    }
    else
    {

      v158(v62, v169);
      LOBYTE(v54) = 1;
    }
  }
  swift_release();
  return v54 & 1;
}

void sub_26111AEB4(unsigned int a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v136 = a7;
  uint64_t v137 = a8;
  uint64_t v134 = a4;
  unint64_t v135 = a6;
  LODWORD(v131) = a5;
  unsigned int v144 = a3;
  uint64_t v132 = a2;
  unsigned int v133 = a1;
  uint64_t v121 = sub_26111EA78();
  uint64_t v120 = *(void *)(v121 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v121);
  uint64_t v138 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  int v114 = (char *)&v111 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v113 = (char *)&v111 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v140 = (char *)&v111 - v17;
  uint64_t v18 = sub_26111EA38();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v118 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v116 = (char *)&v111 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  os_signpost_id_t v115 = (char *)&v111 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  char v141 = (char *)&v111 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v111 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v111 - v31;
  uint64_t v139 = v10;
  uint64_t v33 = v10 + OBJC_IVAR____TtC19VisualUnderstanding19VUVectorSearchStore_signposter;
  sub_26111EA48();
  sub_26111EA08();
  uint64_t v126 = v33;
  os_signpost_type_t v34 = sub_26111EA48();
  os_signpost_type_t v35 = sub_26111F018();
  if (sub_26111F0B8())
  {
    uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    unint64_t v36 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v128(v30, v32, v18);
    uint64_t v37 = v19;
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    os_signpost_id_t v39 = sub_26111EA18();
    _os_signpost_emit_with_name_impl(&dword_261042000, v34, v35, v39, "vectorSearch", "", v38, 2u);
    os_signpost_id_t v40 = v38;
    uint64_t v19 = v37;
    MEMORY[0x26122E4F0](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v18);
    unint64_t v41 = v128;
  }
  else
  {

    unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    unint64_t v36 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v128 = v41;
  unint64_t v119 = v36;
  v41(v30, v32, v18);
  sub_26111EAA8();
  swift_allocObject();
  os_signpost_type_t v122 = v30;
  uint64_t v42 = sub_26111EA98();
  unint64_t v43 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v124 = v18;
  uint64_t v125 = v19 + 8;
  BOOL v123 = v43;
  v43(v32, v18);
  char v145 = 1;
  uint64_t v44 = v139;
  swift_beginAccess();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_261072898(v45);
  uint64_t v47 = v132;
  sub_26111BD2C(v132, (uint64_t)&v146);
  sub_26111BD2C((uint64_t)&v146, (uint64_t)&v147);
  char v48 = v147;
  uint64_t v49 = v140;
  if (v147 == 2)
  {
    uint64_t v50 = v141;
    uint64_t v51 = *(void *)(v47 + 8);
    if (!v51) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v52 = swift_bridgeObjectRetain();
  uint64_t v53 = sub_2610807A0(v52);
  swift_bridgeObjectRelease();
  uint64_t v50 = v141;
  if ((v48 & 1) == 0)
  {
    uint64_t v54 = sub_26108BEC0(v53, v46);
    goto LABEL_11;
  }
  if (*(void *)(v53 + 16) > *(void *)(v46 + 16) >> 3)
  {
    uint64_t v54 = sub_26108CEC0(v53, v46);
LABEL_11:
    uint64_t v46 = v54;
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(v47 + 8);
    if (!v51) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v143 = v46;
  sub_26108C9CC(v53);
  swift_bridgeObjectRelease();
  uint64_t v46 = v143;
  uint64_t v51 = *(void *)(v47 + 8);
  if (!v51) {
    goto LABEL_16;
  }
LABEL_14:
  if (*(void *)(v51 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_2610807A0(v51);
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v55 = *(void *)(v47 + 16);
  if (!v55)
  {
    uint64_t v56 = v142;
LABEL_22:
    if (!*(void *)(v46 + 16)) {
      goto LABEL_54;
    }
    goto LABEL_23;
  }
  uint64_t v56 = v142;
  if (!*(void *)(v55 + 16)) {
    goto LABEL_22;
  }
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_2610807A0(v57);
  swift_bridgeObjectRelease();
  if (*(void *)(v58 + 16) <= *(void *)(v46 + 16) >> 3)
  {
    uint64_t v143 = v46;
    sub_26108C9CC(v58);
    swift_bridgeObjectRelease();
    uint64_t v46 = v143;
    if (!*(void *)(v143 + 16)) {
      goto LABEL_54;
    }
LABEL_23:
    swift_retain();
    unint64_t v59 = sub_26111960C(v46, v44);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v60 = v59;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_26111EAC8();
    os_log_type_t v62 = sub_26111EF48();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v117 = v42;
    if (v63)
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 134217984;
      uint64_t v143 = *(void *)(v59 + 16);
      sub_26111F0D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_261042000, v61, v62, "Looking for neighbors of %ld embeddings", v64, 0xCu);
      MEMORY[0x26122E4F0](v64, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v65 = v138;

    uint64_t v67 = *(void *)(v59 + 16);
    if (v67)
    {
      uint64_t v142 = v56;
      uint64_t v68 = 0;
      uint64_t v69 = 0;
      LODWORD(v132) = v131 & 1;
      BOOL v130 = a9;
      uint64_t v131 = a10;
      uint64_t v112 = v59 + 32;
      uint64_t v70 = 256;
      *(void *)&long long v66 = 134218240;
      long long v127 = v66;
      uint64_t v140 = (char *)v59;
      uint64_t v129 = v67;
      while (1)
      {
        if (v67 >= v70) {
          uint64_t v71 = v70;
        }
        else {
          uint64_t v71 = v67;
        }
        uint64_t v72 = v68 + 256;
        if (__OFADD__(v68, 256))
        {
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
          return;
        }
        if (v72 >= v67) {
          uint64_t v73 = v67;
        }
        else {
          uint64_t v73 = v68 + 256;
        }
        if (v73 < v68) {
          goto LABEL_75;
        }
        unint64_t v74 = *(void *)(v60 + 16);
        if (v74 < v68 || (uint64_t)v74 < v73) {
          goto LABEL_76;
        }
        sub_26111F418();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v76 = swift_dynamicCastClass();
        if (!v76)
        {
          swift_bridgeObjectRelease();
          uint64_t v76 = MEMORY[0x263F8EE78];
        }
        char v141 = v69;
        BOOL v77 = *(char **)(v76 + 16);
        swift_release();
        if (&v69[v71] == v77)
        {
          uint64_t v60 = (uint64_t)v140;
          uint64_t v78 = swift_dynamicCastClass();
          if (!v78)
          {
            swift_bridgeObjectRelease();
            uint64_t v78 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          uint64_t v60 = (uint64_t)v140;
          swift_bridgeObjectRelease();
          uint64_t v78 = sub_2610744A4(v60, v112, v68, (2 * v73) | 1);
        }
        swift_bridgeObjectRelease();
        if ((v145 & 1) == 0) {
          break;
        }
        unint64_t v79 = sub_26111EAC8();
        os_log_type_t v80 = sub_26111EF48();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = swift_slowAlloc();
          *(_DWORD *)uint64_t v81 = v127;
          *(void *)(v81 + 4) = v68;
          *(_WORD *)(v81 + 12) = 2048;
          *(void *)(v81 + 14) = v73;
          _os_log_impl(&dword_261042000, v79, v80, "Searching embeddings %ld..%ld", (uint8_t *)v81, 0x16u);
          uint64_t v82 = v81;
          uint64_t v60 = (uint64_t)v140;
          MEMORY[0x26122E4F0](v82, -1, -1);
        }

        uint64_t v83 = (void *)MEMORY[0x26122DE00]();
        LOBYTE(v110) = v132;
        uint64_t v84 = v142;
        sub_261118618(v139, v78, &v145, v133, v135, v136, v137, v144, v134, v110, v130, v131);
        uint64_t v142 = v84;
        if (v84)
        {
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v85 = sub_26111EA48();
          uint64_t v50 = v115;
          sub_26111EA88();
          int v92 = sub_26111F008();
          if ((sub_26111F0B8() & 1) == 0) {
            goto LABEL_68;
          }
          LODWORD(v141) = v92;
          swift_retain();
          uint64_t v93 = v113;
          sub_26111EAB8();
          swift_release();
          uint64_t v94 = v120;
          uint64_t v95 = v121;
          int v96 = (*(uint64_t (**)(char *, uint64_t))(v120 + 88))(v93, v121);
          int v97 = v123;
          if (v96 == *MEMORY[0x263F90238])
          {
            unint64_t v98 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v95);
            unint64_t v98 = "";
          }
          char v105 = v122;
          uint64_t v106 = v124;
          v128(v122, v50, v124);
          uint64_t v107 = v50;
          unint64_t v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v108 = 0;
          os_signpost_id_t v109 = sub_26111EA18();
          _os_signpost_emit_with_name_impl(&dword_261042000, v85, (os_signpost_type_t)v141, v109, "vectorSearch", v98, v108, 2u);
          MEMORY[0x26122E4F0](v108, -1, -1);

          v97(v107, v106);
          v97(v105, v106);
          goto LABEL_69;
        }
        swift_release();
        v70 += 256;
        uint64_t v69 = v141 - 256;
        v68 += 256;
        uint64_t v67 = v129;
        uint64_t v65 = v138;
        if (v72 >= v129) {
          goto LABEL_50;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v85 = sub_26111EA48();
      uint64_t v50 = v116;
      sub_26111EA88();
      os_signpost_type_t v86 = sub_26111F008();
      if ((sub_26111F0B8() & 1) == 0) {
        goto LABEL_68;
      }
      swift_retain();
      uint64_t v65 = v114;
      sub_26111EAB8();
      swift_release();
      uint64_t v89 = v120;
      uint64_t v90 = v121;
      if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v65, v121) == *MEMORY[0x263F90238]) {
        goto LABEL_66;
      }
    }
    else
    {
LABEL_50:
      swift_bridgeObjectRelease();
      unint64_t v85 = sub_26111EA48();
      uint64_t v50 = v118;
      sub_26111EA88();
      os_signpost_type_t v86 = sub_26111F008();
      if ((sub_26111F0B8() & 1) == 0) {
        goto LABEL_68;
      }
      swift_retain();
      sub_26111EAB8();
      swift_release();
      uint64_t v89 = v120;
      uint64_t v90 = v121;
      if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v65, v121) == *MEMORY[0x263F90238]) {
        goto LABEL_66;
      }
    }
    (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v90);
    goto LABEL_60;
  }
  uint64_t v46 = sub_26108CEC0(v58, v46);
  swift_bridgeObjectRelease();
  if (*(void *)(v46 + 16)) {
    goto LABEL_23;
  }
LABEL_54:
  swift_bridgeObjectRelease();
  unint64_t v85 = sub_26111EA48();
  sub_26111EA88();
  os_signpost_type_t v86 = sub_26111F008();
  if ((sub_26111F0B8() & 1) == 0)
  {
LABEL_68:

    v123(v50, v124);
    goto LABEL_69;
  }
  swift_retain();
  sub_26111EAB8();
  swift_release();
  uint64_t v87 = v120;
  uint64_t v88 = v121;
  if ((*(unsigned int (**)(char *, uint64_t))(v120 + 88))(v49, v121) == *MEMORY[0x263F90238])
  {
LABEL_66:
    int64_t v91 = "[Error] Interval already ended";
    goto LABEL_67;
  }
  (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v88);
LABEL_60:
  int64_t v91 = "";
LABEL_67:
  uint64_t v99 = v122;
  uint64_t v100 = v124;
  v128(v122, v50, v124);
  uint64_t v101 = v50;
  uint64_t v102 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v102 = 0;
  os_signpost_id_t v103 = sub_26111EA18();
  _os_signpost_emit_with_name_impl(&dword_261042000, v85, v86, v103, "vectorSearch", v91, v102, 2u);
  MEMORY[0x26122E4F0](v102, -1, -1);

  uint64_t v104 = v123;
  v123(v101, v100);
  v104(v99, v100);
LABEL_69:
  swift_release();
}

uint64_t sub_26111BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_26111BD94(void *a1)
{
  return sub_2610E2644(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_26111BDB4()
{
  unint64_t result = qword_26A910790;
  if (!qword_26A910790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910790);
  }
  return result;
}

unint64_t sub_26111BE08()
{
  unint64_t result = qword_26A910798;
  if (!qword_26A910798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A910798);
  }
  return result;
}

uint64_t sub_26111BE5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for pet2word_uecuevsnd9_10000Input()
{
  return self;
}

uint64_t sub_26111C174()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for pet2word_uecuevsnd9_10000Output()
{
  return self;
}

uint64_t sub_26111C1D0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for pet2word_uecuevsnd9_10000()
{
  return self;
}

id VUIndexMapping.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id VUIndexMapping.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VUIndexMapping();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for VUIndexMapping()
{
  return self;
}

id VUIndexMapping.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUIndexMapping();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static VUIndexMapping.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_26111EBC8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_26111C410()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_26111C41C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VUIndexMapping();
  uint64_t result = sub_26111F248();
  *a1 = result;
  return result;
}

char *keypath_get_selector_density()
{
  return sel_density;
}

id sub_26111C46C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_density);
  *a2 = v4;
  return result;
}

id sub_26111C4A0(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setDensity_, a3);
}

char *keypath_get_selector_diversity()
{
  return sel_diversity;
}

id sub_26111C4C0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_diversity);
  *a2 = v4;
  return result;
}

id sub_26111C4F4(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setDiversity_, a3);
}

char *keypath_get_selector_label()
{
  return sel_label;
}

id sub_26111C514@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_label);
  *a2 = result;
  return result;
}

id sub_26111C548(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLabel_, *a1);
}

char *keypath_get_selector_partition()
{
  return sel_partition;
}

id sub_26111C568@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_partition);
  *a2 = result;
  return result;
}

id sub_26111C59C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPartition_, *a1);
}

char *keypath_get_selector_partner()
{
  return sel_partner;
}

id sub_26111C5BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_partner);
  *a2 = result;
  return result;
}

id sub_26111C5F0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPartner_, *a1);
}

char *keypath_get_selector_similarity()
{
  return sel_similarity;
}

id sub_26111C610@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_similarity);
  *a2 = v4;
  return result;
}

id sub_26111C644(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setSimilarity_, a3);
}

char *keypath_get_selector_observation()
{
  return sel_observation;
}

id sub_26111C664@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_observation);
  *a2 = result;
  return result;
}

id sub_26111C6A0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setObservation_, *a1);
}

id VUIndexObservation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id VUIndexObservation.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VUIndexObservation();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for VUIndexObservation()
{
  return self;
}

id VUIndexObservation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUIndexObservation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static VUIndexObservation.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_26111EBC8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_26111C88C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_26111E688();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_26111C8F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = sub_26111E678();
  }
  id v8 = (id)v7;
  [v6 *a5];
}

uint64_t sub_26111C968@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    sub_26111E768();

    uint64_t v6 = sub_26111E778();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_26111E778();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

void sub_26111CA2C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261087F78(a1, (uint64_t)v10);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_26111E778();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_26111E748();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

uint64_t sub_26111CB58@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VUIndexObservation();
  uint64_t result = sub_26111F248();
  *a1 = result;
  return result;
}

char *keypath_get_selector_asset()
{
  return sel_asset;
}

uint64_t sub_26111CBA8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26111C968(a1, (SEL *)&selRef_asset, a2);
}

void sub_26111CBC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_client()
{
  return sel_client;
}

id sub_26111CBF4@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_client);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111CC28(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setClient_, *a1);
}

char *keypath_get_selector_confidence()
{
  return sel_confidence;
}

id sub_26111CC48@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_confidence);
  *a2 = v4;
  return result;
}

id sub_26111CC7C(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setConfidence_, a3);
}

char *keypath_get_selector_contextualEmbedding()
{
  return sel_contextualEmbedding;
}

void sub_26111CC9C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_26111CCBC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_embedding()
{
  return sel_embedding;
}

void sub_26111CCE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_26111CD08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

id sub_26111CD34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_identifier);
  *a2 = result;
  return result;
}

id sub_26111CD68(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIdentifier_, *a1);
}

char *keypath_get_selector_isPrimary()
{
  return sel_isPrimary;
}

id sub_26111CD88@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPrimary);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111CDBC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPrimary_, *a1);
}

char *keypath_get_selector_legacyLabel()
{
  return sel_legacyLabel;
}

id sub_26111CDDC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_legacyLabel);
  *a2 = result;
  return result;
}

id sub_26111CE10(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLegacyLabel_, *a1);
}

char *keypath_get_selector_legacyPartition()
{
  return sel_legacyPartition;
}

id sub_26111CE30@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_legacyPartition);
  *a2 = result;
  return result;
}

id sub_26111CE64(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLegacyPartition_, *a1);
}

char *keypath_get_selector_moment()
{
  return sel_moment;
}

uint64_t sub_26111CE84@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26111C968(a1, (SEL *)&selRef_moment, a2);
}

void sub_26111CEA4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_quality()
{
  return sel_quality;
}

id sub_26111CED0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_quality);
  *a2 = v4;
  return result;
}

id sub_26111CF04(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setQuality_, a3);
}

char *keypath_get_selector_source()
{
  return sel_source;
}

id sub_26111CF24@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_source);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111CF58(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSource_, *a1);
}

char *keypath_get_selector_type()
{
  return sel_type;
}

id sub_26111CF78@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_type);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111CFAC(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

char *keypath_get_selector_mapping()
{
  return sel_mapping;
}

id sub_26111CFCC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_mapping);
  *a2 = result;
  return result;
}

id sub_26111D008(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMapping_, *a1);
}

char *keypath_get_selector_tags()
{
  return sel_tags;
}

id sub_26111D028@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_tags);
  *a2 = result;
  return result;
}

id sub_26111D064(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTags_, *a1);
}

id VUIndexPartition.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id VUIndexPartition.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VUIndexPartition();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for VUIndexPartition()
{
  return self;
}

id VUIndexPartition.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUIndexPartition();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static VUIndexPartition.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_26111EBC8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_26111D250(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_centroid);
  if (v3)
  {
    int v4 = v3;
    uint64_t v5 = sub_26111E688();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_26111D2B8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_26111E678();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setCentroid_);
}

uint64_t sub_26111D330@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VUIndexPartition();
  uint64_t result = sub_26111F248();
  *a1 = result;
  return result;
}

char *keypath_get_selector_centroid()
{
  return sel_centroid;
}

id sub_26111D388@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_partition);
  *a2 = result;
  return result;
}

id sub_26111D3BC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPartition_, *a1);
}

id sub_26111D3D0@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_type);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111D404(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

id VUIndexSubset.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id VUIndexSubset.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VUIndexSubset();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for VUIndexSubset()
{
  return self;
}

id VUIndexSubset.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUIndexSubset();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static VUIndexSubset.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_26111EBC8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_26111D5F8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_lastUpdated);
  if (v3)
  {
    id v4 = v3;
    sub_26111E6F8();

    uint64_t v5 = sub_26111E718();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_26111E718();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_26111D6C0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A910640);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26110B944(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_26111E718();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_26111E6D8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setLastUpdated_, v10);
}

uint64_t sub_26111D7EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VUIndexSubset();
  uint64_t result = sub_26111F248();
  *a1 = result;
  return result;
}

char *keypath_get_selector_contextualEmbeddingRevision()
{
  return sel_contextualEmbeddingRevision;
}

id sub_26111D83C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contextualEmbeddingRevision);
  *a2 = result;
  return result;
}

id sub_26111D870(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContextualEmbeddingRevision_, *a1);
}

char *keypath_get_selector_embeddingRevision()
{
  return sel_embeddingRevision;
}

id sub_26111D890@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_embeddingRevision);
  *a2 = result;
  return result;
}

id sub_26111D8C4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEmbeddingRevision_, *a1);
}

char *keypath_get_selector_lastUpdated()
{
  return sel_lastUpdated;
}

char *keypath_get_selector_staleObservations()
{
  return sel_staleObservations;
}

id sub_26111D8F8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_staleObservations);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111D92C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStaleObservations_, *a1);
}

char *keypath_get_selector_staleTags()
{
  return sel_staleTags;
}

id sub_26111D94C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_staleTags);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111D980(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStaleTags_, *a1);
}

id sub_26111D994@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_type);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111D9C8(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

char *keypath_get_selector_usingVectorStore()
{
  return sel_usingVectorStore;
}

id sub_26111D9E8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_usingVectorStore);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111DA1C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUsingVectorStore_, *a1);
}

char *keypath_get_selector_version()
{
  return sel_version;
}

id sub_26111DA3C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_version);
  *a2 = result;
  return result;
}

id sub_26111DA70(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

id VUIndexTag.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id VUIndexTag.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VUIndexTag();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for VUIndexTag()
{
  return self;
}

id VUIndexTag.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VUIndexTag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static VUIndexTag.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFF260]);
  uint64_t v1 = (void *)sub_26111EBC8();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_26111DC5C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_uuid);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_26111E768();

    uint64_t v5 = sub_26111E778();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_26111E778();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_26111DD24(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B40AC70);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261087F78(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_26111E778();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_26111E748();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setUuid_, v10);
}

uint64_t sub_26111DE50@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VUIndexTag();
  uint64_t result = sub_26111F248();
  *a1 = result;
  return result;
}

id sub_26111DE94@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPrimary);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111DEC8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPrimary_, *a1);
}

char *keypath_get_selector_resolved()
{
  return sel_resolved;
}

id sub_26111DEE8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_resolved);
  *a2 = (_BYTE)result;
  return result;
}

id sub_26111DF1C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResolved_, *a1);
}

id sub_26111DF30@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_type);
  *a2 = (_WORD)result;
  return result;
}

id sub_26111DF64(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setType_, *a1);
}

char *keypath_get_selector_uuid()
{
  return sel_uuid;
}

id sub_26111DF8C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_observation);
  *a2 = result;
  return result;
}

id sub_26111DFC8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setObservation_, *a1);
}

uint64_t type metadata accessor for face2word_p2qsq24gi2_10000Input()
{
  return self;
}

uint64_t type metadata accessor for face2word_p2qsq24gi2_10000Output()
{
  return self;
}

uint64_t type metadata accessor for face2word_p2qsq24gi2_10000()
{
  return self;
}

uint64_t sub_26111E2F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A9107A0);
    uint64_t v3 = sub_26111F208();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v26 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v26 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_26111F4C8();
      swift_bridgeObjectRetain();
      sub_26111EC48();
      uint64_t v9 = sub_26111F508();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (sub_26111F408() & 1) != 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          BOOL v20 = *v19 == v8 && v19[1] == v7;
          if (v20 || (sub_26111F408() & 1) != 0) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return sub_26111E498();
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_26111E498()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_26111E4A8()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_26111E4B8()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_26111E4C8()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_26111E4D8()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_26111E4E8()
{
  return MEMORY[0x270EEE680]();
}

uint64_t sub_26111E4F8()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_26111E508()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_26111E518()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_26111E528()
{
  return MEMORY[0x270EEFBF8]();
}

uint64_t sub_26111E538()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_26111E548()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_26111E558()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_26111E568()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_26111E578()
{
  return MEMORY[0x270EEFD98]();
}

uint64_t sub_26111E588()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_26111E598()
{
  return MEMORY[0x270EEFE18]();
}

uint64_t sub_26111E5A8()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_26111E5B8()
{
  return MEMORY[0x270EEFE38]();
}

uint64_t sub_26111E5C8()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_26111E5D8()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_26111E5E8()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_26111E5F8()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_26111E608()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_26111E618()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_26111E628()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_26111E638()
{
  return MEMORY[0x270EF0000]();
}

uint64_t sub_26111E648()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_26111E658()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_26111E668()
{
  return MEMORY[0x270EF00D0]();
}

uint64_t sub_26111E678()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_26111E688()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_26111E698()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_26111E6A8()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_26111E6B8()
{
  return MEMORY[0x270EF0218]();
}

uint64_t sub_26111E6C8()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_26111E6D8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_26111E6E8()
{
  return MEMORY[0x270EF09D8]();
}

uint64_t sub_26111E6F8()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_26111E708()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_26111E718()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_26111E728()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_26111E738()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_26111E748()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_26111E758()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_26111E768()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_26111E778()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_26111E788()
{
  return MEMORY[0x270F4B998]();
}

uint64_t sub_26111E798()
{
  return MEMORY[0x270F4B9A8]();
}

uint64_t sub_26111E7A8()
{
  return MEMORY[0x270F4BB58]();
}

uint64_t sub_26111E7B8()
{
  return MEMORY[0x270F4BB60]();
}

uint64_t sub_26111E7C8()
{
  return MEMORY[0x270F4BB70]();
}

uint64_t sub_26111E7D8()
{
  return MEMORY[0x270F4BB78]();
}

uint64_t sub_26111E7E8()
{
  return MEMORY[0x270F4BBF0]();
}

uint64_t sub_26111E7F8()
{
  return MEMORY[0x270F4BC00]();
}

uint64_t sub_26111E808()
{
  return MEMORY[0x270F4BC68]();
}

uint64_t sub_26111E818()
{
  return MEMORY[0x270F4BC98]();
}

uint64_t sub_26111E828()
{
  return MEMORY[0x270F4BCA0]();
}

uint64_t sub_26111E838()
{
  return MEMORY[0x270F4BCD8]();
}

uint64_t sub_26111E848()
{
  return MEMORY[0x270F4BD30]();
}

uint64_t sub_26111E858()
{
  return MEMORY[0x270F4BD48]();
}

uint64_t sub_26111E868()
{
  return MEMORY[0x270F4BE70]();
}

uint64_t sub_26111E878()
{
  return MEMORY[0x270F4BFB0]();
}

uint64_t sub_26111E888()
{
  return MEMORY[0x270F4BFB8]();
}

uint64_t sub_26111E898()
{
  return MEMORY[0x270F4BFE8]();
}

uint64_t sub_26111E8A8()
{
  return MEMORY[0x270F4BFF0]();
}

uint64_t sub_26111E8B8()
{
  return MEMORY[0x270F4C068]();
}

uint64_t sub_26111E8C8()
{
  return MEMORY[0x270F4C070]();
}

uint64_t sub_26111E8D8()
{
  return MEMORY[0x270F83A20]();
}

uint64_t sub_26111E8E8()
{
  return MEMORY[0x270F83A38]();
}

uint64_t sub_26111E8F8()
{
  return MEMORY[0x270F83A58]();
}

uint64_t sub_26111E908()
{
  return MEMORY[0x270F83A98]();
}

uint64_t sub_26111E918()
{
  return MEMORY[0x270F83AA8]();
}

uint64_t sub_26111E928()
{
  return MEMORY[0x270F83AB8]();
}

uint64_t sub_26111E938()
{
  return MEMORY[0x270F83AD0]();
}

uint64_t sub_26111E948()
{
  return MEMORY[0x270F83B00]();
}

uint64_t sub_26111E958()
{
  return MEMORY[0x270F83B08]();
}

uint64_t sub_26111E968()
{
  return MEMORY[0x270F83B10]();
}

uint64_t sub_26111E978()
{
  return MEMORY[0x270F83B20]();
}

uint64_t sub_26111E988()
{
  return MEMORY[0x270F83B38]();
}

uint64_t sub_26111E998()
{
  return MEMORY[0x270F83B50]();
}

uint64_t sub_26111E9A8()
{
  return MEMORY[0x270F83B60]();
}

uint64_t sub_26111E9B8()
{
  return MEMORY[0x270F83B70]();
}

uint64_t sub_26111E9C8()
{
  return MEMORY[0x270F83BD0]();
}

uint64_t sub_26111E9D8()
{
  return MEMORY[0x270F83BF0]();
}

uint64_t sub_26111E9E8()
{
  return MEMORY[0x270F83C00]();
}

uint64_t sub_26111E9F8()
{
  return MEMORY[0x270F83C08]();
}

uint64_t sub_26111EA08()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_26111EA18()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_26111EA28()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_26111EA38()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_26111EA48()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_26111EA58()
{
  return MEMORY[0x270FA2D68]();
}

uint64_t sub_26111EA68()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_26111EA78()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_26111EA88()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_26111EA98()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_26111EAA8()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_26111EAB8()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_26111EAC8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_26111EAD8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_26111EAE8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_26111EAF8()
{
  return MEMORY[0x270EE7540]();
}

uint64_t sub_26111EB08()
{
  return MEMORY[0x270FA0998]();
}

uint64_t sub_26111EB18()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_26111EB28()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_26111EB38()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_26111EB48()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_26111EB58()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_26111EB68()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_26111EB78()
{
  return MEMORY[0x270F9D088]();
}

uint64_t sub_26111EB88()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_26111EB98()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_26111EBA8()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_26111EBB8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_26111EBC8()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_26111EBD8()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_26111EBE8()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_26111EBF8()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_26111EC08()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_26111EC18()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_26111EC28()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_26111EC38()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_26111EC48()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_26111EC58()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_26111EC68()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_26111EC78()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_26111EC88()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_26111EC98()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_26111ECA8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_26111ECB8()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_26111ECC8()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_26111ECE8()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_26111ECF8()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_26111ED08()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_26111ED18()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_26111ED28()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_26111ED38()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_26111ED48()
{
  return MEMORY[0x270F9DA28]();
}

uint64_t sub_26111ED58()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_26111ED68()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_26111ED78()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_26111ED88()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_26111ED98()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_26111EDA8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_26111EDB8()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_26111EDC8()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_26111EDD8()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_26111EDE8()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_26111EDF8()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_26111EE08()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_26111EE18()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_26111EE28()
{
  return MEMORY[0x270EF1C70]();
}

uint64_t sub_26111EE38()
{
  return MEMORY[0x270F9DE48]();
}

uint64_t sub_26111EE48()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_26111EE58()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_26111EE68()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_26111EE78()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_26111EE88()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_26111EE98()
{
  return MEMORY[0x270EF1CF8]();
}

uint64_t sub_26111EEA8()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_26111EEB8()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_26111EEC8()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_26111EED8()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_26111EEE8()
{
  return MEMORY[0x270FA2BC8]();
}

uint64_t sub_26111EEF8()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_26111EF08()
{
  return MEMORY[0x270EE78E8]();
}

uint64_t sub_26111EF18()
{
  return MEMORY[0x270EE78F0]();
}

uint64_t sub_26111EF28()
{
  return MEMORY[0x270EE7918]();
}

uint64_t sub_26111EF38()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_26111EF48()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_26111EF58()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_26111EF68()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_26111EF78()
{
  return MEMORY[0x270FA0C38]();
}

uint64_t sub_26111EF88()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_26111EF98()
{
  return MEMORY[0x270FA0D38]();
}

uint64_t sub_26111EFA8()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_26111EFB8()
{
  return MEMORY[0x270FA0D78]();
}

uint64_t sub_26111EFC8()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_26111EFD8()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_26111EFE8()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_26111EFF8()
{
  return MEMORY[0x270F06968]();
}

uint64_t sub_26111F008()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_26111F018()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_26111F028()
{
  return MEMORY[0x270EE4218]();
}

uint64_t sub_26111F038()
{
  return MEMORY[0x270EE4230]();
}

uint64_t sub_26111F048()
{
  return MEMORY[0x270EE4238]();
}

uint64_t sub_26111F058()
{
  return MEMORY[0x270EF20F8]();
}

uint64_t sub_26111F068()
{
  return MEMORY[0x270EF2100]();
}

uint64_t sub_26111F078()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_26111F088()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_26111F098()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_26111F0A8()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_26111F0B8()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_26111F0C8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_26111F0D8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_26111F0E8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_26111F0F8()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_26111F108()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_26111F118()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_26111F128()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_26111F138()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_26111F148()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_26111F158()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_26111F168()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_26111F178()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_26111F188()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_26111F198()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_26111F1A8()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_26111F1B8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_26111F1C8()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_26111F1D8()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_26111F1E8()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_26111F1F8()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_26111F208()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_26111F218()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_26111F228()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_26111F238()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_26111F248()
{
  return MEMORY[0x270F9E9D8]();
}

uint64_t sub_26111F258()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_26111F268()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_26111F278()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_26111F288()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_26111F298()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_26111F2A8()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_26111F2B8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_26111F2C8()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_26111F2D8()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_26111F2E8()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_26111F2F8()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_26111F308()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_26111F318()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_26111F328()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_26111F338()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_26111F348()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_26111F358()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_26111F368()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_26111F378()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_26111F388()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_26111F398()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_26111F3B8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_26111F3C8()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_26111F3D8()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_26111F3E8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_26111F3F8()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_26111F408()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_26111F418()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_26111F428()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_26111F438()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_26111F448()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_26111F458()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_26111F468()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_26111F478()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_26111F488()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_26111F498()
{
  return MEMORY[0x270EF26E0]();
}

uint64_t sub_26111F4A8()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_26111F4B8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_26111F4C8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_26111F4D8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_26111F4E8()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_26111F4F8()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_26111F508()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x270EF2A50](aClassName);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cblas_sgemm_NEWLAPACK()
{
  return MEMORY[0x270EDE440]();
}

uint64_t cblas_snrm2_NEWLAPACK()
{
  return MEMORY[0x270EDE480]();
}

uint64_t cblas_sscal_NEWLAPACK()
{
  return MEMORY[0x270EDE490]();
}

clock_t clock(void)
{
  return MEMORY[0x270ED8EE8]();
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

double drand48(void)
{
  MEMORY[0x270ED9670]();
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x270EDB0B0]();
}

void srand48(uint64_t a1)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}