char *TextCompositionClient.init()()
{
  char *v0;
  id v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  *(void *)&v0[OBJC_IVAR___TextCompositionClient_client] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TextCompositionClient();
  v1 = objc_msgSendSuper2(&v5, sel_init);
  sub_25B9D9E04(&qword_26B34AAE8, v2, (void (*)(uint64_t))type metadata accessor for TextCompositionClient);
  sub_25B94E854(&qword_26B34AAE0);
  swift_allocObject();
  v3 = (char *)v1;
  *(void *)&v3[OBJC_IVAR___TextCompositionClient_client] = sub_25B9EC9F0();
  swift_release();
  return v3;
}

uint64_t sub_25B94E824()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25B94E854(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25B94E898()
{
  return 0x4974736575716572;
}

uint64_t sub_25B94E8C4()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_25B94E8E4()
{
  return 0;
}

void sub_25B94E900(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_25B94E920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B958F08(*(void *)(a1 + a2), *(void *)(a1 + a2 + 8));
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV09requestedD6StylesShyAA0D6ClientC0D5StyleOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B94E950()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B94E974()
{
  return sub_25B9ED590();
}

uint64_t sub_25B94E9A0()
{
  return v0 - 128;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for TextCompositionXPCService()
{
}

uint64_t type metadata accessor for TextCompositionClient()
{
  return self;
}

uint64_t Attachment.init(contentType:fileName:contentDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Attachment();
  v13 = (void *)(a6 + *(int *)(v12 + 20));
  v14 = (void *)(a6 + *(int *)(v12 + 24));
  sub_25B9ECA20();
  sub_25B95097C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(a6, a1);
  void *v13 = a2;
  v13[1] = a3;
  void *v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t type metadata accessor for Attachment()
{
  uint64_t result = qword_26A51B108;
  if (!qword_26A51B108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Attachment.contentType.getter@<X0>(uint64_t a1@<X8>)
{
  sub_25B9ECA20();
  sub_25B95097C();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t Attachment.contentType.setter(uint64_t a1)
{
  sub_25B9ECA20();
  sub_25B95097C();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*Attachment.contentType.modify())()
{
  return nullsub_1;
}

uint64_t Attachment.fileName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Attachment() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Attachment.fileName.setter(uint64_t a1, uint64_t a2)
{
  v5 = (void *)(v2 + *(int *)(type metadata accessor for Attachment() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Attachment.fileName.modify())()
{
  return nullsub_1;
}

uint64_t Attachment.contentDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Attachment() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Attachment.contentDescription.setter(uint64_t a1, uint64_t a2)
{
  v5 = (void *)(v2 + *(int *)(type metadata accessor for Attachment() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Attachment.contentDescription.modify())()
{
  return nullsub_1;
}

BOOL sub_25B94ED88(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_25B94ED98()
{
  return sub_25B9ED750();
}

uint64_t sub_25B94EDC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000025B9EEBB0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25B94EF28()
{
  return 3;
}

uint64_t sub_25B94EF30()
{
  return sub_25B9ED790();
}

uint64_t sub_25B94EF78()
{
  return 0;
}

uint64_t sub_25B94EF84(char a1)
{
  if (!a1) {
    return 0x54746E65746E6F63;
  }
  if (a1 == 1) {
    return 0x656D614E656C6966;
  }
  return 0xD000000000000012;
}

BOOL sub_25B94EFE8(char *a1, char *a2)
{
  return sub_25B94ED88(*a1, *a2);
}

uint64_t sub_25B94EFF4()
{
  return sub_25B94EF30();
}

uint64_t sub_25B94EFFC()
{
  return sub_25B94ED98();
}

uint64_t sub_25B94F004()
{
  return sub_25B9ED790();
}

uint64_t sub_25B94F048()
{
  return sub_25B94EF84(*v0);
}

uint64_t sub_25B94F050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B94EDC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B94F078()
{
  return sub_25B94EF78();
}

uint64_t sub_25B94F098@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B94EF28();
  *a1 = result;
  return result;
}

uint64_t sub_25B94F0C0(uint64_t a1)
{
  unint64_t v2 = sub_25B94F324();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B94F0FC(uint64_t a1)
{
  unint64_t v2 = sub_25B94F324();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Attachment.encode(to:)(void *a1)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51B0D8);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388]();
  sub_25B950870();
  uint64_t v8 = v7 - v6;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B94F324();
  sub_25B9ED7B0();
  sub_25B9ECA20();
  sub_25B94F6AC(&qword_26A51B0E8);
  sub_25B9ED660();
  if (!v1)
  {
    type metadata accessor for Attachment();
    sub_25B9ED5E0();
    sub_25B9ED5E0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v3);
}

void *sub_25B94F2E0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25B94F324()
{
  unint64_t result = qword_26A51B0E0;
  if (!qword_26A51B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B0E0);
  }
  return result;
}

uint64_t Attachment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25B9ECA20();
  sub_25B950790();
  uint64_t v25 = v5;
  MEMORY[0x270FA5388]();
  sub_25B950870();
  uint64_t v26 = v7 - v6;
  uint64_t v27 = sub_25B94E854(&qword_26A51B0F0);
  sub_25B950790();
  uint64_t v24 = v8;
  MEMORY[0x270FA5388]();
  sub_25B950870();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Attachment();
  MEMORY[0x270FA5388]();
  sub_25B950870();
  uint64_t v14 = v13 - v12;
  v16 = (uint64_t *)(v13 - v12 + *(int *)(v15 + 28));
  uint64_t *v16 = 0;
  v16[1] = 0;
  v17 = (uint64_t *)(v13 - v12 + *(int *)(v15 + 32));
  uint64_t *v17 = 0;
  v17[1] = 0;
  v28 = v17;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B94F324();
  sub_25B9ED7A0();
  if (v2)
  {
    sub_25B94F65C((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B94F6AC(&qword_26A51B0F8);
    sub_25B9ED590();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v14, v26, v4);
    uint64_t *v16 = sub_25B9ED510();
    v16[1] = v18;
    uint64_t v19 = sub_25B9ED510();
    uint64_t v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v27);
    swift_bridgeObjectRelease();
    uint64_t *v28 = v19;
    v28[1] = v21;
    sub_25B94F6F0(v14, a2);
    sub_25B94F65C((uint64_t)a1);
    return sub_25B94F754(v14);
  }
}

uint64_t sub_25B94F65C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_25B94F6AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B9ECA20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B94F6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Attachment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B94F754(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Attachment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B94F7B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Attachment.init(from:)(a1, a2);
}

uint64_t sub_25B94F7C8(void *a1)
{
  return Attachment.encode(to:)(a1);
}

uint64_t default argument 3 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B9EC970();
  sub_25B950790();
  MEMORY[0x270FA5388](v0);
  sub_25B9508C0();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_25B950910();
  sub_25B950818(v2);
  uint64_t v3 = sub_25B9507AC();
  v4(v3);
  uint64_t v5 = sub_25B9EC950();
  sub_25B950838(v5);
  uint64_t v6 = sub_25B9507C4();
  v7(v6);
  return sub_25B9EC990();
}

uint64_t _s4Sage24ClassificationXPCRequestC7RequestOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t default argument 4 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B9EC910();
  sub_25B950790();
  MEMORY[0x270FA5388](v0);
  sub_25B9508E8();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_25B950938();
  sub_25B950818(v2);
  uint64_t v3 = sub_25B9507AC();
  v4(v3);
  uint64_t v5 = sub_25B9EC8F0();
  sub_25B950838(v5);
  uint64_t v6 = sub_25B9507C4();
  v7(v6);
  return sub_25B9EC930();
}

uint64_t default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B9EC970();
  sub_25B950790();
  MEMORY[0x270FA5388](v0);
  sub_25B9508C0();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_25B950910();
  sub_25B950818(v2);
  uint64_t v3 = sub_25B9507AC();
  v4(v3);
  uint64_t v5 = sub_25B9EC950();
  sub_25B950838(v5);
  uint64_t v6 = sub_25B9507C4();
  v7(v6);
  return sub_25B9EC990();
}

uint64_t default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B9EC910();
  sub_25B950790();
  MEMORY[0x270FA5388](v0);
  sub_25B9508E8();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_25B950938();
  sub_25B950818(v2);
  uint64_t v3 = sub_25B9507AC();
  v4(v3);
  uint64_t v5 = sub_25B9EC8F0();
  sub_25B950838(v5);
  uint64_t v6 = sub_25B9507C4();
  v7(v6);
  return sub_25B9EC930();
}

uint64_t default argument 2 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B94E854(&qword_26A51B100);
  MEMORY[0x270FA5388]();
  sub_25B950960();
  MEMORY[0x270FA5388]();
  uint64_t v1 = sub_25B95098C();
  sub_25B950880(v1);
  sub_25B9509C0();
  sub_25B9507DC(MEMORY[0x263F8EE88], v3);
  sub_25B9EC560();
  sub_25B9EC540();
  sub_25B9EC550();
  return sub_25B94FD14(v0);
}

uint64_t sub_25B94FCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51B100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B94FD14(uint64_t a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51B100);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t default argument 1 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  sub_25B94E854(&qword_26A51B100);
  MEMORY[0x270FA5388]();
  sub_25B950960();
  MEMORY[0x270FA5388]();
  uint64_t v1 = sub_25B95098C();
  sub_25B950880(v1);
  sub_25B9509C0();
  sub_25B9507DC(MEMORY[0x263F8EE88], v3);
  sub_25B9EC560();
  sub_25B9EC540();
  sub_25B9EC550();
  return sub_25B94FD14(v0);
}

uint64_t *initializeBufferWithCopyOfBuffer for Attachment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B9ECA20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Attachment(uint64_t a1)
{
  uint64_t v2 = sub_25B9ECA20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B950248);
}

uint64_t sub_25B950248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25B9ECA20();
  sub_25B950858();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4Sage24ClassificationXPCRequestC7RequestOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Attachment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B950320);
}

void sub_25B950320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25B9ECA20();
  sub_25B950858();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
}

uint64_t sub_25B9503AC()
{
  uint64_t result = sub_25B9ECA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithTake for ModelBundleEnvelope(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_25B950454(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25B950474(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

unsigned char *initializeBufferWithCopyOfBuffer for Attachment.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Attachment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Attachment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B950610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25B950638(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25B950640(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Attachment.CodingKeys()
{
  return &type metadata for Attachment.CodingKeys;
}

unint64_t sub_25B95065C()
{
  unint64_t result = qword_26A51B120;
  if (!qword_26A51B120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B120);
  }
  return result;
}

unint64_t sub_25B9506AC()
{
  unint64_t result = qword_26A51B128;
  if (!qword_26A51B128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B128);
  }
  return result;
}

unint64_t sub_25B9506FC()
{
  unint64_t result = qword_26A51B130;
  if (!qword_26A51B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B130);
  }
  return result;
}

void sub_25B950748(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25B9507AC()
{
  return v0;
}

uint64_t sub_25B9507C4()
{
  return v0;
}

uint64_t sub_25B9507DC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  LOBYTE(a2) = v3;
  return MEMORY[0x270F7EF00](v2, 0, 1, 0, 1, 0, 1, 0, a2, a1, 0);
}

uint64_t sub_25B950818(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
}

uint64_t sub_25B950838(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
}

uint64_t sub_25B950880(uint64_t a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
  return sub_25B94FCAC(v1, v2);
}

uint64_t sub_25B9508C0()
{
  return MEMORY[0x270F2FDA8](0);
}

uint64_t sub_25B9508E8()
{
  return MEMORY[0x270F2FD08](0);
}

uint64_t sub_25B950910()
{
  return MEMORY[0x270F2FDC0](0);
}

uint64_t sub_25B950938()
{
  return MEMORY[0x270F2FD20](0);
}

uint64_t sub_25B95098C()
{
  return MEMORY[0x270F7EE70](0);
}

uint64_t sub_25B9509AC()
{
  return v0;
}

uint64_t sub_25B9509DC()
{
  return 1;
}

uint64_t static ClassificationXPCRequest.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t ClassificationXPCRequest.Error.hash(into:)()
{
  return sub_25B9ED750();
}

uint64_t ClassificationXPCRequest.Error.hashValue.getter()
{
  return sub_25B9ED790();
}

uint64_t sub_25B950A58()
{
  return ClassificationXPCRequest.Error.hashValue.getter();
}

uint64_t sub_25B950A70()
{
  return ClassificationXPCRequest.Error.hash(into:)();
}

uint64_t sub_25B950A9C(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_25B950AB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_25B9594B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25B9594B0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B950B5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D726177657270 && a2 == 0xE700000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025B9EE890 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025B9EE8B0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025B9EE8D0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000025B9EE8F0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000025B9EE910 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000025B9EE930 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9EFA90)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25B950E50()
{
  return 8;
}

unint64_t sub_25B950E58(char a1)
{
  unint64_t result = 0x6D726177657270;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B950F5C()
{
  return 1;
}

uint64_t sub_25B950F7C()
{
  return 0;
}

uint64_t sub_25B950F88()
{
  return sub_25B9ED750();
}

uint64_t sub_25B950FB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B951020()
{
  return sub_25B9ED790();
}

uint64_t sub_25B951064()
{
  return 12383;
}

uint64_t sub_25B951074()
{
  return sub_25B950A9C(*v0);
}

uint64_t sub_25B95107C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B950AB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9510A4(uint64_t a1)
{
  unint64_t v2 = sub_25B9528E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9510E0(uint64_t a1)
{
  unint64_t v2 = sub_25B9528E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B95111C(uint64_t a1)
{
  unint64_t v2 = sub_25B952628();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B951158(uint64_t a1)
{
  unint64_t v2 = sub_25B952628();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B951194(uint64_t a1)
{
  unint64_t v2 = sub_25B9527B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9511D0(uint64_t a1)
{
  unint64_t v2 = sub_25B9527B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B95120C(uint64_t a1)
{
  unint64_t v2 = sub_25B952590();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B951248(uint64_t a1)
{
  unint64_t v2 = sub_25B952590();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B951284(uint64_t a1)
{
  unint64_t v2 = sub_25B9526C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9512C0(uint64_t a1)
{
  unint64_t v2 = sub_25B9526C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9512FC(uint64_t a1)
{
  unint64_t v2 = sub_25B9524B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B951338(uint64_t a1)
{
  unint64_t v2 = sub_25B9524B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25B951374()
{
  return sub_25B950E58(*v0);
}

uint64_t sub_25B95137C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B950B5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9513A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B950E50();
  *a1 = result;
  return result;
}

uint64_t sub_25B9513CC(uint64_t a1)
{
  unint64_t v2 = sub_25B9523B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B951408(uint64_t a1)
{
  unint64_t v2 = sub_25B9523B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B951448@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B950F5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25B951474()
{
  return sub_25B94EF78();
}

uint64_t sub_25B951490@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B9509DC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25B9514BC(uint64_t a1)
{
  unint64_t v2 = sub_25B952980();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9514F8(uint64_t a1)
{
  unint64_t v2 = sub_25B952980();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B951540()
{
  return sub_25B9ED790();
}

uint64_t sub_25B951584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B950FB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B9515B0(uint64_t a1)
{
  unint64_t v2 = sub_25B952464();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9515EC(uint64_t a1)
{
  unint64_t v2 = sub_25B952464();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClassificationXPCRequest.Request.encode(to:)()
{
  sub_25B95949C();
  uint64_t v61 = v0;
  char v4 = v3;
  sub_25B94E854(&qword_26A51B138);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  sub_25B959440(v6);
  sub_25B94E854(&qword_26A51B140);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B958FE4();
  sub_25B94E854(&qword_26A51B148);
  sub_25B950790();
  MEMORY[0x270FA5388](v8);
  sub_25B958FE4();
  sub_25B959440(v9);
  sub_25B94E854(&qword_26A51B150);
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  sub_25B958FE4();
  sub_25B959440(v11);
  sub_25B94E854(&qword_26A51B158);
  sub_25B950790();
  MEMORY[0x270FA5388](v12);
  sub_25B958FE4();
  sub_25B959338(v13);
  type metadata accessor for UserNotification();
  sub_25B95097C();
  MEMORY[0x270FA5388](v14);
  sub_25B958FE4();
  uint64_t v58 = v15;
  sub_25B94E854(&qword_26A51B160);
  sub_25B950790();
  MEMORY[0x270FA5388](v16);
  sub_25B958FE4();
  sub_25B959338(v17);
  type metadata accessor for TextMessage();
  sub_25B95097C();
  MEMORY[0x270FA5388](v18);
  sub_25B958FE4();
  uint64_t v57 = v19;
  sub_25B94E854(&qword_26A51B168);
  sub_25B950790();
  MEMORY[0x270FA5388](v20);
  sub_25B958FE4();
  sub_25B959338(v21);
  type metadata accessor for MailMessage();
  sub_25B95097C();
  MEMORY[0x270FA5388](v22);
  sub_25B958FE4();
  sub_25B959440(v23);
  sub_25B94E854(&qword_26A51B170);
  sub_25B950790();
  MEMORY[0x270FA5388](v24);
  sub_25B959268();
  sub_25B95097C();
  MEMORY[0x270FA5388](v25);
  sub_25B959398();
  uint64_t v59 = sub_25B94E854(&qword_26A51B178);
  sub_25B950790();
  uint64_t v60 = v26;
  MEMORY[0x270FA5388](v27);
  sub_25B950870();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = v4[3];
  sub_25B94F2E0(v4, v31);
  sub_25B9523B4();
  sub_25B9ED7B0();
  sub_25B952400(v61, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v37 = sub_25B94E854(&qword_26A51B210);
      sub_25B9592A8(v37);
      uint64_t v38 = v57;
      sub_25B952758(v2, v57, (void (*)(void))type metadata accessor for TextMessage);
      sub_25B9527B4();
      sub_25B959460();
      sub_25B952800(&qword_26A51B220, (void (*)(uint64_t))type metadata accessor for TextMessage);
      sub_25B9ED660();
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v39();
        v40 = type metadata accessor for TextMessage;
        goto LABEL_8;
      }
      sub_25B9594DC();
      sub_25B95289C();
      sub_25B9ED660();
      sub_25B959038();
      v50();
      sub_25B952848(v57, (void (*)(void))type metadata accessor for TextMessage);
      sub_25B959038();
      v51();
      goto LABEL_25;
    case 2u:
      sub_25B94E854(&qword_26A51B1F0);
      uint64_t v38 = v58;
      sub_25B952758(v2, v58, (void (*)(void))type metadata accessor for UserNotification);
      sub_25B9526C0();
      sub_25B959460();
      sub_25B952800(&qword_26A51B200, (void (*)(uint64_t))type metadata accessor for UserNotification);
      sub_25B9ED660();
      if (!v1)
      {
        sub_25B95270C();
        sub_25B9ED660();
        sub_25B959038();
        v52();
        sub_25B952848(v58, (void (*)(void))type metadata accessor for UserNotification);
        sub_25B959038();
        v53();
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B959038();
      v41();
      v40 = type metadata accessor for UserNotification;
LABEL_8:
      sub_25B952848(v38, (void (*)(void))v40);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v31, v2);
    case 3u:
      sub_25B959318();
      sub_25B952628();
      sub_25B9590F8();
      sub_25B94E854(&qword_26A51B1D8);
      sub_25B9557DC(&qword_26A51B1E0, &qword_26A51B1D8);
      sub_25B959404();
      sub_25B959194();
      if (v1) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      sub_25B95911C();
      sub_25B952674();
      sub_25B9591B4();
      goto LABEL_24;
    case 4u:
      sub_25B959318();
      sub_25B952590();
      sub_25B9590F8();
      sub_25B94E854(&qword_26A51B1B8);
      sub_25B9557DC(&qword_26A51B1C0, &qword_26A51B1B8);
      sub_25B959404();
      sub_25B959194();
      if (v1) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      sub_25B95911C();
      sub_25B9525DC();
      sub_25B9591B4();
      goto LABEL_24;
    case 5u:
      sub_25B959318();
      sub_25B9524B0();
      sub_25B9590F8();
      sub_25B94E854(&qword_26A51B198);
      sub_25B9557DC(&qword_26A51B1A0, &qword_26A51B198);
      sub_25B959404();
      sub_25B959194();
      if (v1)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v43();
        sub_25B959038();
        v44();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_25B95911C();
      sub_25B952544();
      sub_25B9591B4();
LABEL_24:
      sub_25B959038();
      v54();
      sub_25B959038();
      v55();
      goto LABEL_25;
    case 6u:
      sub_25B952464();
      sub_25B9ED5D0();
      sub_25B9ED630();
      sub_25B959038();
      v45();
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8);
      uint64_t v34 = v30;
      uint64_t v35 = v59;
      return v36(v34, v35);
    case 7u:
      sub_25B952980();
      sub_25B9ED5D0();
      sub_25B959038();
      v46();
      sub_25B959038();
      return v47();
    default:
      uint64_t v32 = sub_25B94E854(&qword_26A51B230);
      sub_25B9592A8(v32);
      sub_25B952758(v2, v56, (void (*)(void))type metadata accessor for MailMessage);
      sub_25B9528E8();
      sub_25B9ED5D0();
      sub_25B952800(&qword_26A51B240, (void (*)(uint64_t))type metadata accessor for MailMessage);
      sub_25B9ED660();
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v33();
        sub_25B952848(v56, (void (*)(void))type metadata accessor for MailMessage);
        uint64_t v34 = sub_25B959480();
        return v36(v34, v35);
      }
      else
      {
        sub_25B9594DC();
        sub_25B952934();
        sub_25B9ED660();
        sub_25B959038();
        v48();
        sub_25B952848(v56, (void (*)(void))type metadata accessor for MailMessage);
        sub_25B959480();
        sub_25B959038();
        v49();
LABEL_25:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
  }
}

uint64_t type metadata accessor for ClassificationXPCRequest.Request(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51B348);
}

unint64_t sub_25B9523B4()
{
  unint64_t result = qword_26A51B180;
  if (!qword_26A51B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B180);
  }
  return result;
}

uint64_t sub_25B952400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B952464()
{
  unint64_t result = qword_26A51B188;
  if (!qword_26A51B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B188);
  }
  return result;
}

unint64_t sub_25B9524B0()
{
  unint64_t result = qword_26A51B190;
  if (!qword_26A51B190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B190);
  }
  return result;
}

uint64_t sub_25B9524FC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25B952544()
{
  unint64_t result = qword_26A51B1A8;
  if (!qword_26A51B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1A8);
  }
  return result;
}

unint64_t sub_25B952590()
{
  unint64_t result = qword_26A51B1B0;
  if (!qword_26A51B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1B0);
  }
  return result;
}

unint64_t sub_25B9525DC()
{
  unint64_t result = qword_26A51B1C8;
  if (!qword_26A51B1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1C8);
  }
  return result;
}

unint64_t sub_25B952628()
{
  unint64_t result = qword_26A51B1D0;
  if (!qword_26A51B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1D0);
  }
  return result;
}

unint64_t sub_25B952674()
{
  unint64_t result = qword_26A51B1E8;
  if (!qword_26A51B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1E8);
  }
  return result;
}

unint64_t sub_25B9526C0()
{
  unint64_t result = qword_26A51B1F8;
  if (!qword_26A51B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B1F8);
  }
  return result;
}

unint64_t sub_25B95270C()
{
  unint64_t result = qword_26A51B208;
  if (!qword_26A51B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B208);
  }
  return result;
}

uint64_t sub_25B952758(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25B95097C();
  uint64_t v4 = sub_25B9593F8();
  v5(v4);
  return a2;
}

unint64_t sub_25B9527B4()
{
  unint64_t result = qword_26A51B218;
  if (!qword_26A51B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B218);
  }
  return result;
}

uint64_t sub_25B952800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B952848(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

unint64_t sub_25B95289C()
{
  unint64_t result = qword_26A51B228;
  if (!qword_26A51B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B228);
  }
  return result;
}

unint64_t sub_25B9528E8()
{
  unint64_t result = qword_26A51B238;
  if (!qword_26A51B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B238);
  }
  return result;
}

unint64_t sub_25B952934()
{
  unint64_t result = qword_26A51B248;
  if (!qword_26A51B248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B248);
  }
  return result;
}

unint64_t sub_25B952980()
{
  unint64_t result = qword_26A51B250;
  if (!qword_26A51B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B250);
  }
  return result;
}

uint64_t ClassificationXPCRequest.Request.init(from:)()
{
  sub_25B95949C();
  uint64_t v123 = v2;
  uint64_t v124 = v3;
  v121 = (char *)v0;
  uint64_t v5 = v4;
  uint64_t v106 = v6;
  uint64_t v98 = sub_25B94E854(&qword_26A51B258);
  sub_25B950790();
  uint64_t v113 = v7;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  uint64_t v111 = v8;
  uint64_t v100 = sub_25B94E854(&qword_26A51B260);
  sub_25B950790();
  uint64_t v114 = v9;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  v119 = v10;
  uint64_t v99 = sub_25B94E854(&qword_26A51B268);
  sub_25B950790();
  uint64_t v105 = v11;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  v112 = v12;
  uint64_t v97 = sub_25B94E854(&qword_26A51B270);
  sub_25B950790();
  uint64_t v104 = v13;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  v110 = v14;
  uint64_t v96 = sub_25B94E854(&qword_26A51B278);
  sub_25B950790();
  uint64_t v103 = v15;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  uint64_t v118 = v16;
  uint64_t v95 = sub_25B94E854(&qword_26A51B280);
  sub_25B950790();
  uint64_t v102 = v17;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  uint64_t v109 = v18;
  uint64_t v94 = sub_25B94E854(&qword_26A51B288);
  sub_25B950790();
  uint64_t v101 = v19;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  uint64_t v108 = v20;
  uint64_t v93 = sub_25B94E854(&qword_26A51B290);
  sub_25B950790();
  uint64_t v92 = v21;
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B958FE4();
  uint64_t v107 = v22;
  sub_25B94E854(&qword_26A51B298);
  sub_25B950790();
  uint64_t v116 = v24;
  uint64_t v117 = v23;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v115 = sub_25B959268();
  sub_25B95097C();
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B959348();
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B959348();
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_25B959348();
  uint64_t v25 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v27 = (char *)v90 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)v90 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  v33 = (char *)v90 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  v36 = (char *)v90 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)v90 - v37;
  uint64_t v39 = v5[3];
  v120 = v5;
  sub_25B94F2E0(v5, v39);
  sub_25B9523B4();
  uint64_t v40 = (uint64_t)v121;
  sub_25B9ED7A0();
  if (v40) {
    goto LABEL_13;
  }
  v90[3] = v27;
  v90[4] = v36;
  v90[5] = v33;
  v90[6] = v30;
  v41 = v119;
  v121 = v38;
  uint64_t v42 = v117;
  uint64_t v43 = sub_25B9ED5B0();
  uint64_t v44 = *(void *)(v43 + 16);
  if (!v44
    || (v90[2] = 0,
        uint64_t v45 = *(unsigned __int8 *)(v43 + 32),
        sub_25B958E4C(1, v44, v43, v43 + 32, 0, (2 * v44) | 1),
        uint64_t v47 = v46,
        unint64_t v49 = v48,
        swift_bridgeObjectRelease(),
        v47 != v49 >> 1))
  {
    uint64_t v54 = sub_25B9ED3D0();
    swift_allocError();
    uint64_t v56 = v55;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v56 = v115;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v54 - 8) + 104))(v56, *MEMORY[0x263F8DCB0], v54);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v1, v42);
LABEL_13:
    uint64_t v59 = (uint64_t)v120;
    return sub_25B94F65C(v59);
  }
  v90[1] = v1;
  uint64_t v50 = v113;
  switch(v45)
  {
    case 1:
      LOBYTE(v122) = 1;
      sub_25B9528E8();
      sub_25B958FF8();
      type metadata accessor for MailMessage();
      LOBYTE(v122) = 0;
      sub_25B952800(&qword_26A51B2F8, (void (*)(uint64_t))type metadata accessor for MailMessage);
      sub_25B959370();
      sub_25B9590E0();
      sub_25B95925C();
      sub_25B94E854(&qword_26A51B230);
      sub_25B959248();
      sub_25B955904();
      sub_25B9590A4();
      sub_25B959038();
      v75();
      swift_unknownObjectRelease();
      uint64_t v76 = sub_25B95901C();
      v77(v76);
      goto LABEL_16;
    case 2:
      LOBYTE(v122) = 2;
      sub_25B9527B4();
      sub_25B958FF8();
      type metadata accessor for TextMessage();
      LOBYTE(v122) = 0;
      sub_25B952800(&qword_26A51B2E8, (void (*)(uint64_t))type metadata accessor for TextMessage);
      sub_25B959370();
      sub_25B9590E0();
      sub_25B95925C();
      sub_25B94E854(&qword_26A51B210);
      sub_25B959248();
      sub_25B9558B8();
      sub_25B9590A4();
      sub_25B959038();
      v78();
      swift_unknownObjectRelease();
      uint64_t v79 = sub_25B95901C();
      v80(v79);
      goto LABEL_16;
    case 3:
      LOBYTE(v122) = 3;
      sub_25B9526C0();
      sub_25B958FF8();
      type metadata accessor for UserNotification();
      LOBYTE(v122) = 0;
      sub_25B952800(&qword_26A51B2D8, (void (*)(uint64_t))type metadata accessor for UserNotification);
      sub_25B959370();
      sub_25B9590E0();
      sub_25B95925C();
      sub_25B94E854(&qword_26A51B1F0);
      sub_25B959248();
      sub_25B95586C();
      sub_25B9590A4();
      sub_25B959038();
      v81();
      swift_unknownObjectRelease();
      uint64_t v82 = sub_25B95901C();
      v83(v82);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      uint64_t v84 = v50;
      goto LABEL_18;
    case 4:
      LOBYTE(v122) = 4;
      sub_25B952628();
      uint64_t v57 = v110;
      sub_25B958FF8();
      sub_25B94E854(&qword_26A51B1D8);
      LOBYTE(v122) = 0;
      sub_25B9557DC(&qword_26A51B2C8, &qword_26A51B1D8);
      sub_25B959214();
      sub_25B9590E0();
      sub_25B95925C();
      sub_25B959328();
      sub_25B955820();
      sub_25B9590A4();
      uint64_t v61 = v57;
      uint64_t v62 = sub_25B959044();
      v63(v62);
      swift_unknownObjectRelease();
      uint64_t v64 = sub_25B95905C();
      v65(v64);
      sub_25B9590C4(v122);
      goto LABEL_17;
    case 5:
      LOBYTE(v122) = 5;
      sub_25B952590();
      uint64_t v58 = v112;
      sub_25B958FF8();
      sub_25B94E854(&qword_26A51B1B8);
      LOBYTE(v122) = 0;
      sub_25B9557DC(&qword_26A51B2B8, &qword_26A51B1B8);
      sub_25B959214();
      sub_25B9590E0();
      sub_25B95925C();
      sub_25B959328();
      sub_25B955790();
      sub_25B9590A4();
      uint64_t v61 = v58;
      uint64_t v66 = sub_25B959044();
      v67(v66);
      swift_unknownObjectRelease();
      uint64_t v68 = sub_25B95905C();
      v69(v68);
      sub_25B9590C4(v122);
      goto LABEL_17;
    case 6:
      LOBYTE(v122) = 6;
      sub_25B9524B0();
      sub_25B958FF8();
      sub_25B94E854(&qword_26A51B198);
      LOBYTE(v122) = 0;
      uint64_t v61 = v41;
      sub_25B9557DC(&qword_26A51B2A8, &qword_26A51B198);
      sub_25B959214();
      sub_25B9ED590();
      sub_25B95925C();
      sub_25B959328();
      sub_25B955744();
      sub_25B9ED590();
      uint64_t v85 = sub_25B959044();
      v86(v85);
      swift_unknownObjectRelease();
      uint64_t v87 = sub_25B95905C();
      v88(v87);
      sub_25B9590C4(v122);
      goto LABEL_17;
    case 7:
      LOBYTE(v122) = 7;
      sub_25B952464();
      sub_25B958FF8();
      sub_25B9ED560();
      uint64_t v71 = v70;
      uint64_t v72 = sub_25B959358();
      v73(v72);
      swift_unknownObjectRelease();
      sub_25B9594F0();
      sub_25B959038();
      v74();
      uint64_t v61 = v91;
      void *v91 = v71;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      uint64_t v84 = (uint64_t)v61;
LABEL_18:
      uint64_t v53 = (uint64_t)v121;
      sub_25B952758(v84, (uint64_t)v121, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
      break;
    default:
      LOBYTE(v122) = 0;
      sub_25B952980();
      sub_25B958FF8();
      sub_25B959038();
      v51();
      swift_unknownObjectRelease();
      sub_25B959414();
      sub_25B959038();
      v52();
      uint64_t v53 = (uint64_t)v121;
      swift_storeEnumTagMultiPayload();
      break;
  }
  uint64_t v89 = (uint64_t)v120;
  sub_25B952758(v53, v106, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
  uint64_t v59 = v89;
  return sub_25B94F65C(v59);
}

uint64_t sub_25B95392C()
{
  return ClassificationXPCRequest.Request.init(from:)();
}

uint64_t sub_25B953944()
{
  return ClassificationXPCRequest.Request.encode(to:)();
}

uint64_t ClassificationXPCRequest.RequestInfo.requestIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t ClassificationXPCRequest.RequestInfo.requestIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*ClassificationXPCRequest.RequestInfo.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ClassificationXPCRequest.RequestInfo.useCaseIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t ClassificationXPCRequest.RequestInfo.useCaseIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*ClassificationXPCRequest.RequestInfo.useCaseIdentifier.modify())()
{
  return nullsub_1;
}

Sage::ClassificationXPCRequest::RequestInfo __swiftcall ClassificationXPCRequest.RequestInfo.init(requestIdentifier:useCaseIdentifier:)(Swift::String requestIdentifier, Swift::String useCaseIdentifier)
{
  *uint64_t v2 = requestIdentifier;
  v2[1] = useCaseIdentifier;
  result.useCaseIdentifier = useCaseIdentifier;
  result.requestIdentifier = requestIdentifier;
  return result;
}

BOOL sub_25B953A68(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_25B953A78()
{
  return sub_25B9ED750();
}

uint64_t sub_25B953AA0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFAB0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFAD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B953B8C()
{
  return 2;
}

uint64_t sub_25B953B94()
{
  return sub_25B9ED790();
}

unint64_t sub_25B953BDC()
{
  return 0xD000000000000011;
}

BOOL sub_25B953C10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25B953A68(*a1, *a2);
}

uint64_t sub_25B953C1C()
{
  return sub_25B953B94();
}

uint64_t sub_25B953C38()
{
  return sub_25B953A78();
}

unint64_t sub_25B953C40()
{
  return sub_25B953BDC();
}

uint64_t sub_25B953C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B953AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B953C70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B953B8C();
  *a1 = result;
  return result;
}

uint64_t sub_25B953C98(uint64_t a1)
{
  unint64_t v2 = sub_25B955950();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B953CD4(uint64_t a1)
{
  unint64_t v2 = sub_25B955950();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClassificationXPCRequest.RequestInfo.encode(to:)()
{
  sub_25B95949C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51B308);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B955950();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v0) {
    sub_25B9ED610();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
}

uint64_t ClassificationXPCRequest.RequestInfo.init(from:)()
{
  sub_25B95949C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51B318);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B950870();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B955950();
  sub_25B9ED7A0();
  if (v0) {
    return sub_25B94F65C((uint64_t)v2);
  }
  uint64_t v6 = sub_25B9ED540();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_25B9ED540();
  uint64_t v11 = v10;
  uint64_t v15 = v9;
  uint64_t v12 = sub_25B95944C();
  v13(v12);
  *uint64_t v4 = v6;
  v4[1] = v8;
  v4[2] = v15;
  v4[3] = v11;
  swift_bridgeObjectRetain();
  sub_25B94F65C((uint64_t)v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B954004()
{
  return ClassificationXPCRequest.RequestInfo.init(from:)();
}

uint64_t sub_25B95401C()
{
  return ClassificationXPCRequest.RequestInfo.encode(to:)();
}

uint64_t sub_25B954034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClassificationXPCRequest.Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25B952400(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_25B954100();
}

uint64_t sub_25B9540C0@<X0>(uint64_t a1@<X8>)
{
  sub_25B9593B0();
  return sub_25B952400(v1, a1);
}

uint64_t sub_25B954100()
{
  swift_beginAccess();
  uint64_t v0 = sub_25B9593F8();
  sub_25B958DE4(v0, v1);
  return swift_endAccess();
}

double sub_25B954158@<D0>(uint64_t a1@<X8>)
{
  sub_25B9541EC(&v5);
  double result = *(double *)&v5;
  uint64_t v3 = v6;
  uint64_t v4 = v7;
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_25B95419C(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  *(void *)&long long v5 = *a1;
  *((void *)&v5 + 1) = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_25B95423C(&v5);
}

uint64_t sub_25B9541EC@<X0>(void *a1@<X8>)
{
  sub_25B9593B0();
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B95423C(long long *a1)
{
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo;
  swift_beginAccess();
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id ClassificationXPCRequest.__allocating_init(request:requestInfo:)()
{
  sub_25B9594D0();
  id v3 = objc_allocWithZone(v1);
  return ClassificationXPCRequest.init(request:requestInfo:)(v2, v0);
}

id ClassificationXPCRequest.init(request:requestInfo:)(uint64_t a1, long long *a2)
{
  long long v9 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  sub_25B952400(a1, (uint64_t)&v2[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request]);
  long long v6 = &v2[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo];
  *(_OWORD *)long long v6 = v9;
  *((void *)v6 + 2) = v4;
  *((void *)v6 + 3) = v5;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for ClassificationXPCRequest(0);
  id v7 = objc_msgSendSuper2(&v10, sel_init);
  sub_25B952848(a1, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
  return v7;
}

id ClassificationXPCRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ClassificationXPCRequest.init(coder:)(a1);
}

id ClassificationXPCRequest.init(coder:)(void *a1)
{
  uint64_t v4 = type metadata accessor for ClassificationXPCRequest.Request(0);
  MEMORY[0x270FA5388](v4 - 8);
  sub_25B959398();
  uint64_t v5 = v1;
  sub_25B95522C();
  sub_25B952758(v2, (uint64_t)&v5[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request], (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
  sub_25B954BDC();
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  long long v9 = &v5[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo];
  *(_OWORD *)long long v9 = v12;
  *((void *)v9 + 2) = v7;
  *((void *)v9 + 3) = v8;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for XPCValue();
  id v10 = objc_msgSendSuper2(&v11, sel_init);

  return v10;
}

void sub_25B95477C(void *a1)
{
  sub_25B9EB950(a1);
  sub_25B9541EC(&v7);
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B955A28();
  uint64_t v2 = sub_25B9EC1D0();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_25B9EC280();
  sub_25B955A74(v2, v4);
  sub_25B94E898();
  long long v6 = (void *)sub_25B9ECFC0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
}

uint64_t sub_25B954A9C()
{
  type metadata accessor for ClassificationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v2);
  sub_25B959380();
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
  swift_beginAccess();
  sub_25B952400(v3, v1);
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B952800(&qword_26A51B440, (void (*)(uint64_t))type metadata accessor for ClassificationXPCRequest.Request);
  sub_25B9EC1D0();
  sub_25B952848(v1, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
  return sub_25B9593F8();
}

uint64_t sub_25B954BDC()
{
  sub_25B95949C();
  sub_25B959504();
  uint64_t v1 = sub_25B9ED2A0();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    sub_25B9EC290();
  }
  type metadata accessor for XPCValue();
  sub_25B94E898();
  id v3 = sub_25B9EBBFC();
  swift_willThrow();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B9ECD70();
  sub_25B9559F0(v4, (uint64_t)qword_26A51C170);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = (void *)sub_25B9ECD40();
  os_log_type_t v8 = sub_25B9ED230();
  if (sub_25B9592FC(v8))
  {
    sub_25B9592E0();
    long long v9 = (void *)sub_25B9592C4();
    sub_25B9591D4(5.8381e-34);
    _swift_stdlib_bridgeErrorToNSError();
    sub_25B959078();
    *long long v9 = v0;

    sub_25B9591F4(&dword_25B94C000, v10, v11, "ClassificationXPCRequest.decodeRequestInfo(coder:) failed with error: %{public}@");
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    sub_25B959424();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  return swift_willThrow();
}

id ClassificationXPCRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ClassificationXPCRequest.init()()
{
}

uint64_t sub_25B954E6C()
{
  sub_25B952848(v0 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id ClassificationXPCRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassificationXPCRequest(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25B954F80()
{
  sub_25B95949C();
  sub_25B959504();
  uint64_t v1 = sub_25B959134();
  if (v1)
  {
    objc_super v2 = (void *)v1;
    sub_25B9EC290();
  }
  type metadata accessor for XPCValue();
  id v3 = sub_25B959164();
  swift_willThrow();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B9ECD70();
  sub_25B9559F0(v4, (uint64_t)qword_26A51C170);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = (void *)sub_25B9ECD40();
  os_log_type_t v8 = sub_25B9ED230();
  if (sub_25B9592FC(v8))
  {
    sub_25B9592E0();
    long long v9 = (void *)sub_25B9592C4();
    sub_25B9591D4(5.8381e-34);
    _swift_stdlib_bridgeErrorToNSError();
    sub_25B959078();
    *long long v9 = v0;

    sub_25B9591F4(&dword_25B94C000, v10, v11, "XPCValue.decodeWrappedValue(:coder:) failed with error: %{public}@");
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    sub_25B959424();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  return swift_willThrow();
}

uint64_t sub_25B955174()
{
  return sub_25B95522C();
}

uint64_t sub_25B9551D0()
{
  return sub_25B95522C();
}

uint64_t sub_25B95522C()
{
  sub_25B958EC8();
  uint64_t v1 = sub_25B959134();
  if (v1)
  {
    objc_super v2 = (void *)v1;
    sub_25B9EC290();
  }
  type metadata accessor for XPCValue();
  id v3 = sub_25B959164();
  swift_willThrow();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B9ECD70();
  sub_25B9559F0(v4, (uint64_t)qword_26A51C170);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = (void *)sub_25B9ECD40();
  os_log_type_t v8 = sub_25B9ED230();
  if (sub_25B9592FC(v8))
  {
    sub_25B9592E0();
    long long v9 = (void *)sub_25B9592C4();
    sub_25B9591D4(5.8381e-34);
    _swift_stdlib_bridgeErrorToNSError();
    sub_25B959078();
    *long long v9 = v0;

    sub_25B9591F4(&dword_25B94C000, v10, v11, "XPCValue.decodeWrappedValue(:coder:) failed with error: %{public}@");
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    sub_25B959424();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  return swift_willThrow();
}

uint64_t ClassificationXPCRequest.Request.Category.description.getter()
{
  sub_25B959524();
  uint64_t v2 = 0x6966697373616C63;
  if (!v3) {
    uint64_t v2 = 1953719668;
  }
  if (v0) {
    return v2;
  }
  else {
    return v1;
  }
}

uint64_t ClassificationXPCRequest.Request.Category.rawValue.getter()
{
  sub_25B959524();
  uint64_t v2 = 0x6966697373616C63;
  if (!v3) {
    uint64_t v2 = 1953719668;
  }
  if (v0) {
    return v2;
  }
  else {
    return v1;
  }
}

Sage::ClassificationXPCRequest::Request::Category_optional __swiftcall ClassificationXPCRequest.Request.Category.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_25B95556C()
{
  return sub_25B9B971C();
}

uint64_t sub_25B955578()
{
  return sub_25B9CE174(*v0);
}

uint64_t sub_25B955580(uint64_t a1)
{
  return sub_25B9CE29C(a1, *v1);
}

uint64_t sub_25B955588(uint64_t a1)
{
  return sub_25B9CEBB0(a1, *v1);
}

Sage::ClassificationXPCRequest::Request::Category_optional sub_25B955590(Swift::String *a1)
{
  return ClassificationXPCRequest.Request.Category.init(rawValue:)(*a1);
}

uint64_t sub_25B95559C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ClassificationXPCRequest.Request.Category.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ClassificationXPCRequest.Request.category.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for ClassificationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v4);
  sub_25B950870();
  uint64_t v7 = v6 - v5;
  sub_25B952400(v2, v6 - v5);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v9 = 0;
  switch((int)result)
  {
    case 1:
      sub_25B94E854(&qword_26A51B210);
      sub_25B959228();
      swift_bridgeObjectRelease();
      uint64_t v10 = (void (*)(void))type metadata accessor for TextMessage;
      goto LABEL_6;
    case 2:
      sub_25B94E854(&qword_26A51B1F0);
      sub_25B959228();
      swift_bridgeObjectRelease();
      uint64_t v10 = (void (*)(void))type metadata accessor for UserNotification;
      goto LABEL_6;
    case 3:
    case 4:
    case 5:
      uint64_t v10 = (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request;
      goto LABEL_6;
    case 6:
      char v9 = 2;
      goto LABEL_7;
    case 7:
      goto LABEL_7;
    default:
      sub_25B94E854(&qword_26A51B230);
      sub_25B959228();
      swift_bridgeObjectRelease();
      uint64_t v10 = (void (*)(void))type metadata accessor for MailMessage;
LABEL_6:
      uint64_t result = sub_25B952848(v7, v10);
      char v9 = 1;
LABEL_7:
      *a1 = v9;
      return result;
  }
}

unint64_t sub_25B955744()
{
  unint64_t result = qword_26A51B2B0;
  if (!qword_26A51B2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B2B0);
  }
  return result;
}

unint64_t sub_25B955790()
{
  unint64_t result = qword_26A51B2C0;
  if (!qword_26A51B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B2C0);
  }
  return result;
}

uint64_t sub_25B9557DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B9524FC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B955820()
{
  unint64_t result = qword_26A51B2D0;
  if (!qword_26A51B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B2D0);
  }
  return result;
}

unint64_t sub_25B95586C()
{
  unint64_t result = qword_26A51B2E0;
  if (!qword_26A51B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B2E0);
  }
  return result;
}

unint64_t sub_25B9558B8()
{
  unint64_t result = qword_26A51B2F0;
  if (!qword_26A51B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B2F0);
  }
  return result;
}

unint64_t sub_25B955904()
{
  unint64_t result = qword_26A51B300;
  if (!qword_26A51B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B300);
  }
  return result;
}

unint64_t sub_25B955950()
{
  unint64_t result = qword_26A51B310;
  if (!qword_26A51B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B310);
  }
  return result;
}

uint64_t type metadata accessor for ClassificationXPCRequest(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51B338);
}

uint64_t sub_25B9559BC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25B9559F0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_25B955A28()
{
  unint64_t result = qword_26A51B320;
  if (!qword_26A51B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B320);
  }
  return result;
}

uint64_t sub_25B955A74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_25B955AD0()
{
  unint64_t result = qword_26A51B328;
  if (!qword_26A51B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B328);
  }
  return result;
}

unint64_t sub_25B955B20()
{
  unint64_t result = qword_26A51B330;
  if (!qword_26A51B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B330);
  }
  return result;
}

uint64_t sub_25B955B6C@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9540C0(a1);
}

uint64_t sub_25B955B9C()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_25B955BA4()
{
  uint64_t result = type metadata accessor for ClassificationXPCRequest.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ClassificationXPCRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClassificationXPCRequest);
}

uint64_t dispatch thunk of ClassificationXPCRequest.request.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ClassificationXPCRequest.requestInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ClassificationXPCRequest.__allocating_init(request:requestInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_25B955CDC()
{
  return 0;
}

void type metadata accessor for ClassificationXPCRequest.Error()
{
}

char *initializeBufferWithCopyOfBuffer for ClassificationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v8;
        int v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v10 = *((void *)a2 + 4);
          uint64_t v11 = *((void *)a2 + 5);
          sub_25B9563BC(v10, v11, v9);
          *((void *)a1 + 4) = v10;
          *((void *)a1 + 5) = v11;
          a1[48] = v9;
        }
        uint64_t v28 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v28;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v29 = (int *)type metadata accessor for MailMessage();
        uint64_t v30 = v29[7];
        uint64_t v96 = &a1[v30];
        uint64_t v31 = &a2[v30];
        uint64_t v32 = sub_25B9EC2B0();
        v33 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v33(v96, v31, v32);
        a1[v29[8]] = a2[v29[8]];
        uint64_t v34 = v29[9];
        uint64_t v35 = &a1[v34];
        v36 = &a2[v34];
        uint64_t v37 = *((void *)v36 + 1);
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = v37;
        uint64_t v38 = v29[10];
        uint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        uint64_t v41 = *((void *)v40 + 1);
        *(void *)uint64_t v39 = *(void *)v40;
        *((void *)v39 + 1) = v41;
        *(void *)&a1[v29[11]] = *(void *)&a2[v29[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = *(int *)(sub_25B94E854(&qword_26A51B230) + 48);
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        uint64_t v45 = *((void *)v44 + 1);
        *(void *)uint64_t v43 = *(void *)v44;
        *((void *)v43 + 1) = v45;
        v43[16] = v44[16];
        *((void *)v43 + 3) = *((void *)v44 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 1u:
        uint64_t v13 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v13;
        uint64_t v14 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v14;
        int v15 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v16 = *((void *)a2 + 4);
          uint64_t v17 = *((void *)a2 + 5);
          sub_25B9563BC(v16, v17, v15);
          *((void *)a1 + 4) = v16;
          *((void *)a1 + 5) = v17;
          a1[48] = v15;
        }
        uint64_t v46 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v46;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v47 = (int *)type metadata accessor for TextMessage();
        uint64_t v48 = v47[7];
        uint64_t v97 = &a1[v48];
        unint64_t v49 = &a2[v48];
        uint64_t v50 = sub_25B9EC2B0();
        v51 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51(v97, v49, v50);
        a1[v47[8]] = a2[v47[8]];
        uint64_t v52 = v47[9];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = *((void *)v54 + 1);
        *(void *)uint64_t v53 = *(void *)v54;
        *((void *)v53 + 1) = v55;
        uint64_t v56 = v47[10];
        uint64_t v57 = &a1[v56];
        uint64_t v58 = &a2[v56];
        uint64_t v59 = *((void *)v58 + 1);
        *(void *)uint64_t v57 = *(void *)v58;
        *((void *)v57 + 1) = v59;
        *(void *)&a1[v47[11]] = *(void *)&a2[v47[11]];
        *(void *)&a1[v47[12]] = *(void *)&a2[v47[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v60 = *(int *)(sub_25B94E854(&qword_26A51B210) + 48);
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        uint64_t v63 = *((void *)v62 + 1);
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = v63;
        v61[16] = v62[16];
        *((void *)v61 + 3) = *((void *)v62 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 2u:
        uint64_t v18 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v18;
        uint64_t v19 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v19;
        uint64_t v20 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20 == 1)
        {
          long long v21 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v21;
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = v20;
          int v25 = a2[64];
          swift_bridgeObjectRetain();
          if (v25 == 255)
          {
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
          }
          else
          {
            uint64_t v26 = *((void *)a2 + 6);
            uint64_t v27 = *((void *)a2 + 7);
            sub_25B9563BC(v26, v27, v25);
            *((void *)a1 + 6) = v26;
            *((void *)a1 + 7) = v27;
            a1[64] = v25;
          }
          uint64_t v64 = *((void *)a2 + 10);
          *((void *)a1 + 9) = *((void *)a2 + 9);
          *((void *)a1 + 10) = v64;
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        uint64_t v65 = *((void *)a2 + 13);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = v65;
        uint64_t v66 = (int *)type metadata accessor for UserNotification();
        uint64_t v67 = v66[10];
        uint64_t v98 = &a1[v67];
        uint64_t v68 = &a2[v67];
        uint64_t v69 = sub_25B9EC2B0();
        uint64_t v70 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v70(v98, v68, v69);
        a1[v66[11]] = a2[v66[11]];
        uint64_t v71 = v66[12];
        uint64_t v72 = &a1[v71];
        v73 = &a2[v71];
        uint64_t v74 = *((void *)v73 + 1);
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = v74;
        uint64_t v75 = v66[13];
        uint64_t v76 = &a1[v75];
        v77 = &a2[v75];
        uint64_t v78 = *((void *)v77 + 1);
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = v78;
        uint64_t v79 = v66[14];
        v80 = &a1[v79];
        v81 = &a2[v79];
        uint64_t v82 = *((void *)v81 + 1);
        *(void *)v80 = *(void *)v81;
        *((void *)v80 + 1) = v82;
        uint64_t v83 = v66[15];
        uint64_t v84 = &a1[v83];
        uint64_t v85 = &a2[v83];
        uint64_t v86 = *((void *)v85 + 1);
        *(void *)uint64_t v84 = *(void *)v85;
        *((void *)v84 + 1) = v86;
        uint64_t v87 = v66[16];
        v88 = &a1[v87];
        uint64_t v89 = &a2[v87];
        uint64_t v90 = *((void *)v89 + 1);
        *(void *)v88 = *(void *)v89;
        *((void *)v88 + 1) = v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v91 = *(int *)(sub_25B94E854(&qword_26A51B1F0) + 48);
        uint64_t v92 = &a1[v91];
        uint64_t v93 = &a2[v91];
        uint64_t v94 = *((void *)v93 + 1);
        *(void *)uint64_t v92 = *(void *)v93;
        *((void *)v92 + 1) = v94;
        v92[16] = v93[16];
        *((void *)v92 + 3) = *((void *)v93 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v22 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v22;
        uint64_t v24 = *((void *)a2 + 2);
        uint64_t v23 = *((void *)a2 + 3);
        *((void *)a1 + 2) = v24;
        *((void *)a1 + 3) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_25B9563BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ClassificationXPCRequest.Request(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v3);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      uint64_t v5 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_26A51B230;
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v7 = *(unsigned __int8 *)(a1 + 48);
      if (v7 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v7);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      uint64_t v9 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_26A51B210;
      goto LABEL_14;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40) != 1)
      {
        swift_bridgeObjectRelease();
        int v10 = *(unsigned __int8 *)(a1 + 64);
        if (v10 != 255) {
          sub_25B9566FC(*(void *)(a1 + 48), *(void *)(a1 + 56), v10);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = a1 + *(int *)(type metadata accessor for UserNotification() + 40);
      uint64_t v12 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_26A51B1F0;
LABEL_14:
      sub_25B94E854(v6);
      goto LABEL_15;
    case 3:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9566FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ClassificationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      int v8 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v9 = *((void *)a2 + 4);
        uint64_t v10 = *((void *)a2 + 5);
        sub_25B9563BC(v9, v10, v8);
        *((void *)a1 + 4) = v9;
        *((void *)a1 + 5) = v10;
        a1[48] = v8;
      }
      uint64_t v26 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v26;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v27 = (int *)type metadata accessor for MailMessage();
      uint64_t v28 = v27[7];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_25B9EC2B0();
      uint64_t v32 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v29, v30, v31);
      a1[v27[8]] = a2[v27[8]];
      uint64_t v33 = v27[9];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = v36;
      uint64_t v37 = v27[10];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)uint64_t v38 = *(void *)v39;
      *((void *)v38 + 1) = v40;
      *(void *)&a1[v27[11]] = *(void *)&a2[v27[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = *(int *)(sub_25B94E854(&qword_26A51B230) + 48);
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      uint64_t v44 = *((void *)v43 + 1);
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = v44;
      v42[16] = v43[16];
      *((void *)v42 + 3) = *((void *)v43 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 1u:
      uint64_t v11 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v11;
      uint64_t v12 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v12;
      int v13 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v14 = *((void *)a2 + 4);
        uint64_t v15 = *((void *)a2 + 5);
        sub_25B9563BC(v14, v15, v13);
        *((void *)a1 + 4) = v14;
        *((void *)a1 + 5) = v15;
        a1[48] = v13;
      }
      uint64_t v45 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v45;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v46 = (int *)type metadata accessor for TextMessage();
      uint64_t v47 = v46[7];
      uint64_t v48 = &a1[v47];
      unint64_t v49 = &a2[v47];
      uint64_t v50 = sub_25B9EC2B0();
      v51 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v48, v49, v50);
      a1[v46[8]] = a2[v46[8]];
      uint64_t v52 = v46[9];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      uint64_t v55 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = v55;
      uint64_t v56 = v46[10];
      uint64_t v57 = &a1[v56];
      uint64_t v58 = &a2[v56];
      uint64_t v59 = *((void *)v58 + 1);
      *(void *)uint64_t v57 = *(void *)v58;
      *((void *)v57 + 1) = v59;
      *(void *)&a1[v46[11]] = *(void *)&a2[v46[11]];
      *(void *)&a1[v46[12]] = *(void *)&a2[v46[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v60 = *(int *)(sub_25B94E854(&qword_26A51B210) + 48);
      uint64_t v61 = &a1[v60];
      uint64_t v62 = &a2[v60];
      uint64_t v63 = *((void *)v62 + 1);
      *(void *)uint64_t v61 = *(void *)v62;
      *((void *)v61 + 1) = v63;
      v61[16] = v62[16];
      *((void *)v61 + 3) = *((void *)v62 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 2u:
      uint64_t v16 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v16;
      uint64_t v17 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v17;
      uint64_t v18 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 == 1)
      {
        long long v19 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v19;
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      }
      else
      {
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v18;
        int v23 = a2[64];
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          a1[64] = a2[64];
        }
        else
        {
          uint64_t v24 = *((void *)a2 + 6);
          uint64_t v25 = *((void *)a2 + 7);
          sub_25B9563BC(v24, v25, v23);
          *((void *)a1 + 6) = v24;
          *((void *)a1 + 7) = v25;
          a1[64] = v23;
        }
        uint64_t v64 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v64;
        a1[88] = a2[88];
        swift_bridgeObjectRetain();
      }
      uint64_t v65 = *((void *)a2 + 13);
      *((void *)a1 + 12) = *((void *)a2 + 12);
      *((void *)a1 + 13) = v65;
      uint64_t v66 = (int *)type metadata accessor for UserNotification();
      uint64_t v67 = v66[10];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      uint64_t v70 = sub_25B9EC2B0();
      uint64_t v71 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v68, v69, v70);
      a1[v66[11]] = a2[v66[11]];
      uint64_t v72 = v66[12];
      v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      uint64_t v75 = *((void *)v74 + 1);
      *(void *)v73 = *(void *)v74;
      *((void *)v73 + 1) = v75;
      uint64_t v76 = v66[13];
      v77 = &a1[v76];
      uint64_t v78 = &a2[v76];
      uint64_t v79 = *((void *)v78 + 1);
      *(void *)v77 = *(void *)v78;
      *((void *)v77 + 1) = v79;
      uint64_t v80 = v66[14];
      v81 = &a1[v80];
      uint64_t v82 = &a2[v80];
      uint64_t v83 = *((void *)v82 + 1);
      *(void *)v81 = *(void *)v82;
      *((void *)v81 + 1) = v83;
      uint64_t v84 = v66[15];
      uint64_t v85 = &a1[v84];
      uint64_t v86 = &a2[v84];
      uint64_t v87 = *((void *)v86 + 1);
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = v87;
      uint64_t v88 = v66[16];
      uint64_t v89 = &a1[v88];
      uint64_t v90 = &a2[v88];
      uint64_t v91 = *((void *)v90 + 1);
      *(void *)uint64_t v89 = *(void *)v90;
      *((void *)v89 + 1) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v92 = *(int *)(sub_25B94E854(&qword_26A51B1F0) + 48);
      uint64_t v93 = &a1[v92];
      uint64_t v94 = &a2[v92];
      uint64_t v95 = *((void *)v94 + 1);
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = v95;
      v93[16] = v94[16];
      *((void *)v93 + 3) = *((void *)v94 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v20 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v20;
      uint64_t v22 = *((void *)a2 + 2);
      uint64_t v21 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v22;
      *((void *)a1 + 3) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ClassificationXPCRequest.Request(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25B952848((uint64_t)a1, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v6 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 == 255)
        {
          long long v19 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v19;
        }
        else
        {
          uint64_t v7 = *((void *)a2 + 4);
          uint64_t v8 = *((void *)a2 + 5);
          sub_25B9563BC(v7, v8, v6);
          *((void *)a1 + 4) = v7;
          *((void *)a1 + 5) = v8;
          a1[48] = v6;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v20 = (int *)type metadata accessor for MailMessage();
        uint64_t v21 = v20[7];
        uint64_t v74 = &a1[v21];
        uint64_t v22 = (unsigned __int8 *)&a2[v21];
        uint64_t v23 = sub_25B9EC2B0();
        uint64_t v24 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24(v74, v22, v23);
        a1[v20[8]] = a2[v20[8]];
        uint64_t v25 = v20[9];
        uint64_t v26 = &a1[v25];
        uint64_t v27 = (unsigned __int8 *)&a2[v25];
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        uint64_t v28 = v20[10];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = (unsigned __int8 *)&a2[v28];
        *(void *)uint64_t v29 = *(void *)v30;
        *((void *)v29 + 1) = *((void *)v30 + 1);
        *(void *)&a1[v20[11]] = *(void *)&a2[v20[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v31 = *(int *)(sub_25B94E854(&qword_26A51B230) + 48);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = (unsigned __int8 *)&a2[v31];
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = *((void *)v33 + 1);
        v32[16] = v33[16];
        *((void *)v32 + 3) = *((void *)v33 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          long long v34 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v34;
        }
        else
        {
          uint64_t v10 = *((void *)a2 + 4);
          uint64_t v11 = *((void *)a2 + 5);
          sub_25B9563BC(v10, v11, v9);
          *((void *)a1 + 4) = v10;
          *((void *)a1 + 5) = v11;
          a1[48] = v9;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v35 = (int *)type metadata accessor for TextMessage();
        uint64_t v36 = v35[7];
        uint64_t v75 = &a1[v36];
        uint64_t v37 = (unsigned __int8 *)&a2[v36];
        uint64_t v38 = sub_25B9EC2B0();
        uint64_t v39 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39(v75, v37, v38);
        a1[v35[8]] = a2[v35[8]];
        uint64_t v40 = v35[9];
        uint64_t v41 = &a1[v40];
        uint64_t v42 = (unsigned __int8 *)&a2[v40];
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = *((void *)v42 + 1);
        uint64_t v43 = v35[10];
        uint64_t v44 = &a1[v43];
        uint64_t v45 = (unsigned __int8 *)&a2[v43];
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        *(void *)&a1[v35[11]] = *(void *)&a2[v35[11]];
        *(void *)&a1[v35[12]] = *(void *)&a2[v35[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v46 = *(int *)(sub_25B94E854(&qword_26A51B210) + 48);
        uint64_t v47 = &a1[v46];
        uint64_t v48 = (unsigned __int8 *)&a2[v46];
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        v47[16] = v48[16];
        *((void *)v47 + 3) = *((void *)v48 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        uint64_t v12 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 == 1)
        {
          long long v13 = *((_OWORD *)a2 + 2);
          long long v14 = *((_OWORD *)a2 + 3);
          long long v15 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *((_OWORD *)a1 + 3) = v14;
          *((_OWORD *)a1 + 4) = v15;
          *((_OWORD *)a1 + 2) = v13;
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = *((void *)a2 + 5);
          int v16 = a2[64];
          swift_bridgeObjectRetain();
          if (v16 == 255)
          {
            long long v49 = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
            *((_OWORD *)a1 + 3) = v49;
          }
          else
          {
            uint64_t v17 = *((void *)a2 + 6);
            uint64_t v18 = *((void *)a2 + 7);
            sub_25B9563BC(v17, v18, v16);
            *((void *)a1 + 6) = v17;
            *((void *)a1 + 7) = v18;
            a1[64] = v16;
          }
          *((void *)a1 + 9) = *((void *)a2 + 9);
          *((void *)a1 + 10) = *((void *)a2 + 10);
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        uint64_t v50 = (int *)type metadata accessor for UserNotification();
        uint64_t v51 = v50[10];
        uint64_t v76 = &a1[v51];
        uint64_t v52 = (unsigned __int8 *)&a2[v51];
        uint64_t v53 = sub_25B9EC2B0();
        uint64_t v54 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v76, v52, v53);
        a1[v50[11]] = a2[v50[11]];
        uint64_t v55 = v50[12];
        uint64_t v56 = &a1[v55];
        uint64_t v57 = (unsigned __int8 *)&a2[v55];
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = *((void *)v57 + 1);
        uint64_t v58 = v50[13];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = (unsigned __int8 *)&a2[v58];
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = *((void *)v60 + 1);
        uint64_t v61 = v50[14];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = (unsigned __int8 *)&a2[v61];
        *(void *)uint64_t v62 = *(void *)v63;
        *((void *)v62 + 1) = *((void *)v63 + 1);
        uint64_t v64 = v50[15];
        uint64_t v65 = &a1[v64];
        uint64_t v66 = (unsigned __int8 *)&a2[v64];
        *(void *)uint64_t v65 = *(void *)v66;
        *((void *)v65 + 1) = *((void *)v66 + 1);
        uint64_t v67 = v50[16];
        uint64_t v68 = &a1[v67];
        uint64_t v69 = (unsigned __int8 *)&a2[v67];
        *(void *)uint64_t v68 = *(void *)v69;
        *((void *)v68 + 1) = *((void *)v69 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v70 = *(int *)(sub_25B94E854(&qword_26A51B1F0) + 48);
        uint64_t v71 = &a1[v70];
        uint64_t v72 = (unsigned __int8 *)&a2[v70];
        *(void *)uint64_t v71 = *(void *)v72;
        *((void *)v71 + 1) = *((void *)v72 + 1);
        v71[16] = v72[16];
        *((void *)v71 + 3) = *((void *)v72 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for ClassificationXPCRequest.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v18;
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    uint64_t v20 = (int *)type metadata accessor for UserNotification();
    uint64_t v21 = v20[10];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = sub_25B9EC2B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *(unsigned char *)(a1 + v20[11]) = *(unsigned char *)(a2 + v20[11]);
    *(_OWORD *)(a1 + v20[12]) = *(_OWORD *)(a2 + v20[12]);
    *(_OWORD *)(a1 + v20[13]) = *(_OWORD *)(a2 + v20[13]);
    *(_OWORD *)(a1 + v20[14]) = *(_OWORD *)(a2 + v20[14]);
    *(_OWORD *)(a1 + v20[15]) = *(_OWORD *)(a2 + v20[15]);
    *(_OWORD *)(a1 + v20[16]) = *(_OWORD *)(a2 + v20[16]);
    uint64_t v25 = *(int *)(sub_25B94E854(&qword_26A51B1F0) + 48);
    uint64_t v26 = (_OWORD *)(a1 + v25);
    uint64_t v27 = (_OWORD *)(a2 + v25);
    long long v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    long long v29 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v29;
    long long v30 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v30;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v31 = (int *)type metadata accessor for TextMessage();
    uint64_t v32 = v31[7];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = a2 + v32;
    uint64_t v35 = sub_25B9EC2B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    *(unsigned char *)(a1 + v31[8]) = *(unsigned char *)(a2 + v31[8]);
    *(_OWORD *)(a1 + v31[9]) = *(_OWORD *)(a2 + v31[9]);
    *(_OWORD *)(a1 + v31[10]) = *(_OWORD *)(a2 + v31[10]);
    *(void *)(a1 + v31[11]) = *(void *)(a2 + v31[11]);
    *(void *)(a1 + v31[12]) = *(void *)(a2 + v31[12]);
    uint64_t v36 = *(int *)(sub_25B94E854(&qword_26A51B210) + 48);
    uint64_t v37 = (_OWORD *)(a1 + v36);
    uint64_t v38 = (_OWORD *)(a2 + v36);
    long long v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    int v9 = (int *)type metadata accessor for MailMessage();
    uint64_t v10 = v9[7];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_25B9EC2B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(unsigned char *)(a1 + v9[8]) = *(unsigned char *)(a2 + v9[8]);
    *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
    *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
    *(void *)(a1 + v9[11]) = *(void *)(a2 + v9[11]);
    uint64_t v14 = *(int *)(sub_25B94E854(&qword_26A51B230) + 48);
    long long v15 = (_OWORD *)(a1 + v14);
    int v16 = (_OWORD *)(a2 + v14);
    long long v17 = v16[1];
    *long long v15 = *v16;
    v15[1] = v17;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ClassificationXPCRequest.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25B952848(a1, (void (*)(void))type metadata accessor for ClassificationXPCRequest.Request);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
      long long v19 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v19;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      uint64_t v20 = (int *)type metadata accessor for UserNotification();
      uint64_t v21 = v20[10];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      uint64_t v24 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(unsigned char *)(a1 + v20[11]) = *(unsigned char *)(a2 + v20[11]);
      *(_OWORD *)(a1 + v20[12]) = *(_OWORD *)(a2 + v20[12]);
      *(_OWORD *)(a1 + v20[13]) = *(_OWORD *)(a2 + v20[13]);
      *(_OWORD *)(a1 + v20[14]) = *(_OWORD *)(a2 + v20[14]);
      *(_OWORD *)(a1 + v20[15]) = *(_OWORD *)(a2 + v20[15]);
      *(_OWORD *)(a1 + v20[16]) = *(_OWORD *)(a2 + v20[16]);
      uint64_t v25 = *(int *)(sub_25B94E854(&qword_26A51B1F0) + 48);
      uint64_t v26 = (_OWORD *)(a1 + v25);
      uint64_t v27 = (_OWORD *)(a2 + v25);
      long long v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v29 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v29;
      long long v30 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v30;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v31 = (int *)type metadata accessor for TextMessage();
      uint64_t v32 = v31[7];
      uint64_t v33 = a1 + v32;
      uint64_t v34 = a2 + v32;
      uint64_t v35 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *(unsigned char *)(a1 + v31[8]) = *(unsigned char *)(a2 + v31[8]);
      *(_OWORD *)(a1 + v31[9]) = *(_OWORD *)(a2 + v31[9]);
      *(_OWORD *)(a1 + v31[10]) = *(_OWORD *)(a2 + v31[10]);
      *(void *)(a1 + v31[11]) = *(void *)(a2 + v31[11]);
      *(void *)(a1 + v31[12]) = *(void *)(a2 + v31[12]);
      uint64_t v36 = *(int *)(sub_25B94E854(&qword_26A51B210) + 48);
      uint64_t v37 = (_OWORD *)(a1 + v36);
      uint64_t v38 = (_OWORD *)(a2 + v36);
      long long v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      int v9 = (int *)type metadata accessor for MailMessage();
      uint64_t v10 = v9[7];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(unsigned char *)(a1 + v9[8]) = *(unsigned char *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
      *(void *)(a1 + v9[11]) = *(void *)(a2 + v9[11]);
      uint64_t v14 = *(int *)(sub_25B94E854(&qword_26A51B230) + 48);
      long long v15 = (_OWORD *)(a1 + v14);
      int v16 = (_OWORD *)(a2 + v14);
      long long v17 = v16[1];
      *long long v15 = *v16;
      v15[1] = v17;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25B957BAC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25B957BBC()
{
  uint64_t result = type metadata accessor for MailMessage();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    long long v7 = &v6;
    uint64_t result = type metadata accessor for TextMessage();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      long long v8 = &v5;
      uint64_t result = type metadata accessor for UserNotification();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        int v9 = &v4;
        uint64_t v10 = &unk_25B9F5580;
        uint64_t v11 = &unk_25B9F5580;
        uint64_t v12 = &unk_25B9F5580;
        uint64_t v13 = MEMORY[0x263F8CF70] + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Handle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for MailMessage.ClassificationOptions()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ClassificationXPCRequest.RequestInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClassificationXPCRequest.RequestInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MailMessage.ClassificationOptions(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ClassificationXPCRequest.RequestInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage.ClassificationOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.ClassificationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ClassificationXPCRequest.RequestInfo()
{
}

unsigned char *storeEnumTagSinglePayload for ClassificationXPCRequest.Request.Category(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B957FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ClassificationXPCRequest.Request.Category()
{
}

unsigned char *sub_25B95801C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.RequestInfo.CodingKeys()
{
  return &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCRequest.Request.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassificationXPCRequest.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B95818CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.CodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.PrewarmCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.PrewarmCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCResult.Result.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s4Sage24ClassificationXPCRequestC11RequestInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B958378);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationClient.PrewarmCategory(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s4Sage24ClassificationXPCRequestC5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B95849CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys;
}

unint64_t sub_25B9584D8()
{
  unint64_t result = qword_26A51B358;
  if (!qword_26A51B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B358);
  }
  return result;
}

unint64_t sub_25B958528()
{
  unint64_t result = qword_26A51B360;
  if (!qword_26A51B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B360);
  }
  return result;
}

unint64_t sub_25B958578()
{
  unint64_t result = qword_26A51B368;
  if (!qword_26A51B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B368);
  }
  return result;
}

unint64_t sub_25B9585C8()
{
  unint64_t result = qword_26A51B370;
  if (!qword_26A51B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B370);
  }
  return result;
}

unint64_t sub_25B958618()
{
  unint64_t result = qword_26A51B378;
  if (!qword_26A51B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B378);
  }
  return result;
}

unint64_t sub_25B958668()
{
  unint64_t result = qword_26A51B380;
  if (!qword_26A51B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B380);
  }
  return result;
}

unint64_t sub_25B9586B8()
{
  unint64_t result = qword_26A51B388;
  if (!qword_26A51B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B388);
  }
  return result;
}

unint64_t sub_25B958708()
{
  unint64_t result = qword_26A51B390;
  if (!qword_26A51B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B390);
  }
  return result;
}

unint64_t sub_25B958758()
{
  unint64_t result = qword_26A51B398;
  if (!qword_26A51B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B398);
  }
  return result;
}

unint64_t sub_25B9587A8()
{
  unint64_t result = qword_26A51B3A0;
  if (!qword_26A51B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3A0);
  }
  return result;
}

unint64_t sub_25B9587F8()
{
  unint64_t result = qword_26A51B3A8;
  if (!qword_26A51B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3A8);
  }
  return result;
}

unint64_t sub_25B958848()
{
  unint64_t result = qword_26A51B3B0;
  if (!qword_26A51B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3B0);
  }
  return result;
}

unint64_t sub_25B958898()
{
  unint64_t result = qword_26A51B3B8;
  if (!qword_26A51B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3B8);
  }
  return result;
}

unint64_t sub_25B9588E8()
{
  unint64_t result = qword_26A51B3C0;
  if (!qword_26A51B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3C0);
  }
  return result;
}

unint64_t sub_25B958938()
{
  unint64_t result = qword_26A51B3C8;
  if (!qword_26A51B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3C8);
  }
  return result;
}

unint64_t sub_25B958988()
{
  unint64_t result = qword_26A51B3D0;
  if (!qword_26A51B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3D0);
  }
  return result;
}

unint64_t sub_25B9589D8()
{
  unint64_t result = qword_26A51B3D8;
  if (!qword_26A51B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3D8);
  }
  return result;
}

unint64_t sub_25B958A28()
{
  unint64_t result = qword_26A51B3E0;
  if (!qword_26A51B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3E0);
  }
  return result;
}

unint64_t sub_25B958A78()
{
  unint64_t result = qword_26A51B3E8;
  if (!qword_26A51B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3E8);
  }
  return result;
}

unint64_t sub_25B958AC8()
{
  unint64_t result = qword_26A51B3F0;
  if (!qword_26A51B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3F0);
  }
  return result;
}

unint64_t sub_25B958B18()
{
  unint64_t result = qword_26A51B3F8;
  if (!qword_26A51B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B3F8);
  }
  return result;
}

unint64_t sub_25B958B68()
{
  unint64_t result = qword_26A51B400;
  if (!qword_26A51B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B400);
  }
  return result;
}

unint64_t sub_25B958BB8()
{
  unint64_t result = qword_26A51B408;
  if (!qword_26A51B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B408);
  }
  return result;
}

unint64_t sub_25B958C08()
{
  unint64_t result = qword_26A51B410;
  if (!qword_26A51B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B410);
  }
  return result;
}

unint64_t sub_25B958C58()
{
  unint64_t result = qword_26A51B418;
  if (!qword_26A51B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B418);
  }
  return result;
}

unint64_t sub_25B958CA8()
{
  unint64_t result = qword_26A51B420;
  if (!qword_26A51B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B420);
  }
  return result;
}

unint64_t sub_25B958CF8()
{
  unint64_t result = qword_26A51B428;
  if (!qword_26A51B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B428);
  }
  return result;
}

unint64_t sub_25B958D48()
{
  unint64_t result = qword_26A51B430;
  if (!qword_26A51B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B430);
  }
  return result;
}

unint64_t sub_25B958D98()
{
  unint64_t result = qword_26A51B438;
  if (!qword_26A51B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B438);
  }
  return result;
}

uint64_t sub_25B958DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B958E4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_25B958EC8()
{
  unint64_t result = qword_26A51B448;
  if (!qword_26A51B448)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A51B448);
  }
  return result;
}

uint64_t sub_25B958F08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25B955A74(a1, a2);
  }
  return a1;
}

unint64_t sub_25B958F1C()
{
  unint64_t result = qword_26A51B460;
  if (!qword_26A51B460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B460);
  }
  return result;
}

unint64_t sub_25B958F68()
{
  unint64_t result = qword_26A51B468;
  if (!qword_26A51B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B468);
  }
  return result;
}

uint64_t sub_25B958FF8()
{
  return sub_25B9ED4F0();
}

uint64_t sub_25B95901C()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_25B959044()
{
  return v0;
}

uint64_t sub_25B95905C()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_25B959078()
{
  return sub_25B9ED2C0();
}

uint64_t sub_25B9590A4()
{
  return sub_25B9ED590();
}

uint64_t sub_25B9590C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 - 256);
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = a1;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v3 - 112);
  return v4;
}

uint64_t sub_25B9590E0()
{
  return sub_25B9ED590();
}

uint64_t sub_25B9590F8()
{
  return sub_25B9ED5D0();
}

void sub_25B95911C()
{
  *(void *)(v2 - 128) = *(void *)(v2 - 136);
  *(void *)(v2 - 120) = v1;
  *(void *)(v2 - 112) = v0;
  *(unsigned char *)(v2 - 89) = 1;
}

uint64_t sub_25B959134()
{
  return sub_25B9ED2A0();
}

id sub_25B959164()
{
  return sub_25B9EBBFC();
}

uint64_t sub_25B959194()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9591B4()
{
  return sub_25B9ED660();
}

id sub_25B9591D4(float a1)
{
  *uint64_t v2 = a1;
  return v1;
}

void sub_25B9591F4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_25B959214()
{
  return v0;
}

uint64_t sub_25B959228()
{
  return swift_bridgeObjectRelease();
}

void sub_25B959248()
{
  *(unsigned char *)(v0 - 120) = 1;
}

uint64_t sub_25B959268()
{
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

void sub_25B959290()
{
  JUMPOUT(0x26116D280);
}

uint64_t sub_25B9592A8(uint64_t result)
{
  uint64_t v3 = v1 + *(int *)(result + 48);
  *(void *)(v2 - 136) = *(void *)v3;
  *(_DWORD *)(v2 - 176) = *(unsigned __int8 *)(v3 + 16);
  return result;
}

uint64_t sub_25B9592C4()
{
  return swift_slowAlloc();
}

uint64_t sub_25B9592E0()
{
  return swift_slowAlloc();
}

BOOL sub_25B9592FC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_25B959318()
{
  *(void *)(v1 - 136) = *(void *)(v0 + 8);
}

void sub_25B959328()
{
  *(unsigned char *)(v0 - 121) = 1;
}

uint64_t sub_25B959338@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

void sub_25B959348()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_25B959358()
{
  return v0;
}

uint64_t sub_25B959370()
{
  return v0;
}

uint64_t sub_25B9593B0()
{
  return swift_beginAccess();
}

uint64_t sub_25B9593D4()
{
  return sub_25B9EC1C0();
}

uint64_t sub_25B9593F8()
{
  return v0;
}

uint64_t sub_25B959404()
{
  return v0 - 128;
}

uint64_t sub_25B959414()
{
  return v0;
}

uint64_t sub_25B959424()
{
  return swift_arrayDestroy();
}

void sub_25B959440(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_25B95944C()
{
  return v0;
}

uint64_t sub_25B959460()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B959480()
{
  return v0;
}

uint64_t sub_25B9594B0()
{
  return sub_25B9ED6A0();
}

void sub_25B9594DC()
{
  *(void *)(v1 - 128) = *(void *)(v1 - 136);
  *(void *)(v1 - 120) = v0;
  *(unsigned char *)(v1 - 112) = *(_DWORD *)(v1 - 176);
}

uint64_t sub_25B9594F0()
{
  return *(void *)(v0 - 440);
}

unint64_t sub_25B959504()
{
  return sub_25B958EC8();
}

uint64_t static ClassificationXPCResult.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t ClassificationXPCResult.Error.hash(into:)()
{
  return sub_25B9ED750();
}

uint64_t ClassificationXPCResult.Error.hashValue.getter()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9595C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684631414 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xEE00746C75736552)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B9596C8(char a1)
{
  if (a1) {
    return 0x797469726F697270;
  }
  else {
    return 1684631414;
  }
}

uint64_t sub_25B959704()
{
  return ClassificationXPCResult.Error.hashValue.getter();
}

uint64_t sub_25B95971C()
{
  return ClassificationXPCResult.Error.hash(into:)();
}

uint64_t sub_25B959734()
{
  return sub_25B953B94();
}

uint64_t sub_25B95973C()
{
  return sub_25B9596C8(*v0);
}

uint64_t sub_25B959744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9595C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B95976C(uint64_t a1)
{
  unint64_t v2 = sub_25B959B60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9597A8(uint64_t a1)
{
  unint64_t v2 = sub_25B959B60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9597E4(uint64_t a1)
{
  unint64_t v2 = sub_25B959BC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B959820(uint64_t a1)
{
  unint64_t v2 = sub_25B959BC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B95985C(uint64_t a1)
{
  unint64_t v2 = sub_25B959C60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B959898(uint64_t a1)
{
  unint64_t v2 = sub_25B959C60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClassificationXPCResult.Result.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  sub_25B94E854(&qword_26A51B478);
  sub_25B950790();
  uint64_t v22 = v5;
  uint64_t v23 = v4;
  MEMORY[0x270FA5388](v4);
  sub_25B950870();
  uint64_t v8 = v7 - v6;
  sub_25B94E854(&qword_26A51B480);
  sub_25B950790();
  uint64_t v20 = v10;
  uint64_t v21 = v9;
  MEMORY[0x270FA5388](v9);
  sub_25B950870();
  uint64_t v13 = v12 - v11;
  sub_25B94E854(&qword_26A51B488);
  sub_25B950790();
  MEMORY[0x270FA5388](v14);
  sub_25B95BA7C();
  sub_25B959B4C(v2, v25);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B959B60();
  sub_25B9ED7B0();
  sub_25B959B4C(v25, __src);
  if (sub_25B959BAC((uint64_t)__src) == 1)
  {
    v24[0] = 0;
    sub_25B959C60();
    sub_25B9ED5D0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v13, v21);
    uint64_t v15 = sub_25B95BAE4();
    return v16(v15);
  }
  else
  {
    sub_25B959BC8();
    sub_25B9ED5D0();
    memcpy(v24, __src, sizeof(v24));
    sub_25B959C14();
    sub_25B9ED660();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v8, v23);
    uint64_t v18 = sub_25B95BAE4();
    return v19(v18);
  }
}

void *sub_25B959B4C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x8CuLL);
}

unint64_t sub_25B959B60()
{
  unint64_t result = qword_26A51B490;
  if (!qword_26A51B490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B490);
  }
  return result;
}

uint64_t sub_25B959BAC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 - 1) & ~(((int)v1 - 1) >> 31);
}

unint64_t sub_25B959BC8()
{
  unint64_t result = qword_26A51B498;
  if (!qword_26A51B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B498);
  }
  return result;
}

unint64_t sub_25B959C14()
{
  unint64_t result = qword_26A51B4A0;
  if (!qword_26A51B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4A0);
  }
  return result;
}

unint64_t sub_25B959C60()
{
  unint64_t result = qword_26A51B4A8;
  if (!qword_26A51B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4A8);
  }
  return result;
}

uint64_t ClassificationXPCResult.Result.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_25B94E854(&qword_26A51B4B0);
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  sub_25B950870();
  uint64_t v5 = sub_25B94E854(&qword_26A51B4B8);
  sub_25B950790();
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25B950870();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_25B94E854(&qword_26A51B4C0);
  sub_25B950790();
  uint64_t v35 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B95BA7C();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B959B60();
  sub_25B9ED7A0();
  if (v39) {
    goto LABEL_8;
  }
  long long v39 = a1;
  uint64_t v14 = sub_25B9ED5B0();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15
    || (char v32 = *(unsigned char *)(v14 + 32),
        sub_25B958E48(1, v15, v14, v14 + 32, 0, (2 * v15) | 1),
        uint64_t v17 = v16,
        unint64_t v19 = v18,
        swift_bridgeObjectRelease(),
        v17 != v19 >> 1))
  {
    uint64_t v20 = sub_25B9ED3D0();
    swift_allocError();
    uint64_t v22 = v21;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v22 = &type metadata for ClassificationXPCResult.Result;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v11);
    a1 = v39;
LABEL_8:
    uint64_t v23 = (uint64_t)a1;
    return sub_25B94F65C(v23);
  }
  if (v32)
  {
    v37[0] = 1;
    sub_25B959BC8();
    sub_25B95BAC4();
    sub_25B95A818();
    sub_25B9ED590();
    uint64_t v27 = sub_25B95BAAC();
    v28(v27);
    swift_unknownObjectRelease();
    uint64_t v29 = sub_25B95BA94();
    v30(v29);
    memcpy(v36, v37, 0x8CuLL);
    nullsub_1(v36);
    uint64_t v31 = v36;
  }
  else
  {
    v36[0] = 0;
    sub_25B959C60();
    sub_25B95BAC4();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v10, v5);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_25B95BA64();
    v26(v25);
    sub_25B95A864((uint64_t)v37);
    uint64_t v31 = v37;
  }
  sub_25B959B4C(v31, __dst);
  sub_25B959B4C(__dst, a2);
  uint64_t v23 = (uint64_t)v39;
  return sub_25B94F65C(v23);
}

uint64_t sub_25B95A0EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClassificationXPCResult.Result.init(from:)(a1, a2);
}

uint64_t sub_25B95A104(void *a1)
{
  return ClassificationXPCResult.Result.encode(to:)(a1);
}

void *sub_25B95A11C@<X0>(void *a1@<X8>)
{
  sub_25B95A1DC(v3);
  sub_25B959B4C(v3, __dst);
  return sub_25B959B4C(__dst, a1);
}

uint64_t sub_25B95A170(void *a1)
{
  sub_25B959B4C(a1, __dst);
  sub_25B959B4C(__dst, v2);
  sub_25B95A9B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95A898);
  return sub_25B95A258(v2);
}

uint64_t sub_25B95A1DC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result);
  swift_beginAccess();
  sub_25B959B4C(v3, __dst);
  sub_25B959B4C(__dst, a1);
  return sub_25B95A9B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95A898);
}

uint64_t sub_25B95A258(void *a1)
{
  sub_25B959B4C(a1, __dst);
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result);
  swift_beginAccess();
  sub_25B959B4C(v2, v5);
  sub_25B959B4C(__dst, v2);
  return sub_25B95A9B8((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95AA24);
}

id ClassificationXPCResult.__allocating_init(result:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  sub_25B959B4C(a1, __dst);
  sub_25B959B4C(__dst, &v3[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ClassificationXPCResult.init(result:)(void *a1)
{
  sub_25B959B4C(a1, __dst);
  sub_25B959B4C(__dst, &v1[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ClassificationXPCResult();
  return objc_msgSendSuper2(&v3, sel_init);
}

id ClassificationXPCResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ClassificationXPCResult.init(coder:)(a1);
}

id ClassificationXPCResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_25B954F80();
  sub_25B959B4C(__src, __dst);
  sub_25B959B4C(__dst, &v3[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for XPCValue();
  id v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

uint64_t sub_25B95A4BC()
{
  sub_25B95A1DC(v1);
  sub_25B959B4C(v1, __dst);
  sub_25B959B4C(__dst, v3);
  uint64_t result = sub_25B959BAC((uint64_t)v3);
  if (result != 1)
  {
    sub_25B95A9B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95AA24);
    sub_25B95AB20();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

void *sub_25B95A55C@<X0>(void *a1@<X8>)
{
  sub_25B95A1DC(v3);
  sub_25B959B4C(v3, __dst);
  sub_25B959B4C(__dst, __src);
  if (sub_25B959BAC((uint64_t)__src) != 1) {
    return memcpy(a1, __src, 0x8CuLL);
  }
  sub_25B95AB20();
  swift_allocError();
  return (void *)swift_willThrow();
}

uint64_t sub_25B95A600()
{
  sub_25B95A1DC(__src);
  sub_25B959B4C(__src, __dst);
  sub_25B959B4C(__dst, &v2);
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B95BA18();
  uint64_t v0 = sub_25B9EC1D0();
  sub_25B95A9B8((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95AA24);
  return v0;
}

id ClassificationXPCResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ClassificationXPCResult.init()()
{
}

uint64_t sub_25B95A74C()
{
  sub_25B959B4C((void *)(v0 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result), v2);
  return sub_25B95A9B8((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_25B95AA24);
}

id ClassificationXPCResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassificationXPCResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_25B95A818()
{
  unint64_t result = qword_26A51B4C8;
  if (!qword_26A51B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4C8);
  }
  return result;
}

double sub_25B95A864(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 2;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 0;
  return result;
}

void sub_25B95A898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2) {
    sub_25B95A8EC(a2, a3);
  }
}

uint64_t sub_25B95A8EC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for ClassificationXPCResult()
{
  return self;
}

uint64_t sub_25B95A9B8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  return a1;
}

void sub_25B95AA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2) {
    sub_25B95AA78(a2, a3);
  }
}

uint64_t sub_25B95AA78(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25B95AB20()
{
  unint64_t result = qword_26A51B4D8;
  if (!qword_26A51B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4D8);
  }
  return result;
}

unint64_t sub_25B95AB70()
{
  unint64_t result = qword_26A51B4E0;
  if (!qword_26A51B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4E0);
  }
  return result;
}

uint64_t method lookup function for ClassificationXPCResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClassificationXPCResult);
}

uint64_t dispatch thunk of ClassificationXPCResult.result.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ClassificationXPCResult.__allocating_init(result:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ClassificationXPCResult.toVoid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ClassificationXPCResult.toPriorityResult()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Error()
{
  return &type metadata for ClassificationXPCResult.Error;
}

unint64_t destroy for ClassificationXPCResult.Result(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 <= 0 && result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ClassificationXPCResult.Result(char *__dst, void *__src)
{
  unint64_t v4 = __src[2];
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF) {
    uint64_t v5 = __src[2];
  }
  if ((int)v5 - 1 <= 0)
  {
    *(_DWORD *)__dst = *(_DWORD *)__src;
    __dst[4] = *((unsigned char *)__src + 4);
    if (v4 == 1)
    {
      memcpy(__dst + 8, __src + 1, 0x80uLL);
    }
    else
    {
      *((void *)__dst + 1) = __src[1];
      *((void *)__dst + 2) = v4;
      uint64_t v6 = __src[4];
      *((void *)__dst + 3) = __src[3];
      *((void *)__dst + 4) = v6;
      uint64_t v7 = __src[6];
      *((void *)__dst + 5) = __src[5];
      *((void *)__dst + 6) = v7;
      uint64_t v8 = __src[8];
      *((void *)__dst + 7) = __src[7];
      *((void *)__dst + 8) = v8;
      uint64_t v9 = __src[10];
      *((void *)__dst + 9) = __src[9];
      *((void *)__dst + 10) = v9;
      uint64_t v10 = __src[12];
      *((void *)__dst + 11) = __src[11];
      *((void *)__dst + 12) = v10;
      uint64_t v11 = __src[14];
      *((void *)__dst + 13) = __src[13];
      *((void *)__dst + 14) = v11;
      uint64_t v12 = __src[16];
      *((void *)__dst + 15) = __src[15];
      *((void *)__dst + 16) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
  }
  else
  {
    memcpy(__dst, __src, 0x8CuLL);
  }
  return __dst;
}

void *assignWithCopy for ClassificationXPCResult.Result(void *__dst, void *__src)
{
  unint64_t v4 = (char *)(__dst + 1);
  unint64_t v5 = __dst[2];
  LODWORD(v6) = -1;
  if (v5 >= 0xFFFFFFFF) {
    LODWORD(v7) = -1;
  }
  else {
    uint64_t v7 = __dst[2];
  }
  int v8 = v7 - 1;
  uint64_t v9 = (char *)(__src + 1);
  if (__src[2] < 0xFFFFFFFFuLL) {
    uint64_t v6 = __src[2];
  }
  int v10 = v6 - 1;
  if (v8 <= 0)
  {
    if (v10 > 0)
    {
      if (v5 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_13;
    }
    *(_DWORD *)__dst = *(_DWORD *)__src;
    *((unsigned char *)__dst + 4) = *((unsigned char *)__src + 4);
    uint64_t v11 = __src[2];
    if (v5 == 1)
    {
      if (v11 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = __src[2];
        __dst[3] = __src[3];
        __dst[4] = __src[4];
        __dst[5] = __src[5];
        __dst[6] = __src[6];
        __dst[7] = __src[7];
        __dst[8] = __src[8];
        __dst[9] = __src[9];
        __dst[10] = __src[10];
        __dst[11] = __src[11];
        __dst[12] = __src[12];
        __dst[13] = __src[13];
        __dst[14] = __src[14];
        __dst[15] = __src[15];
        __dst[16] = __src[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
        return __dst;
      }
    }
    else
    {
      if (v11 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = __src[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[3] = __src[3];
        __dst[4] = __src[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[5] = __src[5];
        __dst[6] = __src[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[7] = __src[7];
        __dst[8] = __src[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[9] = __src[9];
        __dst[10] = __src[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[11] = __src[11];
        __dst[12] = __src[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[13] = __src[13];
        __dst[14] = __src[14];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[15] = __src[15];
        __dst[16] = __src[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      sub_25B95B270((uint64_t)(__dst + 1));
    }
    memcpy(v4, v9, 0x80uLL);
    goto LABEL_23;
  }
  if (v10 > 0)
  {
LABEL_13:
    memcpy(__dst, __src, 0x8CuLL);
    return __dst;
  }
  *(_DWORD *)__dst = *(_DWORD *)__src;
  *((unsigned char *)__dst + 4) = *((unsigned char *)__src + 4);
  if (__src[2] == 1)
  {
    memcpy(__dst + 1, __src + 1, 0x80uLL);
  }
  else
  {
    __dst[1] = __src[1];
    __dst[2] = __src[2];
    __dst[3] = __src[3];
    __dst[4] = __src[4];
    __dst[5] = __src[5];
    __dst[6] = __src[6];
    __dst[7] = __src[7];
    __dst[8] = __src[8];
    __dst[9] = __src[9];
    __dst[10] = __src[10];
    __dst[11] = __src[11];
    __dst[12] = __src[12];
    __dst[13] = __src[13];
    __dst[14] = __src[14];
    __dst[15] = __src[15];
    __dst[16] = __src[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
  return __dst;
}

uint64_t sub_25B95B270(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for PriorityResult(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8CuLL);
}

void *assignWithTake for ClassificationXPCResult.Result(void *__dst, void *__src)
{
  unint64_t v4 = __dst[2];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 > 0) {
    goto LABEL_4;
  }
  unint64_t v7 = __src[2];
  LODWORD(v8) = -1;
  if (v7 < 0xFFFFFFFF) {
    uint64_t v8 = __src[2];
  }
  if ((int)v8 - 1 <= 0)
  {
    *(_DWORD *)__dst = *(_DWORD *)__src;
    *((unsigned char *)__dst + 4) = *((unsigned char *)__src + 4);
    if (v4 != 1)
    {
      if (v7 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = v7;
        swift_bridgeObjectRelease();
        uint64_t v9 = __src[4];
        __dst[3] = __src[3];
        __dst[4] = v9;
        swift_bridgeObjectRelease();
        uint64_t v10 = __src[6];
        __dst[5] = __src[5];
        __dst[6] = v10;
        swift_bridgeObjectRelease();
        uint64_t v11 = __src[8];
        __dst[7] = __src[7];
        __dst[8] = v11;
        swift_bridgeObjectRelease();
        uint64_t v12 = __src[10];
        __dst[9] = __src[9];
        __dst[10] = v12;
        swift_bridgeObjectRelease();
        uint64_t v13 = __src[12];
        __dst[11] = __src[11];
        __dst[12] = v13;
        swift_bridgeObjectRelease();
        uint64_t v14 = __src[14];
        __dst[13] = __src[13];
        __dst[14] = v14;
        swift_bridgeObjectRelease();
        uint64_t v15 = __src[16];
        __dst[15] = __src[15];
        __dst[16] = v15;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      sub_25B95B270((uint64_t)(__dst + 1));
    }
    memcpy(__dst + 1, __src + 1, 0x80uLL);
LABEL_16:
    *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
    return __dst;
  }
  if (v4 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_4:
  memcpy(__dst, __src, 0x8CuLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCResult.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 140)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  if ((v6 + 1) >= 2) {
    return v6;
  }
  else {
    return 0;
  }
}

void storeEnumTagSinglePayload for ClassificationXPCResult.Result(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    unsigned int v5 = a2 - 2147483645;
    bzero(a1, 0x8CuLL);
    *a1 = v5;
    if (a3 >= 0x7FFFFFFD) {
      *((unsigned char *)a1 + 140) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *((unsigned char *)a1 + 140) = 0;
    }
    if (a2) {
      *((void *)a1 + 2) = a2 + 2;
    }
  }
}

double sub_25B95B544(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 136) = 0;
    *(void *)a1 = a2 - 2147483646;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result()
{
  return &type metadata for ClassificationXPCResult.Result;
}

unsigned char *storeEnumTagSinglePayload for ClassificationXPCResult.Result.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B95B67CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.CodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.VoidCodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.VoidCodingKeys;
}

unsigned char *_s4Sage23ClassificationXPCResultC5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B95B760);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.PriorityResultCodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys;
}

unint64_t sub_25B95B79C()
{
  unint64_t result = qword_26A51B4E8;
  if (!qword_26A51B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4E8);
  }
  return result;
}

unint64_t sub_25B95B7EC()
{
  unint64_t result = qword_26A51B4F0;
  if (!qword_26A51B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4F0);
  }
  return result;
}

unint64_t sub_25B95B83C()
{
  unint64_t result = qword_26A51B4F8;
  if (!qword_26A51B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B4F8);
  }
  return result;
}

unint64_t sub_25B95B88C()
{
  unint64_t result = qword_26A51B500;
  if (!qword_26A51B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B500);
  }
  return result;
}

unint64_t sub_25B95B8DC()
{
  unint64_t result = qword_26A51B508;
  if (!qword_26A51B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B508);
  }
  return result;
}

unint64_t sub_25B95B92C()
{
  unint64_t result = qword_26A51B510;
  if (!qword_26A51B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B510);
  }
  return result;
}

unint64_t sub_25B95B97C()
{
  unint64_t result = qword_26A51B518;
  if (!qword_26A51B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B518);
  }
  return result;
}

unint64_t sub_25B95B9CC()
{
  unint64_t result = qword_26A51B520;
  if (!qword_26A51B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B520);
  }
  return result;
}

unint64_t sub_25B95BA18()
{
  unint64_t result = qword_26A51B528;
  if (!qword_26A51B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B528);
  }
  return result;
}

uint64_t sub_25B95BA64()
{
  return v0;
}

uint64_t sub_25B95BA94()
{
  return v0;
}

uint64_t sub_25B95BAAC()
{
  return v0;
}

uint64_t sub_25B95BAC4()
{
  return sub_25B9ED4F0();
}

uint64_t sub_25B95BAE4()
{
  return v0;
}

uint64_t ClassificationClient.UseCase.identifier.getter()
{
  return 0x6966697373616C63;
}

void *sub_25B95BC64()
{
  qword_26A51B530 = (uint64_t)&unk_270932708;
  return &unk_270932708;
}

id static ClassificationXPCService.interface.getter()
{
  if (qword_26A51AFE0 != -1) {
    swift_once();
  }
  sub_25B960750();
  uint64_t v0 = (void *)qword_26A51B530;
  return v0;
}

void static ClassificationXPCService.interface.setter(uint64_t a1)
{
  if (qword_26A51AFE0 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  int v2 = (void *)qword_26A51B530;
  qword_26A51B530 = a1;
}

uint64_t (*static ClassificationXPCService.interface.modify())()
{
  if (qword_26A51AFE0 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t static ClassificationXPCService.serviceName.getter()
{
  return sub_25B960748((uint64_t *)&unk_26A51B538);
}

uint64_t static ClassificationXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B960740(a1, a2, qword_26A51B538);
}

uint64_t (*static ClassificationXPCService.serviceName.modify())()
{
  return j__swift_endAccess;
}

uint64_t static ClassificationXPCService.entitlementName.getter()
{
  return sub_25B960748((uint64_t *)&unk_26A51B548);
}

uint64_t sub_25B95BE4C(uint64_t *a1)
{
  sub_25B960750();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static ClassificationXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B960740(a1, a2, qword_26A51B548);
}

uint64_t sub_25B95BEA4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ClassificationXPCService.entitlementName.modify())()
{
  return j_j__swift_endAccess;
}

void sub_25B95BF4C()
{
  qword_26A51B558 = MEMORY[0x263F8EE78];
}

uint64_t static ClassificationXPCService.selectorClasses.getter()
{
  if (qword_26A51AFE8 != -1) {
    swift_once();
  }
  sub_25B960750();
  return swift_bridgeObjectRetain();
}

uint64_t static ClassificationXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_26A51AFE8 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  qword_26A51B558 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ClassificationXPCService.selectorClasses.modify())()
{
  if (qword_26A51AFE8 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t sub_25B95C0B8()
{
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9604A4(v0, qword_26A51B560);
  uint64_t v1 = sub_25B9559F0(v0, (uint64_t)qword_26A51B560);
  if (qword_26A51B018 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9559F0(v0, (uint64_t)qword_26A51C188);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static ClassificationXPCService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A51AFF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  uint64_t v3 = sub_25B9559F0(v2, (uint64_t)qword_26A51B560);
  sub_25B960750();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static ClassificationXPCService.logger.setter(uint64_t a1)
{
  if (qword_26A51AFF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  uint64_t v3 = sub_25B9559F0(v2, (uint64_t)qword_26A51B560);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static ClassificationXPCService.logger.modify())()
{
  if (qword_26A51AFF0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51B560);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ClassificationClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ClassificationClient.init()(v0, v1);
  return v0;
}

uint64_t ClassificationClient.init()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = 0;
  sub_25B95FA60(&qword_26A51AFD0, a2, (void (*)(uint64_t))type metadata accessor for ClassificationClient);
  sub_25B94E854(qword_26A51AF40);
  swift_allocObject();
  swift_retain();
  *(void *)(v2 + 16) = sub_25B9EC9F0();
  swift_release();
  return v2;
}

uint64_t ClassificationClient.deinit()
{
  swift_release();
  return v0;
}

uint64_t ClassificationClient.__deallocating_deinit()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_25B95C514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ClassificationClient();
  return MEMORY[0x270F57798](a1, v5, a3);
}

uint64_t sub_25B95C568(uint64_t a1)
{
  return nullsub_1(a1);
}

Swift::Void __swiftcall ClassificationClient.prewarm(for:requestIdentifier:)(Sage::ClassificationClient::UseCase a1, Swift::String requestIdentifier)
{
  char v2 = *(unsigned char *)a1;
  ClassificationClient.prewarm(for:requestIdentifier:completion:)(&v2, requestIdentifier._countAndFlagsBits, (uint64_t)requestIdentifier._object, 0, 0);
}

uint64_t ClassificationClient.prewarm(for:requestIdentifier:completion:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_25B94E854(&qword_26A51B578);
  uint64_t v12 = sub_25B96068C(v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a1;
  uint64_t v16 = sub_25B9ED130();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v14, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 32) = a2;
  *(void *)(v17 + 40) = a3;
  *(unsigned char *)(v17 + 48) = v15;
  *(void *)(v17 + 56) = a4;
  *(void *)(v17 + 64) = a5;
  *(void *)(v17 + 72) = v5;
  swift_bridgeObjectRetain();
  sub_25B95F950(a4);
  swift_retain();
  sub_25B95D778((uint64_t)v14, (uint64_t)&unk_26A51B588, v17);
  return swift_release();
}

uint64_t sub_25B95C70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 56) = v11;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a7;
  *(unsigned char *)(v8 + 104) = a6;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 64) = type metadata accessor for ClassificationXPCRequest.Request(0);
  *(void *)(v8 + 72) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B95C7B4, 0, 0);
}

uint64_t sub_25B95C7B4()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  ClassificationClient.UseCase.identifier.getter();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v17 = v2;
  *((void *)&v17 + 1) = v1;
  id v3 = objc_allocWithZone((Class)type metadata accessor for ClassificationXPCRequest(0));
  id v11 = sub_25B960784((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v17);
  sub_25B9606FC((uint64_t)v11);
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)sub_25B960734(v12);
  void *v13 = v14;
  v13[1] = sub_25B95C8B0;
  uint64_t v15 = sub_25B960668();
  return sub_25B95CC38(v15);
}

uint64_t sub_25B95C8B0()
{
  sub_25B960594();
  id v3 = v2;
  sub_25B960524();
  sub_25B96054C();
  void *v5 = v4;
  uint64_t v6 = *v1;
  sub_25B96053C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {

  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95C994()
{
  sub_25B960594();
  uint64_t v1 = (void (*)(void, void))v0[5];
  uint64_t v2 = (void *)v0[10];
  if (v1) {
    v1(v0[3], v0[4]);
  }

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B95CA14()
{
  uint64_t v1 = *(void (**)(void, void))(v0 + 40);
  if (v1) {
    v1(*(void *)(v0 + 24), *(void *)(v0 + 32));
  }
  if (qword_26A51B018 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v3 = sub_25B9ECD70();
  sub_25B9559F0(v3, (uint64_t)qword_26A51C188);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_25B9ECD40();
  os_log_type_t v7 = sub_25B9ED230();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 96);
  if (v8)
  {
    uint64_t v16 = *(void **)(v0 + 80);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v13;
    sub_25B9ED2C0();
    *id v11 = v13;

    _os_log_impl(&dword_25B94C000, v6, v7, "Prewarm failed with error: %{public}@", v10, 0xCu);
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  swift_task_dealloc();
  sub_25B9605A0();
  return v14();
}

uint64_t sub_25B95CC38(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for ClassificationXPCRequest.Request(0);
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B95CCC8, 0, 0);
}

uint64_t sub_25B95CCC8()
{
  uint64_t v42 = v0;
  if (qword_26A51B018 != -1) {
    swift_once();
  }
  uint64_t v2 = (id *)(v0 + 17);
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = sub_25B9ECD70();
  v0[20] = sub_25B9559F0(v3, (uint64_t)qword_26A51C188);
  id v4 = v1;
  id v5 = sub_25B9ECD40();
  os_log_type_t v6 = sub_25B9ED250();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v35 = v6;
    log = v5;
    uint64_t v7 = v0[19];
    BOOL v8 = (void *)v0[17];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446722;
    sub_25B9541EC(&v38);
    uint64_t v11 = v38;
    uint64_t v10 = v39;
    swift_bridgeObjectRelease();
    v0[13] = sub_25B9910E8(v11, v10, &v37);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2082;
    sub_25B9541EC(&v38);
    uint64_t v12 = v40;
    uint64_t v13 = v41;
    swift_bridgeObjectRelease();
    v0[14] = sub_25B9910E8(v12, v13, &v37);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 22) = 2082;
    uint64_t v14 = (uint64_t)v8 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
    sub_25B960750();
    sub_25B960154(v14, v7, type metadata accessor for ClassificationXPCRequest.Request);
    ClassificationXPCRequest.Request.category.getter((char *)&v38);
    sub_25B9601BC(v7);
    sub_25B960714();
    unint64_t v19 = v18 | 0xEE006E6F69740000;
    uint64_t v20 = 0x6966697373616C63;
    if (!v21)
    {
      uint64_t v20 = 1953719668;
      unint64_t v19 = 0xE400000000000000;
    }
    if (v15) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v17;
    }
    if (v15) {
      uint64_t v23 = v19;
    }
    else {
      uint64_t v23 = v16;
    }
    id v24 = *v2;
    v0[16] = sub_25B9910E8(v22, v23, &v37);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B94C000, log, v35, "ClassificationClient sending request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    id v25 = *v2;
  }
  uint64_t v26 = v0[17];
  uint64_t v27 = v0[18];
  sub_25B9541EC(&v38);
  uint64_t v28 = v38;
  uint64_t v29 = v39;
  v0[21] = v39;
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_task_alloc();
  v0[22] = v30;
  *(void *)(v30 + 16) = v27;
  *(void *)(v30 + 24) = v26;
  uint64_t v31 = (void *)swift_task_alloc();
  v0[23] = v31;
  v31[2] = v27;
  v31[3] = v28;
  v31[4] = v29;
  char v32 = (void *)swift_task_alloc();
  v0[24] = v32;
  uint64_t v33 = type metadata accessor for ClassificationXPCResult();
  *char v32 = v0;
  v32[1] = sub_25B95D0F0;
  return MEMORY[0x270FA2338](v0 + 15, &unk_26A51B600, v30, sub_25B960128, v31, 0, 0, v33);
}

uint64_t sub_25B95D0F0()
{
  sub_25B960558();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95D1F0()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  id v2 = *(id *)(v0 + 136);
  uint64_t v3 = sub_25B9ECD40();
  os_log_type_t v4 = sub_25B9ED250();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void **)(v0 + 136);
    uint64_t v12 = v1;
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v6 = 136315138;
    sub_25B9541EC(v14);
    uint64_t v8 = v14[0];
    uint64_t v7 = v14[1];
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = sub_25B9910E8(v8, v7, &v13);
    sub_25B9ED2C0();
    uint64_t v1 = v12;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B94C000, v3, v4, "ClassificationClient received response from request with requestIdentifier=%s", v6, 0xCu);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 136);
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v1);
}

uint64_t sub_25B95D3A4()
{
  uint64_t v37 = v0;
  uint64_t v1 = (void *)v0[25];
  id v2 = (void *)v0[17];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v1;
  uint64_t v7 = sub_25B9ECD40();
  os_log_type_t v8 = sub_25B9ED230();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[19];
    uint64_t v10 = (void *)v0[17];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446978;
    sub_25B9541EC(v36);
    uint64_t v13 = v36[0];
    uint64_t v12 = v36[1];
    swift_bridgeObjectRelease();
    v0[9] = sub_25B9910E8(v13, v12, &v35);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    sub_25B9541EC(v36);
    uint64_t v14 = v36[2];
    uint64_t v15 = v36[3];
    swift_bridgeObjectRelease();
    v0[8] = sub_25B9910E8(v14, v15, &v35);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 22) = 2082;
    uint64_t v16 = (uint64_t)v10 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
    sub_25B960750();
    sub_25B960154(v16, v9, type metadata accessor for ClassificationXPCRequest.Request);
    ClassificationXPCRequest.Request.category.getter((char *)v36);
    sub_25B9601BC(v9);
    sub_25B960714();
    unint64_t v21 = v20 | 0xEE006E6F69740000;
    uint64_t v22 = 0x6966697373616C63;
    if (!v23)
    {
      uint64_t v22 = 1953719668;
      unint64_t v21 = 0xE400000000000000;
    }
    if (v17) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = v19;
    }
    if (v17) {
      uint64_t v25 = v21;
    }
    else {
      uint64_t v25 = v18;
    }
    uint64_t v26 = (void *)v0[25];
    uint64_t v27 = (void *)v0[17];
    v0[10] = sub_25B9910E8(v24, v25, &v35);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 32) = 2114;
    id v28 = v26;
    uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v29;
    sub_25B9ED2C0();
    *uint64_t v34 = v29;

    _os_log_impl(&dword_25B94C000, v7, v8, "ClassificationClient request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s failed with error: %{public}@", (uint8_t *)v11, 0x2Au);
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    uint64_t v30 = (void *)v0[25];
    uint64_t v31 = (void *)v0[17];
  }
  swift_willThrow();
  swift_task_dealloc();
  sub_25B9605A0();
  return v32();
}

uint64_t sub_25B95D778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ED130();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v6) == 1)
  {
    sub_25B9603A4(a1);
  }
  else
  {
    sub_25B9ED120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25B9ED0D0();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

unint64_t ClassificationClient.PrewarmCategory.identifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t ClassificationClient.PrewarmCategory.rawValue.getter()
{
  return 0x6C6172656E6567;
}

uint64_t ClassificationClient.PrewarmCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25B9ED4E0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25B95D9B4@<X0>(BOOL *a1@<X8>)
{
  return ClassificationClient.PrewarmCategory.init(rawValue:)(a1);
}

void sub_25B95D9C0(void *a1@<X8>)
{
  *a1 = 0x6C6172656E6567;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_25B95D9DC()
{
  return sub_25B9ED040();
}

uint64_t sub_25B95DA3C()
{
  return sub_25B9ED020();
}

uint64_t ClassificationClient.prewarm(category:)()
{
  uint64_t v0 = sub_25B9EC300();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = 0;
  sub_25B9EC2F0();
  uint64_t v4 = sub_25B9EC2C0();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  ClassificationClient.prewarm(for:requestIdentifier:)((Sage::ClassificationClient::UseCase)&v10, v7);
  return swift_bridgeObjectRelease();
}

uint64_t ClassificationClient.classifyPriority(_:options:)()
{
  sub_25B960594();
  uint64_t v3 = sub_25B9606BC(v1, v2);
  *(void *)(v0 + 40) = v3;
  sub_25B96068C(v3);
  uint64_t v4 = sub_25B960674();
  sub_25B9605AC(v4);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_25B960594();
  uint64_t v3 = sub_25B9606BC(v1, v2);
  *(void *)(v0 + 40) = v3;
  sub_25B96068C(v3);
  uint64_t v4 = sub_25B960674();
  sub_25B9605AC(v4);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_25B960594();
  uint64_t v3 = sub_25B9606BC(v1, v2);
  *(void *)(v0 + 40) = v3;
  sub_25B96068C(v3);
  uint64_t v4 = sub_25B960674();
  sub_25B9605AC(v4);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  sub_25B960558();
  uint64_t v2 = sub_25B9606DC(v1);
  *(void *)(v0 + 32) = v2;
  sub_25B96068C(v2);
  uint64_t v3 = sub_25B960674();
  sub_25B9605CC(v3);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  sub_25B960558();
  uint64_t v2 = sub_25B9606DC(v1);
  *(void *)(v0 + 32) = v2;
  sub_25B96068C(v2);
  uint64_t v3 = sub_25B960674();
  sub_25B9605CC(v3);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  sub_25B960558();
  uint64_t v2 = sub_25B9606DC(v1);
  *(void *)(v0 + 32) = v2;
  sub_25B96068C(v2);
  uint64_t v3 = sub_25B960674();
  sub_25B9605CC(v3);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

#error "25B95DCA8: call analysis failed (funcsize=65)"

uint64_t sub_25B95DD18()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *os_log_type_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95DE08()
{
  sub_25B960558();
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 80);
  sub_25B95A55C(*(void **)(v0 + 16));

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B95DE90()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B95E014: call analysis failed (funcsize=65)"

uint64_t sub_25B95E084()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *os_log_type_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

#error "25B95E294: call analysis failed (funcsize=65)"

uint64_t sub_25B95E384()
{
  sub_25B960708();
  uint64_t v12 = v1;
  sub_25B9605E8();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B960698();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v11 = v3;
  *((void *)&v11 + 1) = v2;
  id v4 = objc_allocWithZone((Class)sub_25B94E8C4());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = ClassificationXPCRequest.init(request:requestInfo:)(v0, &v11);
  sub_25B9606FC((uint64_t)v5);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_25B960734(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25B95E490;
  uint64_t v9 = sub_25B960668();
  return sub_25B95CC38(v9);
}

uint64_t sub_25B95E490()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95E580()
{
  sub_25B960558();
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 80);
  sub_25B95A55C(*(void **)(v0 + 16));

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B95E608()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

uint64_t sub_25B95E6EC()
{
  sub_25B960708();
  uint64_t v12 = v1;
  sub_25B9605E8();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B960698();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v11 = v3;
  *((void *)&v11 + 1) = v2;
  id v4 = objc_allocWithZone((Class)sub_25B94E8C4());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = ClassificationXPCRequest.init(request:requestInfo:)(v0, &v11);
  sub_25B9606FC((uint64_t)v5);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_25B960734(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25B95E7F8;
  uint64_t v9 = sub_25B960668();
  return sub_25B95CC38(v9);
}

uint64_t sub_25B95E7F8()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95E968()
{
  sub_25B960708();
  uint64_t v12 = v1;
  sub_25B9605E8();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B960698();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v11 = v3;
  *((void *)&v11 + 1) = v2;
  id v4 = objc_allocWithZone((Class)sub_25B94E8C4());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = ClassificationXPCRequest.init(request:requestInfo:)(v0, &v11);
  sub_25B9606FC((uint64_t)v5);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_25B960734(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25B95E7F8;
  uint64_t v9 = sub_25B960668();
  return sub_25B95CC38(v9);
}

uint64_t sub_25B95EA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25B95EA98, 0, 0);
}

uint64_t sub_25B95EA98()
{
  sub_25B960558();
  uint64_t v5 = *(void *)(v0[3] + 16);
  v0[5] = v5;
  if (v5)
  {
    uint64_t v6 = v0[4];
    uint64_t v7 = swift_task_alloc();
    v0[6] = v7;
    *(void *)(v7 + 16) = v6;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[7] = v8;
    uint64_t v4 = type metadata accessor for ClassificationXPCResult();
    *uint64_t v8 = v0;
    v8[1] = sub_25B95EB90;
    uint64_t v1 = v0[2];
    uint64_t v2 = sub_25B960314;
    uint64_t v3 = v7;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B95EB90()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = *(void *)(v5 + 8);
    __asm { BRAA            X1, X16 }
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95ECA0()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9605A0();
  return v0();
}

void sub_25B95ED04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  v10[4] = sub_25B960354;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_25B95EDF8;
  v10[3] = &unk_27092CEA0;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performClassificationRequest_with_, a4, v9);
  _Block_release(v9);
}

void sub_25B95EDF8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_25B95EE84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51B578);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B9ED130();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B9BA524((uint64_t)v7, (uint64_t)&unk_26A51B610, (uint64_t)v9);
  swift_release();
  if (qword_26A51B018 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25B9ECD70();
  sub_25B9559F0(v10, (uint64_t)qword_26A51C188);
  swift_bridgeObjectRetain_n();
  long long v11 = sub_25B9ECD40();
  os_log_type_t v12 = sub_25B9ED250();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25B9910E8(a1, a2, &v16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B94C000, v11, v12, "Classification request with identifier %{public}s was cancelled by client.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26116D280](v14, -1, -1);
    MEMORY[0x26116D280](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_25B95F0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_25B95F10C, 0, 0);
}

void sub_25B95F10C()
{
  if (*(void *)(v0[3] + 16))
  {
    uint64_t v2 = v0[4];
    uint64_t v1 = v0[5];
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    swift_task_dealloc();
    sub_25B9605A0();
    v4();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B95F1F0(void *a1)
{
  id v2 = (id)sub_25B9ECFC0();
  objc_msgSend(a1, sel_cancelRequestWithIdentifier_, v2);
}

uint64_t ClassificationClient.testTaskCancellation(sleepDuration:)()
{
  sub_25B960594();
  v1[3] = v0;
  v1[2] = v2;
  uint64_t v3 = type metadata accessor for ClassificationXPCRequest.Request(0);
  v1[4] = v3;
  sub_25B96068C(v3);
  v1[5] = sub_25B960674();
  uint64_t v4 = sub_25B9EC300();
  v1[6] = v4;
  v1[7] = *(void *)(v4 - 8);
  v1[8] = sub_25B960674();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95F328()
{
  sub_25B960708();
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = (void *)v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[2];
  sub_25B9EC2F0();
  uint64_t v6 = sub_25B9EC2C0();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_25B9607D4();
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v20 = v6;
  *((void *)&v20 + 1) = v8;
  id v9 = objc_allocWithZone((Class)sub_25B960630());
  v0[9] = sub_25B960784((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v20);
  int v17 = (void *)swift_task_alloc();
  v0[10] = v17;
  void *v17 = v0;
  v17[1] = sub_25B95F464;
  uint64_t v18 = sub_25B960668();
  return sub_25B95CC38(v18);
}

uint64_t sub_25B95F464()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B95F554()
{
  sub_25B960558();
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 72);
  sub_25B95A4BC();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B95F5E4()
{
  sub_25B960594();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

unint64_t ClassificationClient.UseCase.rawValue.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 7:
      unint64_t result = 0x7966697373616C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for ClassificationClient()
{
  return self;
}

uint64_t sub_25B95F764()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25B95F7BC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_25B9606AC(v4);
  void *v5 = v6;
  v5[1] = sub_25B95F890;
  uint64_t v7 = sub_25B960768();
  return sub_25B95C70C(v7, v8, v9, v10, v11, v3, v1, v2);
}

uint64_t sub_25B95F890()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v1 = *v0;
  sub_25B96053C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B95F950(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

Sage::ClassificationClient::UseCase_optional __swiftcall ClassificationClient.UseCase.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_25B95F9BC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B95FA60(&qword_26A51AFD0, a2, (void (*)(uint64_t))type metadata accessor for ClassificationClient);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25B95FA14()
{
  return sub_25B95FA60(&qword_26A51B5D0, 255, MEMORY[0x263F61838]);
}

uint64_t sub_25B95FA60(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B95FAAC()
{
  unint64_t result = qword_26A51B5D8;
  if (!qword_26A51B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B5D8);
  }
  return result;
}

uint64_t sub_25B95FAF8(unsigned __int8 *a1, char *a2)
{
  return sub_25B9B9DA8(*a1, *a2);
}

unint64_t sub_25B95FB08()
{
  unint64_t result = qword_26A51B5E0;
  if (!qword_26A51B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B5E0);
  }
  return result;
}

uint64_t sub_25B95FB54()
{
  return sub_25B9CE1BC(*v0);
}

uint64_t sub_25B95FB5C(uint64_t a1)
{
  return sub_25B9CE62C(a1, *v1);
}

uint64_t sub_25B95FB64(uint64_t a1)
{
  return sub_25B9CEAB0(a1, *v1);
}

Sage::ClassificationClient::UseCase_optional sub_25B95FB6C(Swift::String *a1)
{
  return ClassificationClient.UseCase.init(rawValue:)(*a1);
}

unint64_t sub_25B95FB78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ClassificationClient.UseCase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B95FBA0()
{
  return sub_25B9ED040();
}

uint64_t sub_25B95FC00()
{
  return sub_25B9ED020();
}

void type metadata accessor for ClassificationXPCService()
{
}

uint64_t method lookup function for ClassificationClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClassificationClient);
}

uint64_t dispatch thunk of ClassificationClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for ClassificationClient.PrewarmCategory(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B95FD24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for ClassificationClient.PrewarmCategory()
{
}

unsigned char *storeEnumTagSinglePayload for ClassificationClient.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B95FE24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for ClassificationClient.UseCase()
{
}

unint64_t sub_25B95FE58()
{
  unint64_t result = qword_26A51B5E8;
  if (!qword_26A51B5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B5E8);
  }
  return result;
}

unint64_t sub_25B95FEA4()
{
  unint64_t result = qword_26A51B5F0;
  if (!qword_26A51B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A51B5F0);
  }
  return result;
}

uint64_t sub_25B95FEF0(uint64_t a1, int *a2)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_25B95FFCC;
  return v6(a1);
}

uint64_t sub_25B95FFCC()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v1 = *v0;
  sub_25B96053C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_25B960094()
{
  sub_25B960558();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B95F890;
  uint64_t v3 = sub_25B96080C();
  return sub_25B95EA74(v3, v4, v5);
}

void sub_25B960128()
{
  sub_25B95EE84(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25B960154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25B9601BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B960218()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B960260()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_25B9606AC(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_25B960510;
  uint64_t v5 = sub_25B960768();
  return sub_25B95F0E8(v5, v6, v7, v8, v9, v1);
}

void sub_25B96030C(void *a1)
{
}

void sub_25B960314(void *a1, uint64_t a2, uint64_t a3)
{
  sub_25B95ED04(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_25B96031C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B960354(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_25B96038C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_25B96039C()
{
  return swift_release();
}

uint64_t sub_25B9603A4(uint64_t a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51B578);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B960404()
{
  sub_25B960558();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  uint64_t v3 = sub_25B96080C();
  return v4(v3);
}

uint64_t *sub_25B9604A4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_25B960564()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9605A0()
{
  return v0 + 8;
}

__n128 sub_25B9605AC(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  __n128 result = *v1;
  *(__n128 *)(v2 + 56) = *v1;
  *(unsigned char *)(v2 + 112) = v1[1].n128_u8[0];
  *(void *)(v2 + 72) = v1[1].n128_u64[1];
  return result;
}

__n128 sub_25B9605CC(unint64_t a1)
{
  unint64_t v4 = *v2;
  v3[2].n128_u64[1] = a1;
  v3[3].n128_u64[0] = v4;
  v3[3].n128_u64[1] = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  v3[4] = result;
  return result;
}

uint64_t sub_25B9605E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B960610()
{
  return swift_beginAccess();
}

uint64_t sub_25B960630()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_25B960650()
{
  *(void *)uint64_t v1 = v5;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v2;
  return v0;
}

uint64_t sub_25B960668()
{
  return v0;
}

uint64_t sub_25B960674()
{
  return swift_task_alloc();
}

uint64_t sub_25B96068C(uint64_t a1)
{
  return a1 - 8;
}

void *sub_25B960698()
{
  *uint64_t v0 = v3;
  v0[1] = v4;
  v0[2] = v2;
  v0[3] = v1;
  return v0;
}

uint64_t sub_25B9606AC(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_25B9606BC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

uint64_t sub_25B9606DC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

uint64_t sub_25B9606FC(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t sub_25B960734(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t sub_25B960740(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_25B95BEA4(a1, a2, a3, a3 + 1);
}

uint64_t sub_25B960748(uint64_t *a1)
{
  return sub_25B95BE4C(a1);
}

uint64_t sub_25B960750()
{
  return swift_beginAccess();
}

uint64_t sub_25B960768()
{
  return v0;
}

id sub_25B960784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  return ClassificationXPCRequest.init(request:requestInfo:)(v9, &a9);
}

uint64_t sub_25B9607D4()
{
  return sub_25B9ED390();
}

uint64_t sub_25B9607EC()
{
  return swift_beginAccess();
}

uint64_t sub_25B96080C()
{
  return v0;
}

uint64_t ClientProcessInfo.applicationIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientProcessInfo.processIdentifier.getter()
{
  return *(unsigned int *)(v0 + 16);
}

void ClientProcessInfo.init(auditToken:)()
{
  sub_25B961A4C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v34 = v9;
  uint64_t v36 = sub_25B9EC1A0();
  sub_25B950790();
  uint64_t v33 = v10;
  MEMORY[0x270FA5388](v11);
  sub_25B950870();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_25B9EC190();
  sub_25B950790();
  uint64_t v35 = v16;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v33 - v21;
  uint64_t v23 = sub_25B9ECD80();
  if (!v0)
  {
    uint64_t v25 = v22;
    uint64_t v27 = v35;
    uint64_t v26 = v36;
    if (v24)
    {
      *(void *)v37.val = v8;
      *(void *)&v37.val[2] = v6;
      *(void *)&v37.val[4] = v4;
      *(void *)&v37.val[6] = v2;
      uint64_t v28 = v23;
      uint64_t v29 = v24;
      pid_t v30 = audit_token_to_pid(&v37);
      uint64_t v31 = v34;
      *uint64_t v34 = v28;
      v31[1] = v29;
      *((_DWORD *)v31 + 4) = v30;
    }
    else
    {
      char v32 = v25;
      sub_25B9EC180();
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v20, v32, v15);
      sub_25B961270(MEMORY[0x263F8EE78]);
      sub_25B96139C();
      sub_25B9EC200();
      sub_25B9EC160();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v14, v26);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v15);
    }
  }
  sub_25B961A64();
}

uint64_t ClientProcessInfo.init(applicationIdentifier:processIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  return result;
}

void ClientProcessInfo.init(processIdentifier:)()
{
  sub_25B961A4C();
  int v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_25B9ECD70();
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B950870();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_25B9ECD90();
  if (!v0)
  {
    if (!v13)
    {
      sub_25B9ECA40();
      uint64_t v14 = sub_25B9ECD40();
      os_log_type_t v15 = sub_25B9ED230();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 67109120;
        sub_25B9ED2C0();
        _os_log_impl(&dword_25B94C000, v14, v15, "Could not look up bundle identifier for pid %d", v16, 8u);
        MEMORY[0x26116D280](v16, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
      unint64_t v13 = 0xE700000000000000;
      uint64_t v12 = 0x6E776F6E6B6E75;
    }
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v13;
    *(_DWORD *)(v4 + 16) = v2;
  }
  sub_25B961A64();
}

uint64_t ClientProcessInfo.hash(into:)()
{
  return sub_25B9ED770();
}

BOOL static ClientProcessInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  int v3 = *(_DWORD *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_25B9ED6A0();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_25B960CCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000025B9EFD20 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFD40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_25B960DB8(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000015;
  }
}

unint64_t sub_25B960DF4()
{
  return sub_25B960DB8(*v0);
}

uint64_t sub_25B960DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B960CCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B960E24(uint64_t a1)
{
  unint64_t v2 = sub_25B9615AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B960E60(uint64_t a1)
{
  unint64_t v2 = sub_25B9615AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ClientProcessInfo.encode(to:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51B630);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B950870();
  uint64_t v9 = v8 - v7;
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9615AC();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v0) {
    sub_25B9ED670();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_25B961A64();
}

uint64_t ClientProcessInfo.hashValue.getter()
{
  return sub_25B9ED790();
}

void ClientProcessInfo.init(from:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51B640);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B950870();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9615AC();
  sub_25B9ED7A0();
  if (v0)
  {
    sub_25B94F65C((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_25B9ED540();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    int v9 = sub_25B9ED5A0();
    uint64_t v10 = sub_25B961A34();
    v11(v10);
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(_DWORD *)(v4 + 16) = v9;
    sub_25B94F65C((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  sub_25B961A64();
}

void sub_25B9611C4()
{
}

void sub_25B9611DC()
{
}

uint64_t sub_25B9611FC()
{
  return sub_25B9ED790();
}

unint64_t sub_25B961270(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_25B94E854(&qword_26A51B668);
  uint64_t v2 = sub_25B9ED4C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25B9619BC(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_25B9613EC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25B961A24(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25B96139C()
{
  unint64_t result = qword_26A51B628;
  if (!qword_26A51B628)
  {
    sub_25B9EC1A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B628);
  }
  return result;
}

unint64_t sub_25B9613EC(uint64_t a1, uint64_t a2)
{
  sub_25B9ED740();
  sub_25B9ECFF0();
  uint64_t v4 = sub_25B9ED790();
  return sub_25B961464(a1, a2, v4);
}

unint64_t sub_25B961464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_25B9ED6A0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_25B9ED6A0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_25B9ED6A0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_25B9615AC()
{
  unint64_t result = qword_26A51B638;
  if (!qword_26A51B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B638);
  }
  return result;
}

unint64_t sub_25B9615FC()
{
  unint64_t result = qword_26A51B648;
  if (!qword_26A51B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B648);
  }
  return result;
}

uint64_t destroy for ClientProcessInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s4Sage17ClientProcessInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientProcessInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for ClientProcessInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClientProcessInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientProcessInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientProcessInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientProcessInfo()
{
  return &type metadata for ClientProcessInfo;
}

unsigned char *storeEnumTagSinglePayload for ClientProcessInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B961894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientProcessInfo.CodingKeys()
{
  return &type metadata for ClientProcessInfo.CodingKeys;
}

unint64_t sub_25B9618D0()
{
  unint64_t result = qword_26A51B650;
  if (!qword_26A51B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B650);
  }
  return result;
}

unint64_t sub_25B961920()
{
  unint64_t result = qword_26A51B658;
  if (!qword_26A51B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B658);
  }
  return result;
}

unint64_t sub_25B961970()
{
  unint64_t result = qword_26A51B660;
  if (!qword_26A51B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B660);
  }
  return result;
}

uint64_t sub_25B9619BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_25B961A24(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25B961A34()
{
  return v0;
}

uint64_t GenerativeExperiencesSession.__allocating_init(configuration:)(uint64_t a1)
{
  return GenerativeExperiencesSession.init(configuration:)(a1);
}

uint64_t GenerativeExperiencesSession.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SessionConfiguration();
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B961BAC(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = objc_allocWithZone((Class)type metadata accessor for GenerativeExperiencesSessionClient());
  GenerativeExperiencesSessionClient.init(_:)();
  uint64_t v9 = v8;
  sub_25B964D10(a1);
  if (v9)
  {
    *(void *)(v2 + 16) = v9;
  }
  else
  {
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t sub_25B961BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static GenerativeExperiencesSession.retrieveSession(with:reattaching:)()
{
  return 0;
}

void static GenerativeExperiencesSession.terminateSession(for:)()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for GenerativeExperiencesSessionClient());
  swift_bridgeObjectRetain();
  GenerativeExperiencesSessionClient.init(identifer:)();
  if (v1)
  {
    uint64_t v2 = v1;
    sub_25B97E1C8();
  }
}

Swift::String __swiftcall GenerativeExperiencesSession.sessionIdentifier()()
{
  uint64_t v1 = (uint64_t *)(*(void *)(*(void *)(v0 + 16)
                             + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData)
                 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_identifier);
  uint64_t v2 = *v1;
  int v3 = (void *)v1[1];
  swift_bridgeObjectRetain();
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

uint64_t GenerativeExperiencesSession.registeredDocuments()()
{
  sub_25B980924();
  return sub_25B961D0C(v0);
}

uint64_t sub_25B961D0C(uint64_t a1)
{
  uint64_t v2 = sub_25B9ECB10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - v7;
  sub_25B964ECC();
  uint64_t v9 = sub_25B9ED200();
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    BOOL v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v19 = a1;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v15, v2);
      sub_25B96B2E4();
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v15 += v16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v17 = v9;
    swift_bridgeObjectRelease();
  }
  return v17;
}

void GenerativeExperiencesSession.register(documents:)()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GenerativeExperiencesSession.unregister(documents:)(Swift::OpaquePointer documents)
{
}

void GenerativeExperiencesSession.tools.getter()
{
}

uint64_t sub_25B961F1C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return GenerativeExperiencesSession.tools.setter(v0);
}

uint64_t GenerativeExperiencesSession.tools.setter(uint64_t a1)
{
  sub_25B980E60(a1);
  return swift_bridgeObjectRelease();
}

uint64_t (*GenerativeExperiencesSession.tools.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = *(void *)(v1 + 16);
  sub_25B980C94();
  *a1 = v3;
  return sub_25B961FD0;
}

uint64_t sub_25B961FD0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_25B980E60(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B980E60(v2);
  }
  return swift_bridgeObjectRelease();
}

void GenerativeExperiencesSession.toolChoice.getter()
{
}

uint64_t sub_25B962048(uint64_t a1)
{
  uint64_t v2 = sub_25B9ECBC0();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return GenerativeExperiencesSession.toolChoice.setter((uint64_t)v4);
}

uint64_t GenerativeExperiencesSession.toolChoice.setter(uint64_t a1)
{
  sub_25B98132C();
  uint64_t v2 = sub_25B9ECBC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

void (*GenerativeExperiencesSession.toolChoice.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = sub_25B9ECBC0();
  *uint64_t v3 = v4;
  sub_25B964F20(v4);
  v3[1] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[2] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = *(void *)(v1 + 16);
  v3[3] = v8;
  v3[4] = v9;
  sub_25B980FC0();
  return sub_25B962224;
}

void sub_25B962224(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[3];
  uint64_t v5 = (*a1)[1];
  uint64_t v4 = (void *)(*a1)[2];
  uint64_t v6 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))((*a1)[2], v3, v6);
    sub_25B98132C();
    size_t v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    sub_25B98132C();
    (*(void (**)(void *, uint64_t))(v5 + 8))(v3, v6);
  }
  free(v3);
  free(v4);
  free(v2);
}

void GenerativeExperiencesSession.complete<A>(generating:parameters:promptSanitizer:responseSanitizer:clientRequestID:query:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  v16[5] = v4;
  v16[6] = v5;
  v16[3] = v6;
  v16[4] = v7;
  v16[1] = v8;
  v16[2] = v9;
  uint64_t v10 = sub_25B9ECE30();
  sub_25B950790();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B964FC4();
  v3();
  if (v1)
  {
    sub_25B9EC360();
  }
  else
  {
    sub_25B980A80();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(parameters:promptSanitizer:responseSanitizer:clientRequestID:query:)()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v18[3] = v5;
  v18[4] = v6;
  v18[1] = v7;
  v18[2] = v8;
  uint64_t v9 = sub_25B94E854(&qword_26A51B820);
  uint64_t v10 = sub_25B96068C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_25B964FF8();
  sub_25B950790();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B964FC4();
  v4();
  if (v2)
  {
    sub_25B9EC360();
  }
  else
  {
    uint64_t v17 = sub_25B9ECC70();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 1, 1, v17);
    sub_25B9834A4();
    sub_25B964D6C(v0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
  }
  sub_25B964F50();
}

uint64_t GenerativeExperiencesSession.undo()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25B9650C8((uint64_t)sub_25B962584);
}

uint64_t sub_25B962584()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B964F1C;
  return sub_25B967418();
}

uint64_t GenerativeExperiencesSession.redo()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25B9650C8((uint64_t)sub_25B962644);
}

uint64_t sub_25B962644()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B9626EC;
  return sub_25B9676E4();
}

uint64_t sub_25B9626EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

Swift::Bool __swiftcall GenerativeExperiencesSession.canUndo()()
{
  sub_25B9817B0();
  return v0 & 1;
}

Swift::Bool __swiftcall GenerativeExperiencesSession.canRedo()()
{
  sub_25B981848();
  return v0 & 1;
}

uint64_t sub_25B962830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[1] = a3;
  uint64_t v5 = sub_25B9ECD20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(sub_25B9ECC40() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25B962A90(v12, &v21);
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v9 = v21;
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    uint64_t v15 = a2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_25B9ECCE0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_25B98FB08(0, *(void *)(v9 + 16) + 1, 1, v9);
      }
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t v9 = sub_25B98FB08(v16 > 1, v17 + 1, 1, v9);
      }
      *(void *)(v9 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, v8, v5);
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v21 = v9;
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_25B980E60(v18);
  swift_bridgeObjectRelease();
  sub_25B98132C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B962A90(uint64_t a1, uint64_t *a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_25B9ECC40();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)v42 - v7;
  uint64_t v8 = sub_25B9ECBD0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_25B9ECC70();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25B9ECC30();
  uint64_t v11 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_25B9ECD20();
  uint64_t v14 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25B9ECBE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v42[1] = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v42 - v20;
  uint64_t v44 = a1;
  sub_25B9ECBF0();
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v21, v16);
  if (v22 == *MEMORY[0x263F40DC8])
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v21, v16);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v21, v52);
    sub_25B9ECC20();
    sub_25B9ECC10();
    sub_25B9ECC00();
    uint64_t v23 = v47;
    sub_25B9ECC60();
    uint64_t v24 = v50;
    sub_25B9ECD10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v49);
    uint64_t v25 = v53;
    sub_25B96B1B0();
    uint64_t v26 = *(void *)(*v25 + 16);
    sub_25B96B254(v26);
    uint64_t v27 = *v25;
    *(void *)(v27 + 16) = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v27+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v26, v24, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v52);
  }
  uint64_t v29 = v50;
  uint64_t v30 = v51;
  uint64_t v31 = v53;
  if (v22 == *MEMORY[0x263F40DC0])
  {
    sub_25B9ECCD0();
LABEL_7:
    sub_25B96B1B0();
    uint64_t v32 = *(void *)(*v31 + 16);
    sub_25B96B254(v32);
    uint64_t v33 = *v31;
    *(void *)(v33 + 16) = v32 + 1;
    return (*(uint64_t (**)(unint64_t, char *, uint64_t))(v14 + 32))(v33+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v32, v29, v30);
  }
  if (v22 == *MEMORY[0x263F40DB8])
  {
    sub_25B9ECCB0();
    goto LABEL_7;
  }
  uint64_t v54 = v6;
  if (qword_26A51B020 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_25B9ECD70();
  sub_25B9559F0(v34, (uint64_t)qword_26A51C1A0);
  uint64_t v53 = *(uint64_t **)(v45 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v53)(v43, v44, v46);
  uint64_t v35 = sub_25B9ECD40();
  os_log_type_t v36 = sub_25B9ED240();
  if (os_log_type_enabled(v35, v36))
  {
    audit_token_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v55 = v52;
    *(_DWORD *)audit_token_t v37 = 136315138;
    uint64_t v51 = (uint64_t)(v37 + 4);
    uint64_t v38 = v43;
    sub_25B9ECBF0();
    uint64_t v39 = sub_25B9ECFE0();
    uint64_t v57 = sub_25B9910E8(v39, v40, &v55);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v46);
    _os_log_impl(&dword_25B94C000, v35, v36, "Unknown tool type: %s", v37, 0xCu);
    uint64_t v41 = v52;
    swift_arrayDestroy();
    MEMORY[0x26116D280](v41, -1, -1);
    MEMORY[0x26116D280](v37, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v46);
  }

  ((void (*)(char *, uint64_t, uint64_t))v53)(v54, v44, v46);
  uint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  uint64_t v55 = 0xD000000000000013;
  unint64_t v56 = 0x800000025B9EFDD0;
  sub_25B9ECBF0();
  sub_25B9ECFE0();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25B9ED490();
  __break(1u);
  return result;
}

uint64_t static GenerativeExperiencesSession.retrieveSession(with:)()
{
  return 0;
}

void GenerativeExperiencesSession.complete<A>(generating:parameters:promptSanitizer:responseSanitizer:query:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  void v14[3] = v4;
  v14[4] = v5;
  v14[1] = v6;
  v14[2] = v7;
  uint64_t v8 = sub_25B9ECE30();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B964FC4();
  v3();
  if (v1)
  {
    sub_25B9EC360();
  }
  else
  {
    sub_25B980A80();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(parameters:promptSanitizer:responseSanitizer:query:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  v17[1] = v4;
  v17[2] = v5;
  uint64_t v6 = sub_25B94E854(&qword_26A51B820);
  uint64_t v7 = sub_25B96068C(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25B9ECE30();
  sub_25B950790();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B964FC4();
  v3();
  if (v1)
  {
    sub_25B9EC360();
  }
  else
  {
    uint64_t v16 = sub_25B9ECC70();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 1, 1, v16);
    sub_25B9834A4();
    sub_25B964D6C((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete<A>(generating:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B9EC940();
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B9651D0();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B965180();
  sub_25B950790();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25B9652E4();
  sub_25B964FC4();
  v4();
  if (v2)
  {
    sub_25B9EC360();
  }
  else
  {
    default argument 3 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 4 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    sub_25B965358();
    sub_25B980A80();
    sub_25B959038();
    v11();
    sub_25B959038();
    v12();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(parameters:query:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51B820);
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B965158();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B9651A8();
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B965048();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B965098();
  sub_25B965388();
  v12();
  if (v3)
  {
    sub_25B9652FC();
  }
  else
  {
    default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    uint64_t v13 = sub_25B9ECC70();
    sub_25B96539C(v13);
    sub_25B965370();
    sub_25B9834A4();
    sub_25B964D6C(v1);
    sub_25B959038();
    v14();
    sub_25B959038();
    v15();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete<A>(generating:tools:tooling:toolChoice:documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_25B9EC940();
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B9651D0();
  sub_25B950790();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25B965180();
  sub_25B950790();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25B9652E4();
  sub_25B962830(v6, v4, v2);
  sub_25B964FC4();
  v13();
  if (v4)
  {
    sub_25B9EC360();
  }
  else
  {
    default argument 3 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 4 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    sub_25B965358();
    sub_25B980A80();
    sub_25B959038();
    v14();
    sub_25B959038();
    v15();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v9);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(tools:tooling:toolChoice:documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_25B94E854(&qword_26A51B820);
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B965158();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  sub_25B9651A8();
  sub_25B950790();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25B965048();
  sub_25B950790();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_25B965248();
  sub_25B962830(v16, v5, v3);
  sub_25B964FC4();
  v17();
  if (v7)
  {
    sub_25B9652FC();
  }
  else
  {
    default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    uint64_t v18 = sub_25B9ECC70();
    sub_25B96539C(v18);
    sub_25B965370();
    sub_25B9834A4();
    sub_25B964D6C(v1);
    sub_25B959038();
    v19();
    sub_25B959038();
    v20();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
  }
  sub_25B964F50();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;

  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_25B94E854(&qword_26A51B820);
  uint64_t v7 = sub_25B96068C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25B965100(v8, v32);
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  sub_25B9650D4(v10, v33);
  sub_25B950790();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_25B965020();
  uint64_t v13 = sub_25B96068C(v12);
  MEMORY[0x270FA5388](v13);
  sub_25B9651F8();
  sub_25B950790();
  MEMORY[0x270FA5388](v14);
  sub_25B964FD0();
  sub_25B950790();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_25B965248();
  sub_25B962830(v16, v3, v1);
  sub_25B94E854(&qword_26A51B688);
  uint64_t v17 = sub_25B9652B4();
  sub_25B964F20(v17);
  uint64_t v18 = sub_25B965070();
  *(_OWORD *)(v18 + 16) = xmmword_25B9F6AE0;
  uint64_t v19 = sub_25B9650B0();
  v20(v19);
  sub_25B964FC4();
  v22(v21);
  if (v5)
  {
    uint64_t v23 = sub_25B965340();
    v24(v23);
    *(void *)(v18 + 16) = 0;
    swift_release();
    sub_25B9652FC();
  }
  else
  {
    sub_25B9ECDC0();
    sub_25B9ECE40();
    default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    uint64_t v25 = sub_25B9ECC70();
    sub_25B964F68(v25);
    sub_25B964D6C(0);
    sub_25B959038();
    v27(v26);
    sub_25B959038();
    v29(v28);
    uint64_t v30 = sub_25B965314();
    v31(v30);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete<A>(generating:tools:tooling:toolChoice:documents:parameters:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_25B964F38();
  uint64_t v66 = v25;
  uint64_t v67 = v24;
  uint64_t v65 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v62 = v33;
  uint64_t v69 = v34;
  uint64_t v68 = a22;
  uint64_t v70 = a21;
  sub_25B9EC940();
  sub_25B950790();
  uint64_t v63 = v36;
  uint64_t v64 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v61 = sub_25B96512C(v37, v57);
  sub_25B950790();
  uint64_t v60 = v38;
  MEMORY[0x270FA5388](v39);
  sub_25B94E8E4();
  uint64_t v40 = sub_25B9ECF20();
  uint64_t v41 = sub_25B96068C(v40);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v44 = v43;
  MEMORY[0x270FA5388](v45);
  sub_25B964FD0();
  sub_25B950790();
  uint64_t v58 = v47;
  uint64_t v59 = v46;
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v57 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B962830(v32, v30, v28);
  uint64_t v57 = *(void *)(v22 + 16);
  sub_25B94E854(&qword_26A51B688);
  uint64_t v50 = sub_25B9652B4();
  sub_25B964F20(v50);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_25B9F6AE0;
  uint64_t v52 = sub_25B9650B0();
  v53(v52);
  sub_25B964FC4();
  v54();
  if (v28)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v23, v42);
    *(void *)(v51 + 16) = 0;
    swift_release();
    sub_25B9EC360();
  }
  else
  {
    sub_25B9ECDC0();
    sub_25B9ECE40();
    sub_25B9653C8();
    sub_25B965324();
    sub_25B980A80();
    sub_25B959038();
    v55();
    sub_25B959038();
    v56();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete<A>(generating:documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v19 = v2;
  sub_25B9EC940();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B958FE4();
  sub_25B9EC9A0();
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_25B965220();
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_25B965264();
  sub_25B950790();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25B964FF8();
  sub_25B950790();
  uint64_t v17 = v12;
  uint64_t v18 = v11;
  MEMORY[0x270FA5388](v11);
  sub_25B959398();
  sub_25B94E854(&qword_26A51B688);
  uint64_t v13 = sub_25B9652B4();
  sub_25B964F20(v13);
  *(_OWORD *)(sub_25B96528C() + 16) = xmmword_25B9F6AE0;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v9 + 104))(v1, *MEMORY[0x263F62100], v7);
  v19(v14);
  sub_25B9ECDC0();
  sub_25B9ECE40();
  default argument 3 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
  sub_25B965324();
  sub_25B9652CC();
  sub_25B980A80();
  sub_25B959038();
  v15();
  sub_25B959038();
  v16();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v18);
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51B820);
  uint64_t v4 = sub_25B96068C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  uint64_t v23 = v5;
  sub_25B9EC940();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B958FE4();
  sub_25B9EC9A0();
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B965020();
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B94E8E4();
  uint64_t v10 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_25B965048();
  sub_25B950790();
  MEMORY[0x270FA5388](v14);
  sub_25B965098();
  sub_25B94E854(&qword_26A51B688);
  uint64_t v15 = sub_25B9652B4();
  sub_25B964F20(v15);
  uint64_t v16 = sub_25B965070();
  *(_OWORD *)(v16 + 16) = xmmword_25B9F6AE0;
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v0, *MEMORY[0x263F62100], v10);
  sub_25B965388();
  v17();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
    *(void *)(v16 + 16) = 0;
    swift_release();
    sub_25B9652FC();
  }
  else
  {
    sub_25B9ECDC0();
    sub_25B9ECE40();
    default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    uint64_t v18 = sub_25B9ECC70();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v23, 1, 1, v18);
    sub_25B9834A4();
    sub_25B964D6C(v23);
    sub_25B959038();
    v19();
    sub_25B959038();
    v20();
    uint64_t v21 = sub_25B965314();
    v22(v21);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete<A>(generating:tools:toolChoice:documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_25B9EC940();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B96512C(v7, v22);
  sub_25B950790();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25B965220();
  uint64_t v10 = sub_25B96068C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_25B965264();
  sub_25B950790();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_25B964FF8();
  sub_25B950790();
  uint64_t v23 = v16;
  uint64_t v24 = v15;
  MEMORY[0x270FA5388](v15);
  sub_25B959398();
  sub_25B962830(MEMORY[0x263F8EE78], v5, v3);
  sub_25B94E854(&qword_26A51B688);
  uint64_t v17 = sub_25B9652B4();
  sub_25B964F20(v17);
  uint64_t v18 = sub_25B96528C();
  *(_OWORD *)(v18 + 16) = xmmword_25B9F6AE0;
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v1, *MEMORY[0x263F62100], v11);
  sub_25B964FC4();
  v19();
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v11);
    *(void *)(v18 + 16) = 0;
    swift_release();
    sub_25B9EC360();
  }
  else
  {
    sub_25B9ECDC0();
    sub_25B9ECE40();
    sub_25B9653C8();
    sub_25B965324();
    sub_25B9652CC();
    sub_25B980A80();
    sub_25B959038();
    v20();
    sub_25B959038();
    v21();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v24);
  }
  sub_25B964F50();
}

void GenerativeExperiencesSession.complete(tools:toolChoice:documents:parameters:query:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51B820);
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B965100(v6, v29);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B9650D4(v8, v30);
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_25B965020();
  uint64_t v11 = sub_25B96068C(v10);
  MEMORY[0x270FA5388](v11);
  sub_25B9651F8();
  sub_25B950790();
  MEMORY[0x270FA5388](v12);
  sub_25B964FD0();
  sub_25B950790();
  MEMORY[0x270FA5388](v13);
  sub_25B965098();
  sub_25B962830(MEMORY[0x263F8EE78], v3, v1);
  sub_25B94E854(&qword_26A51B688);
  uint64_t v14 = sub_25B9652B4();
  sub_25B964F20(v14);
  uint64_t v15 = sub_25B965070();
  *(_OWORD *)(v15 + 16) = xmmword_25B9F6AE0;
  uint64_t v16 = sub_25B9650B0();
  v17(v16);
  sub_25B964FC4();
  v19(v18);
  if (v1)
  {
    uint64_t v20 = sub_25B965340();
    v21(v20);
    *(void *)(v15 + 16) = 0;
    swift_release();
    sub_25B9652FC();
  }
  else
  {
    sub_25B9ECDC0();
    sub_25B9ECE40();
    default argument 2 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    default argument 3 of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
    uint64_t v22 = sub_25B9ECC70();
    sub_25B964F68(v22);
    sub_25B964D6C(0);
    sub_25B959038();
    v24(v23);
    sub_25B959038();
    v26(v25);
    uint64_t v27 = sub_25B965314();
    v28(v27);
  }
  sub_25B964F50();
}

uint64_t GenerativeExperiencesSession.deinit()
{
  return v0;
}

uint64_t GenerativeExperiencesSession.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_25B964D10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25B964D6C(uint64_t a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51B820);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25B964DCC(void *a1@<X8>)
{
  GenerativeExperiencesSession.tools.getter();
  *a1 = v2;
}

void sub_25B964DFC()
{
}

uint64_t type metadata accessor for GenerativeExperiencesSession()
{
  return self;
}

uint64_t method lookup function for GenerativeExperiencesSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativeExperiencesSession);
}

uint64_t dispatch thunk of GenerativeExperiencesSession.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_25B964E78()
{
  unint64_t result = qword_26A51B690;
  if (!qword_26A51B690)
  {
    sub_25B9524FC(&qword_26A51B698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B690);
  }
  return result;
}

unint64_t sub_25B964ECC()
{
  unint64_t result = qword_26A51B6A0;
  if (!qword_26A51B6A0)
  {
    sub_25B9ECB10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51B6A0);
  }
  return result;
}

uint64_t sub_25B964F20(uint64_t a1)
{
  return a1 - 8;
}

void sub_25B964F68(uint64_t a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(*(void *)(v1 - 128), 1, 1, a1);
  sub_25B9834A4();
}

uint64_t sub_25B964FD0()
{
  return sub_25B9ECE30();
}

uint64_t sub_25B964FF8()
{
  return sub_25B9ECE30();
}

uint64_t sub_25B965020()
{
  return sub_25B9ECF20();
}

uint64_t sub_25B965048()
{
  return sub_25B9ECE30();
}

uint64_t sub_25B965070()
{
  return swift_allocObject();
}

uint64_t sub_25B9650B0()
{
  return v0;
}

uint64_t sub_25B9650C8(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, 0, 0);
}

uint64_t sub_25B9650D4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_25B9EC9A0();
}

uint64_t sub_25B965100@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_25B9EC940();
}

uint64_t sub_25B96512C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_25B9EC9A0();
}

uint64_t sub_25B965158()
{
  return sub_25B9EC940();
}

uint64_t sub_25B965180()
{
  return sub_25B9ECE30();
}

uint64_t sub_25B9651A8()
{
  return sub_25B9EC9A0();
}

uint64_t sub_25B9651D0()
{
  return sub_25B9EC9A0();
}

uint64_t sub_25B9651F8()
{
  return sub_25B9ECF40();
}

uint64_t sub_25B965220()
{
  return sub_25B9ECF20();
}

uint64_t sub_25B965248()
{
  return v0;
}

uint64_t sub_25B965264()
{
  return sub_25B9ECF40();
}

uint64_t sub_25B96528C()
{
  return swift_allocObject();
}

uint64_t sub_25B9652B4()
{
  return sub_25B9ECE10();
}

uint64_t sub_25B9652FC()
{
  return sub_25B9EC360();
}

uint64_t sub_25B965314()
{
  return v0;
}

uint64_t sub_25B965324()
{
  return default argument 4 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
}

uint64_t sub_25B965340()
{
  return v0;
}

uint64_t sub_25B96539C(uint64_t a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v2, 1, 1, a1);
  return v1;
}

uint64_t sub_25B9653C8()
{
  return default argument 3 of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)();
}

void sub_25B9653E8()
{
  sub_25B964F38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_25B9ECBC0();
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  uint64_t v6 = sub_25B94E854(&qword_26A51B730);
  uint64_t v7 = sub_25B96068C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25B95BA7C();
  uint64_t v8 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B96DA40();
  uint64_t v14 = v12 - v13;
  MEMORY[0x270FA5388](v15);
  sub_25B96D8D4();
  swift_defaultActor_initialize();
  uint64_t v16 = (int *)type metadata accessor for SessionConfiguration();
  uint64_t v41 = v4 + v16[6];
  sub_25B9ECDE0();
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v14, *MEMORY[0x263F62110], v8);
  char v17 = sub_25B9ECF30();
  uint64_t v18 = *(void (**)(void))(v10 + 8);
  sub_25B96DAD8();
  v18();
  sub_25B96DAD8();
  v18();
  if (v17)
  {
    uint64_t v19 = sub_25B9EC630();
    sub_25B9DC38C(v19, v1);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_25B9EC3D0();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v20) != 1)
    {
      sub_25B9EC3B0();
      sub_25B959038();
      v21();
      swift_bridgeObjectRelease();
      uint64_t v22 = (uint64_t *)(v4 + v16[8]);
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      uint64_t v25 = (void *)((char *)v2 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_identifier);
      *uint64_t v25 = v23;
      v25[1] = v24;
      uint64_t v26 = (void *)(v4 + v16[7]);
      uint64_t v27 = v26[1];
      v2[14] = *v26;
      v2[15] = v27;
      sub_25B96D4CC(v4, (uint64_t)v2 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_configuration, (void (*)(void))type metadata accessor for SessionConfiguration);
      v2[17] = MEMORY[0x263F8EE88];
      *(void *)((char *)v2 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B9ECBB0();
      sub_25B96D990();
      v28();
      *(void *)((char *)v2 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_tools) = MEMORY[0x263F8EE78];
      type metadata accessor for GenerativeExperiencesSessionClientData(0);
      sub_25B96C424(&qword_26A51B738, MEMORY[0x263F62120]);
      uint64_t v29 = sub_25B9ECF80();
      sub_25B9658CC(v41, v29, v42);
      swift_bridgeObjectRelease();
      sub_25B94E854(&qword_26A51B7A8);
      uint64_t v30 = (int *)(type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0) - 8);
      unint64_t v31 = (*(unsigned __int8 *)(*(void *)v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v30 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_25B9F6AE0;
      unint64_t v33 = v32 + v31;
      sub_25B9ECE10();
      sub_25B95097C();
      sub_25B96D8F8();
      v34();
      uint64_t v35 = v32 + v31 + v30[7];
      uint64_t v36 = sub_25B9EC520();
      sub_25B96D92C(v35, v37, v38, v36);
      unint64_t v39 = v33 + v30[8];
      long long v40 = v42[1];
      *(_OWORD *)unint64_t v39 = v42[0];
      *(_OWORD *)(v39 + 16) = v40;
      *(void *)(v39 + 32) = v43;
      sub_25B96D218(v4, (void (*)(void))type metadata accessor for SessionConfiguration);
      v2[16] = v32;
      goto LABEL_6;
    }
    sub_25B96CA38(v1, &qword_26A51B730);
  }
  type metadata accessor for GenerativeExperiencesSessionClientData(0);
  swift_defaultActor_destroy();
  sub_25B96D218(v4, (void (*)(void))type metadata accessor for SessionConfiguration);
  swift_deallocPartialClassInstance();
LABEL_6:
  sub_25B964F50();
}

uint64_t sub_25B9658CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v5 = sub_25B94E854(&qword_26A51B720);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B9EC7E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B9ECF40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v55 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v59 = (char *)&v54 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v54 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v61 = a1;
  sub_25B9ECDE0();
  uint64_t v60 = v13;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 88);
  uint64_t v62 = v12;
  int v24 = v23(v22, v12);
  if (v24 == *MEMORY[0x263F62110])
  {
    unint64_t v65 = 0xD000000000000013;
    unint64_t v66 = 0x800000025B9EFF90;
    strcpy((char *)v64, "specialToken.");
    HIWORD(v64[1]) = -4864;
    uint64_t v25 = sub_25B9EC320();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v25);
    sub_25B9EC790();
    sub_25B96CA38((uint64_t)v7, &qword_26A51B720);
    sub_25B9EC780();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v9 + 8);
    v58(v11, v8);
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    uint64_t v26 = v8;
LABEL_10:
    v64[0] = 95;
    v64[1] = 0xE100000000000000;
    sub_25B9ECDE0();
    if (*(void *)(a2 + 16) && (sub_25B991898(), (v31 & 1) != 0)) {
      uint64_t v32 = *(void *)(*(void *)(a2 + 56) + 8 * v30);
    }
    else {
      uint64_t v32 = 0;
    }
    unint64_t v56 = *(void (**)(char *, uint64_t))(v60 + 8);
    v56(v20, v62);
    uint64_t v63 = v32;
    sub_25B9ED690();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    v64[0] = 0;
    v64[1] = 0xE000000000000000;
    sub_25B9ED390();
    swift_bridgeObjectRelease();
    v64[0] = 2128763;
    v64[1] = 0xE300000000000000;
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9ED000();
    swift_bridgeObjectRetain();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9ED000();
    uint64_t v33 = sub_25B9EC320();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v33);
    sub_25B9EC7C0();
    sub_25B96CA38((uint64_t)v7, &qword_26A51B720);
    sub_25B9EC780();
    v58(v11, v26);
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9ED000();
    uint64_t v34 = v64[0];
    uint64_t v35 = v64[1];
    swift_bridgeObjectRetain();
    uint64_t v36 = v59;
    sub_25B9ECDE0();
    swift_isUniquelyReferenced_nonNull_native();
    v64[0] = a2;
    sub_25B991898();
    if (__OFADD__(*(void *)(a2 + 16), (v38 & 1) == 0))
    {
      __break(1u);
    }
    else
    {
      uint64_t v39 = v37;
      char v40 = v38;
      sub_25B94E854(&qword_26A51B750);
      char v41 = sub_25B9ED450();
      uint64_t v42 = v64[0];
      if (v41)
      {
        sub_25B991898();
        if ((v40 & 1) != (v44 & 1))
        {
LABEL_25:
          sub_25B9ED6E0();
          __break(1u);
          goto LABEL_26;
        }
        uint64_t v39 = v43;
      }
      swift_bridgeObjectRelease();
      if (v40)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
        swift_bridgeObjectRetain();
        v45(v55, v36, v62);
        sub_25B9D8F00();
      }
      uint64_t v46 = *(void *)(v42 + 56);
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(v46 + 8 * v39);
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (!v48)
      {
        *(void *)(v46 + 8 * v39) = v49;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v56)(v36, v62);
        unint64_t v51 = v65;
        unint64_t v52 = v66;
        uint64_t v53 = v57;
        *uint64_t v57 = v34;
        v53[1] = v35;
        v53[2] = v42;
        v53[3] = v51;
        v53[4] = v52;
        return result;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v26 = v8;
  if (v24 == *MEMORY[0x263F62100])
  {
    unint64_t v65 = 1919251317;
    unint64_t v66 = 0xE400000000000000;
    strcpy((char *)v64, "specialToken.");
    HIWORD(v64[1]) = -4864;
    uint64_t v27 = sub_25B9EC320();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v27);
    sub_25B9EC7B0();
LABEL_9:
    sub_25B96CA38((uint64_t)v7, &qword_26A51B720);
    sub_25B9EC780();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v9 + 8);
    v58(v11, v8);
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v24 == *MEMORY[0x263F62118])
  {
    unint64_t v65 = 0x6E61747369737361;
    unint64_t v66 = 0xE900000000000074;
    strcpy((char *)v64, "specialToken.");
    HIWORD(v64[1]) = -4864;
    uint64_t v28 = sub_25B9EC320();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v28);
    sub_25B9EC7D0();
    goto LABEL_9;
  }
  if (v24 == *MEMORY[0x263F620F8])
  {
    unint64_t v65 = 1819242356;
    unint64_t v66 = 0xE400000000000000;
    strcpy((char *)v64, "specialToken.");
    HIWORD(v64[1]) = -4864;
    uint64_t v29 = sub_25B9EC320();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v29);
    sub_25B9EC7A0();
    goto LABEL_9;
  }
LABEL_26:
  uint64_t result = sub_25B9ED490();
  __break(1u);
  return result;
}

void sub_25B966100()
{
  sub_25B964F38();
  v52[1] = v3;
  uint64_t v53 = v2;
  uint64_t v54 = v4;
  uint64_t v58 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v6);
  sub_25B958FE4();
  uint64_t v57 = v7;
  uint64_t v8 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B94E900(v12, v52[0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v52 - v15;
  MEMORY[0x270FA5388](v14);
  sub_25B96D8D4();
  uint64_t v17 = sub_25B94E854(&qword_26A51B728);
  uint64_t v18 = sub_25B96068C(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position;
  uint64_t v22 = (uint64_t *)(v0 + 128);
  sub_25B960750();
  while (1)
  {
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v24 = *(void *)(v23 + 16);
    if (*(void *)(v0 + v21) >= v24 - 1) {
      break;
    }
    sub_25B96D9C4();
    uint64_t v25 = *v22;
    if (*(void *)(*v22 + 16))
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v22 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v25 = sub_25B96CCC0(v25);
        *uint64_t v22 = v25;
      }
      uint64_t v27 = *(void *)(v25 + 16);
      if (!v27)
      {
        __break(1u);
        return;
      }
      uint64_t v28 = v27 - 1;
      sub_25B96D878();
      sub_25B96D1B4(v25 + v29 + *(void *)(v10 + 72) * v28, (uint64_t)v16);
      *(void *)(v25 + 16) = v28;
      *uint64_t v22 = v25;
      sub_25B96D1B4((uint64_t)v16, v1);
      sub_25B96D1B4(v1, (uint64_t)v20);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v20, v30, 1, v8);
    sub_25B96CA38((uint64_t)v20, &qword_26A51B728);
    swift_endAccess();
  }
  uint64_t v32 = v57;
  uint64_t v31 = v58;
  if (*(void *)(v0 + 120))
  {
    uint64_t v33 = v54;
    sub_25B9691E4();
    uint64_t v34 = sub_25B9ECE30();
    sub_25B96D92C(v53, v35, v36, v34);
    uint64_t v37 = sub_25B9ECA70();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v33, 0, 1, v37);
  }
  else
  {
    uint64_t v38 = MEMORY[0x263F8EE78];
    if (v24)
    {
      uint64_t v59 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25B9925C4();
      sub_25B96D878();
      uint64_t v40 = v23 + v39;
      uint64_t v41 = *(void *)(v10 + 72);
      uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      do
      {
        uint64_t v43 = v55;
        sub_25B96D4CC(v40, v55, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
        (*v42)(v32, v43, v31);
        sub_25B96D218(v43, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
        uint64_t v38 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B9925C4();
          uint64_t v38 = v59;
        }
        unint64_t v44 = *(void *)(v38 + 16);
        if (v44 >= *(void *)(v38 + 24) >> 1)
        {
          sub_25B9925C4();
          uint64_t v38 = v59;
        }
        *(void *)(v38 + 16) = v44 + 1;
        unint64_t v45 = v38
            + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))
            + *(void *)(v56 + 72) * v44;
        uint64_t v32 = v57;
        uint64_t v31 = v58;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v56 + 32))(v45, v57, v58);
        uint64_t v59 = v38;
        v40 += v41;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    uint64_t v46 = sub_25B9ECE20();
    uint64_t v59 = v38;
    sub_25B96C2A4(v46);
    uint64_t v47 = v53;
    sub_25B9ECE40();
    uint64_t v48 = sub_25B9ECE30();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v47, 0, 1, v48);
    uint64_t v49 = sub_25B9ECA70();
    sub_25B96D92C(v54, v50, v51, v49);
  }
  sub_25B964F50();
}

uint64_t sub_25B96652C()
{
  sub_25B960594();
  v1[17] = v2;
  v1[18] = v0;
  v1[16] = v3;
  uint64_t v4 = sub_25B94E854(&qword_26A51B6F8);
  sub_25B96068C(v4);
  v1[19] = sub_25B960674();
  uint64_t v5 = sub_25B9ECE10();
  v1[20] = v5;
  sub_25B964F20(v5);
  v1[21] = v6;
  v1[22] = sub_25B960674();
  uint64_t v7 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  v1[23] = v7;
  sub_25B964F20(v7);
  v1[24] = v8;
  v1[25] = sub_25B96D844();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  uint64_t v9 = sub_25B94E854(&qword_26A51B728);
  sub_25B96068C(v9);
  v1[28] = sub_25B96D844();
  v1[29] = swift_task_alloc();
  sub_25B96D99C();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B966658()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position;
  v0[30] = OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position;
  uint64_t v3 = (uint64_t *)(v1 + 128);
  sub_25B960750();
  if (*(void *)(v1 + v2) < *(void *)(*(void *)(v1 + 128) + 16) - 1)
  {
    uint64_t v4 = v0[24];
    do
    {
      sub_25B96D9C4();
      uint64_t v5 = *v3;
      if (*(void *)(*v3 + 16))
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v3 = v5;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_25B96CCC0(v5);
          uint64_t v5 = result;
          *uint64_t v3 = result;
        }
        uint64_t v7 = *(void *)(v5 + 16);
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = v0[29];
        uint64_t v10 = v0[26];
        uint64_t v9 = v0[27];
        uint64_t v11 = v7 - 1;
        sub_25B96D1B4(v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v7 - 1), v10);
        *(void *)(v5 + 16) = v11;
        *uint64_t v3 = v5;
        sub_25B96D1B4(v10, v9);
        sub_25B96D1B4(v9, v8);
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v12 = 1;
      }
      uint64_t v13 = v0[29];
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v13, v12, 1, v0[23]);
      sub_25B96CA38(v13, &qword_26A51B728);
      swift_endAccess();
    }
    while (*(void *)(v1 + v2) < *(void *)(*(void *)(v1 + 128) + 16) - 1);
  }
  uint64_t v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  void *v14 = v0;
  v14[1] = sub_25B966844;
  return sub_25B967A18();
}

uint64_t sub_25B966844()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25B96053C();
  void *v5 = v4;
  v3[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = v3[18];
    return MEMORY[0x270FA2498](sub_25B966D94, v6, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v3[33] = v7;
    *uint64_t v7 = v4;
    v7[1] = sub_25B966988;
    return sub_25B9680D8();
  }
}

uint64_t sub_25B966988()
{
  sub_25B96D860();
  *(void *)(v2 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v1 + 144);
  if (v0) {
    uint64_t v4 = sub_25B966E24;
  }
  else {
    uint64_t v4 = sub_25B966A90;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_25B966A90()
{
  uint64_t v24 = (void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 184);
  sub_25B966EC8(*(void *)(*(void *)(v0 + 144) + 128), v1);
  int v3 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 224);
  if (v3 == 1)
  {
    sub_25B96CA38(*(void *)(v0 + 224), &qword_26A51B728);
    sub_25B9ECF40();
    sub_25B96C424(&qword_26A51B738, MEMORY[0x263F62120]);
    uint64_t v5 = sub_25B9ECF80();
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + *(int *)(*(void *)(v0 + 184) + 24) + 16);
    swift_bridgeObjectRetain();
    sub_25B96D218(v4, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
  }
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v23 = *(void *)(v0 + 192);
  uint64_t v21 = *(void *)(v0 + 152);
  uint64_t v22 = *(void *)(v0 + 144);
  type metadata accessor for GenerativeExperiencesSessionClientData(0);
  sub_25B9658CC(v8, v5, v24);
  swift_bridgeObjectRelease();
  sub_25B96D944();
  v9();
  sub_25B96D474(v21, v6 + *(int *)(v7 + 20), &qword_26A51B6F8);
  uint64_t v10 = v6 + *(int *)(v7 + 24);
  long long v11 = *(_OWORD *)v24;
  long long v12 = *(_OWORD *)(v0 + 32);
  *(void *)(v10 + 32) = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v10 = v11;
  *(_OWORD *)(v10 + 16) = v12;
  sub_25B96D9C4();
  sub_25B96B1F8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B98FD78);
  uint64_t v13 = *(void *)(*(void *)(v22 + 128) + 16);
  sub_25B96B29C(v13, (uint64_t (*)(BOOL))sub_25B98FD78);
  uint64_t v14 = *(void *)(v22 + 128);
  *(void *)(v14 + 16) = v13 + 1;
  sub_25B96D1B4(v6, v14+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v13);
  swift_endAccess();
  sub_25B96CA38(v21, &qword_26A51B6F8);
  sub_25B96D920();
  uint64_t result = v15();
  uint64_t v17 = *(void *)(v22 + v25);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 240)) = v19;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    return v20();
  }
  return result;
}

uint64_t sub_25B966D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25B96D9DC();
  sub_25B96DA78();
  sub_25B96D96C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B96DA60();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

uint64_t sub_25B966E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25B96D9DC();
  sub_25B96DA78();
  sub_25B96DAFC();
  v10();
  sub_25B96D96C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B96DA60();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_25B966EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = v3 - 1;
    uint64_t v6 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
    sub_25B96D4CC(a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a2, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
    uint64_t v7 = a2;
    uint64_t v8 = 0;
    uint64_t v9 = v6;
  }
  else
  {
    uint64_t v9 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v7, v8, 1, v9);
}

uint64_t sub_25B966FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = v3 - 1;
    uint64_t v6 = sub_25B94E854(&qword_26A51B7A0);
    sub_25B96D474(a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a2, &qword_26A51B7A0);
    uint64_t v7 = a2;
    uint64_t v8 = 0;
    uint64_t v9 = 1;
    uint64_t v10 = v6;
  }
  else
  {
    sub_25B94E854(&qword_26A51B7A0);
    uint64_t v7 = sub_25B96D8B8();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v7, v8, v9, v10);
}

uint64_t sub_25B9670AC()
{
  uint64_t v2 = sub_25B9ECB10();
  sub_25B950790();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B94E854(&qword_26A51B578);
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B959398();
  uint64_t v10 = sub_25B9ED130();
  sub_25B96D92C(v1, v11, v12, v10);
  sub_25B96D944();
  v13();
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = 0;
  *((void *)v15 + 4) = v0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v15[v14], (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  swift_retain();
  sub_25B95D778(v1, (uint64_t)&unk_26A51B790, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_25B967210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_25B967230, a4, 0);
}

uint64_t sub_25B967230()
{
  sub_25B960594();
  sub_25B96872C();
  sub_25B9605A0();
  return v0();
}

size_t sub_25B967288()
{
  sub_25B960750();
  uint64_t v0 = swift_bridgeObjectRetain();
  size_t v1 = sub_25B96CA88(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_25B9672D8(uint64_t a1)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51B578);
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B96D884();
  uint64_t v6 = sub_25B9ED130();
  sub_25B96D92C(v2, v7, v8, v6);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v1;
  v9[5] = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B95D778(v2, (uint64_t)&unk_26A51B7B8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_25B9673A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_25B9673C0, a4, 0);
}

uint64_t sub_25B9673C0()
{
  sub_25B960594();
  sub_25B968804();
  sub_25B9605A0();
  return v0();
}

uint64_t sub_25B967418()
{
  sub_25B960594();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = sub_25B94E854(&qword_26A51B6F8);
  sub_25B96068C(v3);
  v1[7] = sub_25B960674();
  sub_25B96D99C();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B967498()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position;
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position) < 2)
  {
    if (qword_26A51B020 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_25B9ECD70();
    sub_25B9559F0(v17, (uint64_t)qword_26A51C1A0);
    uint64_t v18 = sub_25B9ECD40();
    os_log_type_t v19 = sub_25B9ED230();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (_WORD *)sub_25B96DB28();
      sub_25B96DB1C(v20);
      sub_25B96DAA4(&dword_25B94C000, v21, v22, "Unable to perform undo operation.");
      sub_25B96D89C();
    }
    uint64_t v23 = v0[5];

    uint64_t v15 = sub_25B9EC520();
    uint64_t v16 = v23;
  }
  else
  {
    sub_25B960750();
    swift_bridgeObjectRetain();
    sub_25B969AE0();
    unint64_t v4 = v3;
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v6 = v4 - 1;
    *(void *)(v1 + v2) = v4 - 1;
    uint64_t v7 = *(void *)(v1 + 128);
    if (v4 <= *(void *)(v7 + 16))
    {
      if (!v4)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = v0[7];
      uint64_t v9 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
      uint64_t v10 = sub_25B964F20(v9);
      sub_25B96D474(v7+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v12 + 72) * v6+ *(int *)(v10 + 28), v8, &qword_26A51B6F8);
      uint64_t v13 = sub_25B9EC520();
      if (sub_25B96D9A8() != 1)
      {
        (*(void (**)(void, void, uint64_t))(*(void *)(v13 - 8) + 32))(v0[5], v0[7], v13);
        uint64_t v16 = sub_25B96DAC4();
        goto LABEL_13;
      }
      sub_25B96CA38(v0[7], &qword_26A51B6F8);
    }
    uint64_t v14 = v0[5];
    uint64_t v15 = sub_25B9EC520();
    uint64_t v16 = v14;
  }
  uint64_t v24 = 1;
  uint64_t v25 = 1;
LABEL_13:
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v16, v24, v25, v15);
  swift_task_dealloc();
  sub_25B9605A0();
  return v26();
}

uint64_t sub_25B9676E4()
{
  sub_25B960594();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = sub_25B94E854(&qword_26A51B6F8);
  sub_25B96068C(v3);
  v1[7] = sub_25B960674();
  sub_25B96D99C();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B967764()
{
  if (!sub_25B967984())
  {
    if (qword_26A51B020 == -1)
    {
LABEL_7:
      uint64_t v18 = sub_25B9ECD70();
      sub_25B9559F0(v18, (uint64_t)qword_26A51C1A0);
      os_log_type_t v19 = sub_25B9ECD40();
      os_log_type_t v20 = sub_25B9ED230();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (_WORD *)sub_25B96DB28();
        sub_25B96DB1C(v21);
        sub_25B96DAA4(&dword_25B94C000, v22, v23, "Unable to perform redo operation. No undo operations submitted.");
        sub_25B96D89C();
      }

      sub_25B9EC520();
      uint64_t v14 = sub_25B96D8B8();
      goto LABEL_10;
    }
LABEL_14:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position;
  sub_25B969D88();
  sub_25B96A074();
  uint64_t v4 = v3;
  *(void *)(v1 + v2) = v3;
  sub_25B960750();
  uint64_t v6 = *(void *)(v1 + 128);
  if (v4 >= *(void *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  uint64_t v9 = sub_25B964F20(v8);
  sub_25B96D474(v6+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v11 + 72) * v4+ *(int *)(v9 + 28), v7, &qword_26A51B6F8);
  sub_25B9EC520();
  int v12 = sub_25B96D9A8();
  uint64_t v5 = *(void *)(v0 + 56);
  if (v12 == 1)
  {
LABEL_16:
    uint64_t result = sub_25B96CA38(v5, &qword_26A51B6F8);
    __break(1u);
    return result;
  }
  sub_25B96D990();
  v13();
  uint64_t v14 = sub_25B96DAC4();
LABEL_10:
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v14, v15, v16, v17);
  swift_task_dealloc();
  sub_25B9605A0();
  return v24();
}

BOOL sub_25B967984()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position);
  sub_25B960750();
  return v1 < *(void *)(*(void *)(v0 + 128) + 16) - 1;
}

uint64_t sub_25B9679D4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_tools) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B967A18()
{
  sub_25B960594();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_25B94E854(&qword_26A51B720);
  sub_25B96068C(v4);
  v1[5] = sub_25B960674();
  uint64_t v5 = sub_25B9ECF40();
  sub_25B96068C(v5);
  v1[6] = sub_25B960674();
  uint64_t v6 = sub_25B9ECEE0();
  v1[7] = v6;
  sub_25B964F20(v6);
  v1[8] = v7;
  v1[9] = sub_25B960674();
  uint64_t v8 = sub_25B9ECF00();
  v1[10] = v8;
  sub_25B964F20(v8);
  v1[11] = v9;
  v1[12] = sub_25B96D844();
  v1[13] = swift_task_alloc();
  uint64_t v10 = sub_25B9ECF20();
  v1[14] = v10;
  sub_25B964F20(v10);
  v1[15] = v11;
  v1[16] = sub_25B96D844();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_25B96D99C();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B967B70()
{
  sub_25B960594();
  sub_25B9ECE00();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B967C14;
  uint64_t v2 = *(void *)(v0 + 144);
  return MEMORY[0x270F582D8](v2, 1);
}

uint64_t sub_25B967C14()
{
  sub_25B96D9DC();
  sub_25B96DA78();
  sub_25B96D860();
  uint64_t v4 = v3;
  sub_25B96053C();
  void *v5 = v4;
  uint64_t v6 = v1[17];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[14];
  void *v5 = *v2;
  v4[20] = v0;
  swift_task_dealloc();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v4[21] = v9;
  v4[22] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v6, v8);
  sub_25B96DA60();
  return MEMORY[0x270FA2498](v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_25B967D70()
{
  uint64_t v1 = sub_25B9ECEA0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[11];
    uint64_t v5 = *(void (**)(void))(v3 + 16);
    v3 += 16;
    uint64_t v4 = v5;
    unint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v30 = (unsigned int (**)(uint64_t, uint64_t))(v0[8] + 88);
    int v29 = *MEMORY[0x263F62088];
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v31 = v5;
    do
    {
      uint64_t v9 = v0[9];
      uint64_t v10 = v0[7];
      uint64_t v11 = v4;
      sub_25B96D8C8();
      v12();
      sub_25B9ECEF0();
      if ((*v30)(v9, v10) != v29)
      {
        sub_25B96D8C8();
        v11();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v18 = sub_25B96DA50();
          uint64_t v8 = sub_25B98FDC0(v18, v19, v20, v8);
        }
        unint64_t v14 = *(void *)(v8 + 16);
        unint64_t v13 = *(void *)(v8 + 24);
        if (v14 >= v13 >> 1)
        {
          char v21 = sub_25B96D8E4(v13);
          uint64_t v8 = sub_25B98FDC0(v21, v22, v23, v8);
        }
        *(void *)(v8 + 16) = v14 + 1;
        sub_25B96D990();
        v15();
      }
      sub_25B959038();
      v16();
      sub_25B959038();
      v17();
      v6 += v7;
      --v2;
      uint64_t v4 = v31;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[21];
  uint64_t v25 = v0[18];
  uint64_t v26 = v0[14];
  sub_25B9ECDE0();
  sub_25B9ECE90();
  sub_25B9ECDF0();
  sub_25B9ECDB0();
  v24(v25, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B96DA00();
  return v27();
}

uint64_t sub_25B96802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25B96D9DC();
  sub_25B96DA78();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B96DA60();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

uint64_t sub_25B9680D8()
{
  sub_25B960594();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_25B9EC4B0();
  v0[4] = v3;
  sub_25B964F20(v3);
  v0[5] = v4;
  v0[6] = sub_25B960674();
  uint64_t v5 = sub_25B9EC4D0();
  v0[7] = v5;
  sub_25B964F20(v5);
  v0[8] = v6;
  v0[9] = sub_25B96D844();
  v0[10] = swift_task_alloc();
  uint64_t v7 = sub_25B9EC510();
  v0[11] = v7;
  sub_25B964F20(v7);
  v0[12] = v8;
  v0[13] = sub_25B96D844();
  v0[14] = swift_task_alloc();
  v0[15] = swift_task_alloc();
  uint64_t v9 = sub_25B94E854(&qword_26A51B6F8);
  sub_25B96068C(v9);
  v0[16] = sub_25B960674();
  uint64_t v10 = sub_25B9EC520();
  v0[17] = v10;
  sub_25B964F20(v10);
  v0[18] = v11;
  v0[19] = sub_25B960674();
  sub_25B96D99C();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B96823C()
{
  sub_25B96D474(v0[3], v0[16], &qword_26A51B6F8);
  if (sub_25B96D9A8() == 1)
  {
    uint64_t v1 = v0[17];
    sub_25B96CA38(v0[16], &qword_26A51B6F8);
    uint64_t v2 = sub_25B96D8B8();
    uint64_t v5 = v1;
LABEL_25:
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v2, v3, v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    return v50();
  }
  (*(void (**)(void, void, void))(v0[18] + 32))(v0[19], v0[16], v0[17]);
  uint64_t result = sub_25B9EC470();
  uint64_t v7 = result;
  uint64_t v54 = *(void *)(result + 16);
  if (!v54)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v46 = v0[18];
    uint64_t v45 = v0[19];
    uint64_t v47 = v0[17];
    uint64_t v48 = v0[2];
    sub_25B96D944();
    v49();
    sub_25B9EC480();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    uint64_t v2 = v48;
    uint64_t v3 = 0;
    uint64_t v4 = 1;
    uint64_t v5 = v47;
    goto LABEL_25;
  }
  unint64_t v8 = 0;
  uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t))(v0[5] + 88);
  int v58 = *MEMORY[0x263F7F900];
  uint64_t v53 = v0[12];
  unint64_t v52 = (uint64_t (**)(uint64_t, uint64_t))(v53 + 8);
  uint64_t v57 = MEMORY[0x263F8EE78];
  uint64_t v51 = result;
  while (v8 < *(void *)(v7 + 16))
  {
    uint64_t v56 = *(void (**)(void))(v53 + 16);
    sub_25B96D8C8();
    v9();
    uint64_t v10 = *(void *)(sub_25B9EC4E0() + 16);
    if (v10)
    {
      unint64_t v55 = v8;
      sub_25B96D878();
      uint64_t v13 = v11 + v12;
      uint64_t v15 = *(void *)(v14 + 72);
      uint64_t v16 = *(void (**)(void, uint64_t, void))(v14 + 16);
      uint64_t v17 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v18 = v0[6];
        uint64_t v19 = v0[4];
        v16(v0[10], v13, v0[7]);
        sub_25B9EC4C0();
        if ((*v59)(v18, v19) != v58)
        {
          v16(v0[9], v0[10], v0[7]);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v25 = sub_25B96DA50();
            uint64_t v17 = sub_25B98FE50(v25, v26, v27, v17);
          }
          unint64_t v21 = *(void *)(v17 + 16);
          unint64_t v20 = *(void *)(v17 + 24);
          if (v21 >= v20 >> 1)
          {
            char v28 = sub_25B96D8E4(v20);
            uint64_t v17 = sub_25B98FE50(v28, v29, v30, v17);
          }
          *(void *)(v17 + 16) = v21 + 1;
          sub_25B96D990();
          v22();
        }
        sub_25B959038();
        v23();
        sub_25B959038();
        v24();
        v13 += v15;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      uint64_t v7 = v51;
      unint64_t v8 = v55;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_25B96D8C8();
    v56();
    sub_25B9EC4F0();
    sub_25B96D8C8();
    v56();
    uint64_t v31 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v39 = sub_25B96DA50();
      uint64_t v31 = sub_25B98FE08(v39, v40, v41, v57);
    }
    unint64_t v33 = *(void *)(v31 + 16);
    unint64_t v32 = *(void *)(v31 + 24);
    if (v33 >= v32 >> 1)
    {
      char v42 = sub_25B96D8E4(v32);
      uint64_t v57 = sub_25B98FE08(v42, v43, v44, v31);
    }
    else
    {
      uint64_t v57 = v31;
    }
    ++v8;
    uint64_t v34 = v0[14];
    uint64_t v35 = v0[15];
    uint64_t v36 = v0[11];
    *(void *)(v57 + 16) = v33 + 1;
    sub_25B96D990();
    v37();
    uint64_t v38 = *v52;
    (*v52)(v34, v36);
    uint64_t result = v38(v35, v36);
    if (v8 == v54) {
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B96872C()
{
  sub_25B9ECB10();
  sub_25B950790();
  MEMORY[0x270FA5388](v0);
  sub_25B96D950();
  MEMORY[0x270FA5388](v1);
  sub_25B96D8D4();
  sub_25B96D9F4();
  sub_25B96D944();
  v2();
  sub_25B96D9C4();
  sub_25B96DAE4();
  sub_25B96B2E4();
  sub_25B96D920();
  v3();
  return swift_endAccess();
}

void sub_25B968804()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51B768);
  uint64_t v4 = sub_25B96068C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  uint64_t v30 = v5;
  uint64_t v6 = sub_25B9ECB10();
  sub_25B950790();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_25B96DA40();
  uint64_t v12 = (char *)(v10 - v11);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v32 = *(void *)(v2 + 16);
  if (v32)
  {
    sub_25B96D878();
    uint64_t v31 = v2 + v16;
    uint64_t v29 = v2;
    swift_bridgeObjectRetain();
    unint64_t v33 = (uint64_t *)(v0 + 136);
    sub_25B960750();
    uint64_t v17 = 0;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v18 = v8 + 16;
    uint64_t v37 = *(void *)(v18 + 56);
    uint64_t v38 = v19;
    uint64_t v35 = v15;
    uint64_t v36 = (void (**)(void))(v18 - 8);
    while (1)
    {
      v38(v15, v31 + v37 * v17, v6);
      uint64_t v20 = *v33;
      if (*(void *)(*v33 + 16))
      {
        uint64_t v34 = v17;
        sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_25B9ECF90();
        uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
        unint64_t v23 = v21 & ~v22;
        if ((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
        {
          uint64_t v24 = ~v22;
          while (1)
          {
            uint64_t v25 = v18;
            v38(v12, *(void *)(v20 + 48) + v23 * v37, v6);
            sub_25B96C424(&qword_26A51B770, MEMORY[0x263F415B0]);
            char v26 = sub_25B9ECFB0();
            char v27 = *v36;
            sub_25B96DAE4();
            sub_25B96DAFC();
            v27();
            if (v26) {
              break;
            }
            unint64_t v23 = (v23 + 1) & v24;
            uint64_t v18 = v25;
            if (((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              goto LABEL_8;
            }
          }
          swift_bridgeObjectRelease();
          sub_25B96D9C4();
          uint64_t v28 = v30;
          uint64_t v15 = v35;
          sub_25B96C46C((uint64_t)v35, v30);
          sub_25B96CA38(v28, &qword_26A51B768);
          swift_endAccess();
          sub_25B96DAFC();
          v27();
          uint64_t v18 = v25;
          uint64_t v17 = v34;
          goto LABEL_10;
        }
LABEL_8:
        swift_bridgeObjectRelease();
        uint64_t v17 = v34;
        uint64_t v15 = v35;
      }
      ((void (*)(char *, uint64_t))*v36)(v15, v6);
LABEL_10:
      if (++v17 == v32)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_25B964F50();
}

void sub_25B968B48()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  uint64_t v89 = sub_25B9ECF20();
  sub_25B950790();
  uint64_t v81 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25B96DB08();
  uint64_t v88 = v9;
  MEMORY[0x270FA5388](v10);
  v77 = (char *)&v69 - v11;
  uint64_t v79 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v82 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B94E900(v14, v69);
  MEMORY[0x270FA5388](v15);
  uint64_t v78 = (char *)&v69 - v16;
  uint64_t v91 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  sub_25B950790();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_25B96D884();
  uint64_t v90 = sub_25B94E854(&qword_26A51B758);
  sub_25B950790();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_25B96DA10();
  uint64_t v76 = sub_25B94E854(&qword_26A51B760);
  sub_25B95097C();
  MEMORY[0x270FA5388](v23);
  sub_25B958FE4();
  uint64_t v75 = v24;
  sub_25B960750();
  uint64_t v25 = *(void **)(v0 + 128);
  uint64_t v26 = v25[2];
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v80 = v4;
  if (v26)
  {
    unint64_t v86 = v6;
    uint64_t v92 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25B992574();
    sub_25B96D878();
    uint64_t v85 = v25;
    uint64_t v29 = (uint64_t)v25 + v28;
    uint64_t v30 = *(void *)(v18 + 72);
    uint64_t v27 = (uint64_t)v92;
    do
    {
      sub_25B96D4CC(v29, v1, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
      uint64_t v31 = v1 + *(int *)(v91 + 24);
      uint64_t v32 = *(void *)(v31 + 32);
      *uint64_t v2 = *(void *)(v31 + 24);
      v2[1] = v32;
      swift_bridgeObjectRetain();
      sub_25B9ECE00();
      sub_25B96D218(v1, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B992574();
        uint64_t v27 = (uint64_t)v92;
      }
      unint64_t v33 = *(void *)(v27 + 16);
      if (v33 >= *(void *)(v27 + 24) >> 1)
      {
        sub_25B992574();
        uint64_t v27 = (uint64_t)v92;
      }
      *(void *)(v27 + 16) = v33 + 1;
      sub_25B96D878();
      sub_25B96C3BC((uint64_t)v2, v27 + v34 + *(void *)(v21 + 72) * v33);
      v29 += v30;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v4 = v80;
  }
  uint64_t v35 = sub_25B96DEB8(v27);
  uint64_t v36 = sub_25B9ECE20();
  uint64_t v37 = *(void *)(v36 + 16);
  swift_bridgeObjectRetain();
  uint64_t v74 = v37;
  if (v37)
  {
    unint64_t v38 = 0;
    uint64_t v73 = v82 + 16;
    uint64_t v71 = (void (**)(uint64_t, char *, uint64_t))(v82 + 32);
    uint64_t v83 = (void (**)(uint64_t, char *, uint64_t))(v81 + 32);
    uint64_t v69 = v81 + 40;
    uint64_t v72 = (void (**)(char *, uint64_t))(v82 + 8);
    char v39 = (void *)(v4 + 64);
    char v41 = v78;
    uint64_t v40 = v79;
    uint64_t v70 = v36;
    while (v38 < *(void *)(v36 + 16))
    {
      sub_25B96D878();
      sub_25B96D8F8();
      v43(v42);
      unint64_t v44 = *(void *)(v4 + 16);
      if (v38 == v44)
      {
        (*v72)(v41, v40);
        goto LABEL_25;
      }
      if (v38 >= v44) {
        goto LABEL_27;
      }
      uint64_t v85 = v39;
      unint64_t v86 = v38;
      uint64_t v45 = *(v39 - 3);
      uint64_t v90 = *(v39 - 4);
      uint64_t v91 = v35;
      uint64_t v46 = *(v39 - 2);
      uint64_t v47 = *(v39 - 1);
      uint64_t v48 = *v39;
      uint64_t v49 = v75;
      uint64_t v50 = (uint64_t *)&v75[*(int *)(v76 + 48)];
      uint64_t v51 = *v71;
      (*v71)((uint64_t)v75, v41, v40);
      *uint64_t v50 = v90;
      v50[1] = v45;
      v50[2] = v46;
      v50[3] = v47;
      v50[4] = v48;
      v51(v87, v49, v40);
      swift_bridgeObjectRetain_n();
      uint64_t v84 = v45;
      swift_bridgeObjectRetain();
      uint64_t v90 = v46;
      swift_bridgeObjectRetain();
      unint64_t v52 = v77;
      sub_25B9ECE00();
      uint64_t v53 = *v83;
      (*v83)((uint64_t)v88, v52, v89);
      uint64_t v54 = v91;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v92 = (void *)v54;
      sub_25B96DAF0();
      unint64_t v55 = sub_25B991A30();
      if (__OFADD__(*(void *)(v54 + 16), (v56 & 1) == 0)) {
        goto LABEL_28;
      }
      unint64_t v57 = v55;
      char v58 = v56;
      sub_25B94E854(&qword_26A51BAA0);
      char v59 = sub_25B9ED450();
      uint64_t v60 = v92;
      if (v59)
      {
        sub_25B96DAF0();
        unint64_t v61 = sub_25B991A30();
        if ((v58 & 1) != (v62 & 1)) {
          goto LABEL_30;
        }
        unint64_t v57 = v61;
      }
      if (v58)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v81 + 40))(v60[7] + *(void *)(v81 + 72) * v57, v88, v89);
      }
      else
      {
        v60[(v57 >> 6) + 8] |= 1 << v57;
        uint64_t v63 = (uint64_t *)(v60[6] + 16 * v57);
        *uint64_t v63 = v47;
        v63[1] = v48;
        v53(v60[7] + *(void *)(v81 + 72) * v57, v88, v89);
        uint64_t v64 = v60[2];
        BOOL v65 = __OFADD__(v64, 1);
        uint64_t v66 = v64 + 1;
        if (v65) {
          goto LABEL_29;
        }
        v60[2] = v66;
        swift_bridgeObjectRetain();
      }
      unint64_t v38 = v86 + 1;
      uint64_t v35 = (uint64_t)v92;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v79;
      sub_25B959038();
      v68(v67);
      char v39 = v85 + 5;
      uint64_t v4 = v80;
      char v41 = v78;
      uint64_t v36 = v70;
      if (v74 == v38) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    sub_25B9ED6E0();
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B964F50();
  }
}

void sub_25B9691E4()
{
  sub_25B964F38();
  uint64_t v3 = v0;
  uint64_t v84 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_25B94E854(&qword_26A51B718);
  uint64_t v12 = sub_25B96068C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25B958FE4();
  uint64_t v81 = v13;
  uint64_t v14 = sub_25B94E854(&qword_26A51B720);
  uint64_t v15 = sub_25B96068C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25B958FE4();
  uint64_t v78 = v16;
  uint64_t v80 = sub_25B9EC7E0();
  sub_25B950790();
  uint64_t v79 = v17;
  MEMORY[0x270FA5388](v18);
  sub_25B958FE4();
  uint64_t v77 = v19;
  uint64_t v20 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  sub_25B950790();
  uint64_t v72 = v21;
  MEMORY[0x270FA5388](v22);
  sub_25B95BA7C();
  uint64_t v23 = sub_25B94E854(&qword_26A51B728);
  uint64_t v24 = sub_25B96068C(v23);
  MEMORY[0x270FA5388](v24);
  sub_25B96D884();
  uint64_t v25 = sub_25B94E854(&qword_26A51B730);
  uint64_t v26 = sub_25B96068C(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionConfiguration();
  uint64_t v29 = sub_25B9EC630();
  sub_25B9DC38C(v29, (uint64_t)v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_25B9EC3D0();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v28, 1, v30) == 1)
  {
    sub_25B96CA38((uint64_t)v28, &qword_26A51B730);
    sub_25B9ED490();
    __break(1u);
  }
  else
  {
    uint64_t v76 = sub_25B9EC3B0();
    uint64_t v75 = v31;
    sub_25B959038();
    v32();
    uint64_t v33 = v3 + 128;
    sub_25B960750();
    sub_25B966EC8(*(void *)(v3 + 128), v1);
    int v34 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v20);
    uint64_t v73 = v20;
    if (v34 == 1)
    {
      sub_25B96CA38(v1, &qword_26A51B728);
      sub_25B9ECF40();
      sub_25B96C424(&qword_26A51B738, MEMORY[0x263F62120]);
      uint64_t v35 = sub_25B9ECF80();
    }
    else
    {
      uint64_t v35 = *(void *)(v1 + *(int *)(v20 + 24) + 16);
      swift_bridgeObjectRetain();
      sub_25B96D218(v1, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
    }
    uint64_t v82 = v10;
    uint64_t v83 = v6;
    uint64_t v86 = v3;
    uint64_t v85 = v8;
    uint64_t v36 = sub_25B9ECE20();
    int64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      uint64_t v74 = v2;
      uint64_t v71 = v33;
      uint64_t v89 = MEMORY[0x263F8EE78];
      sub_25B9925A4(0, v37, 0);
      uint64_t v38 = v89;
      uint64_t v39 = *(void *)(sub_25B9ECE10() - 8);
      sub_25B96D878();
      uint64_t v41 = v36 + v40;
      type metadata accessor for GenerativeExperiencesSessionClientData(0);
      uint64_t v42 = *(void *)(v39 + 72);
      uint64_t v43 = v35;
      do
      {
        swift_bridgeObjectRetain();
        sub_25B9658CC(v41, v43, &v91);
        swift_bridgeObjectRelease();
        uint64_t v43 = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v89 = v38;
        unint64_t v45 = *(void *)(v38 + 16);
        unint64_t v44 = *(void *)(v38 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_25B9925A4((char *)(v44 > 1), v45 + 1, 1);
          uint64_t v38 = v89;
        }
        *(void *)(v38 + 16) = v45 + 1;
        uint64_t v46 = v38 + 40 * v45;
        long long v47 = v91;
        long long v48 = v92;
        *(void *)(v46 + 64) = v93;
        *(_OWORD *)(v46 + 32) = v47;
        *(_OWORD *)(v46 + 48) = v48;
        v41 += v42;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
      uint64_t v33 = v71;
      uint64_t v2 = v74;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = MEMORY[0x263F8EE78];
      uint64_t v43 = v35;
    }
    uint64_t v74 = v43;
    uint64_t v49 = *(void *)(*(void *)v33 + 16);
    if (v49)
    {
      uint64_t v71 = v38;
      sub_25B96D878();
      uint64_t v52 = v50 + v51;
      uint64_t v54 = *(void *)(v53 + 72);
      uint64_t v72 = v50;
      swift_bridgeObjectRetain();
      uint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      do
      {
        sub_25B96D4CC(v52, v2, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
        uint64_t v89 = v55;
        unint64_t v90 = v56;
        swift_bridgeObjectRetain();
        sub_25B9ED000();
        uint64_t v55 = v89;
        unint64_t v56 = v90;
        sub_25B96D218(v2, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
        swift_bridgeObjectRelease();
        v52 += v54;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
      uint64_t v38 = v71;
    }
    else
    {
      uint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
    }
    uint64_t v89 = v55;
    unint64_t v90 = v56;
    uint64_t v57 = *(void *)(v38 + 16);
    if (v57)
    {
      swift_bridgeObjectRetain();
      unint64_t v58 = 0;
      uint64_t v59 = v38 + 64;
      unint64_t v60 = 0xE000000000000000;
      do
      {
        v59 += 40;
        unint64_t v87 = v58;
        unint64_t v88 = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25B9ED000();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v58 = v87;
        unint64_t v60 = v88;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
    }
    sub_25B96D9F4();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    unint64_t v87 = 0;
    unint64_t v88 = 0xE000000000000000;
    sub_25B9ED390();
    swift_bridgeObjectRelease();
    unint64_t v87 = 0xD000000000000010;
    unint64_t v88 = 0x800000025B9EFF10;
    sub_25B9EC320();
    uint64_t v61 = v78;
    uint64_t v62 = sub_25B96D8B8();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v62, v63, v64, v65);
    sub_25B9EC7D0();
    sub_25B96CA38(v61, &qword_26A51B720);
    sub_25B9EC780();
    sub_25B959038();
    v66();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9ED000();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B9EC340();
    sub_25B96C424(&qword_26A51B740, MEMORY[0x263F561C0]);
    sub_25B9EC330();
    sub_25B94E854(&qword_26A51B748);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25B9F6AE0;
    uint64_t v68 = v84;
    *(void *)(inited + 32) = v83;
    *(void *)(inited + 40) = v68;
    unint64_t v69 = v90;
    *(void *)(inited + 48) = v89;
    *(void *)(inited + 56) = v69;
    swift_bridgeObjectRetain_n();
    sub_25B9ECF80();
    sub_25B96DAE4();
    sub_25B9ECA60();
    sub_25B968B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B964F50();
  }
}

void sub_25B969AE0()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  uint64_t v5 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B96D950();
  MEMORY[0x270FA5388](v9);
  sub_25B96D8D4();
  sub_25B9ECE10();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  sub_25B96DA10();
  uint64_t v33 = v0 + 128;
  sub_25B960750();
  int v32 = 0;
  unsigned int v31 = *MEMORY[0x263F62100];
  uint64_t v11 = (void (**)(uint64_t, void, uint64_t))(v7 + 104);
  uint64_t v12 = (void (**)(uint64_t))(v7 + 8);
  do
  {
    unint64_t v13 = v4;
    BOOL v14 = v4 == 1;
    BOOL v15 = v4 <= 1;
    uint64_t v16 = v4 - 1;
    if (v15)
    {
      int v17 = !v14;
      if ((v17 | v32)) {
        goto LABEL_13;
      }
      int v32 = 1;
      uint64_t v16 = 1;
    }
    if (v13 >= *(void *)(*(void *)v33 + 16))
    {
      __break(1u);
LABEL_13:
      if (qword_26A51B020 != -1) {
        goto LABEL_17;
      }
      while (1)
      {
        uint64_t v25 = sub_25B9ECD70();
        sub_25B9559F0(v25, (uint64_t)qword_26A51C1A0);
        uint64_t v26 = sub_25B9ECD40();
        os_log_type_t v27 = sub_25B9ED240();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (_WORD *)sub_25B96DB28();
          sub_25B96DB1C(v28);
          sub_25B96DA84(&dword_25B94C000, v29, v30, "Invalid prompt configuration. Unable to find previous user message.");
          sub_25B96D89C();
        }

        __break(1u);
LABEL_17:
        swift_once();
      }
    }
    uint64_t v18 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
    sub_25B964F20(v18);
    sub_25B96D8F8();
    v19();
    sub_25B9ECDE0();
    sub_25B959038();
    v20();
    (*v11)(v1, v31, v5);
    sub_25B96DAE4();
    char v21 = sub_25B9ECF30();
    uint64_t v22 = v16;
    uint64_t v23 = *v12;
    uint64_t v24 = sub_25B96D9F4();
    v23(v24);
    ((void (*)(uint64_t, uint64_t))v23)(v2, v5);
    uint64_t v4 = v22;
  }
  while ((v21 & 1) == 0);
  sub_25B964F50();
}

void sub_25B969D88()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v36 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_25B96DB08();
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v29 - v8;
  uint64_t v35 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B96DA28();
  uint64_t v12 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v37 = v0 + 128;
  sub_25B960750();
  uint64_t v13 = *(void *)(*(void *)(v0 + 128) + 16);
  if (v13 < v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 != v13)
  {
    uint64_t v31 = v10 + 8;
    uint64_t v32 = v10 + 16;
    unsigned int v30 = *MEMORY[0x263F62100];
    uint64_t v29 = (void (**)(uint64_t, void, uint64_t))(v4 + 104);
    BOOL v14 = (void (**)(void))(v4 + 8);
    unint64_t v15 = v12;
    uint64_t v16 = v34;
    uint64_t v17 = v36;
    while ((uint64_t)v15 < v13)
    {
      if (v12 < 0) {
        goto LABEL_16;
      }
      if (v15 >= *(void *)(*(void *)v37 + 16)) {
        goto LABEL_17;
      }
      uint64_t v18 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
      sub_25B964F20(v18);
      sub_25B96D8F8();
      v19();
      sub_25B9ECDE0();
      sub_25B959038();
      v20();
      (*v29)(v16, v30, v17);
      char v21 = sub_25B9ECF30();
      uint64_t v22 = *v14;
      sub_25B96D920();
      v22();
      sub_25B96D920();
      v22();
      if (v21) {
        goto LABEL_14;
      }
      if (v13 == ++v15) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_10:
  if (qword_26A51B020 != -1) {
LABEL_20:
  }
    swift_once();
  uint64_t v23 = sub_25B9ECD70();
  sub_25B9559F0(v23, (uint64_t)qword_26A51C1A0);
  uint64_t v24 = sub_25B9ECD40();
  os_log_type_t v25 = sub_25B9ED240();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (_WORD *)sub_25B96DB28();
    sub_25B96DB1C(v26);
    sub_25B96DA84(&dword_25B94C000, v27, v28, "Invalid prompt configuration. Unable to find next user message.");
    sub_25B96D89C();
  }

  __break(1u);
LABEL_14:
  sub_25B964F50();
}

void sub_25B96A074()
{
  sub_25B964F38();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B96DA40();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388](v10);
  sub_25B9ECE10();
  sub_25B950790();
  MEMORY[0x270FA5388](v11);
  sub_25B96DA28();
  uint64_t v32 = v0 + 128;
  sub_25B960750();
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(void *)(*(void *)(v0 + 128) + 16) <= v2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v12 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  sub_25B964F20(v12);
  unint64_t v28 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v31 = *(void *)(v14 + 72);
  sub_25B96D944();
  v15();
  sub_25B9ECDE0();
  uint64_t v16 = sub_25B96DAF0();
  v17(v16);
  unsigned int v30 = *MEMORY[0x263F62100];
  uint64_t v29 = *(void (**)(uint64_t))(v5 + 104);
  v29(v9);
  char v18 = sub_25B9ECF30();
  uint64_t v19 = *(void (**)(void))(v5 + 8);
  sub_25B96D920();
  v19();
  sub_25B96D9F4();
  sub_25B96D920();
  v19();
  if ((v18 & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v20 = *(void *)(*(void *)v32 + 16);
  if (v20 > v2)
  {
    unint64_t v21 = v2 + 1;
    if (v2 + 1 == v20)
    {
LABEL_11:
      sub_25B964F50();
      return;
    }
    unint64_t v22 = v28 + v31 * v21;
    unint64_t v23 = v21;
    while ((uint64_t)v23 < (uint64_t)v20)
    {
      if (v23 >= *(void *)(*(void *)v32 + 16)) {
        goto LABEL_13;
      }
      sub_25B96D944();
      v24();
      sub_25B9ECDE0();
      sub_25B96DAF0();
      sub_25B96DAFC();
      v25();
      ((void (*)(uint64_t, void, uint64_t))v29)(v9, v30, v3);
      char v26 = sub_25B9ECF30();
      ((void (*)(uint64_t, uint64_t))v19)(v9, v3);
      uint64_t v27 = sub_25B96D9F4();
      ((void (*)(uint64_t))v19)(v27);
      if ((v26 & 1) == 0)
      {
        ++v23;
        v22 += v31;
        if (v20 != v23) {
          continue;
        }
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_25B96A38C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B9ECBC0();
  sub_25B95097C();
  sub_25B959038();
  v1();
  swift_bridgeObjectRelease();
  sub_25B96D218(v0 + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_configuration, (void (*)(void))type metadata accessor for SessionConfiguration);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_25B96A44C()
{
  sub_25B96A38C();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_25B96A478()
{
  return type metadata accessor for GenerativeExperiencesSessionClientData(0);
}

uint64_t type metadata accessor for GenerativeExperiencesSessionClientData(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51B6C0);
}

uint64_t sub_25B96A4A0()
{
  uint64_t result = sub_25B9ECBC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SessionConfiguration();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t *sub_25B96A5A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B9ECE10();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25B9EC520();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_25B94E854(&qword_26A51B6F8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    unint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v16[3];
    v15[2] = v16[2];
    v15[3] = v18;
    v15[4] = v16[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25B96A748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25B9EC520();
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B96A830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25B9EC520();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_25B94E854(&qword_26A51B6F8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v13[4] = v14[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25B96A984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25B9EC520();
  int v11 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_25B94E854(&qword_26A51B6F8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *(void *)(a2 + v15);
  v16[1] = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[3] = v17[3];
  v16[4] = v17[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B96AB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25B9EC520();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_25B94E854(&qword_26A51B6F8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_25B96ACC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25B9EC520();
  int v11 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_25B94E854(&qword_26A51B6F8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  swift_bridgeObjectRelease();
  uint64_t v19 = v17[4];
  v16[3] = v17[3];
  v16[4] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25B96AEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B96AEB8);
}

uint64_t sub_25B96AEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25B9ECE10();
  sub_25B950858();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v9, a2, v8);
  }
  sub_25B94E854(&qword_26A51B6F8);
  sub_25B950858();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_25B96AF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B96AF88);
}

void sub_25B96AF88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25B9ECE10();
  sub_25B950858();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_25B94E854(&qword_26A51B6F8);
    sub_25B950858();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51B700);
}

void sub_25B96B060()
{
  sub_25B9ECE10();
  if (v0 <= 0x3F)
  {
    sub_25B96B130();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25B96B130()
{
  if (!qword_26A51B710)
  {
    sub_25B9EC520();
    unint64_t v0 = sub_25B9ED2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A51B710);
    }
  }
}

uint64_t sub_25B96B188()
{
  return v0;
}

uint64_t sub_25B96B194()
{
  return sub_25B96B188();
}

uint64_t sub_25B96B1B0()
{
  return sub_25B96B1F8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B98FB08);
}

uint64_t sub_25B96B1C8()
{
  return sub_25B96B1F8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B98FE98);
}

uint64_t sub_25B96B1E0()
{
  return sub_25B96B1F8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25B98FEAC);
}

uint64_t sub_25B96B1F8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_25B96B254(uint64_t a1)
{
  return sub_25B96B29C(a1, (uint64_t (*)(BOOL))sub_25B98FB08);
}

uint64_t sub_25B96B26C(uint64_t a1)
{
  return sub_25B96B29C(a1, (uint64_t (*)(BOOL))sub_25B98FE98);
}

uint64_t sub_25B96B284(uint64_t a1)
{
  return sub_25B96B29C(a1, (uint64_t (*)(BOOL))sub_25B98FEAC);
}

uint64_t sub_25B96B29C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

void sub_25B96B2E4()
{
  sub_25B964F38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_25B9ECB10();
  sub_25B950790();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25B959398();
  uint64_t v11 = *v0;
  sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25B9ECF90();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v27 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v24 = v0;
    uint64_t v25 = v6;
    uint64_t v26 = ~v13;
    uint64_t v23 = v9;
    uint64_t v17 = *(void (**)(void))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    while (1)
    {
      uint64_t v18 = v11;
      uint64_t v19 = v15;
      sub_25B96D8C8();
      v15();
      sub_25B96C424(&qword_26A51B770, MEMORY[0x263F415B0]);
      char v20 = sub_25B9ECFB0();
      unint64_t v21 = *(void (**)(void))(v16 - 8);
      sub_25B96DAD8();
      v21();
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v26;
      uint64_t v11 = v18;
      uint64_t v15 = v19;
      if (((*(void *)(v27 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v24;
        uint64_t v6 = v25;
        uint64_t v9 = v23;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_25B96DAD8();
    v21();
    sub_25B96D8C8();
    v19();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(void))(v9 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v1, v4, v7);
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_25B96B9A8(v1, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v4, v7);
  }
  sub_25B964F50();
}

uint64_t sub_25B96B5B0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25B9ECB10();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_25B94E854(&qword_26A51B778);
  uint64_t v5 = sub_25B9ED370();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
      uint64_t result = sub_25B9ECF90();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_25B978D00(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_25B96B9A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_25B9ECB10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_25B96B5B0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_25B96BC48();
      goto LABEL_12;
    }
    sub_25B96BEF8();
  }
  uint64_t v12 = *v3;
  sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
  uint64_t v13 = sub_25B9ECF90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_25B96C424(&qword_26A51B770, MEMORY[0x263F415B0]);
      char v21 = sub_25B9ECFB0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25B9ED6D0();
  __break(1u);
  return result;
}

void *sub_25B96BC48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B9ECB10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94E854(&qword_26A51B778);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25B9ED360();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v25, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v15 = -1;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  unint64_t v16 = v15 & v14;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    unint64_t v22 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v22, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v22, v5, v2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v25 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v25 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v25 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_25B96BEF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B9ECB10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_25B94E854(&qword_26A51B778);
  uint64_t v7 = sub_25B9ED370();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
    uint64_t result = sub_25B9ECF90();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25B96C2A4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v7 = v4 + v2;
    }
    else {
      uint64_t v7 = v4;
    }
    uint64_t result = sub_25B98FB50(result, v7, 1, v3);
    uint64_t v3 = result;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = sub_25B9ECE10();
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t result = v10 - 8;
  uint64_t v11 = v12;
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = sub_25B990C3C(v6 + v13, v2, v3 + v13 + *(void *)(v11 + 72) * v8);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFADD__(v14, v2);
  uint64_t v16 = v14 + v2;
  if (!v15)
  {
    *(void *)(v3 + 16) = v16;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25B96C3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51B758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B96C424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B96C46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25B9ECB10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
  swift_bridgeObjectRetain();
  uint64_t v30 = a1;
  uint64_t v10 = sub_25B9ECF90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v29 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = a2;
    uint64_t v28 = ~v11;
    uint64_t v25 = v6;
    BOOL v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    unint64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_25B96C424(&qword_26A51B770, MEMORY[0x263F415B0]);
      char v17 = sub_25B9ECFB0();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v28;
      if (((*(void *)(v29 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        a2 = v27;
        return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    int64_t v19 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v31 = *v19;
    *int64_t v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_25B96BC48();
      uint64_t v21 = v31;
    }
    unint64_t v22 = *(void *)(v21 + 48) + v16 * v12;
    a2 = v27;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v27, v22, v5);
    sub_25B96C748(v12);
    *int64_t v19 = v31;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a2, v18, 1, v5);
}

uint64_t sub_25B96C748(int64_t a1)
{
  uint64_t v3 = sub_25B9ECB10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v34 = v1;
    uint64_t v12 = ~v10;
    swift_retain();
    uint64_t v13 = sub_25B9ED300();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v36 = (v13 + 1) & v12;
      BOOL v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v14 = v4 + 16;
      uint64_t v35 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v37 = v14;
      uint64_t v38 = v16;
      char v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        uint64_t v18 = v9;
        int64_t v19 = v38 * v11;
        v35(v7, *(void *)(v8 + 48) + v38 * v11, v3);
        sub_25B96C424((unint64_t *)&qword_26A51B6A0, MEMORY[0x263F415B0]);
        uint64_t v20 = sub_25B9ECF90();
        (*v17)(v7, v3);
        unint64_t v21 = v20 & v12;
        if (a1 >= (uint64_t)v36)
        {
          if (v21 < v36 || a1 < (uint64_t)v21)
          {
LABEL_20:
            uint64_t v9 = v18;
            goto LABEL_24;
          }
        }
        else if (v21 < v36 && a1 < (uint64_t)v21)
        {
          goto LABEL_20;
        }
        uint64_t v23 = *(void *)(v8 + 48);
        int64_t v24 = v38 * a1;
        unint64_t v25 = v23 + v38 * a1;
        unint64_t v26 = v23 + v19 + v38;
        BOOL v27 = v38 * a1 < v19 || v25 >= v26;
        uint64_t v9 = v18;
        if (v27)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          a1 = v11;
          goto LABEL_24;
        }
        a1 = v11;
        if (v24 != v19)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v34;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v29 = *v1;
  uint64_t v30 = *(void *)(*v1 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
  return result;
}

uint64_t sub_25B96CA38(uint64_t a1, uint64_t *a2)
{
  sub_25B94E854(a2);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

size_t sub_25B96CA88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_25B94E854(&qword_26A51B780);
  uint64_t v3 = *(void *)(sub_25B9ECB10() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_25B96CCD4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_25B96D46C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25B96CBDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_25B94E854(&qword_26A51B798);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  uint64_t v5 = sub_25B96D26C((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_25B96D46C();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_25B96CCC0(uint64_t a1)
{
  return sub_25B98FD78(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_25B96CCD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25B9ECB10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  unint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B96D020()
{
  uint64_t v1 = sub_25B9ECB10();
  sub_25B950790();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_25B96D0CC()
{
  sub_25B9ECB10();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B960510;
  uint64_t v2 = sub_25B96D904();
  return sub_25B967210(v2, v3, v4, v5, v6);
}

uint64_t sub_25B96D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeExperiencesSessionClientData.Conversation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B96D218(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

uint64_t sub_25B96D26C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25B96D46C()
{
  return swift_release();
}

uint64_t sub_25B96D474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B94E854(a3);
  sub_25B95097C();
  sub_25B96D8F8();
  v4();
  return a2;
}

uint64_t sub_25B96D4CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25B95097C();
  sub_25B96D8F8();
  v4();
  return a2;
}

uint64_t sub_25B96D528()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B96D570()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B95F890;
  uint64_t v2 = sub_25B96D904();
  return sub_25B9673A0(v2, v3, v4, v5, v6);
}

uint64_t destroy for GenerativeExperiencesSessionClientData.Template()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GenerativeExperiencesSessionClientData.Template(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GenerativeExperiencesSessionClientData.Template(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GenerativeExperiencesSessionClientData.Template(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GenerativeExperiencesSessionClientData.Template(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeExperiencesSessionClientData.Template(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativeExperiencesSessionClientData.Template(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionClientData.Template()
{
  return &type metadata for GenerativeExperiencesSessionClientData.Template;
}

uint64_t sub_25B96D844()
{
  return swift_task_alloc();
}

void sub_25B96D89C()
{
  JUMPOUT(0x26116D280);
}

uint64_t sub_25B96D8B8()
{
  return v0;
}

BOOL sub_25B96D8E4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_25B96D904()
{
  return v0;
}

uint64_t sub_25B96D92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, a4);
}

uint64_t sub_25B96D96C()
{
  return swift_task_dealloc();
}

uint64_t sub_25B96D9A8()
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v0, 1, v1);
}

uint64_t sub_25B96D9C4()
{
  return swift_beginAccess();
}

uint64_t sub_25B96D9F4()
{
  return v0;
}

uint64_t sub_25B96DA00()
{
  return v0 + 8;
}

uint64_t sub_25B96DA50()
{
  return 0;
}

void sub_25B96DA84(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_25B96DAA4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_25B96DAC4()
{
  return v0;
}

uint64_t sub_25B96DAE4()
{
  return v0;
}

uint64_t sub_25B96DAF0()
{
  return v0;
}

_WORD *sub_25B96DB1C(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_25B96DB28()
{
  return swift_slowAlloc();
}

uint64_t sub_25B96DB40(uint64_t a1)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51B758);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v31 = v1;
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_25B992574();
  uint64_t v6 = v32;
  uint64_t v7 = sub_25B979BDC(a1);
  uint64_t v9 = v8;
  uint64_t v24 = sub_25B9ECF20();
  if (v7 < 0 || v7 >= 1 << *(unsigned char *)(a1 + 32))
  {
LABEL_18:
    __break(1u);
  }
  else
  {
    uint64_t v10 = a1 + 64;
    uint64_t v22 = a1 + 64;
    uint64_t v23 = a1;
    while ((*(void *)(v10 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) != 0)
    {
      if (v9 != *(_DWORD *)(a1 + 36)) {
        goto LABEL_20;
      }
      uint64_t v27 = v5;
      uint64_t v28 = v9;
      uint64_t v11 = *(void *)(a1 + 56);
      int64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
      uint64_t v13 = v12[1];
      uint64_t v29 = *v12;
      int64_t v14 = (uint64_t *)(v11 + 16 * v7);
      uint64_t v15 = *v14;
      unint64_t v16 = v14[1];
      swift_bridgeObjectRetain();
      sub_25B96E1A0(v15, v16);
      swift_bridgeObjectRetain();
      sub_25B96E1A0(v15, v16);
      swift_bridgeObjectRelease();
      sub_25B955A74(v15, v16);
      int64_t v17 = v30;
      swift_bridgeObjectRetain();
      sub_25B96E1A0(v15, v16);
      sub_25B955A74(v15, v16);
      void *v17 = v29;
      v17[1] = v13;
      sub_25B96E1F8(&qword_26A51BAA8, MEMORY[0x263F620C0]);
      uint64_t v18 = v31;
      sub_25B9EC3E0();
      uint64_t v31 = v18;
      if (v18) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      sub_25B955A74(v15, v16);
      uint64_t v32 = v6;
      unint64_t v19 = *(void *)(v6 + 16);
      if (v19 >= *(void *)(v6 + 24) >> 1)
      {
        sub_25B992574();
        uint64_t v6 = v32;
      }
      *(void *)(v6 + 16) = v19 + 1;
      sub_25B979D1C((uint64_t)v30, v6+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v19, &qword_26A51B758);
      uint64_t v10 = v22;
      a1 = v23;
      if (v7 >= -(-1 << *(unsigned char *)(v23 + 32))) {
        goto LABEL_21;
      }
      if ((*(void *)(v22 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
        goto LABEL_22;
      }
      if (v28 != *(_DWORD *)(v23 + 36)) {
        goto LABEL_23;
      }
      uint64_t v20 = sub_25B9ED310();
      uint64_t v5 = v27 - 1;
      if (v27 == 1) {
        return v6;
      }
      uint64_t v7 = v20;
      if ((v20 & 0x8000000000000000) == 0)
      {
        uint64_t v9 = *(unsigned int *)(a1 + 36);
        if (v20 < 1 << *(unsigned char *)(a1 + 32)) {
          continue;
        }
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_25B96DEB8(uint64_t a1)
{
  return sub_25B96DED8(a1, (uint64_t *)&unk_26A51BA90, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25B9793F8);
}

uint64_t sub_25B96DED8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_25B94E854(a2);
    uint64_t v4 = sub_25B9ED4C0();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE80];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_25B96DFA0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage26GenerativeErrorXPCEnvelope__error);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage26GenerativeErrorXPCEnvelope__error + 8));
  return v1;
}

uint64_t GenerativeErrorXPCEnvelope.__allocating_init(sealing:)()
{
  return GenerativeErrorXPCEnvelope.init(sealing:)();
}

uint64_t GenerativeErrorXPCEnvelope.init(sealing:)()
{
  sub_25B97ACB4();
  sub_25B97B1E8();
  sub_25B9ECB90();
  sub_25B96E1F8(&qword_26A51B7D0, MEMORY[0x263F40B88]);
  id v3 = v0;
  uint64_t v4 = sub_25B97AD84();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B19C(v4, v5, OBJC_IVAR____TtC4Sage26GenerativeErrorXPCEnvelope__error);
    v9.receiver = v2;
    v9.super_class = v1;
    id v6 = objc_msgSendSuper2(&v9, sel_init);
    sub_25B97AD18();
    sub_25B959038();
    v7();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t GenerativeErrorXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  uint64_t v0 = sub_25B9ECB90();
  sub_25B97AE24(OBJC_IVAR____TtC4Sage26GenerativeErrorXPCEnvelope__error);
  sub_25B96E1F8(&qword_26A51B7E0, MEMORY[0x263F40B88]);
  sub_25B97ACEC();
  uint64_t result = sub_25B97B234();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_25B96E1A0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_25B96E1F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static GenerativeErrorXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C0;
}

uint64_t static GenerativeErrorXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C0 = a1;
  return result;
}

uint64_t (*static GenerativeErrorXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id GenerativeErrorXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return GenerativeErrorXPCEnvelope.init(coder:)(v0, v1, v2);
}

id GenerativeErrorXPCEnvelope.init(coder:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B97B054(a1, 0x726F7272655FLL, a3, &OBJC_IVAR____TtC4Sage26GenerativeErrorXPCEnvelope__error);
}

Swift::Void __swiftcall GenerativeErrorXPCEnvelope.encode(with:)(NSCoder with)
{
}

void GenerativeErrorXPCEnvelope.init()()
{
}

uint64_t sub_25B96E474()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice + 8));
  return v1;
}

void sub_25B96E4C0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v10 = a1;
  sub_25B9EC2A0();

  uint64_t v7 = sub_25B97B128();
  sub_25B974628(v7, v8, a4, v9);
}

void ToolChoiceXPCEnvelope.__allocating_init(sealing:)()
{
}

void ToolChoiceXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B97ACB4();
  sub_25B97B0EC(v1);
  sub_25B9ECBC0();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B97AD24();
  sub_25B9EC5B0();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25B97AC5C();
  v5(v4);
  id v6 = v0;
  sub_25B97AF74();
  sub_25B9EC5A0();
  sub_25B96E1F8(&qword_26A51B7F0, MEMORY[0x263F7F940]);
  sub_25B97ADA8();
  uint64_t v7 = sub_25B97AC44();
  v8(v7);
  if (v0)
  {
    sub_25B97AC08();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B184(OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
    sub_25B97B178();
    objc_msgSendSuper2(&v11, sel_init);
    uint64_t v9 = sub_25B97ACD0();
    v10(v9);
    sub_25B97B0F8();
    sub_25B964F50();
  }
}

uint64_t ToolChoiceXPCEnvelope.unseal()()
{
  sub_25B97B084();
  sub_25B9EC5B0();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B97AF08(OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
  sub_25B96E1F8(&qword_26A51B800, MEMORY[0x263F7F940]);
  sub_25B97AD58();
  sub_25B955A74(v0, v2);
  if (v1)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B068();
    sub_25B9EC590();
    uint64_t v4 = sub_25B97AE44();
    return v5(v4);
  }
  return result;
}

uint64_t static ToolChoiceXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C1;
}

uint64_t static ToolChoiceXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C1 = a1;
  return result;
}

uint64_t (*static ToolChoiceXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id ToolChoiceXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return ToolChoiceXPCEnvelope.init(coder:)(v0);
}

id ToolChoiceXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B97AE1C(a1, 0x6F68436C6F6F745FLL, 6644585, &OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
}

id sub_25B96E904(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = v4;
  uint64_t v9 = (void *)sub_25B9ECFC0();
  id v10 = objc_msgSend(a1, sel_decodeObjectForKey_, v9);

  if (v10)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_25B979D1C((uint64_t)v14, (uint64_t)v15, &qword_26A51B7E8);
  if (!v16)
  {

    sub_25B96CA38((uint64_t)v15, &qword_26A51B7E8);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  *(objc_super *)&v8[*a4] = v13[1];

  v13[0].receiver = v8;
  v13[0].super_class = ObjectType;
  id v11 = [(objc_super *)v13 init];

  return v11;
}

Swift::Void __swiftcall ToolChoiceXPCEnvelope.encode(with:)(NSCoder with)
{
}

void ToolChoiceXPCEnvelope.init()()
{
}

uint64_t sub_25B96EB7C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool + 8));
  return v1;
}

void ToolTypeXPCEnvelope.__allocating_init(sealing:)()
{
}

void ToolTypeXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v3 = sub_25B97ACB4();
  sub_25B97B0EC(v3);
  uint64_t v4 = sub_25B9ECD20();
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B97B024();
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B9EC6B0();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v0, v4);
  id v11 = v1;
  sub_25B9EC410();
  sub_25B9EC6A0();
  sub_25B96E1F8(&qword_26A51B808, MEMORY[0x263F7F9B8]);
  uint64_t v12 = sub_25B97ADA8();
  if (v1)
  {
    uint64_t v21 = sub_25B97AC44();
    v22(v21);
    sub_25B97AC08();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v16 = sub_25B97AC44();
    v17(v16);
    uint64_t v18 = (uint64_t *)&v11[OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool];
    *uint64_t v18 = v14;
    v18[1] = v15;

    v24.receiver = v11;
    v24.super_class = v23;
    objc_msgSendSuper2(&v24, sel_init);
    uint64_t v19 = sub_25B97ACD0();
    v20(v19);
    sub_25B97B0F8();
    sub_25B964F50();
  }
}

void ToolTypeXPCEnvelope.unseal()()
{
  sub_25B964F38();
  sub_25B97AE74();
  sub_25B9EC6B0();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25B97B024();
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  uint64_t v7 = v0 + OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool);
  unint64_t v9 = *(void *)(v7 + 8);
  sub_25B96E1A0(v8, v9);
  sub_25B96E1F8(&qword_26A51B818, MEMORY[0x263F7F9B8]);
  sub_25B9EC3E0();
  sub_25B955A74(v8, v9);
  sub_25B9EC690();
  sub_25B97B074();
  v10();
  sub_25B9EC400();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  sub_25B964F50();
}

uint64_t static ToolTypeXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C2;
}

uint64_t static ToolTypeXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C2 = a1;
  return result;
}

uint64_t (*static ToolTypeXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id ToolTypeXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return ToolTypeXPCEnvelope.init(coder:)(v0);
}

id ToolTypeXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B96E904(a1, 0x6C6F6F745FLL, 0xE500000000000000, &OBJC_IVAR____TtC4Sage19ToolTypeXPCEnvelope__tool);
}

Swift::Void __swiftcall ToolTypeXPCEnvelope.encode(with:)(NSCoder with)
{
}

void ToolTypeXPCEnvelope.init()()
{
}

uint64_t sub_25B96F190()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema);
  sub_25B979C5C(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8));
  return v1;
}

void SchemaXPCEnvelope.__allocating_init(sealing:)()
{
}

void SchemaXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_25B9ECBD0();
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  sub_25B97B0B0();
  uint64_t v5 = sub_25B94E854(&qword_26A51B820);
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25B97AE00();
  uint64_t v7 = sub_25B9ECC70();
  sub_25B950790();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25B97AE5C();
  id v11 = (uint64_t *)&v0[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema];
  *(_OWORD *)&v0[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema] = xmmword_25B9F5320;
  uint64_t v23 = v3;
  sub_25B979CC8(v3, v1, &qword_26A51B820);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v7) == 1)
  {
    uint64_t v12 = v0;
    sub_25B96CA38(v1, &qword_26A51B820);
    uint64_t v13 = 0;
    unint64_t v14 = 0xF000000000000000;
  }
  else
  {
    uint64_t v15 = sub_25B97B128();
    v16(v15);
    int64_t v17 = v0;
    sub_25B9ECC50();
    sub_25B96E1F8(&qword_26A51B830, MEMORY[0x263F40C58]);
    uint64_t v13 = sub_25B9EC3F0();
    unint64_t v14 = v18;
    sub_25B959038();
    v19();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v0, v7);
  }
  uint64_t v20 = *v11;
  unint64_t v21 = v11[1];
  *id v11 = v13;
  v11[1] = v14;
  sub_25B958F08(v20, v21);

  v24.receiver = v0;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, sel_init);
  sub_25B96CA38(v23, &qword_26A51B820);
  sub_25B97B134();
  sub_25B964F50();
}

uint64_t SchemaXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  sub_25B9ECBD0();
  sub_25B95097C();
  MEMORY[0x270FA5388](v2);
  sub_25B959398();
  if (*(void *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8) >> 60 == 15)
  {
    uint64_t v3 = sub_25B9ECC70();
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 1, 1, v3);
  }
  else
  {
    uint64_t v5 = sub_25B96DAE4();
    sub_25B96E1A0(v5, v6);
    sub_25B96E1F8(&qword_26A51B838, MEMORY[0x263F40C58]);
    sub_25B9EC3E0();
    sub_25B9ECC60();
    uint64_t v7 = sub_25B96DAE4();
    sub_25B958F08(v7, v8);
    uint64_t v9 = sub_25B9ECC70();
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 0, 1, v9);
  }
}

uint64_t static SchemaXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C3;
}

uint64_t static SchemaXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C3 = a1;
  return result;
}

uint64_t (*static SchemaXPCEnvelope.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id SchemaXPCEnvelope.__allocating_init(coder:)()
{
  return SchemaXPCEnvelope.init(coder:)();
}

id SchemaXPCEnvelope.init(coder:)()
{
  uint64_t v2 = (objc_class *)sub_25B97ACB4();
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema];
  *(_OWORD *)&v1[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema] = xmmword_25B9F5320;
  uint64_t v4 = v1;
  uint64_t v5 = (void *)sub_25B97B0C8();
  id v6 = objc_msgSend(v0, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_25B979D1C((uint64_t)v14, (uint64_t)v15, &qword_26A51B7E8);
  if (!v16)
  {
    sub_25B96CA38((uint64_t)v15, &qword_26A51B7E8);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    long long v7 = xmmword_25B9F5320;
    goto LABEL_9;
  }
  long long v7 = v12;
LABEL_9:
  uint64_t v8 = *v3;
  unint64_t v9 = v3[1];
  *(_OWORD *)uint64_t v3 = v7;
  sub_25B958F08(v8, v9);

  v13.receiver = v4;
  v13.super_class = v2;
  id v10 = objc_msgSendSuper2(&v13, sel_init);

  return v10;
}

Swift::Void __swiftcall SchemaXPCEnvelope.encode(with:)(NSCoder with)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8) >> 60 == 15)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = sub_25B97B05C();
    sub_25B96E1A0(v4, v5);
    sub_25B97B05C();
    uint64_t v3 = sub_25B9EC280();
    uint64_t v6 = sub_25B97B05C();
    sub_25B958F08(v6, v7);
  }
  sub_25B97B0C8();
  sub_25B97B104();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3);
  swift_unknownObjectRelease();
}

id SchemaXPCEnvelope.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SchemaXPCEnvelope.init()()
{
}

uint64_t sub_25B96FAA8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage40StringRenderedPromptSanitizerXPCEnvelope__sanitizer);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage40StringRenderedPromptSanitizerXPCEnvelope__sanitizer + 8));
  return v1;
}

uint64_t StringRenderedPromptSanitizerXPCEnvelope.__allocating_init(sealing:)()
{
  return StringRenderedPromptSanitizerXPCEnvelope.init(sealing:)();
}

uint64_t StringRenderedPromptSanitizerXPCEnvelope.init(sealing:)()
{
  sub_25B97ACB4();
  sub_25B97B1E8();
  sub_25B9EC9A0();
  sub_25B96E1F8(&qword_26A51B840, MEMORY[0x263F41460]);
  id v3 = v0;
  uint64_t v4 = sub_25B97AD84();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B19C(v4, v5, OBJC_IVAR____TtC4Sage40StringRenderedPromptSanitizerXPCEnvelope__sanitizer);
    v9.receiver = v2;
    v9.super_class = v1;
    id v6 = objc_msgSendSuper2(&v9, sel_init);
    sub_25B97AD18();
    sub_25B959038();
    v7();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t StringRenderedPromptSanitizerXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  uint64_t v0 = sub_25B9EC9A0();
  sub_25B97AE24(OBJC_IVAR____TtC4Sage40StringRenderedPromptSanitizerXPCEnvelope__sanitizer);
  sub_25B96E1F8(&qword_26A51B850, MEMORY[0x263F41460]);
  sub_25B97ACEC();
  uint64_t result = sub_25B97B234();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t static StringRenderedPromptSanitizerXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C4;
}

uint64_t static StringRenderedPromptSanitizerXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C4 = a1;
  return result;
}

uint64_t (*static StringRenderedPromptSanitizerXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id StringRenderedPromptSanitizerXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return StringRenderedPromptSanitizerXPCEnvelope.init(coder:)(v0, v1, v2);
}

id StringRenderedPromptSanitizerXPCEnvelope.init(coder:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B97ADE4(a1, a2, a3, &OBJC_IVAR____TtC4Sage40StringRenderedPromptSanitizerXPCEnvelope__sanitizer);
}

Swift::Void __swiftcall StringRenderedPromptSanitizerXPCEnvelope.encode(with:)(NSCoder with)
{
}

void StringRenderedPromptSanitizerXPCEnvelope.init()()
{
}

uint64_t sub_25B96FEC4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage34StringResponseSanitizerXPCEnvelope__sanitizer);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage34StringResponseSanitizerXPCEnvelope__sanitizer + 8));
  return v1;
}

uint64_t StringResponseSanitizerXPCEnvelope.__allocating_init(sealing:)()
{
  return StringResponseSanitizerXPCEnvelope.init(sealing:)();
}

uint64_t StringResponseSanitizerXPCEnvelope.init(sealing:)()
{
  sub_25B97ACB4();
  sub_25B97B1E8();
  sub_25B9EC940();
  sub_25B96E1F8(&qword_26A51B858, MEMORY[0x263F41418]);
  id v3 = v0;
  uint64_t v4 = sub_25B97AD84();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B19C(v4, v5, OBJC_IVAR____TtC4Sage34StringResponseSanitizerXPCEnvelope__sanitizer);
    v9.receiver = v2;
    v9.super_class = v1;
    id v6 = objc_msgSendSuper2(&v9, sel_init);
    sub_25B97AD18();
    sub_25B959038();
    v7();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t StringResponseSanitizerXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  uint64_t v0 = sub_25B9EC940();
  sub_25B97AE24(OBJC_IVAR____TtC4Sage34StringResponseSanitizerXPCEnvelope__sanitizer);
  sub_25B96E1F8(&qword_26A51B868, MEMORY[0x263F41418]);
  sub_25B97ACEC();
  uint64_t result = sub_25B97B234();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t static StringResponseSanitizerXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C5;
}

uint64_t static StringResponseSanitizerXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C5 = a1;
  return result;
}

uint64_t (*static StringResponseSanitizerXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id StringResponseSanitizerXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return StringResponseSanitizerXPCEnvelope.init(coder:)(v0, v1, v2);
}

id StringResponseSanitizerXPCEnvelope.init(coder:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B97ADE4(a1, a2, a3, &OBJC_IVAR____TtC4Sage34StringResponseSanitizerXPCEnvelope__sanitizer);
}

Swift::Void __swiftcall StringResponseSanitizerXPCEnvelope.encode(with:)(NSCoder with)
{
}

void StringResponseSanitizerXPCEnvelope.init()()
{
}

uint64_t sub_25B9702E0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document + 8));
  return v1;
}

uint64_t DocumentIdentifierXPCEnvelope.__allocating_init(sealing:)()
{
  return DocumentIdentifierXPCEnvelope.init(sealing:)();
}

uint64_t DocumentIdentifierXPCEnvelope.init(sealing:)()
{
  sub_25B97ACB4();
  sub_25B97B1E8();
  sub_25B9ECB10();
  sub_25B96E1F8(&qword_26A51B870, MEMORY[0x263F415B0]);
  id v3 = v0;
  uint64_t v4 = sub_25B97AD84();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B19C(v4, v5, OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
    v9.receiver = v2;
    v9.super_class = v1;
    id v6 = objc_msgSendSuper2(&v9, sel_init);
    sub_25B97AD18();
    sub_25B959038();
    v7();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t DocumentIdentifierXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  uint64_t v0 = sub_25B9ECB10();
  sub_25B97AE24(OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
  sub_25B96E1F8(&qword_26A51B880, MEMORY[0x263F415B0]);
  sub_25B97ACEC();
  uint64_t result = sub_25B97B234();
  if (v0)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t static DocumentIdentifierXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C6;
}

uint64_t static DocumentIdentifierXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C6 = a1;
  return result;
}

uint64_t (*static DocumentIdentifierXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id DocumentIdentifierXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return DocumentIdentifierXPCEnvelope.init(coder:)(v0);
}

id DocumentIdentifierXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B96E904(a1, 0x6E656D75636F645FLL, 0xE900000000000074, &OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
}

Swift::Void __swiftcall DocumentIdentifierXPCEnvelope.encode(with:)(NSCoder with)
{
}

void DocumentIdentifierXPCEnvelope.init()()
{
}

uint64_t sub_25B97072C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration + 8));
  return v1;
}

void DocumentRegistrationXPCResponse.__allocating_init(sealing:)()
{
}

void DocumentRegistrationXPCResponse.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B97ACB4();
  sub_25B97B0EC(v1);
  sub_25B9ECB00();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B97AD24();
  sub_25B9EC740();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25B97AC5C();
  v5(v4);
  id v6 = v0;
  sub_25B97AF74();
  sub_25B9EC730();
  sub_25B96E1F8(&qword_26A51B888, MEMORY[0x263F7FA08]);
  sub_25B97ADA8();
  uint64_t v7 = sub_25B97AC44();
  v8(v7);
  if (v0)
  {
    sub_25B97AC08();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B184(OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration);
    sub_25B97B178();
    objc_msgSendSuper2(&v11, sel_init);
    uint64_t v9 = sub_25B97ACD0();
    v10(v9);
    sub_25B97B0F8();
    sub_25B964F50();
  }
}

uint64_t DocumentRegistrationXPCResponse.unseal()()
{
  sub_25B97B084();
  sub_25B9EC740();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration + 8);
  sub_25B96E1F8(&qword_26A51B898, MEMORY[0x263F7FA08]);
  sub_25B97AEDC();
  if (v2)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B068();
    sub_25B9EC720();
    uint64_t v3 = sub_25B97B140();
    return v4(v3);
  }
  return result;
}

uint64_t static DocumentRegistrationXPCResponse.supportsSecureCoding.getter()
{
  return byte_26A51B7C7;
}

uint64_t static DocumentRegistrationXPCResponse.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C7 = a1;
  return result;
}

uint64_t (*static DocumentRegistrationXPCResponse.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id DocumentRegistrationXPCResponse.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return DocumentRegistrationXPCResponse.init(coder:)(v0);
}

id DocumentRegistrationXPCResponse.init(coder:)(void *a1)
{
  return sub_25B96E904(a1, 0x727473696765725FLL, 0xED00006E6F697461, &OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration);
}

Swift::Void __swiftcall DocumentRegistrationXPCResponse.encode(with:)(NSCoder with)
{
}

void DocumentRegistrationXPCResponse.init()()
{
}

uint64_t sub_25B970C30()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
  sub_25B979C5C(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages + 8));
  return v1;
}

void sub_25B970C70()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  id v6 = &qword_26A51BA80;
  uint64_t v7 = sub_25B94E854(&qword_26A51BA80);
  uint64_t v8 = sub_25B96068C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25B97AE00();
  uint64_t v9 = sub_25B9ECE30();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  sub_25B97AE80();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v9) == 1)
  {
    objc_super v11 = v0;
    sub_25B96CA38(v1, &qword_26A51BA80);
    id v6 = 0;
    unint64_t v2 = 0xF000000000000000;
LABEL_5:
    unint64_t v18 = (uint64_t **)&v0[OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages];
    *unint64_t v18 = v6;
    v18[1] = (uint64_t *)v2;

    v19.receiver = v0;
    v19.super_class = ObjectType;
    objc_msgSendSuper2(&v19, sel_init);
    sub_25B96CA38(v4, &qword_26A51BA80);
    sub_25B97B134();
    sub_25B964F50();
    return;
  }
  uint64_t v12 = sub_25B97AF28();
  v13(v12);
  uint64_t v14 = sub_25B96E1F8(&qword_26A51BA88, MEMORY[0x263F61FA8]);
  uint64_t v15 = v0;
  sub_25B97B1C8();
  if (!v14)
  {
    uint64_t v16 = sub_25B97AFBC();
    v17(v16);
    goto LABEL_5;
  }
  sub_25B97AC08();
  swift_unexpectedError();
  __break(1u);
}

uint64_t ChatMessagesXPCEnvelope.unseal()()
{
  uint64_t v2 = v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
  unint64_t v4 = *(void *)(v2 + 8);
  sub_25B9ECE30();
  if (v4 >> 60 == 15)
  {
    uint64_t v5 = sub_25B97B1F4();
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v5, v6, v7, v8);
  }
  else
  {
    sub_25B96E1A0(v3, v4);
    sub_25B96E1F8(&qword_26A51B8A8, MEMORY[0x263F61FA8]);
    sub_25B97AEB0();
    if (v1)
    {
      sub_25B97AC08();
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      uint64_t v10 = sub_25B97B208();
      return sub_25B958F08(v10, v11);
    }
  }
  return result;
}

uint64_t static ChatMessagesXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C8;
}

uint64_t static ChatMessagesXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C8 = a1;
  return result;
}

uint64_t (*static ChatMessagesXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id ChatMessagesXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return ChatMessagesXPCEnvelope.init(coder:)(v0);
}

id ChatMessagesXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B97AF8C(a1, 0x6567617373656D5FLL, 115, &OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
}

Swift::Void __swiftcall ChatMessagesXPCEnvelope.encode(with:)(NSCoder with)
{
}

void ChatMessagesXPCEnvelope.init()()
{
}

id sub_25B971150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  if (v4 >> 60 == 15)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v7 = v4;
    uint64_t v5 = (void *)sub_25B9EC280();
    sub_25B958F08(v6, v7);
  }
  return v5;
}

uint64_t sub_25B9711C4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template);
  sub_25B979C5C(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template + 8));
  return v1;
}

void sub_25B971204()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &qword_26A51BA70;
  uint64_t v7 = sub_25B94E854(&qword_26A51BA70);
  uint64_t v8 = sub_25B96068C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25B97AE00();
  uint64_t v9 = sub_25B9ECA70();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  sub_25B97AE80();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v9) == 1)
  {
    unint64_t v11 = v0;
    sub_25B96CA38(v1, &qword_26A51BA70);
    uint64_t v6 = 0;
    unint64_t v2 = 0xF000000000000000;
LABEL_5:
    unint64_t v18 = (uint64_t **)&v0[OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template];
    *unint64_t v18 = v6;
    v18[1] = (uint64_t *)v2;

    v19.receiver = v0;
    v19.super_class = ObjectType;
    objc_msgSendSuper2(&v19, sel_init);
    sub_25B96CA38(v4, &qword_26A51BA70);
    sub_25B97B134();
    sub_25B964F50();
    return;
  }
  uint64_t v12 = sub_25B97AF28();
  v13(v12);
  uint64_t v14 = sub_25B96E1F8(&qword_26A51BA78, MEMORY[0x263F41548]);
  uint64_t v15 = v0;
  sub_25B97B1C8();
  if (!v14)
  {
    uint64_t v16 = sub_25B97AFBC();
    v17(v16);
    goto LABEL_5;
  }
  sub_25B97AC08();
  swift_unexpectedError();
  __break(1u);
}

uint64_t TemplateXPCEnvelope.unseal()()
{
  uint64_t v2 = v0 + OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template);
  unint64_t v4 = *(void *)(v2 + 8);
  sub_25B9ECA70();
  if (v4 >> 60 == 15)
  {
    uint64_t v5 = sub_25B97B1F4();
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v5, v6, v7, v8);
  }
  else
  {
    sub_25B96E1A0(v3, v4);
    sub_25B96E1F8(&qword_26A51B8B8, MEMORY[0x263F41548]);
    sub_25B97AEB0();
    if (v1)
    {
      sub_25B97AC08();
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      uint64_t v10 = sub_25B97B208();
      return sub_25B958F08(v10, v11);
    }
  }
  return result;
}

uint64_t static TemplateXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7C9;
}

uint64_t static TemplateXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7C9 = a1;
  return result;
}

uint64_t (*static TemplateXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id TemplateXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return TemplateXPCEnvelope.init(coder:)(v0);
}

id TemplateXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B97AF8C(a1, 0x74616C706D65745FLL, 101, &OBJC_IVAR____TtC4Sage19TemplateXPCEnvelope__template);
}

id sub_25B9715D4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = v6;
  uint64_t v10 = (void *)sub_25B9ECFC0();
  id v11 = objc_msgSend(a1, sel_decodeObjectForKey_, v10);

  if (v11)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_25B979D1C((uint64_t)v17, (uint64_t)v18, &qword_26A51B7E8);
  if (!v19)
  {
    sub_25B96CA38((uint64_t)v18, &qword_26A51B7E8);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    long long v12 = xmmword_25B9F5320;
    goto LABEL_9;
  }
  long long v12 = v15;
LABEL_9:
  *(_OWORD *)&v9[*a4] = v12;

  v16.receiver = v9;
  v16.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v16, sel_init);

  return v13;
}

Swift::Void __swiftcall TemplateXPCEnvelope.encode(with:)(NSCoder with)
{
}

void sub_25B971760(void *a1, void *a2)
{
  if (*(void *)(v2 + *a2 + 8) >> 60 == 15) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = sub_25B9EC280();
  }
  sub_25B97B05C();
  sub_25B9ECFC0();
  sub_25B97B104();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4);
  swift_unknownObjectRelease();
}

void TemplateXPCEnvelope.init()()
{
}

uint64_t sub_25B971920()
{
  return swift_bridgeObjectRetain();
}

void sub_25B971930()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v54 = sub_25B94E854(&qword_26A51BA48);
  sub_25B95097C();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v53 = (objc_class **)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v52 = (objc_class **)((char *)&v47 - v12);
  MEMORY[0x270FA5388](v11);
  uint64_t v51 = (char *)&v47 - v13;
  if (!v3)
  {
    *(void *)&v0[OBJC_IVAR____TtC4Sage27BindingVariablesXPCEnvelope__bindingVariables] = 0;
LABEL_24:
    v63.receiver = v1;
    v63.super_class = ObjectType;
    objc_msgSendSuper2(&v63, sel_init);
    sub_25B964F50();
    return;
  }
  int64_t v14 = *(void *)(v3 + 16);
  if (!v14)
  {
    uint64_t v46 = v0;
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x263F8EE78];
LABEL_23:
    *(void *)&v1[OBJC_IVAR____TtC4Sage27BindingVariablesXPCEnvelope__bindingVariables] = sub_25B96DED8(v41, &qword_26A51BA58, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25B979854);

    goto LABEL_24;
  }
  long long v47 = ObjectType;
  uint64_t v62 = MEMORY[0x263F8EE78];
  long long v48 = v0;
  long long v15 = v0;
  sub_25B992628(0, v14, 0);
  uint64_t v16 = sub_25B979BDC(v3);
  if (v16 < 0 || (unint64_t v18 = v16, v16 >= 1 << *(unsigned char *)(v3 + 32)))
  {
LABEL_25:
    __break(1u);
  }
  else
  {
    uint64_t v19 = v3 + 64;
    uint64_t v49 = v3 + 64;
    uint64_t v50 = v3;
    uint64_t v61 = v10;
    while ((*(void *)(v19 + 8 * (v18 >> 6)) & (1 << v18)) != 0)
    {
      if (v17 != *(_DWORD *)(v3 + 36)) {
        goto LABEL_27;
      }
      uint64_t v57 = 1 << v18;
      unint64_t v58 = v18 >> 6;
      int64_t v55 = v14;
      uint64_t v56 = v17;
      uint64_t v20 = v54;
      uint64_t v59 = 0;
      unint64_t v21 = v51;
      uint64_t v22 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      uint64_t v25 = sub_25B9ECF20();
      sub_25B950790();
      uint64_t v27 = v26;
      uint64_t v60 = v18;
      uint64_t v28 = *(void (**)(void))(v26 + 16);
      sub_25B97B0A0();
      v28();
      *unint64_t v21 = v24;
      v21[1] = v23;
      uint64_t v29 = (uint64_t)v52;
      *uint64_t v52 = v24;
      *(void *)(v29 + 8) = v23;
      sub_25B97B0A0();
      v28();
      sub_25B979D1C(v29, (uint64_t)v61, &qword_26A51BA48);
      swift_bridgeObjectRetain_n();
      sub_25B96CA38((uint64_t)v21, &qword_26A51BA48);
      uint64_t v30 = *(int *)(v20 + 48);
      uint64_t v31 = v61;
      uint64_t v32 = v53;
      int64_t v33 = (char *)v53 + v30;
      uint64_t v34 = *v61;
      uint64_t v35 = v61[1];
      *uint64_t v53 = *v61;
      v32[1] = v35;
      sub_25B97B0A0();
      v28();
      sub_25B96E1F8(&qword_26A51BA50, MEMORY[0x263F620C0]);
      swift_bridgeObjectRetain();
      uint64_t v36 = v59;
      uint64_t v37 = sub_25B9EC3F0();
      if (v36) {
        goto LABEL_31;
      }
      uint64_t v39 = v37;
      uint64_t v40 = v38;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v25);
      sub_25B96CA38((uint64_t)v31, &qword_26A51BA48);
      uint64_t v41 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B992628(0, *(void *)(v41 + 16) + 1, 1);
        uint64_t v41 = v62;
      }
      uint64_t v3 = v50;
      unint64_t v43 = *(void *)(v41 + 16);
      unint64_t v42 = *(void *)(v41 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_25B992628((char *)(v42 > 1), v43 + 1, 1);
        uint64_t v41 = v62;
      }
      *(void *)(v41 + 16) = v43 + 1;
      unint64_t v44 = (void *)(v41 + 32 * v43);
      v44[4] = v34;
      v44[5] = v35;
      v44[6] = v39;
      v44[7] = v40;
      if (v60 >= -(-1 << *(unsigned char *)(v3 + 32))) {
        goto LABEL_28;
      }
      uint64_t v19 = v49;
      if ((*(void *)(v49 + 8 * v58) & v57) == 0) {
        goto LABEL_29;
      }
      if (v56 != *(_DWORD *)(v3 + 36)) {
        goto LABEL_30;
      }
      uint64_t v45 = sub_25B9ED310();
      int64_t v14 = v55 - 1;
      if (v55 == 1)
      {
        swift_bridgeObjectRelease();
        ObjectType = v47;
        uint64_t v1 = v48;
        goto LABEL_23;
      }
      unint64_t v18 = v45;
      if ((v45 & 0x8000000000000000) == 0)
      {
        uint64_t v17 = *(unsigned int *)(v3 + 36);
        if (v45 < 1 << *(unsigned char *)(v3 + 32)) {
          continue;
        }
      }
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_25B97AC08();
  swift_unexpectedError();
  __break(1u);
}

Swift::OpaquePointer_optional __swiftcall BindingVariablesXPCEnvelope.unseal()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Sage27BindingVariablesXPCEnvelope__bindingVariables);
  if (v1)
  {
    uint64_t v2 = sub_25B96DB40((uint64_t)v1);
    uint64_t v1 = (void *)sub_25B96DED8(v2, (uint64_t *)&unk_26A51BA90, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25B9793F8);
  }
  result.value._rawValue = v1;
  result.is_nil = v3;
  return result;
}

uint64_t static BindingVariablesXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CA;
}

uint64_t static BindingVariablesXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CA = a1;
  return result;
}

uint64_t (*static BindingVariablesXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id BindingVariablesXPCEnvelope.__allocating_init(coder:)()
{
  return BindingVariablesXPCEnvelope.init(coder:)();
}

id BindingVariablesXPCEnvelope.init(coder:)()
{
  uint64_t v2 = (objc_class *)sub_25B97ACB4();
  Swift::Bool v3 = v1;
  uint64_t v4 = (void *)sub_25B97B158();
  id v5 = objc_msgSend(v0, sel_decodeObjectForKey_, v4);

  if (v5)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_25B979D1C((uint64_t)v11, (uint64_t)v12, &qword_26A51B7E8);
  if (!v13)
  {
    sub_25B96CA38((uint64_t)v12, &qword_26A51B7E8);
    goto LABEL_8;
  }
  sub_25B94E854(&qword_26A51B8C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_9;
  }
  uint64_t v6 = v9;
LABEL_9:
  *(void *)&v3[OBJC_IVAR____TtC4Sage27BindingVariablesXPCEnvelope__bindingVariables] = v6;

  v10.receiver = v3;
  v10.super_class = v2;
  id v7 = objc_msgSendSuper2(&v10, sel_init);

  return v7;
}

Swift::Void __swiftcall BindingVariablesXPCEnvelope.encode(with:)(NSCoder with)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC4Sage27BindingVariablesXPCEnvelope__bindingVariables)) {
    uint64_t v3 = sub_25B9ECF60();
  }
  else {
    uint64_t v3 = 0;
  }
  sub_25B97B158();
  sub_25B97B104();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3);
  swift_unknownObjectRelease();
}

void BindingVariablesXPCEnvelope.init()()
{
}

uint64_t sub_25B972200()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters + 8));
  return v1;
}

void sub_25B972240()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B97ACB4();
  sub_25B97B0EC(v1);
  sub_25B9EC580();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B97AD24();
  sub_25B9EC710();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25B97AC5C();
  v5(v4);
  id v6 = v0;
  sub_25B97AF74();
  sub_25B9EC700();
  sub_25B96E1F8(&qword_26A51BA40, MEMORY[0x263F7F9F0]);
  sub_25B97ADA8();
  uint64_t v7 = sub_25B97AC44();
  v8(v7);
  if (v0)
  {
    sub_25B97AC08();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B184(OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
    sub_25B97B178();
    objc_msgSendSuper2(&v11, sel_init);
    uint64_t v9 = sub_25B97ACD0();
    v10(v9);
    sub_25B97B0F8();
    sub_25B964F50();
  }
}

uint64_t SamplingParametersXPCEnvelope.unseal()()
{
  sub_25B97B084();
  sub_25B9EC710();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters + 8);
  sub_25B96E1F8(&qword_26A51B8D8, MEMORY[0x263F7F9F0]);
  sub_25B97AEDC();
  if (v2)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B068();
    sub_25B9EC6F0();
    uint64_t v3 = sub_25B97B140();
    return v4(v3);
  }
  return result;
}

uint64_t static SamplingParametersXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CB;
}

uint64_t static SamplingParametersXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CB = a1;
  return result;
}

uint64_t (*static SamplingParametersXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id SamplingParametersXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return SamplingParametersXPCEnvelope.init(coder:)(v0);
}

id SamplingParametersXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B97AE1C(a1, 0x74656D617261705FLL, 7565925, &OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
}

Swift::Void __swiftcall SamplingParametersXPCEnvelope.encode(with:)(NSCoder with)
{
}

void sub_25B972608()
{
  sub_25B97B110();
  uint64_t v1 = (void *)sub_25B9EC280();
  sub_25B9ECFC0();
  sub_25B97B104();
  objc_msgSend(v0, sel_encodeObject_forKey_, v1);
}

void SamplingParametersXPCEnvelope.init()()
{
}

uint64_t sub_25B972814@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  swift_beginAccess();
  uint64_t v4 = sub_25B9EC270();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_25B97292C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  swift_beginAccess();
  uint64_t v4 = sub_25B9EC270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

id sub_25B9729EC()
{
  return *(id *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle);
}

uint64_t sub_25B972A58(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t sub_25B972A84()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata + 8));
  return v1;
}

void DocumentXPCEnvelope.__allocating_init(sealing:)()
{
}

void DocumentXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_25B9EC270();
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  uint64_t v7 = v0;
  sub_25B9ECA90();
  uint64_t v8 = &v7[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v7[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url], v1, v3);
  if ((sub_25B9ECA80() & 0x80000000) != 0)
  {
    sub_25B9ECAC0();
    sub_25B95097C();
    sub_25B959038();
    v17();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);

    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v7[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08840]), sel_initWithFileDescriptor_closeOnDealloc_, sub_25B9ECA80(), 0);
    sub_25B9ECAB0();
    sub_25B94E854(&qword_26A51B8F0);
    sub_25B972F48(&qword_26A51B8F8);
    uint64_t v9 = sub_25B9EC3F0();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_25B9ECAB0();
    uint64_t v12 = sub_25B9EC3F0();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_25B955A74(v9, v11);
    long long v15 = (uint64_t *)&v7[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata];
    *long long v15 = v12;
    v15[1] = v14;

    v18.receiver = v7;
    v18.super_class = ObjectType;
    objc_msgSendSuper2(&v18, sel_init);
    sub_25B9ECAC0();
    sub_25B95097C();
    sub_25B959038();
    v16();
  }
  sub_25B964F50();
}

uint64_t DocumentXPCEnvelope.unseal()()
{
  sub_25B97AE74();
  uint64_t v2 = sub_25B9EC270();
  sub_25B950790();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_25B959380();
  sub_25B94E854(&qword_26A51B8F0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata);
  unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata + 8);
  sub_25B96E1A0(v6, v7);
  sub_25B972F48(&qword_26A51B908);
  sub_25B9EC3E0();
  sub_25B955A74(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v8, v2);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle), sel_fileDescriptor);
  return sub_25B9ECAD0();
}

uint64_t sub_25B972F48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B9524FC(&qword_26A51B8F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DocumentXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CC;
}

uint64_t static DocumentXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CC = a1;
  return result;
}

uint64_t (*static DocumentXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

void DocumentXPCEnvelope.__allocating_init(coder:)()
{
}

void DocumentXPCEnvelope.init(coder:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_25B94E854(&qword_26A51B910);
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B9EC270();
  sub_25B950790();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25B9652E4();
  uint64_t v13 = v0;
  uint64_t v14 = (void *)sub_25B9ECFC0();
  id v15 = objc_msgSend(v3, sel_decodeObjectForKey_, v14);

  if (v15)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  sub_25B979D1C((uint64_t)&v35, (uint64_t)v37, &qword_26A51B7E8);
  if (!v38)
  {
    sub_25B96CA38((uint64_t)v37, &qword_26A51B7E8);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 1, 1, v9);
    goto LABEL_9;
  }
  int v16 = swift_dynamicCast();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, v16 ^ 1u, 1, v9);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v8, 1, v9) == 1)
  {
LABEL_9:

    sub_25B96CA38((uint64_t)v8, &qword_26A51B910);
LABEL_18:
    uint64_t v28 = v13;
    goto LABEL_19;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v1, v8, v9);
  uint64_t v17 = &v13[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url];
  sub_25B97B1B4();
  v18();
  uint64_t v19 = (void *)sub_25B97AF48();
  id v20 = objc_msgSend(v3, sel_decodeObjectForKey_, v19);

  if (v20)
  {
    sub_25B9ED2E0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  sub_25B979D1C((uint64_t)&v35, (uint64_t)v37, &qword_26A51B7E8);
  if (!v38)
  {

    sub_25B96CA38((uint64_t)v37, &qword_26A51B7E8);
LABEL_17:
    uint64_t v26 = *(void (**)(uint64_t))(v11 + 8);
    uint64_t v27 = sub_25B96DAE4();
    v26(v27);
    ((void (*)(char *, uint64_t))v26)(v17, v9);
    goto LABEL_18;
  }
  sub_25B973544();
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_17;
  }
  uint64_t v32 = (objc_class *)ObjectType;
  unint64_t v21 = (void *)v34;
  *(void *)&v13[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle] = v34;
  id v22 = v21;
  uint64_t v23 = (void *)sub_25B97AF94();
  id v24 = objc_msgSend(v3, sel_decodeObjectForKey_, v23);

  if (v24)
  {
    sub_25B9ED2E0();

    swift_unknownObjectRelease();
    uint64_t v25 = sub_25B97AFD8();
    MEMORY[0x26549F000](v25);
  }
  else
  {
    uint64_t v29 = sub_25B97AFD8();
    MEMORY[0x26549F000](v29);

    long long v35 = 0u;
    long long v36 = 0u;
  }
  uint64_t v30 = v32;
  sub_25B979D1C((uint64_t)&v35, (uint64_t)v37, &qword_26A51B7E8);
  if (v38)
  {
    if (swift_dynamicCast())
    {
      *(_OWORD *)&v13[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__metadata] = v34;

      v33.receiver = v13;
      v33.super_class = v30;
      objc_msgSendSuper2(&v33, sel_init);

      goto LABEL_20;
    }
  }
  else
  {

    sub_25B96CA38((uint64_t)v37, &qword_26A51B7E8);
  }
  MEMORY[0x26549F000](v17, v9);
  uint64_t v28 = *(void **)&v13[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle];

LABEL_19:
  swift_deallocPartialClassInstance();
LABEL_20:
  sub_25B964F50();
}

unint64_t sub_25B973544()
{
  unint64_t result = qword_26A51B918;
  if (!qword_26A51B918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A51B918);
  }
  return result;
}

Swift::Void __swiftcall DocumentXPCEnvelope.encode(with:)(NSCoder with)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25B9EC270();
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B97AE5C();
  swift_beginAccess();
  sub_25B97B1B4();
  v8();
  uint64_t v9 = (void *)sub_25B9EC230();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  uint64_t v10 = (void *)sub_25B9ECFC0();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];

  id v11 = *(id *)(v2 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__fileHandle);
  uint64_t v12 = (void *)sub_25B97AF48();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];

  uint64_t v13 = sub_25B97B128();
  sub_25B96E1A0(v13, v14);
  sub_25B97B128();
  id v15 = (void *)sub_25B9EC280();
  uint64_t v16 = sub_25B97B128();
  sub_25B955A74(v16, v17);
  objc_super v18 = (void *)sub_25B97AF94();
  [(objc_class *)with.super.isa encodeObject:v15 forKey:v18];
}

void DocumentXPCEnvelope.init()()
{
}

uint64_t sub_25B97387C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration + 8));
  return v1;
}

void SessionConfigurationXPCEnvelope.__allocating_init(sealing:)()
{
}

void SessionConfigurationXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  id v30 = v0;
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_25B9EC680();
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B97AE5C();
  uint64_t v8 = type metadata accessor for SessionConfiguration();
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = sub_25B97AFFC();
  sub_25B95097C();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v14 = (id *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v32 = v3;
  sub_25B977218(v3, (uint64_t)v1, (void (*)(void))type metadata accessor for SessionConfiguration);
  (*(void (**)(void *, char *, uint64_t))(v6 + 16))(v0, &v1[v9[7]], v4);
  unint64_t v17 = (char *)v30;
  sub_25B974BCC((uint64_t)v0, (uint64_t)v34);
  memcpy(v14, v34, 0x50uLL);
  *(void *)((char *)v14 + *(int *)(v10 + 32)) = *(void *)v1;
  sub_25B9ECE10();
  sub_25B95097C();
  sub_25B97B090();
  v18();
  uint64_t v19 = &v1[v9[9]];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  id v22 = (void *)((char *)v14 + *(int *)(v10 + 28));
  *id v22 = v21;
  v22[1] = v20;
  uint64_t v23 = &v1[v9[10]];
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B975010((uint64_t)v1, (void (*)(void))type metadata accessor for SessionConfiguration);
  v14[10] = v24;
  v14[11] = v25;
  sub_25B974FAC((uint64_t)v14, (uint64_t)v16);
  sub_25B96E1F8(&qword_26A51B920, (void (*)(uint64_t))type metadata accessor for SessionConfigurationEnvelope);
  sub_25B97B05C();
  uint64_t v26 = sub_25B9EC3F0();
  uint64_t v28 = v27;
  sub_25B975010((uint64_t)v16, (void (*)(void))type metadata accessor for SessionConfigurationEnvelope);
  uint64_t v29 = (uint64_t *)&v17[OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration];
  *uint64_t v29 = v26;
  v29[1] = v28;

  v33.receiver = v17;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, sel_init);
  sub_25B975010(v32, (void (*)(void))type metadata accessor for SessionConfiguration);
  sub_25B97B134();
  sub_25B964F50();
}

uint64_t type metadata accessor for SessionConfigurationEnvelope(uint64_t a1)
{
  return sub_25B9559BC(a1, qword_26A51B9E0);
}

void SessionConfigurationXPCEnvelope.unseal()()
{
  sub_25B964F38();
  sub_25B97AE74();
  uint64_t v5 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B959380();
  uint64_t v9 = sub_25B9EC680();
  uint64_t v10 = sub_25B96068C(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = (int *)sub_25B97AFFC();
  sub_25B95097C();
  MEMORY[0x270FA5388](v12);
  sub_25B97B0B0();
  uint64_t v13 = v1 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration;
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
  unint64_t v15 = *(void *)(v13 + 8);
  sub_25B96E1A0(v14, v15);
  sub_25B96E1F8(&qword_26A51B930, (void (*)(uint64_t))type metadata accessor for SessionConfigurationEnvelope);
  sub_25B9EC3E0();
  sub_25B955A74(v14, v15);
  uint64_t v16 = *(void *)((char *)v4 + v11[8]);
  memcpy(v22, v4, sizeof(v22));
  sub_25B975064(v3);
  uint64_t v17 = v4[10];
  uint64_t v18 = v4[11];
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v2, (char *)v4 + v11[6], v5);
  uint64_t v19 = (void *)((char *)v4 + v11[7]);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)(v16, 0, v3, v17, v18, v2, v20, v21, v0);
  sub_25B975010((uint64_t)v4, (void (*)(void))type metadata accessor for SessionConfigurationEnvelope);
  sub_25B964F50();
}

uint64_t static SessionConfigurationXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CD;
}

uint64_t static SessionConfigurationXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CD = a1;
  return result;
}

uint64_t (*static SessionConfigurationXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id SessionConfigurationXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return SessionConfigurationXPCEnvelope.init(coder:)(v0);
}

id SessionConfigurationXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B96E904(a1, 0x756769666E6F635FLL, 0xEE006E6F69746172, &OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
}

Swift::Void __swiftcall SessionConfigurationXPCEnvelope.encode(with:)(NSCoder with)
{
}

void SessionConfigurationXPCEnvelope.init()()
{
}

uint64_t sub_25B974088()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event + 8));
  return v1;
}

void CompletePromptResponseElementXPCEnvelope.__allocating_init(sealing:)()
{
}

void CompletePromptResponseElementXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v2 = (objc_class *)sub_25B97ACB4();
  sub_25B9EC770();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B9652E4();
  sub_25B975308(v0, (uint64_t)&v12);
  uint64_t v4 = v1;
  sub_25B9EC760();
  sub_25B96E1F8(&qword_26A51B938, MEMORY[0x263F7FA40]);
  sub_25B96DAE4();
  uint64_t v5 = sub_25B9EC3F0();
  uint64_t v7 = v6;
  sub_25B97B074();
  v8();
  uint64_t v9 = (uint64_t *)&v4[OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event];
  *uint64_t v9 = v5;
  v9[1] = v7;

  v11.receiver = v4;
  v11.super_class = v2;
  objc_msgSendSuper2(&v11, sel_init);
  uint64_t v10 = sub_25B97AC90();
  sub_25B94F65C(v10);
  sub_25B97B134();
  sub_25B964F50();
}

uint64_t CompletePromptResponseElementXPCEnvelope.unseal()()
{
  sub_25B97B084();
  sub_25B9EC770();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B97AF08(OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
  sub_25B96E1F8(&qword_26A51B948, MEMORY[0x263F7FA40]);
  sub_25B97AD58();
  sub_25B955A74(v0, v2);
  if (v1)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B068();
    MEMORY[0x26116BBB0]();
    uint64_t v4 = sub_25B97AE44();
    return v5(v4);
  }
  return result;
}

uint64_t static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CE;
}

uint64_t static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CE = a1;
  return result;
}

uint64_t (*static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id CompletePromptResponseElementXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return CompletePromptResponseElementXPCEnvelope.init(coder:)(v0, v1, v2);
}

id CompletePromptResponseElementXPCEnvelope.init(coder:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B97B054(a1, 0x746E6576655FLL, a3, &OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
}

Swift::Void __swiftcall CompletePromptResponseElementXPCEnvelope.encode(with:)(NSCoder with)
{
}

void CompletePromptResponseElementXPCEnvelope.init()()
{
}

id sub_25B97457C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  unint64_t v5 = v4;
  uint64_t v6 = (void *)sub_25B9EC280();
  sub_25B955A74(v3, v5);
  return v6;
}

uint64_t sub_25B9745DC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
  sub_25B96E1A0(v1, *(void *)(v0 + OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion + 8));
  return v1;
}

uint64_t sub_25B974628(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5 = (uint64_t *)(v4 + *a3);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t *v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

void CompletePromptResponseXPCEnvelope.__allocating_init(sealing:)()
{
}

void CompletePromptResponseXPCEnvelope.init(sealing:)()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B97ACB4();
  sub_25B97B0EC(v1);
  sub_25B9EC520();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B97AD24();
  sub_25B9EC6E0();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_25B97AC5C();
  v5(v4);
  id v6 = v0;
  sub_25B97AF74();
  sub_25B9EC6D0();
  sub_25B96E1F8(&qword_26A51B950, MEMORY[0x263F7F9D0]);
  sub_25B97ADA8();
  uint64_t v7 = sub_25B97AC44();
  v8(v7);
  if (v0)
  {
    sub_25B97AC08();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B184(OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
    sub_25B97B178();
    objc_msgSendSuper2(&v11, sel_init);
    uint64_t v9 = sub_25B97ACD0();
    v10(v9);
    sub_25B97B0F8();
    sub_25B964F50();
  }
}

uint64_t CompletePromptResponseXPCEnvelope.unseal()()
{
  sub_25B97B084();
  sub_25B9EC6E0();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B97AF08(OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
  sub_25B96E1F8((unint64_t *)&unk_26A51B960, MEMORY[0x263F7F9D0]);
  sub_25B97AD58();
  sub_25B955A74(v0, v2);
  if (v1)
  {
    sub_25B97AC08();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_25B97B068();
    sub_25B9EC6C0();
    uint64_t v4 = sub_25B97AE44();
    return v5(v4);
  }
  return result;
}

uint64_t static CompletePromptResponseXPCEnvelope.supportsSecureCoding.getter()
{
  return byte_26A51B7CF;
}

uint64_t static CompletePromptResponseXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_25B9607EC();
  byte_26A51B7CF = a1;
  return result;
}

uint64_t (*static CompletePromptResponseXPCEnvelope.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id CompletePromptResponseXPCEnvelope.__allocating_init(coder:)()
{
  sub_25B97AC9C();
  uint64_t v0 = (void *)sub_25B97AC90();
  return CompletePromptResponseXPCEnvelope.init(coder:)(v0);
}

id CompletePromptResponseXPCEnvelope.init(coder:)(void *a1)
{
  return sub_25B97AE1C(a1, 0x74656C706D6F635FLL, 7237481, &OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
}

Swift::Void __swiftcall CompletePromptResponseXPCEnvelope.encode(with:)(NSCoder with)
{
}

void sub_25B974A44()
{
  sub_25B97B110();
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  sub_25B96E1A0(*v1, v3);
  uint64_t v4 = (void *)sub_25B9EC280();
  sub_25B955A74(v2, v3);
  sub_25B9ECFC0();
  sub_25B97B104();
  objc_msgSend(v0, sel_encodeObject_forKey_, v4);
}

void CompletePromptResponseXPCEnvelope.init()()
{
}

id _s4Sage26GenerativeErrorXPCEnvelopeCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25B974BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25B9EC3D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v58 = (char *)&v45 - v8;
  uint64_t v9 = sub_25B9EC3A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B9EC5F0();
  uint64_t v54 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_25B9EC650();
  uint64_t v52 = v15;
  uint64_t v53 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_25B9EC630();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    uint64_t v48 = v12;
    uint64_t v49 = a1;
    uint64_t v50 = a2;
    uint64_t v60 = MEMORY[0x263F8EE78];
    sub_25B992648(0, v17, 0);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v18 = v5 + 16;
    uint64_t v20 = *(unsigned __int8 *)(v18 + 64);
    uint64_t v45 = v16;
    uint64_t v21 = v16 + ((v20 + 32) & ~v20);
    uint64_t v55 = *(void *)(v18 + 56);
    uint64_t v56 = v19;
    id v22 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v57 = v18;
    do
    {
      uint64_t v23 = v58;
      uint64_t v24 = v56;
      v56(v58, (char *)v21, v4);
      uint64_t v25 = v59;
      v24(v59, v23, v4);
      uint64_t v26 = sub_25B9EC3B0();
      uint64_t v28 = v27;
      uint64_t v29 = *v22;
      (*v22)(v25, v4);
      v29(v23, v4);
      uint64_t v30 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B992648(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v60;
      }
      unint64_t v32 = *(void *)(v30 + 16);
      unint64_t v31 = *(void *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_25B992648(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v60;
      }
      *(void *)(v30 + 16) = v32 + 1;
      uint64_t v33 = v30 + 16 * v32;
      *(void *)(v33 + 32) = v26;
      *(void *)(v33 + 40) = v28;
      v21 += v55;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a1 = v49;
    a2 = v50;
    uint64_t v9 = v47;
    uint64_t v12 = v48;
    uint64_t v10 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  char v34 = sub_25B9EC620() & 1;
  long long v35 = v51;
  sub_25B9EC600();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
  uint64_t v36 = sub_25B9EC670();
  uint64_t v38 = v37;
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_25B9EC610();
  uint64_t v40 = sub_25B9EC5C0();
  uint64_t v41 = sub_25B9EC680();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(a1, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v52;
  swift_bridgeObjectRelease();
  uint64_t v43 = v54;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v43;
  *(void *)(a2 + 16) = v53;
  *(void *)(a2 + 24) = v42;
  *(void *)(a2 + 32) = v30;
  *(unsigned char *)(a2 + 40) = v34;
  *(void *)(a2 + 48) = v36;
  *(void *)(a2 + 56) = v38;
  *(void *)(a2 + 64) = v39;
  *(void *)(a2 + 72) = v40;
  return result;
}

uint64_t sub_25B974FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfigurationEnvelope(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B975010(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

uint64_t sub_25B975064@<X0>(uint64_t a1@<X8>)
{
  objc_super v2 = v1;
  v20[7] = a1;
  uint64_t v3 = sub_25B9EC3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B9EC3A0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v12 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v13 = v2[7];
  v20[5] = v2[6];
  v20[6] = v12;
  uint64_t v14 = v2[4];
  uint64_t v22 = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    void v20[3] = v10;
    v20[4] = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v20[1] = v11;
    swift_bridgeObjectRetain();
    v20[0] = v13;
    swift_bridgeObjectRetain();
    v20[2] = v9;
    swift_bridgeObjectRetain();
    sub_25B979C70((uint64_t)&v22);
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_25B992698();
    uint64_t v16 = v21;
    uint64_t v17 = v14 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25B9EC3C0();
      uint64_t v21 = v16;
      unint64_t v18 = *(void *)(v16 + 16);
      if (v18 >= *(void *)(v16 + 24) >> 1)
      {
        sub_25B992698();
        uint64_t v16 = v21;
      }
      v17 += 16;
      *(void *)(v16 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v18, v6, v3);
      --v15;
    }
    while (v15);
    sub_25B979C9C((uint64_t)&v22);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_25B9EC380();
  return sub_25B9EC5E0();
}

uint64_t sub_25B975308(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for GenerativeErrorXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for GenerativeErrorXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativeErrorXPCEnvelope);
}

uint64_t dispatch thunk of GenerativeErrorXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of GenerativeErrorXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for ToolChoiceXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for ToolChoiceXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ToolChoiceXPCEnvelope);
}

uint64_t dispatch thunk of ToolChoiceXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ToolChoiceXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for ToolTypeXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for ToolTypeXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ToolTypeXPCEnvelope);
}

uint64_t dispatch thunk of ToolTypeXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ToolTypeXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for SchemaXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for SchemaXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SchemaXPCEnvelope);
}

uint64_t dispatch thunk of SchemaXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SchemaXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for StringRenderedPromptSanitizerXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for StringRenderedPromptSanitizerXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StringRenderedPromptSanitizerXPCEnvelope);
}

uint64_t dispatch thunk of StringRenderedPromptSanitizerXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of StringRenderedPromptSanitizerXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for StringResponseSanitizerXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for StringResponseSanitizerXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StringResponseSanitizerXPCEnvelope);
}

uint64_t dispatch thunk of StringResponseSanitizerXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of StringResponseSanitizerXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for DocumentIdentifierXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for DocumentIdentifierXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DocumentIdentifierXPCEnvelope);
}

uint64_t dispatch thunk of DocumentIdentifierXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DocumentIdentifierXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for DocumentRegistrationXPCResponse()
{
  return self;
}

uint64_t method lookup function for DocumentRegistrationXPCResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DocumentRegistrationXPCResponse);
}

uint64_t dispatch thunk of DocumentRegistrationXPCResponse.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DocumentRegistrationXPCResponse.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for ChatMessagesXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for ChatMessagesXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ChatMessagesXPCEnvelope);
}

uint64_t dispatch thunk of ChatMessagesXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for TemplateXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for TemplateXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TemplateXPCEnvelope);
}

uint64_t dispatch thunk of TemplateXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for BindingVariablesXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for BindingVariablesXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BindingVariablesXPCEnvelope);
}

uint64_t dispatch thunk of BindingVariablesXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for SamplingParametersXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for SamplingParametersXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SamplingParametersXPCEnvelope);
}

uint64_t dispatch thunk of SamplingParametersXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_25B9757CC()
{
  return type metadata accessor for DocumentXPCEnvelope(0);
}

uint64_t type metadata accessor for DocumentXPCEnvelope(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51B9D0);
}

uint64_t sub_25B9757F4()
{
  uint64_t result = sub_25B9EC270();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DocumentXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DocumentXPCEnvelope);
}

uint64_t dispatch thunk of DocumentXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DocumentXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for SessionConfigurationXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for SessionConfigurationXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SessionConfigurationXPCEnvelope);
}

uint64_t dispatch thunk of SessionConfigurationXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SessionConfigurationXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for CompletePromptResponseElementXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for CompletePromptResponseElementXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CompletePromptResponseElementXPCEnvelope);
}

uint64_t dispatch thunk of CompletePromptResponseElementXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CompletePromptResponseElementXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for CompletePromptResponseXPCEnvelope()
{
  return self;
}

uint64_t method lookup function for CompletePromptResponseXPCEnvelope(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CompletePromptResponseXPCEnvelope);
}

uint64_t dispatch thunk of CompletePromptResponseXPCEnvelope.__allocating_init(sealing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CompletePromptResponseXPCEnvelope.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void *sub_25B975A08(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v10 = a2[11];
    uint64_t v11 = a3[6];
    uint64_t v21 = (uint64_t)a2 + v11;
    uint64_t v22 = a1 + v11;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v10;
    uint64_t v12 = sub_25B9ECE10();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v22, v21, v12);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(void *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_25B975B80(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B975C30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = a3[6];
  uint64_t v19 = a2 + v10;
  uint64_t v20 = a1 + v10;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v11 = sub_25B9ECE10();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v20, v19, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25B975D58(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

_OWORD *sub_25B975EC4(_OWORD *a1, _OWORD *a2, int *a3)
{
  memcpy(a1, a2, 0x50uLL);
  a1[5] = a2[5];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B9ECE10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_25B975F6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_25B976078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B97608C);
}

uint64_t sub_25B97608C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B9ECE10();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v9, a2, v8);
  }
}

uint64_t sub_25B976114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B976128);
}

uint64_t sub_25B976128(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B9ECE10();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_25B9761A8()
{
  uint64_t result = sub_25B9ECE10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25B976260(uint64_t a1)
{
  memcpy(v5, v1, sizeof(v5));
  sub_25B978258((uint64_t)v5);
  sub_25B977270(a1);
  sub_25B9782B0((uint64_t)v5);
  swift_bridgeObjectRetain();
  sub_25B9ECFF0();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for SessionConfigurationEnvelope(0);
  sub_25B9ECE10();
  sub_25B96E1F8(&qword_26A51BA38, MEMORY[0x263F61F78]);
  sub_25B9ECFA0();
  if (*(void *)&v1[*(int *)(v3 + 28) + 8])
  {
    sub_25B9ED760();
    swift_bridgeObjectRetain();
    sub_25B9ECFF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B9ED760();
  }
  return sub_25B9ED780();
}

BOOL sub_25B9763B8(char *__src, void *a2)
{
  memcpy(v15, __src, sizeof(v15));
  memcpy(__dst, a2, sizeof(__dst));
  if (!sub_25B977360((uint64_t)v15, (uint64_t)__dst)) {
    return 0;
  }
  if (*((void *)__src + 10) != a2[10] || *((void *)__src + 11) != a2[11])
  {
    char v5 = sub_25B9ED6A0();
    BOOL result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = type metadata accessor for SessionConfigurationEnvelope(0);
  if ((sub_25B9ECDA0() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = &__src[v8];
  uint64_t v10 = *(void *)&__src[v8 + 8];
  uint64_t v11 = (void *)((char *)a2 + v8);
  uint64_t v12 = v11[1];
  if (!v10)
  {
    if (!v12) {
      return *(double *)&__src[*(int *)(v7 + 32)] == *(double *)((char *)a2 + *(int *)(v7 + 32));
    }
    return 0;
  }
  if (!v12) {
    return 0;
  }
  if (*(void *)v9 == *v11 && v10 == v12) {
    return *(double *)&__src[*(int *)(v7 + 32)] == *(double *)((char *)a2 + *(int *)(v7 + 32));
  }
  char v14 = sub_25B9ED6A0();
  BOOL result = 0;
  if (v14) {
    return *(double *)&__src[*(int *)(v7 + 32)] == *(double *)((char *)a2 + *(int *)(v7 + 32));
  }
  return result;
}

uint64_t sub_25B9764CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000025B9F0750 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v5 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x7463757274736E69 && a2 == 0xEC000000736E6F69;
      if (v6 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x6574616C706D6574 && a2 == 0xEA00000000004449;
        if (v7 || (sub_25B9ED6A0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x694C6F54656D6974 && a2 == 0xEA00000000006576)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_25B9ED6A0();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_25B97670C()
{
  return 5;
}

unint64_t sub_25B976714(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x7463757274736E69;
      break;
    case 3:
      unint64_t result = 0x6574616C706D6574;
      break;
    case 4:
      unint64_t result = 0x694C6F54656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9767E0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_25B94E854(&qword_26A51BA00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25B94F2E0(a1, a1[3]);
  sub_25B977134();
  sub_25B9ED7B0();
  uint64_t v9 = v3[1];
  uint64_t v10 = v3[4];
  char v11 = *((unsigned char *)v3 + 40);
  uint64_t v12 = v3[6];
  uint64_t v13 = v3[7];
  uint64_t v16 = *v3;
  uint64_t v17 = v9;
  long long v18 = *((_OWORD *)v3 + 1);
  uint64_t v19 = v10;
  char v20 = v11;
  uint64_t v21 = v12;
  uint64_t v22 = v13;
  long long v23 = *((_OWORD *)v3 + 4);
  v15[15] = 0;
  sub_25B977180();
  sub_25B9ED660();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_25B9ED610();
    type metadata accessor for SessionConfigurationEnvelope(0);
    LOBYTE(v16) = 2;
    sub_25B9ECE10();
    sub_25B96E1F8(&qword_26A51BA18, MEMORY[0x263F61F78]);
    sub_25B9ED660();
    LOBYTE(v16) = 3;
    sub_25B9ED5E0();
    LOBYTE(v16) = 4;
    sub_25B9ED630();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B976A60()
{
  sub_25B9ED740();
  sub_25B976260((uint64_t)v1);
  return sub_25B9ED790();
}

uint64_t sub_25B976AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_25B9ECE10();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B94E854(&qword_26A51BA20);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for SessionConfigurationEnvelope(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B977134();
  uint64_t v12 = (uint64_t)v35;
  sub_25B9ED7A0();
  if (v12) {
    return sub_25B94F65C((uint64_t)a1);
  }
  uint64_t v29 = v5;
  long long v35 = a1;
  uint64_t v13 = v33;
  char v36 = 0;
  sub_25B9771CC();
  uint64_t v14 = v34;
  sub_25B9ED590();
  uint64_t v15 = v38;
  uint64_t v16 = v40;
  char v17 = v41;
  uint64_t v18 = v42;
  uint64_t v19 = v43;
  *(void *)char v11 = v37;
  *((void *)v11 + 1) = v15;
  *((_OWORD *)v11 + 1) = v39;
  *((void *)v11 + 4) = v16;
  v11[40] = v17;
  *((void *)v11 + 6) = v18;
  *((void *)v11 + 7) = v19;
  *((_OWORD *)v11 + 4) = v44;
  LOBYTE(v37) = 1;
  *((void *)v11 + 10) = sub_25B9ED540();
  *((void *)v11 + 11) = v20;
  LOBYTE(v37) = 2;
  sub_25B96E1F8(&qword_26A51BA30, MEMORY[0x263F61F78]);
  uint64_t v21 = v29;
  uint64_t v22 = v32;
  sub_25B9ED590();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[v9[6]], v21, v22);
  LOBYTE(v37) = 3;
  uint64_t v23 = sub_25B9ED510();
  uint64_t v24 = (uint64_t *)&v11[v9[7]];
  *uint64_t v24 = v23;
  v24[1] = v25;
  LOBYTE(v37) = 4;
  sub_25B9ED560();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(void *)&v11[v9[8]] = v27;
  sub_25B977218((uint64_t)v11, v30, (void (*)(void))type metadata accessor for SessionConfigurationEnvelope);
  sub_25B94F65C((uint64_t)v35);
  return sub_25B975010((uint64_t)v11, (void (*)(void))type metadata accessor for SessionConfigurationEnvelope);
}

uint64_t sub_25B976F88()
{
  return sub_25B94EF30();
}

unint64_t sub_25B976FA4()
{
  return sub_25B976714(*v0);
}

uint64_t sub_25B976FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9764CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B976FD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B97670C();
  *a1 = result;
  return result;
}

uint64_t sub_25B976FFC(uint64_t a1)
{
  unint64_t v2 = sub_25B977134();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B977038(uint64_t a1)
{
  unint64_t v2 = sub_25B977134();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B97707C()
{
  sub_25B9ED740();
  sub_25B976260((uint64_t)v1);
  return sub_25B9ED790();
}

uint64_t sub_25B9770B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B976AA0(a1, a2);
}

uint64_t sub_25B9770D0(void *a1)
{
  return sub_25B9767E0(a1);
}

uint64_t sub_25B9770EC()
{
  return sub_25B96E1F8(&qword_26A51B9F8, (void (*)(uint64_t))type metadata accessor for SessionConfigurationEnvelope);
}

unint64_t sub_25B977134()
{
  unint64_t result = qword_26A51BA08;
  if (!qword_26A51BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BA08);
  }
  return result;
}

unint64_t sub_25B977180()
{
  unint64_t result = qword_26A51BA10;
  if (!qword_26A51BA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BA10);
  }
  return result;
}

unint64_t sub_25B9771CC()
{
  unint64_t result = qword_26A51BA28;
  if (!qword_26A51BA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BA28);
  }
  return result;
}

uint64_t sub_25B977218(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25B95097C();
  sub_25B97B090();
  v4();
  return a2;
}

uint64_t sub_25B977270(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_25B9ECFF0();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 24))
  {
    sub_25B9ED760();
    swift_bridgeObjectRetain();
    sub_25B9ECFF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B9ED760();
  }
  uint64_t v4 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_25B979B64(a1, v4);
  swift_bridgeObjectRelease();
  sub_25B9ED760();
  swift_bridgeObjectRetain();
  sub_25B9ECFF0();
  swift_bridgeObjectRelease();
  sub_25B9ED750();
  return sub_25B9ED750();
}

BOOL sub_25B977360(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = sub_25B9ED6A0();
    BOOL result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = sub_25B9ED6A0(), BOOL result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if ((sub_25B978C30(*(void **)(a1 + 32), *(void **)(a2 + 32)) & 1) != 0
      && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0)
    {
      if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || *(void *)(a1 + 56) != *(void *)(a2 + 56))
      {
        char v12 = sub_25B9ED6A0();
        BOOL result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)(a1 + 64) == *(void *)(a2 + 64)) {
        return *(void *)(a1 + 72) == *(void *)(a2 + 72);
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_25B977460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x444970756F7267 && a2 == 0xE700000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x800000025B9F0770 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F0790 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x6C6F506568636163 && a2 == 0xEB00000000796369;
      if (v7 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x4965736143657375 && a2 == 0xE900000000000044;
        if (v8 || (sub_25B9ED6A0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
          if (v9 || (sub_25B9ED6A0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x800000025B9F07B0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v10 = sub_25B9ED6A0();
            swift_bridgeObjectRelease();
            if (v10) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_25B9777DC(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x444970756F7267;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6C6F506568636163;
      break;
    case 5:
      unint64_t result = 0x4965736143657375;
      break;
    case 6:
      unint64_t result = 0x666C616865426E6FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B977908(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_25B94E854(&qword_26A51BAD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25B94F2E0(a1, a1[3]);
  sub_25B97A470();
  sub_25B9ED7B0();
  LOBYTE(v11) = 0;
  sub_25B9ED610();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_25B9ED5E0();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[7] = 2;
    sub_25B94E854(&qword_26A51BAE8);
    sub_25B97A554(&qword_26A51BAF0, (void (*)(void))sub_25B97A4BC);
    sub_25B9ED660();
    LOBYTE(v11) = 3;
    sub_25B9ED620();
    LOBYTE(v11) = 4;
    sub_25B97A508();
    sub_25B9ED660();
    LOBYTE(v11) = 5;
    sub_25B9ED610();
    LOBYTE(v11) = 6;
    sub_25B9ED650();
    LOBYTE(v11) = 7;
    sub_25B9ED650();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25B977BB8()
{
  sub_25B9ED740();
  sub_25B977270((uint64_t)v1);
  return sub_25B9ED790();
}

uint64_t sub_25B977BF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51BB08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B97A470();
  sub_25B9ED7A0();
  if (v2)
  {
    sub_25B94F65C((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v32) = 0;
    uint64_t v9 = sub_25B9ED540();
    uint64_t v11 = v10;
    uint64_t v29 = v9;
    LOBYTE(v32) = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_25B9ED510();
    uint64_t v30 = v11;
    uint64_t v14 = v13;
    uint64_t v28 = v12;
    sub_25B94E854(&qword_26A51BAE8);
    char v31 = 2;
    sub_25B97A554(&qword_26A51BB10, (void (*)(void))sub_25B97A5C4);
    swift_bridgeObjectRetain();
    sub_25B9ED590();
    uint64_t v15 = v32;
    LOBYTE(v32) = 3;
    uint64_t v27 = v15;
    swift_bridgeObjectRetain();
    int v26 = sub_25B9ED550();
    LOBYTE(v32) = 4;
    sub_25B97A610();
    sub_25B9ED590();
    LOBYTE(v32) = 5;
    uint64_t v24 = sub_25B9ED540();
    uint64_t v25 = v16;
    LOBYTE(v32) = 6;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25B9ED580();
    uint64_t v17 = v25;
    LOBYTE(v32) = 7;
    uint64_t v18 = sub_25B9ED580();
    v26 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_25B94F65C((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v30;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v29;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 16) = v28;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v19;
    *(unsigned char *)(a2 + 40) = v26;
    *(void *)(a2 + 48) = v24;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v23;
    *(void *)(a2 + 72) = v18;
  }
  return result;
}

unint64_t sub_25B978130()
{
  return sub_25B9777DC(*v0);
}

uint64_t sub_25B978138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B977460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B978160(uint64_t a1)
{
  unint64_t v2 = sub_25B97A470();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B97819C(uint64_t a1)
{
  unint64_t v2 = sub_25B97A470();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9781D8()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_25B977BB8();
}

uint64_t sub_25B978214(uint64_t a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_25B977270(a1);
}

uint64_t sub_25B978258(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B9782B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B978304()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_25B9ED740();
  sub_25B977270((uint64_t)v2);
  return sub_25B9ED790();
}

void *sub_25B97835C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_25B977BF8(a1, (uint64_t)v5);
  if (!v2) {
    return memcpy(a2, v5, 0x50uLL);
  }
  return result;
}

uint64_t sub_25B9783A8(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_25B977908(a1);
}

BOOL sub_25B9783FC(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_25B977360((uint64_t)v4, (uint64_t)__dst);
}

uint64_t sub_25B978454(void *a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51BB78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B97AAC0();
  sub_25B9ED7B0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25B978564()
{
  return sub_25B9ED790();
}

uint64_t sub_25B97859C(uint64_t a1)
{
  return sub_25B94F65C(a1);
}

uint64_t sub_25B9785C4(uint64_t a1)
{
  unint64_t v2 = sub_25B97AAC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B978600(uint64_t a1)
{
  unint64_t v2 = sub_25B97AAC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B978644()
{
  return sub_25B9ED790();
}

uint64_t sub_25B978678(uint64_t a1)
{
  return sub_25B97859C(a1);
}

uint64_t sub_25B978690(void *a1)
{
  return sub_25B978454(a1);
}

uint64_t sub_25B9786A8()
{
  swift_bridgeObjectRetain();
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B978704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25B9ED6A0();
  }
}

uint64_t sub_25B978720(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B9787B4()
{
  return 0x696669746E656469;
}

uint64_t sub_25B9787D0(void *a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51BB38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B97A65C();
  sub_25B9ED7B0();
  sub_25B9ED610();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25B97890C()
{
  return sub_25B9ED790();
}

uint64_t sub_25B97896C(void *a1)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51BB28);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)sub_25B94F2E0(a1, a1[3]);
  sub_25B97A65C();
  sub_25B9ED7A0();
  if (!v1)
  {
    uint64_t v7 = sub_25B9ED540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_25B94F65C((uint64_t)a1);
  return v7;
}

uint64_t sub_25B978AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B978720(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B978AF4(uint64_t a1)
{
  unint64_t v2 = sub_25B97A65C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B978B30(uint64_t a1)
{
  unint64_t v2 = sub_25B97A65C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B978B6C()
{
  return sub_25B97890C();
}

uint64_t sub_25B978B74()
{
  return sub_25B9786A8();
}

uint64_t sub_25B978B7C()
{
  return sub_25B9ED790();
}

uint64_t sub_25B978BD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25B97896C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_25B978C00(void *a1)
{
  return sub_25B9787D0(a1);
}

uint64_t sub_25B978C1C(uint64_t *a1, uint64_t *a2)
{
  return sub_25B978704(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_25B978C30(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = sub_25B9ED6A0();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  BOOL v8 = a1 + 7;
  uint64_t v9 = a2 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      uint64_t result = sub_25B9ED6A0();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B978D00(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_25B978D1C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_25B9ECF20();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_25B94E854((uint64_t *)&unk_26A51BA90);
  int v47 = a2;
  uint64_t v8 = sub_25B9ED4B0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  long long v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    uint64_t v24 = *(void *)(v7 + 56);
    uint64_t v25 = v7;
    int v26 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = *(void *)(v46 + 72);
    uint64_t v30 = v24 + v29 * i;
    if (v47)
    {
      (*v14)(v48, v30, v49);
    }
    else
    {
      (*v45)(v48, v30, v49);
      swift_bridgeObjectRetain();
    }
    sub_25B9ED740();
    sub_25B9ECFF0();
    uint64_t result = sub_25B9ED790();
    uint64_t v31 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) == 0)
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v31) >> 6;
      while (++v33 != v36 || (v35 & 1) == 0)
      {
        BOOL v37 = v33 == v36;
        if (v33 == v36) {
          unint64_t v33 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v15 + 8 * v33);
        if (v38 != -1)
        {
          unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(void *)(v15 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    long long v39 = (void *)(*(void *)(v9 + 48) + 16 * v34);
    *long long v39 = v27;
    v39[1] = v28;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v29 * v34, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v25;
    if (v13) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_42;
    }
    if (v20 >= v43)
    {
      swift_release();
      uint64_t v3 = v42;
      uint64_t v21 = v44;
      goto LABEL_35;
    }
    uint64_t v21 = v44;
    unint64_t v22 = v44[v20];
    ++v17;
    if (!v22)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v43) {
        goto LABEL_33;
      }
      unint64_t v22 = v44[v17];
      if (!v22) {
        break;
      }
    }
LABEL_18:
    unint64_t v13 = (v22 - 1) & v22;
  }
  int64_t v23 = v20 + 2;
  if (v23 < v43)
  {
    unint64_t v22 = v44[v23];
    if (!v22)
    {
      while (1)
      {
        int64_t v17 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_43;
        }
        if (v17 >= v43) {
          goto LABEL_33;
        }
        unint64_t v22 = v44[v17];
        ++v23;
        if (v22) {
          goto LABEL_18;
        }
      }
    }
    int64_t v17 = v23;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v42;
LABEL_35:
  if (v47)
  {
    uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
    if (v40 >= 64) {
      sub_25B978D00(0, (unint64_t)(v40 + 63) >> 6, v21);
    }
    else {
      *uint64_t v21 = -1 << v40;
    }
    *(void *)(v7 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_25B9790F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25B94E854(&qword_26A51BA58);
  char v6 = a2;
  uint64_t v7 = sub_25B9ED4B0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v34 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      int64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      long long v35 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * i);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_25B96E1A0(v35, *((unint64_t *)&v35 + 1));
      }
      sub_25B9ED740();
      sub_25B9ECFF0();
      uint64_t result = sub_25B9ED790();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v12 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v31 = (void *)(*(void *)(v8 + 48) + 16 * v26);
      *uint64_t v31 = v22;
      v31[1] = v21;
      *(_OWORD *)(*(void *)(v8 + 56) + 16 * v26) = v35;
      ++*(void *)(v8 + 16);
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_39;
      }
      if (v17 >= v33) {
        goto LABEL_32;
      }
      unint64_t v18 = v34[v17];
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_32;
        }
        unint64_t v18 = v34[v14];
        if (!v18)
        {
          int64_t v19 = v17 + 2;
          if (v19 >= v33)
          {
LABEL_32:
            swift_release();
            uint64_t v3 = v2;
            if (v6)
            {
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                sub_25B978D00(0, (unint64_t)(v32 + 63) >> 6, v34);
              }
              else {
                *unint64_t v34 = -1 << v32;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v18 = v34[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v14 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_40;
              }
              if (v14 >= v33) {
                goto LABEL_32;
              }
              unint64_t v18 = v34[v14];
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          int64_t v14 = v19;
        }
      }
LABEL_18:
      unint64_t v11 = (v18 - 1) & v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

void sub_25B9793F8(uint64_t a1, char a2, void *a3)
{
  uint64_t v45 = a3;
  uint64_t v6 = sub_25B9ECF20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v44 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B94E854(&qword_26A51B758);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (void *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v37[0] = v3;
  v37[1] = a1;
  uint64_t v42 = (char *)v13 + *(int *)(v10 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v39 = *(void *)(v11 + 72);
  int64_t v43 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v40 = v7;
  uint64_t v41 = v6;
  uint64_t v38 = v13;
  while (1)
  {
    sub_25B979CC8(v15, (uint64_t)v13, &qword_26A51B758);
    uint64_t v16 = *v13;
    uint64_t v17 = v13[1];
    uint64_t v48 = *v13;
    uint64_t v49 = v17;
    unint64_t v18 = *v43;
    (*v43)(v44, v42, v6);
    int64_t v19 = (void *)*v45;
    unint64_t v21 = sub_25B991A30();
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_25B9ED6E0();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_25B94E854(&qword_26A51BAA0);
      sub_25B9ED460();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    unint64_t v28 = v44;
    BOOL v29 = (void *)*v45;
    *(void *)(*v45 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    uint64_t v30 = (void *)(v29[6] + 16 * v21);
    *uint64_t v30 = v16;
    v30[1] = v17;
    unint64_t v31 = v29[7] + *(void *)(v40 + 72) * v21;
    uint64_t v6 = v41;
    v18((char *)v31, v28, v41);
    uint64_t v32 = v29[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_18;
    }
    v29[2] = v34;
    unint64_t v13 = v38;
    v15 += v39;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_25B978D1C(v24, a2 & 1);
  unint64_t v26 = sub_25B991A30();
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  long long v35 = (void *)swift_allocError();
  swift_willThrow();
  id v50 = v35;
  id v36 = v35;
  sub_25B94E854(&qword_26A51BA68);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_25B9ED390();
  sub_25B9ED000();
  sub_25B9ED440();
  sub_25B9ED000();
  sub_25B9ED490();
  __break(1u);
}

void sub_25B979854(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v5 = 0;
  uint64_t v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_25B9ED6E0();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *(v6 - 1);
    unint64_t v7 = *v6;
    uint64_t v10 = *(v6 - 3);
    uint64_t v9 = *(v6 - 2);
    swift_bridgeObjectRetain();
    sub_25B96E1A0(v8, v7);
    if (!v9) {
      goto LABEL_18;
    }
    unint64_t v29 = v7;
    uint64_t v11 = (void *)*a3;
    unint64_t v13 = sub_25B991A30();
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      goto LABEL_21;
    }
    char v17 = v12;
    if (v11[3] < v16) {
      break;
    }
    if (a2)
    {
      if (v12) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_25B94E854(&qword_26A51BA60);
      sub_25B9ED460();
      if (v17) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    unint64_t v21 = (void *)(v20[6] + 16 * v13);
    *unint64_t v21 = v10;
    v21[1] = v9;
    uint64_t v22 = (uint64_t *)(v20[7] + 16 * v13);
    *uint64_t v22 = v8;
    v22[1] = v29;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_22;
    }
    ++v5;
    v20[2] = v25;
    v6 += 4;
    a2 = 1;
    if (v4 == v5) {
      goto LABEL_18;
    }
  }
  sub_25B9790F8(v16, a2 & 1);
  unint64_t v18 = sub_25B991A30();
  if ((v17 & 1) != (v19 & 1)) {
    goto LABEL_23;
  }
  unint64_t v13 = v18;
  if ((v17 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  unint64_t v26 = (void *)swift_allocError();
  swift_willThrow();
  id v27 = v26;
  sub_25B94E854(&qword_26A51BA68);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_25B955A74(v8, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_25B9ED390();
  sub_25B9ED000();
  sub_25B9ED440();
  sub_25B9ED000();
  sub_25B9ED490();
  __break(1u);
}

uint64_t sub_25B979B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_25B9ED750();
  if (v3)
  {
    uint64_t v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25B9ECFF0();
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_25B979BDC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25B979C5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25B96E1A0(a1, a2);
  }
  return a1;
}

uint64_t sub_25B979C70(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B979C9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B979CC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B94E854(a3);
  sub_25B95097C();
  sub_25B97B090();
  v4();
  return a2;
}

uint64_t sub_25B979D1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B94E854(a3);
  sub_25B95097C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for ModelBundleEnvelope(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ModelBundleEnvelope(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ModelBundleEnvelope(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelBundleEnvelope(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelBundleEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelBundleEnvelope()
{
  return &type metadata for ModelBundleEnvelope;
}

uint64_t getEnumTagSinglePayload for SessionConfigurationEnvelope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionConfigurationEnvelope.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B97A000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfigurationEnvelope.CodingKeys()
{
  return &type metadata for SessionConfigurationEnvelope.CodingKeys;
}

uint64_t destroy for TGSessionConfigurationEnvelope()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void *initializeWithTake for TGSessionConfigurationEnvelope(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TGSessionConfigurationEnvelope(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TGSessionConfigurationEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TGSessionConfigurationEnvelope()
{
  return &type metadata for TGSessionConfigurationEnvelope;
}

unint64_t sub_25B97A2E4()
{
  unint64_t result = qword_26A51BAB0;
  if (!qword_26A51BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAB0);
  }
  return result;
}

unint64_t sub_25B97A334()
{
  unint64_t result = qword_26A51BAB8;
  if (!qword_26A51BAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAB8);
  }
  return result;
}

unint64_t sub_25B97A384()
{
  unint64_t result = qword_26A51BAC0;
  if (!qword_26A51BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAC0);
  }
  return result;
}

unint64_t sub_25B97A3D4()
{
  unint64_t result = qword_26A51BAC8;
  if (!qword_26A51BAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAC8);
  }
  return result;
}

unint64_t sub_25B97A424()
{
  unint64_t result = qword_26A51BAD0;
  if (!qword_26A51BAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAD0);
  }
  return result;
}

unint64_t sub_25B97A470()
{
  unint64_t result = qword_26A51BAE0;
  if (!qword_26A51BAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAE0);
  }
  return result;
}

unint64_t sub_25B97A4BC()
{
  unint64_t result = qword_26A51BAF8;
  if (!qword_26A51BAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BAF8);
  }
  return result;
}

unint64_t sub_25B97A508()
{
  unint64_t result = qword_26A51BB00;
  if (!qword_26A51BB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB00);
  }
  return result;
}

uint64_t sub_25B97A554(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B9524FC(&qword_26A51BAE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B97A5C4()
{
  unint64_t result = qword_26A51BB18;
  if (!qword_26A51BB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB18);
  }
  return result;
}

unint64_t sub_25B97A610()
{
  unint64_t result = qword_26A51BB20;
  if (!qword_26A51BB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB20);
  }
  return result;
}

unint64_t sub_25B97A65C()
{
  unint64_t result = qword_26A51BB30;
  if (!qword_26A51BB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ModelBundleEnvelope.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B97A744);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelBundleEnvelope.CodingKeys()
{
  return &type metadata for ModelBundleEnvelope.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TGSessionConfigurationEnvelope.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B97A848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TGSessionConfigurationEnvelope.CodingKeys()
{
  return &type metadata for TGSessionConfigurationEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for CachePolicyEnvelope()
{
  return &type metadata for CachePolicyEnvelope;
}

unint64_t sub_25B97A894()
{
  unint64_t result = qword_26A51BB40;
  if (!qword_26A51BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB40);
  }
  return result;
}

unint64_t sub_25B97A8E4()
{
  unint64_t result = qword_26A51BB48;
  if (!qword_26A51BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB48);
  }
  return result;
}

unint64_t sub_25B97A934()
{
  unint64_t result = qword_26A51BB50;
  if (!qword_26A51BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB50);
  }
  return result;
}

unint64_t sub_25B97A984()
{
  unint64_t result = qword_26A51BB58;
  if (!qword_26A51BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB58);
  }
  return result;
}

unint64_t sub_25B97A9D4()
{
  unint64_t result = qword_26A51BB60;
  if (!qword_26A51BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB60);
  }
  return result;
}

unint64_t sub_25B97AA24()
{
  unint64_t result = qword_26A51BB68;
  if (!qword_26A51BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB68);
  }
  return result;
}

unint64_t sub_25B97AA74()
{
  unint64_t result = qword_26A51BB70;
  if (!qword_26A51BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB70);
  }
  return result;
}

unint64_t sub_25B97AAC0()
{
  unint64_t result = qword_26A51BB80;
  if (!qword_26A51BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB80);
  }
  return result;
}

ValueMetadata *type metadata accessor for CachePolicyEnvelope.CodingKeys()
{
  return &type metadata for CachePolicyEnvelope.CodingKeys;
}

unint64_t sub_25B97AB20()
{
  unint64_t result = qword_26A51BB88;
  if (!qword_26A51BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB88);
  }
  return result;
}

unint64_t sub_25B97AB70()
{
  unint64_t result = qword_26A51BB90;
  if (!qword_26A51BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BB90);
  }
  return result;
}

uint64_t sub_25B97AC08()
{
  return v0;
}

uint64_t sub_25B97AC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B955A74(*(void *)(a1 + a2), *(void *)(a1 + a2 + 8));
}

uint64_t sub_25B97AC24()
{
  return swift_beginAccess();
}

uint64_t sub_25B97AC44()
{
  return v0;
}

uint64_t sub_25B97AC5C()
{
  return v0;
}

uint64_t sub_25B97AC90()
{
  return v0;
}

id sub_25B97AC9C()
{
  return objc_allocWithZone(v0);
}

uint64_t sub_25B97ACB4()
{
  return swift_getObjectType();
}

uint64_t sub_25B97ACD0()
{
  return v0;
}

uint64_t sub_25B97ACEC()
{
  return sub_25B9EC3E0();
}

uint64_t sub_25B97AD24()
{
  return 0;
}

uint64_t sub_25B97AD40()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_25B97AD58()
{
  return sub_25B9EC3E0();
}

uint64_t sub_25B97AD84()
{
  return sub_25B9EC3F0();
}

uint64_t sub_25B97ADA8()
{
  return sub_25B9EC3F0();
}

void sub_25B97ADC8()
{
}

id sub_25B97ADE4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B96E904(a1, 0x7A6974696E61735FLL, 0xEA00000000007265, a4);
}

uint64_t sub_25B97AE00()
{
  return 0;
}

id sub_25B97AE1C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B96E904(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000, a4);
}

uint64_t sub_25B97AE24@<X0>(uint64_t a1@<X8>)
{
  int v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  return sub_25B96E1A0(v4, v5);
}

uint64_t sub_25B97AE44()
{
  return v0;
}

uint64_t sub_25B97AE74()
{
  return 0;
}

uint64_t sub_25B97AE80()
{
  return sub_25B979CC8(v0, v1, v2);
}

uint64_t sub_25B97AEB0()
{
  return sub_25B9EC3E0();
}

uint64_t sub_25B97AEDC()
{
  return sub_25B9EC3E0();
}

uint64_t sub_25B97AF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  return sub_25B96E1A0(v4, v5);
}

uint64_t sub_25B97AF28()
{
  return v0;
}

uint64_t sub_25B97AF48()
{
  return sub_25B9ECFC0();
}

uint64_t sub_25B97AF74()
{
  return v0;
}

void sub_25B97AF84(void *a1, void *a2)
{
}

id sub_25B97AF8C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B9715D4(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xE900000000000000, a4);
}

uint64_t sub_25B97AF94()
{
  return sub_25B9ECFC0();
}

uint64_t sub_25B97AFBC()
{
  return v0;
}

uint64_t sub_25B97AFD8()
{
  return v0;
}

void sub_25B97AFF4()
{
}

uint64_t sub_25B97AFFC()
{
  return type metadata accessor for SessionConfigurationEnvelope(0);
}

uint64_t sub_25B97B024()
{
  return MEMORY[0x270F7ECD0](0);
}

void sub_25B97B04C()
{
}

id sub_25B97B054(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25B96E904(a1, a2, 0xE600000000000000, a4);
}

uint64_t sub_25B97B05C()
{
  return v0;
}

uint64_t sub_25B97B084()
{
  return 0;
}

uint64_t sub_25B97B0C8()
{
  return sub_25B9ECFC0();
}

uint64_t sub_25B97B0EC(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_25B97B0F8()
{
  return v0;
}

uint64_t sub_25B97B128()
{
  return v0;
}

uint64_t sub_25B97B134()
{
  return v0;
}

uint64_t sub_25B97B140()
{
  return v0;
}

uint64_t sub_25B97B158()
{
  return sub_25B9ECFC0();
}

void sub_25B97B178()
{
  uint64_t v2 = *(void *)(v1 - 112);
  *(void *)(v1 - 104) = v0;
  *(void *)(v1 - 96) = v2;
}

void sub_25B97B184(uint64_t a1@<X8>)
{
  unint64_t v5 = &v1[a1];
  *(void *)unint64_t v5 = v2;
  *((void *)v5 + 1) = v3;
}

void sub_25B97B19C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = &v3[a3];
  *(void *)unint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
}

uint64_t sub_25B97B1C8()
{
  return sub_25B9EC3F0();
}

uint64_t sub_25B97B1E8()
{
  return 0;
}

uint64_t sub_25B97B1F4()
{
  return v0;
}

uint64_t sub_25B97B208()
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 0, 1, v2);
  return v1;
}

uint64_t sub_25B97B234()
{
  return sub_25B955A74(v0, v1);
}

void GenerativeExperiencesSessionClient.__allocating_init(_:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_25B97AC90();
  GenerativeExperiencesSessionClient.init(_:)();
}

void GenerativeExperiencesSessionClient.__allocating_init(identifer:)()
{
  sub_25B9594D0();
  id v1 = objc_allocWithZone(v0);
  sub_25B9953E0();
  GenerativeExperiencesSessionClient.init(identifer:)();
}

uint64_t sub_25B97B2B8(uint64_t a1)
{
  uint64_t v14 = sub_25B9EC4B0();
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    v12[1] = v1;
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_25B9926FC();
    uint64_t v7 = v15;
    uint64_t v8 = *(void *)(sub_25B9EC4D0() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    do
    {
      sub_25B9EC4C0();
      uint64_t v15 = v7;
      unint64_t v10 = *(void *)(v7 + 16);
      if (v10 >= *(void *)(v7 + 24) >> 1)
      {
        sub_25B9926FC();
        uint64_t v7 = v15;
      }
      *(void *)(v7 + 16) = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v10, v5, v14);
      v9 += v13;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_25B97B4A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51B698);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 32) != 1)
  {
    unint64_t v9 = *(void *)(v1 + 8);
    unint64_t v10 = *(void *)(*(void *)v1 + 16);
    if (v9 != v10)
    {
      if (v9 >= v10)
      {
        __break(1u);
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v4 + 16);
        unint64_t v12 = *(void *)v1
            + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
            + *(void *)(v4 + 72) * v9;
        *(void *)(v1 + 8) = v9 + 1;
        uint64_t result = v11(v7, v12, v3);
        uint64_t v14 = *(void *)(v1 + 16);
        unint64_t v13 = *(void *)(v1 + 24);
        unint64_t v15 = *(void *)(v14 + 16);
        if (v13 == v15)
        {
          (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
          goto LABEL_9;
        }
        if (v13 < v15)
        {
          uint64_t v19 = *(void *)(sub_25B94E854(&qword_26A51BD50) - 8);
          unint64_t v20 = v13 + 1;
          uint64_t v21 = v14
              + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
              + *(void *)(v19 + 72) * v13;
          *(void *)(v1 + 24) = v20;
          uint64_t v22 = sub_25B94E854(&qword_26A51BF90);
          uint64_t v23 = a1 + *(int *)(v22 + 48);
          (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
          sub_25B994A10(v21, v23, &qword_26A51BD50);
          uint64_t v17 = a1;
          uint64_t v18 = 0;
          uint64_t v16 = v22;
          return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v17, v18, 1, v16);
        }
      }
      __break(1u);
      return result;
    }
LABEL_9:
    *(unsigned char *)(v1 + 32) = 1;
    uint64_t v16 = sub_25B94E854(&qword_26A51BF90);
    uint64_t v17 = a1;
    uint64_t v18 = 1;
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v17, v18, 1, v16);
  }
  uint64_t v8 = sub_25B94E854(&qword_26A51BF90);
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v8);
}

void *sub_25B97B718()
{
  qword_26A51BC00 = (uint64_t)&unk_270932860;
  return &unk_270932860;
}

id static GenerativeExperiencesSessionXPCService.interface.getter()
{
  if (qword_26A51AFF8 != -1) {
    swift_once();
  }
  sub_25B960750();
  uint64_t v0 = (void *)qword_26A51BC00;
  return v0;
}

void static GenerativeExperiencesSessionXPCService.interface.setter(uint64_t a1)
{
  if (qword_26A51AFF8 != -1) {
    swift_once();
  }
  sub_25B995018();
  uint64_t v2 = (void *)qword_26A51BC00;
  qword_26A51BC00 = a1;
}

uint64_t (*static GenerativeExperiencesSessionXPCService.interface.modify())()
{
  if (qword_26A51AFF8 != -1) {
    swift_once();
  }
  sub_25B96D9C4();
  return j_j__swift_endAccess;
}

uint64_t static GenerativeExperiencesSessionXPCService.serviceName.getter()
{
  return sub_25B995628();
}

uint64_t static GenerativeExperiencesSessionXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B995620(a1, a2, qword_26A51BC08);
}

uint64_t (*static GenerativeExperiencesSessionXPCService.serviceName.modify())()
{
  return j__swift_endAccess;
}

uint64_t static GenerativeExperiencesSessionXPCService.entitlementName.getter()
{
  return sub_25B995628();
}

uint64_t sub_25B97B914()
{
  return sub_25B995998();
}

uint64_t static GenerativeExperiencesSessionXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B995620(a1, a2, qword_26A51BC18);
}

uint64_t sub_25B97B968(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_25B995D20();
  sub_25B995018();
  *a3 = v5;
  *a4 = v4;
  return swift_bridgeObjectRelease();
}

uint64_t (*static GenerativeExperiencesSessionXPCService.entitlementName.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25B97BA0C()
{
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9604A4(v0, qword_26A51BC28);
  uint64_t v1 = sub_25B9559F0(v0, (uint64_t)qword_26A51BC28);
  if (qword_26A51B020 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9559F0(v0, (uint64_t)qword_26A51C1A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static GenerativeExperiencesSessionXPCService.logger.getter()
{
  if (qword_26A51B000 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51BC28);
  sub_25B960750();
  sub_25B97AD18();
  sub_25B96D8F8();
  return v1();
}

uint64_t static GenerativeExperiencesSessionXPCService.logger.setter()
{
  if (qword_26A51B000 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51BC28);
  sub_25B96D9C4();
  uint64_t v1 = sub_25B9953E0();
  v2(v1);
  swift_endAccess();
  uint64_t v3 = sub_25B9593F8();
  return v4(v3);
}

uint64_t (*static GenerativeExperiencesSessionXPCService.logger.modify())()
{
  if (qword_26A51B000 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51BC28);
  sub_25B96D9C4();
  return j_j__swift_endAccess;
}

void sub_25B97BCF8()
{
  qword_26A51BC40 = MEMORY[0x263F8EE78];
}

uint64_t static GenerativeExperiencesSessionXPCService.selectorClasses.getter()
{
  if (qword_26A51B008 != -1) {
    swift_once();
  }
  sub_25B960750();
  return swift_bridgeObjectRetain();
}

uint64_t static GenerativeExperiencesSessionXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_26A51B008 != -1) {
    swift_once();
  }
  sub_25B995018();
  qword_26A51BC40 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static GenerativeExperiencesSessionXPCService.selectorClasses.modify())()
{
  if (qword_26A51B008 != -1) {
    swift_once();
  }
  sub_25B96D9C4();
  return j_j__swift_endAccess;
}

void static GenerativeExperiencesSessionXPCService.customize(serverInterface:)(void *a1)
{
  id v186 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270931930);
  sub_25B97E120(0, &qword_26B34AA28);
  sub_25B94E854(&qword_26B34AA60);
  uint64_t v1 = (__n128 *)sub_25B994CDC();
  sub_25B994E4C(v1, (__n128)xmmword_25B9F76E0);
  uint64_t v2 = type metadata accessor for DocumentRegistrationXPCResponse();
  v1[3].n128_u64[1] = sub_25B94E854(&qword_26A51BC48);
  v1[2].n128_u64[0] = v2;
  uint64_t v3 = sub_25B97E120(0, (unint64_t *)&qword_26A51B448);
  uint64_t v4 = sub_25B94E854(&qword_26A51BC50);
  v1[5].n128_u64[1] = v4;
  v1[4].n128_u64[0] = v3;
  uint64_t v183 = v3;
  uint64_t v5 = (void *)MEMORY[0x26116C6F0](v1);
  sub_25B97E120(0, &qword_26B34AA48);
  sub_25B97E0C0();
  uint64_t v6 = sub_25B9ED1F0();

  sub_25B97D390(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_25B9ED1E0();
  swift_bridgeObjectRelease();
  sub_25B995C28(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v7, (uint64_t)sel_sessionDidProduceDocumentRegistrationStatusFor_documentID_registrationStatus_isComplete_);

  uint64_t v8 = (__n128 *)sub_25B994CDC();
  sub_25B994E4C(v8, (__n128)xmmword_25B9F76E0);
  uint64_t v9 = type metadata accessor for CompletePromptResponseElementXPCEnvelope();
  uint64_t v10 = sub_25B94E854(&qword_26A51BC58);
  v8[2].n128_u64[0] = v9;
  v8[5].n128_u64[1] = v4;
  v8[3].n128_u64[1] = v10;
  v8[4].n128_u64[0] = v3;
  uint64_t v11 = (void *)MEMORY[0x26116C6F0](v8);
  uint64_t v12 = sub_25B9ED1F0();

  sub_25B97D390(v12);
  swift_bridgeObjectRelease();
  unint64_t v13 = (void *)sub_25B9ED1E0();
  swift_bridgeObjectRelease();
  sub_25B995384(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v13, (uint64_t)sel_sessionDidProduceCompletionResponseFor_element_isComplete_);

  uint64_t v14 = (__n128 *)sub_25B994CDC();
  sub_25B994E4C(v14, (__n128)xmmword_25B9F76E0);
  uint64_t v15 = type metadata accessor for GenerativeErrorXPCEnvelope();
  uint64_t v16 = sub_25B94E854(&qword_26A51BC60);
  v14[2].n128_u64[0] = v15;
  v14[5].n128_u64[1] = v4;
  v14[3].n128_u64[1] = v16;
  v14[4].n128_u64[0] = v183;
  uint64_t v17 = (void *)MEMORY[0x26116C6F0](v14);
  uint64_t v18 = sub_25B9ED1F0();

  sub_25B97D390(v18);
  sub_25B995C40();
  uint64_t v19 = (void *)sub_25B9ED1E0();
  swift_bridgeObjectRelease();
  sub_25B995384(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v19, (uint64_t)sel_sessionDidEncounterCompletionErrorFor_generativeError_);

  unint64_t v20 = (__n128 *)sub_25B994CDC();
  __n128 v21 = sub_25B9950D8(v20);
  v22[4] = v15;
  v22[11] = v4;
  v22[7] = v16;
  v22[8] = v183;
  uint64_t v23 = (void *)MEMORY[0x26116C6F0](v21);
  sub_25B9957F0();
  uint64_t v24 = (void *)sub_25B9ED1F0();

  uint64_t v25 = (void *)sub_25B97D390((uint64_t)v24);
  swift_bridgeObjectRelease();
  sub_25B9ED1E0();
  sub_25B995C40();
  sub_25B995C28(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v24, (uint64_t)sel_sessionDidEncounterRegistrationErrorFor_documentID_generativeError_);

  uint64_t v26 = sub_25B994CDC();
  sub_25B994C64(v26);
  uint64_t v27 = type metadata accessor for CompletePromptResponseXPCEnvelope();
  uint64_t v28 = sub_25B94E854(&qword_26A51BC68);
  v25[4] = v27;
  v25[11] = v4;
  v25[7] = v28;
  v25[8] = v183;
  unint64_t v29 = (void *)MEMORY[0x26116C6F0](v25);
  uint64_t v30 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v30);
  swift_bridgeObjectRelease();
  sub_25B99598C();
  sub_25B9ED1E0();
  sub_25B995C40();
  sub_25B995384(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, (uint64_t)sel_sessionDidProduceOneShotCompletionFor_completion_);

  unint64_t v31 = (__n128 *)sub_25B994CDC();
  __n128 v32 = sub_25B9950D8(v31);
  v33[4] = v15;
  v33[11] = v4;
  v33[7] = v16;
  v33[8] = v183;
  uint64_t v34 = (void *)MEMORY[0x26116C6F0](v32);
  long long v35 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v35);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995384(v186, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v35, (uint64_t)sel_sessionDidProduceOneShotCompletionErrorFor_generativeError_);

  uint64_t v36 = sub_25B994CDC();
  sub_25B994C64(v36);
  uint64_t v180 = type metadata accessor for SessionConfigurationXPCEnvelope();
  uint64_t v181 = sub_25B94E854(&qword_26A51BC70);
  v34[4] = v180;
  v34[11] = v4;
  v34[7] = v181;
  v34[8] = v183;
  BOOL v37 = (void *)MEMORY[0x26116C6F0](v34);
  uint64_t v38 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v38);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(a1, sel_setClasses_forSelector_argumentIndex_ofReply_, v38);

  uint64_t v39 = sub_25B994CDC();
  sub_25B994C64(v39);
  uint64_t v178 = type metadata accessor for ChatMessagesXPCEnvelope();
  uint64_t v179 = sub_25B94E854(&qword_26A51BC78);
  v37[4] = v178;
  v37[11] = v4;
  uint64_t v184 = v4;
  sub_25B995B84(v179);
  uint64_t v41 = v40;
  sub_25B9957F0();
  uint64_t v42 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v42);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995384(a1, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v42, (uint64_t)sel_completeStreamWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_);

  uint64_t v43 = sub_25B994CDC();
  sub_25B994C64(v43);
  uint64_t v176 = type metadata accessor for TemplateXPCEnvelope();
  uint64_t v177 = sub_25B94E854(&qword_26A51BC80);
  v41[4] = v176;
  v41[11] = v4;
  sub_25B995B84(v177);
  uint64_t v45 = v44;
  uint64_t v46 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v46);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995C28(a1, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v46, (uint64_t)sel_completeStreamWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_);

  unint64_t v47 = (__n128 *)swift_allocObject();
  sub_25B994E4C(v47, (__n128)xmmword_25B9F76F0);
  uint64_t v174 = type metadata accessor for BindingVariablesXPCEnvelope();
  uint64_t v175 = sub_25B94E854(&qword_26A51BC88);
  v47[3].n128_u64[1] = v175;
  v47[2].n128_u64[0] = v174;
  uint64_t v172 = sub_25B97E120(0, &qword_26A51BC90);
  uint64_t v173 = sub_25B94E854(&qword_26A51BC98);
  v47[5].n128_u64[1] = v173;
  v47[4].n128_u64[0] = v172;
  uint64_t v170 = sub_25B97E120(0, &qword_26A51BCA0);
  uint64_t v171 = sub_25B94E854(&qword_26A51BCA8);
  v47[6].n128_u64[0] = v170;
  v47[9].n128_u64[1] = v4;
  v47[7].n128_u64[1] = v171;
  v47[8].n128_u64[0] = v183;
  uint64_t v48 = (void *)MEMORY[0x26116C6F0](v47);
  uint64_t v49 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v49);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  [v50 v51];

  uint64_t v52 = (__n128 *)sub_25B995B2C();
  sub_25B994E4C(v52, (__n128)xmmword_25B9F7700);
  uint64_t v168 = type metadata accessor for DocumentIdentifierXPCEnvelope();
  uint64_t v169 = sub_25B94E854(&qword_26A51BCB0);
  v52[3].n128_u64[1] = v169;
  v52[2].n128_u64[0] = v168;
  uint64_t v53 = (void *)sub_25B97E120(0, &qword_26B34AA30);
  uint64_t v182 = sub_25B94E854(&qword_26B34AA38);
  v52[4].n128_u64[0] = (unint64_t)v53;
  v52[7].n128_u64[1] = v4;
  v52[5].n128_u64[1] = v182;
  v52[6].n128_u64[0] = v183;
  uint64_t v54 = (void *)MEMORY[0x26116C6F0](v52);
  uint64_t v55 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v55);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  [v56 v57];

  unint64_t v58 = (__n128 *)sub_25B995B2C();
  sub_25B994E4C(v58, (__n128)xmmword_25B9F7700);
  uint64_t v167 = type metadata accessor for ToolTypeXPCEnvelope();
  uint64_t v166 = sub_25B94E854(&qword_26A51BCB8);
  v58[2].n128_u64[0] = v167;
  v58[3].n128_u64[1] = v166;
  v58[4].n128_u64[0] = (unint64_t)v53;
  v58[7].n128_u64[1] = v4;
  v58[5].n128_u64[1] = v182;
  v58[6].n128_u64[0] = v183;
  uint64_t v59 = (void *)MEMORY[0x26116C6F0](v58);
  uint64_t v60 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v60);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  [v61 v62];

  uint64_t v63 = sub_25B994CDC();
  sub_25B994C64(v63);
  uint64_t v164 = type metadata accessor for ToolChoiceXPCEnvelope();
  uint64_t v165 = sub_25B94E854(&qword_26A51BCC0);
  v59[4] = v164;
  v59[11] = v4;
  v59[7] = v165;
  v59[8] = v183;
  uint64_t v64 = (void *)MEMORY[0x26116C6F0](v59);
  uint64_t v65 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v65);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(a1, sel_setClasses_forSelector_argumentIndex_ofReply_, v65, sel_completeStreamWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 6, 0);

  uint64_t v66 = sub_25B994CDC();
  sub_25B994C64(v66);
  uint64_t v162 = type metadata accessor for SamplingParametersXPCEnvelope();
  uint64_t v163 = sub_25B94E854(&qword_26A51BCC8);
  v64[4] = v162;
  v64[11] = v4;
  sub_25B995B84(v163);
  uint64_t v68 = v67;
  unint64_t v69 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v69);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  uint64_t v70 = (void *)sub_25B9957E0();
  [v70 v71];

  uint64_t v72 = sub_25B994CDC();
  sub_25B994C64(v72);
  uint64_t v160 = type metadata accessor for SchemaXPCEnvelope();
  uint64_t v161 = sub_25B94E854(&qword_26A51BCD0);
  v68[4] = v160;
  v68[11] = v4;
  sub_25B995B84(v161);
  uint64_t v74 = v73;
  uint64_t v75 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v75);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  uint64_t v76 = (void *)sub_25B9957E0();
  [v76 v77];

  uint64_t v78 = sub_25B994CDC();
  sub_25B994C64(v78);
  uint64_t v158 = type metadata accessor for StringRenderedPromptSanitizerXPCEnvelope();
  uint64_t v159 = sub_25B94E854(&qword_26A51BCD8);
  v74[4] = v158;
  v74[11] = v4;
  v74[7] = v159;
  v74[8] = v183;
  uint64_t v79 = (void *)MEMORY[0x26116C6F0](v74);
  uint64_t v80 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v80);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  uint64_t v81 = (void *)sub_25B9957E0();
  [v81 v82];

  uint64_t v83 = sub_25B994CDC();
  sub_25B994C64(v83);
  v156 = (void *)type metadata accessor for StringResponseSanitizerXPCEnvelope();
  uint64_t v157 = sub_25B94E854(&qword_26A51BCE0);
  v79[4] = v156;
  v79[11] = v4;
  v79[7] = v157;
  v79[8] = v183;
  uint64_t v84 = (void *)MEMORY[0x26116C6F0](v79);
  uint64_t v85 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v85);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  uint64_t v86 = (void *)sub_25B995740();
  [v86 v87];

  objc_msgSend(v156, sel_setInterface_forSelector_argumentIndex_ofReply_, v186, sel_completeStreamWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 13, 0);
  uint64_t v88 = sub_25B994CDC();
  *(_OWORD *)(v88 + 16) = xmmword_25B9F76E0;
  *(void *)(v88 + 32) = v180;
  *(void *)(v88 + 88) = v4;
  *(void *)(v88 + 56) = v181;
  *(void *)(v88 + 64) = v183;
  uint64_t v89 = (void *)MEMORY[0x26116C6F0]();
  unint64_t v90 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v90);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  [v91 v92];

  uint64_t v93 = (__n128 *)sub_25B994CDC();
  __n128 v94 = sub_25B9950D8(v93);
  v95[4] = v178;
  v95[11] = v4;
  v95[7] = v179;
  v95[8] = v183;
  uint64_t v96 = (void *)MEMORY[0x26116C6F0](v94);
  uint64_t v97 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v97);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  sub_25B995384(v98, v99, v100, v101);

  uint64_t v102 = (__n128 *)sub_25B994CDC();
  sub_25B9950D8(v102);
  uint64_t v104 = sub_25B9957B0(v103, v176);
  *(void *)(v104 + 56) = v177;
  *(void *)(v104 + 64) = v183;
  MEMORY[0x26116C6F0]();
  uint64_t v105 = (void *)sub_25B9959A4();

  sub_25B97D390((uint64_t)v105);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995C28(v156, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v105, (uint64_t)sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_);

  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_25B9F76F0;
  *(void *)(v106 + 32) = v174;
  *(void *)(v106 + 56) = v175;
  *(void *)(v106 + 64) = v172;
  *(void *)(v106 + 88) = v173;
  *(void *)(v106 + 96) = v170;
  *(void *)(v106 + 152) = v4;
  *(void *)(v106 + 120) = v171;
  *(void *)(v106 + 128) = v183;
  MEMORY[0x26116C6F0]();
  uint64_t v107 = (void *)sub_25B9959A4();

  sub_25B97D390((uint64_t)v107);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(v156, sel_setClasses_forSelector_argumentIndex_ofReply_, v107, sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 3, 0);

  uint64_t v108 = sub_25B995B2C();
  *(_OWORD *)(v108 + 16) = xmmword_25B9F7700;
  *(void *)(v108 + 32) = v168;
  *(void *)(v108 + 56) = v169;
  *(void *)(v108 + 64) = v53;
  *(void *)(v108 + 120) = v4;
  *(void *)(v108 + 88) = v182;
  *(void *)(v108 + 96) = v183;
  MEMORY[0x26116C6F0]();
  uint64_t v109 = (void *)sub_25B9959A4();

  sub_25B97D390((uint64_t)v109);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(a1, sel_setClasses_forSelector_argumentIndex_ofReply_, v109, sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 4, 0);

  uint64_t v110 = sub_25B995B2C();
  *(_OWORD *)(v110 + 16) = xmmword_25B9F7700;
  *(void *)(v110 + 32) = v167;
  *(void *)(v110 + 56) = v166;
  *(void *)(v110 + 64) = v53;
  *(void *)(v110 + 120) = v4;
  *(void *)(v110 + 88) = v182;
  *(void *)(v110 + 96) = v183;
  uint64_t v111 = (void *)MEMORY[0x26116C6F0]();
  v112 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v112);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  uint64_t v113 = (void *)sub_25B995740();
  [v113 v114];

  uint64_t v115 = (__n128 *)sub_25B994CDC();
  sub_25B9950D8(v115);
  uint64_t v117 = sub_25B9957B0(v116, v164);
  *(void *)(v117 + 56) = v165;
  *(void *)(v117 + 64) = v183;
  uint64_t v118 = (void *)MEMORY[0x26116C6F0]();
  v119 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v119);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(v53, sel_setClasses_forSelector_argumentIndex_ofReply_, v119, sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 6, 0);

  v120 = (__n128 *)sub_25B994CDC();
  __n128 v121 = sub_25B9950D8(v120);
  v122[4] = v162;
  v122[11] = v4;
  v122[7] = v163;
  v122[8] = v183;
  uint64_t v123 = (void *)MEMORY[0x26116C6F0](v121);
  uint64_t v124 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v124);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  objc_msgSend(v53, sel_setClasses_forSelector_argumentIndex_ofReply_, v124, sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 7, 0);

  v125 = (__n128 *)sub_25B994CDC();
  __n128 v126 = sub_25B9950D8(v125);
  v127[4] = v160;
  v127[11] = v4;
  v127[7] = v161;
  v127[8] = v183;
  v128 = (void *)MEMORY[0x26116C6F0](v126);
  v129 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v129);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  v130 = sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_;
  objc_msgSend(v53, sel_setClasses_forSelector_argumentIndex_ofReply_, v129, sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, 8, 0);

  v131 = (__n128 *)sub_25B994CDC();
  sub_25B9950D8(v131);
  uint64_t v133 = sub_25B9957B0(v132, v158);
  *(void *)(v133 + 56) = v159;
  *(void *)(v133 + 64) = v183;
  v134 = (void *)MEMORY[0x26116C6F0]();
  sub_25B9957F0();
  v135 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v135);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  sub_25B995568();
  [v136 v137];

  v138 = (__n128 *)sub_25B994CDC();
  sub_25B9950D8(v138);
  uint64_t v140 = sub_25B9957B0(v139, (uint64_t)v156);
  *(void *)(v140 + 56) = v157;
  *(void *)(v140 + 64) = v183;
  v141 = (void *)MEMORY[0x26116C6F0]();
  v142 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v142);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B994CC4();
  v143 = (void *)sub_25B995740();
  [v143 v144];

  objc_msgSend(v130, sel_setInterface_forSelector_argumentIndex_ofReply_, v186, v130, 13, 0);
  uint64_t v145 = sub_25B994CDC();
  *(_OWORD *)(v145 + 16) = xmmword_25B9F76E0;
  uint64_t v146 = sub_25B9957B0(v145, v180);
  *(void *)(v146 + 56) = v181;
  *(void *)(v146 + 64) = v183;
  v147 = (void *)MEMORY[0x26116C6F0]();
  uint64_t v148 = sub_25B9ED1F0();

  sub_25B97D390(v148);
  sub_25B994C78();
  sub_25B9ED1E0();
  sub_25B995C40();
  objc_msgSend(v130, sel_setClasses_forSelector_argumentIndex_ofReply_, v130, sel_registerWithConfiguration_documents_requestUUID_delegate_, 0, 0);

  uint64_t v149 = swift_allocObject();
  *(_OWORD *)(v149 + 16) = xmmword_25B9F7710;
  *(void *)(v149 + 56) = v182;
  *(void *)(v149 + 32) = v53;
  uint64_t v150 = type metadata accessor for DocumentXPCEnvelope(0);
  *(void *)(v149 + 88) = sub_25B94E854(&qword_26A51BCE8);
  *(void *)(v149 + 64) = v150;
  uint64_t v151 = sub_25B97E120(0, &qword_26A51BCF0);
  *(void *)(v149 + 120) = sub_25B94E854(&qword_26A51BCF8);
  *(void *)(v149 + 96) = v151;
  uint64_t v152 = sub_25B97E120(0, (unint64_t *)&qword_26A51B918);
  uint64_t v153 = sub_25B94E854(&qword_26A51BD00);
  *(void *)(v149 + 128) = v152;
  *(void *)(v149 + 184) = v184;
  *(void *)(v149 + 152) = v153;
  *(void *)(v149 + 160) = v183;
  v154 = (void *)MEMORY[0x26116C6F0](v149);
  v155 = (void *)sub_25B9ED1F0();

  sub_25B97D390((uint64_t)v155);
  swift_bridgeObjectRelease();
  sub_25B9ED1E0();
  sub_25B97AC90();
  swift_bridgeObjectRelease();
  sub_25B995384(sel_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v155, (uint64_t)sel_registerWithConfiguration_documents_requestUUID_delegate_);

  +[completeWithConfiguration:query:template:bindingVariables:documents:tools:toolChoice:parameters:schema:promptSanitizer:responseSanitizer:clientRequestID:requestUUID:delegate: setInterface:v186 forSelector:sel_registerWithConfiguration_documents_requestUUID_delegate_ argumentIndex:3 ofReply:0];
}

uint64_t sub_25B97D390(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_25B9ED330()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_25B94E854(&qword_26B34AA50);
  sub_25B97AC90();
  uint64_t v3 = sub_25B9ED380();
  if (v2)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25B9ED320();
    sub_25B97E120(0, &qword_26B34AA48);
    sub_25B97E0C0();
    uint64_t result = sub_25B9ED210();
    uint64_t v1 = v34;
    uint64_t v30 = v35;
    uint64_t v5 = v36;
    int64_t v6 = v37;
    unint64_t v7 = v38;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
  uint64_t v30 = v1 + 56;
  uint64_t v5 = ~v8;
  uint64_t v9 = -v8;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v7 = v10 & *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v6 = 0;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 56;
  if (v1 < 0) {
    goto LABEL_14;
  }
LABEL_12:
  if (v7)
  {
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v13 = v12 | (v6 << 6);
    goto LABEL_32;
  }
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 < v29)
    {
      unint64_t v16 = *(void *)(v30 + 8 * v15);
      int64_t v17 = v6 + 1;
      if (v16) {
        goto LABEL_31;
      }
      int64_t v17 = v6 + 2;
      if (v6 + 2 < v29)
      {
        unint64_t v16 = *(void *)(v30 + 8 * v17);
        if (v16) {
          goto LABEL_31;
        }
        int64_t v17 = v6 + 3;
        if (v6 + 3 < v29)
        {
          unint64_t v16 = *(void *)(v30 + 8 * v17);
          if (v16) {
            goto LABEL_31;
          }
          int64_t v17 = v6 + 4;
          if (v6 + 4 < v29)
          {
            unint64_t v16 = *(void *)(v30 + 8 * v17);
            if (v16) {
              goto LABEL_31;
            }
            int64_t v17 = v6 + 5;
            if (v6 + 5 < v29)
            {
              unint64_t v16 = *(void *)(v30 + 8 * v17);
              if (!v16)
              {
                int64_t v18 = v6 + 6;
                while (v18 < v29)
                {
                  unint64_t v16 = *(void *)(v30 + 8 * v18++);
                  if (v16)
                  {
                    int64_t v17 = v18 - 1;
                    goto LABEL_31;
                  }
                }
                goto LABEL_44;
              }
LABEL_31:
              unint64_t v7 = (v16 - 1) & v16;
              unint64_t v13 = __clz(__rbit64(v16)) + (v17 << 6);
              int64_t v6 = v17;
LABEL_32:
              id v19 = *(id *)(*(void *)(v1 + 48) + 8 * v13);
              while (1)
              {
                sub_25B97E120(0, &qword_26B34AA48);
                swift_dynamicCast();
                uint64_t result = sub_25B9ED350();
                uint64_t v20 = -1 << *(unsigned char *)(v3 + 32);
                unint64_t v21 = result & ~v20;
                unint64_t v22 = v21 >> 6;
                if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0) {
                  break;
                }
                unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_42:
                *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
                uint64_t v28 = *(void *)(v3 + 48) + 40 * v23;
                *(_OWORD *)uint64_t v28 = v31;
                *(_OWORD *)(v28 + 16) = v32;
                *(void *)(v28 + 32) = v33;
                ++*(void *)(v3 + 16);
                if ((v1 & 0x8000000000000000) == 0) {
                  goto LABEL_12;
                }
LABEL_14:
                uint64_t v14 = sub_25B9ED340();
                if (!v14) {
                  goto LABEL_44;
                }
                *(void *)&long long v31 = v14;
                sub_25B97E120(0, &qword_26B34AA48);
                swift_dynamicCast();
              }
              char v24 = 0;
              unint64_t v25 = (unint64_t)(63 - v20) >> 6;
              while (++v22 != v25 || (v24 & 1) == 0)
              {
                BOOL v26 = v22 == v25;
                if (v22 == v25) {
                  unint64_t v22 = 0;
                }
                v24 |= v26;
                uint64_t v27 = *(void *)(v11 + 8 * v22);
                if (v27 != -1)
                {
                  unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
                  goto LABEL_42;
                }
              }
              __break(1u);
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_44:
    swift_release();
    sub_25B96D46C();
    return v3;
  }
LABEL_46:
  __break(1u);
  return result;
}

void GenerativeExperiencesSessionClient.__allocating_init(_:_:)()
{
  sub_25B995D20();
  id v1 = objc_allocWithZone(v0);
  sub_25B99591C();
  GenerativeExperiencesSessionClient.init(_:_:)();
}

void GenerativeExperiencesSessionClient.init(_:_:)()
{
  void (*v2)(void *__return_ptr);
  void (*v3)(void *__return_ptr);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void v15[5];
  objc_super v16;

  sub_25B9958CC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int64_t v6 = type metadata accessor for SessionConfiguration();
  unint64_t v7 = sub_25B96068C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25B959398();
  sub_25B995C78(OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client);
  uint64_t v8 = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests] = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest] = v8;
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests] = v8;
  sub_25B961BAC(v5, v1);
  type metadata accessor for GenerativeExperiencesSessionClientData(0);
  sub_25B995854();
  uint64_t v9 = v0;
  sub_25B9653E8();
  if (v10)
  {
    *(void *)&v9[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData] = v10;

    v16.receiver = v9;
    v16.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
    uint64_t v11 = objc_msgSendSuper2(&v16, sel_init);
    sub_25B97E180(&qword_26A51BD30, v12, (void (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient);
    unint64_t v13 = v11;
    v3(v15);

    sub_25B964D10(v5);
    uint64_t v14 = (uint64_t)v13 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
    sub_25B96D9C4();
    sub_25B9949A8((uint64_t)v15, v14, &qword_26A51BD38);
    swift_endAccess();
    sub_25B995938();
  }
  else
  {
    __break(1u);
  }
}

void GenerativeExperiencesSessionClient.init(_:)()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for SessionConfiguration();
  uint64_t v4 = sub_25B96068C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25B97AE5C();
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client];
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(void *)(v5 + 32) = 0;
  uint64_t v6 = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests] = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest] = v6;
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests] = v6;
  uint64_t v7 = sub_25B9593F8();
  sub_25B961BAC(v7, v8);
  type metadata accessor for GenerativeExperiencesSessionClientData(0);
  sub_25B995854();
  uint64_t v9 = v0;
  sub_25B9653E8();
  if (v10)
  {
    *(void *)&v9[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData] = v10;
    swift_retain();

    v18.receiver = v9;
    v18.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
    id v11 = objc_msgSendSuper2(&v18, sel_init);
    sub_25B97E180(&qword_26A51BD30, v12, (void (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient);
    uint64_t v13 = type metadata accessor for XPCServiceClientConnectionSession();
    uint64_t v14 = sub_25B9957BC();
    sub_25B94E854(&qword_26A51BD40);
    sub_25B995854();
    id v15 = v11;
    *(void *)(v14 + 16) = sub_25B9EC9F0();
    v17[3] = v13;
    void v17[4] = &off_27092DAE8;

    swift_release();
    v17[0] = v14;
    sub_25B964D10(v2);
    uint64_t v16 = (uint64_t)v15 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
    sub_25B96D9C4();
    sub_25B9949A8((uint64_t)v17, v16, &qword_26A51BD38);
    swift_endAccess();
  }
  else
  {
    sub_25B964D10(v2);
    sub_25B96CA38(v5, &qword_26A51BD38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for GenerativeExperiencesSessionClient();
    swift_deallocPartialClassInstance();
  }
  sub_25B964F50();
}

void GenerativeExperiencesSessionClient.init(identifer:)()
{
  sub_25B964F38();
  uint64_t v47 = v1;
  uint64_t v48 = v2;
  uint64_t v3 = sub_25B9ECF20();
  uint64_t v4 = sub_25B96068C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  uint64_t v46 = v5;
  sub_25B9951BC();
  uint64_t v44 = sub_25B9ECF40();
  sub_25B950790();
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v40 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9951BC();
  uint64_t v45 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25B96DB08();
  uint64_t v41 = v11;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_25B9EC3A0();
  uint64_t v14 = sub_25B96068C(v13);
  MEMORY[0x270FA5388](v14);
  sub_25B97AE00();
  v39[1] = sub_25B9EC680();
  sub_25B950790();
  MEMORY[0x270FA5388](v15);
  sub_25B96DA40();
  MEMORY[0x270FA5388](v16);
  sub_25B99578C();
  uint64_t v17 = type metadata accessor for SessionConfiguration();
  uint64_t v18 = sub_25B96068C(v17);
  MEMORY[0x270FA5388](v18);
  sub_25B96DB08();
  v39[0] = v19;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (char *)v39 - v21;
  sub_25B995C78(OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client);
  uint64_t v23 = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests] = MEMORY[0x263F8EE80];
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest] = v23;
  *(void *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests] = v23;
  sub_25B94E854(&qword_26A51BD48);
  sub_25B995674();
  uint64_t v24 = sub_25B9EC3D0();
  sub_25B964F20(v24);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25B9F6AE0;
  unint64_t v25 = v0;
  sub_25B9EC3C0();
  sub_25B9EC390();
  sub_25B9EC5D0();
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v40, *MEMORY[0x263F62110], v44);
  sub_25B9ECEB0();
  sub_25B995964();
  sub_25B9ECDC0();
  sub_25B96D944();
  v26();
  sub_25B96D944();
  v27();
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:instructions:)();
  sub_25B959038();
  v28();
  uint64_t v29 = sub_25B9955E0();
  v30(v29);
  sub_25B961BAC((uint64_t)v22, v39[0]);
  type metadata accessor for GenerativeExperiencesSessionClientData(0);
  sub_25B995854();
  sub_25B9653E8();
  if (v31)
  {
    *(void *)&v25[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData] = v31;

    long long v32 = (objc_class *)type metadata accessor for GenerativeExperiencesSessionClient();
    v50.receiver = v25;
    v50.super_class = v32;
    id v33 = objc_msgSendSuper2(&v50, sel_init);
    sub_25B97E180(&qword_26A51BD30, v34, (void (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient);
    uint64_t v35 = type metadata accessor for XPCServiceClientConnectionSession();
    uint64_t v36 = sub_25B9957BC();
    sub_25B94E854(&qword_26A51BD40);
    sub_25B995854();
    id v37 = v33;
    *(void *)(v36 + 16) = sub_25B9EC9F0();
    v49[3] = v35;
    v49[4] = &off_27092DAE8;

    v49[0] = v36;
    sub_25B964D10((uint64_t)v22);
    uint64_t v38 = (uint64_t)v37 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
    sub_25B96D9C4();
    sub_25B9949A8((uint64_t)v49, v38, &qword_26A51BD38);
    swift_endAccess();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_25B97E0C0()
{
  unint64_t result = qword_26B34AA40;
  if (!qword_26B34AA40)
  {
    sub_25B97E120(255, &qword_26B34AA48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B34AA40);
  }
  return result;
}

uint64_t sub_25B97E120(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for GenerativeExperiencesSessionClient()
{
  return self;
}

uint64_t sub_25B97E180(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25B97E1C8()
{
  sub_25B964F38();
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  uint64_t v2 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  sub_25B960750();
  sub_25B994A10(v2, (uint64_t)v5, &qword_26A51BD38);
  if (v6)
  {
    uint64_t v3 = v7;
    uint64_t v4 = sub_25B94F2E0(v5, v6);
    MEMORY[0x270FA5388](v4);
    (*(void (**)(void))(v3 + 16))(sub_25B98FB00);
    sub_25B94F65C((uint64_t)v5);
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B97E504(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = (id)sub_25B9ECFC0();
  objc_msgSend(a1, sel_terminateSessionFor_, v2);
  swift_unknownObjectRelease();
}

uint64_t sub_25B97E580()
{
  return sub_25B9593F8();
}

void sub_25B97E5C8()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  uint64_t v144 = sub_25B94E854(&qword_26A51BD50);
  sub_25B950790();
  unint64_t v142 = v3;
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v8 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v119 = (char *)&v112 - v8;
  MEMORY[0x270FA5388](v7);
  v143 = (char *)&v112 - v8;
  sub_25B9951BC();
  uint64_t v141 = sub_25B9EC270();
  sub_25B950790();
  uint64_t v146 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25B958FE4();
  uint64_t v140 = v11;
  uint64_t v139 = (char ***)sub_25B94E854(&qword_26A51BD58);
  sub_25B950790();
  uint64_t v148 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B958FE4();
  uint64_t v138 = v14;
  uint64_t v15 = sub_25B94E854(&qword_26A51BD60);
  sub_25B950790();
  uint64_t v116 = v16;
  MEMORY[0x270FA5388](v17);
  sub_25B96DB08();
  SEL v137 = v18;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v19);
  sub_25B99555C();
  uint64_t v136 = v20;
  uint64_t v21 = sub_25B94E854(&qword_26A51B698);
  sub_25B950790();
  unint64_t v23 = v22;
  MEMORY[0x270FA5388](v24);
  sub_25B96DB08();
  uint64_t v118 = v25;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v26);
  v135 = (char *)&v112 - v27;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v28);
  sub_25B99555C();
  uint64_t v151 = v29;
  sub_25B9951BC();
  uint64_t v152 = sub_25B9ECAC0();
  sub_25B950790();
  uint64_t v31 = v30;
  uint64_t v33 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](v34);
  sub_25B959440((uint64_t)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v35);
  sub_25B99555C();
  uint64_t v150 = v36;
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v117 = (char *)&v112 - v8;
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = sub_25B94E854(&qword_26A51B578);
  uint64_t v40 = sub_25B96068C(v39);
  MEMORY[0x270FA5388](v40);
  sub_25B959398();
  uint64_t v41 = *(void *)(v2 + 16);
  uint64_t v153 = v21;
  uint64_t v154 = v15;
  unint64_t v120 = v23;
  if (v41)
  {
    uint64_t v113 = v5;
    uint64_t v115 = v0;
    uint64_t v155 = MEMORY[0x263F8EE78];
    uint64_t v149 = v41;
    sub_25B991D1C();
    uint64_t v132 = sub_25B9ECB00();
    uint64_t v43 = *(void (**)(void))(v31 + 16);
    uint64_t v42 = v31 + 16;
    v131 = v43;
    uint64_t v44 = *(unsigned __int8 *)(v42 + 64);
    uint64_t v114 = v2;
    uint64_t v45 = (uint64_t (*)())(v2 + ((v44 + 32) & ~v44));
    v130 = v148 + 13;
    uint64_t v129 = *(void *)(v42 + 56);
    v128 = v148 + 1;
    uint64_t v148 = (void (**)(void))(v23 + 32);
    v147 = (char **)(v116 + 32);
    unsigned int v127 = *MEMORY[0x263F8F680];
    __n128 v126 = (char *)v146 + 8;
    uint64_t v125 = (v44 + 17) & ~v44;
    uint64_t v124 = v125 + v33;
    uint64_t v123 = v44 | 7;
    uint64_t v122 = v42 + 16;
    uint64_t v121 = v42 - 8;
    uint64_t v134 = v42;
    uint64_t v133 = (char *)&v112 - v8;
    do
    {
      uint64_t v146 = v45;
      uint64_t v46 = v131;
      sub_25B96D8C8();
      v46();
      sub_25B995424();
      v47(v138, v127, v139);
      sub_25B9ED160();
      sub_25B995424();
      sub_25B959038();
      v48();
      uint64_t v49 = *v148;
      sub_25B994E8C();
      v49();
      uint64_t v145 = *v147;
      uint64_t v50 = v136;
      sub_25B995B44();
      sub_25B994EA4();
      v51();
      sub_25B9ECA90();
      char v52 = sub_25B9EC260();
      sub_25B995424();
      sub_25B959038();
      v53();
      sub_25B96D8C8();
      v46();
      uint64_t v54 = swift_allocObject();
      *(unsigned char *)(v54 + 16) = v52 & 1;
      sub_25B995424();
      sub_25B96D990();
      v55();
      uint64_t v56 = v144;
      SEL v57 = &v143[*(int *)(v144 + 48)];
      unint64_t v58 = (uint64_t (**)())&v143[*(int *)(v144 + 64)];
      uint64_t v59 = (uint64_t)v133;
      ((void (*)(char *, uint64_t, uint64_t))v49)(v143, v151, v153);
      uint64_t v60 = v145;
      ((void (*)(char *, uint64_t, uint64_t))v145)(v57, v50, v154);
      *unint64_t v58 = sub_25B991DC8;
      v58[1] = (uint64_t (*)())v54;
      sub_25B994EA4();
      v49();
      ((void (*)(uint64_t, char *, uint64_t))v60)(v59 + *(int *)(v56 + 48), v57, v154);
      id v61 = (uint64_t (**)())(v59 + *(int *)(v56 + 64));
      uint64_t v62 = sub_25B995608();
      *(void *)(v62 + 16) = sub_25B991DC8;
      *(void *)(v62 + 24) = v54;
      *id v61 = sub_25B991E0C;
      v61[1] = (uint64_t (*)())v62;
      sub_25B995424();
      sub_25B959038();
      v63();
      uint64_t v64 = v155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B995D38();
        sub_25B991D1C();
        uint64_t v64 = v155;
      }
      unint64_t v23 = *(void *)(v64 + 16);
      if (v23 >= *(void *)(v64 + 24) >> 1)
      {
        sub_25B991D1C();
        uint64_t v64 = v155;
      }
      *(void *)(v64 + 16) = v23 + 1;
      sub_25B96D878();
      sub_25B994A5C(v59, v64 + v65 + *(void *)(v66 + 72) * v23, &qword_26A51BD50);
      uint64_t v45 = (uint64_t (*)())((char *)v146 + v129);
      --v149;
    }
    while (v149);
    uint64_t v67 = v116;
    uint64_t v0 = v115;
    uint64_t v5 = v113;
  }
  else
  {
    uint64_t v64 = MEMORY[0x263F8EE78];
    uint64_t v67 = v116;
  }
  sub_25B981A40();
  sub_25B995674();
  uint64_t v68 = sub_25B9ED130();
  sub_25B96D92C(v5, v69, v70, v68);
  SEL v71 = (void *)swift_allocObject();
  v71[2] = 0;
  v71[3] = 0;
  v71[4] = v23;
  v71[5] = v64;
  v71[6] = v0;
  swift_bridgeObjectRetain();
  id v72 = v0;
  uint64_t v73 = sub_25B95D778(v5, (uint64_t)&unk_26A51BD70, (uint64_t)v71);
  uint64_t v74 = *(void *)(v64 + 16);
  uint64_t v75 = v64;
  uint64_t v76 = v144;
  if (v74)
  {
    uint64_t v77 = v67;
    sub_25B96D878();
    uint64_t v79 = v75 + v78;
    uint64_t v81 = *(void *)(v80 + 72);
    uint64_t v136 = v75;
    swift_bridgeObjectRetain();
    uint64_t v150 = v79;
    uint64_t v151 = v81;
    uint64_t v152 = v73;
    do
    {
      SEL v82 = (uint64_t *)(v79 + *(int *)(v76 + 64));
      uint64_t v83 = *v82;
      uint64_t v84 = v82[1];
      uint64_t v85 = sub_25B995608();
      *(void *)(v85 + 16) = v83;
      *(void *)(v85 + 24) = v84;
      uint64_t v86 = (void *)swift_allocObject();
      v86[2] = sub_25B991F4C;
      v86[3] = v85;
      v86[4] = v152;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_25B9ED170();
      uint64_t v87 = v151;
      swift_release();
      v79 += v87;
      --v74;
    }
    while (v74);
    uint64_t v88 = v136;
    swift_bridgeObjectRelease();
    uint64_t v89 = *(void *)(v88 + 16);
    if (v89)
    {
      uint64_t v155 = MEMORY[0x263F8EE78];
      sub_25B991CEC();
      uint64_t v90 = *(void *)(v120 + 16);
      uint64_t v140 = v77 + 16;
      uint64_t v141 = v90;
      unint64_t v142 = v120 + 16;
      id v91 = (void (**)(void))(v120 + 32);
      uint64_t v138 = v77 + 8;
      uint64_t v139 = (char ***)(v77 + 32);
      uint64_t v92 = v150;
      SEL v137 = (void (**)(void))(v120 + 32);
      do
      {
        uint64_t v149 = v89;
        uint64_t v93 = *(int *)(v76 + 64);
        __n128 v94 = &v117[v93];
        uint64_t v95 = (uint64_t *)(v92 + v93);
        uint64_t v150 = v92;
        sub_25B96D944();
        v96();
        sub_25B96D8F8();
        v97();
        uint64_t v99 = *v95;
        uint64_t v98 = v95[1];
        *(void *)__n128 v94 = v99;
        *((void *)v94 + 1) = v98;
        uint64_t v100 = v91;
        uint64_t v101 = v143;
        uint64_t v148 = (void (**)(void))&v143[*(int *)(v76 + 48)];
        uint64_t v145 = &v143[*(int *)(v76 + 64)];
        uint64_t v102 = *v100;
        sub_25B995A7C();
        v102();
        v147 = *v139;
        sub_25B995964();
        sub_25B99503C();
        v103();
        uint64_t v104 = sub_25B995608();
        *(void *)(v104 + 16) = v99;
        *(void *)(v104 + 24) = v98;
        uint64_t v146 = sub_25B994AC8;
        uint64_t v105 = v145;
        *(void *)uint64_t v145 = sub_25B994AC8;
        *((void *)v105 + 1) = v104;
        uint64_t v106 = (uint64_t (**)())&v119[*(int *)(v76 + 64)];
        ((void (*)(char *, char *, uint64_t))v102)(v119, v101, v153);
        sub_25B99503C();
        v107();
        swift_retain();
        swift_release();
        *uint64_t v106 = v146;
        v106[1] = (uint64_t (*)())v104;
        sub_25B995A7C();
        v102();
        sub_25B959038();
        v108();
        uint64_t v109 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B995D38();
          sub_25B991CEC();
          uint64_t v109 = v155;
        }
        unint64_t v110 = *(void *)(v109 + 16);
        uint64_t v76 = v144;
        uint64_t v111 = v150;
        id v91 = v137;
        if (v110 >= *(void *)(v109 + 24) >> 1)
        {
          sub_25B991CEC();
          uint64_t v109 = v155;
        }
        *(void *)(v109 + 16) = v110 + 1;
        sub_25B995574();
        sub_25B995BD0();
        v102();
        uint64_t v92 = v111 + v151;
        uint64_t v89 = v149 - 1;
      }
      while (v149 != 1);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_25B964F50();
}

uint64_t sub_25B97F164(char a1)
{
  uint64_t v2 = sub_25B9EC270();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_25B9ECA90();
    sub_25B9EC240();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_25B97F240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = sub_25B94E854(&qword_26A51BE18);
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v8 = sub_25B9ECAE0();
  v6[16] = v8;
  v6[17] = *(void *)(v8 - 8);
  v6[18] = swift_task_alloc();
  uint64_t v9 = sub_25B9ECB10();
  v6[19] = v9;
  v6[20] = *(void *)(v9 - 8);
  v6[21] = swift_task_alloc();
  uint64_t v10 = sub_25B9ECB00();
  v6[22] = v10;
  v6[23] = *(void *)(v10 - 8);
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BF80);
  v6[26] = swift_task_alloc();
  uint64_t v11 = sub_25B94E854(&qword_26A51BF88);
  v6[27] = v11;
  v6[28] = *(void *)(v11 - 8);
  v6[29] = swift_task_alloc();
  uint64_t v12 = sub_25B94E854(&qword_26A51BD60);
  v6[30] = v12;
  v6[31] = *(void *)(v12 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = sub_25B94E854(&qword_26A51BD50);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  uint64_t v13 = sub_25B94E854(&qword_26A51B698);
  v6[36] = v13;
  v6[37] = *(void *)(v13 - 8);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v6[40] = sub_25B94E854(&qword_26A51BF90);
  v6[41] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BF98);
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B97F650, 0, 0);
}

uint64_t sub_25B97F650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25B9951C8();
  sub_25B995B9C();
  *(void *)(v24 + 16) = *(void *)(v24 + 80);
  uint64_t v28 = *(void *)(v24 + 320);
  uint64_t v29 = *(void *)(v24 + 88);
  *(void *)(v24 + 24) = 0;
  *(void *)(v24 + 32) = v29;
  *(void *)(v24 + 40) = 0;
  *(unsigned char *)(v24 + 48) = 0;
  *(void *)(v24 + 360) = OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData;
  *(_DWORD *)(v24 + 52) = *MEMORY[0x263F41588];
  uint64_t v30 = *(void *)(v24 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25B97B4A0(v30);
  sub_25B994C14(v30, 1, v28);
  if (!v31)
  {
    uint64_t v32 = sub_25B994DA0();
    ((void (*)(uint64_t))v27)(v32);
    uint64_t v33 = v29 + *(int *)(v26 + 48);
    uint64_t v34 = *(int *)(v30 + 64);
    sub_25B994E3C();
    v27();
    a20 = v33 + *(int *)(v30 + 48);
    sub_25B99503C();
    v35();
    uint64_t v36 = sub_25B995608();
    *(_OWORD *)(v36 + 16) = *(_OWORD *)(v25 + v34);
    uint64_t v37 = a21 + *(int *)(a16 + 48);
    sub_25B994E3C();
    v27();
    uint64_t v29 = v37 + *(int *)(v30 + 48);
    uint64_t v30 = v37 + *(int *)(v30 + 64);
    sub_25B994E3C();
    v27();
    sub_25B99503C();
    v38();
    *(void *)uint64_t v30 = sub_25B994AC8;
    *(void *)(v30 + 8) = v36;
  }
  sub_25B994ECC();
  sub_25B994A5C(v29, v28, &qword_26A51BF98);
  sub_25B994C14(v28, 1, v30);
  if (v31)
  {
    uint64_t v81 = *(void *)(v24 + 232);
    uint64_t v83 = *(void *)(v24 + 208);
    uint64_t v85 = *(void *)(v24 + 200);
    uint64_t v86 = *(void *)(v24 + 192);
    sub_25B995534();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B9605A0();
    sub_25B94E92C();
    return v40(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, v81, v83, v85, v86, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
  else
  {
    uint64_t v48 = *(void **)(v24 + 296);
    uint64_t v80 = *(void *)(v24 + 312);
    uint64_t v82 = *(void *)(v24 + 304);
    uint64_t v49 = *(void *)(v24 + 280);
    uint64_t v50 = *(void *)(v24 + 288);
    uint64_t v51 = *(void *)(v24 + 264);
    uint64_t v52 = *(void *)(v24 + 248);
    uint64_t v79 = *(void *)(v24 + 256);
    uint64_t v78 = *(void *)(v24 + 240);
    uint64_t v84 = *(void *)(v24 + 232);
    uint64_t v53 = *(int *)(v51 + 48);
    uint64_t v87 = v49 + v53;
    uint64_t v88 = *(void *)(v24 + 272);
    uint64_t v54 = *(void *)(v24 + 352) + *(int *)(*(void *)(v24 + 320) + 48);
    uint64_t v75 = v52;
    uint64_t v76 = v54 + v53;
    sub_25B994FB0((uint64_t *)(v54 + *(int *)(v51 + 64)));
    uint64_t v55 = (void (*)(void))v48[4];
    v55();
    uint64_t v56 = (void *)(v49 + *(int *)(v51 + 64));
    uint64_t v57 = sub_25B9593F8();
    ((void (*)(uint64_t))v55)(v57);
    uint64_t v77 = *(void *)(v52 + 32);
    sub_25B995734();
    v58();
    *uint64_t v56 = a21;
    v56[1] = a20;
    uint64_t v59 = (void *)(v88 + *(int *)(v51 + 64));
    uint64_t v60 = (void (*)(void))v48[2];
    v60();
    sub_25B96D8F8();
    v61();
    *uint64_t v59 = a21;
    v59[1] = a20;
    sub_25B995734();
    v62();
    uint64_t v63 = (void (*)(void))v48[1];
    *(void *)(v24 + 384) = v63;
    *(void *)(v24 + 392) = (unint64_t)(v48 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    swift_retain();
    sub_25B995070();
    v63();
    ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v82, v80, v50);
    sub_25B9557DC((unint64_t *)&qword_26A51B690, &qword_26A51B698);
    sub_25B9ED150();
    sub_25B9557DC(&qword_26A51BFA0, &qword_26A51BF88);
    uint64_t v64 = swift_task_alloc();
    uint64_t v65 = (void *)sub_25B9956E4(v64);
    *uint64_t v65 = v66;
    v65[1] = sub_25B97FB18;
    sub_25B94E8B8();
    sub_25B94E92C();
    return MEMORY[0x270FA1E88](v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v82, v84, v24 + 56, v87, v88,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
}

uint64_t sub_25B97FB18()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v1 = *v0;
  sub_25B96053C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B97FBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25B9951C8();
  sub_25B995B9C();
  sub_25B994C14(*(void *)(v24 + 208), 1, *(void *)(v24 + 176));
  if (!v25)
  {
    int v57 = *(_DWORD *)(v24 + 52);
    sub_25B994EA4();
    v58();
    sub_25B9ECAF0();
    uint64_t v59 = sub_25B995C6C();
    if (v60(v59) == v57)
    {
      uint64_t v61 = sub_25B99525C();
      v62(v61);
      sub_25B994EA4();
      v63();
      sub_25B9670AC();
      sub_25B96D920();
      v64();
    }
    else
    {
      sub_25B9956CC();
      v79();
    }
    uint64_t v80 = *(void *)(v24 + 200);
    uint64_t v81 = *(void *)(v24 + 176);
    uint64_t v82 = *(void *)(v24 + 184);
    sub_25B96D944();
    v83();
    sub_25B9ED180();
    sub_25B9957FC();
    sub_25B994E98();
    v84();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
LABEL_14:
    sub_25B9557DC(&qword_26A51BFA0, &qword_26A51BF88);
    uint64_t v85 = swift_task_alloc();
    uint64_t v86 = (void *)sub_25B9956E4(v85);
    *uint64_t v86 = v87;
    v86[1] = sub_25B97FB18;
    sub_25B94E8B8();
    sub_25B94E92C();
    return MEMORY[0x270FA1E88](v88, v89, v90, v91, v92, v93, v94, v95, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
  a21 = v24 + 16;
  sub_25B96DAFC();
  v26();
  *(void *)(v24 + 72) = 0;
  uint64_t v27 = sub_25B9ED190();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 384);
  a20 = *(void *)(v24 + 392);
  uint64_t v29 = *(void *)(v24 + 312);
  uint64_t v31 = *(void *)(v24 + 280);
  uint64_t v30 = *(void *)(v24 + 288);
  uint64_t v32 = *(void *)(v24 + 248);
  uint64_t v33 = *(void (**)(void))(v24 + 240);
  (*(void (**)(uint64_t))(v24 + 368))(v27);
  swift_release();
  uint64_t v34 = v32 + 8;
  sub_25B994E98();
  v35();
  sub_25B96CA38(v31, &qword_26A51BD50);
  v28(v29, v30);
  uint64_t v36 = *(void *)(v24 + 336);
  uint64_t v37 = *(void *)(v24 + 320);
  sub_25B97B4A0(v36);
  sub_25B994C14(v36, 1, v37);
  if (!v25)
  {
    uint64_t v38 = sub_25B994DA0();
    ((void (*)(uint64_t))v33)(v38);
    uint64_t v39 = v36 + *(int *)(v31 + 48);
    a15 = v30 + *(int *)(v37 + 48);
    uint64_t v40 = *(int *)(v37 + 64);
    sub_25B994E3C();
    v33();
    a20 = v39 + *(int *)(v37 + 48);
    a17 = *(void *)(v34 + 32);
    sub_25B99503C();
    v41();
    uint64_t v42 = sub_25B995608();
    *(_OWORD *)(v42 + 16) = *(_OWORD *)(v30 + v40);
    uint64_t v43 = a21 + *(int *)(a16 + 48);
    sub_25B994E3C();
    v33();
    uint64_t v36 = v43 + *(int *)(v37 + 48);
    uint64_t v44 = (uint64_t (**)())(v43 + *(int *)(v37 + 64));
    sub_25B994E3C();
    v33();
    sub_25B99503C();
    v45();
    *uint64_t v44 = sub_25B994AC8;
    v44[1] = (uint64_t (*)())v42;
  }
  sub_25B994ECC();
  sub_25B994A5C(v36, (uint64_t)v28, &qword_26A51BF98);
  int v46 = sub_25B995B00((uint64_t)v28);
  uint64_t v47 = *(void *)(v24 + 280);
  if (v46 != 1)
  {
    uint64_t v65 = *(void **)(v24 + 296);
    a15 = *(void *)(v24 + 312);
    a16 = *(void *)(v24 + 304);
    uint64_t v66 = *(void *)(v24 + 288);
    a19 = *(void *)(v24 + 272);
    uint64_t v67 = *(void *)(v24 + 264);
    uint64_t v68 = *(void *)(v24 + 248);
    a13 = *(void *)(v24 + 240);
    a14 = *(void *)(v24 + 256);
    uint64_t v69 = *(int *)(v67 + 48);
    a17 = *(void *)(v24 + 232);
    a18 = v47 + v69;
    uint64_t v70 = *(void *)(v24 + 352) + *(int *)(*(void *)(v24 + 320) + 48);
    a10 = v68;
    a11 = v70 + v69;
    sub_25B994FB0((uint64_t *)(v70 + *(int *)(v67 + 64)));
    uint64_t v71 = (void (*)(void))v65[4];
    sub_25B9957F0();
    sub_25B9956F4();
    v71();
    uint64_t v72 = (void *)(v47 + *(int *)(v67 + 64));
    sub_25B995030();
    sub_25B9956F4();
    v71();
    a12 = *(void *)(v68 + 32);
    sub_25B9956F4();
    v73();
    *uint64_t v72 = a21;
    v72[1] = a20;
    uint64_t v74 = (void *)(a19 + *(int *)(v67 + 64));
    uint64_t v75 = (void (*)(void))v65[2];
    v75();
    sub_25B96D8F8();
    v76();
    *uint64_t v74 = a21;
    v74[1] = a20;
    sub_25B9956F4();
    v77();
    uint64_t v78 = (void (*)(void))v65[1];
    *(void *)(v24 + 384) = v78;
    *(void *)(v24 + 392) = (unint64_t)(v65 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    swift_retain();
    sub_25B994E58();
    v78();
    ((void (*)(uint64_t, uint64_t, uint64_t))v75)(a16, a15, v66);
    sub_25B9557DC((unint64_t *)&qword_26A51B690, &qword_26A51B698);
    sub_25B9ED150();
    goto LABEL_14;
  }
  sub_25B995270();
  uint64_t v96 = *(void *)(v24 + 168);
  uint64_t v97 = *(void *)(v24 + 144);
  uint64_t v98 = *(void *)(v24 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B94E92C();
  return v49(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, v96, a19,
           v97,
           v98,
           a22,
           a23,
           a24);
}

uint64_t sub_25B980254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25B9951C8();
  sub_25B995B9C();
  sub_25B96DAFC();
  v25();
  uint64_t v93 = v24 + 56;
  *(void *)(v24 + 64) = *(void *)(v24 + 56);
  uint64_t v95 = v24 + 16;
  sub_25B9953E0();
  uint64_t v26 = sub_25B9ED190();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 384);
  uint64_t v94 = *(void *)(v24 + 392);
  uint64_t v28 = *(void *)(v24 + 312);
  uint64_t v30 = *(void *)(v24 + 280);
  uint64_t v29 = *(void *)(v24 + 288);
  (*(void (**)(uint64_t))(v24 + 368))(v26);
  swift_release();
  sub_25B994E98();
  v31();
  sub_25B96CA38(v30, &qword_26A51BD50);
  v27(v28, v29);
  uint64_t v32 = *(void *)(v24 + 336);
  uint64_t v33 = *(void *)(v24 + 320);
  sub_25B97B4A0(v32);
  sub_25B994C14(v32, 1, v33);
  if (!v34)
  {
    uint64_t v95 = *(void *)(v24 + 344);
    uint64_t v35 = *(void *)(v24 + 328);
    uint64_t v33 = *(void *)(v24 + 288);
    uint64_t v36 = *(void *)(v24 + 264);
    uint64_t v37 = *(void *)(v24 + 248);
    a17 = v35;
    a18 = *(void *)(v24 + 240);
    uint64_t v38 = *(void *)(v24 + 320);
    a15 = v38;
    uint64_t v39 = *(void *)(v24 + 336) + *(int *)(v38 + 48);
    uint64_t v40 = *(void (**)(void))(*(void *)(v24 + 296) + 32);
    sub_25B994E8C();
    v40();
    uint64_t v41 = v35 + *(int *)(v38 + 48);
    a14 = v39 + *(int *)(v36 + 48);
    uint64_t v42 = *(int *)(v36 + 64);
    sub_25B994E8C();
    v40();
    uint64_t v94 = v41 + *(int *)(v36 + 48);
    a16 = *(void *)(v37 + 32);
    sub_25B99503C();
    v43();
    uint64_t v44 = sub_25B995608();
    *(_OWORD *)(v44 + 16) = *(_OWORD *)(v39 + v42);
    uint64_t v45 = v95 + *(int *)(a15 + 48);
    sub_25B994E8C();
    v40();
    uint64_t v32 = v45 + *(int *)(v36 + 48);
    int v46 = (uint64_t (**)())(v45 + *(int *)(v36 + 64));
    sub_25B995B50();
    sub_25B994E8C();
    v40();
    sub_25B99503C();
    v47();
    *int v46 = sub_25B994AC8;
    v46[1] = (uint64_t (*)())v44;
  }
  sub_25B994ECC();
  sub_25B994A5C(v33, v32, &qword_26A51BF98);
  int v48 = sub_25B995B00(v32);
  uint64_t v49 = *(void *)(v24 + 280);
  if (v48 == 1)
  {
    sub_25B995270();
    sub_25B995534();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B9605A0();
    sub_25B94E92C();
    return v51(v50, v51, v52, v53, v54, v55, v56, v57, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v93,
             v94,
             v95,
             a22,
             a23,
             a24);
  }
  else
  {
    uint64_t v59 = *(void **)(v24 + 296);
    uint64_t v88 = *(void *)(v24 + 312);
    uint64_t v89 = *(void *)(v24 + 304);
    uint64_t v92 = *(void *)(v24 + 272);
    uint64_t v60 = *(void *)(v24 + 264);
    uint64_t v61 = *(void *)(v24 + 248);
    uint64_t v86 = *(void *)(v24 + 240);
    uint64_t v87 = *(void *)(v24 + 256);
    uint64_t v62 = *(int *)(v60 + 48);
    uint64_t v90 = *(void *)(v24 + 232);
    uint64_t v91 = v49 + v62;
    uint64_t v63 = *(void *)(v24 + 352) + *(int *)(*(void *)(v24 + 320) + 48);
    uint64_t v83 = v61;
    uint64_t v84 = v63 + v62;
    sub_25B994FB0((uint64_t *)(v63 + *(int *)(v60 + 64)));
    uint64_t v64 = (void (*)(void))v59[4];
    sub_25B995BD0();
    v64();
    uint64_t v65 = (void *)(v49 + *(int *)(v60 + 64));
    sub_25B995BD0();
    v64();
    uint64_t v85 = *(void *)(v61 + 32);
    sub_25B99548C();
    v66();
    *uint64_t v65 = v95;
    v65[1] = v94;
    uint64_t v67 = (void *)(v92 + *(int *)(v60 + 64));
    uint64_t v68 = (void (*)(void))v59[2];
    sub_25B96D8C8();
    v68();
    sub_25B96D8F8();
    v69();
    *uint64_t v67 = v95;
    v67[1] = v94;
    sub_25B99548C();
    v70();
    uint64_t v71 = (void (*)(void))v59[1];
    *(void *)(v24 + 384) = v71;
    *(void *)(v24 + 392) = (unint64_t)(v59 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    swift_retain();
    sub_25B96D920();
    v71();
    sub_25B96D8C8();
    v68();
    sub_25B9557DC((unint64_t *)&qword_26A51B690, &qword_26A51B698);
    sub_25B9ED150();
    sub_25B9557DC(&qword_26A51BFA0, &qword_26A51BF88);
    uint64_t v72 = swift_task_alloc();
    uint64_t v73 = (void *)sub_25B9956E4(v72);
    void *v73 = v74;
    v73[1] = sub_25B97FB18;
    sub_25B94E8B8();
    sub_25B94E92C();
    return MEMORY[0x270FA1E88](v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93,
             v94,
             v95,
             a22,
             a23,
             a24);
  }
}

uint64_t sub_25B980794(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_25B94E854(&qword_26A51BF78);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  LODWORD(a2) = *MEMORY[0x263F8F650];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v9 == a2) {
    return sub_25B9ED140();
  }
  return result;
}

uint64_t sub_25B9808F0(uint64_t a1)
{
  return sub_25B9672D8(a1);
}

void sub_25B980924()
{
}

uint64_t sub_25B98094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return MEMORY[0x270FA2498](sub_25B980970, 0, 0);
}

uint64_t sub_25B980970()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 64) = v1;
  return sub_25B994B7C((uint64_t)sub_25B980998, v1);
}

uint64_t sub_25B980998()
{
  sub_25B960594();
  *(void *)(v0 + 72) = sub_25B967288();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9809FC()
{
  sub_25B960558();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  sub_25B995018();
  *(void *)(v3 + 16) = v1;
  swift_bridgeObjectRelease();
  dispatch_group_leave(v2);
  sub_25B9605A0();
  return v4();
}

void sub_25B980A80()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B94E854(&qword_26A51B820);
  uint64_t v2 = sub_25B96068C(v1);
  MEMORY[0x270FA5388](v2);
  sub_25B959398();
  sub_25B94E854(&qword_26A51BD88);
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B97B0B0();
  sub_25B995030();
  sub_25B9ECD30();
  uint64_t v4 = sub_25B9ECC70();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 0, 1, v4);
  sub_25B9834A4();
  sub_25B96CA38(v0, &qword_26A51B820);
  sub_25B9EC370();
  sub_25B995290();
  v5();
  sub_25B964F50();
}

void sub_25B980BD4()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B94E854(&qword_26A51B820);
  uint64_t v2 = sub_25B96068C(v1);
  MEMORY[0x270FA5388](v2);
  sub_25B9955EC();
  uint64_t v3 = sub_25B9ECC70();
  sub_25B96D92C(v0, v4, v5, v3);
  sub_25B9957F0();
  sub_25B9834A4();
  sub_25B96CA38(v0, &qword_26A51B820);
  sub_25B964F50();
}

void sub_25B980C94()
{
}

void sub_25B980CBC()
{
  sub_25B9958CC();
  uint64_t v1 = sub_25B94E854(&qword_26A51B578);
  uint64_t v2 = sub_25B96068C(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25B995890();
  dispatch_group_enter(v3);
  *(void *)(sub_25B9957BC() + 16) = MEMORY[0x263F8EE78];
  uint64_t v4 = sub_25B9ED130();
  uint64_t v5 = (void *)sub_25B995430(v4);
  sub_25B995830(v5);
  id v6 = v0;
  uint64_t v7 = v3;
  sub_25B995DD0();
  swift_release();
  sub_25B9ED260();

  sub_25B960750();
  swift_bridgeObjectRetain();
  swift_release();
  sub_25B995938();
}

uint64_t sub_25B980DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return MEMORY[0x270FA2498](sub_25B980DC4, 0, 0);
}

uint64_t sub_25B980DC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 64) = v1;
  return sub_25B994B7C((uint64_t)sub_25B980DEC, v1);
}

uint64_t sub_25B980DEC()
{
  sub_25B960594();
  *(void *)(v0 + 72) = *(void *)(*(void *)(v0 + 64)
                                   + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_tools);
  swift_bridgeObjectRetain();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B980E60(uint64_t a1)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51B578);
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B97AE00();
  uint64_t v6 = sub_25B9ED130();
  sub_25B96D92C(v2, v7, v8, v6);
  int v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v1;
  v9[5] = a1;
  id v10 = v1;
  swift_bridgeObjectRetain();
  sub_25B95D778(v2, (uint64_t)&unk_26A51BDA8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_25B980F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_25B980F40, 0, 0);
}

uint64_t sub_25B980F40()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 32) = v1;
  return sub_25B994B7C((uint64_t)sub_25B980F68, v1);
}

uint64_t sub_25B980F68()
{
  sub_25B960594();
  sub_25B9679D4(*(void *)(v0 + 24));
  sub_25B9605A0();
  return v1();
}

void sub_25B980FC0()
{
  sub_25B9958CC();
  uint64_t v2 = sub_25B94E854(&qword_26A51B578);
  uint64_t v3 = sub_25B96068C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25B959398();
  uint64_t v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  sub_25B9ECBC0();
  uint64_t v5 = swift_allocBox();
  sub_25B9ECBA0();
  uint64_t v6 = sub_25B9ED130();
  sub_25B96D92C(v1, v7, v8, v6);
  int v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = v0;
  v9[6] = v4;
  swift_retain();
  id v10 = v0;
  uint64_t v11 = v4;
  sub_25B95D778(v1, (uint64_t)&unk_26A51BDB8, (uint64_t)v9);
  swift_release();
  sub_25B9ED260();

  sub_25B960750();
  sub_25B97AD18();
  sub_25B96D8F8();
  v12();
  swift_release();
  sub_25B995938();
}

uint64_t sub_25B981110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  uint64_t v7 = sub_25B9ECBC0();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_projectBox();
  return MEMORY[0x270FA2498](sub_25B9811E0, 0, 0);
}

uint64_t sub_25B9811E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 112) = v1;
  return sub_25B994B7C((uint64_t)sub_25B981208, v1);
}

uint64_t sub_25B981208()
{
  sub_25B960558();
  sub_25B960750();
  uint64_t v0 = sub_25B994C4C();
  v1(v0);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B981298()
{
  sub_25B995BBC();
  sub_25B994E80();
  uint64_t v1 = *(NSObject **)(v0 + 72);
  sub_25B995018();
  uint64_t v2 = sub_25B9953EC();
  v3(v2);
  dispatch_group_leave(v1);
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B99581C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

void sub_25B98132C()
{
  sub_25B9958CC();
  sub_25B9ECBC0();
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25B94E854(&qword_26A51B578);
  uint64_t v4 = sub_25B96068C(v3);
  MEMORY[0x270FA5388](v4);
  sub_25B959398();
  uint64_t v5 = sub_25B9ED130();
  sub_25B96D92C(v1, v6, v7, v5);
  sub_25B96D944();
  v8();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v0;
  sub_25B99591C();
  sub_25B9956F4();
  v10();
  id v11 = v0;
  sub_25B95D778(v1, (uint64_t)&unk_26A51BDC8, (uint64_t)v9);
  swift_release();
  sub_25B995938();
}

uint64_t sub_25B98147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_25B98149C, 0, 0);
}

uint64_t sub_25B98149C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 56) = v1;
  return sub_25B994B7C((uint64_t)sub_25B9814C4, v1);
}

uint64_t sub_25B9814C4()
{
  sub_25B960558();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56) + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_toolChoice;
  sub_25B96D9C4();
  sub_25B9ECBC0();
  sub_25B95097C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v2, v1);
  swift_endAccess();
  sub_25B9605A0();
  return v4();
}

uint64_t sub_25B981578(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25B994B7C((uint64_t)sub_25B981594, 0);
}

uint64_t sub_25B981594()
{
  sub_25B960594();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B994ACC;
  return sub_25B967418();
}

uint64_t sub_25B981634(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25B994B7C((uint64_t)sub_25B981650, 0);
}

uint64_t sub_25B981650()
{
  sub_25B960594();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25B9816F0;
  return sub_25B9676E4();
}

uint64_t sub_25B9816F0()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v1 = *v0;
  sub_25B96053C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

void sub_25B9817B0()
{
}

uint64_t sub_25B9817D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return MEMORY[0x270FA2498](sub_25B9817F4, 0, 0);
}

uint64_t sub_25B9817F4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 64) = v1;
  return sub_25B994B7C((uint64_t)sub_25B98181C, v1);
}

uint64_t sub_25B98181C()
{
  *(void *)(v0 + 72) = *(void *)(*(void *)(v0 + 64)
                                   + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position);
  return sub_25B994B7C((uint64_t)sub_25B994AE0, 0);
}

void sub_25B981848()
{
}

void sub_25B981868()
{
  sub_25B9958CC();
  uint64_t v1 = sub_25B94E854(&qword_26A51B578);
  uint64_t v2 = sub_25B96068C(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_25B995890();
  dispatch_group_enter(v3);
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  uint64_t v4 = sub_25B9ED130();
  uint64_t v5 = (void *)sub_25B995430(v4);
  sub_25B995830(v5);
  id v6 = v0;
  uint64_t v7 = v3;
  sub_25B995DD0();
  swift_release();
  sub_25B9ED260();

  sub_25B960750();
  swift_release();
  sub_25B995938();
}

uint64_t sub_25B981944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return MEMORY[0x270FA2498](sub_25B981968, 0, 0);
}

uint64_t sub_25B981968()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData);
  *(void *)(v0 + 64) = v1;
  return sub_25B994B7C((uint64_t)sub_25B981990, v1);
}

uint64_t sub_25B981990()
{
  *(void *)(v0 + 72) = *(void *)(*(void *)(v0 + 64)
                                   + OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_position);
  return sub_25B994B7C((uint64_t)sub_25B9819BC, 0);
}

uint64_t sub_25B9819BC()
{
  sub_25B960558();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  BOOL v3 = v0[9] > 1;
  sub_25B995018();
  *(unsigned char *)(v2 + 16) = v3;
  dispatch_group_leave(v1);
  sub_25B9605A0();
  return v4();
}

void sub_25B981A40()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51BE08);
  uint64_t v5 = sub_25B96068C(v4);
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  uint64_t v100 = v6;
  sub_25B9951BC();
  uint64_t v104 = sub_25B9ECD70();
  sub_25B950790();
  uint64_t v107 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25B958FE4();
  sub_25B959440(v9);
  uint64_t v10 = sub_25B94E854(&qword_26A51B7A0);
  sub_25B950790();
  uint64_t v112 = v11;
  MEMORY[0x270FA5388](v12);
  sub_25B96DB08();
  uint64_t v117 = v13;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v14);
  sub_25B99555C();
  sub_25B959440(v15);
  uint64_t v16 = sub_25B94E854(&qword_26A51B698);
  sub_25B950790();
  uint64_t v119 = v17;
  MEMORY[0x270FA5388](v18);
  sub_25B958FE4();
  sub_25B959440(v19);
  uint64_t v20 = sub_25B94E854(&qword_26A51BD60);
  sub_25B950790();
  uint64_t v108 = v21;
  MEMORY[0x270FA5388](v22);
  sub_25B97AE5C();
  uint64_t v111 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  sub_25B959440((uint64_t)v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v102 = v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)v99 - v29;
  uint64_t v129 = MEMORY[0x263F8EE78];
  uint64_t v130 = MEMORY[0x263F8EE78];
  uint64_t v106 = sub_25B982E14(v3, &v130, &v129);
  uint64_t v105 = 0;
  sub_25B9EC2F0();
  uint64_t v31 = (uint64_t)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests];
  sub_25B960750();
  uint64_t v32 = v31;
  swift_bridgeObjectRetain();
  uint64_t v121 = v30;
  uint64_t v33 = sub_25B99598C();
  uint64_t v35 = sub_25B982F8C(v33, v34);
  swift_bridgeObjectRelease();
  uint64_t v123 = v10;
  uint64_t v101 = v16;
  uint64_t v109 = v24;
  unint64_t v120 = v0;
  if (v35)
  {
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      uint64_t v37 = v108 + 16;
      uint64_t v1 = *(char **)(v108 + 16);
      sub_25B96D878();
      uint64_t v39 = v35 + v38;
      uint64_t v40 = *(void *)(v37 + 56);
      swift_bridgeObjectRetain();
      do
      {
        ((void (*)(char *, uint64_t, uint64_t))v1)(v0, v39, v20);
        v126[0] = 0;
        sub_25B9ED190();
        sub_25B995DF0();
        sub_25B9950BC();
        v41();
        v39 += v40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
      uint64_t v24 = v109;
      sub_25B995A70();
    }
    swift_bridgeObjectRelease();
  }
  sub_25B96D9C4();
  swift_bridgeObjectRetain();
  sub_25B9959F8();
  sub_25B9D9228(v42, v32);
  swift_endAccess();
  uint64_t v43 = *(void *)(v130 + 16);
  uint64_t v122 = v20;
  if (v43)
  {
    sub_25B96D878();
    uint64_t v1 = (char *)(v44 + v45);
    uint64_t v115 = *(NSObject **)(v46 + 72);
    uint64_t v114 = v24 + 16;
    uint64_t v113 = (void (**)(void))(v24 + 32);
    v99[1] = v44;
    swift_bridgeObjectRetain();
    uint64_t v32 = v102;
    do
    {
      uint64_t v47 = sub_25B9957BC();
      swift_unknownObjectWeakInit();
      sub_25B96D8F8();
      v48();
      *(void *)(swift_allocObject() + 16) = v47;
      sub_25B96D990();
      v49();
      sub_25B9ED170();
      uint64_t v1 = (char *)v115 + (void)v1;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    sub_25B9959F8();
    sub_25B995A70();
  }
  uint64_t v50 = (uint64_t)&v1[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client];
  sub_25B960750();
  sub_25B994A10(v50, (uint64_t)v126, &qword_26A51BD38);
  if (v127)
  {
    uint64_t v51 = v128;
    uint64_t v52 = sub_25B94F2E0(v126, v127);
    MEMORY[0x270FA5388](v52);
    v99[-4] = v1;
    v99[-3] = v106;
    v99[-2] = v32;
    uint64_t v53 = v105;
    (*(void (**)(void))(v51 + 16))(sub_25B994120);
    uint64_t v54 = v107;
    if (v53)
    {
      swift_bridgeObjectRelease();
      sub_25B94F65C((uint64_t)v126);
      if (qword_26A51B000 != -1) {
        swift_once();
      }
      uint64_t v55 = v104;
      sub_25B9559F0(v104, (uint64_t)qword_26A51BC28);
      sub_25B960750();
      uint64_t v56 = v103;
      sub_25B96D9F4();
      sub_25B96D944();
      v57();
      id v58 = v53;
      id v59 = v53;
      uint64_t v60 = sub_25B9ECD40();
      os_log_type_t v61 = sub_25B9ED230();
      uint64_t v115 = v60;
      os_log_type_enabled(v60, v61);
      sub_25B995A70();
      if (v62)
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = (void *)sub_25B995700();
        uint64_t v114 = sub_25B9954D8();
        uint64_t v125 = v114;
        *(_DWORD *)uint64_t v63 = 136315394;
        uint64_t v124 = sub_25B9910E8(0x7265747369676572, 0xEC000000293A5F28, &v125);
        sub_25B9ED2C0();
        *(_WORD *)(v63 + 12) = 2112;
        id v65 = v53;
        uint64_t v66 = v54;
        uint64_t v67 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v124 = v67;
        sub_25B9ED2C0();
        *uint64_t v64 = v67;
        sub_25B9959F8();

        uint64_t v68 = v115;
        _os_log_impl(&dword_25B94C000, v115, v61, "%s error %@", (uint8_t *)v63, 0x16u);
        sub_25B94E854((uint64_t *)&unk_26A51DCE0);
        swift_arrayDestroy();
        sub_25B959290();
        swift_arrayDestroy();
        sub_25B959290();
        sub_25B959290();

        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v103, v104);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
      }
      uint64_t v69 = v130;
      uint64_t v70 = *(void *)(v130 + 16);
      if (v70)
      {
        sub_25B96D878();
        uint64_t v72 = v69 + v71;
        uint64_t v74 = *(void *)(v73 + 72);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v125 = (uint64_t)v53;
          id v75 = v53;
          sub_25B9ED190();
          v72 += v74;
          --v70;
        }
        while (v70);
        swift_bridgeObjectRelease();
        sub_25B995A70();
      }
      sub_25B96D944();
      v76();
      uint64_t v77 = sub_25B94E854(&qword_26A51BE10);
      sub_25B96D92C(v100, v78, v79, v77);
      sub_25B96D9C4();
      sub_25B9CEC44();
      swift_endAccess();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_25B94F65C((uint64_t)v126);
    }
    uint64_t v80 = v130;
    uint64_t v81 = *(void *)(v130 + 16);
    if (v81)
    {
      uint64_t v125 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25B991CEC();
      sub_25B96D878();
      uint64_t v110 = v80;
      uint64_t v83 = v80 + v82;
      unint64_t v120 = *(char **)(v84 + 72);
      uint64_t v115 = (v119 + 16);
      uint64_t v114 = v108 + 16;
      uint64_t v85 = (void (**)(void))(v119 + 32);
      uint64_t v112 = v108 + 8;
      uint64_t v86 = v125;
      uint64_t v87 = v101;
      uint64_t v113 = (void (**)(void))(v119 + 32);
      uint64_t v88 = v116;
      do
      {
        sub_25B994A10(v83, v88, &qword_26A51B7A0);
        sub_25B995424();
        sub_25B96D8F8();
        v89();
        sub_25B99598C();
        sub_25B96D8F8();
        v90();
        uint64_t v91 = *v85;
        sub_25B994EA4();
        v91();
        sub_25B99598C();
        sub_25B959038();
        v92();
        sub_25B96CA38(v88, &qword_26A51B7A0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25B991CEC();
          uint64_t v86 = v125;
        }
        unint64_t v93 = *(void *)(v86 + 16);
        if (v93 >= *(void *)(v86 + 24) >> 1)
        {
          sub_25B991CEC();
          uint64_t v86 = v125;
        }
        *(void *)(v86 + 16) = v93 + 1;
        sub_25B995574();
        uint64_t v96 = v94 + v95 * v93;
        uint64_t v97 = v113;
        ((void (*)(uint64_t, uint64_t, uint64_t))v91)(v96, v118, v87);
        uint64_t v85 = v97;
        v83 += (uint64_t)v120;
        --v81;
      }
      while (v81);
      swift_bridgeObjectRelease();
      sub_25B9959F8();
    }
    sub_25B96D920();
    v98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B982608@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v74 = a4;
  uint64_t v70 = a3;
  uint64_t v84 = a2;
  uint64_t v85 = a1;
  uint64_t v4 = sub_25B94E854(&qword_26A51B910);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v68 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25B9ECB60();
  uint64_t v67 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B94E854(&qword_26A51BFA8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v71 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v69 = (uint64_t)&v63 - v10;
  uint64_t v65 = sub_25B9EC270();
  MEMORY[0x270FA5388](v65);
  uint64_t v83 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25B9ECAC0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v82 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_25B94E854(&qword_26A51B7A0);
  uint64_t v14 = *(void *)(v86 - 8);
  uint64_t v81 = v86 - 8;
  uint64_t v79 = v14;
  uint64_t v80 = v14;
  MEMORY[0x270FA5388](v86);
  uint64_t v78 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25B94E854(&qword_26A51BD58);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25B94E854(&qword_26A51BD60);
  uint64_t v77 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25B94E854(&qword_26A51B698);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9ECB00();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F680], v16);
  sub_25B9ED160();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v27 = v20;
  uint64_t v28 = v77;
  uint64_t v29 = (uint64_t)v78;
  uint64_t v30 = v23;
  uint64_t v31 = &v78[*(int *)(v86 + 48)];
  uint64_t v75 = v24;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v72 = v26;
  v32(v78, v26, v23);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v73 = v22;
  uint64_t v76 = v27;
  v33(v31, v22, v27);
  uint64_t v34 = v84;
  sub_25B96B1E0();
  uint64_t v35 = *(void *)(*v34 + 16);
  sub_25B96B284(v35);
  uint64_t v36 = *v34;
  *(void *)(v36 + 16) = v35 + 1;
  sub_25B994A5C(v29, v36+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(void *)(v79 + 72) * v35, &qword_26A51B7A0);
  sub_25B9ECA90();
  sub_25B9ECAA0();
  id v37 = objc_allocWithZone((Class)type metadata accessor for DocumentXPCEnvelope(0));
  DocumentXPCEnvelope.init(sealing:)();
  uint64_t v39 = v38;
  uint64_t v40 = *v34;
  if (v39)
  {
    uint64_t v41 = v75;
    uint64_t v42 = v76;
    uint64_t v43 = v71;
    sub_25B966FBC(v40, v71);
    uint64_t v44 = v86;
    uint64_t result = _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v43, 1, v86);
    if (result != 1)
    {
      uint64_t v46 = v43 + *(int *)(v44 + 48);
      uint64_t v47 = v70;
      sub_25B96B1C8();
      uint64_t v48 = *(void *)(*v47 + 16);
      sub_25B96B26C(v48);
      uint64_t v49 = *v47;
      *(void *)(v49 + 16) = v48 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 32))(v49+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v48, v46, v42);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v73, v42);
      uint64_t v50 = *(void (**)(char *, uint64_t))(v41 + 8);
      v50(v72, v30);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v50)(v43, v30);
LABEL_6:
      *uint64_t v74 = v39;
      return result;
    }
    __break(1u);
  }
  else
  {
    uint64_t v51 = v65;
    uint64_t v84 = (uint64_t *)v30;
    uint64_t v53 = v67;
    uint64_t v52 = (uint64_t)v68;
    uint64_t v54 = v66;
    uint64_t v55 = v69;
    sub_25B966FBC(v40, v69);
    uint64_t v56 = v86;
    uint64_t result = _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v55, 1, v86);
    if (result != 1)
    {
      uint64_t v57 = v55 + *(int *)(v56 + 48);
      sub_25B9ECA90();
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v52, 0, 1, v51);
      sub_25B9ECB50();
      sub_25B9ECB90();
      sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
      uint64_t v58 = swift_allocError();
      sub_25B9ECB80();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v64);
      uint64_t v87 = v58;
      uint64_t v59 = v76;
      sub_25B9ED190();
      uint64_t v60 = *(void (**)(char *, uint64_t))(v28 + 8);
      v60(v73, v59);
      os_log_type_t v61 = *(void (**)(char *, uint64_t *))(v75 + 8);
      int v62 = v84;
      v61(v72, v84);
      v60((char *)v57, v59);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t *))v61)(v55, v62);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25B982E14(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v9 = *(void *)(sub_25B9ECAC0() - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v12 = sub_25B982608(v10, a2, a3, &v13);
      if (v3) {
        break;
      }
      if (v13)
      {
        MEMORY[0x26116C4C0](v12);
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25B9ED0A0();
        }
        sub_25B9ED0B0();
        sub_25B9ED090();
      }
      v10 += v11;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B982F8C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_25B991964(), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_25B982FD0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) && (sub_25B991964(), (v5 & 1) != 0))
  {
    uint64_t v6 = v4;
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = sub_25B94E854(&qword_26A51BE10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, v7 + *(void *)(*(void *)(v8 - 8) + 72) * v6, v8);
    uint64_t v9 = a2;
    uint64_t v10 = 0;
    uint64_t v11 = v8;
  }
  else
  {
    uint64_t v11 = sub_25B94E854(&qword_26A51BE10);
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v9, v10, 1, v11);
}

uint64_t sub_25B9830A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_25B991A30(), (v3 & 1) != 0))
  {
    uint64_t v4 = sub_25B94E854(&qword_26A51BF30);
    sub_25B95097C();
    sub_25B96D8F8();
    v5();
    sub_25B995D14();
    uint64_t v9 = v4;
  }
  else
  {
    sub_25B94E854(&qword_26A51BF30);
    uint64_t v6 = sub_25B995214();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v6, v7, v8, v9);
}

double sub_25B983150@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_25B991A30(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a1 + 56) + 32 * v4;
    sub_25B993AC8(v6, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_25B9831B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51BF78);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  int v8 = *MEMORY[0x263F8F650];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a1 == v8)
  {
    uint64_t v10 = a2 + 16;
    swift_beginAccess();
    uint64_t v11 = MEMORY[0x26116D340](a2 + 16);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      sub_25B989238();
    }
    swift_beginAccess();
    uint64_t result = MEMORY[0x26116D340](v10);
    if (result)
    {
      uint64_t v13 = (void *)result;
      swift_beginAccess();
      sub_25B992EC8();
      swift_endAccess();

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_25B98337C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration();
  MEMORY[0x270FA5388](v4 - 8);
  sub_25B961BAC(*(void *)(a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData)+ OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_configuration, (uint64_t)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = objc_allocWithZone((Class)type metadata accessor for SessionConfigurationXPCEnvelope());
  swift_unknownObjectRetain();
  SessionConfigurationXPCEnvelope.init(sealing:)();
  int v8 = v7;
  type metadata accessor for DocumentXPCEnvelope(0);
  uint64_t v9 = (void *)sub_25B9ED070();
  uint64_t v10 = (void *)sub_25B9EC2D0();
  objc_msgSend(a1, sel_registerWithConfiguration_documents_requestUUID_delegate_, v8, v9, v10, a2);
  swift_unknownObjectRelease();
}

void sub_25B9834A4()
{
  sub_25B964F38();
  id v136 = v0;
  uint64_t v127 = v1;
  uint64_t v128 = v2;
  uint64_t v125 = v3;
  uint64_t v126 = v4;
  uint64_t v123 = v5;
  uint64_t v124 = v6;
  uint64_t v122 = v7;
  uint64_t v120 = v8;
  sub_25B94E854(&qword_26A51BFE0);
  sub_25B950790();
  uint64_t v118 = v10;
  uint64_t v119 = v9;
  MEMORY[0x270FA5388](v9);
  sub_25B96DB08();
  uint64_t v117 = v11;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v12);
  sub_25B99555C();
  uint64_t v116 = v13;
  uint64_t v135 = sub_25B9EC940();
  sub_25B950790();
  uint64_t v15 = v14;
  uint64_t v115 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v17);
  sub_25B995B70();
  uint64_t v133 = v18;
  uint64_t v132 = sub_25B9EC9A0();
  sub_25B950790();
  uint64_t v138 = v19;
  uint64_t v107 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v21);
  sub_25B995B70();
  uint64_t v129 = v22;
  uint64_t v23 = sub_25B94E854(&qword_26A51B820);
  uint64_t v24 = sub_25B964F20(v23);
  uint64_t v108 = v25;
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v24);
  uint64_t v121 = (uint64_t)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_25B9EC580();
  sub_25B994AE8();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v32);
  uint64_t v134 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_25B9ECE30();
  sub_25B994AE8();
  uint64_t v34 = v33;
  uint64_t v36 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v95 = *(void *)(v34 + 16);
  uint64_t v96 = v34 + 16;
  sub_25B96D944();
  v38();
  uint64_t v131 = v29;
  uint64_t v113 = *(void *)(v29 + 16);
  uint64_t v114 = v29 + 16;
  sub_25B96D944();
  v39();
  sub_25B994A10(v124, (uint64_t)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A51B820);
  uint64_t v40 = v138;
  uint64_t v41 = *(void *)(v138 + 16);
  uint64_t v111 = v138 + 16;
  uint64_t v112 = v41;
  sub_25B96D8F8();
  v42();
  uint64_t v130 = v15;
  uint64_t v43 = *(void *)(v15 + 16);
  uint64_t v109 = v15 + 16;
  uint64_t v110 = v43;
  sub_25B96D8F8();
  v44();
  unint64_t v45 = (v36 + ((*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = (*(unsigned __int8 *)(v29 + 80) + v45 + 8) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v47 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v100 = v47;
  uint64_t v48 = *(unsigned __int8 *)(v108 + 80);
  uint64_t v108 = v31 + v48;
  unint64_t v49 = (v46 + v31 + v48) & ~v48;
  uint64_t v101 = v48;
  uint64_t v103 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v106 = v27 + v103;
  uint64_t v104 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v105 = v107 + v104;
  uint64_t v50 = (((v49 + v27 + v103) & ~v103) + v107 + v104) & ~v104;
  uint64_t v107 = v47 | v103 | v104 | v48 | 7;
  uint64_t v102 = v115 + 7;
  unint64_t v51 = (v50 + v115 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v52 = swift_allocObject();
  sub_25B99548C();
  v53();
  *(void *)(v52 + v45) = v136;
  uint64_t v115 = v52;
  uint64_t v54 = *(void *)(v131 + 32);
  v131 += 32;
  uint64_t v99 = v54;
  sub_25B96D990();
  v55();
  sub_25B994A5C(v121, v52 + v49, &qword_26A51B820);
  uint64_t v56 = *(void *)(v138 + 32);
  v138 += 32;
  uint64_t v98 = v56;
  sub_25B96D990();
  v57();
  uint64_t v58 = *(void *)(v130 + 32);
  v130 += 32;
  uint64_t v97 = v58;
  sub_25B96D990();
  v59();
  uint64_t v60 = (void *)(v52 + v51);
  uint64_t v61 = v128;
  *uint64_t v60 = v127;
  v60[1] = v61;
  sub_25B94E854(&qword_26A51BFF8);
  uint64_t v94 = swift_allocBox();
  uint64_t v63 = v62;
  uint64_t v64 = sub_25B94E854(&qword_26A51C000);
  sub_25B96D92C(v63, v65, v66, v64);
  sub_25B94E854(&qword_26A51BA80);
  uint64_t v93 = swift_allocBox();
  uint64_t v68 = v67;
  sub_25B96D944();
  v69();
  sub_25B9950F4(v68, 0);
  sub_25B94E854(&qword_26A51C008);
  uint64_t v122 = swift_allocBox();
  uint64_t v71 = v70;
  uint64_t v72 = sub_25B9EC460();
  sub_25B96D92C(v71, v73, v74, v72);
  uint64_t v75 = sub_25B9957BC();
  swift_unknownObjectWeakInit();
  sub_25B96D944();
  v76();
  uint64_t v77 = v121;
  sub_25B994A10(v124, v121, &qword_26A51B820);
  sub_25B96D8F8();
  v78();
  sub_25B96D8F8();
  v79();
  uint64_t v80 = (v108 + ((v100 + 40) & ~v100)) & ~v101;
  unint64_t v81 = (((((v80 + v106) & ~v103) + v105) & ~v104) + v102) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v82 = (void *)swift_allocObject();
  uint64_t v83 = v93;
  v82[2] = v75;
  v82[3] = v83;
  v82[4] = v94;
  sub_25B96D990();
  v84();
  sub_25B994A5C(v77, (uint64_t)v82 + v80, &qword_26A51B820);
  sub_25B96D990();
  v85();
  sub_25B96D990();
  v86();
  uint64_t v87 = (void *)((char *)v82 + v81);
  uint64_t v88 = v128;
  *uint64_t v87 = v127;
  v87[1] = v88;
  *(void *)((char *)v82 + ((v81 + 23) & 0xFFFFFFFFFFFFFFF8)) = v122;
  swift_bridgeObjectRetain_n();
  id v89 = v136;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25B94E854(&qword_26A51BED8);
  sub_25B9ED1C0();
  sub_25B96D9F4();
  sub_25B96D944();
  v90();
  sub_25B9557DC(&qword_26A51C020, &qword_26A51BFE0);
  sub_25B9EC350();
  sub_25B959038();
  v91();
  swift_release();
  swift_release();
  swift_release();
  sub_25B964F50();
}

uint64_t sub_25B983D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v14;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  uint64_t v9 = sub_25B9ECE10();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BA70);
  v8[14] = swift_task_alloc();
  uint64_t v10 = sub_25B9ECBC0();
  v8[15] = v10;
  v8[16] = *(void *)(v10 - 8);
  v8[17] = swift_task_alloc();
  uint64_t v11 = sub_25B9ECE30();
  v8[18] = v11;
  v8[19] = *(void *)(v11 - 8);
  v8[20] = swift_task_alloc();
  sub_25B94E854(&qword_26A51B6F8);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BA80);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B983FCC, 0, 0);
}

uint64_t sub_25B983FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994F10();
  sub_25B99564C();
  uint64_t v18 = v16[29];
  uint64_t v19 = v16[26];
  uint64_t v20 = v16[18];
  sub_25B96D944();
  v21();
  sub_25B995928();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v22, v23, v24, v25);
  uint64_t v26 = sub_25B9EC520();
  v16[31] = v26;
  sub_25B96D92C(v19, v27, v28, v26);
  v16[32] = OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData;
  uint64_t v29 = sub_25B995998();
  sub_25B994A10(v29, v30, v31);
  sub_25B994C14(v18, 1, v20);
  if (v32)
  {
    uint64_t v33 = v16[31];
    uint64_t v35 = v16[25];
    uint64_t v34 = v16[26];
    sub_25B96CA38(v16[29], &qword_26A51BA80);
    sub_25B994A10(v34, v35, &qword_26A51B6F8);
    uint64_t v44 = sub_25B994C14(v35, 1, v33);
    if (!v32)
    {
      sub_25B994DE4();
      sub_25B96CA38(v20, &qword_26A51B6F8);
      sub_25B96CA38(v17, &qword_26A51BA80);
      sub_25B97AD18();
      sub_25B96D990();
      v36();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25B96DA00();
      sub_25B994BF8();
      __asm { BRAA            X1, X16 }
    }
    __break(1u);
  }
  else
  {
    v16[33] = *(void *)(v16[19] + 32);
    uint64_t v39 = v16[32];
    uint64_t v40 = v16[4];
    sub_25B994EA4();
    v41();
    sub_25B980C94();
    v16[34] = v42;
    sub_25B980924();
    v16[35] = v43;
    sub_25B980FC0();
    v16[36] = *(void *)(v40 + v39);
    sub_25B994BF8();
  }
  return MEMORY[0x270FA2498](v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B98421C()
{
  sub_25B960594();
  sub_25B966100();
  *(void *)(v0 + 296) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25B9842F4;
  return sub_25B987190();
}

uint64_t sub_25B9842F4()
{
  sub_25B995BBC();
  sub_25B994E80();
  uint64_t v2 = *v1;
  sub_25B96053C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B94E8B8();
  sub_25B99581C();
  return MEMORY[0x270FA2498](v4, v5, v6, v7, v8, v9);
}

uint64_t sub_25B98444C()
{
  sub_25B960558();
  sub_25B96CA38(*(void *)(v0 + 208), &qword_26A51B6F8);
  uint64_t v1 = sub_25B995030();
  sub_25B994A5C(v1, v2, &qword_26A51B6F8);
  uint64_t v3 = sub_25B9ECE20();
  *(void *)(v0 + 320) = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 328) = v4;
  if (v4)
  {
    *(_DWORD *)(v0 + 424) = *(_DWORD *)(*(void *)(v0 + 96) + 80);
    sub_25B995CAC();
    *(void *)(v0 + 336) = v5;
    *(void *)(v0 + 344) = v6;
    *(void *)(v0 + 352) = 0;
    sub_25B96D8F8();
    v7();
    sub_25B995D98();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_25B98460C;
    sub_25B99500C(*(void *)(v0 + 104));
    return sub_25B96652C();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 176);
    sub_25B994A10(*(void *)(v0 + 208), v11, &qword_26A51B6F8);
    uint64_t result = sub_25B994C14(v11, 1, v10);
    if (v12)
    {
      __break(1u);
    }
    else
    {
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v13;
      void *v13 = v0;
      v13[1] = sub_25B9848B8;
      sub_25B99500C(*(void *)(v0 + 176));
      return sub_25B98CB3C();
    }
  }
  return result;
}

uint64_t sub_25B98460C()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 184);
    swift_bridgeObjectRelease();
    sub_25B96CA38(v7, &qword_26A51B6F8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B96CA38(*(void *)(v3 + 184), &qword_26A51B6F8);
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B984720()
{
  sub_25B960594();
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[44] + 1;
  sub_25B959038();
  v3();
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v0[31];
    uint64_t v5 = v0[22];
    sub_25B994A10(v0[26], v5, &qword_26A51B6F8);
    uint64_t result = sub_25B994C14(v5, 1, v4);
    if (v7)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = (void *)swift_task_alloc();
      v0[47] = (uint64_t)v8;
      *uint64_t v8 = v0;
      v8[1] = sub_25B9848B8;
      sub_25B99500C(v0[22]);
      return sub_25B98CB3C();
    }
  }
  else
  {
    ++v0[44];
    sub_25B9953AC();
    v9();
    sub_25B995D98();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[45] = (uint64_t)v10;
    *uint64_t v10 = v0;
    v10[1] = sub_25B98460C;
    sub_25B99500C(v0[13]);
    return sub_25B96652C();
  }
  return result;
}

uint64_t sub_25B9848B8()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  v3[48] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B97AD18();
    v3[49] = *(void *)(v7 + 8);
    v3[50] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_25B959038();
    v8();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9849D0()
{
  sub_25B960594();
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[21];
  sub_25B994A10(v0[26], v2, &qword_26A51B6F8);
  uint64_t result = sub_25B994C14(v2, 1, v1);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[51] = v5;
    void *v5 = v0;
    v5[1] = sub_25B984AA0;
    return sub_25B9895D0();
  }
  return result;
}

uint64_t sub_25B984AA0()
{
  sub_25B960558();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *char v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t))(v3 + 392);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_25B9593F8();
    v7(v8);
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B984BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994F10();
  sub_25B99564C();
  uint64_t v17 = v16[29];
  uint64_t v18 = v16[30];
  uint64_t v19 = v16[28];
  uint64_t v20 = v16[19];
  uint64_t v48 = v16[20];
  uint64_t v49 = v16[27];
  uint64_t v21 = v16[18];
  sub_25B96CA38(v16[14], &qword_26A51BA70);
  sub_25B96CA38(v19, &qword_26A51BA80);
  sub_25B9955E0();
  sub_25B96D920();
  v22();
  uint64_t v23 = v20 + 8;
  sub_25B994E58();
  v24();
  sub_25B96CA38(v18, &qword_26A51BA80);
  sub_25B994A5C(v49, v18, &qword_26A51BA80);
  uint64_t v25 = sub_25B995998();
  sub_25B994A10(v25, v26, &qword_26A51BA80);
  sub_25B994C14(v17, 1, v21);
  if (v27)
  {
    uint64_t v28 = v16[31];
    uint64_t v30 = v16[25];
    uint64_t v29 = v16[26];
    sub_25B96CA38(v16[29], &qword_26A51BA80);
    sub_25B994A10(v29, v30, &qword_26A51B6F8);
    uint64_t v39 = sub_25B994C14(v30, 1, v28);
    if (!v27)
    {
      sub_25B994DE4();
      sub_25B96CA38(v23, &qword_26A51B6F8);
      sub_25B96CA38((uint64_t)&qword_26A51BA80, &qword_26A51BA80);
      sub_25B97AD18();
      sub_25B96D990();
      v31();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25B96DA00();
      sub_25B994BF8();
      __asm { BRAA            X1, X16 }
    }
    __break(1u);
  }
  else
  {
    uint64_t v34 = v16[32];
    uint64_t v35 = v16[4];
    sub_25B96D990();
    v36();
    sub_25B980C94();
    v16[34] = v37;
    sub_25B980924();
    v16[35] = v38;
    sub_25B980FC0();
    v16[36] = *(void *)(v35 + v34);
    sub_25B994BF8();
  }
  return MEMORY[0x270FA2498](v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, v48, v49, a14, a15, a16);
}

uint64_t sub_25B984E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  sub_25B995BA8();
  sub_25B96CA38(*(void *)(v18 + 112), &qword_26A51BA70);
  sub_25B96CA38(v16, &qword_26A51BA80);
  sub_25B9957FC();
  sub_25B995290();
  v19();
  sub_25B994E98();
  v20();
  sub_25B96CA38(v17, &qword_26A51B6F8);
  uint64_t v21 = sub_25B995998();
  sub_25B96CA38(v21, v22);
  sub_25B994B84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B984F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  uint64_t v32 = *(void *)(v18 + 240);
  sub_25B995BA8();
  uint64_t v19 = *(void *)(v18 + 112);
  sub_25B96DAFC();
  v20();
  sub_25B96CA38(v19, &qword_26A51BA70);
  sub_25B96CA38(v16, &qword_26A51BA80);
  sub_25B9957FC();
  sub_25B995D8C();
  v21();
  sub_25B994E98();
  v22();
  sub_25B96CA38(v17, &qword_26A51B6F8);
  sub_25B96CA38(v32, &qword_26A51BA80);
  sub_25B994B84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, v32, a14, a15, a16);
}

uint64_t sub_25B98509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  uint64_t v17 = v16[28];
  uint64_t v18 = v16[26];
  uint64_t v33 = v16[30];
  uint64_t v34 = v16[22];
  uint64_t v19 = v16[17];
  uint64_t v21 = v16[15];
  uint64_t v20 = v16[16];
  sub_25B96CA38(v16[14], &qword_26A51BA70);
  sub_25B96CA38(v17, &qword_26A51BA80);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  sub_25B96D920();
  v22();
  sub_25B96CA38(v18, &qword_26A51B6F8);
  sub_25B96CA38(v33, &qword_26A51BA80);
  sub_25B97AD18();
  sub_25B959038();
  v23();
  sub_25B994B84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v25(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, v33, v34, a14, a15, a16);
}

uint64_t sub_25B985218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  uint64_t v34 = (void (*)(uint64_t, uint64_t))v16[49];
  uint64_t v35 = v16[50];
  uint64_t v17 = v16[28];
  uint64_t v18 = v16[26];
  uint64_t v32 = v16[21];
  uint64_t v33 = v16[31];
  sub_25B96CA38(v16[14], &qword_26A51BA70);
  sub_25B96CA38(v17, &qword_26A51BA80);
  sub_25B995D8C();
  v19();
  sub_25B96D920();
  v20();
  sub_25B96CA38(v18, &qword_26A51B6F8);
  uint64_t v21 = sub_25B995030();
  sub_25B96CA38(v21, v22);
  v34(v32, v33);
  sub_25B994B84();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, v33, v34, v35, a14, a15, a16);
}

uint64_t sub_25B985378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[57] = v17;
  v8[58] = v18;
  v8[55] = a7;
  v8[56] = a8;
  v8[53] = a5;
  v8[54] = a6;
  v8[51] = a1;
  v8[52] = a2;
  uint64_t v9 = sub_25B9EC520();
  v8[59] = v9;
  v8[60] = *(void *)(v9 - 8);
  v8[61] = swift_task_alloc();
  sub_25B94E854(&qword_26A51B6F8);
  v8[62] = swift_task_alloc();
  uint64_t v10 = sub_25B9ECE10();
  v8[63] = v10;
  v8[64] = *(void *)(v10 - 8);
  v8[65] = swift_task_alloc();
  sub_25B94E854(&qword_26A51C008);
  v8[66] = swift_task_alloc();
  v8[67] = swift_task_alloc();
  uint64_t v11 = sub_25B94E854(&qword_26A51BFE0);
  v8[68] = v11;
  v8[69] = *(void *)(v11 - 8);
  v8[70] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BA70);
  v8[71] = swift_task_alloc();
  uint64_t v12 = sub_25B9ECBC0();
  v8[72] = v12;
  v8[73] = *(void *)(v12 - 8);
  v8[74] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BFF8);
  v8[75] = swift_task_alloc();
  v8[76] = swift_task_alloc();
  sub_25B94E854(&qword_26A51BA80);
  v8[77] = swift_task_alloc();
  v8[78] = swift_task_alloc();
  v8[79] = swift_task_alloc();
  v8[80] = swift_task_alloc();
  v8[81] = swift_task_alloc();
  uint64_t v13 = sub_25B9ECE30();
  v8[82] = v13;
  v8[83] = *(void *)(v13 - 8);
  v8[84] = swift_task_alloc();
  uint64_t v14 = sub_25B9ECD70();
  v8[85] = v14;
  v8[86] = *(void *)(v14 - 8);
  v8[87] = swift_task_alloc();
  v8[88] = swift_projectBox();
  v8[89] = swift_projectBox();
  v8[90] = swift_projectBox();
  return MEMORY[0x270FA2498](sub_25B985798, 0, 0);
}

uint64_t sub_25B985798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_25B994F2C();
  sub_25B995768();
  uint64_t v19 = *(void *)(v18 + 416) + 16;
  sub_25B960750();
  uint64_t v20 = MEMORY[0x26116D340](v19);
  *(void *)(v18 + 728) = v20;
  if (!v20)
  {
    if (qword_26A51B000 != -1) {
      swift_once();
    }
    sub_25B9559F0(*(void *)(v18 + 680), (uint64_t)qword_26A51BC28);
    sub_25B960750();
    uint64_t v27 = sub_25B9954F0();
    v28(v27);
    uint64_t v29 = (void *)sub_25B9ECD40();
    os_log_type_t v30 = sub_25B9ED230();
    if (sub_25B994E64(v30))
    {
      uint64_t v31 = (_WORD *)sub_25B96DB28();
      sub_25B96DB1C(v31);
      sub_25B96DAA4(&dword_25B94C000, v32, v33, "Provider has been destroyed, can't complete request");
      sub_25B959290();
    }

    sub_25B995030();
    sub_25B994E58();
    v34();
    sub_25B9ECB90();
    sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
    sub_25B994C2C();
    sub_25B9ECB70();
    swift_willThrow();
    sub_25B994CF4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B9605A0();
LABEL_10:
    sub_25B994D30();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v21 = *(void *)(v18 + 720);
  uint64_t v22 = *(void *)(v18 + 704);
  uint64_t v64 = *(void *)(v18 + 656);
  uint64_t v23 = *(void *)(v18 + 648);
  *(void *)(v18 + 736) = OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData;
  sub_25B960750();
  sub_25B960750();
  sub_25B995018();
  sub_25B960750();
  sub_25B995018();
  sub_25B960750();
  sub_25B960750();
  sub_25B995018();
  sub_25B995018();
  sub_25B994A10(v22, v23, &qword_26A51BA80);
  sub_25B994C14(v23, 1, v64);
  if (v24)
  {
    uint64_t v25 = *(void *)(v18 + 648);
    uint64_t v26 = *(void *)(v18 + 408);

    sub_25B96CA38(v25, &qword_26A51BA80);
    *(_OWORD *)uint64_t v26 = 0u;
    *(_OWORD *)(v26 + 16) = 0u;
    *(void *)(v26 + 32) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    goto LABEL_10;
  }
  *(void *)(v18 + 744) = *(void *)(*(void *)(v18 + 664) + 32);
  uint64_t v37 = *(void *)(v18 + 712);
  uint64_t v38 = *(void *)(v18 + 608);
  sub_25B994EA4();
  v39();
  sub_25B980C94();
  *(void *)(v18 + 752) = v40;
  sub_25B994A10(v37, v38, &qword_26A51BFF8);
  uint64_t v41 = sub_25B94E854(&qword_26A51C000);
  sub_25B995498(v41);
  if (v37 != 1)
  {
    uint64_t v58 = *(void *)(v18 + 760);
    uint64_t v59 = *(void *)(v18 + 712);
    sub_25B96D9C4();
    uint64_t v42 = sub_25B994C14(v59, 1, v58);
    if (!v24)
    {
      uint64_t v60 = swift_task_alloc();
      uint64_t v61 = (void *)sub_25B9952D0(v60);
      *uint64_t v61 = v62;
      v61[1] = sub_25B986398;
      sub_25B994FE0();
      sub_25B994D30();
      return MEMORY[0x270FA2100](v42, v43, v44, v45, v46, v47, v48, v49);
    }
LABEL_23:
    __break(1u);
    return MEMORY[0x270FA2100](v42, v43, v44, v45, v46, v47, v48, v49);
  }
  sub_25B9952E0();
  *(void *)(v18 + 776) = *(uint64_t *)((char *)&qword_26A51BFF8 + v21);
  sub_25B994A10(v37, v22, &qword_26A51BA80);
  uint64_t v42 = sub_25B994C14(v22, 1, v38);
  if (v24)
  {
    __break(1u);
    goto LABEL_23;
  }
  sub_25B994D30();
  return MEMORY[0x270FA2498](v50, v51, v52, v53, v54, v55, v56, v57, a9, a10, v18 + 240, v18 + 264, v18 + 288, v64, a15, a16, a17, a18);
}

uint64_t sub_25B985D3C()
{
  sub_25B960558();
  uint64_t v1 = v0[83];
  sub_25B966100();
  v0[98] = v2;
  v0[99] = *(void *)(v1 + 8);
  v0[100] = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_25B9953E0();
  sub_25B994E58();
  v3();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B985DE0()
{
  sub_25B994F10();
  sub_25B99564C();
  uint64_t v1 = *(void *)(v0 + 760);
  uint64_t v35 = *(void *)(v0 + 712);
  uint64_t v36 = *(void *)(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 536);
  sub_25B987C34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B9ED1A0();
  sub_25B96D920();
  v5();
  sub_25B995D14();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v6, v7, v8, v1);
  sub_25B9949A8(v2, v35, &qword_26A51BFF8);
  sub_25B9EC450();
  uint64_t v9 = sub_25B9EC460();
  sub_25B9959D8(v9);
  sub_25B9949A8(v4, v36, &qword_26A51C008);
  uint64_t v10 = sub_25B9ECE20();
  *(void *)(v0 + 808) = v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v0 + 816) = v11;
  if (v11)
  {
    *(_DWORD *)(v0 + 912) = *(_DWORD *)(*(void *)(v0 + 512) + 80);
    sub_25B995CAC();
    *(void *)(v0 + 824) = v12;
    *(void *)(v0 + 832) = v13;
    *(void *)(v0 + 840) = 0;
    uint64_t v14 = *(void *)(v0 + 496);
    sub_25B96D8F8();
    v15();
    sub_25B99507C(v14);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 848) = v16;
    void *v16 = v0;
    v16[1] = sub_25B9860A4;
    sub_25B99500C(*(void *)(v0 + 520));
    sub_25B994BF8();
    return sub_25B96652C();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_25B99569C();
    sub_25B96CA38(v19, &qword_26A51BA70);
    sub_25B96CA38(v3, &qword_26A51BA80);
    sub_25B96D920();
    v20();
    uint64_t v21 = *(void *)(v0 + 760);
    uint64_t v22 = *(void *)(v0 + 712);
    sub_25B96D9C4();
    uint64_t v23 = sub_25B994C14(v22, 1, v21);
    if (v31)
    {
      __break(1u);
    }
    else
    {
      uint64_t v32 = swift_task_alloc();
      uint64_t v33 = (void *)sub_25B9952D0(v32);
      void *v33 = v34;
      v33[1] = sub_25B986398;
      sub_25B994FE0();
      sub_25B994BF8();
    }
    return MEMORY[0x270FA2100](v23, v24, v25, v26, v27, v28, v29, v30);
  }
}

uint64_t sub_25B9860A4()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 856) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 496);
    swift_bridgeObjectRelease();
    sub_25B96CA38(v7, &qword_26A51B6F8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B96CA38(*(void *)(v3 + 496), &qword_26A51B6F8);
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9861B8()
{
  sub_25B995BBC();
  sub_25B994E80();
  uint64_t v1 = v0[102];
  uint64_t v2 = v0[105] + 1;
  sub_25B959038();
  v3();
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_25B99569C();
    sub_25B96CA38(v4, &qword_26A51BA70);
    sub_25B96CA38(v2, &qword_26A51BA80);
    sub_25B96D920();
    v5();
    uint64_t v6 = v0[95];
    uint64_t v7 = v0[89];
    sub_25B96D9C4();
    uint64_t v8 = sub_25B994C14(v7, 1, v6);
    if (v16)
    {
      __break(1u);
    }
    else
    {
      uint64_t v17 = swift_task_alloc();
      uint64_t v18 = (void *)sub_25B9952D0(v17);
      *uint64_t v18 = v19;
      v18[1] = sub_25B986398;
      sub_25B994FE0();
      sub_25B99581C();
    }
    return MEMORY[0x270FA2100](v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    ++v0[105];
    uint64_t v20 = v0[62];
    sub_25B9953AC();
    v21();
    sub_25B99507C(v20);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[106] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_25B9860A4;
    sub_25B99500C(v0[65]);
    sub_25B99581C();
    return sub_25B96652C();
  }
}

uint64_t sub_25B986398()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 872) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_endAccess();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98647C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_25B994F10();
  sub_25B99564C();
  uint64_t v19 = *(void *)(v18 + 720);
  if (*(void *)(v18 + 40))
  {
    swift_bridgeObjectRelease();
    sub_25B9949F8((long long *)(v18 + 16), v18 + 56);
    sub_25B96D9C4();
    uint64_t v20 = sub_25B9EC460();
    uint64_t result = sub_25B994C14(v19, 1, v20);
    if (!v22)
    {
      uint64_t v23 = *(void **)(v18 + 728);
      uint64_t v24 = *(void *)(v18 + 408);
      sub_25B9EC440();
      swift_endAccess();

      sub_25B995C6C();
      sub_25B995290();
      v25();
      sub_25B9949F8((long long *)(v18 + 56), v24);
      sub_25B994CF4();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25B96DA00();
      sub_25B994BF8();
      return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v34 = *(void *)(v18 + 600);
  uint64_t v35 = *(void *)(v18 + 528);
  sub_25B96CA38(v18 + 16, &qword_26A51C028);
  sub_25B99507C(v34);
  uint64_t v36 = sub_25B995B44();
  sub_25B9949A8(v36, v37, v38);
  uint64_t v39 = sub_25B995DF0();
  sub_25B994A10(v39, v40, v41);
  uint64_t v42 = sub_25B9EC460();
  uint64_t result = sub_25B994C14(v35, 1, v42);
  if (v22) {
    goto LABEL_11;
  }
  sub_25B9EC430();
  sub_25B97AD18();
  sub_25B959038();
  v43();
  uint64_t v44 = (void *)swift_task_alloc();
  *(void *)(v18 + 880) = v44;
  *uint64_t v44 = v18;
  v44[1] = sub_25B986730;
  sub_25B99500C(*(void *)(v18 + 488));
  sub_25B994BF8();
  return sub_25B98CB3C();
}

uint64_t sub_25B986730()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 888) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_25B94E8B8();
    return MEMORY[0x270FA2498]();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 896) = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_25B98687C;
    return sub_25B9895D0();
  }
}

uint64_t sub_25B98687C()
{
  sub_25B960558();
  sub_25B96D860();
  sub_25B96054C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 904) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B986980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994F10();
  sub_25B99564C();
  uint64_t v17 = *(void *)(v16 + 704);
  uint64_t v18 = *(void *)(v16 + 664);
  uint64_t v19 = *(void *)(v16 + 656);
  uint64_t v20 = *(void *)(v16 + 624);
  uint64_t v21 = *(void *)(v16 + 616);
  sub_25B96DAFC();
  v22();
  uint64_t v23 = v18 + 8;
  sub_25B995070();
  v24();
  sub_25B9949A8(v20, v17, &qword_26A51BA80);
  sub_25B994A10(v17, v21, &qword_26A51BA80);
  sub_25B994C14(v21, 1, v19);
  if (v29)
  {
    uint64_t v25 = (uint64_t *)(v16 + 616);
    goto LABEL_7;
  }
  uint64_t v26 = *(void *)(v16 + 704);
  uint64_t v27 = *(void *)(v16 + 656);
  uint64_t v28 = *(void *)(v16 + 648);
  sub_25B96CA38(*(void *)(v16 + 616), &qword_26A51BA80);
  sub_25B994A10(v26, v28, &qword_26A51BA80);
  sub_25B994C14(v28, 1, v27);
  if (v29)
  {
    uint64_t v25 = (uint64_t *)(v16 + 648);
LABEL_7:
    uint64_t v30 = *v25;
    uint64_t v31 = *(void *)(v16 + 408);

    sub_25B96CA38(v30, &qword_26A51BA80);
    *(_OWORD *)uint64_t v31 = 0u;
    *(_OWORD *)(v31 + 16) = 0u;
    *(void *)(v31 + 32) = 0;
    sub_25B994CF4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    sub_25B994BF8();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v34 = *(void *)(v16 + 712);
  uint64_t v35 = *(void *)(v16 + 608);
  sub_25B96D990();
  v36();
  sub_25B980C94();
  *(void *)(v16 + 752) = v37;
  sub_25B994A10(v34, v35, &qword_26A51BFF8);
  uint64_t v38 = sub_25B94E854(&qword_26A51C000);
  sub_25B995498(v38);
  if (v34 != 1)
  {
    uint64_t v55 = *(void *)(v16 + 760);
    uint64_t v56 = *(void *)(v16 + 712);
    sub_25B96D9C4();
    uint64_t v39 = sub_25B994C14(v56, 1, v55);
    if (!v29)
    {
      uint64_t v57 = swift_task_alloc();
      uint64_t v58 = (void *)sub_25B9952D0(v57);
      *uint64_t v58 = v59;
      v58[1] = sub_25B986398;
      sub_25B994FE0();
      sub_25B994BF8();
      return MEMORY[0x270FA2100](v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16);
    }
LABEL_20:
    __break(1u);
    return MEMORY[0x270FA2100](v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  sub_25B9952E0();
  *(void *)(v16 + 776) = *(uint64_t *)((char *)&qword_26A51BFF8 + v23);
  sub_25B994A10(v34, (uint64_t)&qword_26A51BA80, &qword_26A51BA80);
  uint64_t v39 = sub_25B994C14((uint64_t)&qword_26A51BA80, 1, v35);
  if (v29)
  {
    __break(1u);
    goto LABEL_20;
  }
  sub_25B994BF8();
  return MEMORY[0x270FA2498](v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B986CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_25B994F2C();
  sub_25B995768();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v20 + 792);
  uint64_t v37 = *(void *)(v20 + 800);
  uint64_t v35 = *(void *)(v20 + 672);
  uint64_t v21 = *(void *)(v20 + 656);
  uint64_t v22 = *(void *)(v20 + 640);
  uint64_t v23 = *(void *)(v20 + 568);

  sub_25B9955E0();
  sub_25B995D8C();
  v24();
  sub_25B96CA38(v23, &qword_26A51BA70);
  sub_25B96CA38(v22, &qword_26A51BA80);
  sub_25B994E98();
  v25();
  v36(v35, v21);
  sub_25B994B00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B99539C();
  sub_25B994D30();
  return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, v35, v36, v37, a18, a19, a20);
}

uint64_t sub_25B986E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_25B994F2C();
  sub_25B995768();
  uint64_t v21 = *(void **)(v20 + 728);
  swift_endAccess();
  swift_bridgeObjectRelease();

  sub_25B96D920();
  v22();
  sub_25B994B00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B99539C();
  sub_25B994D30();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_25B986F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_25B994F2C();
  sub_25B995768();
  sub_25B99550C();
  sub_25B995070();
  v20();
  sub_25B96D920();
  v21();
  sub_25B994B00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B99539C();
  sub_25B994D30();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_25B987084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_25B994F2C();
  sub_25B995768();
  sub_25B99550C();
  sub_25B995070();
  v20();
  sub_25B96D920();
  v21();
  sub_25B994B00();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B99539C();
  sub_25B994D30();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_25B987190()
{
  sub_25B960594();
  *(void *)(v1 + 112) = v16;
  *(void *)(v1 + 120) = v0;
  *(_OWORD *)(v1 + 80) = v14;
  *(_OWORD *)(v1 + 96) = v15;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  uint64_t v10 = sub_25B9EC300();
  *(void *)(v1 + 128) = v10;
  sub_25B964F20(v10);
  *(void *)(v1 + 136) = v11;
  *(void *)(v1 + 144) = sub_25B960674();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98723C()
{
  sub_25B99564C();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 40);
  long long v10 = *(_OWORD *)(v0 + 64);
  long long v11 = *(_OWORD *)(v0 + 48);
  long long v12 = *(_OWORD *)(v0 + 96);
  long long v8 = *(_OWORD *)(v0 + 24);
  long long v9 = *(_OWORD *)(v0 + 80);
  sub_25B9EC2F0();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 152) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 56) = v11;
  *(_OWORD *)(v5 + 72) = v10;
  *(_OWORD *)(v5 + 88) = v9;
  *(_OWORD *)(v5 + 104) = v12;
  *(void *)(v5 + 120) = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v6;
  sub_25B94E854(&qword_26A51B6F8);
  *uint64_t v6 = v0;
  v6[1] = sub_25B98739C;
  sub_25B94E8B8();
  return MEMORY[0x270FA2360]();
}

uint64_t sub_25B98739C()
{
  sub_25B960594();
  sub_25B960524();
  sub_25B96054C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25B96053C();
  void *v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B987494()
{
  sub_25B960594();
  sub_25B96DAFC();
  v0();
  swift_task_dealloc();
  sub_25B96DA00();
  return v1();
}

uint64_t sub_25B987504()
{
  sub_25B960594();
  sub_25B96DAFC();
  v0();
  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

uint64_t sub_25B987578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v45 = a5;
  uint64_t v46 = a6;
  uint64_t v44 = a4;
  uint64_t v39 = sub_25B9ECD70();
  v38[7] = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_25B94E854(&qword_26A51BE28);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25B9EC300();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v25 + 16);
  uint64_t v49 = a3;
  v38[5] = v27;
  v38[4] = v25 + 16;
  v38[3] = v26;
  v26(v24, a3);
  uint64_t v28 = sub_25B94E854(&qword_26A51BE30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v21, a1, v28);
  v38[2] = v28;
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v21, 0, 1, v28);
  uint64_t v29 = a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest;
  swift_beginAccess();
  uint64_t v40 = v21;
  v38[6] = v24;
  v38[1] = v29;
  sub_25B9CEC74();
  swift_endAccess();
  uint64_t v43 = a2;
  uint64_t v30 = a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  swift_beginAccess();
  uint64_t result = sub_25B994A10(v30, (uint64_t)v50, &qword_26A51BD38);
  if (v51)
  {
    uint64_t v32 = v52;
    uint64_t v33 = sub_25B94F2E0(v50, v51);
    uint64_t v42 = v38;
    MEMORY[0x270FA5388](v33);
    uint64_t v34 = v44;
    v38[-14] = v43;
    v38[-13] = v34;
    uint64_t v35 = v46;
    v38[-12] = v45;
    v38[-11] = v35;
    uint64_t v36 = v48;
    v38[-10] = v47;
    v38[-9] = v36;
    v38[-8] = a9;
    v38[-7] = a10;
    v38[-6] = a11;
    v38[-5] = a12;
    v38[-4] = a13;
    v38[-3] = a14;
    uint64_t v37 = v49;
    v38[-2] = a15;
    v38[-1] = v37;
    (*(void (**)(uint64_t (*)(uint64_t)))(v32 + 16))(sub_25B993FB8);
    return sub_25B94F65C((uint64_t)v50);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B987C34()
{
  sub_25B964F38();
  uint64_t v1 = sub_25B94E854(&qword_26A51BED0);
  sub_25B950790();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_25B959380();
  sub_25B9EC300();
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B97B0B0();
  sub_25B9EC2F0();
  sub_25B94E854(&qword_26A51BED8);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x263F8F680], v1);
  sub_25B9ED1D0();
  sub_25B995290();
  v6();
  sub_25B964F50();
}

uint64_t sub_25B987E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v58 = a8;
  uint64_t v57 = a7;
  uint64_t v56 = a6;
  uint64_t v55 = a5;
  uint64_t v54 = a4;
  uint64_t v62 = a1;
  uint64_t v51 = sub_25B9ECD70();
  v50[5] = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  v50[4] = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25B9EC300();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = v20;
  uint64_t v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25B94E854(&qword_26A51BE10);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_25B94E854(&qword_26A51BE08);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v61 = (char *)v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v50 - v29;
  uint64_t v63 = a2;
  uint64_t v31 = (uint64_t *)(a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests);
  swift_beginAccess();
  uint64_t v60 = v31;
  uint64_t v32 = *v31;
  swift_bridgeObjectRetain();
  uint64_t v33 = a3;
  sub_25B982FD0(v32, (uint64_t)v30);
  swift_bridgeObjectRelease();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v30, 1, v22))
  {
    sub_25B96CA38((uint64_t)v30, &qword_26A51BE08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v30, v22);
    sub_25B96CA38((uint64_t)v30, &qword_26A51BE08);
    uint64_t v65 = 0;
    sub_25B9ED190();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v64 = v33;
  v34(v21, v33, v18);
  uint64_t v35 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v61, v62, v22);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v35, 0, 1, v22);
  swift_beginAccess();
  sub_25B9CEC44();
  swift_endAccess();
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v63;
  swift_unknownObjectWeakInit();
  v50[1] = v19 + 16;
  v50[0] = v34;
  v34(v21, v64, v18);
  unint64_t v38 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v36;
  uint64_t v40 = *(void (**)(unint64_t, char *, uint64_t))(v19 + 32);
  uint64_t v52 = v21;
  void v50[3] = v18;
  v40(v39 + v38, v21, v18);
  v50[2] = v22;
  sub_25B9ED170();
  uint64_t v41 = v37 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  swift_beginAccess();
  uint64_t result = sub_25B994A10(v41, (uint64_t)&v65, &qword_26A51BD38);
  uint64_t v43 = v64;
  if (v66)
  {
    uint64_t v59 = a15;
    uint64_t v53 = a14;
    uint64_t v44 = v67;
    uint64_t v45 = sub_25B94F2E0(&v65, v66);
    MEMORY[0x270FA5388](v45);
    uint64_t v46 = v54;
    v50[-14] = v63;
    v50[-13] = v46;
    uint64_t v47 = v56;
    v50[-12] = v55;
    v50[-11] = v47;
    uint64_t v48 = v58;
    v50[-10] = v57;
    v50[-9] = v48;
    v50[-8] = a9;
    v50[-7] = a10;
    v50[-6] = a11;
    v50[-5] = a12;
    uint64_t v49 = v53;
    v50[-4] = a13;
    v50[-3] = v49;
    v50[-2] = v59;
    v50[-1] = v43;
    (*(void (**)(uint64_t (*)(uint64_t)))(v44 + 16))(sub_25B993C00);
    return sub_25B94F65C((uint64_t)&v65);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25B988760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25B94E854(&qword_26A51BE08);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25B94E854(&qword_26A51BEF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  int v13 = *MEMORY[0x263F8F650];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (a1 == v13)
  {
    uint64_t v14 = a2 + 16;
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x26116D340](a2 + 16);
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      sub_25B989238();
    }
    swift_beginAccess();
    uint64_t v17 = MEMORY[0x26116D340](v14);
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      swift_beginAccess();
      sub_25B99304C(a3, &qword_26A51BF60, &qword_26A51BE10);
      sub_25B96CA38((uint64_t)v8, &qword_26A51BE08);
      swift_endAccess();
    }
    else
    {
      uint64_t v19 = sub_25B94E854(&qword_26A51BE10);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v8, 1, 1, v19);
      sub_25B96CA38((uint64_t)v8, &qword_26A51BE08);
    }
  }
}

void sub_25B9889BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,void *a26,uint64_t a27,SEL *a28)
{
  sub_25B964F38();
  uint64_t v150 = v33;
  uint64_t v145 = v34;
  uint64_t v137 = v35;
  uint64_t v163 = v36;
  uint64_t v164 = (void (*)(void))v37;
  uint64_t v141 = (void *)v38;
  sub_25B9594D0();
  id v159 = a23;
  id v160 = a24;
  uint64_t v154 = (void *)a21;
  id v155 = a22;
  uint64_t v39 = sub_25B9ECD20();
  sub_25B950790();
  uint64_t v136 = v40;
  MEMORY[0x270FA5388](v41);
  sub_25B96DA40();
  uint64_t v44 = (SEL *)(v42 - v43);
  MEMORY[0x270FA5388](v45);
  sub_25B99555C();
  uint64_t v135 = v46;
  uint64_t v158 = sub_25B9EC940();
  sub_25B950790();
  uint64_t v156 = v47;
  MEMORY[0x270FA5388](v48);
  sub_25B958FE4();
  uint64_t v157 = v49;
  uint64_t v153 = sub_25B9EC9A0();
  sub_25B950790();
  uint64_t v151 = v50;
  MEMORY[0x270FA5388](v51);
  sub_25B958FE4();
  uint64_t v152 = v52;
  uint64_t v53 = sub_25B94E854(&qword_26A51B820);
  uint64_t v54 = sub_25B96068C(v53);
  MEMORY[0x270FA5388](v54);
  sub_25B958FE4();
  uint64_t v149 = v55;
  sub_25B9951BC();
  uint64_t v148 = sub_25B9EC580();
  sub_25B950790();
  uint64_t v146 = v56;
  MEMORY[0x270FA5388](v57);
  v147 = (char *)&v131 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9951BC();
  uint64_t v142 = sub_25B9ECBC0();
  sub_25B950790();
  uint64_t v140 = v59;
  MEMORY[0x270FA5388](v60);
  sub_25B958FE4();
  uint64_t v143 = v61;
  sub_25B9951BC();
  uint64_t v134 = sub_25B9ECB10();
  sub_25B950790();
  uint64_t v63 = v62;
  MEMORY[0x270FA5388](v64);
  sub_25B96DB08();
  uint64_t v133 = v65;
  sub_25B9951B0();
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = sub_25B94E854(&qword_26A51BA70);
  uint64_t v68 = sub_25B96068C(v67);
  MEMORY[0x270FA5388](v68);
  sub_25B959398();
  uint64_t v69 = sub_25B94E854(&qword_26A51BA80);
  uint64_t v70 = sub_25B96068C(v69);
  MEMORY[0x270FA5388](v70);
  sub_25B9955EC();
  uint64_t v71 = type metadata accessor for SessionConfiguration();
  uint64_t v72 = sub_25B96068C(v71);
  MEMORY[0x270FA5388](v72);
  sub_25B97AE5C();
  id v161 = v28;
  sub_25B961BAC(*(void *)&v28[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_clientData]+ OBJC_IVAR____TtC4Sage38GenerativeExperiencesSessionClientData_configuration, v29);
  id v73 = objc_allocWithZone((Class)type metadata accessor for SessionConfigurationXPCEnvelope());
  uint64_t v162 = v30;
  swift_unknownObjectRetain();
  uint64_t v74 = v137;
  SessionConfigurationXPCEnvelope.init(sealing:)();
  uint64_t v144 = (void *)v75;
  sub_25B994A10((uint64_t)v141, v32, &qword_26A51BA80);
  id v76 = objc_allocWithZone((Class)type metadata accessor for ChatMessagesXPCEnvelope());
  sub_25B970C70();
  uint64_t v141 = (void *)v77;
  sub_25B994A10(v163, v31, &qword_26A51BA70);
  id v78 = objc_allocWithZone((Class)type metadata accessor for TemplateXPCEnvelope());
  sub_25B971204();
  uint64_t v139 = (void *)v79;
  id v80 = objc_allocWithZone((Class)type metadata accessor for BindingVariablesXPCEnvelope());
  swift_bridgeObjectRetain();
  sub_25B971930();
  uint64_t v138 = (void *)v81;
  uint64_t v82 = *(void *)(v74 + 16);
  uint64_t v83 = MEMORY[0x263F8EE78];
  if (v82)
  {
    uint64_t v131 = v44;
    uint64_t v132 = v39;
    uint64_t v165 = MEMORY[0x263F8EE78];
    sub_25B9ED410();
    uint64_t v86 = *(void (**)(void))(v63 + 16);
    uint64_t v85 = v63 + 16;
    uint64_t v84 = v86;
    sub_25B96D878();
    uint64_t v88 = v74 + v87;
    uint64_t v163 = *(void *)(v85 + 56);
    uint64_t v164 = (void (*)(void))v85;
    do
    {
      sub_25B995D80();
      v84();
      sub_25B995D80();
      v84();
      id v89 = objc_allocWithZone((Class)type metadata accessor for DocumentIdentifierXPCEnvelope());
      DocumentIdentifierXPCEnvelope.init(sealing:)();
      sub_25B9950BC();
      v90();
      sub_25B9ED3F0();
      sub_25B9ED420();
      sub_25B9ED430();
      sub_25B9ED400();
      v88 += v163;
      --v82;
    }
    while (v82);
    uint64_t v83 = v165;
  }
  uint64_t v137 = v83;
  uint64_t v91 = a27;
  uint64_t v92 = a28;
  uint64_t v94 = a25;
  uint64_t v93 = a26;
  uint64_t v95 = v145;
  uint64_t v96 = *(void *)(v145 + 16);
  if (v96)
  {
    uint64_t v131 = a28;
    uint64_t v132 = a25;
    uint64_t v133 = a26;
    uint64_t v134 = a27;
    uint64_t v165 = MEMORY[0x263F8EE78];
    sub_25B9ED410();
    uint64_t v97 = v136 + 16;
    sub_25B96D878();
    uint64_t v99 = v95 + v98;
    uint64_t v163 = *(void *)(v97 + 56);
    uint64_t v164 = (void (*)(void))v100;
    do
    {
      uint64_t v101 = v164;
      sub_25B995D80();
      v101();
      sub_25B995D80();
      v101();
      id v102 = objc_allocWithZone((Class)type metadata accessor for ToolTypeXPCEnvelope());
      ToolTypeXPCEnvelope.init(sealing:)();
      sub_25B994E98();
      v103();
      sub_25B9ED3F0();
      sub_25B9ED420();
      sub_25B9ED430();
      sub_25B9ED400();
      v99 += v163;
      --v96;
    }
    while (v96);
    uint64_t v164 = (void (*)(void))v165;
    uint64_t v91 = v134;
    uint64_t v93 = v133;
    uint64_t v94 = v132;
    uint64_t v92 = v131;
  }
  else
  {
    uint64_t v164 = (void (*)(void))MEMORY[0x263F8EE78];
  }
  sub_25B96D8F8();
  v104();
  id v105 = objc_allocWithZone((Class)type metadata accessor for ToolChoiceXPCEnvelope());
  sub_25B97AC90();
  ToolChoiceXPCEnvelope.init(sealing:)();
  uint64_t v163 = v106;
  sub_25B96D8F8();
  v107();
  id v108 = objc_allocWithZone((Class)type metadata accessor for SamplingParametersXPCEnvelope());
  sub_25B97AC90();
  sub_25B972240();
  uint64_t v154 = (void *)v109;
  sub_25B994A10((uint64_t)v155, v149, &qword_26A51B820);
  id v110 = objc_allocWithZone((Class)type metadata accessor for SchemaXPCEnvelope());
  SchemaXPCEnvelope.init(sealing:)();
  uint64_t v112 = (uint64_t)v111;
  id v155 = v111;
  sub_25B96D8F8();
  v113();
  id v114 = objc_allocWithZone((Class)type metadata accessor for StringRenderedPromptSanitizerXPCEnvelope());
  uint64_t v115 = (void *)StringRenderedPromptSanitizerXPCEnvelope.init(sealing:)();
  id v159 = v115;
  sub_25B96D8F8();
  v116();
  id v117 = objc_allocWithZone((Class)type metadata accessor for StringResponseSanitizerXPCEnvelope());
  uint64_t v118 = (void *)StringResponseSanitizerXPCEnvelope.init(sealing:)();
  id v160 = v118;
  id v119 = v161;
  uint64_t v130 = v91;
  uint64_t v128 = (uint64_t)v118;
  uint64_t v129 = v94;
  uint64_t v126 = v112;
  uint64_t v127 = (uint64_t)v115;
  uint64_t v120 = v144;
  uint64_t v121 = v141;
  uint64_t v122 = v139;
  uint64_t v123 = v138;
  uint64_t v124 = (void *)v163;
  uint64_t v125 = v154;
  sub_25B993E58((uint64_t)v144, (uint64_t)v141, (uint64_t)v139, (uint64_t)v138, v137, (uint64_t)v164, v163, (uint64_t)v154, v126, v127, v128, v129, v93, v130, (uint64_t)v119, v162, v92);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_25B964F50();
}

void sub_25B989238()
{
  sub_25B964F38();
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  uint64_t v2 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  sub_25B960750();
  sub_25B994A10(v2, (uint64_t)v5, &qword_26A51BD38);
  if (v6)
  {
    uint64_t v3 = v7;
    uint64_t v4 = sub_25B94F2E0(v5, v6);
    MEMORY[0x270FA5388](v4);
    (*(void (**)(void))(v3 + 16))(sub_25B993B8C);
    sub_25B94F65C((uint64_t)v5);
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B989568(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = (id)sub_25B9EC2D0();
  objc_msgSend(a1, sel_cancelRequestWithUuid_, v2);
  swift_unknownObjectRelease();
}

uint64_t sub_25B9895D0()
{
  sub_25B960594();
  v1[8] = v2;
  v1[9] = v0;
  v1[6] = v3;
  v1[7] = v4;
  uint64_t v5 = sub_25B9ECD70();
  v1[10] = v5;
  sub_25B964F20(v5);
  v1[11] = v6;
  v1[12] = sub_25B960674();
  uint64_t v7 = sub_25B9ECF40();
  v1[13] = v7;
  sub_25B964F20(v7);
  v1[14] = v8;
  v1[15] = sub_25B960674();
  uint64_t v9 = sub_25B94E854(&qword_26A51BE68);
  sub_25B96068C(v9);
  v1[16] = sub_25B960674();
  uint64_t v10 = sub_25B9EC510();
  v1[17] = v10;
  sub_25B964F20(v10);
  v1[18] = v11;
  v1[19] = sub_25B994D84();
  v1[20] = swift_task_alloc();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9896F0()
{
  uint64_t v32 = v0;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = sub_25B9EC470();
  sub_25B995DB8(v3);
  swift_bridgeObjectRelease();
  sub_25B994C14(v2, 1, v1);
  if (v4)
  {
    sub_25B96CA38(v0[16], &qword_26A51BE68);
    if (qword_26A51B000 != -1) {
      swift_once();
    }
    sub_25B9559F0(v0[10], (uint64_t)qword_26A51BC28);
    sub_25B960750();
    uint64_t v5 = sub_25B9954F0();
    v6(v5);
    uint64_t v7 = sub_25B9ECD40();
    os_log_type_t v8 = sub_25B9ED230();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)sub_25B995750();
      uint64_t v31 = sub_25B9954D8();
      *(_DWORD *)uint64_t v9 = 136315138;
      sub_25B9956D8();
      v0[5] = sub_25B9910E8(0xD00000000000001ALL, v10, &v31);
      sub_25B9ED2C0();
      _os_log_impl(&dword_25B94C000, v7, v8, "%s Response was missing candidates", v9, 0xCu);
      swift_arrayDestroy();
      sub_25B959290();
      sub_25B959290();
    }

    sub_25B995070();
    v11();
    uint64_t v12 = v0[6];
LABEL_15:
    uint64_t v26 = sub_25B9ECE30();
    sub_25B96D92C(v12, v27, v28, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    sub_25B995194();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v13 = v0[19];
  uint64_t v14 = v0[20];
  uint64_t v15 = v0[17];
  uint64_t v16 = v0[18];
  uint64_t v17 = v0[8];
  sub_25B994EA4();
  v18();
  uint64_t v19 = *(void *)(v17 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
  uint64_t v20 = v0[18];
  if (!v19)
  {
    uint64_t v22 = *(void (**)(void))(v20 + 8);
    ((void (*)(void, void))v22)(v0[19], v0[17]);
    goto LABEL_14;
  }
  uint64_t v21 = *(void *)(sub_25B9EC500() + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(void))(v20 + 8);
  v0[21] = v22;
  v0[22] = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_25B96D920();
  v22();
  if (!v21)
  {
LABEL_14:
    uint64_t v12 = v0[6];
    ((void (*)(void, void))v22)(v0[20], v0[17]);
    goto LABEL_15;
  }
  v0[23] = sub_25B9EC500();
  uint64_t v23 = (void *)swift_task_alloc();
  v0[24] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_25B989A6C;
  sub_25B99500C(v0[8]);
  sub_25B995194();
  return sub_25B98A1C0();
}

uint64_t sub_25B989A6C()
{
  sub_25B960594();
  sub_25B960524();
  sub_25B96054C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25B96053C();
  void *v5 = v4;
  *(void *)(v7 + 200) = v6;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B989B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  uint64_t v17 = v16[25];
  if (*(void *)(v17 + 16))
  {
    a11 = (void (*)(uint64_t, uint64_t))v16[21];
    a12 = v16[22];
    a10 = v16[20];
    uint64_t v18 = v16[17];
    uint64_t v19 = v16[14];
    uint64_t v20 = v16[15];
    uint64_t v21 = v16[13];
    uint64_t v22 = v16[6];
    sub_25B94E854(&qword_26A51B688);
    uint64_t v23 = sub_25B9ECE10();
    sub_25B964F20(v23);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_25B9F6AE0;
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v20, *MEMORY[0x263F620F8], v21);
    *(void *)(swift_task_alloc() + 16) = v17;
    sub_25B9ECDD0();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_25B9ECE40();
    a11(a10, v18);
    uint64_t v24 = sub_25B9ECE30();
    uint64_t v25 = v22;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v27 = v16[6];
    ((void (*)(void, void))v16[21])(v16[20], v16[17]);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_25B9ECE30();
    uint64_t v25 = v27;
    uint64_t v26 = 1;
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v25, v26, 1, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B96DA00();
  sub_25B994D4C();
  return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B989D5C()
{
  sub_25B995BBC();
  sub_25B994E80();
  (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 160), *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B99581C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B989DFC(uint64_t a1)
{
  uint64_t v2 = sub_25B9ECF20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = &type metadata for GenerativeExperiencesSessionClient.ToolCallResults;
  v11[4] = sub_25B993B40();
  v11[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = MEMORY[0x263F620B0];
  sub_25B9ECE60();
  sub_25B94F65C((uint64_t)v11);
  sub_25B94E854(&qword_26A51BE90);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25B9F6AE0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v8 + v7, v5, v2);
  MEMORY[0x26116C2B0](v8, v2, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25B989FA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = sub_25B9ECE80();
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v15 = a2;
    uint64_t v17 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25B992760();
    uint64_t v8 = v17;
    uint64_t v14 = a1;
    uint64_t v9 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B9ECE70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v8;
      unint64_t v10 = *(void *)(v8 + 16);
      if (v10 >= *(void *)(v8 + 24) >> 1)
      {
        sub_25B992760();
        uint64_t v8 = v17;
      }
      v9 += 32;
      *(void *)(v8 + 16) = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v6, v16);
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    a2 = v15;
  }
  *a2 = v8;
  uint64_t v11 = *MEMORY[0x263F62038];
  uint64_t v12 = sub_25B9ECEE0();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
}

uint64_t sub_25B98A1B8@<X0>(void *a1@<X8>)
{
  return sub_25B989FA0(*v1, a1);
}

uint64_t sub_25B98A1C0()
{
  sub_25B960594();
  v0[49] = v1;
  v0[50] = v2;
  uint64_t v3 = sub_25B9ECB30();
  v0[51] = v3;
  sub_25B964F20(v3);
  v0[52] = v4;
  v0[53] = sub_25B960674();
  uint64_t v5 = sub_25B9ECD70();
  v0[54] = v5;
  sub_25B964F20(v5);
  v0[55] = v6;
  v0[56] = sub_25B994D84();
  v0[57] = swift_task_alloc();
  v0[58] = swift_task_alloc();
  v0[59] = swift_task_alloc();
  v0[60] = swift_task_alloc();
  v0[61] = swift_task_alloc();
  uint64_t v7 = sub_25B9ECCA0();
  v0[62] = v7;
  sub_25B964F20(v7);
  v0[63] = v8;
  v0[64] = sub_25B994D84();
  v0[65] = swift_task_alloc();
  v0[66] = swift_task_alloc();
  uint64_t v9 = sub_25B9ECD00();
  v0[67] = v9;
  sub_25B964F20(v9);
  v0[68] = v10;
  v0[69] = sub_25B960674();
  uint64_t v11 = sub_25B9ECD20();
  v0[70] = v11;
  sub_25B964F20(v11);
  v0[71] = v12;
  v0[72] = sub_25B994D84();
  v0[73] = swift_task_alloc();
  v0[74] = swift_task_alloc();
  uint64_t v13 = sub_25B94E854(&qword_26A51BEA8);
  sub_25B96068C(v13);
  v0[75] = sub_25B960674();
  uint64_t v14 = sub_25B9EC840();
  v0[76] = v14;
  sub_25B964F20(v14);
  v0[77] = v15;
  v0[78] = sub_25B960674();
  uint64_t v16 = sub_25B9EC800();
  v0[79] = v16;
  sub_25B964F20(v16);
  v0[80] = v17;
  v0[81] = sub_25B994D84();
  v0[82] = swift_task_alloc();
  uint64_t v18 = sub_25B9EC850();
  v0[83] = v18;
  sub_25B964F20(v18);
  v0[84] = v19;
  v0[85] = sub_25B960674();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98A438()
{
  uint64_t v127 = v1;
  uint64_t v3 = *(void *)(*(void *)(v1 + 400) + 16);
  *(void *)(v1 + 688) = v3;
  if (!v3) {
    goto LABEL_20;
  }
  id v117 = (void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 672);
  uint64_t v116 = v1 + 136;
  *(_DWORD *)(v1 + 816) = *(_DWORD *)(v4 + 80);
  *(void *)(v1 + 696) = *(void *)(v4 + 72);
  *(void *)(v1 + 704) = *(void *)(v4 + 16);
  *(_DWORD *)(v1 + 820) = *MEMORY[0x263F7FAC0];
  *(_DWORD *)(v1 + 824) = *MEMORY[0x263F40E48];
  *(_DWORD *)(v1 + 828) = *MEMORY[0x263F40E40];
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v121 = (void *)(v1 + 96);
LABEL_3:
  *(void *)(v1 + 720) = v6;
  *(void *)(v1 + 712) = v5;
  int v7 = *(_DWORD *)(v1 + 820);
  sub_25B995170();
  uint64_t v8 = *(void *)(v1 + 632);
  uint64_t v9 = sub_25B995048();
  v10(v9);
  sub_25B9EC810();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v0, v8) != v7)
  {
    sub_25B9956B4();
    swift_bridgeObjectRelease();
    if (qword_26A51B000 != -1) {
      swift_once();
    }
    sub_25B9559F0(*(void *)(v1 + 432), (uint64_t)qword_26A51BC28);
    sub_25B960750();
    uint64_t v102 = sub_25B994C4C();
    v103(v102);
    uint64_t v104 = (void *)sub_25B9ECD40();
    os_log_type_t v105 = sub_25B9ED220();
    if (sub_25B994E64(v105))
    {
      uint64_t v106 = (_WORD *)sub_25B96DB28();
      sub_25B96DB1C(v106);
      sub_25B96DAA4(&dword_25B94C000, v107, v108, "Unknown tool call was requested");
      sub_25B959290();
    }
    sub_25B9958B4();

    sub_25B96D920();
    v109();
    sub_25B995CD4();
    swift_bridgeObjectRelease();
    sub_25B995D2C();
    sub_25B99586C(v110);
    sub_25B9ECFE0();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B995C8C();
    sub_25B9ECB90();
    sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
    sub_25B994C2C();
    sub_25B99510C();
    sub_25B994E58();
    v111();
    swift_willThrow();
    sub_25B959038();
    v112();
    sub_25B959038();
    v113();
LABEL_46:
    sub_25B994C90();
    sub_25B995A30();
    sub_25B995A10();
    sub_25B995A04();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B9605A0();
    sub_25B994EB0();
    __asm { BRAA            X1, X16 }
  }
  sub_25B995AA4();
  uint64_t v11 = *(void *)(v1 + 392);
  uint64_t v12 = sub_25B99525C();
  v13(v12);
  sub_25B99548C();
  v14();
  uint64_t v17 = *(void *)(v11 + 16);
  if (!v17)
  {
    uint64_t v114 = *(void *)(v1 + 600);
    sub_25B96D92C(v114, v15, v16, *(void *)(v1 + 560));
    sub_25B96CA38(v114, &qword_26A51BEA8);
    goto LABEL_33;
  }
  uint64_t v18 = *(void *)(v1 + 568);
  sub_25B96D878();
  uint64_t v118 = v20;
  uint64_t v120 = v19;
  uint64_t v21 = v19 + v20;
  swift_bridgeObjectRetain();
  uint64_t v122 = *(void *)(v18 + 72);
  uint64_t v22 = v17;
  do
  {
    int v23 = *(_DWORD *)(v1 + 824);
    sub_25B995AEC();
    uint64_t v25 = *(void *)(v1 + 504);
    sub_25B995DF0();
    sub_25B96D944();
    v24();
    sub_25B9ECCC0();
    LODWORD(v25) = v25 + 88;
    uint64_t v26 = sub_25B995030();
    uint64_t v123 = v27;
    if (v27(v26) == v23)
    {
      (*(void (**)(void, void))(*(void *)(v1 + 504) + 96))(*(void *)(v1 + 528), *(void *)(v1 + 496));
      sub_25B99548C();
      v28();
      uint64_t v29 = sub_25B9ECC20();
      uint64_t v31 = v30;
      uint64_t v32 = sub_25B9EC820();
      uint64_t v34 = *(void *)(v1 + 552);
      uint64_t v35 = *(void *)(v1 + 544);
      uint64_t v36 = *(void *)(v1 + 536);
      BOOL v37 = v29 == v32 && v31 == v33;
      if (v37)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
LABEL_17:
        uint64_t v0 = *(void *)(v1 + 664);
        uint64_t v2 = *(void *)(v1 + 600);
        uint64_t v42 = *(void *)(v1 + 560);
        swift_bridgeObjectRelease();
        sub_25B995B50();
        sub_25B995734();
        v43();
        sub_25B995D14();
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v44, v45, v46, v42);
        sub_25B96CA38(v2, &qword_26A51BEA8);
        sub_25B995998();
        sub_25B9950BC();
        v47();
        sub_25B994E98();
        v48();
        sub_25B99529C();
        uint64_t v6 = MEMORY[0x263F8EE78];
        if (v37)
        {
          sub_25B9956B4();
LABEL_20:
          sub_25B995A30();
          sub_25B995A10();
          sub_25B995A04();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_25B994EB0();
          __asm { BRAA            X2, X16 }
        }
        goto LABEL_3;
      }
      LODWORD(v25) = v33;
      char v38 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B994E58();
      v39();
      if (v38) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_25B9956CC();
      v40();
    }
    uint64_t v41 = *(void (**)(void))(*(void *)(v1 + 568) + 8);
    sub_25B96DAFC();
    v41();
    v21 += v122;
    --v22;
  }
  while (v22);
  uint64_t v51 = *(void *)(v1 + 600);
  swift_bridgeObjectRelease();
  sub_25B99507C(v51);
  sub_25B96CA38(v51, &qword_26A51BEA8);
  swift_bridgeObjectRetain();
  uint64_t v52 = v120 + v118;
  while (1)
  {
    sub_25B995680();
    sub_25B96D944();
    v53();
    sub_25B9ECCC0();
    uint64_t v54 = sub_25B995030();
    if (v123(v54) == v25) {
      break;
    }
    sub_25B9956CC();
    v62();
LABEL_31:
    sub_25B96DAFC();
    v41();
    v52 += v122;
    if (!--v17)
    {
      sub_25B9956B4();
LABEL_33:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_41:
      if (qword_26A51B000 != -1) {
        swift_once();
      }
      sub_25B9559F0(*(void *)(v1 + 432), (uint64_t)qword_26A51BC28);
      sub_25B960750();
      uint64_t v80 = sub_25B994C4C();
      v81(v80);
      uint64_t v82 = (void *)sub_25B9ECD40();
      os_log_type_t v83 = sub_25B9ED230();
      if (sub_25B994E64(v83))
      {
        uint64_t v84 = (_WORD *)sub_25B96DB28();
        sub_25B96DB1C(v84);
        sub_25B96DAA4(&dword_25B94C000, v85, v86, "Requested function call from model does not exist");
        sub_25B959290();
      }
      uint64_t v87 = *(void *)(v1 + 624);
      uint64_t v88 = *(void *)(v1 + 616);
      sub_25B995D4C();
      uint64_t v124 = v89;

      sub_25B9950BC();
      v90();
      sub_25B9EC820();
      sub_25B9ECB20();
      sub_25B9ECB90();
      sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
      sub_25B994C2C();
      sub_25B99510C();
      sub_25B995070();
      v91();
      swift_willThrow();
      sub_25B96D920();
      v92();
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v124);
      goto LABEL_46;
    }
  }
  uint64_t v25 = *(void *)(v1 + 624);
  uint64_t v55 = *(long long **)(v1 + 512);
  id v119 = *(void (**)(long long *, void))(*(void *)(v1 + 504) + 96);
  v119(v55, *(void *)(v1 + 496));
  sub_25B9949F8(v55, (uint64_t)v121);
  sub_25B94F2E0(v121, *(void *)(v1 + 120));
  sub_25B995030();
  uint64_t v56 = sub_25B9ECC80();
  uint64_t v58 = v57;
  if (v56 != sub_25B9EC820() || v58 != v59)
  {
    sub_25B9953E0();
    char v61 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B94F65C((uint64_t)v121);
    if (v61) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease_n();
  sub_25B94F65C((uint64_t)v121);
LABEL_35:
  int v63 = *(_DWORD *)(v1 + 828);
  uint64_t v64 = *(void *)(v1 + 520);
  uint64_t v125 = *(void *)(v1 + 496);
  swift_bridgeObjectRelease();
  sub_25B9953EC();
  sub_25B99503C();
  v65();
  sub_25B9ECCC0();
  sub_25B96D920();
  v41();
  int v66 = ((uint64_t (*)(uint64_t, uint64_t))v123)(v64, v125);
  uint64_t v67 = *(long long **)(v1 + 520);
  if (v66 != v63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_25B9953CC();
    v79(v78);
    goto LABEL_41;
  }
  v119(*(long long **)(v1 + 520), *(void *)(v1 + 496));
  sub_25B9949F8(v67, (uint64_t)v117);
  if (qword_26A51B000 != -1) {
    swift_once();
  }
  uint64_t v68 = *(void *)(v1 + 440);
  *(void *)(v1 + 728) = sub_25B9559F0(*(void *)(v1 + 432), (uint64_t)qword_26A51BC28);
  sub_25B960750();
  *(void *)(v1 + 736) = *(void *)(v68 + 16);
  *(void *)(v1 + 744) = (v68 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v69 = sub_25B994C4C();
  v70(v69);
  sub_25B975308((uint64_t)v117, v116);
  uint64_t v71 = sub_25B9ECD40();
  os_log_type_t v72 = sub_25B9ED220();
  BOOL v73 = sub_25B995718(v72);
  uint64_t v74 = (void (**)(uint64_t))(*(void *)(v1 + 440) + 8);
  if (v73)
  {
    uint64_t v75 = sub_25B995750();
    v126[0] = sub_25B9954D8();
    *(_DWORD *)uint64_t v75 = 136315138;
    sub_25B975308(v116, v1 + 16);
    sub_25B94E854(&qword_26A51BEB0);
    uint64_t v76 = sub_25B9ECFE0();
    *(void *)(v75 + 4) = sub_25B9910E8(v76, v77, v126);
    swift_bridgeObjectRelease();
    sub_25B94F65C(v116);
    _os_log_impl(&dword_25B94C000, v71, (os_log_type_t)v63, "Invoking tool: %s", (uint8_t *)v75, 0xCu);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    sub_25B94F65C(v116);
  }

  uint64_t v95 = *v74;
  uint64_t v96 = sub_25B995C6C();
  v95(v96);
  *(void *)(v1 + 752) = v95;
  sub_25B94F2E0(v117, *(void *)(v1 + 80));
  sub_25B9EC830();
  *(void *)(v1 + 760) = v97;
  *(void *)(v1 + 768) = swift_getAssociatedTypeWitness();
  uint64_t v98 = sub_25B9ED2B0();
  *(void *)(v1 + 776) = v98;
  sub_25B964F20(v98);
  *(void *)(v1 + 784) = v99;
  *(void *)(v1 + 792) = sub_25B960674();
  uint64_t v100 = (void *)swift_task_alloc();
  *(void *)(v1 + 800) = v100;
  *uint64_t v100 = v1;
  v100[1] = sub_25B98B248;
  sub_25B995C58();
  sub_25B994EB0();
  return MEMORY[0x270F2F470]();
}

uint64_t sub_25B98B248()
{
  sub_25B960558();
  sub_25B994FF4();
  uint64_t v3 = v2;
  sub_25B96053C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 808) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98B364()
{
  uint64_t v185 = v0;
  uint64_t v173 = v0 + 56;
  uint64_t v1 = *(void *)(v0 + 768);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(*(void *)(v0 + 792), 1, v1) == 1)
  {
    uint64_t v2 = *(void (**)(uint64_t))(v0 + 736);
    sub_25B96DAFC();
    v3();
    swift_task_dealloc();
    uint64_t v4 = sub_25B9953E0();
    v2(v4);
    uint64_t v5 = (void *)sub_25B9ECD40();
    os_log_type_t v6 = sub_25B9ED230();
    if (sub_25B994E64(v6))
    {
      int v7 = (_WORD *)sub_25B96DB28();
      sub_25B96DB1C(v7);
      sub_25B96DAA4(&dword_25B94C000, v8, v9, "Tool returned no response. Exiting tool calling loop.");
      sub_25B959290();
    }
    uint64_t v10 = *(void (**)(void))(v0 + 752);
    uint64_t v11 = *(void *)(v0 + 680);
    uint64_t v12 = *(void *)(v0 + 440);

    sub_25B9957FC();
    sub_25B96DAFC();
    v10();
    sub_25B995030();
    sub_25B994E98();
    v13();
    sub_25B994E58();
    v14();
    sub_25B94F65C(v173);
    uint64_t v15 = *(char **)(v0 + 720);
  }
  else
  {
    *(void *)(v0 + 200) = v1;
    sub_25B993A64((uint64_t *)(v0 + 176));
    sub_25B97AD18();
    sub_25B96D990();
    v16();
    swift_task_dealloc();
    sub_25B961A24((_OWORD *)(v0 + 176), (_OWORD *)(v0 + 240));
    sub_25B993AC8(v0 + 240, v0 + 208);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v91 = *(void (**)(uint64_t))(v0 + 736);
      uint64_t v92 = *(uint8_t **)(v0 + 480);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v93 = sub_25B995964();
      v91(v93);
      uint64_t v94 = sub_25B9ECD40();
      os_log_type_t v95 = sub_25B9ED230();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (_WORD *)sub_25B96DB28();
        sub_25B96DB1C(v96);
        _os_log_impl(&dword_25B94C000, v94, v95, "Only tools that output strings are currently supported.", v92, 2u);
        sub_25B959290();
      }
      uint64_t v97 = *(void (**)(void))(v0 + 752);

      sub_25B96DAFC();
      v97();
      sub_25B9EC820();
      sub_25B995D2C();
      sub_25B9ECB20();
      sub_25B9ECB90();
      sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
      uint64_t v98 = (void *)swift_allocError();
      sub_25B9ECB40();
      sub_25B994E98();
      v99();
      swift_willThrow();
      sub_25B94F65C(v0 + 240);
      uint64_t v100 = sub_25B995470();
      v101(v100);
      id v102 = v98;
      id v103 = v98;
      uint64_t v104 = sub_25B9ECD40();
      os_log_type_t v105 = sub_25B9ED220();
      if (os_log_type_enabled(v104, v105))
      {
        uint64_t v106 = (uint8_t *)sub_25B995750();
        uint64_t v107 = (void *)sub_25B995700();
        *(_DWORD *)uint64_t v106 = 138412290;
        id v108 = v98;
        uint64_t v109 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 376) = v109;
        sub_25B9ED2C0();
        *uint64_t v107 = v109;

        _os_log_impl(&dword_25B94C000, v104, v105, "Encountered failure while invoking function: %@", v106, 0xCu);
        sub_25B94E854((uint64_t *)&unk_26A51DCE0);
        swift_arrayDestroy();
        sub_25B959290();
        sub_25B959290();
      }
      else
      {
      }
      uint64_t v110 = *(void (**)(void))(v0 + 752);

      sub_25B96DAFC();
      v110();
      sub_25B9EC820();
      v184[0] = 0;
      v184[1] = 0xE000000000000000;
      sub_25B9ED390();
      *(void *)(v0 + 344) = 0;
      *(void *)(v0 + 352) = 0xE000000000000000;
      sub_25B995D2C();
      sub_25B9956D8();
      sub_25B9ED000();
      *(void *)(v0 + 384) = v98;
      sub_25B94E854(&qword_26A51BA68);
      sub_25B9ED440();
      sub_25B99598C();
      sub_25B9ECB20();
      swift_allocError();
      sub_25B99510C();
      sub_25B9950BC();
      v111();
      swift_willThrow();

      sub_25B994E58();
      v112();
      sub_25B959038();
      v113();
      sub_25B94F65C(v173);
LABEL_62:
      sub_25B994C90();
      sub_25B995A30();
      sub_25B995A10();
      sub_25B995A04();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25B9605A0();
      sub_25B994F48();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v17 = *(void *)(v0 + 360);
    uint64_t v18 = *(void *)(v0 + 368);
    uint64_t v19 = sub_25B9EC7F0();
    uint64_t v21 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int v23 = *(char **)(v0 + 720);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v165 = (char *)sub_25B96DA50();
      int v23 = sub_25B990160(v165, v166, v167, v168);
    }
    unint64_t v25 = *((void *)v23 + 2);
    unint64_t v24 = *((void *)v23 + 3);
    unint64_t v26 = v25 + 1;
    uint64_t v178 = v17;
    uint64_t v27 = v21;
    if (v25 >= v24 >> 1)
    {
      uint64_t v169 = sub_25B990160((char *)(v24 > 1), v25 + 1, 1, (uint64_t)v23);
      unint64_t v26 = v25 + 1;
      int v23 = v169;
    }
    uint64_t v12 = *(void *)(v0 + 664);
    uint64_t v28 = *(void *)(v0 + 616);
    *((void *)v23 + 2) = v26;
    uint64_t v29 = &v23[32 * v25];
    *((void *)v29 + 4) = v19;
    *((void *)v29 + 5) = v27;
    *((void *)v29 + 6) = v178;
    *((void *)v29 + 7) = v18;
    uint64_t v15 = v23;
    sub_25B94F65C(v0 + 240);
    sub_25B995D8C();
    v30();
    uint64_t v11 = v28 + 8;
    uint64_t v31 = sub_25B9955E0();
    v32(v31);
    sub_25B94F65C(v173);
  }
  sub_25B99529C();
  uint64_t v172 = v15;
  if (v64)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_25B995A30();
    sub_25B995A10();
    sub_25B995A04();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B994F48();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v171 = v0 + 136;
  uint64_t v177 = (void *)(v0 + 96);
LABEL_16:
  *(void *)(v0 + 720) = v15;
  *(void *)(v0 + 712) = v33;
  int v36 = *(_DWORD *)(v0 + 820);
  sub_25B995170();
  uint64_t v37 = *(void *)(v0 + 632);
  uint64_t v38 = sub_25B995048();
  v39(v38);
  sub_25B9EC810();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v11, v37) != v36)
  {
    sub_25B9956B4();
    swift_bridgeObjectRelease();
    if (qword_26A51B000 != -1) {
      swift_once();
    }
    sub_25B9559F0(*(void *)(v0 + 432), (uint64_t)qword_26A51BC28);
    sub_25B960750();
    uint64_t v152 = sub_25B994C4C();
    v153(v152);
    uint64_t v154 = (void *)sub_25B9ECD40();
    os_log_type_t v155 = sub_25B9ED220();
    if (sub_25B994E64(v155))
    {
      uint64_t v156 = (_WORD *)sub_25B96DB28();
      sub_25B96DB1C(v156);
      sub_25B96DAA4(&dword_25B94C000, v157, v158, "Unknown tool call was requested");
      sub_25B959290();
    }
    sub_25B9958B4();

    sub_25B96D920();
    v159();
    sub_25B995CD4();
    swift_bridgeObjectRelease();
    sub_25B995D2C();
    sub_25B99586C(v160);
    sub_25B9ECFE0();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    sub_25B995C8C();
    sub_25B9ECB90();
    sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
    sub_25B994C2C();
    sub_25B99510C();
    sub_25B994E58();
    v161();
    swift_willThrow();
    sub_25B959038();
    v162();
    sub_25B959038();
    v163();
    goto LABEL_62;
  }
  sub_25B995AA4();
  uint64_t v40 = *(void *)(v0 + 392);
  uint64_t v41 = sub_25B99525C();
  v42(v41);
  sub_25B9593F8();
  sub_25B995734();
  v43();
  uint64_t v46 = *(void *)(v40 + 16);
  if (!v46)
  {
    uint64_t v164 = *(void *)(v0 + 600);
    sub_25B96D92C(v164, v44, v45, *(void *)(v0 + 560));
    sub_25B96CA38(v164, &qword_26A51BEA8);
    goto LABEL_43;
  }
  uint64_t v47 = *(void *)(v0 + 568);
  sub_25B96D878();
  uint64_t v174 = v49;
  uint64_t v176 = v48;
  uint64_t v50 = v48 + v49;
  swift_bridgeObjectRetain();
  uint64_t v51 = *(void *)(v47 + 72);
  uint64_t v179 = v51;
  uint64_t v180 = v46;
  uint64_t v52 = v46;
  do
  {
    int v53 = *(_DWORD *)(v0 + 824);
    sub_25B995AEC();
    uint64_t v54 = *(void *)(v0 + 496);
    uint64_t v55 = *(void *)(v0 + 504);
    sub_25B96D944();
    v56();
    sub_25B9ECCC0();
    uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t))(v55 + 88);
    if (v57(v46, v54) == v53)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 504) + 96))(*(void *)(v0 + 528), *(void *)(v0 + 496));
      sub_25B995DF0();
      sub_25B995734();
      v58();
      uint64_t v59 = sub_25B9ECC20();
      uint64_t v61 = v60;
      uint64_t v62 = sub_25B9EC820();
      uint64_t v46 = *(void *)(v0 + 536);
      BOOL v64 = v59 == v62 && v61 == v63;
      if (v64)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v69 = sub_25B9953CC();
        v70(v69);
LABEL_30:
        uint64_t v11 = *(void *)(v0 + 664);
        uint64_t v12 = *(void *)(v0 + 608);
        uint64_t v71 = *(void *)(v0 + 600);
        uint64_t v72 = *(void *)(v0 + 560);
        swift_bridgeObjectRelease();
        sub_25B9957FC();
        sub_25B99548C();
        v73();
        sub_25B995D14();
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v74, v75, v76, v72);
        sub_25B96CA38(v71, &qword_26A51BEA8);
        uint64_t v77 = sub_25B99594C();
        v78(v77);
        sub_25B995290();
        v79();
        sub_25B99529C();
        uint64_t v15 = v172;
        if (v64) {
          goto LABEL_13;
        }
        goto LABEL_16;
      }
      sub_25B995B50();
      LODWORD(v54) = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_25B99594C();
      v66(v65);
      uint64_t v51 = v179;
      if (v54) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_25B9956CC();
      v67();
    }
    uint64_t v68 = *(void (**)(void))(*(void *)(v0 + 568) + 8);
    sub_25B96DAFC();
    v68();
    v50 += v51;
    --v52;
  }
  while (v52);
  uint64_t v80 = *(void *)(v0 + 600);
  swift_bridgeObjectRelease();
  sub_25B99507C(v80);
  sub_25B96CA38(v80, &qword_26A51BEA8);
  swift_bridgeObjectRetain();
  uint64_t v81 = v176 + v174;
  while (1)
  {
    sub_25B995680();
    sub_25B96D944();
    v82();
    sub_25B9ECCC0();
    uint64_t v83 = sub_25B995030();
    if (((unsigned int (*)(uint64_t))v57)(v83) == v54) {
      break;
    }
    sub_25B9956CC();
    v90();
LABEL_41:
    sub_25B96DAFC();
    v68();
    v81 += v51;
    if (!--v180)
    {
      sub_25B9956B4();
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_57:
      if (qword_26A51B000 != -1) {
        swift_once();
      }
      sub_25B9559F0(*(void *)(v0 + 432), (uint64_t)qword_26A51BC28);
      sub_25B960750();
      uint64_t v132 = sub_25B994C4C();
      v133(v132);
      uint64_t v134 = (void *)sub_25B9ECD40();
      os_log_type_t v135 = sub_25B9ED230();
      if (sub_25B994E64(v135))
      {
        uint64_t v136 = (_WORD *)sub_25B96DB28();
        sub_25B96DB1C(v136);
        sub_25B96DAA4(&dword_25B94C000, v137, v138, "Requested function call from model does not exist");
        sub_25B959290();
      }
      uint64_t v139 = *(void *)(v0 + 624);
      uint64_t v140 = *(void *)(v0 + 616);
      uint64_t v182 = *(void *)(v0 + 608);
      sub_25B995D4C();

      sub_25B9950BC();
      v141();
      sub_25B9EC820();
      sub_25B9ECB20();
      sub_25B9ECB90();
      sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
      sub_25B994C2C();
      sub_25B99510C();
      sub_25B995070();
      v142();
      swift_willThrow();
      sub_25B96D920();
      v143();
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v182);
      goto LABEL_62;
    }
  }
  uint64_t v84 = *(long long **)(v0 + 512);
  uint64_t v175 = *(void (**)(long long *, void))(*(void *)(v0 + 504) + 96);
  v175(v84, *(void *)(v0 + 496));
  sub_25B9949F8(v84, (uint64_t)v177);
  sub_25B94F2E0(v177, *(void *)(v0 + 120));
  sub_25B97AC90();
  uint64_t v54 = sub_25B9ECC80();
  uint64_t v86 = v85;
  if (v54 != sub_25B9EC820() || v86 != v87)
  {
    char v89 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25B94F65C((uint64_t)v177);
    uint64_t v51 = v179;
    if (v89) {
      goto LABEL_51;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRelease_n();
  sub_25B94F65C((uint64_t)v177);
LABEL_51:
  int v183 = *(_DWORD *)(v0 + 828);
  uint64_t v114 = *(void *)(v0 + 520);
  uint64_t v181 = *(void *)(v0 + 496);
  swift_bridgeObjectRelease();
  sub_25B9953EC();
  sub_25B995BD0();
  v115();
  sub_25B9ECCC0();
  sub_25B96D920();
  v68();
  unsigned int v116 = v57(v114, v181);
  id v117 = *(long long **)(v0 + 520);
  if (v116 != v183)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v130 = sub_25B9953CC();
    v131(v130);
    goto LABEL_57;
  }
  v175(*(long long **)(v0 + 520), *(void *)(v0 + 496));
  uint64_t v118 = (void *)(v0 + 56);
  sub_25B9949F8(v117, v173);
  if (qword_26A51B000 != -1) {
    swift_once();
  }
  uint64_t v119 = *(void *)(v0 + 432);
  uint64_t v120 = *(void *)(v0 + 440);
  *(void *)(v0 + 728) = sub_25B9559F0(v119, (uint64_t)qword_26A51BC28);
  sub_25B960750();
  *(void *)(v0 + 736) = *(void *)(v120 + 16);
  *(void *)(v0 + 744) = (v120 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v121 = sub_25B994C4C();
  v122(v121);
  sub_25B975308(v173, v171);
  uint64_t v123 = sub_25B9ECD40();
  os_log_type_t v124 = sub_25B9ED220();
  BOOL v125 = sub_25B994E64(v124);
  uint64_t v126 = (void (**)(void))(*(void *)(v0 + 440) + 8);
  if (v125)
  {
    uint64_t v127 = sub_25B995750();
    v184[0] = sub_25B9954D8();
    *(_DWORD *)uint64_t v127 = 136315138;
    sub_25B975308(v171, v0 + 16);
    sub_25B94E854(&qword_26A51BEB0);
    uint64_t v128 = sub_25B9ECFE0();
    *(void *)(v127 + 4) = sub_25B9910E8(v128, v129, v184);
    swift_bridgeObjectRelease();
    sub_25B94F65C(v171);
    _os_log_impl(&dword_25B94C000, v123, (os_log_type_t)v119, "Invoking tool: %s", (uint8_t *)v127, 0xCu);
    swift_arrayDestroy();
    sub_25B959290();
    uint64_t v118 = (void *)(v0 + 56);
    sub_25B959290();
  }
  else
  {
    sub_25B94F65C(v171);
  }

  uint64_t v146 = *v126;
  sub_25B995290();
  v146();
  *(void *)(v0 + 752) = v146;
  sub_25B94F2E0(v118, *(void *)(v0 + 80));
  sub_25B9EC830();
  *(void *)(v0 + 760) = v147;
  sub_25B99591C();
  *(void *)(v0 + 768) = swift_getAssociatedTypeWitness();
  uint64_t v148 = sub_25B9ED2B0();
  *(void *)(v0 + 776) = v148;
  sub_25B964F20(v148);
  *(void *)(v0 + 784) = v149;
  *(void *)(v0 + 792) = sub_25B960674();
  uint64_t v150 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v150;
  *uint64_t v150 = v0;
  v150[1] = sub_25B98B248;
  sub_25B995C58();
  sub_25B994F48();
  return MEMORY[0x270F2F470]();
}

uint64_t sub_25B98C768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25B9951C8();
  sub_25B995B9C();
  swift_task_dealloc();
  unint64_t v25 = (void *)v24[101];
  uint64_t v26 = sub_25B995470();
  v27(v26);
  id v28 = v25;
  id v29 = v25;
  uint64_t v30 = sub_25B9ECD40();
  os_log_type_t v31 = sub_25B9ED220();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)sub_25B995750();
    uint64_t v33 = (void *)sub_25B995700();
    *(_DWORD *)uint64_t v32 = 138412290;
    id v34 = v25;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    v24[47] = v35;
    sub_25B9ED2C0();
    void *v33 = v35;

    _os_log_impl(&dword_25B94C000, v30, v31, "Encountered failure while invoking function: %@", v32, 0xCu);
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  int v36 = (void (*)(void))v24[94];

  sub_25B9955E0();
  sub_25B96DAFC();
  v36();
  sub_25B9EC820();
  sub_25B9ED390();
  v24[43] = 0;
  v24[44] = 0xE000000000000000;
  sub_25B9956D8();
  sub_25B9ED000();
  v24[48] = v25;
  sub_25B94E854(&qword_26A51BA68);
  sub_25B9ED440();
  sub_25B9955E0();
  sub_25B9ECB20();
  sub_25B9ECB90();
  sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
  uint64_t v54 = sub_25B994C2C();
  sub_25B9ECB40();
  sub_25B994E58();
  v37();
  swift_willThrow();

  sub_25B959038();
  v38();
  sub_25B959038();
  v39();
  sub_25B94F65C((uint64_t)(v24 + 7));
  sub_25B994C90();
  uint64_t v51 = v41;
  uint64_t v52 = v40;
  uint64_t v53 = v24[61];
  uint64_t v55 = v24[60];
  uint64_t v56 = v24[59];
  uint64_t v57 = v24[58];
  uint64_t v58 = v24[57];
  uint64_t v59 = v24[56];
  uint64_t v60 = v24[53];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B94E92C();
  return v43(v42, v43, v44, v45, v46, v47, v48, v49, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, 0,
           0xE000000000000000,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_25B98CB3C()
{
  sub_25B960594();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = sub_25B9EC800();
  v1[5] = v3;
  sub_25B964F20(v3);
  v1[6] = v4;
  v1[7] = sub_25B960674();
  uint64_t v5 = sub_25B9EC840();
  v1[8] = v5;
  sub_25B964F20(v5);
  v1[9] = v6;
  v1[10] = sub_25B960674();
  uint64_t v7 = sub_25B9EC850();
  v1[11] = v7;
  sub_25B964F20(v7);
  v1[12] = v8;
  v1[13] = sub_25B960674();
  uint64_t v9 = sub_25B94E854(&qword_26A51B6F8);
  sub_25B96068C(v9);
  v1[14] = sub_25B994D84();
  v1[15] = swift_task_alloc();
  uint64_t v10 = sub_25B9ECF40();
  v1[16] = v10;
  sub_25B964F20(v10);
  v1[17] = v11;
  v1[18] = sub_25B960674();
  uint64_t v12 = sub_25B9ECE10();
  v1[19] = v12;
  sub_25B964F20(v12);
  v1[20] = v13;
  v1[21] = sub_25B994D84();
  v1[22] = swift_task_alloc();
  uint64_t v14 = sub_25B9EC4A0();
  v1[23] = v14;
  sub_25B964F20(v14);
  v1[24] = v15;
  v1[25] = sub_25B960674();
  uint64_t v16 = sub_25B9EC4B0();
  v1[26] = v16;
  sub_25B964F20(v16);
  v1[27] = v17;
  v1[28] = sub_25B994D84();
  v1[29] = swift_task_alloc();
  uint64_t v18 = sub_25B94E854(&qword_26A51BE68);
  sub_25B96068C(v18);
  v1[30] = sub_25B994D84();
  v1[31] = swift_task_alloc();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98CD60()
{
  uint64_t v3 = v0[31];
  uint64_t v4 = sub_25B9EC470();
  sub_25B995DB8(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_25B9EC510();
  v0[32] = v5;
  sub_25B994C14(v3, 1, v5);
  if (v6)
  {
    sub_25B96CA38(v0[31], &qword_26A51BE68);
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  else
  {
    unint64_t v1 = sub_25B9EC4E0();
    sub_25B97AD18();
    sub_25B959038();
    v7();
    uint64_t v8 = sub_25B97B2B8(v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v0[27];
    uint64_t v11 = *(void *)(v10 + 16);
    v10 += 16;
    uint64_t v2 = v11;
    unint64_t v12 = v8 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v75 = *(void *)(v10 + 56);
    int v74 = *MEMORY[0x263F7F8F8];
    swift_bridgeObjectRetain();
    unint64_t v1 = 0xE000000000000000;
    uint64_t v76 = (void (**)(void))(v10 - 8);
    do
    {
      sub_25B96D8C8();
      ((void (*)(void))v2)();
      sub_25B995964();
      sub_25B96D8C8();
      ((void (*)(void))v2)();
      uint64_t v13 = sub_25B995410();
      if (v14(v13) == v74)
      {
        uint64_t v15 = sub_25B9953FC();
        v16(v15);
        sub_25B995964();
        sub_25B96D990();
        v17();
        sub_25B9EC490();
        swift_bridgeObjectRetain();
        sub_25B9ED000();
        swift_bridgeObjectRelease();
        unint64_t v18 = v1;
        sub_25B959038();
        v19();
        ((void (*)(void, void))*v76)(v0[29], v0[26]);
      }
      else
      {
        uint64_t v20 = *v76;
        sub_25B96DAFC();
        v20();
        swift_bridgeObjectRetain();
        unint64_t v18 = v1;
        ((void (*)(void, void))v20)(v0[29], v0[26]);
      }
      swift_bridgeObjectRelease();
      v12 += v75;
      unint64_t v1 = v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xE000000000000000;
  }
  if ((v18 & 0xF00000000000000) != 0)
  {
    uint64_t v21 = v0[15];
    uint64_t v22 = sub_25B995248();
    v23(v22);
    uint64_t v24 = swift_task_alloc();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = v18;
    sub_25B995228();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_25B9EC520();
    sub_25B95097C();
    sub_25B96D8F8();
    v25();
    sub_25B9950F4(v21, 0);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[33] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_25B98D54C;
    uint64_t v27 = v0[22];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = v0[32];
    uint64_t v29 = v0[30];
    uint64_t v30 = sub_25B9EC470();
    sub_25B995DB8(v30);
    swift_bridgeObjectRelease();
    sub_25B994C14(v29, 1, v28);
    if (v6)
    {
      sub_25B96CA38(v0[30], &qword_26A51BE68);
      uint64_t v33 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v31 = v0[32];
      uint64_t v32 = v0[30];
      uint64_t v33 = sub_25B9EC500();
      sub_25B97AD18();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v31);
    }
    uint64_t v35 = *(void *)(v33 + 16);
    if (v35)
    {
      sub_25B99514C();
      uint64_t v77 = *(void *)(v2 + 56);
      sub_25B995A3C();
      swift_bridgeObjectRetain();
      int v36 = (char *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v37 = sub_25B995128();
        MEMORY[0](v37);
        sub_25B9EC810();
        uint64_t v38 = sub_25B9959C0();
        v39(v38);
        sub_25B995A1C();
        if (v6)
        {
          uint64_t v40 = sub_25B9953FC();
          v41(v40);
          sub_25B96D990();
          v42();
          uint64_t v43 = sub_25B9EC7F0();
          uint64_t v72 = v44;
          uint64_t v73 = v43;
          uint64_t v45 = sub_25B9EC820();
          uint64_t v70 = v46;
          uint64_t v71 = v45;
          uint64_t v47 = sub_25B9EC830();
          uint64_t v49 = v48;
          sub_25B959038();
          v50();
          sub_25B959038();
          v51();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v58 = (char *)sub_25B96DA50();
            int v36 = sub_25B990068(v58, v59, v60, (uint64_t)v36);
          }
          unint64_t v53 = *((void *)v36 + 2);
          unint64_t v52 = *((void *)v36 + 3);
          if (v53 >= v52 >> 1) {
            int v36 = sub_25B9958F8(v52);
          }
          *((void *)v36 + 2) = v53 + 1;
          uint64_t v54 = &v36[48 * v53];
          *((void *)v54 + 4) = v73;
          *((void *)v54 + 5) = v72;
          *((void *)v54 + 6) = v71;
          *((void *)v54 + 7) = v70;
          *((void *)v54 + 8) = v47;
          *((void *)v54 + 9) = v49;
        }
        else
        {
          sub_25B959038();
          v55();
          uint64_t v56 = sub_25B995410();
          v57(v56);
        }
        v1 += v77;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      int v36 = (char *)MEMORY[0x263F8EE78];
    }
    if (!*((void *)v36 + 2))
    {
      swift_bridgeObjectRelease();
      sub_25B995658();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_25B96DA00();
      sub_25B994F48();
      __asm { BRAA            X1, X16 }
    }
    sub_25B995C14();
    uint64_t v61 = v0[14];
    uint64_t v62 = sub_25B995248();
    v63(v62);
    *(void *)(swift_task_alloc() + 16) = v36;
    sub_25B995228();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_25B9EC520();
    sub_25B95097C();
    sub_25B96D8F8();
    v64();
    sub_25B9950F4(v61, 0);
    uint64_t v65 = (void *)swift_task_alloc();
    v0[35] = v65;
    *uint64_t v65 = v0;
    v65[1] = sub_25B98DB14;
    uint64_t v27 = v0[21];
  }
  sub_25B99500C(v27);
  sub_25B994F48();
  return sub_25B96652C();
}

uint64_t sub_25B98D54C()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B96D860();
  sub_25B96054C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 272) = v0;
  swift_task_dealloc();
  sub_25B96CA38(*(void *)(v1 + 120), &qword_26A51B6F8);
  sub_25B995C6C();
  sub_25B995070();
  v5();
  sub_25B94E8B8();
  sub_25B995808();
  return MEMORY[0x270FA2498](v6, v7, v8, v9, v10, v11);
}

uint64_t sub_25B98D6A4()
{
  uint64_t v4 = v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = sub_25B9EC470();
  sub_25B995DB8(v6);
  swift_bridgeObjectRelease();
  sub_25B994C14(v5, 1, v4);
  if (v7)
  {
    sub_25B96CA38(v0[30], &qword_26A51BE68);
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v8 = v0[32];
    uint64_t v9 = v0[30];
    uint64_t v10 = sub_25B9EC500();
    sub_25B97AD18();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v8);
  }
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    sub_25B99514C();
    uint64_t v52 = *(void *)(v2 + 56);
    sub_25B995A3C();
    swift_bridgeObjectRetain();
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    uint64_t v47 = v3;
    do
    {
      uint64_t v14 = sub_25B995128();
      v3(v14);
      sub_25B9EC810();
      uint64_t v15 = sub_25B9959C0();
      v16(v15);
      sub_25B995A1C();
      if (v7)
      {
        uint64_t v17 = sub_25B9953FC();
        v18(v17);
        sub_25B96D990();
        v19();
        uint64_t v20 = sub_25B9EC7F0();
        uint64_t v51 = v21;
        uint64_t v22 = sub_25B9EC820();
        uint64_t v49 = v23;
        uint64_t v50 = v22;
        uint64_t v24 = sub_25B9EC830();
        uint64_t v48 = v25;
        sub_25B959038();
        v26();
        sub_25B959038();
        v27();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v34 = (char *)sub_25B96DA50();
          uint64_t v13 = sub_25B990068(v34, v35, v36, v37);
        }
        uint64_t v3 = v47;
        unint64_t v29 = *((void *)v13 + 2);
        unint64_t v28 = *((void *)v13 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v13 = sub_25B9958F8(v28);
        }
        *((void *)v13 + 2) = v29 + 1;
        uint64_t v30 = &v13[48 * v29];
        *((void *)v30 + 4) = v20;
        *((void *)v30 + 5) = v51;
        *((void *)v30 + 6) = v50;
        *((void *)v30 + 7) = v49;
        *((void *)v30 + 8) = v24;
        *((void *)v30 + 9) = v48;
      }
      else
      {
        sub_25B959038();
        v31();
        uint64_t v32 = sub_25B995410();
        v33(v32);
      }
      v1 += v52;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  }
  if (!*((void *)v13 + 2))
  {
    swift_bridgeObjectRelease();
    sub_25B995658();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B96DA00();
    sub_25B994EB0();
    __asm { BRAA            X1, X16 }
  }
  sub_25B995C14();
  uint64_t v38 = v0[14];
  uint64_t v39 = sub_25B995248();
  v40(v39);
  *(void *)(swift_task_alloc() + 16) = v13;
  sub_25B995228();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_25B9EC520();
  sub_25B95097C();
  sub_25B96D8F8();
  v41();
  sub_25B9950F4(v38, 0);
  uint64_t v42 = (void *)swift_task_alloc();
  v0[35] = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_25B98DB14;
  sub_25B99500C(v0[21]);
  sub_25B994EB0();
  return sub_25B96652C();
}

uint64_t sub_25B98DB14()
{
  sub_25B994FF4();
  uint64_t v4 = v3;
  sub_25B96053C();
  void *v5 = v4;
  void *v5 = *v1;
  *(void *)(v4 + 288) = v0;
  swift_task_dealloc();
  sub_25B96CA38(*(void *)(v2 + 112), &qword_26A51B6F8);
  sub_25B995B50();
  sub_25B9950BC();
  v6();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25B995194();
    __asm { BRAA            X1, X16 }
  }
  sub_25B94E8B8();
  sub_25B995194();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B98DD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  sub_25B994F74();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B98DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_25B994D68();
  sub_25B995378();
  sub_25B994F74();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B994F64();
  sub_25B994D4C();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_25B98DEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B9ECF20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = MEMORY[0x263F8D310];
  v13[4] = MEMORY[0x263F62188];
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x263F620B0];
  sub_25B9ECE60();
  sub_25B94F65C((uint64_t)v13);
  sub_25B94E854(&qword_26A51BE90);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25B9F6AE0;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v10 + v9, v7, v4);
  MEMORY[0x26116C2B0](v10, v4, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_25B98E064(uint64_t a1)
{
  uint64_t v2 = sub_25B9ECF20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25B98E20C(a1);
  v12[3] = &type metadata for GenerativeExperiencesSessionClient.ToolCall;
  v12[4] = sub_25B993A18();
  v12[0] = v6;
  uint64_t v7 = MEMORY[0x263F620B0];
  sub_25B9ECE60();
  sub_25B94F65C((uint64_t)v12);
  sub_25B94E854(&qword_26A51BE90);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25B9F6AE0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v9 + v8, v5, v2);
  MEMORY[0x26116C2B0](v9, v2, v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25B98E20C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_25B9927C4(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = a1 + 72;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_25B94E854(&qword_26A51BE80);
      sub_25B94E854(&qword_26A51BE98);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25B9927C4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v15;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_25B9927C4((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v15;
      }
      v4 += 48;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = (void *)(v2 + 48 * v6);
      v7[4] = v9;
      v7[5] = v10;
      v7[6] = v11;
      v7[7] = v12;
      v7[8] = v13;
      v7[9] = v14;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25B98E3AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = sub_25B9ECED0();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v15 = a2;
    uint64_t v19 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25B9927E4();
    uint64_t v8 = v19;
    uint64_t v16 = v4 + 32;
    uint64_t v17 = v4;
    uint64_t v14 = a1;
    uint64_t v9 = a1 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_25B9ECEC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v8;
      unint64_t v10 = *(void *)(v8 + 16);
      if (v10 >= *(void *)(v8 + 24) >> 1)
      {
        sub_25B9927E4();
        uint64_t v8 = v19;
      }
      v9 += 48;
      *(void *)(v8 + 16) = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v8+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v10, v6, v18);
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    a2 = v15;
  }
  *a2 = v8;
  uint64_t v11 = *MEMORY[0x263F62090];
  uint64_t v12 = sub_25B9ECEE0();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
}

uint64_t sub_25B98E5E8@<X0>(void *a1@<X8>)
{
  return sub_25B98E3AC(*v1, a1);
}

void sub_25B98E5F0()
{
  sub_25B964F38();
  int v33 = v2;
  id v32 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_25B94E854(&qword_26A51BE00);
  sub_25B950790();
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25B94E854(&qword_26A51BE08);
  uint64_t v12 = sub_25B96068C(v11);
  MEMORY[0x270FA5388](v12);
  sub_25B96DA40();
  uint64_t v15 = v13 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = sub_25B94E854(&qword_26A51BE10);
  sub_25B950790();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_25B97B0B0();
  uint64_t v23 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests;
  sub_25B960750();
  if (!*(void *)(*(void *)v23 + 16))
  {
    sub_25B99533C((uint64_t)v18);
LABEL_8:
    sub_25B96CA38((uint64_t)v18, &qword_26A51BE08);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = v5;
  sub_25B991964();
  if (v24)
  {
    sub_25B96D8F8();
    v25();
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
  }
  sub_25B9951E4((uint64_t)v18, v26);
  sub_25B994C14((uint64_t)v18, 1, v19);
  if (v27) {
    goto LABEL_8;
  }
  sub_25B994EA4();
  v28();
  if (v32)
  {
    id v29 = v32;
    CompletePromptResponseElementXPCEnvelope.unseal()();
    sub_25B9ED180();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v6);
  }
  if (v33)
  {
    uint64_t v34 = 0;
    sub_25B9ED190();
    sub_25B96D9C4();
    sub_25B99304C(v30, &qword_26A51BF60, &qword_26A51BE10);
    sub_25B96CA38(v15, &qword_26A51BE08);
    swift_endAccess();
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v19);
LABEL_14:
  sub_25B964F50();
}

void sub_25B98E9C0()
{
  sub_25B964F38();
  char v29 = v3;
  char v27 = v4;
  uint64_t v6 = v5;
  sub_25B995674();
  uint64_t v7 = sub_25B9ECB00();
  uint64_t v8 = sub_25B96068C(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_25B94E854(&qword_26A51BE18);
  sub_25B950790();
  uint64_t v26 = v10;
  MEMORY[0x270FA5388](v11);
  sub_25B9652E4();
  uint64_t v12 = sub_25B94E854(&qword_26A51BD60);
  sub_25B950790();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_25B959398();
  uint64_t v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests);
  sub_25B960750();
  uint64_t v17 = *v16;
  if (*(void *)(*v16 + 16))
  {
    swift_bridgeObjectRetain();
    sub_25B991964();
    if ((v19 & 1) == 0
      || (uint64_t v25 = v14,
          uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          *(void *)(v20 + 16) <= v6)
      || v6 < 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)(v20 + 16);
      sub_25B995B18();
      sub_25B96D944();
      v21();
      if (v27)
      {
        id v28 = v27;
        DocumentRegistrationXPCResponse.unseal()();
        sub_25B9ED180();

        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v9);
      }
      if (v29)
      {
        sub_25B9ED190();
        swift_bridgeObjectRelease();
        BOOL v22 = v24 - 1 == v6;
        uint64_t v23 = v25;
        if (v22)
        {
          sub_25B96D9C4();
          sub_25B992EC8();
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v25;
      }
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2, v12);
    }
  }
  sub_25B964F50();
}

void sub_25B98ED60()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  uint64_t v5 = sub_25B94E854(&qword_26A51BE08);
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25B96D950();
  MEMORY[0x270FA5388](v7);
  sub_25B99578C();
  uint64_t v8 = sub_25B94E854(&qword_26A51BE10);
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  sub_25B959398();
  uint64_t v10 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests;
  sub_25B960750();
  if (!*(void *)(*(void *)v10 + 16))
  {
    sub_25B99533C(v2);
LABEL_8:
    sub_25B96CA38(v2, &qword_26A51BE08);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  sub_25B991964();
  if (v11)
  {
    sub_25B96D8F8();
    v12();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = 1;
  }
  sub_25B9951E4(v2, v13);
  sub_25B994C14(v2, 1, v8);
  if (v14) {
    goto LABEL_8;
  }
  sub_25B994EA4();
  v15();
  sub_25B9ECB90();
  sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
  sub_25B994C2C();
  GenerativeErrorXPCEnvelope.unseal()();
  sub_25B995CC0();
  sub_25B9ED190();
  sub_25B96D9C4();
  sub_25B99304C(v4, &qword_26A51BF60, &qword_26A51BE10);
  sub_25B96CA38(v1, &qword_26A51BE08);
  swift_endAccess();
  uint64_t v16 = sub_25B995AB8();
  v17(v16);
LABEL_9:
  sub_25B964F50();
}

void sub_25B98EFB0()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  sub_25B94E854(&qword_26A51BD60);
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests);
  sub_25B960750();
  uint64_t v5 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_25B991964();
    if ((v7 & 1) == 0
      || (uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          uint64_t v9 = *(void *)(v8 + 16),
          v9 <= v2)
      || v2 < 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25B995B18();
      sub_25B96D944();
      v10();
      sub_25B9ECB90();
      sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
      sub_25B994C2C();
      GenerativeErrorXPCEnvelope.unseal()();
      sub_25B9ED190();
      swift_bridgeObjectRelease();
      if (v9 - 1 == v2)
      {
        sub_25B96D9C4();
        sub_25B992EC8();
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      sub_25B96D9F4();
      sub_25B994E98();
      v11();
    }
  }
  sub_25B964F50();
}

void sub_25B98F29C()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_25B94E854(&qword_26A51B6F8);
  uint64_t v8 = sub_25B96068C(v7);
  MEMORY[0x270FA5388](v8);
  sub_25B9652E4();
  uint64_t v9 = sub_25B94E854(&qword_26A51BE28);
  uint64_t v10 = sub_25B96068C(v9);
  MEMORY[0x270FA5388](v10);
  sub_25B96D950();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = sub_25B94E854(&qword_26A51BE30);
  sub_25B950790();
  MEMORY[0x270FA5388](v15);
  sub_25B959398();
  uint64_t v16 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest;
  sub_25B960750();
  if (!*(void *)(*(void *)v16 + 16))
  {
    sub_25B99533C((uint64_t)v13);
LABEL_8:
    sub_25B96CA38((uint64_t)v13, &qword_26A51BE28);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_25B991964();
  if (v17)
  {
    sub_25B96D8F8();
    v18();
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  sub_25B9951E4((uint64_t)v13, v19);
  sub_25B994C14((uint64_t)v13, 1, v14);
  if (v20) {
    goto LABEL_8;
  }
  sub_25B994EA4();
  v21();
  if (v4)
  {
    id v22 = v4;
    CompletePromptResponseXPCEnvelope.unseal()();
    uint64_t v23 = sub_25B9EC520();
    sub_25B9959D8(v23);
    sub_25B9ED0F0();
  }
  else
  {
    uint64_t v24 = sub_25B9EC520();
    sub_25B96D92C(v2, v25, v26, v24);
    sub_25B9ED0F0();
  }
  sub_25B96D9C4();
  sub_25B99304C(v6, &qword_26A51BF40, &qword_26A51BE30);
  sub_25B96CA38(v1, &qword_26A51BE28);
  swift_endAccess();
  uint64_t v27 = sub_25B995B44();
  v28(v27);
LABEL_13:
  sub_25B964F50();
}

void sub_25B98F61C()
{
  sub_25B964F38();
  uint64_t v4 = v3;
  uint64_t v5 = sub_25B94E854(&qword_26A51BE28);
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25B96D950();
  MEMORY[0x270FA5388](v7);
  sub_25B99578C();
  uint64_t v8 = sub_25B94E854(&qword_26A51BE30);
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  sub_25B959398();
  uint64_t v10 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest;
  sub_25B960750();
  if (!*(void *)(*(void *)v10 + 16))
  {
    sub_25B99533C(v2);
LABEL_8:
    sub_25B96CA38(v2, &qword_26A51BE28);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  sub_25B991964();
  if (v11)
  {
    sub_25B96D8F8();
    v12();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = 1;
  }
  sub_25B9951E4(v2, v13);
  sub_25B994C14(v2, 1, v8);
  if (v14) {
    goto LABEL_8;
  }
  sub_25B994EA4();
  v15();
  sub_25B9ECB90();
  sub_25B97E180(&qword_26A51BE20, 255, MEMORY[0x263F40B88]);
  sub_25B994C2C();
  GenerativeErrorXPCEnvelope.unseal()();
  sub_25B995CC0();
  sub_25B9ED0E0();
  sub_25B96D9C4();
  sub_25B99304C(v4, &qword_26A51BF40, &qword_26A51BE30);
  sub_25B96CA38(v1, &qword_26A51BE28);
  swift_endAccess();
  uint64_t v16 = sub_25B995AB8();
  v17(v16);
LABEL_9:
  sub_25B964F50();
}

void sub_25B98F86C()
{
  sub_25B9958CC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_25B9EC300();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  sub_25B9EC2E0();
  id v7 = v3;
  id v8 = v5;
  uint64_t v9 = sub_25B995B44();
  v1(v9);

  sub_25B995070();
  v10();
  sub_25B995938();
}

id GenerativeExperiencesSessionClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void GenerativeExperiencesSessionClient.init()()
{
}

id GenerativeExperiencesSessionClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25B98FA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for GenerativeExperiencesSessionClient();
  return MEMORY[0x270F57798](a1, v5, a3);
}

uint64_t sub_25B98FAB0(uint64_t a1)
{
  return nullsub_1(a1);
}

void sub_25B98FB00(void *a1)
{
}

uint64_t sub_25B98FB08(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51BFD8, MEMORY[0x263F40E50], MEMORY[0x263F40E50]);
}

uint64_t sub_25B98FB50(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51B688, MEMORY[0x263F61F78], MEMORY[0x263F61F78]);
}

uint64_t sub_25B98FB98(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void))
{
  if (a3)
  {
    sub_25B9950E4();
    if (v12 != v13)
    {
      sub_25B9957D4();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_25B9950C8();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25B94E854(a5);
  uint64_t v16 = a6(0);
  sub_25B964F20(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = (void *)sub_25B995590();
  j__malloc_size(v19);
  if (!v18 || ((sub_25B995BF4(), v21) ? (BOOL v21 = v18 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_23:
    sub_25B994B68();
    uint64_t result = sub_25B9ED480();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * (v20 / v18);
LABEL_18:
  uint64_t v22 = *(void *)(a6(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  if (a1)
  {
    sub_25B9909A0(a4 + v23, v14);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B990250(0, v14, (unint64_t)v19 + v23, a4, a7);
  }
  return (uint64_t)v19;
}

uint64_t sub_25B98FD78(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51B7A8, type metadata accessor for GenerativeExperiencesSessionClientData.Conversation, (void (*)(void))type metadata accessor for GenerativeExperiencesSessionClientData.Conversation);
}

uint64_t sub_25B98FDC0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51BF20, MEMORY[0x263F62098], MEMORY[0x263F62098]);
}

uint64_t sub_25B98FE08(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51BF10, MEMORY[0x263F7F918], MEMORY[0x263F7F918]);
}

uint64_t sub_25B98FE50(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FB98(a1, a2, a3, a4, &qword_26A51BF18, MEMORY[0x263F7F910], MEMORY[0x263F7F910]);
}

uint64_t sub_25B98FE98(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FEC0(a1, a2, a3, a4, &qword_26A51BFB0, &qword_26A51BD60);
}

uint64_t sub_25B98FEAC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25B98FEC0(a1, a2, a3, a4, &qword_26A51BFB8, &qword_26A51B7A0);
}

uint64_t sub_25B98FEC0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    sub_25B9950E4();
    if (v10 != v11)
    {
      sub_25B9957D4();
      if (v10)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_25B9950C8();
    }
  }
  else
  {
    uint64_t v9 = a2;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25B94E854(a5);
  uint64_t v14 = sub_25B94E854(a6);
  sub_25B964F20(v14);
  uint64_t v16 = *(void *)(v15 + 72);
  uint64_t v17 = (void *)sub_25B9955B8();
  j__malloc_size(v17);
  if (!v16 || ((sub_25B995BF4(), v19) ? (BOOL v19 = v16 == -1) : (BOOL v19 = 0), v19))
  {
LABEL_23:
    sub_25B994B68();
    uint64_t result = sub_25B9ED480();
    __break(1u);
    return result;
  }
  _OWORD v17[2] = v12;
  v17[3] = 2 * (v18 / v16);
LABEL_18:
  uint64_t v20 = sub_25B94E854(a6);
  sub_25B994BC4(v20);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  if (a1)
  {
    sub_25B990840(a4 + v22, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B99034C(0, v12, (unint64_t)v17 + v22, a4, a6);
  }
  return (uint64_t)v17;
}

char *sub_25B990068(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BE78);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_25B990924((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B990444(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_25B990160(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BEB8);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_25B990718((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B990564(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_25B990250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_25B994B68();
    sub_25B995368();
    goto LABEL_11;
  }
  a5(0);
  sub_25B994EF4();
  sub_25B995774();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_25B994B68();
  sub_25B995358();
LABEL_11:
  uint64_t result = sub_25B995324();
  __break(1u);
  return result;
}

uint64_t sub_25B99034C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_25B994B68();
    sub_25B995368();
    goto LABEL_11;
  }
  sub_25B94E854(a5);
  sub_25B994EF4();
  sub_25B995774();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_25B994B68();
  sub_25B995358();
LABEL_11:
  uint64_t result = sub_25B995324();
  __break(1u);
  return result;
}

uint64_t sub_25B990444(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_25B94E854(&qword_26A51BE80);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25B9ED4D0();
  __break(1u);
  return result;
}

uint64_t sub_25B990564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_25B94E854(&qword_26A51BEC0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25B9ED4D0();
  __break(1u);
  return result;
}

char *sub_25B99067C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25B9ED4D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_25B990718(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25B9ED4D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_25B9907AC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25B9ED4D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void sub_25B990840(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_25B994B68();
    sub_25B995098();
    __break(1u);
  }
  else
  {
    sub_25B9958E0();
    if (v6 && (sub_25B94E854(v5), sub_25B95097C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_25B994FCC();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      sub_25B94E854(v5);
      sub_25B994FCC();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_25B990924(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_25B994B68();
    __src = (char *)sub_25B995098();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

void sub_25B9909A0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_25B994B68();
    sub_25B995098();
    __break(1u);
  }
  else
  {
    sub_25B9958E0();
    if (v6 && (v5(0), sub_25B95097C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_25B994FCC();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      sub_25B994FCC();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t sub_25B990A8C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25B994B68();
    sub_25B995368();
LABEL_11:
    uint64_t result = sub_25B995324();
    __break(1u);
    return result;
  }
  sub_25B9594D0();
  sub_25B94E854(v4);
  sub_25B95097C();
  sub_25B995B5C();
  if (!v7 & v6) {
    BOOL v8 = v5 > a3;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    sub_25B994B68();
    sub_25B995358();
    goto LABEL_11;
  }
  sub_25B99591C();
  return swift_arrayInitWithCopy();
}

uint64_t sub_25B990B58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (BOOL v3 = a1 + 40 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25B990C3C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_25B990F38(a1, a2, a3);
}

uint64_t sub_25B990C54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    sub_25B94E854(&qword_26A51BEE8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25B990D54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25B990E34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 48 * a2 > a1 ? (BOOL v3 = a1 + 48 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    sub_25B94E854(&qword_26A51BE98);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25B990F38(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25B994B68();
    sub_25B995368();
LABEL_11:
    uint64_t result = sub_25B995324();
    __break(1u);
    return result;
  }
  sub_25B9594D0();
  v4(0);
  sub_25B95097C();
  sub_25B995B5C();
  if (!v7 & v6) {
    BOOL v8 = v5 > a3;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    sub_25B994B68();
    sub_25B995358();
    goto LABEL_11;
  }
  sub_25B99591C();
  return swift_arrayInitWithCopy();
}

uint64_t sub_25B991008(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25B9910E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B995D20();
  sub_25B94E8B8();
  uint64_t v9 = sub_25B9911B4(v6, v7, v8, 1, v4, v3);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t ObjectType = swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_25B993AC8((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v15[0] = v4;
    v15[1] = v3;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_25B993AC8((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_25B94F65C((uint64_t)v15);
  return v10;
}

uint64_t sub_25B9911B4(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_25B99130C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_25B9ED2D0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_25B9913E4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_25B9ED3E0();
    if (!v8)
    {
      uint64_t result = sub_25B9ED480();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_25B99130C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_25B9913E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25B99147C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_25B991658(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_25B991658((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25B99147C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_25B9ED010();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_25B9915F0(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_25B9ED3A0();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_25B9ED4D0();
  __break(1u);
LABEL_14:
  uint64_t result = sub_25B9ED480();
  __break(1u);
  return result;
}

void *sub_25B9915F0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_25B94E854(&qword_26A51BFC8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_25B991658(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BFC8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25B991808(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25B991730(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_25B991730(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_25B9ED4D0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_25B991808(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_25B9ED4D0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void sub_25B991898()
{
}

void sub_25B991964()
{
}

unint64_t sub_25B991A30()
{
  sub_25B995D20();
  sub_25B9ED740();
  sub_25B9ECFF0();
  uint64_t v2 = sub_25B9ED790();
  return sub_25B991C08(v1, v0, v2);
}

void sub_25B991AA4()
{
  sub_25B964F38();
  uint64_t v16 = v1;
  uint64_t v15 = v2;
  uint64_t v4 = v3;
  v5(0);
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = -1 << *(unsigned char *)(v0 + 32);
  unint64_t v10 = v4 & ~v9;
  if ((*(void *)(v0 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void (**)(void))(v7 + 16);
    do
    {
      sub_25B96D8C8();
      v12();
      sub_25B97E180(v15, 255, v16);
      char v13 = sub_25B9ECFB0();
      sub_25B994E58();
      v14();
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v0 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  sub_25B964F50();
}

unint64_t sub_25B991C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25B9ED6A0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25B9ED6A0() & 1) == 0);
    }
  }
  return v6;
}

void sub_25B991CEC()
{
  sub_25B992898();
  *uint64_t v0 = v1;
}

void sub_25B991D1C()
{
  sub_25B992898();
  *uint64_t v0 = v1;
}

uint64_t sub_25B991D4C()
{
  sub_25B9ECAC0();
  sub_25B95097C();
  sub_25B959038();
  v0();
  uint64_t v1 = sub_25B9953EC();
  return MEMORY[0x270FA0238](v1, v2, v3);
}

uint64_t sub_25B991DC8()
{
  uint64_t v1 = sub_25B9ECAC0();
  sub_25B994BC4(v1);
  char v2 = *(unsigned char *)(v0 + 16);
  return sub_25B97F164(v2);
}

uint64_t sub_25B991E0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25B991E34()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B991E84()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B97F240(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B991F14()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B991F4C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25B991F74()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25B991FB4(uint64_t a1)
{
  return sub_25B980794(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_25B991FC0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B991FFC()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B98094C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B992090()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B980DA0(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B992120()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B992168()
{
  sub_25B995BBC();
  sub_25B994E80();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B96D904();
  sub_25B99581C();
  return sub_25B980F20(v3, v4, v5, v6, v7);
}

uint64_t sub_25B992204()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B95F890;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B981110(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B992294()
{
  sub_25B9ECBC0();
  sub_25B950790();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 40) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();

  sub_25B994E58();
  v8();
  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_25B99233C()
{
  sub_25B995BBC();
  sub_25B994E80();
  sub_25B995674();
  uint64_t v0 = sub_25B9ECBC0();
  sub_25B994BC4(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9606AC(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B960510;
  sub_25B96D904();
  sub_25B99581C();
  return sub_25B98147C(v4, v5, v6, v7, v8);
}

uint64_t sub_25B9923EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25B992400()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B9817D0(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B992494()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B9924E4()
{
  sub_25B99579C();
  sub_25B994E80();
  sub_25B994E28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25B9606AC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25B960510;
  sub_25B994BD8();
  sub_25B995808();
  return sub_25B981944(v3, v4, v5, v6, v7, v8);
}

void sub_25B992574()
{
  sub_25B992898();
  *uint64_t v0 = v1;
}

char *sub_25B9925A4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B9929BC(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_25B9925C4()
{
  sub_25B992B8C();
  *uint64_t v0 = v1;
}

char *sub_25B992628(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B992AA8(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_25B992648(char a1, uint64_t a2, char a3)
{
  sub_25B992DD0(a1, a2, a3, *v3, &qword_26A51BFD0, (void (*)(uint64_t, uint64_t, void *))sub_25B9907AC, (void (*)(uint64_t, uint64_t, void *))sub_25B990D54);
  *uint64_t v3 = v4;
}

void sub_25B992698()
{
  sub_25B992B8C();
  *uint64_t v0 = v1;
}

void sub_25B9926FC()
{
  sub_25B992B8C();
  *uint64_t v0 = v1;
}

void sub_25B992760()
{
  sub_25B992B8C();
  *uint64_t v0 = v1;
}

char *sub_25B9927C4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25B992CE4(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_25B9927E4()
{
  sub_25B992B8C();
  *uint64_t v0 = v1;
}

void sub_25B992848(char a1, uint64_t a2, char a3)
{
  sub_25B992DD0(a1, a2, a3, *v3, &qword_26A51B798, (void (*)(uint64_t, uint64_t, void *))sub_25B9907AC, (void (*)(uint64_t, uint64_t, void *))sub_25B991008);
  *uint64_t v3 = v4;
}

void sub_25B992898()
{
  sub_25B9958CC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  if (v8)
  {
    sub_25B9950E4();
    if (v10 != v11)
    {
      sub_25B9957D4();
      if (v10)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_25B9950C8();
    }
  }
  else
  {
    uint64_t v9 = v0;
  }
  uint64_t v12 = *(void *)(v5 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(v5 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25B94E854(v1);
  uint64_t v14 = sub_25B94E854(v3);
  sub_25B964F20(v14);
  uint64_t v16 = *(void *)(v15 + 72);
  uint64_t v17 = (void *)sub_25B9955B8();
  j__malloc_size(v17);
  if (!v16)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_25B995BF4();
  BOOL v19 = v19 && v16 == -1;
  if (v19) {
    goto LABEL_23;
  }
  _OWORD v17[2] = v12;
  v17[3] = 2 * (v18 / v16);
LABEL_18:
  uint64_t v20 = sub_25B94E854(v3);
  sub_25B994BC4(v20);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v5 + v22;
  if (v7)
  {
    sub_25B990840(v23, v12);
    *(void *)(v5 + 16) = 0;
  }
  else
  {
    sub_25B990A8C(v23, v12, (unint64_t)v17 + v22);
  }
  swift_release();
  sub_25B995938();
}

char *sub_25B9929BC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BF00);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25B99067C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25B990B58((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_25B992AA8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BEE0);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25B990718(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25B990C54((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_25B992B8C()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  if (v8)
  {
    sub_25B9950E4();
    if (v10 != v11)
    {
      sub_25B9957D4();
      if (v10)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_25B9950C8();
    }
  }
  else
  {
    uint64_t v9 = v0;
  }
  uint64_t v12 = *(void *)(v5 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(v5 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25B94E854(v1);
  uint64_t v14 = v3(0);
  sub_25B964F20(v14);
  uint64_t v16 = *(void *)(v15 + 72);
  uint64_t v17 = (void *)sub_25B995590();
  j__malloc_size(v17);
  if (!v16)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_25B995BF4();
  BOOL v19 = v19 && v16 == -1;
  if (v19) {
    goto LABEL_23;
  }
  _OWORD v17[2] = v12;
  v17[3] = 2 * (v18 / v16);
LABEL_18:
  uint64_t v20 = *(void *)(v3(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v5 + v21;
  if (v7)
  {
    sub_25B9909A0(v22, v12);
    *(void *)(v5 + 16) = 0;
  }
  else
  {
    sub_25B990F38(v22, v12, (unint64_t)v17 + v21);
  }
  swift_release();
  sub_25B964F50();
}

char *sub_25B992CE4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25B94E854(&qword_26A51BEA0);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25B990924(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25B990E34((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_25B992DD0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_25B9950E4();
    if (v12 != v13)
    {
      sub_25B9957D4();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_25B9950C8();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_25B94E854(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v18 = v16 + 4;
  uint64_t v19 = a4 + 32;
  if (a1)
  {
    a6(v19, v14, v18);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  swift_release();
}

uint64_t sub_25B992EB4(uint64_t a1)
{
  return sub_25B99304C(a1, &qword_26A51BF60, &qword_26A51BE10);
}

uint64_t sub_25B992EC8()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_25B991964();
  uint64_t v3 = v2;
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_25B94E854(&qword_26A51BF50);
  sub_25B9ED450();
  uint64_t v6 = *(void *)(v10 + 48);
  uint64_t v7 = sub_25B9EC300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v3, v7);
  uint64_t v8 = *(void *)(*(void *)(v10 + 56) + 8 * v3);
  sub_25B94E854(&qword_26A51BF58);
  sub_25B97E180(&qword_26A51BF48, 255, MEMORY[0x263F07508]);
  sub_25B9ED470();
  *uint64_t v1 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25B993038(uint64_t a1)
{
  return sub_25B99304C(a1, &qword_26A51BF40, &qword_26A51BE30);
}

uint64_t sub_25B99304C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = v3;
  swift_bridgeObjectRetain();
  sub_25B991964();
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_25B995A90();
    sub_25B94E854(a2);
    sub_25B9ED450();
    sub_25B9EC300();
    sub_25B95097C();
    sub_25B959038();
    v9();
    sub_25B94E854(a3);
    sub_25B95097C();
    sub_25B96D990();
    v10();
    sub_25B97E180(&qword_26A51BF48, 255, MEMORY[0x263F07508]);
    sub_25B9ED470();
    *uint64_t v6 = v16;
    swift_bridgeObjectRelease();
    sub_25B995928();
  }
  else
  {
    sub_25B94E854(a3);
    uint64_t v11 = sub_25B995214();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v11, v12, v13, v14);
}

uint64_t sub_25B9931F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B97E180(&qword_26A51BD30, a2, (void (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25B99324C()
{
  return sub_25B97E180(&qword_26A51B5D0, 255, MEMORY[0x263F61838]);
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionXPCService()
{
  return &type metadata for GenerativeExperiencesSessionXPCService;
}

uint64_t method lookup function for GenerativeExperiencesSessionClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativeExperiencesSessionClient);
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.__allocating_init(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.__allocating_init(identifer:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.terminateSession(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionID()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.register(documents:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.unregister(documents:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.registeredDocuments()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.complete<A>(generating:query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.complete(query:parameters:promptSanitizer:responseSanitizer:clientRequestID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.getTools()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.setTools(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.getToolChoice()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.setToolChoice(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.undo()()
{
  sub_25B960558();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x148);
  char v8 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  uint64_t v4 = swift_task_alloc();
  char v5 = (void *)sub_25B9606AC(v4);
  void *v5 = v6;
  v5[1] = sub_25B960510;
  return v8(v2);
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.redo()()
{
  sub_25B960558();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x150);
  char v8 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  uint64_t v4 = swift_task_alloc();
  char v5 = (void *)sub_25B9606AC(v4);
  void *v5 = v6;
  v5[1] = sub_25B960510;
  return v8(v2);
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.canUndo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.canRedo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceCompletionResponse(for:element:isComplete:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceDocumentRegistrationStatus(for:documentID:registrationStatus:isComplete:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidEncounterCompletionError(for:generativeError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidEncounterRegistrationError(for:documentID:generativeError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceOneShotCompletion(for:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceOneShotCompletionError(for:generativeError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D0))();
}

uint64_t sub_25B9939A4()
{
  return sub_25B9557DC((unint64_t *)&qword_26A51B690, &qword_26A51B698);
}

uint64_t sub_25B9939E0()
{
  return sub_25B98DEB4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_25B9939FC()
{
  return sub_25B98E064(*(void *)(v0 + 16));
}

unint64_t sub_25B993A18()
{
  unint64_t result = qword_26A51BE88;
  if (!qword_26A51BE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BE88);
  }
  return result;
}

uint64_t *sub_25B993A64(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_25B993AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25B993B24()
{
  return sub_25B989DFC(*(void *)(v0 + 16));
}

unint64_t sub_25B993B40()
{
  unint64_t result = qword_26A51BEC8;
  if (!qword_26A51BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51BEC8);
  }
  return result;
}

void sub_25B993B8C(void *a1)
{
}

uint64_t sub_25B993B94()
{
  return sub_25B993F78();
}

uint64_t sub_25B993BAC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B993BE8(uint64_t a1)
{
  return sub_25B9940BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B988760);
}

uint64_t sub_25B993C00(uint64_t a1)
{
  return sub_25B993FC4(a1, &selRef_completeStreamWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_);
}

uint64_t sub_25B993C0C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_25B991A30();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_25B995A90();
    sub_25B94E854(&qword_26A51BF38);
    sub_25B995A50();
    sub_25B995CF4();
    sub_25B94E854(&qword_26A51BF30);
    sub_25B95097C();
    sub_25B96D990();
    v4();
    sub_25B9ED470();
    *uint64_t v1 = v3;
    swift_bridgeObjectRelease();
    sub_25B995928();
  }
  else
  {
    sub_25B94E854(&qword_26A51BF30);
    uint64_t v5 = sub_25B995214();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v5, v6, v7, v8);
}

double sub_25B993D40@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_25B991A30();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = 0x8000000000000000;
    sub_25B94E854(&qword_26A51BF28);
    sub_25B995A50();
    sub_25B995CF4();
    sub_25B961A24((_OWORD *)(*(void *)(v6 + 56) + 32 * v4), a1);
    sub_25B9ED470();
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

void sub_25B993E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, SEL *a17)
{
  size_t v17 = a13;
  type metadata accessor for DocumentIdentifierXPCEnvelope();
  uint64_t v18 = (void *)sub_25B9ED070();
  type metadata accessor for ToolTypeXPCEnvelope();
  uint64_t v19 = (void *)sub_25B9ED070();
  if (a13)
  {
    sub_25B9953E0();
    size_t v17 = (void *)sub_25B9ECFC0();
  }
  id v20 = (id)sub_25B9EC2D0();
  objc_msgSend(a16, *a17, a1, a2, a3, a4, v18, v19, a7, a8, a9, a10, a11, v17, v20, a15);
}

uint64_t sub_25B993F60()
{
  return sub_25B993F78();
}

uint64_t sub_25B993F78()
{
  sub_25B995630();
  return v7(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_25B993FB8(uint64_t a1)
{
  return sub_25B993FC4(a1, &selRef_completeWithConfiguration_query_template_bindingVariables_documents_tools_toolChoice_parameters_schema_promptSanitizer_responseSanitizer_clientRequestID_requestUUID_delegate_);
}

#error "25B993FF0: call analysis failed (funcsize=15)"

uint64_t sub_25B994004()
{
  sub_25B9EC300();
  sub_25B950790();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  sub_25B994E58();
  v8();
  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_25B9940A4(uint64_t a1)
{
  return sub_25B9940BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25B9831B4);
}

uint64_t sub_25B9940BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  sub_25B995674();
  uint64_t v4 = sub_25B9EC300();
  sub_25B994BC4(v4);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a2(v2, v6, v7);
}

void sub_25B994120(void *a1)
{
  sub_25B98337C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25B99412C()
{
  sub_25B9ECE30();
  sub_25B950790();
  uint64_t v34 = *(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v2 + 64) + ((v34 + 16) & ~v34) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = v3;
  sub_25B9EC580();
  sub_25B950790();
  uint64_t v33 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v5 = (v3 + v33 + 8) & ~v33;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_25B94E854(&qword_26A51B820);
  sub_25B964F20(v8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v27 = (v5 + v7 + v10) & ~v10;
  uint64_t v31 = *(void *)(v11 + 64);
  sub_25B9EC9A0();
  sub_25B950790();
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v30 = *(void *)(v14 + 64);
  uint64_t v32 = sub_25B9EC940();
  sub_25B950790();
  uint64_t v16 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v29 = *(void *)(v18 + 64);
  sub_25B994E98();
  v19();

  sub_25B96D920();
  v20();
  uint64_t v21 = sub_25B9ECC70();
  if (!sub_25B995B00(v0 + v27))
  {
    sub_25B97AD18();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0 + v27, v21);
  }
  uint64_t v23 = v34 | v33 | v13 | v10 | v17 | 7;
  uint64_t v24 = (((v27 + v31 + v13) & ~v13) + v30 + v17) & ~v17;
  sub_25B9950BC();
  v25();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v24, v32);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, ((v29 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v23);
}

uint64_t sub_25B9943B4()
{
  sub_25B995674();
  uint64_t v1 = sub_25B9ECE30();
  sub_25B964F20(v1);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_25B9EC580();
  sub_25B964F20(v5);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = sub_25B94E854(&qword_26A51B820);
  sub_25B964F20(v10);
  unint64_t v12 = (v7 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = sub_25B9EC9A0();
  sub_25B964F20(v15);
  unint64_t v17 = (v12 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = sub_25B9EC940();
  sub_25B964F20(v20);
  uint64_t v23 = *(void *)(v0
                  + ((*(void *)(v22 + 64)
                    + ((v17 + v19 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
                    + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)sub_25B9606AC(v24);
  *uint64_t v25 = v26;
  v25[1] = sub_25B95F890;
  sub_25B9952B0();
  return sub_25B983D44(v27, v28, v29, v30, v31, v32, v33, v23);
}

uint64_t sub_25B9945A8()
{
  sub_25B9EC580();
  sub_25B950790();
  uint64_t v24 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = ((v24 + 40) & ~v24) + *(void *)(v2 + 64);
  uint64_t v4 = sub_25B94E854(&qword_26A51B820);
  sub_25B964F20(v4);
  uint64_t v23 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (v3 + v23) & ~v23;
  uint64_t v22 = *(void *)(v7 + 64);
  sub_25B9EC9A0();
  sub_25B950790();
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v10 + 64);
  sub_25B9EC940();
  sub_25B950790();
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v13 + 64);
  swift_release();
  swift_release();
  swift_release();
  sub_25B994E58();
  v15();
  uint64_t v16 = sub_25B9ECC70();
  if (!sub_25B995B00(v0 + v6))
  {
    sub_25B97AD18();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0 + v6, v16);
  }
  sub_25B9950BC();
  v18();
  sub_25B995290();
  v19();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((v14 + ((((v6 + v22 + v9) & ~v9) + v21 + v12) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8, v24 | v23 | v9 | v12 | 7);
}

uint64_t sub_25B9947D4()
{
  uint64_t v1 = sub_25B9EC580();
  sub_25B964F20(v1);
  unint64_t v4 = ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
     + *(void *)(v3 + 64);
  uint64_t v5 = sub_25B94E854(&qword_26A51B820);
  sub_25B964F20(v5);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = sub_25B9EC9A0();
  sub_25B964F20(v10);
  unint64_t v12 = (v7 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = sub_25B9EC940();
  sub_25B964F20(v15);
  uint64_t v17 = v0 + ((v12 + v14 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v27 + 16) = v18;
  *uint64_t v18 = v27;
  v18[1] = sub_25B960510;
  sub_25B9952B0();
  return sub_25B985378(v19, v20, v21, v22, v23, v24, v25, v17);
}

uint64_t sub_25B9949A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B995970(a1, a2, a3);
  sub_25B95097C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

uint64_t sub_25B9949F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25B994A10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B995970(a1, a2, a3);
  sub_25B95097C();
  sub_25B96D8F8();
  v4();
  return v3;
}

uint64_t sub_25B994A5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25B995970(a1, a2, a3);
  sub_25B95097C();
  sub_25B96D990();
  v4();
  return v3;
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionClient.ToolCallResults()
{
  return &type metadata for GenerativeExperiencesSessionClient.ToolCallResults;
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionClient.ToolCall()
{
  return &type metadata for GenerativeExperiencesSessionClient.ToolCall;
}

uint64_t sub_25B994B00()
{
  return swift_task_dealloc();
}

uint64_t sub_25B994B7C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA2498](a1, a2, 0);
}

uint64_t sub_25B994B84()
{
  return swift_task_dealloc();
}

uint64_t sub_25B994BC4(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_25B994BD8()
{
  return v0;
}

uint64_t sub_25B994C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, a3);
}

uint64_t sub_25B994C2C()
{
  return swift_allocError();
}

uint64_t sub_25B994C4C()
{
  return v0;
}

uint64_t sub_25B994C64(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 112);
  return 0;
}

uint64_t sub_25B994C78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B994C90()
{
  return *(void *)(v0 + 680);
}

uint64_t sub_25B994CC4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B994CDC()
{
  return swift_allocObject();
}

uint64_t sub_25B994CF4()
{
  return swift_task_dealloc();
}

uint64_t sub_25B994D84()
{
  return swift_task_alloc();
}

uint64_t sub_25B994DA0()
{
  *(void *)(v1 - 80) = *(void *)(v0 + 344);
  return *(void *)(v0 + 328);
}

uint64_t sub_25B994E4C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return 0;
}

BOOL sub_25B994E64(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_25B994ECC()
{
  uint64_t v3 = *(void *)(v1 + 344);
  uint64_t v4 = *(void *)(v1 + 320);
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v3, v0, 1, v4);
}

uint64_t sub_25B994F64()
{
  return v0 + 8;
}

uint64_t sub_25B994F74()
{
  return swift_task_dealloc();
}

void sub_25B994FB0(uint64_t *a1@<X8>)
{
  uint64_t v3 = *a1;
  *(void *)(v2 - 80) = *a1;
  *(void *)(v1 + 368) = v3;
  *(void *)(v1 + 376) = a1[1];
}

uint64_t sub_25B994FCC()
{
  return v0;
}

uint64_t sub_25B994FE0()
{
  return v0;
}

uint64_t sub_25B99500C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_25B995018()
{
  return swift_beginAccess();
}

uint64_t sub_25B995030()
{
  return v0;
}

uint64_t sub_25B995048()
{
  return v0;
}

uint64_t sub_25B99507C(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

uint64_t sub_25B995098()
{
  return sub_25B9ED4D0();
}

__n128 sub_25B9950D8(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 112);
  a1[1] = result;
  return result;
}

uint64_t sub_25B9950F4(uint64_t a1, uint64_t a2)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, v2);
}

uint64_t sub_25B99510C()
{
  return sub_25B9ECB40();
}

uint64_t sub_25B995128()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_25B9951BC()
{
  return 0;
}

uint64_t sub_25B9951E4(uint64_t a1, uint64_t a2)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B995214()
{
  return v0;
}

uint64_t sub_25B995228()
{
  return sub_25B9ECDD0();
}

uint64_t sub_25B995248()
{
  return v0;
}

uint64_t sub_25B99525C()
{
  return v0;
}

uint64_t sub_25B9952D0(uint64_t result)
{
  *(void *)(v1 + 864) = result;
  return result;
}

void sub_25B9952E0()
{
  sub_25B980924();
  *(void *)(v0 + 768) = v1;
  sub_25B980FC0();
}

uint64_t sub_25B995324()
{
  return sub_25B9ED4D0();
}

uint64_t sub_25B99533C(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

id sub_25B995384(id a1, SEL a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, a2, a3, a4, 1, 0);
}

uint64_t sub_25B99539C()
{
  return v0 + 8;
}

uint64_t sub_25B9953CC()
{
  return v0;
}

uint64_t sub_25B9953E0()
{
  return v0;
}

uint64_t sub_25B9953EC()
{
  return v0;
}

uint64_t sub_25B9953FC()
{
  return v0;
}

uint64_t sub_25B995410()
{
  return v0;
}

uint64_t sub_25B995430(uint64_t a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
  return swift_allocObject();
}

uint64_t sub_25B995470()
{
  return *(void *)(v0 + 448);
}

uint64_t sub_25B995498(uint64_t a1)
{
  *(void *)(v3 + 760) = a1;
  _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v2, 1, a1);
  return sub_25B96CA38(v2, v1);
}

uint64_t sub_25B9954D8()
{
  return swift_slowAlloc();
}

uint64_t sub_25B9954F0()
{
  return v0;
}

void sub_25B99550C()
{
  uint64_t v2 = *(void **)(v0 + 728);
}

uint64_t sub_25B995534()
{
  *(void *)(v1 - 80) = *(void *)(v0 + 120);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B995590()
{
  return swift_allocObject();
}

uint64_t sub_25B9955B8()
{
  return swift_allocObject();
}

uint64_t sub_25B9955E0()
{
  return v0;
}

uint64_t sub_25B9955EC()
{
  return 0;
}

uint64_t sub_25B995608()
{
  return swift_allocObject();
}

uint64_t sub_25B995620(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_25B97B968(a1, a2, a3, a3 + 1);
}

uint64_t sub_25B995628()
{
  return sub_25B97B914();
}

__n128 sub_25B995630()
{
  return *(__n128 *)(v0 + 72);
}

uint64_t sub_25B995658()
{
  return *(void *)(v0 + 248);
}

uint64_t sub_25B995674()
{
  return 0;
}

uint64_t sub_25B99569C()
{
  return *(void *)(v0 + 568);
}

uint64_t sub_25B9956B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9956E4(uint64_t result)
{
  *(void *)(v1 + 400) = result;
  return result;
}

uint64_t sub_25B995700()
{
  return swift_slowAlloc();
}

BOOL sub_25B995718(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_25B995740()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_25B995750()
{
  return swift_slowAlloc();
}

uint64_t sub_25B9957B0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(void *)(result + 88) = v2;
  return result;
}

uint64_t sub_25B9957BC()
{
  return swift_allocObject();
}

uint64_t sub_25B9957E0()
{
  return v0;
}

uint64_t sub_25B9957FC()
{
  return v0;
}

uint64_t sub_25B995830(void *a1)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v2;
  a1[5] = v1;
  a1[6] = v3;
  return swift_retain();
}

uint64_t sub_25B995854()
{
  return swift_allocObject();
}

uint64_t sub_25B99586C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
  return sub_25B9EC810();
}

dispatch_group_t sub_25B995890()
{
  return dispatch_group_create();
}

char *sub_25B9958F8@<X0>(unint64_t a1@<X8>)
{
  return sub_25B990068((char *)(a1 > 1), v1, 1, v2);
}

uint64_t sub_25B99594C()
{
  return v0;
}

uint64_t sub_25B995964()
{
  return v0;
}

uint64_t sub_25B995970(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_25B94E854(a3);
}

uint64_t sub_25B99598C()
{
  return v0;
}

uint64_t sub_25B995998()
{
  return v0;
}

uint64_t sub_25B9959A4()
{
  return sub_25B9ED1F0();
}

uint64_t sub_25B9959C0()
{
  return v0;
}

uint64_t sub_25B9959D8(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 0, 1, a1);
}

uint64_t sub_25B995A50()
{
  return sub_25B9ED450();
}

void sub_25B995A90()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_25B995AB8()
{
  return v0;
}

id sub_25B995ACC()
{
  *(_WORD *)(v1 + 12) = 2112;
  return v0;
}

uint64_t sub_25B995B00(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v1);
}

uint64_t sub_25B995B2C()
{
  return swift_allocObject();
}

uint64_t sub_25B995B44()
{
  return v0;
}

uint64_t sub_25B995B50()
{
  return v0;
}

void sub_25B995B84(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  *(void *)(v1 + 64) = v2;
  JUMPOUT(0x26116C6F0);
}

uint64_t sub_25B995BDC()
{
  return sub_25B9ED2C0();
}

uint64_t sub_25B995C00()
{
  return 0;
}

id sub_25B995C28(id a1, SEL a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, a2, a3, a4, 2, 0);
}

uint64_t sub_25B995C40()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B995C58()
{
  return v0;
}

uint64_t sub_25B995C6C()
{
  return v0;
}

double sub_25B995C78@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  double result = 0.0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  return result;
}

uint64_t sub_25B995C8C()
{
  return sub_25B9ECB20();
}

uint64_t sub_25B995CC0()
{
  *(void *)(v1 - 128) = v0;
  return v1 - 128;
}

uint64_t sub_25B995CD4()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return sub_25B9ED390();
}

uint64_t sub_25B995CF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B995D38()
{
  return 0;
}

void sub_25B995D60(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_25B995D98()
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 1, 1, v1);
}

uint64_t sub_25B995DB8(uint64_t a1)
{
  return sub_25B9DC3A4(a1, v1);
}

uint64_t sub_25B995DD0()
{
  return sub_25B95D778(v1, v0, v2);
}

uint64_t sub_25B995DF0()
{
  return v0;
}

uint64_t sub_25B995DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C69616D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25B995F54(char a1)
{
  if (!a1) {
    return 0x6C69616D65;
  }
  if (a1 == 1) {
    return 0x6D754E656E6F6870;
  }
  return 0x726568746FLL;
}

uint64_t sub_25B995FAC()
{
  return sub_25B995F54(*v0);
}

uint64_t sub_25B995FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B995DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B995FDC(uint64_t a1)
{
  unint64_t v2 = sub_25B99649C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B996018(uint64_t a1)
{
  unint64_t v2 = sub_25B99649C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B996054()
{
  return sub_25B951020();
}

uint64_t sub_25B99606C(uint64_t a1)
{
  unint64_t v2 = sub_25B996580();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9960A8(uint64_t a1)
{
  unint64_t v2 = sub_25B996580();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9960E4(uint64_t a1)
{
  unint64_t v2 = sub_25B9964E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B996120(uint64_t a1)
{
  unint64_t v2 = sub_25B9964E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B99615C(uint64_t a1)
{
  unint64_t v2 = sub_25B996534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B996198(uint64_t a1)
{
  unint64_t v2 = sub_25B996534();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Handle.Kind.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v35 = v1;
  uint64_t v5 = v4;
  sub_25B94E854(&qword_26A51C040);
  sub_25B950790();
  uint64_t v29 = v7;
  uint64_t v30 = v6;
  MEMORY[0x270FA5388](v6);
  sub_25B958FE4();
  uint64_t v28 = v8;
  sub_25B94E854(&qword_26A51C048);
  sub_25B950790();
  uint64_t v26 = v10;
  uint64_t v27 = v9;
  MEMORY[0x270FA5388](v9);
  sub_25B96DA28();
  uint64_t v11 = sub_25B94E854(&qword_26A51C050);
  sub_25B950790();
  uint64_t v25 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B959398();
  sub_25B94E854(&qword_26A51C058);
  sub_25B950790();
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v0[1];
  uint64_t v31 = *v0;
  uint64_t v32 = v18;
  uint64_t v19 = *((unsigned __int8 *)v0 + 16);
  sub_25B94F2E0(v5, v5[3]);
  sub_25B99649C();
  sub_25B9ED7B0();
  if (v19)
  {
    if (v19 == 1)
    {
      sub_25B996534();
      sub_25B998404();
      uint64_t v20 = v27;
      sub_25B9ED610();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      uint64_t v22 = v3;
    }
    else
    {
      sub_25B9964E8();
      uint64_t v23 = v28;
      sub_25B998404();
      uint64_t v20 = v30;
      sub_25B9ED610();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      uint64_t v22 = v23;
    }
    v21(v22, v20);
  }
  else
  {
    sub_25B996580();
    sub_25B998404();
    sub_25B9ED610();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v2, v11);
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v19);
  sub_25B961A64();
}

unint64_t sub_25B99649C()
{
  unint64_t result = qword_26A51C060;
  if (!qword_26A51C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C060);
  }
  return result;
}

unint64_t sub_25B9964E8()
{
  unint64_t result = qword_26A51C068;
  if (!qword_26A51C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C068);
  }
  return result;
}

unint64_t sub_25B996534()
{
  unint64_t result = qword_26A51C070;
  if (!qword_26A51C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C070);
  }
  return result;
}

unint64_t sub_25B996580()
{
  unint64_t result = qword_26A51C078;
  if (!qword_26A51C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C078);
  }
  return result;
}

void Handle.Kind.init(from:)()
{
  sub_25B961A4C();
  uint64_t v64 = v0;
  uint64_t v3 = v2;
  uint64_t v61 = v4;
  sub_25B94E854(&qword_26A51C080);
  sub_25B950790();
  uint64_t v58 = v6;
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  uint64_t v62 = v7;
  uint64_t v60 = sub_25B94E854(&qword_26A51C088);
  sub_25B950790();
  uint64_t v57 = v8;
  MEMORY[0x270FA5388](v9);
  sub_25B959380();
  sub_25B94E854(&qword_26A51C090);
  sub_25B950790();
  uint64_t v56 = v10;
  MEMORY[0x270FA5388](v11);
  sub_25B96DA28();
  uint64_t v12 = sub_25B94E854(&qword_26A51C098);
  sub_25B950790();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v3[3];
  uint64_t v63 = v3;
  sub_25B94F2E0(v3, v18);
  sub_25B99649C();
  uint64_t v19 = v64;
  sub_25B9ED7A0();
  if (v19)
  {
    uint64_t v20 = (uint64_t)v63;
LABEL_11:
    sub_25B94F65C(v20);
    goto LABEL_12;
  }
  uint64_t v54 = v1;
  uint64_t v64 = v14;
  uint64_t v21 = v17;
  uint64_t v22 = sub_25B9ED5B0();
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = v12;
  if (!v23)
  {
    uint64_t v20 = (uint64_t)v63;
    uint64_t v31 = v64;
LABEL_10:
    uint64_t v32 = sub_25B9ED3D0();
    swift_allocError();
    uint64_t v34 = v33;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v34 = &type metadata for Handle.Kind;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v24);
    goto LABEL_11;
  }
  uint64_t v53 = 0;
  uint64_t v55 = v12;
  int v25 = *(unsigned __int8 *)(v22 + 32);
  uint64_t v26 = sub_25B958E48(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  uint64_t v28 = v27;
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  if (v28 != v30 >> 1)
  {
    uint64_t v20 = (uint64_t)v63;
    uint64_t v31 = v64;
    uint64_t v24 = v55;
    goto LABEL_10;
  }
  if (v25)
  {
    if (v25 == 1)
    {
      sub_25B996534();
      sub_25B9983C8();
      uint64_t v36 = sub_25B9ED540();
      uint64_t v38 = v37;
      uint64_t v52 = v26;
      uint64_t v39 = sub_25B9983B0();
      v40(v39);
      uint64_t v41 = (uint64_t)v63;
    }
    else
    {
      uint64_t v52 = v26;
      sub_25B9964E8();
      sub_25B9983C8();
      uint64_t v41 = (uint64_t)v63;
      uint64_t v36 = sub_25B9ED540();
      uint64_t v38 = v42;
      uint64_t v43 = sub_25B9983B0();
      v44(v43);
    }
  }
  else
  {
    sub_25B996580();
    sub_25B9983C8();
    uint64_t v52 = v26;
    uint64_t v35 = sub_25B9ED540();
    uint64_t v41 = (uint64_t)v63;
    uint64_t v36 = v35;
    uint64_t v38 = v45;
    uint64_t v46 = sub_25B9983B0();
    v47(v46);
  }
  swift_unknownObjectRelease();
  uint64_t v48 = sub_25B998440();
  v49(v48);
  uint64_t v50 = v61;
  *uint64_t v61 = v36;
  v50[1] = v38;
  *((unsigned char *)v50 + 16) = v25;
  sub_25B94F65C(v41);
LABEL_12:
  sub_25B961A64();
}

void sub_25B996B24()
{
}

void sub_25B996B3C()
{
}

uint64_t Handle.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Handle.name.modify())()
{
  return nullsub_1;
}

uint64_t Handle.handleKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_25B9974E8(v2, v3, v4);
}

uint64_t Handle.handleKind.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_25B9974FC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  return result;
}

uint64_t (*Handle.handleKind.modify())()
{
  return nullsub_1;
}

uint64_t Handle.contactID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Handle.contactID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Handle.contactID.modify())()
{
  return nullsub_1;
}

uint64_t Handle.isOwner.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Handle.isOwner.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*Handle.isOwner.modify())()
{
  return nullsub_1;
}

__n128 Handle.init(name:handleKind:contactID:isOwner:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unsigned __int8 a6@<W5>, __n128 *a7@<X8>)
{
  unsigned __int8 v7 = a3[1].n128_u8[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  __n128 result = *a3;
  a7[1] = *a3;
  a7[2].n128_u8[0] = v7;
  a7[2].n128_u64[1] = a4;
  a7[3].n128_u64[0] = a5;
  a7[3].n128_u8[8] = a6;
  return result;
}

uint64_t sub_25B996D28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x694B656C646E6168 && a2 == 0xEA0000000000646ELL;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044;
      if (v7 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x72656E774F7369 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_25B9ED6A0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25B996EE0()
{
  return 4;
}

uint64_t sub_25B996EE8(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x694B656C646E6168;
      break;
    case 2:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 3:
      uint64_t result = 0x72656E774F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B996F7C()
{
  return sub_25B996EE8(*v0);
}

uint64_t sub_25B996F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B996D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B996FAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B996EE0();
  *a1 = result;
  return result;
}

uint64_t sub_25B996FD4(uint64_t a1)
{
  unint64_t v2 = sub_25B997510();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B997010(uint64_t a1)
{
  unint64_t v2 = sub_25B997510();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Handle.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51C0A0);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B997510();
  sub_25B9ED7B0();
  sub_25B9ED5E0();
  if (!v0)
  {
    sub_25B99755C();
    sub_25B9ED600();
    sub_25B9ED5E0();
    sub_25B9ED620();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25B961A64();
}

void Handle.init(from:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51C0B8);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B959398();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B997510();
  sub_25B9ED7A0();
  if (v0)
  {
    unsigned __int8 v9 = -1;
    sub_25B94F65C((uint64_t)v2);
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    LOBYTE(v21) = 0;
    uint64_t v6 = sub_25B998490();
    uint64_t v8 = v7;
    sub_25B9975A8();
    swift_bridgeObjectRetain();
    sub_25B9ED530();
    uint64_t v19 = v6;
    uint64_t v20 = v4;
    unsigned __int8 v9 = v23;
    sub_25B9974E8(v21, v22, v23);
    uint64_t v10 = sub_25B998490();
    uint64_t v12 = v11;
    uint64_t v18 = v10;
    swift_bridgeObjectRetain();
    char v13 = sub_25B9ED550();
    uint64_t v14 = sub_25B9983EC();
    v15(v14);
    swift_bridgeObjectRetain();
    sub_25B9974E8(v21, v22, v23);
    sub_25B9974FC(v21, v22, v23);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v8;
    *(void *)(v20 + 16) = v21;
    *(void *)(v20 + 24) = v22;
    *(unsigned char *)(v20 + 32) = v23;
    *(void *)(v20 + 40) = v18;
    *(void *)(v20 + 48) = v12;
    *(unsigned char *)(v20 + 56) = v13 & 1;
    sub_25B94F65C((uint64_t)v2);
    swift_bridgeObjectRelease();
    uint64_t v16 = v21;
    uint64_t v17 = v22;
  }
  sub_25B9974FC(v16, v17, v9);
  swift_bridgeObjectRelease();
  sub_25B961A64();
}

void sub_25B9974B8()
{
}

void sub_25B9974D0()
{
}

uint64_t sub_25B9974E8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_25B9563BC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25B9974FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_25B9566FC(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_25B997510()
{
  unint64_t result = qword_26A51C0A8;
  if (!qword_26A51C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0A8);
  }
  return result;
}

unint64_t sub_25B99755C()
{
  unint64_t result = qword_26A51C0B0;
  if (!qword_26A51C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0B0);
  }
  return result;
}

unint64_t sub_25B9975A8()
{
  unint64_t result = qword_26A51C0C0;
  if (!qword_26A51C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0C0);
  }
  return result;
}

uint64_t destroy for Handle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255) {
    sub_25B9566FC(*(void *)(a1 + 16), *(void *)(a1 + 24), v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_25B9563BC(v6, v7, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v5;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      long long v15 = *v5;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v4 = v15;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      sub_25B9563BC(v12, v13, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_25B997800(a1 + 16);
    char v14 = *(unsigned char *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 32) = v14;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    sub_25B9563BC(v7, v8, *(unsigned char *)(a2 + 32));
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v6;
    sub_25B9566FC(v9, v10, v11);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_25B997800(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for Handle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 == 255) {
    goto LABEL_5;
  }
  int v7 = *(unsigned __int8 *)(a2 + 32);
  if (v7 == 255)
  {
    sub_25B997800(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *v5;
  *(unsigned char *)(a1 + 32) = v7;
  sub_25B9566FC(v8, v9, v6);
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Handle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Handle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle()
{
  return &type metadata for Handle;
}

uint64_t destroy for Handle.Kind(uint64_t a1)
{
  return sub_25B9566FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s4Sage6HandleV4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25B9563BC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Handle.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25B9563BC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25B9566FC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for Handle.Kind(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Handle.Kind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25B9566FC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Handle.Kind(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Handle.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25B997B54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_25B997B5C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind()
{
  return &type metadata for Handle.Kind;
}

uint64_t getEnumTagSinglePayload for Handle.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Handle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B997CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle.CodingKeys()
{
  return &type metadata for Handle.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Handle.Kind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B997DCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind.CodingKeys()
{
  return &type metadata for Handle.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for Handle.Kind.EmailCodingKeys()
{
  return &type metadata for Handle.Kind.EmailCodingKeys;
}

ValueMetadata *type metadata accessor for Handle.Kind.PhoneNumberCodingKeys()
{
  return &type metadata for Handle.Kind.PhoneNumberCodingKeys;
}

unsigned char *_s4Sage6HandleV4KindO15EmailCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B997EC4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind.OtherCodingKeys()
{
  return &type metadata for Handle.Kind.OtherCodingKeys;
}

unint64_t sub_25B997F00()
{
  unint64_t result = qword_26A51C0C8;
  if (!qword_26A51C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0C8);
  }
  return result;
}

unint64_t sub_25B997F50()
{
  unint64_t result = qword_26A51C0D0;
  if (!qword_26A51C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0D0);
  }
  return result;
}

unint64_t sub_25B997FA0()
{
  unint64_t result = qword_26A51C0D8;
  if (!qword_26A51C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0D8);
  }
  return result;
}

unint64_t sub_25B997FF0()
{
  unint64_t result = qword_26A51C0E0;
  if (!qword_26A51C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0E0);
  }
  return result;
}

unint64_t sub_25B998040()
{
  unint64_t result = qword_26A51C0E8;
  if (!qword_26A51C0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0E8);
  }
  return result;
}

unint64_t sub_25B998090()
{
  unint64_t result = qword_26A51C0F0;
  if (!qword_26A51C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0F0);
  }
  return result;
}

unint64_t sub_25B9980E0()
{
  unint64_t result = qword_26A51C0F8;
  if (!qword_26A51C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C0F8);
  }
  return result;
}

unint64_t sub_25B998130()
{
  unint64_t result = qword_26A51C100;
  if (!qword_26A51C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C100);
  }
  return result;
}

unint64_t sub_25B998180()
{
  unint64_t result = qword_26A51C108;
  if (!qword_26A51C108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C108);
  }
  return result;
}

unint64_t sub_25B9981D0()
{
  unint64_t result = qword_26A51C110;
  if (!qword_26A51C110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C110);
  }
  return result;
}

unint64_t sub_25B998220()
{
  unint64_t result = qword_26A51C118;
  if (!qword_26A51C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C118);
  }
  return result;
}

unint64_t sub_25B998270()
{
  unint64_t result = qword_26A51C120;
  if (!qword_26A51C120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C120);
  }
  return result;
}

unint64_t sub_25B9982C0()
{
  unint64_t result = qword_26A51C128;
  if (!qword_26A51C128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C128);
  }
  return result;
}

unint64_t sub_25B998310()
{
  unint64_t result = qword_26A51C130;
  if (!qword_26A51C130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C130);
  }
  return result;
}

unint64_t sub_25B998360()
{
  unint64_t result = qword_26A51C138;
  if (!qword_26A51C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C138);
  }
  return result;
}

uint64_t sub_25B9983B0()
{
  return v0;
}

uint64_t sub_25B9983C8()
{
  return sub_25B9ED4F0();
}

uint64_t sub_25B9983EC()
{
  return v0;
}

uint64_t sub_25B998404()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B998424()
{
  return v0;
}

uint64_t sub_25B998440()
{
  return v0;
}

uint64_t sub_25B998458()
{
  sub_25B9974FC(*(void *)(v1 - 120), *(void *)(v1 - 112), v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B998490()
{
  return sub_25B9ED510();
}

uint64_t InferenceEnvironmentInfo.modelIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.modelIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.modelIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.modelVersion.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.modelVersion.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.modelVersion.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.tokenizerIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.tokenizerIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.tokenizerIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.tokenizerVersion.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.tokenizerVersion.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.tokenizerVersion.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.baseModelIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.baseModelIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.baseModelIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.baseModelVersion.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.baseModelVersion.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.baseModelVersion.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.draftModelIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.draftModelIdentifier.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.draftModelIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InferenceEnvironmentInfo.draftModelVersion.getter()
{
  return sub_25B9593F8();
}

uint64_t InferenceEnvironmentInfo.draftModelVersion.setter()
{
  sub_25B9594D0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v0;
  return result;
}

uint64_t (*InferenceEnvironmentInfo.draftModelVersion.modify())()
{
  return nullsub_1;
}

void __swiftcall InferenceEnvironmentInfo.init(modelIdentifier:modelVersion:tokenizerIdentifier:tokenizerVersion:baseModelIdentifier:baseModelVersion:draftModelIdentifier:draftModelVersion:)(Sage::InferenceEnvironmentInfo *__return_ptr retstr, Swift::String_optional modelIdentifier, Swift::String_optional modelVersion, Swift::String_optional tokenizerIdentifier, Swift::String_optional tokenizerVersion, Swift::String_optional baseModelIdentifier, Swift::String_optional baseModelVersion, Swift::String_optional draftModelIdentifier, Swift::String_optional draftModelVersion)
{
  retstr->modelIdentifier = modelIdentifier;
  retstr->modelVersion = modelVersion;
  retstr->tokenizerIdentifier = tokenizerIdentifier;
  retstr->tokenizerVersion = tokenizerVersion;
  retstr->baseModelIdentifier = baseModelIdentifier;
  retstr->baseModelVersion = baseModelVersion;
  retstr->draftModelIdentifier = draftModelIdentifier;
  retstr->draftModelVersion = draftModelVersion;
}

uint64_t sub_25B9988DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496C65646F6DLL && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7265566C65646F6DLL && a2 == 0xEC0000006E6F6973;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000025B9F1100 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1120 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x800000025B9F1140 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1160 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F1180 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000025B9F11A0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      char v7 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 7;
      }
      else {
        return 8;
      }
    }
  }
}

unint64_t sub_25B998C14(char a1)
{
  unint64_t result = 0x6564496C65646F6DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7265566C65646F6DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25B998D2C()
{
  return sub_25B998C14(*v0);
}

uint64_t sub_25B998D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9988DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B998D5C(uint64_t a1)
{
  unint64_t v2 = sub_25B999018();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B998D98(uint64_t a1)
{
  unint64_t v2 = sub_25B999018();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InferenceEnvironmentInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51C140);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  unsigned __int8 v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[2];
  v18[13] = v1[3];
  v18[14] = v9;
  uint64_t v10 = v1[4];
  v18[11] = v1[5];
  v18[12] = v10;
  uint64_t v11 = v1[6];
  v18[9] = v1[7];
  v18[10] = v11;
  uint64_t v12 = v1[8];
  v18[7] = v1[9];
  v18[8] = v12;
  uint64_t v13 = v1[10];
  v18[5] = v1[11];
  void v18[6] = v13;
  uint64_t v14 = v1[13];
  v18[3] = v1[12];
  v18[4] = v14;
  uint64_t v15 = v1[14];
  v18[1] = v1[15];
  v18[2] = v15;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B999018();
  sub_25B9ED7B0();
  char v26 = 0;
  uint64_t v16 = v18[15];
  sub_25B9ED5E0();
  if (!v16)
  {
    char v25 = 1;
    sub_25B999D10();
    char v24 = 2;
    sub_25B999D10();
    char v23 = 3;
    sub_25B999D10();
    char v22 = 4;
    sub_25B999D10();
    char v21 = 5;
    sub_25B999D10();
    char v20 = 6;
    sub_25B999D10();
    char v19 = 7;
    sub_25B999D10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_25B999018()
{
  unint64_t result = qword_26A51C148;
  if (!qword_26A51C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C148);
  }
  return result;
}

uint64_t InferenceEnvironmentInfo.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v55 = sub_25B94E854(&qword_26A51C150);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  unsigned __int8 v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = sub_25B94F2E0(a1, v9);
  sub_25B999018();
  sub_25B9ED7A0();
  uint64_t v58 = a1;
  if (v2)
  {
    uint64_t v57 = v2;
    sub_25B999D40();
    uint64_t v63 = 0;
    sub_25B94F65C((uint64_t)v58);
    uint64_t v65 = 0;
    uint64_t v66 = v63;
    uint64_t v67 = v5;
    uint64_t v68 = v62;
    uint64_t v69 = v9;
    uint64_t v70 = v56;
    uint64_t v71 = v2;
    uint64_t v72 = v61;
    uint64_t v73 = a1;
    int v74 = v11;
    uint64_t v75 = v10;
    uint64_t v76 = v8;
    uint64_t v77 = v59;
    uint64_t v78 = v60;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v12 = v54;
    LOBYTE(v65) = 0;
    uint64_t v13 = sub_25B9ED510();
    uint64_t v16 = v15;
    uint64_t v53 = v13;
    sub_25B999DA0(1);
    uint64_t v17 = sub_25B999D6C();
    uint64_t v63 = v16;
    uint64_t v52 = v17;
    LOBYTE(v65) = 2;
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_25B999D6C();
    uint64_t v62 = v19;
    uint64_t v22 = v21;
    uint64_t v51 = v20;
    sub_25B999DA0(3);
    uint64_t v23 = sub_25B999D6C();
    uint64_t v56 = v22;
    uint64_t v50 = v23;
    uint64_t v24 = v22;
    LOBYTE(v65) = 4;
    uint64_t v61 = v25;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_25B999D6C();
    uint64_t v28 = v27;
    uint64_t v49 = v26;
    sub_25B999DA0(5);
    uint64_t v29 = sub_25B999D6C();
    uint64_t v31 = v30;
    uint64_t v48 = v29;
    sub_25B999DA0(6);
    uint64_t v32 = v28;
    uint64_t v59 = sub_25B999D6C();
    uint64_t v60 = v33;
    char v81 = 7;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_25B9ED510();
    uint64_t v57 = 0;
    uint64_t v36 = v35;
    uint64_t v47 = v34;
    uint64_t v37 = sub_25B999D2C();
    v38(v37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v62;
    v64[0] = v53;
    v64[1] = v63;
    void v64[2] = v52;
    v64[3] = v62;
    uint64_t v40 = v31;
    v64[4] = v51;
    v64[5] = v24;
    uint64_t v41 = v24;
    uint64_t v46 = v32;
    uint64_t v42 = v61;
    v64[6] = v50;
    v64[7] = v61;
    v64[8] = v49;
    v64[9] = v32;
    v64[10] = v48;
    v64[11] = v40;
    uint64_t v43 = v60;
    v64[12] = v59;
    v64[13] = v60;
    v64[14] = v47;
    v64[15] = v36;
    sub_25B99965C((uint64_t)v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v12, v64, 0x80uLL);
    sub_25B94F65C((uint64_t)v58);
    uint64_t v65 = v53;
    uint64_t v66 = v63;
    uint64_t v67 = v52;
    uint64_t v68 = v39;
    uint64_t v69 = v51;
    uint64_t v70 = v41;
    uint64_t v71 = v50;
    uint64_t v72 = v42;
    uint64_t v73 = (void *)v49;
    int v74 = v44;
    uint64_t v75 = v48;
    uint64_t v76 = v40;
    uint64_t v77 = v59;
    uint64_t v78 = v43;
    uint64_t v79 = v47;
    uint64_t v80 = v36;
  }
  return sub_25B9995C4((uint64_t)&v65);
}

uint64_t sub_25B9995C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B99965C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25B9996F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return InferenceEnvironmentInfo.init(from:)(a1, a2);
}

uint64_t sub_25B99970C(void *a1)
{
  return InferenceEnvironmentInfo.encode(to:)(a1);
}

uint64_t destroy for InferenceEnvironmentInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InferenceEnvironmentInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InferenceEnvironmentInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for InferenceEnvironmentInfo(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

void *assignWithTake for InferenceEnvironmentInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceEnvironmentInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 128))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceEnvironmentInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceEnvironmentInfo()
{
  return &type metadata for InferenceEnvironmentInfo;
}

unsigned char *storeEnumTagSinglePayload for InferenceEnvironmentInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B999BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceEnvironmentInfo.CodingKeys()
{
  return &type metadata for InferenceEnvironmentInfo.CodingKeys;
}

unint64_t sub_25B999C08()
{
  unint64_t result = qword_26A51C158;
  if (!qword_26A51C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C158);
  }
  return result;
}

unint64_t sub_25B999C58()
{
  unint64_t result = qword_26A51C160;
  if (!qword_26A51C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C160);
  }
  return result;
}

unint64_t sub_25B999CA8()
{
  unint64_t result = qword_26A51C168;
  if (!qword_26A51C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C168);
  }
  return result;
}

uint64_t sub_25B999CF4()
{
  *(void *)(v0 + 96) = v2;
  return v1;
}

uint64_t sub_25B999D10()
{
  return sub_25B9ED5E0();
}

uint64_t sub_25B999D2C()
{
  return v0;
}

void sub_25B999D40()
{
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
  v0[17] = 0;
  v0[11] = 0;
}

uint64_t sub_25B999D6C()
{
  return sub_25B9ED510();
}

void sub_25B999D84()
{
  *(void *)(v0 + 128) = 0;
}

uint64_t sub_25B999DA0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 216) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B999DB8(uint64_t a1)
{
  return sub_25B999E7C(a1, qword_26A51C170);
}

uint64_t static GenerativeModelsLogging.summarization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B999F08(&qword_26A51B010, (uint64_t)qword_26A51C170, a1);
}

uint64_t sub_25B999E08(uint64_t a1)
{
  return sub_25B999E7C(a1, qword_26A51C188);
}

uint64_t static GenerativeModelsLogging.classification.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B999F08(&qword_26A51B018, (uint64_t)qword_26A51C188, a1);
}

uint64_t sub_25B999E58(uint64_t a1)
{
  return sub_25B999E7C(a1, qword_26A51C1A0);
}

uint64_t sub_25B999E7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_25B9ECD70();
  sub_25B9604A4(v3, a2);
  sub_25B9559F0(v3, (uint64_t)a2);
  sub_25B9ECA50();
  return sub_25B9ECD50();
}

uint64_t static GenerativeModelsLogging.generativeSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B999F08(&qword_26A51B020, (uint64_t)qword_26A51C1A0, a1);
}

uint64_t sub_25B999F08@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25B9ECD70();
  uint64_t v6 = sub_25B9559F0(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t MailMessage.SummarizationOptions.requestIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.SummarizationOptions.requestIdentifier.setter()
{
  uint64_t result = sub_25B9A09D4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MailMessage.SummarizationOptions.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.requestedSummarizationStyles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MailMessage.SummarizationOptions.requestedSummarizationStyles.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.isUserInitiated.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MailMessage.SummarizationOptions.isUserInitiated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*MailMessage.SummarizationOptions.isUserInitiated.modify())()
{
  return nullsub_1;
}

uint64_t (*MailMessage.SummarizationOptions.onBehalfOfProcess.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.previousMessages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MailMessage.SummarizationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*MailMessage.SummarizationOptions.previousMessages.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_25B99A494((uint64_t)&unk_2709278A0, a1);
}

unint64_t sub_25B99A124(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0x6E49726573557369;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25B99A1D0()
{
  return sub_25B99A124(*v0);
}

uint64_t sub_25B99A1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99A56C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B99A200(uint64_t a1)
{
  unint64_t v2 = sub_25B99DC58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99A23C(uint64_t a1)
{
  unint64_t v2 = sub_25B99DC58();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.SummarizationOptions.encode(to:)()
{
}

void MailMessage.SummarizationOptions.init(from:)()
{
}

void sub_25B99A2F0()
{
}

void sub_25B99A308()
{
}

uint64_t (*MailMessage.ThreadSummarizationOptions.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.requestedSummarizationStyles.modify())()
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.isUserInitiated.modify())()
{
  return nullsub_1;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17onBehalfOfProcessAA06ClientI4InfoVSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  int v3 = *(_DWORD *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17onBehalfOfProcessAA06ClientI4InfoVSgvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  *(_DWORD *)(v1 + 48) = v4;
  return result;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.onBehalfOfProcess.modify())()
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.previousMessages.modify())()
{
  return nullsub_1;
}

__n128 _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6Styles15isUserInitiated17onBehalfOfProcess16previousMessagesAESS_ShyAA0D6ClientC0D5StyleOGSbAA0sP4InfoVSgSayACGtcfC_0@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unsigned __int8 a4@<W3>, __n128 *a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  unsigned __int32 v7 = a5[1].n128_u32[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  a7[1].n128_u64[0] = a3;
  a7[1].n128_u8[8] = a4;
  __n128 result = *a5;
  a7[2] = *a5;
  a7[3].n128_u32[0] = v7;
  a7[3].n128_u64[1] = a6;
  return result;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6Styles16previousMessagesAESS_ShyAA0D6ClientC0D5StyleOGSayACGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(_DWORD *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6StylesAESS_ShyAA0D6ClientC0D5StyleOGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  *(unsigned char *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(_DWORD *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t MailMessage.ThreadSummarizationOptions.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_25B99A494((uint64_t)&unk_270927AA0, a1);
}

uint64_t sub_25B99A494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B97AE5C();
  uint64_t v9 = sub_25B99DB00(a1);
  sub_25B9EC2F0();
  uint64_t v10 = sub_25B9EC2C0();
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(_DWORD *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_25B99A56C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFAB0 || (sub_25B9A0948() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000025B9F11E0 || (sub_25B9A0948() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x6E49726573557369 && a2 == 0xEF64657461697469;
    if (v5 || (sub_25B9A0948() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000025B9F1200 || (sub_25B9A0948() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1220)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      char v6 = sub_25B9A0948();
      swift_bridgeObjectRelease();
      if (v6) {
        return 4;
      }
      else {
        return 5;
      }
    }
  }
}

uint64_t sub_25B99A74C(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99A788(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF04();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.ThreadSummarizationOptions.encode(to:)()
{
}

void sub_25B99A800()
{
  sub_25B961A4C();
  uint64_t v10 = v2;
  int v4 = v3;
  uint64_t v6 = sub_25B94E854(v5);
  sub_25B950790();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_25B97B0B0();
  sub_25B94F2E0(v4, v4[3]);
  v10();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v0)
  {
    sub_25B94E854(&qword_26A51C1C8);
    sub_25B99DD84((uint64_t)&unk_26A51C1D0);
    sub_25B9A0A24();
    sub_25B9ED660();
    sub_25B9ED620();
    sub_25B99DCF0();
    sub_25B9A0A24();
    sub_25B9ED600();
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B99DE84((uint64_t)&unk_26A51C1F0);
    sub_25B9A0A24();
    sub_25B9ED660();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  sub_25B961A64();
}

void MailMessage.ThreadSummarizationOptions.init(from:)()
{
}

void sub_25B99AACC()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  int v4 = v3;
  uint64_t v16 = v5;
  sub_25B94E854(v6);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B97B0B0();
  sub_25B94F2E0(v4, v4[3]);
  v2();
  sub_25B9ED7A0();
  if (v0)
  {
    sub_25B94F65C((uint64_t)v4);
  }
  else
  {
    uint64_t v15 = (uint64_t)v4;
    LOBYTE(v17) = 0;
    uint64_t v8 = sub_25B9ED540();
    uint64_t v10 = v9;
    sub_25B94E854(&qword_26A51C1C8);
    sub_25B99DD84((uint64_t)&unk_26A51C200);
    swift_bridgeObjectRetain();
    sub_25B9ED590();
    uint64_t v14 = v8;
    uint64_t v11 = v17;
    LOBYTE(v17) = 2;
    swift_bridgeObjectRetain();
    char v12 = sub_25B9ED550();
    sub_25B99DE38();
    sub_25B9ED530();
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B99DE84((uint64_t)&unk_26A51C218);
    swift_bridgeObjectRetain();
    sub_25B9ED590();
    sub_25B9A0998();
    v13();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v16 = v14;
    *(void *)(v16 + 8) = v10;
    *(void *)(v16 + 16) = v11;
    *(unsigned char *)(v16 + 24) = v12 & 1;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v18;
    *(_DWORD *)(v16 + 48) = v19;
    *(void *)(v16 + 56) = v17;
    sub_25B94F65C(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_25B961A64();
}

void sub_25B99AEA8()
{
}

void sub_25B99AEC0()
{
}

uint64_t MailMessage.ClassificationOptions.requestIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.ClassificationOptions.requestIdentifier.setter()
{
  uint64_t result = sub_25B9A09D4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MailMessage.ClassificationOptions.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.ClassificationOptions.isSenderImportant.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MailMessage.ClassificationOptions.isSenderImportant.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*MailMessage.ClassificationOptions.isSenderImportant.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.ClassificationOptions.previousMessages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MailMessage.ClassificationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MailMessage.ClassificationOptions.previousMessages.modify())()
{
  return nullsub_1;
}

Sage::MailMessage::ClassificationOptions __swiftcall MailMessage.ClassificationOptions.init(requestIdentifier:isSenderImportant:previousMessages:)(Sage::MailMessage::ClassificationOptions requestIdentifier, Swift::Bool_optional isSenderImportant, Swift::OpaquePointer previousMessages)
{
  *(Swift::String *)uint64_t v3 = requestIdentifier.requestIdentifier;
  *(Swift::Bool_optional *)(v3 + 16) = isSenderImportant;
  *(Swift::OpaquePointer *)(v3 + 24) = previousMessages;
  requestIdentifier.previousMessages = previousMessages;
  requestIdentifier.isSenderImportant = isSenderImportant;
  return requestIdentifier;
}

Sage::MailMessage::ClassificationOptions __swiftcall MailMessage.ClassificationOptions.init()()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B97AE5C();
  sub_25B9EC2F0();
  uint64_t v7 = sub_25B9EC2C0();
  uint64_t v9 = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  *(void *)uint64_t v2 = v7;
  *(void *)(v2 + 8) = v9;
  *(unsigned char *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = MEMORY[0x263F8EE78];
  result.previousMessages._rawValue = v13;
  result.requestIdentifier._object = v11;
  result.requestIdentifier._countAndFlagsBits = v10;
  result.isSenderImportant.value = v12;
  return result;
}

uint64_t sub_25B99B094(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFAB0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025B9F1240 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1220)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_25B99B1D4(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000011;
  if (a1 >= 2u) {
    return 0xD000000000000010;
  }
  return result;
}

unint64_t sub_25B99B230()
{
  return sub_25B99B1D4(*v0);
}

uint64_t sub_25B99B238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99B094(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B99B260(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99B29C(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF50();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.ClassificationOptions.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51C238);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B99DF50();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v0)
  {
    sub_25B9A0B58();
    sub_25B9ED5F0();
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B99DE84((uint64_t)&unk_26A51C1F0);
    sub_25B9A0A0C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25B961A64();
}

void MailMessage.ClassificationOptions.init(from:)()
{
  sub_25B961A4C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51C248);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B9A0910();
  sub_25B99DF50();
  sub_25B9A0A34();
  if (v0)
  {
    sub_25B94F65C(v2);
  }
  else
  {
    uint64_t v6 = sub_25B9A0AE0();
    uint64_t v8 = v7;
    sub_25B9A0B58();
    swift_bridgeObjectRetain();
    char v12 = sub_25B9ED520();
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B99DE84((uint64_t)&unk_26A51C218);
    sub_25B9ED590();
    uint64_t v9 = sub_25B961A34();
    v10(v9);
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(unsigned char *)(v4 + 16) = v12;
    *(void *)(v4 + 24) = v11;
    swift_bridgeObjectRetain();
    sub_25B94F65C(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25B961A64();
}

void sub_25B99B670()
{
}

void sub_25B99B688()
{
}

uint64_t MailMessage.ThreadClassificationOptions.requestIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.ThreadClassificationOptions.requestIdentifier.setter()
{
  uint64_t result = sub_25B9A09D4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MailMessage.ThreadClassificationOptions.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.ThreadClassificationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MailMessage.ThreadClassificationOptions.previousMessages.modify())()
{
  return nullsub_1;
}

Sage::MailMessage::ThreadClassificationOptions __swiftcall MailMessage.ThreadClassificationOptions.init(requestIdentifier:previousMessages:)(Swift::String requestIdentifier, Swift::OpaquePointer previousMessages)
{
  *(Swift::String *)uint64_t v2 = requestIdentifier;
  *(Swift::OpaquePointer *)(v2 + 16) = previousMessages;
  result.requestIdentifier = requestIdentifier;
  result.previousMessages = previousMessages;
  return result;
}

uint64_t sub_25B99B76C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000025B9EFAB0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1220)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_25B99B858(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000011;
  }
}

unint64_t sub_25B99B894()
{
  return sub_25B99B858(*v0);
}

uint64_t sub_25B99B89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99B76C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B99B8C4(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99B900(uint64_t a1)
{
  unint64_t v2 = sub_25B99DF9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.ThreadClassificationOptions.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51C250);
  sub_25B950790();
  uint64_t v7 = v5;
  MEMORY[0x270FA5388](v6);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B99DF9C();
  sub_25B9A0C1C();
  sub_25B9ED610();
  if (!v0)
  {
    sub_25B9A0B58();
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B99DE84((uint64_t)&unk_26A51C1F0);
    sub_25B9A0A0C();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v4);
  sub_25B961A64();
}

void MailMessage.ThreadClassificationOptions.init(from:)()
{
  sub_25B961A4C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51C260);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B9A0910();
  sub_25B99DF9C();
  sub_25B9A0A34();
  if (v0)
  {
    sub_25B94F65C(v2);
  }
  else
  {
    uint64_t v6 = sub_25B9A0AE0();
    uint64_t v8 = v7;
    sub_25B94E854(&qword_26A51C1E8);
    sub_25B9A0B58();
    sub_25B99DE84((uint64_t)&unk_26A51C218);
    swift_bridgeObjectRetain();
    sub_25B9ED590();
    uint64_t v9 = sub_25B961A34();
    v10(v9);
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v11;
    swift_bridgeObjectRetain();
    sub_25B94F65C(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25B961A64();
}

void sub_25B99BC68()
{
}

void sub_25B99BC80()
{
}

void MailMessage.VisualPromptOptions.useCase.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*MailMessage.VisualPromptOptions.useCase.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.VisualPromptOptions.extractVisualConcepts.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MailMessage.VisualPromptOptions.extractVisualConcepts.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*MailMessage.VisualPromptOptions.extractVisualConcepts.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.VisualPromptOptions.extractVisualTopLine.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t MailMessage.VisualPromptOptions.extractVisualTopLine.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*MailMessage.VisualPromptOptions.extractVisualTopLine.modify())()
{
  return nullsub_1;
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  *(unsigned char *)uint64_t v1 = *(unsigned char *)useCase;
  *(_WORD *)(v1 + 1) = 1;
  result.useCase = useCase;
  return result;
}

uint64_t sub_25B99BD38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65736143657375 && a2 == 0xE700000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000025B9F1260 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F1280)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25B99BE84(char a1)
{
  if (!a1) {
    return 0x65736143657375;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0xD000000000000014;
}

uint64_t sub_25B99BEE8()
{
  return sub_25B99BE84(*v0);
}

uint64_t sub_25B99BEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99BD38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B99BF18(uint64_t a1)
{
  unint64_t v2 = sub_25B99DFE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99BF54(uint64_t a1)
{
  unint64_t v2 = sub_25B99DFE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.VisualPromptOptions.encode(to:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  sub_25B94E854(&qword_26A51C268);
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B99DFE8();
  sub_25B9A0C1C();
  sub_25B99E034();
  sub_25B9ED660();
  if (!v0)
  {
    sub_25B9ED620();
    sub_25B9ED620();
  }
  sub_25B9A0998();
  v4();
  sub_25B961A64();
}

void MailMessage.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25B961A4C();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_25B94E854(&qword_26A51C280);
  sub_25B950790();
  MEMORY[0x270FA5388](v18);
  sub_25B9A0910();
  sub_25B99DFE8();
  sub_25B9ED7A0();
  if (!v13)
  {
    sub_25B99E080();
    sub_25B9ED590();
    char v19 = sub_25B9ED550();
    char v20 = sub_25B9ED550();
    uint64_t v21 = sub_25B961A34();
    v22(v21);
    unsigned char *v17 = a13;
    v17[1] = v19 & 1;
    _OWORD v17[2] = v20 & 1;
  }
  sub_25B94F65C(v15);
  sub_25B961A64();
}

void sub_25B99C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MailMessage.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_25B99C288()
{
}

void MailMessage.ThreadVisualPromptOptions.useCase.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*MailMessage.ThreadVisualPromptOptions.useCase.modify())()
{
  return nullsub_1;
}

Sage::MailMessage::ThreadVisualPromptOptions __swiftcall MailMessage.ThreadVisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  sub_25B9A0B90(v1);
  return result;
}

uint64_t sub_25B99C2D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65736143657375 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B99C35C()
{
  return 0x65736143657375;
}

uint64_t sub_25B99C378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99C2D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B99C3A4(uint64_t a1)
{
  unint64_t v2 = sub_25B99E0CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99C3E0(uint64_t a1)
{
  unint64_t v2 = sub_25B99E0CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MailMessage.ThreadVisualPromptOptions.encode(to:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51C290);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B99E0CC();
  sub_25B9ED7B0();
  sub_25B99E034();
  sub_25B9ED660();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_25B961A64();
}

void MailMessage.ThreadVisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25B961A4C();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_25B94E854(&qword_26A51C2A0);
  sub_25B950790();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_25B959398();
  sub_25B9A0910();
  sub_25B99E0CC();
  sub_25B9ED7A0();
  if (!v13)
  {
    sub_25B99E080();
    sub_25B9ED590();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v19);
    *uint64_t v18 = a13;
  }
  sub_25B94F65C(v16);
  sub_25B961A64();
}

void sub_25B99C62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MailMessage.ThreadVisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_25B99C644()
{
}

uint64_t MailMessage.messageID.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.messageID.setter()
{
  uint64_t result = sub_25B9A09D4();
  *uint64_t v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t (*MailMessage.messageID.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  char v7 = *(unsigned char *)(v1 + 72);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  unsigned __int8 v8 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  sub_25B9974E8(v3, v4, v8);
  return swift_bridgeObjectRetain();
}

__n128 MailMessage.sender.setter(__n128 *a1)
{
  __n128 v12 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  unint64_t v6 = a1[3].n128_u64[0];
  unsigned __int8 v11 = a1[3].n128_u8[8];
  uint64_t v7 = v1[2].n128_i64[0];
  uint64_t v8 = v1[2].n128_i64[1];
  unsigned __int8 v9 = v1[3].n128_u8[0];
  swift_bridgeObjectRelease();
  sub_25B9974FC(v7, v8, v9);
  swift_bridgeObjectRelease();
  __n128 result = v12;
  v1[1] = v12;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  v1[3].n128_u8[0] = v4;
  v1[3].n128_u64[1] = v5;
  v1[4].n128_u64[0] = v6;
  v1[4].n128_u8[8] = v11;
  return result;
}

uint64_t (*MailMessage.sender.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MailMessage.recipients.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*MailMessage.recipients.modify())()
{
  return nullsub_1;
}

uint64_t MailMessage.dateReceived.getter()
{
  type metadata accessor for MailMessage();
  sub_25B9EC2B0();
  sub_25B95097C();
  uint64_t v0 = sub_25B9593F8();
  return v1(v0);
}

uint64_t MailMessage.dateReceived.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9A09BC() + 28);
  sub_25B9EC2B0();
  sub_25B95097C();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v2, v0, v3);
}

uint64_t (*MailMessage.dateReceived.modify())(void)
{
  return nullsub_1;
}

uint64_t MailMessage.isUnread.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MailMessage() + 32));
}

uint64_t MailMessage.isUnread.setter(char a1)
{
  uint64_t result = type metadata accessor for MailMessage();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*MailMessage.isUnread.modify())(void)
{
  return nullsub_1;
}

uint64_t MailMessage.subject.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.subject.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MailMessage() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MailMessage.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t MailMessage.body.getter()
{
  return sub_25B9593F8();
}

uint64_t MailMessage.body.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MailMessage() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MailMessage.body.modify())(void)
{
  return nullsub_1;
}

uint64_t MailMessage.attachments.getter()
{
  type metadata accessor for MailMessage();
  return swift_bridgeObjectRetain();
}

uint64_t MailMessage.attachments.setter()
{
  uint64_t v2 = *(int *)(sub_25B9A09BC() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*MailMessage.attachments.modify())(void)
{
  return nullsub_1;
}

uint64_t MailMessage.init(messageID:sender:recipients:dateReceived:isUnread:subject:body:attachments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  long long v25 = *a3;
  uint64_t v13 = *((void *)a3 + 2);
  uint64_t v14 = *((void *)a3 + 3);
  char v15 = *((unsigned char *)a3 + 32);
  uint64_t v16 = *((void *)a3 + 5);
  uint64_t v17 = *((void *)a3 + 6);
  char v18 = *((unsigned char *)a3 + 56);
  uint64_t v19 = (int *)type metadata accessor for MailMessage();
  uint64_t v20 = (void *)(a9 + v19[9]);
  uint64_t v21 = (void *)(a9 + v19[10]);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(_OWORD *)(a9 + 16) = v25;
  *(void *)(a9 + 32) = v13;
  *(void *)(a9 + 40) = v14;
  *(unsigned char *)(a9 + 48) = v15;
  *(void *)(a9 + 56) = v16;
  *(void *)(a9 + 64) = v17;
  *(unsigned char *)(a9 + 72) = v18;
  *(void *)(a9 + 80) = a4;
  uint64_t v22 = a9 + v19[7];
  sub_25B9EC2B0();
  sub_25B95097C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, a5);
  *(unsigned char *)(a9 + v19[8]) = a6;
  *uint64_t v20 = a7;
  v20[1] = a8;
  *uint64_t v21 = a10;
  v21[1] = a11;
  *(void *)(a9 + v19[11]) = a12;
  return result;
}

uint64_t sub_25B99CD74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496567617373656DLL && a2 == 0xE900000000000044;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
      if (v7 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6563655265746164 && a2 == 0xEC00000064657669;
        if (v8 || (sub_25B9ED6A0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x646165726E557369 && a2 == 0xE800000000000000;
          if (v9 || (sub_25B9ED6A0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
            if (v10 || (sub_25B9ED6A0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 2036625250 && a2 == 0xE400000000000000;
              if (v11 || (sub_25B9ED6A0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x656D686361747461 && a2 == 0xEB0000000073746ELL)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                char v13 = sub_25B9ED6A0();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_25B99D0D4(char a1)
{
  uint64_t result = 0x496567617373656DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7265646E6573;
      break;
    case 2:
      uint64_t result = 0x6E65697069636572;
      break;
    case 3:
      uint64_t result = 0x6563655265746164;
      break;
    case 4:
      uint64_t result = 0x646165726E557369;
      break;
    case 5:
      uint64_t result = 0x7463656A627573;
      break;
    case 6:
      uint64_t result = 2036625250;
      break;
    case 7:
      uint64_t result = 0x656D686361747461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B99D1E4()
{
  return sub_25B99D0D4(*v0);
}

uint64_t sub_25B99D1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B99CD74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B99D214(uint64_t a1)
{
  unint64_t v2 = sub_25B99E118();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B99D250(uint64_t a1)
{
  unint64_t v2 = sub_25B99E118();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MailMessage.encode(to:)(void *a1)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51C2A8);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B99E118();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v1)
  {
    sub_25B99E164();
    sub_25B9A0AB8();
    sub_25B9A0A0C();
    sub_25B94E854(&qword_26A51C2C0);
    sub_25B99DD84((uint64_t)&unk_26A51C2C8);
    sub_25B9A0AB8();
    sub_25B9A0A0C();
    type metadata accessor for MailMessage();
    sub_25B9EC2B0();
    sub_25B9A07C0((uint64_t)&unk_26A51C2D0);
    sub_25B9A0A0C();
    sub_25B9ED620();
    sub_25B9A0A7C(5);
    sub_25B9A0A7C(6);
    sub_25B94E854(&qword_26A51C2D8);
    sub_25B99E1B0((uint64_t)&unk_26A51C2E0);
    sub_25B9A0AB8();
    sub_25B9A0A0C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void MailMessage.init(from:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  v29[0] = v4;
  sub_25B9EC2B0();
  sub_25B950790();
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B94E854(&qword_26A51C2F0);
  sub_25B950790();
  v29[1] = v10;
  v29[2] = v9;
  MEMORY[0x270FA5388](v9);
  type metadata accessor for MailMessage();
  sub_25B95097C();
  MEMORY[0x270FA5388](v11);
  sub_25B959380();
  char v13 = (uint64_t *)(v1 + v12[9]);
  uint64_t *v13 = 0;
  v13[1] = 0;
  uint64_t v34 = v13;
  uint64_t v14 = v12;
  char v15 = (uint64_t *)(v1 + v12[10]);
  *char v15 = 0;
  v15[1] = 0;
  uint64_t v32 = v3;
  uint64_t v33 = v15;
  sub_25B94F2E0(v3, v3[3]);
  sub_25B99E118();
  sub_25B9ED7A0();
  if (v0)
  {
    sub_25B94F65C((uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v35) = 0;
    *(void *)uint64_t v1 = sub_25B9ED540();
    *(void *)(v1 + 8) = v16;
    sub_25B99E230();
    sub_25B9ED590();
    char v17 = v37;
    char v18 = v39;
    long long v19 = v36;
    *(_OWORD *)(v1 + 16) = v35;
    *(_OWORD *)(v1 + 32) = v19;
    *(unsigned char *)(v1 + 48) = v17;
    *(_OWORD *)(v1 + 56) = v38;
    *(unsigned char *)(v1 + 72) = v18;
    sub_25B94E854(&qword_26A51C2C0);
    sub_25B99DD84((uint64_t)&unk_26A51C300);
    sub_25B9ED590();
    *(void *)(v1 + 80) = v35;
    LOBYTE(v35) = 3;
    sub_25B9A07C0((uint64_t)&unk_26A51C308);
    uint64_t v20 = v31;
    sub_25B9A0BE4();
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v1 + v14[7], v8, v20);
    LOBYTE(v35) = 4;
    *(unsigned char *)(v1 + v14[8]) = sub_25B9ED550() & 1;
    uint64_t v21 = sub_25B9A0BB0(5);
    uint64_t v22 = v34;
    *uint64_t v34 = v21;
    v22[1] = v23;
    uint64_t v24 = sub_25B9A0BB0(6);
    long long v25 = v33;
    uint64_t *v33 = v24;
    v25[1] = v26;
    sub_25B94E854(&qword_26A51C2D8);
    sub_25B99E1B0((uint64_t)&unk_26A51C310);
    sub_25B9A0BE4();
    uint64_t v27 = sub_25B9A0838();
    v28(v27);
    *(void *)(v1 + v14[11]) = v35;
    sub_25B99E27C(v1, v29[0]);
    sub_25B94F65C((uint64_t)v32);
    sub_25B99E2E0(v1);
  }
  sub_25B961A64();
}

void sub_25B99DAAC()
{
}

uint64_t sub_25B99DAC4(void *a1)
{
  return MailMessage.encode(to:)(a1);
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init()()
{
  *(_WORD *)uint64_t v0 = 259;
  *(unsigned char *)(v0 + 2) = 0;
  return result;
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init(extractVisualConcepts:extractVisualTopLine:)(Swift::Bool extractVisualConcepts, Swift::Bool extractVisualTopLine)
{
  *uint64_t v2 = 3;
  v2[1] = extractVisualConcepts;
  v2[2] = extractVisualTopLine;
  result.useCase = extractVisualConcepts;
  return result;
}

uint64_t sub_25B99DB00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
    goto LABEL_16;
  }
  sub_25B94E854(&qword_26A51C448);
  uint64_t result = sub_25B9A0B04();
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    int v7 = *(unsigned __int8 *)(a1 + 32 + v5);
    sub_25B9ED740();
    sub_25B9ED750();
    uint64_t result = sub_25B9ED790();
    uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *(void *)(v3 + 48);
    if (((1 << v9) & v11) != 0)
    {
      if (*(unsigned __int8 *)(v13 + v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v13 + v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(unsigned char *)(v13 + v9) = v7;
    uint64_t v15 = *(void *)(v3 + 16);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *(void *)(v3 + 16) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_25B99DC58()
{
  unint64_t result = qword_26A51C1C0;
  if (!qword_26A51C1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C1C0);
  }
  return result;
}

unint64_t sub_25B99DCA4()
{
  unint64_t result = qword_26A51C1D8;
  if (!qword_26A51C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C1D8);
  }
  return result;
}

unint64_t sub_25B99DCF0()
{
  unint64_t result = qword_26A51C1E0;
  if (!qword_26A51C1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C1E0);
  }
  return result;
}

uint64_t type metadata accessor for MailMessage()
{
  uint64_t result = qword_26A51C360;
  if (!qword_26A51C360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25B99DD84(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    unint64_t v5 = v4;
    sub_25B9524FC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B99DDEC()
{
  unint64_t result = qword_26A51C208;
  if (!qword_26A51C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C208);
  }
  return result;
}

unint64_t sub_25B99DE38()
{
  unint64_t result = qword_26A51C210;
  if (!qword_26A51C210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C210);
  }
  return result;
}

unint64_t sub_25B99DE84(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25B9524FC(&qword_26A51C1E8);
    sub_25B9A07C0(v4);
    unint64_t result = sub_25B9A0B38();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B99DF04()
{
  unint64_t result = qword_26A51C228;
  if (!qword_26A51C228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C228);
  }
  return result;
}

unint64_t sub_25B99DF50()
{
  unint64_t result = qword_26A51C240;
  if (!qword_26A51C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C240);
  }
  return result;
}

unint64_t sub_25B99DF9C()
{
  unint64_t result = qword_26A51C258;
  if (!qword_26A51C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C258);
  }
  return result;
}

unint64_t sub_25B99DFE8()
{
  unint64_t result = qword_26A51C270;
  if (!qword_26A51C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C270);
  }
  return result;
}

unint64_t sub_25B99E034()
{
  unint64_t result = qword_26A51C278;
  if (!qword_26A51C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C278);
  }
  return result;
}

unint64_t sub_25B99E080()
{
  unint64_t result = qword_26A51C288;
  if (!qword_26A51C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C288);
  }
  return result;
}

unint64_t sub_25B99E0CC()
{
  unint64_t result = qword_26A51C298;
  if (!qword_26A51C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C298);
  }
  return result;
}

unint64_t sub_25B99E118()
{
  unint64_t result = qword_26A51C2B0;
  if (!qword_26A51C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C2B0);
  }
  return result;
}

unint64_t sub_25B99E164()
{
  unint64_t result = qword_26A51C2B8;
  if (!qword_26A51C2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C2B8);
  }
  return result;
}

unint64_t sub_25B99E1B0(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25B9524FC(&qword_26A51C2D8);
    sub_25B9A07C0(v4);
    unint64_t result = sub_25B9A0B38();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B99E230()
{
  unint64_t result = qword_26A51C2F8;
  if (!qword_26A51C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C2F8);
  }
  return result;
}

uint64_t sub_25B99E27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MailMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B99E2E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailMessage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25B99E348()
{
  unint64_t result = qword_26A51C320;
  if (!qword_26A51C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C320);
  }
  return result;
}

unint64_t sub_25B99E398()
{
  unint64_t result = qword_26A51C328;
  if (!qword_26A51C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C328);
  }
  return result;
}

unint64_t sub_25B99E3F0()
{
  unint64_t result = qword_26A51C330;
  if (!qword_26A51C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C330);
  }
  return result;
}

unint64_t sub_25B99E440()
{
  unint64_t result = qword_26A51C338;
  if (!qword_26A51C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C338);
  }
  return result;
}

unint64_t sub_25B99E494()
{
  unint64_t result = qword_26A51C340;
  if (!qword_26A51C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C340);
  }
  return result;
}

unint64_t sub_25B99E4E4()
{
  unint64_t result = qword_26A51C348;
  if (!qword_26A51C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C348);
  }
  return result;
}

unint64_t sub_25B99E534()
{
  unint64_t result = qword_26A51C350;
  if (!qword_26A51C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C350);
  }
  return result;
}

unint64_t sub_25B99E584()
{
  unint64_t result = qword_26A51C358;
  if (!qword_26A51C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C358);
  }
  return result;
}

unint64_t sub_25B99E5D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25B9A07C0((uint64_t)&qword_26A51B2F8);
  unint64_t result = sub_25B9A07C0((uint64_t)&qword_26A51B240);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MailMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    int v9 = *((unsigned __int8 *)a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    }
    else
    {
      uint64_t v10 = a2[4];
      uint64_t v11 = a2[5];
      sub_25B9563BC(v10, v11, v9);
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      *(unsigned char *)(a1 + 48) = v9;
    }
    uint64_t v13 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    uint64_t v14 = a3[7];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_25B9EC2B0();
    char v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    uint64_t v19 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    long long v25 = (void *)(a1 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *long long v25 = *v26;
    v25[1] = v27;
    *(void *)(a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MailMessage(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v4 = *(unsigned __int8 *)(a1 + 48);
  if (v4 != 255) {
    sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_25B9EC2B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  int v8 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    sub_25B9563BC(v9, v10, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(unsigned char *)(a1 + 48) = v8;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25B9EC2B0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *char v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (long long *)(a1 + 32);
  uint64_t v7 = (long long *)(a2 + 32);
  int v8 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v8 == 255)
    {
      long long v17 = *v7;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *uint64_t v6 = v17;
    }
    else
    {
      uint64_t v14 = *(void *)(a2 + 32);
      uint64_t v15 = *(void *)(a2 + 40);
      sub_25B9563BC(v14, v15, *(unsigned char *)(a2 + 48));
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v15;
      *(unsigned char *)(a1 + 48) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_25B997800(a1 + 32);
    char v16 = *(unsigned char *)(a2 + 48);
    *uint64_t v6 = *v7;
    *(unsigned char *)(a1 + 48) = v16;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    sub_25B9563BC(v9, v10, *(unsigned char *)(a2 + 48));
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    unsigned __int8 v13 = *(unsigned char *)(a1 + 48);
    *(unsigned char *)(a1 + 48) = v8;
    sub_25B9566FC(v11, v12, v13);
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_25B9EC2B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 57);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 57) = v8;
  uint64_t v12 = sub_25B9EC2B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  long long v8 = (_OWORD *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 48);
  if (v9 == 255) {
    goto LABEL_5;
  }
  int v10 = *(unsigned __int8 *)(a2 + 48);
  if (v10 == 255)
  {
    sub_25B997800(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *v8;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v8;
  *(unsigned char *)(a1 + 48) = v10;
  sub_25B9566FC(v11, v12, v9);
LABEL_6:
  uint64_t v13 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_25B9EC2B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B99EEC8);
}

uint64_t sub_25B99EEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25B9EC2B0();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MailMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B99EF64);
}

uint64_t sub_25B99EF64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25B9EC2B0();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_25B99EFE4()
{
  uint64_t result = sub_25B9EC2B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithTake for MailMessage.SummarizationOptions(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void type metadata accessor for MailMessage.SummarizationOptions()
{
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwcp_0(void *a1, void *a2)
{
  sub_25B9A0AC8(a1, a2);
  *(unsigned char *)(v2 + 24) = *(unsigned char *)(v3 + 24);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v2 + 32) = *(void *)(v3 + 32);
  *(void *)(v2 + 40) = v4;
  *(_DWORD *)(v2 + 48) = *(_DWORD *)(v3 + 48);
  *(void *)(v2 + 56) = *(void *)(v3 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwca_0(void *a1, void *a2)
{
  sub_25B9A0BD0(a1, a2);
  *(void *)(v3 + 8) = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 24) = *(unsigned char *)(v2 + 24);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(void *)(v3 + 40) = *(void *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v3 + 48) = *(_DWORD *)(v2 + 48);
  *(void *)(v3 + 56) = *(void *)(v2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwta_0(void *a1, void *a2)
{
  sub_25B9A0BD0(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 24) = *(unsigned char *)(v2 + 24);
  uint64_t v4 = *(void *)(v2 + 40);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(void *)(v3 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v3 + 48) = *(_DWORD *)(v2 + 48);
  *(void *)(v3 + 56) = *(void *)(v2 + 56);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25B99F2E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MailMessage.ThreadSummarizationOptions()
{
}

uint64_t initializeWithCopy for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MailMessage.ClassificationOptions()
{
}

uint64_t destroy for MailMessage.ThreadClassificationOptions()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s4Sage11MailMessageV27ThreadClassificationOptionsVwCP_0(void *a1, void *a2)
{
  sub_25B9A0AC8(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void *assignWithCopy for MailMessage.ThreadClassificationOptions(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MailMessage.ThreadClassificationOptions(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MailMessage.ThreadClassificationOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage.ThreadClassificationOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.ThreadClassificationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MailMessage.ThreadClassificationOptions()
{
}

uint64_t initializeBufferWithCopyOfBuffer for MailMessage.VisualPromptOptions(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MailMessage.VisualPromptOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        int v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.VisualPromptOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)__n128 result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

void type metadata accessor for MailMessage.VisualPromptOptions()
{
}

unsigned char *storeEnumTagSinglePayload for MailMessage.ThreadVisualPromptOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B99F808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for MailMessage.ThreadVisualPromptOptions()
{
}

unsigned char *storeEnumTagSinglePayload for MailMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B99F908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.CodingKeys()
{
  return &type metadata for MailMessage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MailMessage.ThreadVisualPromptOptions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B99F9DCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadVisualPromptOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for MailMessage.VisualPromptOptions.CodingKeys()
{
  return &type metadata for MailMessage.VisualPromptOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MailMessage.ThreadClassificationOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B99FAF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadClassificationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys;
}

unsigned char *_s4Sage11MailMessageV19VisualPromptOptionsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B99FBFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ClassificationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ClassificationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadSummarizationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys;
}

unsigned char *_s4Sage11MailMessageV26ThreadSummarizationOptionsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B99FD18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.SummarizationOptions.CodingKeys()
{
  return &type metadata for MailMessage.SummarizationOptions.CodingKeys;
}

unint64_t sub_25B99FD54()
{
  unint64_t result = qword_26A51C370;
  if (!qword_26A51C370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C370);
  }
  return result;
}

unint64_t sub_25B99FDA4()
{
  unint64_t result = qword_26A51C378;
  if (!qword_26A51C378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C378);
  }
  return result;
}

unint64_t sub_25B99FDF4()
{
  unint64_t result = qword_26A51C380;
  if (!qword_26A51C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C380);
  }
  return result;
}

unint64_t sub_25B99FE44()
{
  unint64_t result = qword_26A51C388;
  if (!qword_26A51C388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C388);
  }
  return result;
}

unint64_t sub_25B99FE94()
{
  unint64_t result = qword_26A51C390;
  if (!qword_26A51C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C390);
  }
  return result;
}

unint64_t sub_25B99FEE4()
{
  unint64_t result = qword_26A51C398;
  if (!qword_26A51C398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C398);
  }
  return result;
}

unint64_t sub_25B99FF34()
{
  unint64_t result = qword_26A51C3A0;
  if (!qword_26A51C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3A0);
  }
  return result;
}

unint64_t sub_25B99FF84()
{
  unint64_t result = qword_26A51C3A8;
  if (!qword_26A51C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3A8);
  }
  return result;
}

unint64_t sub_25B99FFD4()
{
  unint64_t result = qword_26A51C3B0;
  if (!qword_26A51C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3B0);
  }
  return result;
}

unint64_t sub_25B9A0024()
{
  unint64_t result = qword_26A51C3B8;
  if (!qword_26A51C3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3B8);
  }
  return result;
}

unint64_t sub_25B9A0074()
{
  unint64_t result = qword_26A51C3C0;
  if (!qword_26A51C3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3C0);
  }
  return result;
}

unint64_t sub_25B9A00C4()
{
  unint64_t result = qword_26A51C3C8;
  if (!qword_26A51C3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3C8);
  }
  return result;
}

unint64_t sub_25B9A0114()
{
  unint64_t result = qword_26A51C3D0;
  if (!qword_26A51C3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3D0);
  }
  return result;
}

unint64_t sub_25B9A0164()
{
  unint64_t result = qword_26A51C3D8;
  if (!qword_26A51C3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3D8);
  }
  return result;
}

unint64_t sub_25B9A01B4()
{
  unint64_t result = qword_26A51C3E0;
  if (!qword_26A51C3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3E0);
  }
  return result;
}

unint64_t sub_25B9A0204()
{
  unint64_t result = qword_26A51C3E8;
  if (!qword_26A51C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3E8);
  }
  return result;
}

unint64_t sub_25B9A0254()
{
  unint64_t result = qword_26A51C3F0;
  if (!qword_26A51C3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3F0);
  }
  return result;
}

unint64_t sub_25B9A02A4()
{
  unint64_t result = qword_26A51C3F8;
  if (!qword_26A51C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C3F8);
  }
  return result;
}

unint64_t sub_25B9A02F4()
{
  unint64_t result = qword_26A51C400;
  if (!qword_26A51C400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C400);
  }
  return result;
}

unint64_t sub_25B9A0344()
{
  unint64_t result = qword_26A51C408;
  if (!qword_26A51C408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C408);
  }
  return result;
}

unint64_t sub_25B9A0394()
{
  unint64_t result = qword_26A51C410;
  if (!qword_26A51C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C410);
  }
  return result;
}

void sub_25B9A03E0(uint64_t a1)
{
  sub_25B9EC860();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B9A09F0();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  sub_25B9A0B20(v8, v9, v10, v11, v12, v13, v14, v15, v27);
  if (v1 && (sub_25B94E854(&qword_26A51C430), uint64_t v16 = sub_25B9A0B04(), (v28 = *(void *)(a1 + 16)) != 0))
  {
    sub_25B9A0850();
    while (v4 < *(void *)(a1 + 16))
    {
      uint64_t v17 = sub_25B9A0888();
      ((void (*)(uint64_t))v3)(v17);
      sub_25B9A07C0((uint64_t)&unk_26A51C438);
      sub_25B9A0B64();
      sub_25B9A08E4();
      if (v20)
      {
LABEL_11:
        uint64_t v22 = sub_25B9A08B8(v18);
        v23(v22);
        uint64_t v24 = *(void *)(v16 + 16);
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_17;
        }
        *(void *)(v16 + 16) = v26;
      }
      else
      {
        unint64_t v4 = ~v19;
        while (1)
        {
          sub_25B9A0934();
          v3();
          sub_25B9A07C0((uint64_t)&unk_26A51C440);
          char v21 = sub_25B9A0A58();
          a1 = *v2;
          sub_25B9A0988();
          ((void (*)(void))a1)();
          if (v21) {
            break;
          }
          sub_25B9A0964();
          if (v20)
          {
            sub_25B9A0B98();
            goto LABEL_11;
          }
        }
        sub_25B9A0988();
        ((void (*)(void))a1)();
        sub_25B9A0B98();
      }
      if (++v4 == v28) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

void sub_25B9A05D0(uint64_t a1)
{
  sub_25B9EC880();
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B9A09F0();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  sub_25B9A0B20(v8, v9, v10, v11, v12, v13, v14, v15, v27);
  if (v1 && (sub_25B94E854(&qword_26A51C418), uint64_t v16 = sub_25B9A0B04(), (v28 = *(void *)(a1 + 16)) != 0))
  {
    sub_25B9A0850();
    while (v4 < *(void *)(a1 + 16))
    {
      uint64_t v17 = sub_25B9A0888();
      ((void (*)(uint64_t))v3)(v17);
      sub_25B9A07C0((uint64_t)&unk_26A51C420);
      sub_25B9A0B64();
      sub_25B9A08E4();
      if (v20)
      {
LABEL_11:
        uint64_t v22 = sub_25B9A08B8(v18);
        v23(v22);
        uint64_t v24 = *(void *)(v16 + 16);
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_17;
        }
        *(void *)(v16 + 16) = v26;
      }
      else
      {
        unint64_t v4 = ~v19;
        while (1)
        {
          sub_25B9A0934();
          v3();
          sub_25B9A07C0((uint64_t)&unk_26A51C428);
          char v21 = sub_25B9A0A58();
          a1 = *v2;
          sub_25B9A0988();
          ((void (*)(void))a1)();
          if (v21) {
            break;
          }
          sub_25B9A0964();
          if (v20)
          {
            sub_25B9A0B98();
            goto LABEL_11;
          }
        }
        sub_25B9A0988();
        ((void (*)(void))a1)();
        sub_25B9A0B98();
      }
      if (++v4 == v28) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_25B9A07C0(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25B9A0838()
{
  return v0;
}

void sub_25B9A0850()
{
  uint64_t v3 = *(void *)(v2 - 120);
  *(void *)(v2 - 136) = v1
                        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  *(void *)(v2 - 104) = v3 + 16;
  *(void *)(v2 - 96) = v0 + 56;
  *(void *)(v2 - 152) = v1;
  *(void *)(v2 - 144) = v3 + 32;
}

uint64_t sub_25B9A0888()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_25B9A08B8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v6 - 96) + 8 * a1) = v2 | v1;
  return *(void *)(v4 + 48) + v3 * v5;
}

void *sub_25B9A0910()
{
  return sub_25B94F2E0(v0, v0[3]);
}

uint64_t sub_25B9A0948()
{
  return sub_25B9ED6A0();
}

uint64_t sub_25B9A09A8()
{
  return v0;
}

uint64_t sub_25B9A09BC()
{
  return type metadata accessor for MailMessage();
}

uint64_t sub_25B9A09D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9A0A0C()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9A0A24()
{
  return v0 - 104;
}

uint64_t sub_25B9A0A34()
{
  return sub_25B9ED7A0();
}

uint64_t sub_25B9A0A58()
{
  return sub_25B9ECFB0();
}

uint64_t sub_25B9A0A7C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_25B9ED5E0();
}

uint64_t sub_25B9A0AA0()
{
  return v0;
}

uint64_t sub_25B9A0AB8()
{
  return v0 - 128;
}

uint64_t sub_25B9A0AC8(void *a1, void *a2)
{
  uint64_t result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  a1[2] = a2[2];
  return result;
}

uint64_t sub_25B9A0AE0()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_25B9ED540();
}

uint64_t sub_25B9A0B04()
{
  return sub_25B9ED380();
}

void sub_25B9A0B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 88) = (char *)&a9 - v9;
}

uint64_t sub_25B9A0B38()
{
  return swift_getWitnessTable();
}

void sub_25B9A0B58()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t sub_25B9A0B64()
{
  return sub_25B9ECF90();
}

unsigned char *_s4Sage11MailMessageV19VisualPromptOptionsV7useCaseAA19SummarizationClientC0de3UseH0Ovs_0(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

void sub_25B9A0B90(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_25B9A0BA4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_25B9A0BB0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 144) = a1;
  return sub_25B9ED510();
}

void *sub_25B9A0BD0(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_25B9A0BE4()
{
  return sub_25B9ED590();
}

uint64_t sub_25B9A0C04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9A0C1C()
{
  return sub_25B9ED7B0();
}

void NoteMessage.VisualPromptOptions.useCase.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*NoteMessage.VisualPromptOptions.useCase.modify())()
{
  return nullsub_1;
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualConcepts.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualConcepts.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*NoteMessage.VisualPromptOptions.extractVisualConcepts.modify())()
{
  return nullsub_1;
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualTopLine.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualTopLine.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*NoteMessage.VisualPromptOptions.extractVisualTopLine.modify())()
{
  return nullsub_1;
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  *(unsigned char *)uint64_t v1 = *(unsigned char *)useCase;
  *(_WORD *)(v1 + 1) = 1;
  result.useCase = useCase;
  return result;
}

uint64_t sub_25B9A0CDC(uint64_t a1)
{
  unint64_t v2 = sub_25B9A0EC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A0D18(uint64_t a1)
{
  unint64_t v2 = sub_25B9A0EC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void NoteMessage.VisualPromptOptions.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51C450);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B9A0EC4();
  sub_25B9ED7B0();
  sub_25B99E034();
  sub_25B9ED660();
  if (!v0)
  {
    sub_25B9ED620();
    sub_25B9ED620();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25B961A64();
}

unint64_t sub_25B9A0EC4()
{
  unint64_t result = qword_26A51C458;
  if (!qword_26A51C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C458);
  }
  return result;
}

void NoteMessage.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25B961A4C();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_25B94E854(&qword_26A51C460);
  sub_25B950790();
  MEMORY[0x270FA5388](v18);
  sub_25B94F2E0(v15, v15[3]);
  sub_25B9A0EC4();
  sub_25B9ED7A0();
  if (!v13)
  {
    sub_25B99E080();
    sub_25B9ED590();
    char v19 = sub_25B9ED550();
    char v20 = sub_25B9ED550();
    uint64_t v21 = sub_25B9A09A8();
    v22(v21);
    unsigned char *v17 = a13;
    v17[1] = v19 & 1;
    _OWORD v17[2] = v20 & 1;
  }
  sub_25B94F65C((uint64_t)v15);
  sub_25B961A64();
}

void sub_25B9A10AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NoteMessage.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_25B9A10C4()
{
}

void NoteMessage.ThreadVisualPromptOptions.useCase.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*NoteMessage.ThreadVisualPromptOptions.useCase.modify())()
{
  return nullsub_1;
}

Sage::NoteMessage::ThreadVisualPromptOptions __swiftcall NoteMessage.ThreadVisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  sub_25B9A0B90(v1);
  return result;
}

uint64_t sub_25B9A1110(uint64_t a1)
{
  unint64_t v2 = sub_25B9A1288();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A114C(uint64_t a1)
{
  unint64_t v2 = sub_25B9A1288();
  return MEMORY[0x270FA00B8](a1, v2);
}

void NoteMessage.ThreadVisualPromptOptions.encode(to:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51C468);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9A1288();
  sub_25B9ED7B0();
  sub_25B99E034();
  sub_25B9ED660();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_25B961A64();
}

unint64_t sub_25B9A1288()
{
  unint64_t result = qword_26A51C470;
  if (!qword_26A51C470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C470);
  }
  return result;
}

void NoteMessage.ThreadVisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25B961A4C();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_25B94E854(&qword_26A51C478);
  sub_25B950790();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_25B959398();
  sub_25B94F2E0(v16, v16[3]);
  sub_25B9A1288();
  sub_25B9ED7A0();
  if (!v13)
  {
    sub_25B99E080();
    sub_25B9ED590();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v19);
    *uint64_t v18 = a13;
  }
  sub_25B94F65C((uint64_t)v16);
  sub_25B961A64();
}

void sub_25B9A13F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  NoteMessage.ThreadVisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_25B9A140C()
{
}

uint64_t NoteMessage.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NoteMessage.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NoteMessage.title.modify())()
{
  return nullsub_1;
}

uint64_t NoteMessage.textualContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NoteMessage.textualContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NoteMessage.textualContext.modify())()
{
  return nullsub_1;
}

Sage::NoteMessage __swiftcall NoteMessage.init(title:textualContext:)(Swift::String_optional title, Swift::String_optional textualContext)
{
  *uint64_t v2 = title;
  v2[1] = textualContext;
  result.textualContext = textualContext;
  result.title = title;
  return result;
}

uint64_t sub_25B9A1540(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x436C617574786574 && a2 == 0xEE00747865746E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B9A164C(char a1)
{
  if (a1) {
    return 0x436C617574786574;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_25B9A168C()
{
  return sub_25B9A164C(*v0);
}

uint64_t sub_25B9A1694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9A1540(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9A16BC(uint64_t a1)
{
  unint64_t v2 = sub_25B9A1864();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A16F8(uint64_t a1)
{
  unint64_t v2 = sub_25B9A1864();
  return MEMORY[0x270FA00B8](a1, v2);
}

void NoteMessage.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51C480);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B9A1864();
  sub_25B9ED7B0();
  sub_25B9ED5E0();
  if (!v0) {
    sub_25B9ED5E0();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25B961A64();
}

unint64_t sub_25B9A1864()
{
  unint64_t result = qword_26A51C488;
  if (!qword_26A51C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C488);
  }
  return result;
}

void NoteMessage.init(from:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51C490);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9A1864();
  sub_25B9ED7A0();
  if (!v0)
  {
    uint64_t v6 = sub_25B9ED510();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25B9ED510();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_25B9A2434();
    v13(v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v14;
    v4[3] = v11;
  }
  sub_25B94F65C((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B961A64();
}

void sub_25B9A1A6C()
{
}

void sub_25B9A1A84()
{
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init()()
{
  *(_WORD *)uint64_t v0 = 259;
  *(unsigned char *)(v0 + 2) = 0;
  return result;
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init(extractVisualConcepts:extractVisualTopLine:)(Swift::Bool extractVisualConcepts, Swift::Bool extractVisualTopLine)
{
  *unint64_t v2 = 3;
  v2[1] = extractVisualConcepts;
  v2[2] = extractVisualTopLine;
  result.useCase = extractVisualConcepts;
  return result;
}

unint64_t sub_25B9A1AC4()
{
  unint64_t result = qword_26A51C498;
  if (!qword_26A51C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C498);
  }
  return result;
}

unint64_t sub_25B9A1B14()
{
  unint64_t result = qword_26A51C4A0;
  if (!qword_26A51C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4A0);
  }
  return result;
}

unint64_t sub_25B9A1B64()
{
  unint64_t result = qword_26A51C4A8;
  if (!qword_26A51C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4A8);
  }
  return result;
}

unint64_t sub_25B9A1BB4()
{
  unint64_t result = qword_26A51C4B0;
  if (!qword_26A51C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4B0);
  }
  return result;
}

unint64_t sub_25B9A1C00(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25B9A1C30();
  unint64_t result = sub_25B9A1C7C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25B9A1C30()
{
  unint64_t result = qword_26A51C4B8;
  if (!qword_26A51C4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4B8);
  }
  return result;
}

unint64_t sub_25B9A1C7C()
{
  unint64_t result = qword_26A51C4C0;
  if (!qword_26A51C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NoteMessage(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoteMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for NoteMessage()
{
}

void type metadata accessor for NoteMessage.VisualPromptOptions()
{
}

unsigned char *storeEnumTagSinglePayload for NoteMessage.ThreadVisualPromptOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9A1E54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for NoteMessage.ThreadVisualPromptOptions()
{
}

unsigned char *storeEnumTagSinglePayload for NoteMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9A1F54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.CodingKeys()
{
  return &type metadata for NoteMessage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NoteMessage.ThreadVisualPromptOptions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9A2028);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.ThreadVisualPromptOptions.CodingKeys()
{
  return &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NoteMessage.VisualPromptOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9A212CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.VisualPromptOptions.CodingKeys()
{
  return &type metadata for NoteMessage.VisualPromptOptions.CodingKeys;
}

unint64_t sub_25B9A2168()
{
  unint64_t result = qword_26A51C4C8;
  if (!qword_26A51C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4C8);
  }
  return result;
}

unint64_t sub_25B9A21B8()
{
  unint64_t result = qword_26A51C4D0;
  if (!qword_26A51C4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4D0);
  }
  return result;
}

unint64_t sub_25B9A2208()
{
  unint64_t result = qword_26A51C4D8;
  if (!qword_26A51C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4D8);
  }
  return result;
}

unint64_t sub_25B9A2258()
{
  unint64_t result = qword_26A51C4E0;
  if (!qword_26A51C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4E0);
  }
  return result;
}

unint64_t sub_25B9A22A8()
{
  unint64_t result = qword_26A51C4E8;
  if (!qword_26A51C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4E8);
  }
  return result;
}

unint64_t sub_25B9A22F8()
{
  unint64_t result = qword_26A51C4F0;
  if (!qword_26A51C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4F0);
  }
  return result;
}

unint64_t sub_25B9A2348()
{
  unint64_t result = qword_26A51C4F8;
  if (!qword_26A51C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C4F8);
  }
  return result;
}

unint64_t sub_25B9A2398()
{
  unint64_t result = qword_26A51C500;
  if (!qword_26A51C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C500);
  }
  return result;
}

unint64_t sub_25B9A23E8()
{
  unint64_t result = qword_26A51C508;
  if (!qword_26A51C508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C508);
  }
  return result;
}

uint64_t sub_25B9A2434()
{
  return v0;
}

float PriorityResult.urgency.getter()
{
  return *(float *)v0;
}

void PriorityResult.urgency.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*PriorityResult.urgency.modify())()
{
  return nullsub_1;
}

uint64_t PriorityResult.llmClassifierWasInvoked.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PriorityResult.llmClassifierWasInvoked.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*PriorityResult.llmClassifierWasInvoked.modify())()
{
  return nullsub_1;
}

void *PriorityResult.inferenceEnvironmentInfo.getter@<X0>(uint64_t a1@<X8>)
{
  sub_25B9A2504(v1 + 8, (uint64_t)v4);
  sub_25B9A2504((uint64_t)v4, a1);
  return sub_25B9A25D0(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95A8EC);
}

uint64_t sub_25B9A2504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51C510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PriorityResult.inferenceEnvironmentInfo.setter(uint64_t a1)
{
  sub_25B9A2504(a1, (uint64_t)v3);
  sub_25B9A2504(v1 + 8, (uint64_t)v4);
  sub_25B9A25D0(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95AA78);
  return sub_25B9A2504((uint64_t)v3, v1 + 8);
}

void *sub_25B9A25D0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t (*PriorityResult.inferenceEnvironmentInfo.modify())()
{
  return nullsub_1;
}

float PriorityResult.importance.getter()
{
  return *(float *)(v0 + 136);
}

void PriorityResult.importance.setter(float a1)
{
  *(float *)(v1 + 136) = a1;
}

uint64_t (*PriorityResult.importance.modify())()
{
  return nullsub_1;
}

void __swiftcall PriorityResult.init(urgency:llmClassifierWasInvoked:inferenceEnvironmentInfo:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Bool llmClassifierWasInvoked, Sage::InferenceEnvironmentInfo_optional *inferenceEnvironmentInfo)
{
  uint64_t v6 = sub_25B9A2504((uint64_t)inferenceEnvironmentInfo, (uint64_t)&v22);
  *(Swift::Float *)&uint64_t __src = urgency;
  BYTE4(__src) = llmClassifierWasInvoked;
  int v14 = sub_25B9A38CC(v6, v7, v8, v9, v10, v11, v12, v13, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
          v33,
          v34,
          v35,
          v36,
          v37,
          __src,
          v39);
  sub_25B9A38A8(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    __src,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55);
}

uint64_t sub_25B9A26E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E65677275 && a2 == 0xE700000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025B9F12A0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000025B9F12C0 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6174726F706D69 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_25B9A289C(char a1)
{
  unint64_t result = 0x79636E65677275;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x6E6174726F706D69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25B9A2940()
{
  return sub_25B9A289C(*v0);
}

uint64_t sub_25B9A2948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9A26E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9A2970(uint64_t a1)
{
  unint64_t v2 = sub_25B9A2BB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A29AC(uint64_t a1)
{
  unint64_t v2 = sub_25B9A2BB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PriorityResult.encode(to:)(void *a1)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51C518);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13[40] = *(unsigned __int8 *)(v1 + 4);
  sub_25B9A2504(v1 + 8, (uint64_t)v13);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9A2BB8();
  sub_25B9ED7B0();
  v12[0] = 0;
  sub_25B9ED640();
  if (!v2)
  {
    v12[0] = 1;
    sub_25B9ED620();
    sub_25B9A2504((uint64_t)v13, (uint64_t)v12);
    char v14 = 2;
    sub_25B9A2C04();
    sub_25B9ED600();
    v12[0] = 3;
    sub_25B9ED640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_25B9A2BB8()
{
  unint64_t result = qword_26A51C520;
  if (!qword_26A51C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C520);
  }
  return result;
}

unint64_t sub_25B9A2C04()
{
  unint64_t result = qword_26A51C528;
  if (!qword_26A51C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C528);
  }
  return result;
}

void *PriorityResult.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_25B94E854(&qword_26A51C530);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B9A2F44(v21);
  sub_25B9A2504((uint64_t)v21, (uint64_t)&v20[2]);
  v20[34] = -1082130432;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9A2BB8();
  sub_25B9ED7A0();
  if (v2)
  {
    sub_25B94F65C((uint64_t)a1);
    sub_25B9A2504((uint64_t)&v20[2], (uint64_t)v17);
    return sub_25B9A25D0(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95AA78);
  }
  else
  {
    uint64_t v6 = a2;
    LOBYTE(v17[0]) = 0;
    sub_25B9ED570();
    int v8 = v7;
    v20[0] = v7;
    LOBYTE(v17[0]) = 1;
    char v9 = sub_25B9ED550();
    int v10 = v9 & 1;
    LOBYTE(v20[1]) = v9 & 1;
    char v24 = 2;
    sub_25B9A2F64();
    sub_25B9ED530();
    int v22 = v10;
    sub_25B9A2504((uint64_t)&v19, (uint64_t)v18);
    sub_25B9A2504((uint64_t)v18, (uint64_t)&v20[2]);
    char v23 = 3;
    sub_25B9A25D0(v18, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95A8EC);
    sub_25B9ED570();
    int v12 = v11;
    uint64_t v13 = sub_25B9A38E8();
    v14(v13);
    v20[34] = v12;
    v16[0] = v8;
    LOBYTE(v16[1]) = v22;
    sub_25B9A2504((uint64_t)v18, (uint64_t)&v16[2]);
    v16[34] = v12;
    memcpy(v6, v16, 0x8CuLL);
    sub_25B94F65C((uint64_t)a1);
    memcpy(v17, v20, 0x8CuLL);
    return (void *)sub_25B9A2FB0((uint64_t)v17);
  }
}

double sub_25B9A2F44(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_25B9F90C0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  return result;
}

unint64_t sub_25B9A2F64()
{
  unint64_t result = qword_26A51C538;
  if (!qword_26A51C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C538);
  }
  return result;
}

uint64_t sub_25B9A2FB0(uint64_t a1)
{
  return a1;
}

void *sub_25B9A3010@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PriorityResult.init(from:)(a1, a2);
}

uint64_t sub_25B9A3028(void *a1)
{
  return PriorityResult.encode(to:)(a1);
}

void __swiftcall PriorityResult.init(urgency:llmClassifierWasInvoked:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Bool llmClassifierWasInvoked)
{
  sub_25B9A2F44(&v21);
  *(Swift::Float *)&uint64_t __src = urgency;
  BYTE4(__src) = llmClassifierWasInvoked;
  int v13 = sub_25B9A38CC(v5, v6, v7, v8, v9, v10, v11, v12, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28, v29, v30,
          v31,
          v32,
          v33,
          v34,
          v35,
          __src,
          v37);
  sub_25B9A38A8(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    __src,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53);
}

void __swiftcall PriorityResult.init(urgency:importance:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Float importance)
{
  sub_25B9A2F44(&v14);
  *(Swift::Float *)uint64_t __src = urgency;
  BYTE4(__src[0]) = 0;
  sub_25B9A38CC(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, v16, v17, v18, v19, v20, v21, v22, v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    __src[0],
    __src[1]);
  *(Swift::Float *)&__src[17] = importance;
  memcpy(retstr, __src, sizeof(Sage::PriorityResult));
}

uint64_t destroy for PriorityResult(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PriorityResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4 == 1)
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x80uLL);
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for PriorityResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v5 = (const void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) != 1)
  {
    if (v6 != 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_25B95B270(a1 + 8);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy(v4, v5, 0x80uLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for PriorityResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v5 = (const void *)(a2 + 8);
  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6 != 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_25B95B270((uint64_t)v4);
  }
  memcpy(v4, v5, 0x80uLL);
LABEL_6:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PriorityResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 140))
    {
      int v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v4 = v3 - 1;
      if (v4 < 0) {
        int v4 = -1;
      }
      BOOL v5 = __OFSUB__(v4, 1);
      int v2 = v4 - 1;
      if (v2 < 0 != v5) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PriorityResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 136) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 140) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 140) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriorityResult()
{
  return &type metadata for PriorityResult;
}

unsigned char *storeEnumTagSinglePayload for PriorityResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9A3780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriorityResult.CodingKeys()
{
  return &type metadata for PriorityResult.CodingKeys;
}

unint64_t sub_25B9A37BC()
{
  unint64_t result = qword_26A51C540;
  if (!qword_26A51C540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C540);
  }
  return result;
}

unint64_t sub_25B9A380C()
{
  unint64_t result = qword_26A51C548;
  if (!qword_26A51C548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C548);
  }
  return result;
}

unint64_t sub_25B9A385C()
{
  unint64_t result = qword_26A51C550;
  if (!qword_26A51C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C550);
  }
  return result;
}

void *sub_25B9A38A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char __src,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  a42 = -1082130432;
  return memcpy(v42, &__src, 0x8CuLL);
}

uint64_t sub_25B9A38CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_25B9A2504((uint64_t)&a9, (uint64_t)&a26);
}

uint64_t sub_25B9A38E8()
{
  return v0;
}

uint64_t SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13 = sub_25B9EC680();
  sub_25B950790();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_25B9A5518();
  uint64_t v17 = (int *)type metadata accessor for SessionConfiguration();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v19 = &a9[v17[7]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v32 = a3;
  v18(v9, a3, v13);
  sub_25B9EC650();
  if (!v20) {
    swift_bridgeObjectRetain();
  }
  sub_25B9EC660();
  v18(&a9[v17[5]], (uint64_t)v9, v13);
  uint64_t v21 = sub_25B9ECE10();
  sub_25B950858();
  uint64_t v23 = v22;
  sub_25B96D944();
  v24();
  uint64_t v25 = &a9[v17[8]];
  *(void *)uint64_t v25 = a4;
  *((void *)v25 + 1) = a5;
  sub_25B9A405C(a1, a2 & 1);
  uint64_t v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a6, v21);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v28(v32, v13);
  v28((uint64_t)v9, v13);
  *(void *)a9 = v27;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v19 = a7;
  *((void *)v19 + 1) = a8;
  return result;
}

uint64_t type metadata accessor for SessionConfiguration()
{
  uint64_t result = qword_26A51C568;
  if (!qword_26A51C568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void SessionConfiguration.init(tokenGeneratorConfig:instructions:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25B9EC680();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B96D944();
  v12();
  sub_25B96D944();
  v13();
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:instructions:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v8);
  sub_25B964F50();
}

double SessionConfiguration.timeToLive.getter()
{
  return *(double *)v0;
}

void SessionConfiguration.timeToLive.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*SessionConfiguration.timeToLive.modify())()
{
  return nullsub_1;
}

uint64_t SessionConfiguration.tokenGeneratorConfig.getter()
{
  type metadata accessor for SessionConfiguration();
  sub_25B9EC680();
  sub_25B95097C();
  uint64_t v0 = sub_25B9593F8();
  return v1(v0);
}

uint64_t SessionConfiguration.tokenGeneratorConfig.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9A54D8() + 20);
  sub_25B9EC680();
  sub_25B95097C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v2, v0, v3);
}

uint64_t (*SessionConfiguration.tokenGeneratorConfig.modify())(void)
{
  return nullsub_1;
}

uint64_t SessionConfiguration.instructions.getter()
{
  type metadata accessor for SessionConfiguration();
  sub_25B9ECE10();
  sub_25B95097C();
  uint64_t v0 = sub_25B9593F8();
  return v1(v0);
}

uint64_t SessionConfiguration.instructions.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9A54D8() + 24);
  sub_25B9ECE10();
  sub_25B95097C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v2, v0, v3);
}

uint64_t (*SessionConfiguration.instructions.modify())(void)
{
  return nullsub_1;
}

uint64_t SessionConfiguration.templateID.getter()
{
  return sub_25B9593F8();
}

uint64_t SessionConfiguration.templateID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SessionConfiguration() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionConfiguration.templateID.modify())(void)
{
  return nullsub_1;
}

uint64_t SessionConfiguration.identifier.getter()
{
  return sub_25B9593F8();
}

uint64_t SessionConfiguration.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SessionConfiguration() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionConfiguration.identifier.modify())(void)
{
  return nullsub_1;
}

void sub_25B9A405C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0 && (*(double *)&a1 < 0.0 || *(double *)&a1 > 600.0))
  {
    if (qword_26A51B020 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_25B9ECD70();
    sub_25B9559F0(v2, (uint64_t)qword_26A51C1A0);
    uint64_t v3 = sub_25B9ECD40();
    os_log_type_t v4 = sub_25B9ED230();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_25B94C000, v3, v4, "Invalid time to live provided, ignoring passed in value", v5, 2u);
      MEMORY[0x26116D280](v5, -1, -1);
    }
  }
}

void SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:)()
{
  sub_25B964F38();
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v20 = v4;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_25B9ECE10();
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  sub_25B9A54F0();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = sub_25B9A54A4(v11, v19);
  v13(v12);
  sub_25B96D944();
  v14();
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)(v20, v8, v0, v21, v22, v1, 0, 0, v6);
  uint64_t v15 = sub_25B9A5534();
  v16(v15);
  uint64_t v17 = sub_25B9A554C();
  v18(v17);
  sub_25B964F50();
}

void SessionConfiguration.init(tokenGeneratorConfig:identifier:instructions:templateID:)()
{
  sub_25B964F38();
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v20 = v4;
  uint64_t v6 = v5;
  char v8 = v7;
  sub_25B9ECE10();
  sub_25B950790();
  MEMORY[0x270FA5388](v9);
  sub_25B9A54F0();
  sub_25B950790();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = sub_25B9A54A4(v11, v19);
  v13(v12);
  sub_25B96D944();
  v14();
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)(0, 1, v0, v6, v20, v1, v21, v22, v8);
  uint64_t v15 = sub_25B9A5534();
  v16(v15);
  uint64_t v17 = sub_25B9A554C();
  v18(v17);
  sub_25B964F50();
}

void SessionConfiguration.init(tokenGeneratorConfig:identifier:instructions:)()
{
  sub_25B964F38();
  uint64_t v33 = v0;
  uint64_t v34 = v1;
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  uint64_t v28 = v4;
  uint64_t v30 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v6 = v5;
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B96DB08();
  uint64_t v29 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_25B9EC680();
  sub_25B950790();
  uint64_t v14 = v13;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v27 - v19;
  uint64_t v21 = *(void (**)(void))(v14 + 16);
  sub_25B9A5564();
  v21();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v23 = v30;
  v22(v11, (uint64_t)v34, v30);
  sub_25B9A5564();
  v21();
  uint64_t v24 = v29;
  v22((char *)v29, (uint64_t)v11, v23);
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)(0, 1, (uint64_t)v18, v32, v33, v24, 0, 0, v31);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v27 + 8);
  v25(v11, v23);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v20, v12);
  v25(v34, v23);
  v26(v28, v12);
  sub_25B964F50();
}

void SessionConfiguration.init(timeToLive:tokenGeneratorConfig:instructions:)()
{
  sub_25B964F38();
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  uint64_t v43 = v3;
  uint64_t v41 = v4;
  int v42 = v5 & 1;
  uint64_t v40 = sub_25B9ECE10();
  sub_25B950790();
  uint64_t v7 = v6;
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B96DB08();
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v34 - v11;
  uint64_t v12 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_25B9A5518();
  uint64_t v16 = sub_25B9EC680();
  sub_25B950790();
  uint64_t v18 = v17;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v34 - v23;
  uint64_t v25 = *(void (**)(void))(v18 + 16);
  sub_25B9A5564();
  v25();
  sub_25B9EC2F0();
  uint64_t v26 = sub_25B9EC2C0();
  uint64_t v36 = v27;
  uint64_t v37 = v26;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v29 = v38;
  uint64_t v30 = v40;
  v28(v38, (uint64_t)v44, v40);
  sub_25B9A5564();
  v25();
  uint64_t v31 = v39;
  v28((char *)v39, (uint64_t)v29, v30);
  SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:templateID:)(v43, v42, (uint64_t)v22, v37, v36, v31, 0, 0, v41);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v35 + 8);
  v32(v29, v30);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
  v33(v24, v16);
  v32(v44, v30);
  v33(v45, v16);
  sub_25B964F50();
}

uint64_t SessionConfiguration.hash(into:)()
{
  sub_25B9ED780();
  uint64_t v1 = type metadata accessor for SessionConfiguration();
  sub_25B9EC680();
  sub_25B9A4B88(&qword_26A51C558, MEMORY[0x263F7F968]);
  sub_25B9ECFA0();
  sub_25B9ECE10();
  sub_25B9A4B88(&qword_26A51BA38, MEMORY[0x263F61F78]);
  sub_25B9ECFA0();
  if (*(void *)(v0 + *(int *)(v1 + 28) + 8))
  {
    sub_25B9ED760();
    swift_bridgeObjectRetain();
    sub_25B9ECFF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B9ED760();
  }
  swift_bridgeObjectRetain();
  sub_25B9593F8();
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t static SessionConfiguration.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for SessionConfiguration();
  if ((MEMORY[0x26116BAA0]((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) == 0 || (sub_25B9ECDA0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[7];
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = *(void *)((char *)a1 + v5 + 8);
  uint64_t v8 = (void *)((char *)a2 + v5);
  uint64_t v9 = v8[1];
  if (!v7)
  {
    if (!v9)
    {
LABEL_15:
      uint64_t v13 = v4[8];
      uint64_t v14 = *(void *)((char *)a1 + v13);
      uint64_t v15 = *(void *)((char *)a1 + v13 + 8);
      uint64_t v16 = (void *)((char *)a2 + v13);
      if (v14 == *v16 && v15 == v16[1]) {
        return 1;
      }
      return sub_25B9ED6A0();
    }
    return 0;
  }
  if (!v9) {
    return 0;
  }
  if (*v6 == *v8 && v7 == v9) {
    goto LABEL_15;
  }
  char v11 = sub_25B9ED6A0();
  uint64_t result = 0;
  if (v11) {
    goto LABEL_15;
  }
  return result;
}

uint64_t SessionConfiguration.hashValue.getter()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9A4B04()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9A4B40()
{
  return sub_25B9A4B88(&qword_26A51C560, (void (*)(uint64_t))type metadata accessor for SessionConfiguration);
}

uint64_t sub_25B9A4B88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25B9EC680();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_25B9ECE10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25B9EC680();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_25B9ECE10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B9EC680();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B9ECE10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B9EC680();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B9ECE10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SessionConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B9EC680();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B9ECE10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for SessionConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25B9EC680();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25B9ECE10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B9A5238);
}

uint64_t sub_25B9A5238(uint64_t a1, uint64_t a2, int *a3)
{
  sub_25B9EC680();
  sub_25B950858();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
LABEL_5:
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1 + v9, a2, v8);
  }
  sub_25B9ECE10();
  sub_25B950858();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B9A5304);
}

void sub_25B9A5304(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_25B9EC680();
  sub_25B950858();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_25B9ECE10();
    sub_25B950858();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[6];
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t sub_25B9A53B8()
{
  uint64_t result = sub_25B9EC680();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25B9ECE10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_25B9A54A4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_25B9A54D8()
{
  return type metadata accessor for SessionConfiguration();
}

uint64_t sub_25B9A54F0()
{
  return sub_25B9EC680();
}

uint64_t sub_25B9A5518()
{
  return 0;
}

uint64_t sub_25B9A5534()
{
  return v0;
}

uint64_t sub_25B9A554C()
{
  return v0;
}

uint64_t static SuggestedAction.== infix(_:_:)()
{
  return 1;
}

uint64_t SuggestedAction.hash(into:)()
{
  return sub_25B9ED750();
}

uint64_t sub_25B9A55A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x796C706572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B9A5620()
{
  return 0x796C706572;
}

uint64_t sub_25B9A5638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9A55A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B9A5664(uint64_t a1)
{
  unint64_t v2 = sub_25B9A58C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A56A0(uint64_t a1)
{
  unint64_t v2 = sub_25B9A58C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A56DC(uint64_t a1)
{
  unint64_t v2 = sub_25B9A5910();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A5718(uint64_t a1)
{
  unint64_t v2 = sub_25B9A5910();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SuggestedAction.encode(to:)(void *a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51C578);
  sub_25B950790();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_25B950870();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25B94E854(&qword_26A51C580);
  sub_25B950790();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  sub_25B950870();
  uint64_t v15 = v14 - v13;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9A58C4();
  sub_25B9ED7B0();
  sub_25B9A5910();
  sub_25B9ED5D0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
}

unint64_t sub_25B9A58C4()
{
  unint64_t result = qword_26A51C588;
  if (!qword_26A51C588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C588);
  }
  return result;
}

unint64_t sub_25B9A5910()
{
  unint64_t result = qword_26A51C590;
  if (!qword_26A51C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C590);
  }
  return result;
}

uint64_t SuggestedAction.hashValue.getter()
{
  return sub_25B9ED790();
}

uint64_t SuggestedAction.init(from:)(void *a1)
{
  uint64_t v3 = sub_25B94E854(&qword_26A51C598);
  sub_25B950790();
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v5);
  sub_25B950870();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25B94E854(&qword_26A51C5A0);
  sub_25B950790();
  uint64_t v28 = v10;
  MEMORY[0x270FA5388](v11);
  sub_25B950870();
  uint64_t v14 = v13 - v12;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9A58C4();
  sub_25B9ED7A0();
  if (v1) {
    goto LABEL_6;
  }
  uint64_t v26 = v14;
  uint64_t v15 = sub_25B9ED5B0();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16
    || (sub_25B958E48(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        uint64_t v18 = v17,
        unint64_t v20 = v19,
        swift_bridgeObjectRelease(),
        v18 != v20 >> 1))
  {
    uint64_t v21 = sub_25B9ED3D0();
    swift_allocError();
    uint64_t v23 = v22;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v23 = &type metadata for SuggestedAction;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v9);
LABEL_6:
    uint64_t v25 = (uint64_t)a1;
    return sub_25B94F65C(v25);
  }
  sub_25B9A5910();
  sub_25B9ED4F0();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v8, v3);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v9);
  uint64_t v25 = (uint64_t)a1;
  return sub_25B94F65C(v25);
}

uint64_t sub_25B9A5CAC()
{
  return SuggestedAction.hashValue.getter();
}

uint64_t sub_25B9A5CC4()
{
  return SuggestedAction.hash(into:)();
}

uint64_t sub_25B9A5CDC(void *a1)
{
  return SuggestedAction.init(from:)(a1);
}

uint64_t sub_25B9A5CF4(void *a1)
{
  return SuggestedAction.encode(to:)(a1);
}

unint64_t sub_25B9A5D10()
{
  unint64_t result = qword_26A51C5A8;
  if (!qword_26A51C5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C5A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestedAction()
{
  return &type metadata for SuggestedAction;
}

unsigned char *_s4Sage15SuggestedActionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9A5E0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestedAction.CodingKeys()
{
  return &type metadata for SuggestedAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SuggestedAction.ReplyCodingKeys()
{
  return &type metadata for SuggestedAction.ReplyCodingKeys;
}

unint64_t sub_25B9A5E58()
{
  unint64_t result = qword_26A51C5B0;
  if (!qword_26A51C5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C5B0);
  }
  return result;
}

unint64_t sub_25B9A5EA8()
{
  unint64_t result = qword_26A51C5B8;
  if (!qword_26A51C5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C5B8);
  }
  return result;
}

unint64_t sub_25B9A5EF8()
{
  unint64_t result = qword_26A51C5C0;
  if (!qword_26A51C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C5C0);
  }
  return result;
}

unint64_t sub_25B9A5F48()
{
  unint64_t result = qword_26A51C5C8;
  if (!qword_26A51C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C5C8);
  }
  return result;
}

unint64_t sub_25B9A5F98()
{
  unint64_t result = qword_26A51C5D0[0];
  if (!qword_26A51C5D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A51C5D0);
  }
  return result;
}

uint64_t (*SummarizableThread.elements.modify())()
{
  return nullsub_1;
}

uint64_t sub_25B9A6004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9A6518(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_25B95153C);
}

uint64_t sub_25B9A601C(uint64_t a1, uint64_t a2)
{
  return sub_25B9A6564(a1, a2, (uint64_t (*)(void, void))sub_25B9A6C60);
}

uint64_t sub_25B9A6034(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25B9A6088(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t SummarizableThread.encode(to:)(void *a1, uint64_t a2)
{
  return sub_25B9A6674(a1, a2, (void (*)(uint64_t, uint64_t))type metadata accessor for SummarizableThread.CodingKeys);
}

uint64_t type metadata accessor for SummarizableThread.CodingKeys()
{
  return sub_25B94E824();
}

uint64_t SummarizableThread.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_25B9A6854(a1, (void (*)(uint64_t))type metadata accessor for SummarizableThread.CodingKeys, a2);
}

uint64_t sub_25B9A6174@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SummarizableThread.init(from:)(a1, a2);
}

uint64_t sub_25B9A6194(void *a1, uint64_t a2)
{
  return SummarizableThread.encode(to:)(a1, a2);
}

uint64_t ClassifiableThread.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClassifiableThread.elements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ClassifiableThread.elements.modify())()
{
  return nullsub_1;
}

uint64_t ClassifiableThread.init(elements:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_25B9A6208()
{
  return 0x73746E656D656C65;
}

uint64_t sub_25B9A6220()
{
  return sub_25B9509DC();
}

uint64_t sub_25B9A6228()
{
  return sub_25B951020();
}

uint64_t sub_25B9A6248()
{
  return sub_25B950F88();
}

uint64_t sub_25B9A6254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9A6518(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_25B950F88);
}

uint64_t sub_25B9A626C()
{
  return sub_25B9A6208();
}

uint64_t sub_25B9A6278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9A6490(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B9A62AC(uint64_t a1, uint64_t a2)
{
  return sub_25B9A6564(a1, a2, (uint64_t (*)(void, void))sub_25B94EF78);
}

uint64_t sub_25B9A62C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B9509DC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25B9A62F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25B9A634C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t ClassifiableThread.encode(to:)(void *a1, uint64_t a2)
{
  return sub_25B9A6674(a1, a2, (void (*)(uint64_t, uint64_t))type metadata accessor for ClassifiableThread.CodingKeys);
}

uint64_t type metadata accessor for ClassifiableThread.CodingKeys()
{
  return sub_25B94E824();
}

uint64_t ClassifiableThread.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_25B9A6854(a1, (void (*)(uint64_t))type metadata accessor for ClassifiableThread.CodingKeys, a2);
}

uint64_t sub_25B9A6438@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ClassifiableThread.init(from:)(a1, a2);
}

uint64_t sub_25B9A6458(void *a1, uint64_t a2)
{
  return ClassifiableThread.encode(to:)(a1, a2);
}

uint64_t (*VisualPromptSummarizableThread.elements.modify())()
{
  return nullsub_1;
}

uint64_t sub_25B9A6490(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B9A6518(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void))
{
  sub_25B9ED740();
  a4(v7, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_25B9ED790();
}

uint64_t sub_25B9A6564(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_25B9A658C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25B9A65E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t VisualPromptSummarizableThread.encode(to:)(void *a1, uint64_t a2)
{
  return sub_25B9A6674(a1, a2, (void (*)(uint64_t, uint64_t))type metadata accessor for VisualPromptSummarizableThread.CodingKeys);
}

uint64_t sub_25B9A6674(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = v6;
  a3(255, v15);
  swift_getWitnessTable();
  uint64_t v7 = sub_25B9ED680();
  sub_25B950790();
  uint64_t v17 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = *v3;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9ED7B0();
  uint64_t v19 = v12;
  sub_25B9ED0C0();
  uint64_t v18 = *(void *)(v16 + 16);
  swift_getWitnessTable();
  sub_25B9ED660();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v7);
}

uint64_t type metadata accessor for VisualPromptSummarizableThread.CodingKeys()
{
  return sub_25B94E824();
}

uint64_t VisualPromptSummarizableThread.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_25B9A6854(a1, (void (*)(uint64_t))type metadata accessor for VisualPromptSummarizableThread.CodingKeys, a2);
}

uint64_t sub_25B9A6854@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X3>, void *a3@<X8>)
{
  a2(255);
  swift_getWitnessTable();
  sub_25B9ED5C0();
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9ED7A0();
  if (!v3)
  {
    sub_25B9ED0C0();
    swift_getWitnessTable();
    sub_25B9ED590();
    uint64_t v6 = sub_25B9A6C78();
    v7(v6);
    *a3 = v10;
  }
  return sub_25B94F65C((uint64_t)a1);
}

uint64_t sub_25B9A69F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualPromptSummarizableThread.init(from:)(a1, a2);
}

uint64_t sub_25B9A6A10(void *a1, uint64_t a2)
{
  return VisualPromptSummarizableThread.encode(to:)(a1, a2);
}

uint64_t sub_25B9A6A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for SummarizableThread()
{
  return sub_25B94E824();
}

uint64_t type metadata accessor for ClassifiableThread()
{
  return sub_25B94E824();
}

uint64_t type metadata accessor for VisualPromptSummarizableThread()
{
  return sub_25B94E824();
}

uint64_t sub_25B9A6A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *sub_25B9A6A84(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9A6B20);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9A6B48()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6B64()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6B80()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6B9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6BB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6BD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6BF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6C0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6C28()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9A6C78()
{
  return v0;
}

uint64_t static SummarizationXPCRequest.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t SummarizationXPCRequest.Error.hash(into:)()
{
  return sub_25B9ED750();
}

uint64_t SummarizationXPCRequest.Error.hashValue.getter()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9A6D0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F1390 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6D726177657270 && a2 == 0xE700000000000000;
    if (v5 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9EE9B0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000025B9EEA10 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9EE9D0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000025B9EEA30 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x800000025B9EE9F0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x800000025B9EEA50 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD00000000000002FLL && a2 == 0x800000025B9F13B0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else if (a1 == 0xD00000000000002BLL && a2 == 0x800000025B9F13E0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 9;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x800000025B9F1410 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 10;
    }
    else if (a1 == 0xD00000000000002DLL && a2 == 0x800000025B9F1430 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 11;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x800000025B9F1460 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 12;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x800000025B9F1480 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 13;
    }
    else if (a1 == 0xD000000000000028 && a2 == 0x800000025B9F14B0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 14;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x800000025B9F14E0 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 15;
    }
    else if (a1 == 0xD000000000000028 && a2 == 0x800000025B9F1510 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 16;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x800000025B9F1540 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 17;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9EFA90)
    {
      swift_bridgeObjectRelease();
      return 18;
    }
    else
    {
      char v6 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      if (v6) {
        return 18;
      }
      else {
        return 19;
      }
    }
  }
}

uint64_t sub_25B9A73B4()
{
  return 19;
}

unint64_t sub_25B9A73BC(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D726177657270;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000022;
      break;
    case 14:
      unint64_t result = 0xD000000000000028;
      break;
    case 15:
      unint64_t result = 0xD000000000000022;
      break;
    case 16:
      unint64_t result = 0xD000000000000028;
      break;
    case 17:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9A756C()
{
  return SummarizationXPCRequest.Error.hashValue.getter();
}

uint64_t sub_25B9A7584()
{
  return SummarizationXPCRequest.Error.hash(into:)();
}

uint64_t sub_25B9A759C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA754();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A75D8(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA754();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25B9A7614()
{
  return sub_25B9A73BC(*v0);
}

uint64_t sub_25B9A761C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9A6D0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9A7644@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B9A73B4();
  *a1 = result;
  return result;
}

uint64_t sub_25B9A766C(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9DF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A76A8(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9DF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A76E4(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA114();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7720(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA114();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A775C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA06C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7798(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA06C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A77D4(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9EF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7810(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9EF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A784C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA1FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7888(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA1FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A78C4(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9FD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7900(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9FD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A793C(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9F3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7978(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9F3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A79B4(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA3C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A79F0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA3C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7A2C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA378();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7A68(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA378();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7AA4(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA294();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7AE0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA294();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7B1C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA708();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7B58(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA708();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7B94(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA6BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7BD0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA6BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7C0C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA670();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7C48(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA670();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7C84(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA32C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7CC0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA32C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7CFC(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA5D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7D38(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA5D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7D74(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA540();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7DB0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA540();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7DEC(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA4A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7E28(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA4A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7E64(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA410();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7EA0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AA410();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9A7EDC(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9EA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9A7F18(uint64_t a1)
{
  unint64_t v2 = sub_25B9A9EA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SummarizationXPCRequest.Request.encode(to:)(void *a1)
{
  uint64_t v216 = sub_25B94E854(&qword_26A51C8D8);
  sub_25B950790();
  uint64_t v215 = v4;
  MEMORY[0x270FA5388](v5);
  sub_25B959440((uint64_t)&v183 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v220 = sub_25B94E854(&qword_26A51C8E0);
  sub_25B950790();
  uint64_t v219 = v7;
  MEMORY[0x270FA5388](v8);
  sub_25B959440((uint64_t)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v218 = sub_25B94E854(&qword_26A51C8E8);
  sub_25B950790();
  uint64_t v217 = v10;
  MEMORY[0x270FA5388](v11);
  sub_25B959440((uint64_t)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v214 = sub_25B94E854(&qword_26A51C8F0);
  sub_25B950790();
  uint64_t v213 = v13;
  MEMORY[0x270FA5388](v14);
  sub_25B959440((uint64_t)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v212 = sub_25B94E854(&qword_26A51C8F8);
  sub_25B950790();
  uint64_t v211 = v16;
  MEMORY[0x270FA5388](v17);
  sub_25B958FE4();
  sub_25B959440(v18);
  uint64_t v210 = sub_25B94E854(&qword_26A51C900);
  sub_25B950790();
  uint64_t v209 = v19;
  MEMORY[0x270FA5388](v20);
  sub_25B958FE4();
  sub_25B959440(v21);
  uint64_t v208 = sub_25B94E854(&qword_26A51C908);
  sub_25B950790();
  uint64_t v207 = v22;
  MEMORY[0x270FA5388](v23);
  sub_25B958FE4();
  sub_25B959440(v24);
  uint64_t v206 = sub_25B94E854(&qword_26A51C910);
  sub_25B950790();
  uint64_t v205 = v25;
  MEMORY[0x270FA5388](v26);
  sub_25B958FE4();
  sub_25B959440(v27);
  uint64_t v204 = sub_25B94E854(&qword_26A51C918);
  sub_25B950790();
  uint64_t v203 = v28;
  MEMORY[0x270FA5388](v29);
  sub_25B958FE4();
  sub_25B959440(v30);
  uint64_t v202 = sub_25B94E854(&qword_26A51C920);
  sub_25B950790();
  uint64_t v201 = v31;
  MEMORY[0x270FA5388](v32);
  sub_25B958FE4();
  sub_25B959440(v33);
  uint64_t v200 = sub_25B94E854(&qword_26A51C928);
  sub_25B950790();
  uint64_t v199 = v34;
  MEMORY[0x270FA5388](v35);
  sub_25B958FE4();
  sub_25B959338(v36);
  sub_25B9EC310();
  sub_25B950790();
  uint64_t v227 = v38;
  uint64_t v228 = v37;
  MEMORY[0x270FA5388](v37);
  sub_25B958FE4();
  uint64_t v226 = v39;
  uint64_t v198 = sub_25B94E854(&qword_26A51C930);
  sub_25B950790();
  uint64_t v197 = v40;
  MEMORY[0x270FA5388](v41);
  sub_25B958FE4();
  sub_25B959440(v42);
  uint64_t v196 = sub_25B94E854(&qword_26A51C938);
  sub_25B950790();
  uint64_t v195 = v43;
  MEMORY[0x270FA5388](v44);
  sub_25B958FE4();
  sub_25B959338(v45);
  uint64_t v190 = type metadata accessor for UserNotification();
  sub_25B95097C();
  MEMORY[0x270FA5388](v46);
  sub_25B958FE4();
  uint64_t v225 = v47;
  uint64_t v194 = sub_25B94E854(&qword_26A51C940);
  sub_25B950790();
  uint64_t v193 = v48;
  MEMORY[0x270FA5388](v49);
  sub_25B958FE4();
  sub_25B959440(v50);
  uint64_t v192 = sub_25B94E854(&qword_26A51C948);
  sub_25B950790();
  uint64_t v191 = v51;
  MEMORY[0x270FA5388](v52);
  sub_25B958FE4();
  sub_25B959338(v53);
  uint64_t v230 = type metadata accessor for TextMessage();
  sub_25B95097C();
  MEMORY[0x270FA5388](v54);
  sub_25B96DB08();
  sub_25B959348();
  MEMORY[0x270FA5388](v55);
  uint64_t v224 = (uint64_t)&v183 - v56;
  uint64_t v189 = sub_25B94E854(&qword_26A51C950);
  sub_25B950790();
  uint64_t v188 = v57;
  MEMORY[0x270FA5388](v58);
  sub_25B958FE4();
  sub_25B959440(v59);
  uint64_t v187 = sub_25B94E854(&qword_26A51C958);
  sub_25B950790();
  uint64_t v186 = v60;
  MEMORY[0x270FA5388](v61);
  sub_25B958FE4();
  sub_25B959338(v62);
  uint64_t v229 = type metadata accessor for MailMessage();
  sub_25B95097C();
  MEMORY[0x270FA5388](v63);
  sub_25B96DB08();
  sub_25B959348();
  MEMORY[0x270FA5388](v64);
  sub_25B959440((uint64_t)&v183 - v65);
  sub_25B94E854(&qword_26A51C960);
  sub_25B950790();
  uint64_t v183 = v66;
  MEMORY[0x270FA5388](v67);
  sub_25B950870();
  uint64_t v70 = v69 - v68;
  uint64_t v185 = sub_25B94E854(&qword_26A51C968);
  sub_25B950790();
  uint64_t v184 = v71;
  MEMORY[0x270FA5388](v72);
  sub_25B950870();
  uint64_t v75 = v74 - v73;
  uint64_t v76 = type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v77);
  sub_25B950870();
  uint64_t v80 = v79 - v78;
  uint64_t v234 = sub_25B94E854(&qword_26A51C970);
  sub_25B950790();
  uint64_t v231 = v81;
  MEMORY[0x270FA5388](v82);
  sub_25B959380();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9A9DF4();
  uint64_t v235 = v2;
  sub_25B9ED7B0();
  sub_25B9A9E40(v233, v80);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25B94E854(&qword_26A51CAC0);
      sub_25B9B4830();
      uint64_t v228 = v85;
      uint64_t v87 = *(void *)(v86 + 16);
      uint64_t v230 = *(void *)(v86 + 8);
      LODWORD(v227) = *(unsigned __int8 *)(v86 + 24);
      uint64_t v226 = *(void *)(v86 + 32);
      uint64_t v233 = *(void *)(v86 + 40);
      LODWORD(v225) = *(_DWORD *)(v86 + 48);
      uint64_t v88 = *(void *)(v86 + 56);
      uint64_t v89 = v222;
      sub_25B9AA0B8(v80, v222, (void (*)(void))type metadata accessor for MailMessage);
      LOBYTE(v236) = 2;
      sub_25B9AA6BC();
      uint64_t v90 = v234;
      uint64_t v91 = v235;
      sub_25B94E950();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51B240, (void (*)(uint64_t))type metadata accessor for MailMessage);
      uint64_t v92 = v232;
      sub_25B9ED660();
      if (!v92)
      {
        uint64_t v236 = v228;
        uint64_t v237 = v230;
        uint64_t v238 = v87;
        LOBYTE(v239) = v227;
        uint64_t v240 = v226;
        uint64_t v241 = v233;
        int v242 = v225;
        uint64_t v243 = v88;
        sub_25B9B4504();
        sub_25B99E398();
        sub_25B9ED660();
        sub_25B959038();
        v164();
        sub_25B9AA1A8(v222, (void (*)(void))type metadata accessor for MailMessage);
        sub_25B959038();
        v165();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B959038();
      v93();
      sub_25B9AA1A8(v89, (void (*)(void))type metadata accessor for MailMessage);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v231 + 8))(v91, v90);
    case 2u:
      uint64_t v96 = *(void *)v80;
      uint64_t v95 = *(void *)(v80 + 8);
      uint64_t v230 = *(void *)(v80 + 16);
      uint64_t v97 = *(void *)(v80 + 24);
      uint64_t v228 = v95;
      uint64_t v229 = v97;
      LODWORD(v227) = *(unsigned __int8 *)(v80 + 32);
      uint64_t v226 = *(void *)(v80 + 40);
      uint64_t v233 = *(void *)(v80 + 48);
      LODWORD(v225) = *(_DWORD *)(v80 + 56);
      uint64_t v98 = *(void *)(v80 + 64);
      LOBYTE(v236) = 3;
      sub_25B9AA670();
      sub_25B9B49C4();
      uint64_t v236 = v96;
      char v244 = 0;
      sub_25B94E854(&qword_26A51CAB0);
      sub_25B9557DC(&qword_26A51CAB8, &qword_26A51CAB0);
      sub_25B9B46C8();
      uint64_t v99 = v232;
      sub_25B9ED660();
      if (v99)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v100();
        uint64_t v101 = sub_25B96D9F4();
        goto LABEL_52;
      }
      swift_bridgeObjectRelease();
      uint64_t v236 = v228;
      uint64_t v237 = v230;
      uint64_t v238 = v229;
      LOBYTE(v239) = v227;
      uint64_t v240 = v226;
      uint64_t v241 = v233;
      int v242 = v225;
      uint64_t v243 = v98;
      sub_25B9B4504();
      sub_25B99E440();
      sub_25B9ED660();
      sub_25B959038();
      v166();
      sub_25B959038();
      v167();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 3u:
      sub_25B94E854(&qword_26A51CA90);
      sub_25B9B4830();
      uint64_t v229 = v104;
      uint64_t v106 = v105[2];
      uint64_t v233 = v105[1];
      uint64_t v107 = v105[3];
      uint64_t v108 = v224;
      sub_25B9AA0B8(v80, v224, (void (*)(void))type metadata accessor for TextMessage);
      LOBYTE(v236) = 4;
      sub_25B9AA5D8();
      sub_25B94E950();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51B220, (void (*)(uint64_t))type metadata accessor for TextMessage);
      uint64_t v109 = v232;
      sub_25B9ED660();
      if (v109)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v110();
        uint64_t v111 = type metadata accessor for TextMessage;
        uint64_t v112 = v108;
        goto LABEL_13;
      }
      uint64_t v236 = v229;
      uint64_t v237 = v233;
      uint64_t v238 = v106;
      uint64_t v239 = v107;
      sub_25B9B4504();
      sub_25B9AA624();
      sub_25B9B4888();
      sub_25B9ED660();
      sub_25B959038();
      v168();
      sub_25B9AA1A8(v224, (void (*)(void))type metadata accessor for TextMessage);
      sub_25B959038();
      v169();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 4u:
      sub_25B9B48CC();
      LOBYTE(v236) = 5;
      sub_25B9AA540();
      sub_25B9B456C();
      uint64_t v236 = v76;
      char v244 = 0;
      sub_25B94E854(&qword_26A51CA78);
      sub_25B9557DC(&qword_26A51CA80, &qword_26A51CA78);
      sub_25B9B46C8();
      sub_25B9B4864();
      if (v1) {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      uint64_t v236 = v229;
      uint64_t v237 = v233;
      uint64_t v238 = v230;
      uint64_t v239 = v75;
      sub_25B9B4504();
      sub_25B9AA58C();
      sub_25B9B46A4();
      goto LABEL_49;
    case 5u:
      sub_25B94E854(&qword_26A51CA58);
      sub_25B9B4830();
      uint64_t v230 = v113;
      uint64_t v115 = v114[2];
      uint64_t v233 = v114[1];
      uint64_t v116 = v114[3];
      uint64_t v117 = v225;
      sub_25B9AA0B8(v80, v225, (void (*)(void))type metadata accessor for UserNotification);
      LOBYTE(v236) = 6;
      sub_25B9AA4A8();
      sub_25B94E950();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51B200, (void (*)(uint64_t))type metadata accessor for UserNotification);
      sub_25B9B48BC();
      uint64_t v118 = v232;
      sub_25B9ED660();
      if (!v118)
      {
        uint64_t v236 = v230;
        uint64_t v237 = v233;
        uint64_t v238 = v115;
        uint64_t v239 = v116;
        sub_25B9B4504();
        sub_25B9AA4F4();
        sub_25B9B4888();
        sub_25B9ED660();
        sub_25B959038();
        v170();
        sub_25B9AA1A8(v225, (void (*)(void))type metadata accessor for UserNotification);
        sub_25B959038();
        v171();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B959038();
      v119();
      uint64_t v111 = type metadata accessor for UserNotification;
      uint64_t v112 = v117;
LABEL_13:
      sub_25B9AA1A8(v112, (void (*)(void))v111);
      goto LABEL_18;
    case 6u:
      sub_25B9B48CC();
      LOBYTE(v236) = 7;
      sub_25B9AA410();
      sub_25B9B456C();
      uint64_t v236 = v76;
      char v244 = 0;
      sub_25B94E854(&qword_26A51CA40);
      sub_25B9557DC(&qword_26A51CA48, &qword_26A51CA40);
      sub_25B9B46C8();
      sub_25B9B4864();
      if (v1)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v120();
        sub_25B9B4A2C();
        sub_25B959038();
        v121();
        goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      uint64_t v236 = v229;
      uint64_t v237 = v233;
      uint64_t v238 = v230;
      uint64_t v239 = v75;
      sub_25B9B4504();
      sub_25B9AA45C();
      sub_25B9B46A4();
LABEL_49:
      sub_25B959038();
      v172();
      sub_25B959038();
      v173();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 7u:
      uint64_t v122 = (unsigned __int8 *)(v80 + *(int *)(sub_25B94E854(&qword_26A51CA20) + 48));
      LODWORD(v230) = *v122;
      uint64_t v229 = *((void *)v122 + 1);
      uint64_t v233 = *((void *)v122 + 2);
      LODWORD(v225) = *((_DWORD *)v122 + 6);
      uint64_t v124 = v226;
      uint64_t v123 = v227;
      uint64_t v125 = v228;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v227 + 32))(v226, v80, v228);
      LOBYTE(v236) = 8;
      sub_25B9AA3C4();
      sub_25B94E950();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51CA30, MEMORY[0x263F07648]);
      uint64_t v126 = v232;
      sub_25B9ED660();
      if (!v126)
      {
        LOBYTE(v236) = v230;
        uint64_t v237 = v229;
        uint64_t v238 = v233;
        LODWORD(v239) = v225;
        char v244 = 1;
        sub_25B9AA2E0();
        sub_25B9B4888();
        sub_25B9ED660();
        sub_25B959038();
        v174();
        sub_25B959038();
        v175();
        uint64_t v151 = sub_25B9B4A18();
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      sub_25B959038();
      v127();
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v124, v125);
LABEL_18:
      uint64_t v128 = sub_25B9B4A18();
      goto LABEL_65;
    case 8u:
      sub_25B9B45E8();
      LOBYTE(v236) = 9;
      sub_25B9AA378();
      sub_25B9B456C();
      sub_25B9B4778();
      sub_25B9B47A4();
      if (v1) {
        goto LABEL_24;
      }
      goto LABEL_51;
    case 9u:
      sub_25B9B45E8();
      LOBYTE(v236) = 10;
      sub_25B9AA32C();
      sub_25B9B456C();
      sub_25B9B4778();
      sub_25B9B47A4();
      if (v1) {
        goto LABEL_24;
      }
      goto LABEL_51;
    case 0xAu:
      sub_25B9B45E8();
      LOBYTE(v236) = 11;
      sub_25B9AA294();
      sub_25B9B456C();
      sub_25B9B4778();
      sub_25B9B47A4();
      if (v1)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_25B959038();
        v131();
        uint64_t v128 = sub_25B9B4A2C();
        goto LABEL_65;
      }
LABEL_51:
      swift_bridgeObjectRelease();
      sub_25B9B45B0();
      sub_25B9B4680();
      sub_25B959038();
      v176();
      id v103 = *(void (**)(uint64_t, uint64_t))(v231 + 8);
      uint64_t v101 = v235;
      uint64_t v102 = v70;
LABEL_52:
      v103(v101, v102);
      goto LABEL_53;
    case 0xBu:
      char v132 = *(unsigned char *)(v80 + 16);
      LOBYTE(v236) = 12;
      sub_25B9AA1FC();
      sub_25B9B4528();
      LOBYTE(v236) = 0;
      sub_25B96D9F4();
      uint64_t v133 = v232;
      sub_25B9ED610();
      swift_bridgeObjectRelease();
      if (!v133)
      {
        LOBYTE(v236) = v132;
        sub_25B9B4504();
        sub_25B9AA248();
        sub_25B9B46A4();
      }
      uint64_t v177 = sub_25B9B4950();
      goto LABEL_63;
    case 0xCu:
      uint64_t v134 = sub_25B94E854(&qword_26A51C9E0);
      sub_25B9B47C4(v134);
      uint64_t v135 = v221;
      sub_25B9AA0B8(v80, v221, (void (*)(void))type metadata accessor for MailMessage);
      LOBYTE(v236) = 13;
      sub_25B9AA114();
      sub_25B9B4528();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51B240, (void (*)(uint64_t))type metadata accessor for MailMessage);
      sub_25B9B48BC();
      uint64_t v136 = v232;
      sub_25B9ED660();
      if (v136)
      {
        sub_25B959038();
        v137();
        uint64_t v138 = type metadata accessor for MailMessage;
        goto LABEL_33;
      }
      LOBYTE(v236) = v233;
      BYTE1(v236) = v2;
      BYTE2(v236) = v75;
      sub_25B9B4504();
      sub_25B99E584();
      sub_25B9B4548();
      sub_25B959038();
      v179();
      uint64_t v144 = type metadata accessor for MailMessage;
      uint64_t v180 = &v245;
      goto LABEL_59;
    case 0xDu:
      uint64_t v139 = *(void *)v80;
      char v140 = *(unsigned char *)(v80 + 8);
      LOBYTE(v236) = 14;
      sub_25B9AA06C();
      sub_25B9B4528();
      uint64_t v236 = v139;
      char v244 = 0;
      sub_25B94E854(&qword_26A51C9D0);
      sub_25B9557DC(&qword_26A51C9D8, &qword_26A51C9D0);
      sub_25B9B46C8();
      sub_25B9B4898();
      if (v1) {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v236) = v140;
      sub_25B9B4504();
      sub_25B99E4E4();
      sub_25B9B4548();
      goto LABEL_62;
    case 0xEu:
      uint64_t v141 = sub_25B94E854(&qword_26A51C9B0);
      sub_25B9B47C4(v141);
      uint64_t v135 = v223;
      sub_25B9AA0B8(v80, v223, (void (*)(void))type metadata accessor for TextMessage);
      LOBYTE(v236) = 15;
      sub_25B9A9FD4();
      sub_25B9B4528();
      LOBYTE(v236) = 0;
      sub_25B9AA160(&qword_26A51B220, (void (*)(uint64_t))type metadata accessor for TextMessage);
      sub_25B9B48BC();
      uint64_t v142 = v232;
      sub_25B9ED660();
      if (v142)
      {
        sub_25B959038();
        v143();
        uint64_t v138 = type metadata accessor for TextMessage;
LABEL_33:
        uint64_t v144 = v138;
        uint64_t v145 = v135;
      }
      else
      {
        LOBYTE(v236) = v233;
        BYTE1(v236) = v2;
        BYTE2(v236) = v75;
        sub_25B9B4504();
        sub_25B9AA020();
        sub_25B9B4548();
        sub_25B959038();
        v181();
        uint64_t v144 = type metadata accessor for TextMessage;
        uint64_t v180 = &v246;
LABEL_59:
        uint64_t v145 = *(v180 - 32);
      }
      sub_25B9AA1A8(v145, (void (*)(void))v144);
      goto LABEL_64;
    case 0xFu:
      uint64_t v146 = *(void *)v80;
      char v147 = *(unsigned char *)(v80 + 8);
      LOBYTE(v236) = 16;
      sub_25B9A9F3C();
      sub_25B9B4528();
      uint64_t v236 = v146;
      char v244 = 0;
      sub_25B94E854(&qword_26A51C998);
      sub_25B9557DC(&qword_26A51C9A0, &qword_26A51C998);
      sub_25B9B46C8();
      sub_25B9B4898();
      if (v1)
      {
LABEL_35:
        uint64_t v148 = sub_25B9B4928();
        v150(v148, v149);
LABEL_36:
        uint64_t v151 = sub_25B9B4A04();
LABEL_37:
        v152(v151);
        goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      LOBYTE(v236) = v147;
      sub_25B9B4504();
      sub_25B9A9F88();
      sub_25B9B4548();
LABEL_62:
      uint64_t v177 = sub_25B9B4928();
LABEL_63:
      v178(v177);
LABEL_64:
      uint64_t v128 = sub_25B9B4A04();
LABEL_65:
      uint64_t result = v130(v128, v129);
      break;
    case 0x10u:
      uint64_t v154 = *(void *)v80;
      uint64_t v153 = *(void *)(v80 + 8);
      uint64_t v156 = *(void *)(v80 + 16);
      uint64_t v155 = *(void *)(v80 + 24);
      LODWORD(v233) = *(unsigned __int8 *)(v80 + 32);
      LODWORD(v230) = *(unsigned __int8 *)(v80 + 33);
      char v157 = *(unsigned char *)(v80 + 34);
      LOBYTE(v236) = 17;
      sub_25B9A9EF0();
      sub_25B9ED5D0();
      uint64_t v236 = v154;
      uint64_t v237 = v153;
      uint64_t v238 = v156;
      uint64_t v239 = v155;
      char v244 = 0;
      sub_25B9A1C7C();
      uint64_t v158 = v232;
      sub_25B9ED660();
      if (v158)
      {
        sub_25B959038();
        v159();
        sub_25B959038();
        v160();
LABEL_45:
        swift_bridgeObjectRelease();
LABEL_53:
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v236) = v233;
        BYTE1(v236) = v230;
        BYTE2(v236) = v157;
        sub_25B9B4504();
        sub_25B9A1BB4();
        sub_25B9ED660();
        sub_25B959038();
        v182();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v231 + 8))(v235, v234);
      }
      break;
    case 0x11u:
      LOBYTE(v236) = 18;
      sub_25B9A9EA4();
      sub_25B9B49C4();
      sub_25B9ED630();
      sub_25B959038();
      v161();
      uint64_t v128 = sub_25B96D9F4();
      goto LABEL_65;
    case 0x12u:
      LOBYTE(v236) = 1;
      sub_25B9AA708();
      sub_25B9ED5D0();
      sub_25B959038();
      v162();
      sub_25B9B47EC();
      sub_25B959038();
      return v163();
    default:
      uint64_t v83 = *(void *)v80;
      LOBYTE(v236) = 0;
      sub_25B9AA754();
      sub_25B9B4528();
      uint64_t v236 = v83;
      sub_25B94E854(&qword_26A51CAE0);
      sub_25B9AEC0C(&qword_26A51CAE8, (void (*)(void))sub_25B9AA7A0);
      uint64_t v84 = v185;
      sub_25B9ED660();
      (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v75, v84);
      goto LABEL_36;
  }
  return result;
}

uint64_t type metadata accessor for SummarizationXPCRequest.Request(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51CC58);
}

unint64_t sub_25B9A9DF4()
{
  unint64_t result = qword_26A51C978;
  if (!qword_26A51C978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C978);
  }
  return result;
}

uint64_t sub_25B9A9E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B9A9EA4()
{
  unint64_t result = qword_26A51C980;
  if (!qword_26A51C980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C980);
  }
  return result;
}

unint64_t sub_25B9A9EF0()
{
  unint64_t result = qword_26A51C988;
  if (!qword_26A51C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C988);
  }
  return result;
}

unint64_t sub_25B9A9F3C()
{
  unint64_t result = qword_26A51C990;
  if (!qword_26A51C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C990);
  }
  return result;
}

unint64_t sub_25B9A9F88()
{
  unint64_t result = qword_26A51C9A8;
  if (!qword_26A51C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9A8);
  }
  return result;
}

unint64_t sub_25B9A9FD4()
{
  unint64_t result = qword_26A51C9B8;
  if (!qword_26A51C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9B8);
  }
  return result;
}

unint64_t sub_25B9AA020()
{
  unint64_t result = qword_26A51C9C0;
  if (!qword_26A51C9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9C0);
  }
  return result;
}

unint64_t sub_25B9AA06C()
{
  unint64_t result = qword_26A51C9C8;
  if (!qword_26A51C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9C8);
  }
  return result;
}

uint64_t sub_25B9AA0B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25B95097C();
  uint64_t v4 = sub_25B9593F8();
  v5(v4);
  return a2;
}

unint64_t sub_25B9AA114()
{
  unint64_t result = qword_26A51C9E8;
  if (!qword_26A51C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9E8);
  }
  return result;
}

uint64_t sub_25B9AA160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B9AA1A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

unint64_t sub_25B9AA1FC()
{
  unint64_t result = qword_26A51C9F0;
  if (!qword_26A51C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9F0);
  }
  return result;
}

unint64_t sub_25B9AA248()
{
  unint64_t result = qword_26A51C9F8;
  if (!qword_26A51C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51C9F8);
  }
  return result;
}

unint64_t sub_25B9AA294()
{
  unint64_t result = qword_26A51CA00;
  if (!qword_26A51CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA00);
  }
  return result;
}

unint64_t sub_25B9AA2E0()
{
  unint64_t result = qword_26A51CA08;
  if (!qword_26A51CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA08);
  }
  return result;
}

unint64_t sub_25B9AA32C()
{
  unint64_t result = qword_26A51CA10;
  if (!qword_26A51CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA10);
  }
  return result;
}

unint64_t sub_25B9AA378()
{
  unint64_t result = qword_26A51CA18;
  if (!qword_26A51CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA18);
  }
  return result;
}

unint64_t sub_25B9AA3C4()
{
  unint64_t result = qword_26A51CA28;
  if (!qword_26A51CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA28);
  }
  return result;
}

unint64_t sub_25B9AA410()
{
  unint64_t result = qword_26A51CA38;
  if (!qword_26A51CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA38);
  }
  return result;
}

unint64_t sub_25B9AA45C()
{
  unint64_t result = qword_26A51CA50;
  if (!qword_26A51CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA50);
  }
  return result;
}

unint64_t sub_25B9AA4A8()
{
  unint64_t result = qword_26A51CA60;
  if (!qword_26A51CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA60);
  }
  return result;
}

unint64_t sub_25B9AA4F4()
{
  unint64_t result = qword_26A51CA68;
  if (!qword_26A51CA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA68);
  }
  return result;
}

unint64_t sub_25B9AA540()
{
  unint64_t result = qword_26A51CA70;
  if (!qword_26A51CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA70);
  }
  return result;
}

unint64_t sub_25B9AA58C()
{
  unint64_t result = qword_26A51CA88;
  if (!qword_26A51CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA88);
  }
  return result;
}

unint64_t sub_25B9AA5D8()
{
  unint64_t result = qword_26A51CA98;
  if (!qword_26A51CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CA98);
  }
  return result;
}

unint64_t sub_25B9AA624()
{
  unint64_t result = qword_26A51CAA0;
  if (!qword_26A51CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAA0);
  }
  return result;
}

unint64_t sub_25B9AA670()
{
  unint64_t result = qword_26A51CAA8;
  if (!qword_26A51CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAA8);
  }
  return result;
}

unint64_t sub_25B9AA6BC()
{
  unint64_t result = qword_26A51CAC8;
  if (!qword_26A51CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAC8);
  }
  return result;
}

unint64_t sub_25B9AA708()
{
  unint64_t result = qword_26A51CAD0;
  if (!qword_26A51CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAD0);
  }
  return result;
}

unint64_t sub_25B9AA754()
{
  unint64_t result = qword_26A51CAD8;
  if (!qword_26A51CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAD8);
  }
  return result;
}

unint64_t sub_25B9AA7A0()
{
  unint64_t result = qword_26A51CAF0;
  if (!qword_26A51CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CAF0);
  }
  return result;
}

uint64_t SummarizationXPCRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v244 = a2;
  uint64_t v239 = sub_25B94E854(&qword_26A51CAF8);
  sub_25B950790();
  uint64_t v238 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  sub_25B959440(v5);
  uint64_t v242 = sub_25B94E854(&qword_26A51CB00);
  sub_25B950790();
  uint64_t v245 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25B958FE4();
  uint64_t v243 = v8;
  uint64_t v241 = sub_25B94E854(&qword_26A51CB08);
  sub_25B950790();
  unint64_t v240 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25B958FE4();
  sub_25B959440(v11);
  uint64_t v237 = sub_25B94E854(&qword_26A51CB10);
  sub_25B950790();
  uint64_t v236 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B958FE4();
  sub_25B959440(v14);
  uint64_t v235 = sub_25B94E854(&qword_26A51CB18);
  sub_25B950790();
  unint64_t v234 = v15;
  MEMORY[0x270FA5388](v16);
  sub_25B958FE4();
  sub_25B959440(v17);
  uint64_t v233 = sub_25B94E854(&qword_26A51CB20);
  sub_25B950790();
  uint64_t v232 = v18;
  MEMORY[0x270FA5388](v19);
  sub_25B958FE4();
  sub_25B959440(v20);
  uint64_t v231 = sub_25B94E854(&qword_26A51CB28);
  sub_25B950790();
  uint64_t v230 = v21;
  MEMORY[0x270FA5388](v22);
  sub_25B959440((uint64_t)&v196 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v229 = sub_25B94E854(&qword_26A51CB30);
  sub_25B950790();
  uint64_t v228 = v24;
  MEMORY[0x270FA5388](v25);
  sub_25B958FE4();
  sub_25B959440(v26);
  uint64_t v227 = sub_25B94E854(&qword_26A51CB38);
  sub_25B950790();
  uint64_t v226 = v27;
  MEMORY[0x270FA5388](v28);
  sub_25B958FE4();
  sub_25B959440(v29);
  uint64_t v225 = sub_25B94E854(&qword_26A51CB40);
  sub_25B950790();
  uint64_t v223 = v30;
  MEMORY[0x270FA5388](v31);
  sub_25B958FE4();
  sub_25B959440(v32);
  uint64_t v224 = sub_25B94E854(&qword_26A51CB48);
  sub_25B950790();
  uint64_t v222 = v33;
  MEMORY[0x270FA5388](v34);
  sub_25B958FE4();
  sub_25B959440(v35);
  uint64_t v221 = sub_25B94E854(&qword_26A51CB50);
  sub_25B950790();
  unint64_t v220 = v36;
  MEMORY[0x270FA5388](v37);
  sub_25B958FE4();
  sub_25B959440(v38);
  uint64_t v219 = sub_25B94E854(&qword_26A51CB58);
  sub_25B950790();
  uint64_t v218 = v39;
  MEMORY[0x270FA5388](v40);
  sub_25B958FE4();
  uint64_t v249 = v41;
  uint64_t v217 = sub_25B94E854(&qword_26A51CB60);
  sub_25B950790();
  unint64_t v216 = v42;
  MEMORY[0x270FA5388](v43);
  sub_25B959440((uint64_t)&v196 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v215 = sub_25B94E854(&qword_26A51CB68);
  sub_25B950790();
  uint64_t v214 = v45;
  MEMORY[0x270FA5388](v46);
  sub_25B958FE4();
  uint64_t v248 = v47;
  uint64_t v213 = sub_25B94E854(&qword_26A51CB70);
  sub_25B950790();
  uint64_t v212 = v48;
  MEMORY[0x270FA5388](v49);
  sub_25B958FE4();
  sub_25B959440(v50);
  uint64_t v211 = sub_25B94E854(&qword_26A51CB78);
  sub_25B950790();
  uint64_t v210 = v51;
  MEMORY[0x270FA5388](v52);
  sub_25B959440((uint64_t)&v196 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v207 = sub_25B94E854(&qword_26A51CB80);
  sub_25B950790();
  uint64_t v206 = v54;
  MEMORY[0x270FA5388](v55);
  sub_25B958FE4();
  sub_25B959440(v56);
  uint64_t v209 = sub_25B94E854(&qword_26A51CB88);
  sub_25B950790();
  uint64_t v208 = v57;
  MEMORY[0x270FA5388](v58);
  sub_25B959440((uint64_t)&v196 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25B94E854(&qword_26A51CB90);
  sub_25B950790();
  uint64_t v246 = v61;
  uint64_t v247 = v60;
  MEMORY[0x270FA5388](v60);
  sub_25B958FE4();
  uint64_t v253 = v62;
  uint64_t v250 = type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v63);
  sub_25B96DB08();
  sub_25B959348();
  MEMORY[0x270FA5388](v64);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v65);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v66);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v67);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v68);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v69);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v70);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v71);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v72);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v73);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v74);
  sub_25B9B45DC();
  sub_25B959348();
  MEMORY[0x270FA5388](v75);
  sub_25B9B45DC();
  sub_25B959348();
  uint64_t v77 = MEMORY[0x270FA5388](v76);
  uint64_t v79 = (char *)&v196 - v78;
  uint64_t v80 = MEMORY[0x270FA5388](v77);
  uint64_t v82 = (char *)&v196 - v81;
  uint64_t v83 = MEMORY[0x270FA5388](v80);
  uint64_t v85 = (char *)&v196 - v84;
  uint64_t v86 = MEMORY[0x270FA5388](v83);
  uint64_t v88 = (char *)&v196 - v87;
  uint64_t v89 = MEMORY[0x270FA5388](v86);
  uint64_t v91 = (char *)&v196 - v90;
  MEMORY[0x270FA5388](v89);
  uint64_t v93 = (char *)&v196 - v92;
  uint64_t v94 = a1[3];
  v251 = a1;
  sub_25B94F2E0(a1, v94);
  sub_25B9A9DF4();
  uint64_t v95 = (uint64_t)v252;
  sub_25B9ED7A0();
  if (v95) {
    goto LABEL_25;
  }
  uint64_t v199 = (uint64_t *)v91;
  uint64_t v197 = v85;
  uint64_t v198 = v79;
  uint64_t v200 = v88;
  uint64_t v201 = v82;
  uint64_t v96 = v249;
  v252 = v93;
  uint64_t v97 = v247;
  uint64_t v98 = v253;
  uint64_t v99 = sub_25B9ED5B0();
  uint64_t v100 = *(void *)(v99 + 16);
  if (!v100
    || (uint64_t v196 = 0,
        uint64_t v101 = *(unsigned __int8 *)(v99 + 32),
        sub_25B958E48(1, v100, v99, v99 + 32, 0, (2 * v100) | 1),
        uint64_t v103 = v102,
        unint64_t v105 = v104,
        swift_bridgeObjectRelease(),
        v103 != v105 >> 1))
  {
    uint64_t v110 = v98;
    uint64_t v111 = sub_25B9ED3D0();
    swift_allocError();
    uint64_t v113 = v112;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v113 = v250;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v111 - 8) + 104))(v113, *MEMORY[0x263F8DCB0], v111);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v110, v97);
LABEL_25:
    uint64_t v126 = (uint64_t)v251;
    return sub_25B94F65C(v126);
  }
  switch(v101)
  {
    case 1:
      LOBYTE(v254) = 1;
      sub_25B9AA708();
      sub_25B9B4484();
      sub_25B959038();
      v114();
      swift_unknownObjectRelease();
      sub_25B959038();
      v115();
      uint64_t v116 = (uint64_t)v252;
      sub_25B9B47EC();
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    case 2:
      LOBYTE(v254) = 2;
      sub_25B9AA6BC();
      sub_25B9B4484();
      type metadata accessor for MailMessage();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51B2F8, (void (*)(uint64_t))type metadata accessor for MailMessage);
      sub_25B9B47E0();
      uint64_t v117 = (uint64_t)v200;
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51CAC0);
      LOBYTE(v254) = 1;
      sub_25B99E348();
      sub_25B9B44EC();
      sub_25B959038();
      v161();
      swift_unknownObjectRelease();
      uint64_t v162 = sub_25B9B44A4();
      v163(v162);
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v117;
      goto LABEL_30;
    case 3:
      LOBYTE(v254) = 3;
      sub_25B9AA670();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51CAB0);
      LOBYTE(v254) = 0;
      sub_25B9557DC(&qword_26A51CC00, &qword_26A51CAB0);
      sub_25B9B4764();
      sub_25B9B44EC();
      uint64_t v128 = v260;
      sub_25B9B4504();
      sub_25B99E3F0();
      sub_25B9B44EC();
      uint64_t v165 = sub_25B9B4914();
      v166(v165);
      swift_unknownObjectRelease();
      sub_25B959038();
      v167();
      uint64_t v168 = v254;
      char v169 = v256;
      int v170 = v258;
      uint64_t v171 = v259;
      unint64_t v105 = (unint64_t)v197;
      *uint64_t v197 = v128;
      *(void *)(v105 + 8) = v168;
      *(_OWORD *)(v105 + 16) = v255;
      *(unsigned char *)(v105 + 32) = v169;
      *(_OWORD *)(v105 + 40) = v257;
      *(_DWORD *)(v105 + 56) = v170;
      *(void *)(v105 + 64) = v171;
      sub_25B9B47EC();
      goto LABEL_29;
    case 4:
      LOBYTE(v254) = 4;
      sub_25B9AA5D8();
      sub_25B9B4484();
      type metadata accessor for TextMessage();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51B2E8, (void (*)(uint64_t))type metadata accessor for TextMessage);
      sub_25B9B47E0();
      sub_25B9B4710();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51CA90);
      sub_25B9B4604();
      sub_25B9AEBC0();
      sub_25B9B44CC();
      sub_25B959038();
      v129();
      swift_unknownObjectRelease();
      uint64_t v130 = sub_25B9B44A4();
      v131(v130);
      sub_25B9B4840();
      goto LABEL_28;
    case 5:
      LOBYTE(v254) = 5;
      sub_25B9AA540();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51CA78);
      LOBYTE(v254) = 0;
      sub_25B9557DC(&qword_26A51CBE8, &qword_26A51CA78);
      sub_25B9B4764();
      sub_25B9B44EC();
      sub_25B9B4964();
      sub_25B9B4504();
      sub_25B9AEB74();
      sub_25B9B44EC();
      unint64_t v105 = v216;
      uint64_t v172 = sub_25B9B484C();
      v173(v172);
      swift_unknownObjectRelease();
      uint64_t v174 = sub_25B9B4510();
      v175(v174);
      sub_25B9B4744(v254);
      goto LABEL_29;
    case 6:
      LOBYTE(v254) = 6;
      sub_25B9AA4A8();
      sub_25B9B4484();
      type metadata accessor for UserNotification();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51B2D8, (void (*)(uint64_t))type metadata accessor for UserNotification);
      sub_25B9B47E0();
      sub_25B9B4710();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51CA58);
      sub_25B9B4604();
      sub_25B9AEB28();
      sub_25B9B44CC();
      sub_25B959038();
      v176();
      swift_unknownObjectRelease();
      uint64_t v177 = sub_25B9B44A4();
      v178(v177);
      sub_25B9B4840();
      goto LABEL_28;
    case 7:
      LOBYTE(v254) = 7;
      sub_25B9AA410();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51CA40);
      LOBYTE(v254) = 0;
      sub_25B9557DC(&qword_26A51CBD0, &qword_26A51CA40);
      sub_25B9B4764();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B9B4504();
      sub_25B9AEADC();
      sub_25B9B44CC();
      unint64_t v105 = v220;
      uint64_t v132 = sub_25B9B465C();
      v133(v132);
      swift_unknownObjectRelease();
      sub_25B9B44BC();
      v134();
      sub_25B9B4744(v254);
      goto LABEL_29;
    case 8:
      LOBYTE(v254) = 8;
      sub_25B9AA3C4();
      sub_25B9B4484();
      sub_25B9EC310();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51CBC8, MEMORY[0x263F07648]);
      sub_25B9B47E0();
      sub_25B9B4710();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51CA20);
      LOBYTE(v254) = 1;
      sub_25B9AEA90();
      sub_25B9B44CC();
      sub_25B959038();
      v179();
      swift_unknownObjectRelease();
      uint64_t v180 = sub_25B9B44A4();
      v181(v180);
      sub_25B9B4840();
      goto LABEL_28;
    case 9:
      LOBYTE(v254) = 9;
      sub_25B9AA378();
      sub_25B9B4484();
      LOBYTE(v254) = 0;
      uint64_t v118 = sub_25B9B4618();
      uint64_t v120 = v119;
      LOBYTE(v260) = 1;
      sub_25B9AEA90();
      sub_25B9B458C();
      sub_25B959038();
      v146();
      swift_unknownObjectRelease();
      uint64_t v147 = sub_25B9A554C();
      v148(v147);
      char v149 = v254;
      int v150 = v256;
      uint64_t v109 = v202;
      *uint64_t v202 = v118;
      v109[1] = v120;
      *((unsigned char *)v109 + 16) = v149;
      *(_OWORD *)(v109 + 3) = v255;
      *((_DWORD *)v109 + 10) = v150;
      goto LABEL_27;
    case 10:
      LOBYTE(v254) = 10;
      sub_25B9AA32C();
      sub_25B9B4484();
      sub_25B9B48E4();
      sub_25B9B4618();
      sub_25B9B4964();
      sub_25B9B49E4();
      sub_25B9B458C();
      sub_25B959038();
      v151();
      swift_unknownObjectRelease();
      uint64_t v152 = sub_25B9B4510();
      v153(v152);
      sub_25B9B4720(v254);
      goto LABEL_29;
    case 11:
      LOBYTE(v254) = 11;
      sub_25B9AA294();
      sub_25B9B4484();
      sub_25B9B48E4();
      sub_25B9B4618();
      sub_25B9B4964();
      sub_25B9B49E4();
      sub_25B9B458C();
      sub_25B959038();
      v154();
      swift_unknownObjectRelease();
      uint64_t v155 = sub_25B9B4510();
      v156(v155);
      sub_25B9B4720(v254);
      goto LABEL_29;
    case 12:
      LOBYTE(v254) = 12;
      sub_25B9AA1FC();
      sub_25B9B4484();
      sub_25B9B48E4();
      sub_25B9B4618();
      sub_25B9B4964();
      uint64_t v122 = v121;
      uint64_t v124 = v123;
      LOBYTE(v260) = 1;
      sub_25B9AEA44();
      sub_25B9B458C();
      sub_25B959038();
      v157();
      swift_unknownObjectRelease();
      uint64_t v158 = sub_25B9B4510();
      v159(v158);
      char v160 = v254;
      unint64_t v105 = (unint64_t)v203;
      *uint64_t v203 = v122;
      *(void *)(v105 + 8) = v124;
      *(unsigned char *)(v105 + 16) = v160;
      goto LABEL_29;
    case 13:
      LOBYTE(v254) = 13;
      sub_25B9AA114();
      sub_25B9B4484();
      type metadata accessor for MailMessage();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51B2F8, (void (*)(uint64_t))type metadata accessor for MailMessage);
      sub_25B9B47E0();
      sub_25B9B4710();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51C9E0);
      sub_25B9B4604();
      sub_25B99E534();
      sub_25B9B44CC();
      sub_25B959038();
      v182();
      swift_unknownObjectRelease();
      uint64_t v183 = sub_25B9B44A4();
      v184(v183);
      sub_25B9B4840();
      goto LABEL_28;
    case 14:
      LOBYTE(v254) = 14;
      sub_25B9AA06C();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51C9D0);
      LOBYTE(v260) = 0;
      sub_25B9557DC(&qword_26A51CBB0, &qword_26A51C9D0);
      sub_25B9B4970();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B9B4504();
      sub_25B99E494();
      sub_25B9B44CC();
      unint64_t v105 = v234;
      uint64_t v135 = sub_25B9B465C();
      v136(v135);
      swift_unknownObjectRelease();
      sub_25B9B44BC();
      v137();
      sub_25B9B4818(v260);
      goto LABEL_29;
    case 15:
      LOBYTE(v254) = 15;
      sub_25B9A9FD4();
      sub_25B9B4484();
      type metadata accessor for TextMessage();
      sub_25B9B47F8();
      sub_25B9AA160(&qword_26A51B2E8, (void (*)(uint64_t))type metadata accessor for TextMessage);
      sub_25B9B47E0();
      sub_25B9B4710();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B94E854(&qword_26A51C9B0);
      sub_25B9B4604();
      sub_25B9AE9F8();
      sub_25B9B44CC();
      sub_25B959038();
      v185();
      swift_unknownObjectRelease();
      uint64_t v186 = sub_25B9B44A4();
      v187(v186);
      sub_25B9B4840();
LABEL_28:
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v96;
      goto LABEL_30;
    case 16:
      LOBYTE(v254) = 16;
      sub_25B9A9F3C();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51C998);
      LOBYTE(v260) = 0;
      sub_25B9557DC(&qword_26A51CB98, &qword_26A51C998);
      sub_25B9B4970();
      sub_25B9B44EC();
      sub_25B9B4674();
      sub_25B9B4504();
      sub_25B9AE9AC();
      sub_25B9B44CC();
      unint64_t v105 = v240;
      uint64_t v188 = sub_25B9B465C();
      v189(v188);
      swift_unknownObjectRelease();
      sub_25B9B44BC();
      v190();
      sub_25B9B4818(v260);
      goto LABEL_29;
    case 17:
      LOBYTE(v254) = 17;
      sub_25B9A9EF0();
      sub_25B9B4484();
      LOBYTE(v260) = 0;
      sub_25B9A1C30();
      sub_25B9B44CC();
      uint64_t v125 = v246;
      uint64_t v138 = v98;
      uint64_t v139 = v255;
      uint64_t v140 = v256;
      uint64_t v248 = *((void *)&v255 + 1);
      uint64_t v249 = v254;
      sub_25B9B4504();
      sub_25B9A1B64();
      sub_25B9ED590();
      sub_25B959038();
      v191();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v138, v97);
      char v192 = v260;
      char v193 = BYTE1(v260);
      char v194 = BYTE2(v260);
      unint64_t v105 = (unint64_t)v204;
      *uint64_t v204 = v249;
      *(void *)(v105 + 8) = v139;
      *(void *)(v105 + 16) = v248;
      *(void *)(v105 + 24) = v140;
      *(unsigned char *)(v105 + 32) = v192;
      *(unsigned char *)(v105 + 33) = v193;
      *(unsigned char *)(v105 + 34) = v194;
LABEL_29:
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = v105;
      goto LABEL_30;
    case 18:
      LOBYTE(v254) = 18;
      sub_25B9A9EA4();
      sub_25B9B4484();
      sub_25B9ED560();
      uint64_t v142 = v141;
      sub_25B959038();
      v143();
      swift_unknownObjectRelease();
      uint64_t v144 = sub_25B9B46F8();
      v145(v144);
      uint64_t v109 = v205;
      *uint64_t v205 = v142;
      goto LABEL_27;
    default:
      LOBYTE(v254) = 0;
      sub_25B9AA754();
      sub_25B9B4484();
      sub_25B94E854(&qword_26A51CAE0);
      sub_25B9AEC0C(&qword_26A51CC08, (void (*)(void))sub_25B9AEC78);
      sub_25B9B44EC();
      sub_25B959038();
      v106();
      swift_unknownObjectRelease();
      uint64_t v107 = sub_25B9B46F8();
      v108(v107);
      uint64_t v109 = v199;
      *uint64_t v199 = v254;
LABEL_27:
      swift_storeEnumTagMultiPayload();
      uint64_t v164 = (uint64_t)v109;
LABEL_30:
      uint64_t v116 = (uint64_t)v252;
      sub_25B9AA0B8(v164, (uint64_t)v252, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
LABEL_31:
      uint64_t v195 = (uint64_t)v251;
      sub_25B9AA0B8(v116, v244, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
      uint64_t v126 = v195;
      break;
  }
  return sub_25B94F65C(v126);
}

uint64_t sub_25B9AC9AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SummarizationXPCRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_25B9AC9C4(void *a1)
{
  return SummarizationXPCRequest.Request.encode(to:)(a1);
}

uint64_t SummarizationXPCRequest.RequestInfo.requestIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t SummarizationXPCRequest.RequestInfo.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SummarizationXPCRequest.RequestInfo.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t SummarizationXPCRequest.RequestInfo.useCaseIdentifier.getter()
{
  return sub_25B9593F8();
}

uint64_t SummarizationXPCRequest.RequestInfo.useCaseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SummarizationXPCRequest.RequestInfo.useCaseIdentifier.modify())()
{
  return nullsub_1;
}

Sage::SummarizationXPCRequest::RequestInfo __swiftcall SummarizationXPCRequest.RequestInfo.init(requestIdentifier:useCaseIdentifier:)(Swift::String requestIdentifier, Swift::String useCaseIdentifier)
{
  *uint64_t v2 = requestIdentifier;
  v2[1] = useCaseIdentifier;
  result.useCaseIdentifier = useCaseIdentifier;
  result.requestIdentifier = requestIdentifier;
  return result;
}

uint64_t sub_25B9ACAF0(uint64_t a1)
{
  unint64_t v2 = sub_25B9AECC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9ACB2C(uint64_t a1)
{
  unint64_t v2 = sub_25B9AECC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SummarizationXPCRequest.RequestInfo.encode(to:)(void *a1)
{
  sub_25B94E854(&qword_26A51CC18);
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B959380();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9AECC4();
  sub_25B9ED7B0();
  sub_25B9ED610();
  if (!v6) {
    sub_25B9ED610();
  }
  uint64_t v3 = sub_25B96D9F4();
  return v4(v3);
}

uint64_t SummarizationXPCRequest.RequestInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51CC28);
  sub_25B950790();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_25B950870();
  uint64_t v11 = v10 - v9;
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9AECC4();
  sub_25B9ED7A0();
  if (v2) {
    return sub_25B94F65C((uint64_t)a1);
  }
  uint64_t v12 = sub_25B9ED540();
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_25B9ED540();
  uint64_t v17 = v16;
  uint64_t v19 = v15;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v19;
  a2[3] = v17;
  swift_bridgeObjectRetain();
  sub_25B94F65C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9ACE60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SummarizationXPCRequest.RequestInfo.init(from:)(a1, a2);
}

uint64_t sub_25B9ACE78(void *a1)
{
  return SummarizationXPCRequest.RequestInfo.encode(to:)(a1);
}

uint64_t sub_25B9ACE90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarizationXPCRequest.Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25B9A9E40(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_25B9ACF5C();
}

uint64_t sub_25B9ACF1C@<X0>(uint64_t a1@<X8>)
{
  sub_25B9593B0();
  return sub_25B9A9E40(v1, a1);
}

uint64_t sub_25B9ACF5C()
{
  swift_beginAccess();
  uint64_t v0 = sub_25B9593F8();
  sub_25B9B43D4(v0, v1);
  return swift_endAccess();
}

double sub_25B9ACFB4@<D0>(uint64_t a1@<X8>)
{
  sub_25B9AD048(&v5);
  double result = *(double *)&v5;
  uint64_t v3 = v6;
  uint64_t v4 = v7;
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_25B9ACFF8(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  *(void *)&long long v5 = *a1;
  *((void *)&v5 + 1) = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_25B9AD098(&v5);
}

uint64_t sub_25B9AD048@<X0>(void *a1@<X8>)
{
  sub_25B9593B0();
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9AD098(long long *a1)
{
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo;
  sub_25B995018();
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9AD108@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9AD1C4(a1);
}

uint64_t sub_25B9AD114(uint64_t *a1)
{
  return sub_25B9AD214(a1, &OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess);
}

double sub_25B9AD120@<D0>(void (*a1)(long long *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  a1(&v5);
  int v3 = v6;
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_DWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_25B9AD168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 16);
  v9[0] = *(void *)a1;
  v9[1] = v6;
  int v10 = v7;
  swift_bridgeObjectRetain();
  return a5(v9);
}

uint64_t sub_25B9AD1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9AD1C4(a1);
}

uint64_t sub_25B9AD1C4@<X0>(uint64_t a1@<X8>)
{
  sub_25B9593B0();
  uint64_t v3 = *(void *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9AD208(uint64_t *a1)
{
  return sub_25B9AD214(a1, &OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess);
}

uint64_t sub_25B9AD214(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  int v5 = *((_DWORD *)a1 + 4);
  uint64_t v6 = v2 + *a2;
  sub_25B995018();
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = v4;
  *(_DWORD *)(v6 + 16) = v5;
  return swift_bridgeObjectRelease();
}

id SummarizationXPCRequest.__allocating_init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(uint64_t a1, long long *a2, uint64_t *a3, uint64_t *a4)
{
  id v9 = objc_allocWithZone(v4);
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(a1, a2, a3, a4);
}

id SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(uint64_t a1, long long *a2, uint64_t *a3, uint64_t *a4)
{
  long long v18 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v7 = *((void *)a2 + 3);
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  int v10 = *((_DWORD *)a3 + 4);
  uint64_t v19 = a4[1];
  uint64_t v20 = *a4;
  int v11 = *((_DWORD *)a4 + 4);
  uint64_t v12 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *((_DWORD *)v12 + 4) = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *((_DWORD *)v13 + 4) = 0;
  sub_25B9A9E40(a1, (uint64_t)&v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request]);
  uint64_t v14 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo];
  *(_OWORD *)uint64_t v14 = v18;
  *((void *)v14 + 2) = v6;
  *((void *)v14 + 3) = v7;
  sub_25B995018();
  *(void *)uint64_t v12 = v9;
  *((void *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = v10;
  uint64_t v15 = v4;
  swift_bridgeObjectRelease();
  sub_25B995018();
  *(void *)uint64_t v13 = v20;
  *((void *)v13 + 1) = v19;
  *((_DWORD *)v13 + 4) = v11;

  swift_bridgeObjectRelease();
  v21.receiver = v15;
  v21.super_class = (Class)type metadata accessor for SummarizationXPCRequest(0);
  id v16 = objc_msgSendSuper2(&v21, sel_init);
  sub_25B9AA1A8(a1, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
  return v16;
}

id SummarizationXPCRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SummarizationXPCRequest.init(coder:)(a1);
}

id SummarizationXPCRequest.init(coder:)(void *a1)
{
  uint64_t v3 = type metadata accessor for SummarizationXPCRequest.Request(0);
  MEMORY[0x270FA5388](v3 - 8);
  sub_25B950870();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = &v1[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess];
  *((_DWORD *)v8 + 4) = 0;
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = v1;
  sub_25B955174();
  sub_25B9AA0B8(v6, (uint64_t)&v9[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request], (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
  sub_25B9ADEC8();
  uint64_t v10 = v27;
  uint64_t v11 = v28;
  uint64_t v12 = &v9[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo];
  *(_OWORD *)uint64_t v12 = v26;
  *((void *)v12 + 2) = v10;
  *((void *)v12 + 3) = v11;
  sub_25B9AE12C((uint64_t)v22);
  uint64_t v13 = v8;
  uint64_t v14 = v22[0];
  uint64_t v15 = v22[1];
  int v16 = v23;
  sub_25B995018();
  *(void *)uint64_t v7 = v14;
  *((void *)v7 + 1) = v15;
  *((_DWORD *)v7 + 4) = v16;
  swift_bridgeObjectRelease();
  sub_25B9AE12C((uint64_t)v24);
  uint64_t v18 = v24[0];
  uint64_t v19 = v24[1];
  LODWORD(v15) = v25;
  sub_25B995018();
  *(void *)uint64_t v13 = v18;
  *((void *)v13 + 1) = v19;
  *((_DWORD *)v13 + 4) = v15;

  swift_bridgeObjectRelease();
  v21.receiver = v9;
  v21.super_class = (Class)type metadata accessor for XPCValue();
  id v20 = objc_msgSendSuper2(&v21, sel_init);

  return v20;
}

void sub_25B9AD924(void *a1)
{
  sub_25B9EB950(a1);
  sub_25B9AD048(&v17);
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B9AED30();
  uint64_t v2 = sub_25B9EC1D0();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_25B9EC280();
  sub_25B955A74(v2, v4);
  sub_25B94E898();
  uint64_t v6 = (void *)sub_25B9ECFC0();
  sub_25B9B4984();

  sub_25B9AD108((uint64_t)&v17);
  if (v18)
  {
    sub_25B99DCF0();
    uint64_t v7 = sub_25B9EC1D0();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_25B9EC280();
    sub_25B955A74(v7, v9);
    uint64_t v11 = (void *)sub_25B9ECFC0();
    sub_25B9B4984();
  }
  sub_25B9AD1B8((uint64_t)&v17);
  if (v18)
  {
    sub_25B99DCF0();
    uint64_t v12 = sub_25B9EC1D0();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)sub_25B9EC280();
    sub_25B955A74(v12, v14);
    int v16 = (void *)sub_25B9ECFC0();
    objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);
  }
}

uint64_t sub_25B9ADD8C()
{
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  swift_beginAccess();
  uint64_t v2 = sub_25B9B47EC();
  sub_25B9A9E40(v2, v3);
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B9AA160(&qword_26A51CE58, (void (*)(uint64_t))type metadata accessor for SummarizationXPCRequest.Request);
  sub_25B9EC1D0();
  sub_25B9AA1A8(v0, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
  return sub_25B9593F8();
}

uint64_t sub_25B9ADEC8()
{
  sub_25B958EC8();
  uint64_t v1 = sub_25B9ED2A0();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    sub_25B9EC290();
  }
  type metadata accessor for XPCValue();
  sub_25B94E898();
  id v3 = sub_25B9EBBFC();
  swift_willThrow();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_25B9ECD70();
  sub_25B9559F0(v4, (uint64_t)qword_26A51C170);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_25B9ECD40();
  os_log_type_t v8 = sub_25B9ED230();
  if (os_log_type_enabled(v7, v8))
  {
    swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    sub_25B9591D4(5.8381e-34);
    _swift_stdlib_bridgeErrorToNSError();
    sub_25B959078();
    *unint64_t v9 = v0;

    sub_25B9591F4(&dword_25B94C000, v10, v11, "SummarizationXPCRequest.decodeRequestInfo(coder:) failed with error: %{public}@");
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  return swift_willThrow();
}

void sub_25B9AE12C(uint64_t a1@<X8>)
{
  sub_25B958EC8();
  uint64_t v2 = sub_25B9ED2A0();
  if (v2)
  {
    id v3 = (void *)v2;
    sub_25B9EC290();
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
}

id SummarizationXPCRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SummarizationXPCRequest.init()()
{
}

uint64_t sub_25B9AE3F8()
{
  sub_25B9AA1A8(v0 + OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id SummarizationXPCRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummarizationXPCRequest(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t SummarizationXPCRequest.Request.Category.description.getter()
{
  unint64_t result = 0x6962616C69617661;
  switch(*v0)
  {
    case 1:
      unint64_t result = sub_25B9B46D8();
      break;
    case 2:
      unint64_t result = sub_25B9B478C();
      break;
    case 3:
      unint64_t result = sub_25B9B4638();
      break;
    case 4:
      unint64_t result = sub_25B9B4804();
      break;
    case 5:
      unint64_t result = 1953719668;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t SummarizationXPCRequest.Request.Category.rawValue.getter()
{
  unint64_t result = 0x6962616C69617661;
  switch(*v0)
  {
    case 1:
      unint64_t result = sub_25B9B46D8();
      break;
    case 2:
      unint64_t result = sub_25B9B478C();
      break;
    case 3:
      unint64_t result = sub_25B9B4638();
      break;
    case 4:
      unint64_t result = sub_25B9B4804();
      break;
    case 5:
      unint64_t result = 1953719668;
      break;
    default:
      return result;
  }
  return result;
}

Sage::SummarizationXPCRequest::Request::Category_optional __swiftcall SummarizationXPCRequest.Request.Category.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  unint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *objc_super v2 = v5;
  return result;
}

uint64_t sub_25B9AE6B8(unsigned __int8 *a1, char *a2)
{
  return sub_25B9B980C(*a1, *a2);
}

uint64_t sub_25B9AE6C4()
{
  return sub_25B9CE1D4(*v0);
}

uint64_t sub_25B9AE6CC(uint64_t a1)
{
  return sub_25B9CE31C(a1, *v1);
}

uint64_t sub_25B9AE6D4(uint64_t a1)
{
  return sub_25B9CEB4C(a1, *v1);
}

Sage::SummarizationXPCRequest::Request::Category_optional sub_25B9AE6DC(Swift::String *a1)
{
  return SummarizationXPCRequest.Request.Category.init(rawValue:)(*a1);
}

unint64_t sub_25B9AE6E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SummarizationXPCRequest.Request.Category.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SummarizationXPCRequest.Request.category.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v4);
  sub_25B950870();
  uint64_t v7 = v6 - v5;
  sub_25B9A9E40(v2, v6 - v5);
  sub_25B9B47EC();
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v9 = 2;
  switch((int)result)
  {
    case 1:
      sub_25B94E854(&qword_26A51CAC0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
    case 4:
    case 6:
    case 9:
    case 11:
    case 13:
    case 15:
    case 16:
      uint64_t v10 = (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request;
      goto LABEL_9;
    case 3:
      sub_25B94E854(&qword_26A51CA90);
      sub_25B9B48F4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5:
      sub_25B94E854(&qword_26A51CA58);
      sub_25B9B48F4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = (void (*)(void))type metadata accessor for UserNotification;
      goto LABEL_9;
    case 7:
      sub_25B94E854(&qword_26A51CA20);
      swift_bridgeObjectRelease();
      sub_25B9EC310();
      sub_25B95097C();
      sub_25B959038();
      uint64_t result = v11();
      goto LABEL_13;
    case 8:
      uint64_t result = sub_25B9AA1A8(v7, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
LABEL_13:
      char v9 = 1;
      break;
    case 10:
      uint64_t result = sub_25B9AA1A8(v7, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
      char v9 = 4;
      break;
    case 12:
LABEL_5:
      uint64_t v10 = (void (*)(void))type metadata accessor for MailMessage;
      goto LABEL_9;
    case 14:
LABEL_7:
      uint64_t v10 = (void (*)(void))type metadata accessor for TextMessage;
LABEL_9:
      uint64_t result = sub_25B9AA1A8(v7, v10);
      char v9 = 3;
      break;
    case 17:
      char v9 = 5;
      break;
    case 18:
      break;
    default:
      uint64_t result = sub_25B9AA1A8(v7, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
      char v9 = 0;
      break;
  }
  *a1 = v9;
  return result;
}

unint64_t sub_25B9AE9AC()
{
  unint64_t result = qword_26A51CBA0;
  if (!qword_26A51CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBA0);
  }
  return result;
}

unint64_t sub_25B9AE9F8()
{
  unint64_t result = qword_26A51CBA8;
  if (!qword_26A51CBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBA8);
  }
  return result;
}

unint64_t sub_25B9AEA44()
{
  unint64_t result = qword_26A51CBB8;
  if (!qword_26A51CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBB8);
  }
  return result;
}

unint64_t sub_25B9AEA90()
{
  unint64_t result = qword_26A51CBC0;
  if (!qword_26A51CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBC0);
  }
  return result;
}

unint64_t sub_25B9AEADC()
{
  unint64_t result = qword_26A51CBD8;
  if (!qword_26A51CBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBD8);
  }
  return result;
}

unint64_t sub_25B9AEB28()
{
  unint64_t result = qword_26A51CBE0;
  if (!qword_26A51CBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBE0);
  }
  return result;
}

unint64_t sub_25B9AEB74()
{
  unint64_t result = qword_26A51CBF0;
  if (!qword_26A51CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBF0);
  }
  return result;
}

unint64_t sub_25B9AEBC0()
{
  unint64_t result = qword_26A51CBF8;
  if (!qword_26A51CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CBF8);
  }
  return result;
}

uint64_t sub_25B9AEC0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25B9524FC(&qword_26A51CAE0);
    a2();
    sub_25B9B47EC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25B9AEC78()
{
  unint64_t result = qword_26A51CC10;
  if (!qword_26A51CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC10);
  }
  return result;
}

unint64_t sub_25B9AECC4()
{
  unint64_t result = qword_26A51CC20;
  if (!qword_26A51CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC20);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationXPCRequest(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51CC48);
}

unint64_t sub_25B9AED30()
{
  unint64_t result = qword_26A51CC30;
  if (!qword_26A51CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC30);
  }
  return result;
}

unint64_t sub_25B9AED80()
{
  unint64_t result = qword_26A51CC38;
  if (!qword_26A51CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC38);
  }
  return result;
}

unint64_t sub_25B9AEDD0()
{
  unint64_t result = qword_26A51CC40;
  if (!qword_26A51CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC40);
  }
  return result;
}

uint64_t sub_25B9AEE1C@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9ACF1C(a1);
}

double sub_25B9AEE4C@<D0>(uint64_t a1@<X8>)
{
  return sub_25B9AD120((void (*)(long long *__return_ptr))sub_25B9AD108, a1);
}

uint64_t sub_25B9AEE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25B9AD168(a1, a2, a3, a4, sub_25B9AD114);
}

double sub_25B9AEEA4@<D0>(uint64_t a1@<X8>)
{
  return sub_25B9AD120((void (*)(long long *__return_ptr))sub_25B9AD1B8, a1);
}

uint64_t sub_25B9AEED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25B9AD168(a1, a2, a3, a4, sub_25B9AD208);
}

uint64_t sub_25B9AEEFC()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_25B9AEF04()
{
  uint64_t result = type metadata accessor for SummarizationXPCRequest.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummarizationXPCRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SummarizationXPCRequest);
}

uint64_t dispatch thunk of SummarizationXPCRequest.request.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.requestInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.onBehalfOfProcess.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.originatingProcess.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.__allocating_init(request:requestInfo:onBehalfOfProcess:originatingProcess:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

void type metadata accessor for SummarizationXPCRequest.Error()
{
}

char *initializeBufferWithCopyOfBuffer for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 1u:
        uint64_t v8 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v8;
        uint64_t v9 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v9;
        int v10 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v11 = *((void *)a2 + 4);
          uint64_t v12 = *((void *)a2 + 5);
          sub_25B9563BC(v11, v12, v10);
          *((void *)a1 + 4) = v11;
          *((void *)a1 + 5) = v12;
          a1[48] = v10;
        }
        uint64_t v50 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v50;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v51 = (int *)type metadata accessor for MailMessage();
        uint64_t v52 = v51[7];
        uint64_t v155 = &a1[v52];
        uint64_t v53 = &a2[v52];
        uint64_t v54 = sub_25B9EC2B0();
        uint64_t v55 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55(v155, v53, v54);
        a1[v51[8]] = a2[v51[8]];
        uint64_t v56 = v51[9];
        uint64_t v57 = &a1[v56];
        uint64_t v58 = &a2[v56];
        uint64_t v59 = *((void *)v58 + 1);
        *(void *)uint64_t v57 = *(void *)v58;
        *((void *)v57 + 1) = v59;
        uint64_t v60 = v51[10];
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        uint64_t v63 = *((void *)v62 + 1);
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = v63;
        *(void *)&a1[v51[11]] = *(void *)&a2[v51[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v64 = *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
        uint64_t v65 = &a1[v64];
        uint64_t v66 = &a2[v64];
        uint64_t v67 = *((void *)v66 + 1);
        *(void *)uint64_t v65 = *(void *)v66;
        *((void *)v65 + 1) = v67;
        *((void *)v65 + 2) = *((void *)v66 + 2);
        v65[24] = v66[24];
        uint64_t v68 = *((void *)v66 + 5);
        *((void *)v65 + 4) = *((void *)v66 + 4);
        *((void *)v65 + 5) = v68;
        *((_DWORD *)v65 + 12) = *((_DWORD *)v66 + 12);
        *((void *)v65 + 7) = *((void *)v66 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 2u:
        uint64_t v13 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v13;
        uint64_t v14 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v14;
        a1[32] = a2[32];
        uint64_t v15 = *((void *)a2 + 6);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = v15;
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 3u:
        uint64_t v16 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v16;
        uint64_t v17 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v17;
        int v18 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v19 = *((void *)a2 + 4);
          uint64_t v20 = *((void *)a2 + 5);
          sub_25B9563BC(v19, v20, v18);
          *((void *)a1 + 4) = v19;
          *((void *)a1 + 5) = v20;
          a1[48] = v18;
        }
        uint64_t v69 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v69;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v70 = (int *)type metadata accessor for TextMessage();
        uint64_t v71 = v70[7];
        uint64_t v156 = &a1[v71];
        uint64_t v72 = &a2[v71];
        uint64_t v73 = sub_25B9EC2B0();
        uint64_t v74 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v74(v156, v72, v73);
        a1[v70[8]] = a2[v70[8]];
        uint64_t v75 = v70[9];
        uint64_t v76 = &a1[v75];
        uint64_t v77 = &a2[v75];
        uint64_t v78 = *((void *)v77 + 1);
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = v78;
        uint64_t v79 = v70[10];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        uint64_t v82 = *((void *)v81 + 1);
        *(void *)uint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = v82;
        *(void *)&a1[v70[11]] = *(void *)&a2[v70[11]];
        *(void *)&a1[v70[12]] = *(void *)&a2[v70[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v83 = *(int *)(sub_25B94E854(&qword_26A51CA90) + 48);
        uint64_t v84 = &a1[v83];
        uint64_t v85 = &a2[v83];
        uint64_t v86 = *((void *)v85 + 1);
        *(void *)uint64_t v84 = *(void *)v85;
        *((void *)v84 + 1) = v86;
        uint64_t v87 = *((void *)v85 + 3);
        *((void *)v84 + 2) = *((void *)v85 + 2);
        *((void *)v84 + 3) = v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 4u:
      case 6u:
        uint64_t v21 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v21;
        uint64_t v22 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v22;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 5u:
        uint64_t v23 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v23;
        uint64_t v24 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v24;
        uint64_t v25 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25 == 1)
        {
          long long v26 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v26;
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = v25;
          int v47 = a2[64];
          swift_bridgeObjectRetain();
          if (v47 == 255)
          {
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
          }
          else
          {
            uint64_t v48 = *((void *)a2 + 6);
            uint64_t v49 = *((void *)a2 + 7);
            sub_25B9563BC(v48, v49, v47);
            *((void *)a1 + 6) = v48;
            *((void *)a1 + 7) = v49;
            a1[64] = v47;
          }
          uint64_t v122 = *((void *)a2 + 10);
          *((void *)a1 + 9) = *((void *)a2 + 9);
          *((void *)a1 + 10) = v122;
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        uint64_t v123 = *((void *)a2 + 13);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = v123;
        uint64_t v124 = (int *)type metadata accessor for UserNotification();
        uint64_t v125 = v124[10];
        id v159 = &a1[v125];
        uint64_t v126 = &a2[v125];
        uint64_t v127 = sub_25B9EC2B0();
        uint64_t v128 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v127 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v128(v159, v126, v127);
        a1[v124[11]] = a2[v124[11]];
        uint64_t v129 = v124[12];
        uint64_t v130 = &a1[v129];
        uint64_t v131 = &a2[v129];
        uint64_t v132 = *((void *)v131 + 1);
        *(void *)uint64_t v130 = *(void *)v131;
        *((void *)v130 + 1) = v132;
        uint64_t v133 = v124[13];
        uint64_t v134 = &a1[v133];
        uint64_t v135 = &a2[v133];
        uint64_t v136 = *((void *)v135 + 1);
        *(void *)uint64_t v134 = *(void *)v135;
        *((void *)v134 + 1) = v136;
        uint64_t v137 = v124[14];
        uint64_t v138 = &a1[v137];
        uint64_t v139 = &a2[v137];
        uint64_t v140 = *((void *)v139 + 1);
        *(void *)uint64_t v138 = *(void *)v139;
        *((void *)v138 + 1) = v140;
        uint64_t v141 = v124[15];
        uint64_t v142 = &a1[v141];
        uint64_t v143 = &a2[v141];
        uint64_t v144 = *((void *)v143 + 1);
        *(void *)uint64_t v142 = *(void *)v143;
        *((void *)v142 + 1) = v144;
        uint64_t v145 = v124[16];
        uint64_t v146 = &a1[v145];
        uint64_t v147 = &a2[v145];
        uint64_t v148 = *((void *)v147 + 1);
        *(void *)uint64_t v146 = *(void *)v147;
        *((void *)v146 + 1) = v148;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v149 = *(int *)(sub_25B94E854(&qword_26A51CA58) + 48);
        int v150 = &a1[v149];
        uint64_t v151 = &a2[v149];
        uint64_t v152 = *((void *)v151 + 1);
        *(void *)int v150 = *(void *)v151;
        *((void *)v150 + 1) = v152;
        uint64_t v153 = *((void *)v151 + 3);
        *((void *)v150 + 2) = *((void *)v151 + 2);
        *((void *)v150 + 3) = v153;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 7u:
        uint64_t v27 = sub_25B9EC310();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        *uint64_t v29 = *v30;
        uint64_t v31 = *((void *)v30 + 2);
        *((void *)v29 + 1) = *((void *)v30 + 1);
        *((void *)v29 + 2) = v31;
        *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 8u:
      case 9u:
      case 0xAu:
        uint64_t v32 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v32;
        a1[16] = a2[16];
        uint64_t v33 = *((void *)a2 + 4);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = v33;
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xBu:
        uint64_t v34 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v34;
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xCu:
        uint64_t v35 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v35;
        uint64_t v36 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v36;
        int v37 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v38 = *((void *)a2 + 4);
          uint64_t v39 = *((void *)a2 + 5);
          sub_25B9563BC(v38, v39, v37);
          *((void *)a1 + 4) = v38;
          *((void *)a1 + 5) = v39;
          a1[48] = v37;
        }
        uint64_t v88 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v88;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v89 = (int *)type metadata accessor for MailMessage();
        uint64_t v90 = v89[7];
        char v157 = &a1[v90];
        uint64_t v91 = &a2[v90];
        uint64_t v92 = sub_25B9EC2B0();
        uint64_t v93 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v93(v157, v91, v92);
        a1[v89[8]] = a2[v89[8]];
        uint64_t v94 = v89[9];
        uint64_t v95 = &a1[v94];
        uint64_t v96 = &a2[v94];
        uint64_t v97 = *((void *)v96 + 1);
        *(void *)uint64_t v95 = *(void *)v96;
        *((void *)v95 + 1) = v97;
        uint64_t v98 = v89[10];
        uint64_t v99 = &a1[v98];
        uint64_t v100 = &a2[v98];
        uint64_t v101 = *((void *)v100 + 1);
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = v101;
        *(void *)&a1[v89[11]] = *(void *)&a2[v89[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v102 = *(int *)(sub_25B94E854(&qword_26A51C9E0) + 48);
        uint64_t v103 = &a1[v102];
        unint64_t v104 = &a2[v102];
        *(_WORD *)uint64_t v103 = *(_WORD *)v104;
        v103[2] = v104[2];
        goto LABEL_36;
      case 0xDu:
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xEu:
        uint64_t v40 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v40;
        uint64_t v41 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v41;
        int v42 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          uint64_t v43 = *((void *)a2 + 4);
          uint64_t v44 = *((void *)a2 + 5);
          sub_25B9563BC(v43, v44, v42);
          *((void *)a1 + 4) = v43;
          *((void *)a1 + 5) = v44;
          a1[48] = v42;
        }
        uint64_t v105 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v105;
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v106 = (int *)type metadata accessor for TextMessage();
        uint64_t v107 = v106[7];
        uint64_t v158 = &a1[v107];
        uint64_t v108 = &a2[v107];
        uint64_t v109 = sub_25B9EC2B0();
        uint64_t v110 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v109 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v110(v158, v108, v109);
        a1[v106[8]] = a2[v106[8]];
        uint64_t v111 = v106[9];
        uint64_t v112 = &a1[v111];
        uint64_t v113 = &a2[v111];
        uint64_t v114 = *((void *)v113 + 1);
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = v114;
        uint64_t v115 = v106[10];
        uint64_t v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        uint64_t v118 = *((void *)v117 + 1);
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = v118;
        *(void *)&a1[v106[11]] = *(void *)&a2[v106[11]];
        *(void *)&a1[v106[12]] = *(void *)&a2[v106[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v119 = *(int *)(sub_25B94E854(&qword_26A51C9B0) + 48);
        uint64_t v120 = &a1[v119];
        uint64_t v121 = &a2[v119];
        *(_WORD *)uint64_t v120 = *(_WORD *)v121;
        v120[2] = v121[2];
        goto LABEL_36;
      case 0x10u:
        uint64_t v45 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v45;
        uint64_t v46 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v46;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        a1[34] = a2[34];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_36:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SummarizationXPCRequest.Request(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 11:
    case 13:
    case 15:
      goto LABEL_24;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v3);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      uint64_t v5 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25B94E854(&qword_26A51CAC0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v6 = *(unsigned __int8 *)(a1 + 48);
      if (v6 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v6);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      uint64_t v8 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = &qword_26A51CA90;
      goto LABEL_15;
    case 4:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40) != 1)
      {
        swift_bridgeObjectRelease();
        int v10 = *(unsigned __int8 *)(a1 + 64);
        if (v10 != 255) {
          sub_25B9566FC(*(void *)(a1 + 48), *(void *)(a1 + 56), v10);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = a1 + *(int *)(type metadata accessor for UserNotification() + 40);
      uint64_t v12 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = &qword_26A51CA58;
LABEL_15:
      sub_25B94E854(v9);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 7:
      uint64_t v13 = sub_25B9EC310();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      sub_25B94E854(&qword_26A51CA20);
      goto LABEL_24;
    case 8:
    case 9:
    case 10:
    case 16:
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v14 = *(unsigned __int8 *)(a1 + 48);
      if (v14 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      uint64_t v16 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 14:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v17 = *(unsigned __int8 *)(a1 + 48);
      if (v17 != 255) {
        sub_25B9566FC(*(void *)(a1 + 32), *(void *)(a1 + 40), v17);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      uint64_t v19 = sub_25B9EC2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 1u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      int v8 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v9 = *((void *)a2 + 4);
        uint64_t v10 = *((void *)a2 + 5);
        sub_25B9563BC(v9, v10, v8);
        *((void *)a1 + 4) = v9;
        *((void *)a1 + 5) = v10;
        a1[48] = v8;
      }
      uint64_t v48 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v48;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v49 = (int *)type metadata accessor for MailMessage();
      uint64_t v50 = v49[7];
      uint64_t v153 = &a1[v50];
      uint64_t v51 = &a2[v50];
      uint64_t v52 = sub_25B9EC2B0();
      uint64_t v53 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53(v153, v51, v52);
      a1[v49[8]] = a2[v49[8]];
      uint64_t v54 = v49[9];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      uint64_t v57 = *((void *)v56 + 1);
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      uint64_t v58 = v49[10];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      uint64_t v61 = *((void *)v60 + 1);
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v61;
      *(void *)&a1[v49[11]] = *(void *)&a2[v49[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v62 = *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      *((void *)v63 + 2) = *((void *)v64 + 2);
      v63[24] = v64[24];
      uint64_t v66 = *((void *)v64 + 5);
      *((void *)v63 + 4) = *((void *)v64 + 4);
      *((void *)v63 + 5) = v66;
      *((_DWORD *)v63 + 12) = *((_DWORD *)v64 + 12);
      *((void *)v63 + 7) = *((void *)v64 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 2u:
      uint64_t v11 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v11;
      uint64_t v12 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v12;
      a1[32] = a2[32];
      uint64_t v13 = *((void *)a2 + 6);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = v13;
      *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 3u:
      uint64_t v14 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v14;
      uint64_t v15 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v15;
      int v16 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v17 = *((void *)a2 + 4);
        uint64_t v18 = *((void *)a2 + 5);
        sub_25B9563BC(v17, v18, v16);
        *((void *)a1 + 4) = v17;
        *((void *)a1 + 5) = v18;
        a1[48] = v16;
      }
      uint64_t v67 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v67;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v68 = (int *)type metadata accessor for TextMessage();
      uint64_t v69 = v68[7];
      uint64_t v154 = &a1[v69];
      uint64_t v70 = &a2[v69];
      uint64_t v71 = sub_25B9EC2B0();
      uint64_t v72 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72(v154, v70, v71);
      a1[v68[8]] = a2[v68[8]];
      uint64_t v73 = v68[9];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      uint64_t v76 = *((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v76;
      uint64_t v77 = v68[10];
      uint64_t v78 = &a1[v77];
      uint64_t v79 = &a2[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v80;
      *(void *)&a1[v68[11]] = *(void *)&a2[v68[11]];
      *(void *)&a1[v68[12]] = *(void *)&a2[v68[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = *(int *)(sub_25B94E854(&qword_26A51CA90) + 48);
      uint64_t v82 = &a1[v81];
      uint64_t v83 = &a2[v81];
      uint64_t v84 = *((void *)v83 + 1);
      *(void *)uint64_t v82 = *(void *)v83;
      *((void *)v82 + 1) = v84;
      uint64_t v85 = *((void *)v83 + 3);
      *((void *)v82 + 2) = *((void *)v83 + 2);
      *((void *)v82 + 3) = v85;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 4u:
    case 6u:
      uint64_t v19 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v19;
      uint64_t v20 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v20;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 5u:
      uint64_t v21 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v21;
      uint64_t v22 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v22;
      uint64_t v23 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23 == 1)
      {
        long long v24 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v24;
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      }
      else
      {
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v23;
        int v45 = a2[64];
        swift_bridgeObjectRetain();
        if (v45 == 255)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          a1[64] = a2[64];
        }
        else
        {
          uint64_t v46 = *((void *)a2 + 6);
          uint64_t v47 = *((void *)a2 + 7);
          sub_25B9563BC(v46, v47, v45);
          *((void *)a1 + 6) = v46;
          *((void *)a1 + 7) = v47;
          a1[64] = v45;
        }
        uint64_t v120 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v120;
        a1[88] = a2[88];
        swift_bridgeObjectRetain();
      }
      uint64_t v121 = *((void *)a2 + 13);
      *((void *)a1 + 12) = *((void *)a2 + 12);
      *((void *)a1 + 13) = v121;
      uint64_t v122 = (int *)type metadata accessor for UserNotification();
      uint64_t v123 = v122[10];
      char v157 = &a1[v123];
      uint64_t v124 = &a2[v123];
      uint64_t v125 = sub_25B9EC2B0();
      uint64_t v126 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v125 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v126(v157, v124, v125);
      a1[v122[11]] = a2[v122[11]];
      uint64_t v127 = v122[12];
      uint64_t v128 = &a1[v127];
      uint64_t v129 = &a2[v127];
      uint64_t v130 = *((void *)v129 + 1);
      *(void *)uint64_t v128 = *(void *)v129;
      *((void *)v128 + 1) = v130;
      uint64_t v131 = v122[13];
      uint64_t v132 = &a1[v131];
      uint64_t v133 = &a2[v131];
      uint64_t v134 = *((void *)v133 + 1);
      *(void *)uint64_t v132 = *(void *)v133;
      *((void *)v132 + 1) = v134;
      uint64_t v135 = v122[14];
      uint64_t v136 = &a1[v135];
      uint64_t v137 = &a2[v135];
      uint64_t v138 = *((void *)v137 + 1);
      *(void *)uint64_t v136 = *(void *)v137;
      *((void *)v136 + 1) = v138;
      uint64_t v139 = v122[15];
      uint64_t v140 = &a1[v139];
      uint64_t v141 = &a2[v139];
      uint64_t v142 = *((void *)v141 + 1);
      *(void *)uint64_t v140 = *(void *)v141;
      *((void *)v140 + 1) = v142;
      uint64_t v143 = v122[16];
      uint64_t v144 = &a1[v143];
      uint64_t v145 = &a2[v143];
      uint64_t v146 = *((void *)v145 + 1);
      *(void *)uint64_t v144 = *(void *)v145;
      *((void *)v144 + 1) = v146;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v147 = *(int *)(sub_25B94E854(&qword_26A51CA58) + 48);
      uint64_t v148 = &a1[v147];
      uint64_t v149 = &a2[v147];
      uint64_t v150 = *((void *)v149 + 1);
      *(void *)uint64_t v148 = *(void *)v149;
      *((void *)v148 + 1) = v150;
      uint64_t v151 = *((void *)v149 + 3);
      *((void *)v148 + 2) = *((void *)v149 + 2);
      *((void *)v148 + 3) = v151;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 7u:
      uint64_t v25 = sub_25B9EC310();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      *uint64_t v27 = *v28;
      uint64_t v29 = *((void *)v28 + 2);
      *((void *)v27 + 1) = *((void *)v28 + 1);
      *((void *)v27 + 2) = v29;
      *((_DWORD *)v27 + 6) = *((_DWORD *)v28 + 6);
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 8u:
    case 9u:
    case 0xAu:
      uint64_t v30 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v30;
      a1[16] = a2[16];
      uint64_t v31 = *((void *)a2 + 4);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = v31;
      *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xBu:
      uint64_t v32 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v32;
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xCu:
      uint64_t v33 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v33;
      uint64_t v34 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v34;
      int v35 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v36 = *((void *)a2 + 4);
        uint64_t v37 = *((void *)a2 + 5);
        sub_25B9563BC(v36, v37, v35);
        *((void *)a1 + 4) = v36;
        *((void *)a1 + 5) = v37;
        a1[48] = v35;
      }
      uint64_t v86 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v86;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v87 = (int *)type metadata accessor for MailMessage();
      uint64_t v88 = v87[7];
      uint64_t v155 = &a1[v88];
      uint64_t v89 = &a2[v88];
      uint64_t v90 = sub_25B9EC2B0();
      uint64_t v91 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v91(v155, v89, v90);
      a1[v87[8]] = a2[v87[8]];
      uint64_t v92 = v87[9];
      uint64_t v93 = &a1[v92];
      uint64_t v94 = &a2[v92];
      uint64_t v95 = *((void *)v94 + 1);
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = v95;
      uint64_t v96 = v87[10];
      uint64_t v97 = &a1[v96];
      uint64_t v98 = &a2[v96];
      uint64_t v99 = *((void *)v98 + 1);
      *(void *)uint64_t v97 = *(void *)v98;
      *((void *)v97 + 1) = v99;
      *(void *)&a1[v87[11]] = *(void *)&a2[v87[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v100 = *(int *)(sub_25B94E854(&qword_26A51C9E0) + 48);
      uint64_t v101 = &a1[v100];
      uint64_t v102 = &a2[v100];
      *(_WORD *)uint64_t v101 = *(_WORD *)v102;
      v101[2] = v102[2];
      goto LABEL_34;
    case 0xDu:
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xEu:
      uint64_t v38 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v38;
      uint64_t v39 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v39;
      int v40 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        uint64_t v41 = *((void *)a2 + 4);
        uint64_t v42 = *((void *)a2 + 5);
        sub_25B9563BC(v41, v42, v40);
        *((void *)a1 + 4) = v41;
        *((void *)a1 + 5) = v42;
        a1[48] = v40;
      }
      uint64_t v103 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v103;
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      unint64_t v104 = (int *)type metadata accessor for TextMessage();
      uint64_t v105 = v104[7];
      uint64_t v156 = &a1[v105];
      uint64_t v106 = &a2[v105];
      uint64_t v107 = sub_25B9EC2B0();
      uint64_t v108 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v107 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v108(v156, v106, v107);
      a1[v104[8]] = a2[v104[8]];
      uint64_t v109 = v104[9];
      uint64_t v110 = &a1[v109];
      uint64_t v111 = &a2[v109];
      uint64_t v112 = *((void *)v111 + 1);
      *(void *)uint64_t v110 = *(void *)v111;
      *((void *)v110 + 1) = v112;
      uint64_t v113 = v104[10];
      uint64_t v114 = &a1[v113];
      uint64_t v115 = &a2[v113];
      uint64_t v116 = *((void *)v115 + 1);
      *(void *)uint64_t v114 = *(void *)v115;
      *((void *)v114 + 1) = v116;
      *(void *)&a1[v104[11]] = *(void *)&a2[v104[11]];
      *(void *)&a1[v104[12]] = *(void *)&a2[v104[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v117 = *(int *)(sub_25B94E854(&qword_26A51C9B0) + 48);
      uint64_t v118 = &a1[v117];
      uint64_t v119 = &a2[v117];
      *(_WORD *)uint64_t v118 = *(_WORD *)v119;
      v118[2] = v119[2];
      goto LABEL_34;
    case 0x10u:
      uint64_t v43 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v43;
      uint64_t v44 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v44;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      a1[34] = a2[34];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_25B9AA1A8((uint64_t)a1, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v6 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 == 255)
        {
          long long v30 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v30;
        }
        else
        {
          uint64_t v7 = *((void *)a2 + 4);
          uint64_t v8 = *((void *)a2 + 5);
          sub_25B9563BC(v7, v8, v6);
          *((void *)a1 + 4) = v7;
          *((void *)a1 + 5) = v8;
          a1[48] = v6;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v31 = (int *)type metadata accessor for MailMessage();
        uint64_t v32 = v31[7];
        uint64_t v117 = &a1[v32];
        uint64_t v33 = &a2[v32];
        uint64_t v34 = sub_25B9EC2B0();
        int v35 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35(v117, v33, v34);
        a1[v31[8]] = a2[v31[8]];
        uint64_t v36 = v31[9];
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        *(void *)uint64_t v37 = *(void *)v38;
        *((void *)v37 + 1) = *((void *)v38 + 1);
        uint64_t v39 = v31[10];
        int v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        *(void *)int v40 = *(void *)v41;
        *((void *)v40 + 1) = *((void *)v41 + 1);
        *(void *)&a1[v31[11]] = *(void *)&a2[v31[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v42 = *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
        uint64_t v43 = &a1[v42];
        uint64_t v44 = &a2[v42];
        *(void *)uint64_t v43 = *(void *)v44;
        *((void *)v43 + 1) = *((void *)v44 + 1);
        *((void *)v43 + 2) = *((void *)v44 + 2);
        v43[24] = v44[24];
        *((void *)v43 + 4) = *((void *)v44 + 4);
        *((void *)v43 + 5) = *((void *)v44 + 5);
        *((_DWORD *)v43 + 12) = *((_DWORD *)v44 + 12);
        *((void *)v43 + 7) = *((void *)v44 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        a1[32] = a2[32];
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          long long v45 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v45;
        }
        else
        {
          uint64_t v10 = *((void *)a2 + 4);
          uint64_t v11 = *((void *)a2 + 5);
          sub_25B9563BC(v10, v11, v9);
          *((void *)a1 + 4) = v10;
          *((void *)a1 + 5) = v11;
          a1[48] = v9;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v46 = (int *)type metadata accessor for TextMessage();
        uint64_t v47 = v46[7];
        uint64_t v118 = &a1[v47];
        uint64_t v48 = &a2[v47];
        uint64_t v49 = sub_25B9EC2B0();
        uint64_t v50 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50(v118, v48, v49);
        a1[v46[8]] = a2[v46[8]];
        uint64_t v51 = v46[9];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = *((void *)v53 + 1);
        uint64_t v54 = v46[10];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        *(void *)uint64_t v55 = *(void *)v56;
        *((void *)v55 + 1) = *((void *)v56 + 1);
        *(void *)&a1[v46[11]] = *(void *)&a2[v46[11]];
        *(void *)&a1[v46[12]] = *(void *)&a2[v46[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v57 = *(int *)(sub_25B94E854(&qword_26A51CA90) + 48);
        uint64_t v58 = &a1[v57];
        uint64_t v59 = &a2[v57];
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = *((void *)v59 + 1);
        *((void *)v58 + 2) = *((void *)v59 + 2);
        *((void *)v58 + 3) = *((void *)v59 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 4u:
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        uint64_t v12 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 == 1)
        {
          long long v13 = *((_OWORD *)a2 + 2);
          long long v14 = *((_OWORD *)a2 + 3);
          long long v15 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *((_OWORD *)a1 + 3) = v14;
          *((_OWORD *)a1 + 4) = v15;
          *((_OWORD *)a1 + 2) = v13;
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = *((void *)a2 + 5);
          int v27 = a2[64];
          swift_bridgeObjectRetain();
          if (v27 == 255)
          {
            long long v92 = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
            *((_OWORD *)a1 + 3) = v92;
          }
          else
          {
            uint64_t v28 = *((void *)a2 + 6);
            uint64_t v29 = *((void *)a2 + 7);
            sub_25B9563BC(v28, v29, v27);
            *((void *)a1 + 6) = v28;
            *((void *)a1 + 7) = v29;
            a1[64] = v27;
          }
          *((void *)a1 + 9) = *((void *)a2 + 9);
          *((void *)a1 + 10) = *((void *)a2 + 10);
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        uint64_t v93 = (int *)type metadata accessor for UserNotification();
        uint64_t v94 = v93[10];
        uint64_t v121 = &a1[v94];
        uint64_t v95 = &a2[v94];
        uint64_t v96 = sub_25B9EC2B0();
        uint64_t v97 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97(v121, v95, v96);
        a1[v93[11]] = a2[v93[11]];
        uint64_t v98 = v93[12];
        uint64_t v99 = &a1[v98];
        uint64_t v100 = &a2[v98];
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = *((void *)v100 + 1);
        uint64_t v101 = v93[13];
        uint64_t v102 = &a1[v101];
        uint64_t v103 = &a2[v101];
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        uint64_t v104 = v93[14];
        uint64_t v105 = &a1[v104];
        uint64_t v106 = &a2[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *((void *)v105 + 1) = *((void *)v106 + 1);
        uint64_t v107 = v93[15];
        uint64_t v108 = &a1[v107];
        uint64_t v109 = &a2[v107];
        *(void *)uint64_t v108 = *(void *)v109;
        *((void *)v108 + 1) = *((void *)v109 + 1);
        uint64_t v110 = v93[16];
        uint64_t v111 = &a1[v110];
        uint64_t v112 = &a2[v110];
        *(void *)uint64_t v111 = *(void *)v112;
        *((void *)v111 + 1) = *((void *)v112 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v113 = *(int *)(sub_25B94E854(&qword_26A51CA58) + 48);
        uint64_t v114 = &a1[v113];
        uint64_t v115 = &a2[v113];
        *(void *)uint64_t v114 = *(void *)v115;
        *((void *)v114 + 1) = *((void *)v115 + 1);
        *((void *)v114 + 2) = *((void *)v115 + 2);
        *((void *)v114 + 3) = *((void *)v115 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 7u:
        uint64_t v16 = sub_25B9EC310();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        *uint64_t v18 = *v19;
        *((void *)v18 + 1) = *((void *)v19 + 1);
        *((void *)v18 + 2) = *((void *)v19 + 2);
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 8u:
      case 9u:
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v20 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          long long v60 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v60;
        }
        else
        {
          uint64_t v21 = *((void *)a2 + 4);
          uint64_t v22 = *((void *)a2 + 5);
          sub_25B9563BC(v21, v22, v20);
          *((void *)a1 + 4) = v21;
          *((void *)a1 + 5) = v22;
          a1[48] = v20;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v61 = (int *)type metadata accessor for MailMessage();
        uint64_t v62 = v61[7];
        uint64_t v119 = &a1[v62];
        uint64_t v63 = &a2[v62];
        uint64_t v64 = sub_25B9EC2B0();
        uint64_t v65 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65(v119, v63, v64);
        a1[v61[8]] = a2[v61[8]];
        uint64_t v66 = v61[9];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        *(void *)uint64_t v67 = *(void *)v68;
        *((void *)v67 + 1) = *((void *)v68 + 1);
        uint64_t v69 = v61[10];
        uint64_t v70 = &a1[v69];
        uint64_t v71 = &a2[v69];
        *(void *)uint64_t v70 = *(void *)v71;
        *((void *)v70 + 1) = *((void *)v71 + 1);
        *(void *)&a1[v61[11]] = *(void *)&a2[v61[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v72 = *(int *)(sub_25B94E854(&qword_26A51C9E0) + 48);
        uint64_t v73 = &a1[v72];
        uint64_t v74 = &a2[v72];
        char v75 = v74[2];
        *(_WORD *)uint64_t v73 = *(_WORD *)v74;
        v73[2] = v75;
        goto LABEL_35;
      case 0xDu:
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xEu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v23 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          long long v76 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v76;
        }
        else
        {
          uint64_t v24 = *((void *)a2 + 4);
          uint64_t v25 = *((void *)a2 + 5);
          sub_25B9563BC(v24, v25, v23);
          *((void *)a1 + 4) = v24;
          *((void *)a1 + 5) = v25;
          a1[48] = v23;
        }
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        a1[72] = a2[72];
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v77 = (int *)type metadata accessor for TextMessage();
        uint64_t v78 = v77[7];
        uint64_t v120 = &a1[v78];
        uint64_t v79 = &a2[v78];
        uint64_t v80 = sub_25B9EC2B0();
        uint64_t v81 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81(v120, v79, v80);
        a1[v77[8]] = a2[v77[8]];
        uint64_t v82 = v77[9];
        uint64_t v83 = &a1[v82];
        uint64_t v84 = &a2[v82];
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = *((void *)v84 + 1);
        uint64_t v85 = v77[10];
        uint64_t v86 = &a1[v85];
        uint64_t v87 = &a2[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((void *)v86 + 1) = *((void *)v87 + 1);
        *(void *)&a1[v77[11]] = *(void *)&a2[v77[11]];
        *(void *)&a1[v77[12]] = *(void *)&a2[v77[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v88 = *(int *)(sub_25B94E854(&qword_26A51C9B0) + 48);
        uint64_t v89 = &a1[v88];
        uint64_t v90 = &a2[v88];
        char v91 = v90[2];
        *(_WORD *)uint64_t v89 = *(_WORD *)v90;
        v89[2] = v91;
        goto LABEL_35;
      case 0x10u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        __int16 v26 = *((_WORD *)a2 + 16);
        a1[34] = a2[34];
        *((_WORD *)a1 + 16) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for SummarizationXPCRequest.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v8 = (int *)type metadata accessor for MailMessage();
      uint64_t v9 = v8[7];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_25B9EC2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
      *(void *)((char *)a1 + v8[11]) = *(void *)((char *)a2 + v8[11]);
      uint64_t v13 = *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
      long long v14 = (_OWORD *)((char *)a1 + v13);
      long long v15 = (_OWORD *)((char *)a2 + v13);
      long long v16 = v15[1];
      _OWORD *v14 = *v15;
      v14[1] = v16;
      long long v17 = v15[3];
      _OWORD v14[2] = v15[2];
      void v14[3] = v17;
      goto LABEL_9;
    case 3u:
      long long v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      long long v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      int v20 = (int *)type metadata accessor for TextMessage();
      uint64_t v21 = v20[7];
      uint64_t v22 = (char *)a1 + v21;
      int v23 = (char *)a2 + v21;
      uint64_t v24 = sub_25B9EC2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *((unsigned char *)a1 + v20[8]) = *((unsigned char *)a2 + v20[8]);
      *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
      *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
      *(void *)((char *)a1 + v20[11]) = *(void *)((char *)a2 + v20[11]);
      *(void *)((char *)a1 + v20[12]) = *(void *)((char *)a2 + v20[12]);
      uint64_t v25 = *(int *)(sub_25B94E854(&qword_26A51CA90) + 48);
      __int16 v26 = (_OWORD *)((char *)a1 + v25);
      int v27 = (_OWORD *)((char *)a2 + v25);
      long long v28 = v27[1];
      *__int16 v26 = *v27;
      v26[1] = v28;
      goto LABEL_9;
    case 5u:
      long long v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      long long v30 = a2[3];
      a1[2] = a2[2];
      a1[3] = v30;
      a1[4] = a2[4];
      *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
      a1[6] = a2[6];
      uint64_t v31 = (int *)type metadata accessor for UserNotification();
      uint64_t v32 = v31[10];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      uint64_t v35 = sub_25B9EC2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *((unsigned char *)a1 + v31[11]) = *((unsigned char *)a2 + v31[11]);
      *(_OWORD *)((char *)a1 + v31[12]) = *(_OWORD *)((char *)a2 + v31[12]);
      *(_OWORD *)((char *)a1 + v31[13]) = *(_OWORD *)((char *)a2 + v31[13]);
      *(_OWORD *)((char *)a1 + v31[14]) = *(_OWORD *)((char *)a2 + v31[14]);
      *(_OWORD *)((char *)a1 + v31[15]) = *(_OWORD *)((char *)a2 + v31[15]);
      *(_OWORD *)((char *)a1 + v31[16]) = *(_OWORD *)((char *)a2 + v31[16]);
      uint64_t v36 = *(int *)(sub_25B94E854(&qword_26A51CA58) + 48);
      uint64_t v37 = (_OWORD *)((char *)a1 + v36);
      uint64_t v38 = (_OWORD *)((char *)a2 + v36);
      long long v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      goto LABEL_9;
    case 7u:
      uint64_t v40 = sub_25B9EC310();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
      uint64_t v41 = *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
      uint64_t v42 = (_OWORD *)((char *)a1 + v41);
      uint64_t v43 = (_OWORD *)((char *)a2 + v41);
      *uint64_t v42 = *v43;
      *(_OWORD *)((char *)v42 + 12) = *(_OWORD *)((char *)v43 + 12);
      goto LABEL_9;
    case 0xCu:
      long long v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      long long v45 = a2[3];
      a1[2] = a2[2];
      a1[3] = v45;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v46 = (int *)type metadata accessor for MailMessage();
      uint64_t v47 = v46[7];
      uint64_t v48 = (char *)a1 + v47;
      uint64_t v49 = (char *)a2 + v47;
      uint64_t v50 = sub_25B9EC2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      *((unsigned char *)a1 + v46[8]) = *((unsigned char *)a2 + v46[8]);
      *(_OWORD *)((char *)a1 + v46[9]) = *(_OWORD *)((char *)a2 + v46[9]);
      *(_OWORD *)((char *)a1 + v46[10]) = *(_OWORD *)((char *)a2 + v46[10]);
      *(void *)((char *)a1 + v46[11]) = *(void *)((char *)a2 + v46[11]);
      uint64_t v51 = *(int *)(sub_25B94E854(&qword_26A51C9E0) + 48);
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      *(_WORD *)uint64_t v52 = *(_WORD *)v53;
      uint64_t v52[2] = v53[2];
      goto LABEL_9;
    case 0xEu:
      long long v54 = a2[1];
      *a1 = *a2;
      a1[1] = v54;
      long long v55 = a2[3];
      a1[2] = a2[2];
      a1[3] = v55;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      uint64_t v56 = (int *)type metadata accessor for TextMessage();
      uint64_t v57 = v56[7];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = sub_25B9EC2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
      *(_OWORD *)((char *)a1 + v56[9]) = *(_OWORD *)((char *)a2 + v56[9]);
      *(_OWORD *)((char *)a1 + v56[10]) = *(_OWORD *)((char *)a2 + v56[10]);
      *(void *)((char *)a1 + v56[11]) = *(void *)((char *)a2 + v56[11]);
      *(void *)((char *)a1 + v56[12]) = *(void *)((char *)a2 + v56[12]);
      uint64_t v61 = *(int *)(sub_25B94E854(&qword_26A51C9B0) + 48);
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      *(_WORD *)uint64_t v62 = *(_WORD *)v63;
      v62[2] = v63[2];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SummarizationXPCRequest.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25B9AA1A8((uint64_t)a1, (void (*)(void))type metadata accessor for SummarizationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        long long v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v8 = (int *)type metadata accessor for MailMessage();
        uint64_t v9 = v8[7];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_25B9EC2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
        *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
        *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
        *(void *)((char *)a1 + v8[11]) = *(void *)((char *)a2 + v8[11]);
        uint64_t v13 = *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
        long long v14 = (_OWORD *)((char *)a1 + v13);
        long long v15 = (_OWORD *)((char *)a2 + v13);
        long long v16 = v15[1];
        _OWORD *v14 = *v15;
        v14[1] = v16;
        long long v17 = v15[3];
        _OWORD v14[2] = v15[2];
        void v14[3] = v17;
        goto LABEL_10;
      case 3u:
        long long v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        long long v19 = a2[3];
        a1[2] = a2[2];
        a1[3] = v19;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        int v20 = (int *)type metadata accessor for TextMessage();
        uint64_t v21 = v20[7];
        uint64_t v22 = (char *)a1 + v21;
        int v23 = (char *)a2 + v21;
        uint64_t v24 = sub_25B9EC2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        *((unsigned char *)a1 + v20[8]) = *((unsigned char *)a2 + v20[8]);
        *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
        *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
        *(void *)((char *)a1 + v20[11]) = *(void *)((char *)a2 + v20[11]);
        *(void *)((char *)a1 + v20[12]) = *(void *)((char *)a2 + v20[12]);
        uint64_t v25 = *(int *)(sub_25B94E854(&qword_26A51CA90) + 48);
        __int16 v26 = (_OWORD *)((char *)a1 + v25);
        int v27 = (_OWORD *)((char *)a2 + v25);
        long long v28 = v27[1];
        *__int16 v26 = *v27;
        v26[1] = v28;
        goto LABEL_10;
      case 5u:
        long long v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        long long v30 = a2[3];
        a1[2] = a2[2];
        a1[3] = v30;
        a1[4] = a2[4];
        *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
        a1[6] = a2[6];
        uint64_t v31 = (int *)type metadata accessor for UserNotification();
        uint64_t v32 = v31[10];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_25B9EC2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        *((unsigned char *)a1 + v31[11]) = *((unsigned char *)a2 + v31[11]);
        *(_OWORD *)((char *)a1 + v31[12]) = *(_OWORD *)((char *)a2 + v31[12]);
        *(_OWORD *)((char *)a1 + v31[13]) = *(_OWORD *)((char *)a2 + v31[13]);
        *(_OWORD *)((char *)a1 + v31[14]) = *(_OWORD *)((char *)a2 + v31[14]);
        *(_OWORD *)((char *)a1 + v31[15]) = *(_OWORD *)((char *)a2 + v31[15]);
        *(_OWORD *)((char *)a1 + v31[16]) = *(_OWORD *)((char *)a2 + v31[16]);
        uint64_t v36 = *(int *)(sub_25B94E854(&qword_26A51CA58) + 48);
        uint64_t v37 = (_OWORD *)((char *)a1 + v36);
        uint64_t v38 = (_OWORD *)((char *)a2 + v36);
        long long v39 = v38[1];
        *uint64_t v37 = *v38;
        v37[1] = v39;
        goto LABEL_10;
      case 7u:
        uint64_t v40 = sub_25B9EC310();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
        uint64_t v41 = *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
        uint64_t v42 = (_OWORD *)((char *)a1 + v41);
        uint64_t v43 = (_OWORD *)((char *)a2 + v41);
        *uint64_t v42 = *v43;
        *(_OWORD *)((char *)v42 + 12) = *(_OWORD *)((char *)v43 + 12);
        goto LABEL_10;
      case 0xCu:
        long long v44 = a2[1];
        *a1 = *a2;
        a1[1] = v44;
        long long v45 = a2[3];
        a1[2] = a2[2];
        a1[3] = v45;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v46 = (int *)type metadata accessor for MailMessage();
        uint64_t v47 = v46[7];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_25B9EC2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        *((unsigned char *)a1 + v46[8]) = *((unsigned char *)a2 + v46[8]);
        *(_OWORD *)((char *)a1 + v46[9]) = *(_OWORD *)((char *)a2 + v46[9]);
        *(_OWORD *)((char *)a1 + v46[10]) = *(_OWORD *)((char *)a2 + v46[10]);
        *(void *)((char *)a1 + v46[11]) = *(void *)((char *)a2 + v46[11]);
        uint64_t v51 = *(int *)(sub_25B94E854(&qword_26A51C9E0) + 48);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        *(_WORD *)uint64_t v52 = *(_WORD *)v53;
        uint64_t v52[2] = v53[2];
        goto LABEL_10;
      case 0xEu:
        long long v54 = a2[1];
        *a1 = *a2;
        a1[1] = v54;
        long long v55 = a2[3];
        a1[2] = a2[2];
        a1[3] = v55;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t v56 = (int *)type metadata accessor for TextMessage();
        uint64_t v57 = v56[7];
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = sub_25B9EC2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
        *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
        *(_OWORD *)((char *)a1 + v56[9]) = *(_OWORD *)((char *)a2 + v56[9]);
        *(_OWORD *)((char *)a1 + v56[10]) = *(_OWORD *)((char *)a2 + v56[10]);
        *(void *)((char *)a1 + v56[11]) = *(void *)((char *)a2 + v56[11]);
        *(void *)((char *)a1 + v56[12]) = *(void *)((char *)a2 + v56[12]);
        uint64_t v61 = *(int *)(sub_25B94E854(&qword_26A51C9B0) + 48);
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        *(_WORD *)uint64_t v62 = *(_WORD *)v63;
        v62[2] = v63[2];
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_25B9B2824()
{
  uint64_t v11 = MEMORY[0x263F8CF50] + 64;
  uint64_t result = type metadata accessor for MailMessage();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v10;
    uint64_t v13 = &unk_25B9F9D88;
    uint64_t result = type metadata accessor for TextMessage();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      long long v14 = &v9;
      long long v15 = &unk_25B9F9DA0;
      uint64_t result = type metadata accessor for UserNotification();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        long long v16 = &v8;
        long long v17 = &unk_25B9F9DA0;
        uint64_t result = sub_25B9EC310();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          long long v18 = &v7;
          long long v19 = &unk_25B9F9DD0;
          int v20 = &unk_25B9F9DD0;
          uint64_t v21 = &unk_25B9F9DD0;
          uint64_t v22 = &unk_25B9F9DE8;
          swift_getTupleTypeLayout2();
          int v23 = &v6;
          uint64_t v24 = &unk_25B9F9E18;
          swift_getTupleTypeLayout2();
          uint64_t v25 = &v5;
          __int16 v26 = &unk_25B9F9E18;
          int v27 = &unk_25B9F9E30;
          uint64_t v28 = MEMORY[0x263F8CF70] + 64;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void type metadata accessor for SummarizationXPCRequest.RequestInfo()
{
}

uint64_t getEnumTagSinglePayload for SummarizationXPCRequest.Request.Category(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummarizationXPCRequest.Request.Category(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9B2BB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for SummarizationXPCRequest.Request.Category()
{
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.RequestInfo.CodingKeys()
{
  return &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SummarizationXPCRequest.Request.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 18) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v5 = v6 - 19;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummarizationXPCRequest.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9B2D54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.CodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.PrewarmCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.PrewarmCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys;
}

unsigned char *_s4Sage23SummarizationXPCRequestC11RequestInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9B2F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys;
}

unsigned char *_s4Sage23SummarizationXPCRequestC5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9B303CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys;
}

unint64_t sub_25B9B3078()
{
  unint64_t result = qword_26A51CC68;
  if (!qword_26A51CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC68);
  }
  return result;
}

unint64_t sub_25B9B30C8()
{
  unint64_t result = qword_26A51CC70;
  if (!qword_26A51CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC70);
  }
  return result;
}

unint64_t sub_25B9B3118()
{
  unint64_t result = qword_26A51CC78;
  if (!qword_26A51CC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC78);
  }
  return result;
}

unint64_t sub_25B9B3168()
{
  unint64_t result = qword_26A51CC80;
  if (!qword_26A51CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC80);
  }
  return result;
}

unint64_t sub_25B9B31B8()
{
  unint64_t result = qword_26A51CC88;
  if (!qword_26A51CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC88);
  }
  return result;
}

unint64_t sub_25B9B3208()
{
  unint64_t result = qword_26A51CC90;
  if (!qword_26A51CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC90);
  }
  return result;
}

unint64_t sub_25B9B3258()
{
  unint64_t result = qword_26A51CC98;
  if (!qword_26A51CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CC98);
  }
  return result;
}

unint64_t sub_25B9B32A8()
{
  unint64_t result = qword_26A51CCA0;
  if (!qword_26A51CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCA0);
  }
  return result;
}

unint64_t sub_25B9B32F8()
{
  unint64_t result = qword_26A51CCA8;
  if (!qword_26A51CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCA8);
  }
  return result;
}

unint64_t sub_25B9B3348()
{
  unint64_t result = qword_26A51CCB0;
  if (!qword_26A51CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCB0);
  }
  return result;
}

unint64_t sub_25B9B3398()
{
  unint64_t result = qword_26A51CCB8;
  if (!qword_26A51CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCB8);
  }
  return result;
}

unint64_t sub_25B9B33E8()
{
  unint64_t result = qword_26A51CCC0;
  if (!qword_26A51CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCC0);
  }
  return result;
}

unint64_t sub_25B9B3438()
{
  unint64_t result = qword_26A51CCC8;
  if (!qword_26A51CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCC8);
  }
  return result;
}

unint64_t sub_25B9B3488()
{
  unint64_t result = qword_26A51CCD0;
  if (!qword_26A51CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCD0);
  }
  return result;
}

unint64_t sub_25B9B34D8()
{
  unint64_t result = qword_26A51CCD8;
  if (!qword_26A51CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCD8);
  }
  return result;
}

unint64_t sub_25B9B3528()
{
  unint64_t result = qword_26A51CCE0;
  if (!qword_26A51CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCE0);
  }
  return result;
}

unint64_t sub_25B9B3578()
{
  unint64_t result = qword_26A51CCE8;
  if (!qword_26A51CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCE8);
  }
  return result;
}

unint64_t sub_25B9B35C8()
{
  unint64_t result = qword_26A51CCF0;
  if (!qword_26A51CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCF0);
  }
  return result;
}

unint64_t sub_25B9B3618()
{
  unint64_t result = qword_26A51CCF8;
  if (!qword_26A51CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CCF8);
  }
  return result;
}

unint64_t sub_25B9B3668()
{
  unint64_t result = qword_26A51CD00;
  if (!qword_26A51CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD00);
  }
  return result;
}

unint64_t sub_25B9B36B8()
{
  unint64_t result = qword_26A51CD08;
  if (!qword_26A51CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD08);
  }
  return result;
}

unint64_t sub_25B9B3708()
{
  unint64_t result = qword_26A51CD10;
  if (!qword_26A51CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD10);
  }
  return result;
}

unint64_t sub_25B9B3758()
{
  unint64_t result = qword_26A51CD18;
  if (!qword_26A51CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD18);
  }
  return result;
}

unint64_t sub_25B9B37A8()
{
  unint64_t result = qword_26A51CD20;
  if (!qword_26A51CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD20);
  }
  return result;
}

unint64_t sub_25B9B37F8()
{
  unint64_t result = qword_26A51CD28;
  if (!qword_26A51CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD28);
  }
  return result;
}

unint64_t sub_25B9B3848()
{
  unint64_t result = qword_26A51CD30;
  if (!qword_26A51CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD30);
  }
  return result;
}

unint64_t sub_25B9B3898()
{
  unint64_t result = qword_26A51CD38;
  if (!qword_26A51CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD38);
  }
  return result;
}

unint64_t sub_25B9B38E8()
{
  unint64_t result = qword_26A51CD40;
  if (!qword_26A51CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD40);
  }
  return result;
}

unint64_t sub_25B9B3938()
{
  unint64_t result = qword_26A51CD48;
  if (!qword_26A51CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD48);
  }
  return result;
}

unint64_t sub_25B9B3988()
{
  unint64_t result = qword_26A51CD50;
  if (!qword_26A51CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD50);
  }
  return result;
}

unint64_t sub_25B9B39D8()
{
  unint64_t result = qword_26A51CD58;
  if (!qword_26A51CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD58);
  }
  return result;
}

unint64_t sub_25B9B3A28()
{
  unint64_t result = qword_26A51CD60;
  if (!qword_26A51CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD60);
  }
  return result;
}

unint64_t sub_25B9B3A78()
{
  unint64_t result = qword_26A51CD68;
  if (!qword_26A51CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD68);
  }
  return result;
}

unint64_t sub_25B9B3AC8()
{
  unint64_t result = qword_26A51CD70;
  if (!qword_26A51CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD70);
  }
  return result;
}

unint64_t sub_25B9B3B18()
{
  unint64_t result = qword_26A51CD78;
  if (!qword_26A51CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD78);
  }
  return result;
}

unint64_t sub_25B9B3B68()
{
  unint64_t result = qword_26A51CD80;
  if (!qword_26A51CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD80);
  }
  return result;
}

unint64_t sub_25B9B3BB8()
{
  unint64_t result = qword_26A51CD88;
  if (!qword_26A51CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD88);
  }
  return result;
}

unint64_t sub_25B9B3C08()
{
  unint64_t result = qword_26A51CD90;
  if (!qword_26A51CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD90);
  }
  return result;
}

unint64_t sub_25B9B3C58()
{
  unint64_t result = qword_26A51CD98;
  if (!qword_26A51CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CD98);
  }
  return result;
}

unint64_t sub_25B9B3CA8()
{
  unint64_t result = qword_26A51CDA0;
  if (!qword_26A51CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDA0);
  }
  return result;
}

unint64_t sub_25B9B3CF8()
{
  unint64_t result = qword_26A51CDA8;
  if (!qword_26A51CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDA8);
  }
  return result;
}

unint64_t sub_25B9B3D48()
{
  unint64_t result = qword_26A51CDB0;
  if (!qword_26A51CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDB0);
  }
  return result;
}

unint64_t sub_25B9B3D98()
{
  unint64_t result = qword_26A51CDB8;
  if (!qword_26A51CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDB8);
  }
  return result;
}

unint64_t sub_25B9B3DE8()
{
  unint64_t result = qword_26A51CDC0;
  if (!qword_26A51CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDC0);
  }
  return result;
}

unint64_t sub_25B9B3E38()
{
  unint64_t result = qword_26A51CDC8;
  if (!qword_26A51CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDC8);
  }
  return result;
}

unint64_t sub_25B9B3E88()
{
  unint64_t result = qword_26A51CDD0;
  if (!qword_26A51CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDD0);
  }
  return result;
}

unint64_t sub_25B9B3ED8()
{
  unint64_t result = qword_26A51CDD8;
  if (!qword_26A51CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDD8);
  }
  return result;
}

unint64_t sub_25B9B3F28()
{
  unint64_t result = qword_26A51CDE0;
  if (!qword_26A51CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDE0);
  }
  return result;
}

unint64_t sub_25B9B3F78()
{
  unint64_t result = qword_26A51CDE8;
  if (!qword_26A51CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDE8);
  }
  return result;
}

unint64_t sub_25B9B3FC8()
{
  unint64_t result = qword_26A51CDF0;
  if (!qword_26A51CDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDF0);
  }
  return result;
}

unint64_t sub_25B9B4018()
{
  unint64_t result = qword_26A51CDF8;
  if (!qword_26A51CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CDF8);
  }
  return result;
}

unint64_t sub_25B9B4068()
{
  unint64_t result = qword_26A51CE00;
  if (!qword_26A51CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE00);
  }
  return result;
}

unint64_t sub_25B9B40B8()
{
  unint64_t result = qword_26A51CE08;
  if (!qword_26A51CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE08);
  }
  return result;
}

unint64_t sub_25B9B4108()
{
  unint64_t result = qword_26A51CE10;
  if (!qword_26A51CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE10);
  }
  return result;
}

unint64_t sub_25B9B4158()
{
  unint64_t result = qword_26A51CE18;
  if (!qword_26A51CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE18);
  }
  return result;
}

unint64_t sub_25B9B41A8()
{
  unint64_t result = qword_26A51CE20;
  if (!qword_26A51CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE20);
  }
  return result;
}

unint64_t sub_25B9B41F8()
{
  unint64_t result = qword_26A51CE28;
  if (!qword_26A51CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE28);
  }
  return result;
}

unint64_t sub_25B9B4248()
{
  unint64_t result = qword_26A51CE30;
  if (!qword_26A51CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE30);
  }
  return result;
}

unint64_t sub_25B9B4298()
{
  unint64_t result = qword_26A51CE38;
  if (!qword_26A51CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE38);
  }
  return result;
}

unint64_t sub_25B9B42E8()
{
  unint64_t result = qword_26A51CE40;
  if (!qword_26A51CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE40);
  }
  return result;
}

unint64_t sub_25B9B4338()
{
  unint64_t result = qword_26A51CE48;
  if (!qword_26A51CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE48);
  }
  return result;
}

unint64_t sub_25B9B4388()
{
  unint64_t result = qword_26A51CE50;
  if (!qword_26A51CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE50);
  }
  return result;
}

uint64_t sub_25B9B43D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B9B4438()
{
  unint64_t result = qword_26A51CE60;
  if (!qword_26A51CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE60);
  }
  return result;
}

uint64_t sub_25B9B4484()
{
  return sub_25B9ED4F0();
}

uint64_t sub_25B9B44A4()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_25B9B44CC()
{
  return sub_25B9ED590();
}

uint64_t sub_25B9B44EC()
{
  return sub_25B9ED590();
}

void sub_25B9B4504()
{
  *(unsigned char *)(v0 - 89) = 1;
}

uint64_t sub_25B9B4510()
{
  return v0;
}

uint64_t sub_25B9B4528()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B9B4548()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B456C()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B9B458C()
{
  return sub_25B9ED590();
}

unint64_t sub_25B9B45B0()
{
  *(unsigned char *)(v2 - 160) = *(_DWORD *)(v2 - 184);
  *(void *)(v2 - 152) = *(void *)(v2 - 208);
  *(void *)(v2 - 144) = v0;
  *(_DWORD *)(v2 - 136) = v1;
  *(unsigned char *)(v2 - 89) = 1;
  return sub_25B9AA2E0();
}

void sub_25B9B45E8()
{
  *(_DWORD *)(v1 - 184) = *(unsigned __int8 *)(v0 + 16);
  *(void *)(v1 - 208) = *(void *)(v0 + 24);
}

void sub_25B9B4604()
{
  *(unsigned char *)(v0 - 168) = 1;
}

uint64_t sub_25B9B4618()
{
  return sub_25B9ED540();
}

uint64_t sub_25B9B4638()
{
  return 0x7A6972616D6D7573;
}

uint64_t sub_25B9B465C()
{
  return v0;
}

uint64_t sub_25B9B4680()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B46A4()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B46C8()
{
  return v0 - 160;
}

uint64_t sub_25B9B46D8()
{
  return 0x6C69626967696C65;
}

uint64_t sub_25B9B46F8()
{
  return v0;
}

uint64_t sub_25B9B4710()
{
  return v0;
}

uint64_t sub_25B9B4720@<X0>(char a1@<W8>)
{
  uint64_t v6 = *(void *)(v2 - 256);
  *(void *)uint64_t v6 = v4;
  *(void *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(v5 - 160);
  *(_DWORD *)(v6 + 40) = v1;
  return v6;
}

uint64_t sub_25B9B4744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v2 - 256);
  *(void *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = a1;
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v4 - 160);
  *(void *)(v5 + 32) = v1;
  return v5;
}

uint64_t sub_25B9B4764()
{
  return v0;
}

uint64_t sub_25B9B4778()
{
  *(unsigned char *)(v1 - 160) = 0;
  return v0;
}

uint64_t sub_25B9B478C()
{
  return 0x6D726177657270;
}

uint64_t sub_25B9B47A4()
{
  return sub_25B9ED610();
}

uint64_t sub_25B9B47C4(uint64_t result)
{
  *(_DWORD *)(v2 - 184) = *(unsigned __int8 *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t sub_25B9B47EC()
{
  return v0;
}

void sub_25B9B47F8()
{
  *(unsigned char *)(v0 - 168) = 0;
}

unint64_t sub_25B9B4804()
{
  return 0xD000000000000016;
}

uint64_t sub_25B9B4818@<X0>(char a1@<W8>)
{
  uint64_t v3 = *(void *)(v1 - 256);
  *(void *)uint64_t v3 = v2;
  *(unsigned char *)(v3 + 8) = a1;
  return v3;
}

uint64_t sub_25B9B4840()
{
  return v0;
}

uint64_t sub_25B9B484C()
{
  return v0;
}

uint64_t sub_25B9B4864()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B4888()
{
  return v0 - 160;
}

uint64_t sub_25B9B4898()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B48BC()
{
  return v0;
}

void sub_25B9B48CC()
{
  uint64_t v2 = v0[1];
  *(void *)(v1 - 184) = v0[2];
  uint64_t v3 = v0[3];
  *(void *)(v1 - 216) = v2;
  *(void *)(v1 - 208) = v3;
}

uint64_t sub_25B9B48E4()
{
  *(unsigned char *)(v0 - 168) = 0;
  return v0 - 168;
}

uint64_t sub_25B9B48F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9B4914()
{
  return v0;
}

uint64_t sub_25B9B4928()
{
  return v0;
}

uint64_t sub_25B9B493C()
{
  return v0;
}

uint64_t sub_25B9B4950()
{
  return v0;
}

uint64_t sub_25B9B4970()
{
  return v0;
}

id sub_25B9B4984()
{
  return objc_msgSend(v0, (SEL)(v3 + 2501), v2, v1);
}

uint64_t sub_25B9B49A4()
{
  return sub_25B9EC1C0();
}

uint64_t sub_25B9B49C4()
{
  return sub_25B9ED5D0();
}

unint64_t sub_25B9B49E4()
{
  *(unsigned char *)(v0 - 104) = 1;
  return sub_25B9AEA90();
}

uint64_t sub_25B9B4A04()
{
  return v0;
}

uint64_t sub_25B9B4A18()
{
  return v0;
}

uint64_t sub_25B9B4A2C()
{
  return v0;
}

uint64_t sub_25B9B4A48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684631414 && a2 == 0xE400000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1819242338 && a2 == 0xE400000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000;
      if (v7 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F15C0 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x800000025B9F15E0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_25B9ED6A0();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_25B9B4C34(char a1)
{
  unint64_t result = 1684631414;
  switch(a1)
  {
    case 1:
      unint64_t result = 1819242338;
      break;
    case 2:
      unint64_t result = 0x7972616D6D7573;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9B4CDC(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5860();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4D18(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5860();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_25B9B4D54()
{
  return sub_25B9B4C34(*v0);
}

uint64_t sub_25B9B4D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9B4A48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9B4D84(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5610();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4DC0(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5610();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9B4DFC(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5814();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4E38(uint64_t a1)
{
  unint64_t v2 = sub_25B9B5814();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9B4E74(uint64_t a1)
{
  unint64_t v2 = sub_25B9B56C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4EB0(uint64_t a1)
{
  unint64_t v2 = sub_25B9B56C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9B4EEC(uint64_t a1)
{
  unint64_t v2 = sub_25B9B570C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4F28(uint64_t a1)
{
  unint64_t v2 = sub_25B9B570C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9B4F64(uint64_t a1)
{
  unint64_t v2 = sub_25B9B58AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9B4FA0(uint64_t a1)
{
  unint64_t v2 = sub_25B9B58AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SummarizationXPCResult.Result.encode(to:)(void *a1)
{
  sub_25B94E854(&qword_26A51CE68);
  sub_25B950790();
  MEMORY[0x270FA5388](v2);
  sub_25B958FE4();
  sub_25B94E854(&qword_26A51CE70);
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B958FE4();
  sub_25B94E854(&qword_26A51CE78);
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  type metadata accessor for Summary();
  sub_25B95097C();
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  uint64_t v57 = v6;
  sub_25B94E854(&qword_26A51CE80);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B950870();
  sub_25B94E854(&qword_26A51CE88);
  sub_25B950790();
  MEMORY[0x270FA5388](v8);
  sub_25B9652E4();
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v9);
  sub_25B950870();
  uint64_t v12 = (const void *)(v11 - v10);
  sub_25B94E854(&qword_26A51CE90);
  sub_25B950790();
  MEMORY[0x270FA5388](v13);
  sub_25B950870();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9B5610();
  sub_25B9ED7B0();
  sub_25B9B565C(v60, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_25B9B6E04((uint64_t)v12, v57, (void (*)(void))type metadata accessor for Summary);
      __dst[0] = 2;
      sub_25B9B5814();
      sub_25B9B95DC();
      sub_25B9B6E64(&qword_26A51CED8, (void (*)(uint64_t))type metadata accessor for Summary);
      sub_25B9ED660();
      sub_25B959038();
      v25(v20, v21, v22, v23, v24);
      sub_25B9B6EAC(v57, (void (*)(void))type metadata accessor for Summary);
      goto LABEL_4;
    case 2u:
      memcpy(__dst, v12, 0x98uLL);
      sub_25B9B570C();
      sub_25B9B95DC();
      memcpy(v58, __dst, sizeof(v58));
      sub_25B94E854(&qword_26A51CEC0);
      sub_25B9557DC(&qword_26A51CEC8, &qword_26A51CEC0);
      sub_25B9B96E8();
      goto LABEL_7;
    case 3u:
      memcpy(__dst, v12, 0x98uLL);
      sub_25B9B56C0();
      sub_25B9B95DC();
      memcpy(v58, __dst, sizeof(v58));
      sub_25B94E854(&qword_26A51CEA8);
      sub_25B9557DC(&qword_26A51CEB0, &qword_26A51CEA8);
      sub_25B9B96E8();
LABEL_7:
      sub_25B959038();
      v38(v33, v34, v35, v36, v37);
      sub_25B959038();
      v44(v39, v40, v41, v42, v43);
      uint64_t result = sub_25B9B5758((uint64_t)__dst);
      break;
    case 4u:
      sub_25B9B58AC();
      sub_25B9ED5D0();
      sub_25B959038();
      v50(v45, v46, v47, v48, v49);
      sub_25B959038();
      uint64_t result = v56(v51, v52, v53, v54, v55);
      break;
    default:
      __dst[0] = 1;
      sub_25B9B5860();
      sub_25B9B95DC();
      sub_25B9ED620();
      sub_25B959038();
      v19(v14, v15, v16, v17, v18);
LABEL_4:
      sub_25B959038();
      uint64_t result = v31(v26, v27, v28, v29, v30);
      break;
  }
  return result;
}

uint64_t type metadata accessor for SummarizationXPCResult.Result(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51CF60);
}

unint64_t sub_25B9B5610()
{
  unint64_t result = qword_26A51CE98;
  if (!qword_26A51CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CE98);
  }
  return result;
}

uint64_t sub_25B9B565C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarizationXPCResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25B9B56C0()
{
  unint64_t result = qword_26A51CEA0;
  if (!qword_26A51CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CEA0);
  }
  return result;
}

unint64_t sub_25B9B570C()
{
  unint64_t result = qword_26A51CEB8;
  if (!qword_26A51CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CEB8);
  }
  return result;
}

uint64_t sub_25B9B5758(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_25B95AA78(v4, v2);
  return a1;
}

unint64_t sub_25B9B5814()
{
  unint64_t result = qword_26A51CED0;
  if (!qword_26A51CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CED0);
  }
  return result;
}

unint64_t sub_25B9B5860()
{
  unint64_t result = qword_26A51CEE0;
  if (!qword_26A51CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CEE0);
  }
  return result;
}

unint64_t sub_25B9B58AC()
{
  unint64_t result = qword_26A51CEE8;
  if (!qword_26A51CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CEE8);
  }
  return result;
}

uint64_t SummarizationXPCResult.Result.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v92 = sub_25B94E854(&qword_26A51CEF0);
  sub_25B950790();
  uint64_t v91 = v3;
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  sub_25B959440(v5);
  uint64_t v90 = sub_25B94E854(&qword_26A51CEF8);
  sub_25B950790();
  uint64_t v89 = v6;
  MEMORY[0x270FA5388](v7);
  sub_25B958FE4();
  uint64_t v99 = v8;
  uint64_t v88 = sub_25B94E854(&qword_26A51CF00);
  sub_25B950790();
  uint64_t v95 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25B958FE4();
  sub_25B959440(v11);
  uint64_t v87 = sub_25B94E854(&qword_26A51CF08);
  sub_25B950790();
  uint64_t v85 = v12;
  MEMORY[0x270FA5388](v13);
  sub_25B958FE4();
  sub_25B959440(v14);
  uint64_t v94 = sub_25B94E854(&qword_26A51CF10);
  sub_25B950790();
  uint64_t v86 = v15;
  MEMORY[0x270FA5388](v16);
  sub_25B958FE4();
  sub_25B959440(v17);
  uint64_t v98 = sub_25B94E854(&qword_26A51CF18);
  sub_25B950790();
  uint64_t v97 = v18;
  MEMORY[0x270FA5388](v19);
  sub_25B950870();
  uint64_t v22 = v21 - v20;
  uint64_t v96 = type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v79 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v79 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v35 = (char *)&v79 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v79 - v36;
  uint64_t v38 = a1[3];
  uint64_t v100 = a1;
  sub_25B94F2E0(a1, v38);
  sub_25B9B5610();
  uint64_t v39 = v102;
  sub_25B9ED7A0();
  if (v39) {
    goto LABEL_11;
  }
  uint64_t v80 = v35;
  uint64_t v83 = v32;
  uint64_t v81 = v29;
  uint64_t v82 = v26;
  uint64_t v84 = v37;
  uint64_t v40 = v98;
  uint64_t v41 = sub_25B9ED5B0();
  uint64_t v42 = *(void *)(v41 + 16);
  if (!v42
    || (uint64_t v102 = v22,
        uint64_t v79 = 0,
        uint64_t v43 = *(unsigned __int8 *)(v41 + 32),
        sub_25B958E48(1, v42, v41, v41 + 32, 0, (2 * v42) | 1),
        uint64_t v45 = v44,
        unint64_t v47 = v46,
        swift_bridgeObjectRelease(),
        v45 != v47 >> 1))
  {
    uint64_t v51 = v96;
    uint64_t v52 = sub_25B9ED3D0();
    sub_25B9B963C();
    uint64_t v54 = v53;
    sub_25B94E854(&qword_26A51B2A0);
    *uint64_t v54 = v51;
    sub_25B9ED500();
    sub_25B9ED3C0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v52 - 8) + 104))(v54, *MEMORY[0x263F8DCB0], v52);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v55 = sub_25B9B9628();
    v61(v55, v40);
LABEL_11:
    uint64_t v62 = (uint64_t)v100;
    return sub_25B94F65C(v62);
  }
  switch(v43)
  {
    case 1:
      __src[0] = 1;
      sub_25B9B5860();
      sub_25B9B95A0();
      char v73 = sub_25B9ED550();
      sub_25B959038();
      v74();
      swift_unknownObjectRelease();
      sub_25B9B9708();
      sub_25B959038();
      v75();
      char v76 = v73 & 1;
      uint64_t v77 = (uint64_t)v80;
      unsigned char *v80 = v76;
      sub_25B9B966C();
      goto LABEL_13;
    case 2:
      __src[0] = 2;
      sub_25B9B5814();
      sub_25B9B95A0();
      type metadata accessor for Summary();
      sub_25B9B6E64(&qword_26A51CF30, (void (*)(uint64_t))type metadata accessor for Summary);
      uint64_t v56 = (uint64_t)v83;
      sub_25B9ED590();
      uint64_t v64 = sub_25B9B96AC();
      v65(v64);
      swift_unknownObjectRelease();
      uint64_t v66 = sub_25B9B95FC();
      v67(v66);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v56;
      goto LABEL_14;
    case 3:
      __src[0] = 3;
      sub_25B9B570C();
      sub_25B9B95A0();
      sub_25B94E854(&qword_26A51CEC0);
      sub_25B9557DC(&qword_26A51CF28, &qword_26A51CEC0);
      sub_25B9B96C4();
      sub_25B9B9694();
      uint64_t v57 = sub_25B9B9610();
      v58(v57);
      swift_unknownObjectRelease();
      uint64_t v59 = sub_25B9B95FC();
      v60(v59);
      uint64_t v77 = (uint64_t)v81;
      memcpy(v81, __src, 0x98uLL);
      sub_25B9B966C();
      goto LABEL_13;
    case 4:
      __src[0] = 4;
      sub_25B9B56C0();
      sub_25B9B95A0();
      sub_25B94E854(&qword_26A51CEA8);
      sub_25B9557DC(&qword_26A51CF20, &qword_26A51CEA8);
      sub_25B9B96C4();
      sub_25B9B9694();
      uint64_t v69 = sub_25B9B9610();
      v70(v69);
      swift_unknownObjectRelease();
      uint64_t v71 = sub_25B9B95FC();
      v72(v71);
      uint64_t v77 = (uint64_t)v82;
      memcpy(v82, __src, 0x98uLL);
      sub_25B9B966C();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v77;
LABEL_14:
      uint64_t v50 = (uint64_t)v84;
      sub_25B9B6E04(v68, (uint64_t)v84, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
      break;
    default:
      __src[0] = 0;
      sub_25B9B58AC();
      sub_25B9B95A0();
      sub_25B959038();
      v48();
      swift_unknownObjectRelease();
      sub_25B9B9628();
      sub_25B959038();
      v49();
      uint64_t v50 = (uint64_t)v84;
      swift_storeEnumTagMultiPayload();
      break;
  }
  uint64_t v78 = (uint64_t)v100;
  sub_25B9B6E04(v50, v93, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  uint64_t v62 = v78;
  return sub_25B94F65C(v62);
}

uint64_t sub_25B9B62BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SummarizationXPCResult.Result.init(from:)(a1, a2);
}

uint64_t sub_25B9B62D4(void *a1)
{
  return SummarizationXPCResult.Result.encode(to:)(a1);
}

uint64_t sub_25B9B62EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarizationXPCResult.Result(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9B565C(a1, (uint64_t)v4);
  return sub_25B9B63CC((uint64_t)v4);
}

uint64_t sub_25B9B6378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result;
  swift_beginAccess();
  return sub_25B9B565C(v3, a1);
}

uint64_t sub_25B9B63CC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result;
  swift_beginAccess();
  sub_25B9B953C(a1, v3);
  return swift_endAccess();
}

id SummarizationXPCResult.__allocating_init(result:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_25B9B565C(a1, (uint64_t)v3 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_25B9B6EAC(a1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  return v4;
}

id SummarizationXPCResult.init(result:)(uint64_t a1)
{
  sub_25B9B565C(a1, (uint64_t)v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SummarizationXPCResult(0);
  id v3 = objc_msgSendSuper2(&v5, sel_init);
  sub_25B9B6EAC(a1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  return v3;
}

id SummarizationXPCResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SummarizationXPCResult.init(coder:)(a1);
}

id SummarizationXPCResult.init(coder:)(void *a1)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51CF38);
  MEMORY[0x270FA5388](v5 - 8);
  sub_25B959380();
  uint64_t v6 = type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v7);
  sub_25B9652E4();
  id v8 = v1;
  sub_25B9551D0();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v2, 0, 1, v6);
  sub_25B9B6E04(v2, v3, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  sub_25B9B565C(v3, (uint64_t)v8 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for XPCValue();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  sub_25B9B6EAC(v3, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  return v9;
}

uint64_t sub_25B9B674C()
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v2);
  sub_25B9652E4();
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result;
  sub_25B9B95C0();
  sub_25B9B565C(v3, v1);
  LODWORD(v3) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_25B9B6EAC(v1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  if (v3 != 4)
  {
    sub_25B9B6F80();
    sub_25B9B963C();
    return sub_25B9B967C();
  }
  return result;
}

uint64_t sub_25B9B6820()
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  sub_25B9B95C0();
  sub_25B9B9654();
  if (swift_getEnumCaseMultiPayload())
  {
    sub_25B9B6EAC((uint64_t)v0, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
    sub_25B9B6F80();
    sub_25B9B963C();
    sub_25B9B967C();
  }
  else
  {
    char v2 = *v0;
  }
  return v2 & 1;
}

uint64_t sub_25B9B68F0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B9B95C0();
  sub_25B9B9654();
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_25B9B6E04(v1, a1, (void (*)(void))type metadata accessor for Summary);
  }
  sub_25B9B6EAC(v1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  sub_25B9B6F80();
  sub_25B9B963C();
  return sub_25B9B967C();
}

void *sub_25B9B69E8@<X0>(void *a1@<X8>)
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B9B95C0();
  sub_25B9B9654();
  if (swift_getEnumCaseMultiPayload() == 2) {
    return memcpy(a1, v1, 0x98uLL);
  }
  sub_25B9B6EAC((uint64_t)v1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  sub_25B9B6F80();
  sub_25B9B963C();
  return (void *)sub_25B9B967C();
}

void *sub_25B9B6AD0@<X0>(void *a1@<X8>)
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  sub_25B9B95C0();
  sub_25B9B9654();
  if (swift_getEnumCaseMultiPayload() == 3) {
    return memcpy(a1, v1, 0x98uLL);
  }
  sub_25B9B6EAC((uint64_t)v1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  sub_25B9B6F80();
  sub_25B9B963C();
  return (void *)sub_25B9B967C();
}

uint64_t sub_25B9B6BB8()
{
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_25B95097C();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  sub_25B9B95C0();
  sub_25B9B9654();
  if (qword_26A51B0C8 != -1) {
    swift_once();
  }
  sub_25B9B6E64(&qword_26A51D000, (void (*)(uint64_t))type metadata accessor for SummarizationXPCResult.Result);
  uint64_t v2 = sub_25B9EC1D0();
  sub_25B9B6EAC(v0, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  return v2;
}

id SummarizationXPCResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SummarizationXPCResult.init()()
{
}

uint64_t sub_25B9B6D5C()
{
  return sub_25B9B6EAC(v0 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
}

id SummarizationXPCResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummarizationXPCResult(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25B9B6E04(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_25B95097C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_25B9B6E64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B9B6EAC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25B95097C();
  sub_25B959038();
  v3();
  return a1;
}

uint64_t type metadata accessor for SummarizationXPCResult(uint64_t a1)
{
  return sub_25B9559BC(a1, (uint64_t *)&unk_26A51CF48);
}

uint64_t sub_25B9B6F20(uint64_t a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51CF38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25B9B6F80()
{
  unint64_t result = qword_26A51CF40;
  if (!qword_26A51CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF40);
  }
  return result;
}

uint64_t sub_25B9B6FCC@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9B6378(a1);
}

uint64_t sub_25B9B6FF4()
{
  return type metadata accessor for SummarizationXPCResult(0);
}

uint64_t sub_25B9B6FFC()
{
  uint64_t result = type metadata accessor for SummarizationXPCResult.Result(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummarizationXPCResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SummarizationXPCResult);
}

uint64_t dispatch thunk of SummarizationXPCResult.result.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SummarizationXPCResult.__allocating_init(result:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toVoid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toBool()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))() & 1;
}

uint64_t dispatch thunk of SummarizationXPCResult.toSummary()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toTextAssistantSummary()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toTextAssistantPartialSummary()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

void *initializeBufferWithCopyOfBuffer for SummarizationXPCResult.Result(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v12 = a2[4];
      swift_bridgeObjectRetain();
      if (v12 == 1)
      {
LABEL_9:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_28:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_13:
      a1[3] = a2[3];
      a1[4] = v12;
      uint64_t v14 = a2[6];
      a1[5] = a2[5];
      a1[6] = v14;
      uint64_t v15 = a2[8];
      a1[7] = a2[7];
      a1[8] = v15;
      uint64_t v16 = a2[10];
      a1[9] = a2[9];
      a1[10] = v16;
      uint64_t v17 = a2[12];
      a1[11] = a2[11];
      a1[12] = v17;
      uint64_t v18 = a2[14];
      a1[13] = a2[13];
      a1[14] = v18;
      uint64_t v19 = a2[16];
      a1[15] = a2[15];
      a1[16] = v19;
      uint64_t v20 = a2[17];
      uint64_t v21 = a2[18];
      a1[17] = v20;
      a1[18] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 2:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v12 = a2[4];
      swift_bridgeObjectRetain();
      if (v12 == 1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 1:
      uint64_t v8 = sub_25B9EC1F0();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_25B94E854(&qword_26A51CF58);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v22 = (int *)type metadata accessor for Summary();
      uint64_t v23 = v22[5];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v23, 1, v8))
      {
        uint64_t v26 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v24, v25, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v24, 0, 1, v8);
      }
      uint64_t v27 = v22[6];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v27, 1, v8))
      {
        uint64_t v30 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v28, v29, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v28, 0, 1, v8);
      }
      *(void *)((char *)a1 + v22[7]) = *(void *)((char *)a2 + v22[7]);
      uint64_t v31 = v22[8];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v33, 1, v8))
      {
        uint64_t v34 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v32, v33, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v32, 0, 1, v8);
      }
      *(void *)((char *)a1 + v22[9]) = *(void *)((char *)a2 + v22[9]);
      *((unsigned char *)a1 + v22[10]) = *((unsigned char *)a2 + v22[10]);
      uint64_t v35 = v22[11];
      uint64_t v36 = (void *)((char *)a1 + v35);
      uint64_t v37 = (void *)((char *)a2 + v35);
      uint64_t v38 = v37[1];
      swift_bridgeObjectRetain();
      if (v38 == 1)
      {
        memcpy(v36, v37, 0x80uLL);
      }
      else
      {
        void *v36 = *v37;
        v36[1] = v38;
        uint64_t v39 = v37[3];
        v36[2] = v37[2];
        v36[3] = v39;
        uint64_t v40 = v37[5];
        v36[4] = v37[4];
        void v36[5] = v40;
        uint64_t v41 = v37[7];
        v36[6] = v37[6];
        v36[7] = v41;
        uint64_t v42 = v37[9];
        v36[8] = v37[8];
        v36[9] = v42;
        uint64_t v43 = v37[11];
        v36[10] = v37[10];
        v36[11] = v43;
        uint64_t v44 = v37[13];
        v36[12] = v37[12];
        v36[13] = v44;
        uint64_t v45 = v37[14];
        uint64_t v46 = v37[15];
        v36[14] = v45;
        v36[15] = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_28;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t destroy for SummarizationXPCResult.Result(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3 || result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + 32);
    if (result == 1) {
      return result;
    }
    goto LABEL_16;
  }
  if (result == 1)
  {
    uint64_t v3 = sub_25B9EC1F0();
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    }
    id v4 = (int *)type metadata accessor for Summary();
    uint64_t v5 = a1 + v4[5];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v5, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v5, v3);
    }
    uint64_t v6 = a1 + v4[6];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v6, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v6, v3);
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + v4[8];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v7, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v7, v3);
    }
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + v4[11] + 8);
    if (result != 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *initializeWithCopy for SummarizationXPCResult.Result(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1)
      {
LABEL_7:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_11:
      a1[3] = a2[3];
      a1[4] = v10;
      uint64_t v12 = a2[6];
      a1[5] = a2[5];
      a1[6] = v12;
      uint64_t v13 = a2[8];
      a1[7] = a2[7];
      a1[8] = v13;
      uint64_t v14 = a2[10];
      a1[9] = a2[9];
      a1[10] = v14;
      uint64_t v15 = a2[12];
      a1[11] = a2[11];
      a1[12] = v15;
      uint64_t v16 = a2[14];
      a1[13] = a2[13];
      a1[14] = v16;
      uint64_t v17 = a2[16];
      a1[15] = a2[15];
      a1[16] = v17;
      uint64_t v18 = a2[17];
      uint64_t v19 = a2[18];
      a1[17] = v18;
      a1[18] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 2:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 1:
      uint64_t v7 = sub_25B9EC1F0();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_25B94E854(&qword_26A51CF58);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v20 = (int *)type metadata accessor for Summary();
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v21, 1, v7))
      {
        uint64_t v24 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v22, v23, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v22, 0, 1, v7);
      }
      uint64_t v25 = v20[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v25, 1, v7))
      {
        uint64_t v28 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v26, v27, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v7);
      }
      *(void *)((char *)a1 + v20[7]) = *(void *)((char *)a2 + v20[7]);
      uint64_t v29 = v20[8];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v31, 1, v7))
      {
        uint64_t v32 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v30, v31, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v30, 0, 1, v7);
      }
      *(void *)((char *)a1 + v20[9]) = *(void *)((char *)a2 + v20[9]);
      *((unsigned char *)a1 + v20[10]) = *((unsigned char *)a2 + v20[10]);
      uint64_t v33 = v20[11];
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      swift_bridgeObjectRetain();
      if (v36 == 1)
      {
        memcpy(v34, v35, 0x80uLL);
      }
      else
      {
        *uint64_t v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v35[3];
        v34[2] = v35[2];
        v34[3] = v37;
        uint64_t v38 = v35[5];
        v34[4] = v35[4];
        v34[5] = v38;
        uint64_t v39 = v35[7];
        v34[6] = v35[6];
        v34[7] = v39;
        uint64_t v40 = v35[9];
        v34[8] = v35[8];
        v34[9] = v40;
        uint64_t v41 = v35[11];
        void v34[10] = v35[10];
        v34[11] = v41;
        uint64_t v42 = v35[13];
        v34[12] = v35[12];
        v34[13] = v42;
        uint64_t v43 = v35[14];
        uint64_t v44 = v35[15];
        v34[14] = v43;
        v34[15] = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_26;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for SummarizationXPCResult.Result(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_25B9B6EAC((uint64_t)a1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v9 = a2[4];
      swift_bridgeObjectRetain();
      if (v9 == 1)
      {
LABEL_8:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 1:
      uint64_t v7 = sub_25B9EC1F0();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_25B94E854(&qword_26A51CF58);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for Summary();
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v12, 1, v7))
      {
        uint64_t v15 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v13, v14, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v7);
      }
      uint64_t v16 = v11[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v16, 1, v7))
      {
        uint64_t v19 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v17, v18, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v7);
      }
      *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
      uint64_t v20 = v11[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v22, 1, v7))
      {
        uint64_t v23 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v21, v22, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v21, 0, 1, v7);
      }
      *(void *)((char *)a1 + v11[9]) = *(void *)((char *)a2 + v11[9]);
      *((unsigned char *)a1 + v11[10]) = *((unsigned char *)a2 + v11[10]);
      uint64_t v24 = v11[11];
      uint64_t v25 = (void *)((char *)a1 + v24);
      uint64_t v26 = (void *)((char *)a2 + v24);
      uint64_t v27 = v26[1];
      swift_bridgeObjectRetain();
      if (v27 == 1)
      {
        memcpy(v25, v26, 0x80uLL);
      }
      else
      {
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        v25[12] = v26[12];
        v25[13] = v26[13];
        v25[14] = v26[14];
        v25[15] = v26[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_27;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *initializeWithTake for SummarizationXPCResult.Result(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_25B9EC1F0();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_25B94E854(&qword_26A51CF58);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
    }
    uint64_t v8 = (int *)type metadata accessor for Summary();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v9], 1, v6))
    {
      uint64_t v12 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v10, v11, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v6);
    }
    uint64_t v13 = v8[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v13], 1, v6))
    {
      uint64_t v16 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v14, v15, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v14, 0, 1, v6);
    }
    *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
    uint64_t v17 = v8[8];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v17], 1, v6))
    {
      uint64_t v20 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v18, v19, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v18, 0, 1, v6);
    }
    *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
    a1[v8[10]] = a2[v8[10]];
    memcpy(&a1[v8[11]], &a2[v8[11]], 0x80uLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SummarizationXPCResult.Result(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25B9B6EAC((uint64_t)a1, (void (*)(void))type metadata accessor for SummarizationXPCResult.Result);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_25B9EC1F0();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_25B94E854(&qword_26A51CF58);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v8 = (int *)type metadata accessor for Summary();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v9], 1, v6))
      {
        uint64_t v12 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v10, v11, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v6);
      }
      uint64_t v13 = v8[6];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v13], 1, v6))
      {
        uint64_t v16 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v14, v15, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v14, 0, 1, v6);
      }
      *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
      uint64_t v17 = v8[8];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v17], 1, v6))
      {
        uint64_t v20 = sub_25B94E854(&qword_26A51CF58);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v18, v19, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v18, 0, 1, v6);
      }
      *(void *)&a1[v8[9]] = *(void *)&a2[v8[9]];
      a1[v8[10]] = a2[v8[10]];
      memcpy(&a1[v8[11]], &a2[v8[11]], 0x80uLL);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25B9B8CD0()
{
  uint64_t result = type metadata accessor for Summary();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Error()
{
  return &type metadata for SummarizationXPCResult.Error;
}

unsigned char *storeEnumTagSinglePayload for SummarizationXPCResult.Result.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9B8E50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.CodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.VoidCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.VoidCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.BoolCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.SummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys;
}

unsigned char *_s4Sage22SummarizationXPCResultC5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9B8F64);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys;
}

unint64_t sub_25B9B8FA0()
{
  unint64_t result = qword_26A51CF70;
  if (!qword_26A51CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF70);
  }
  return result;
}

unint64_t sub_25B9B8FF0()
{
  unint64_t result = qword_26A51CF78;
  if (!qword_26A51CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF78);
  }
  return result;
}

unint64_t sub_25B9B9040()
{
  unint64_t result = qword_26A51CF80;
  if (!qword_26A51CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF80);
  }
  return result;
}

unint64_t sub_25B9B9090()
{
  unint64_t result = qword_26A51CF88;
  if (!qword_26A51CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF88);
  }
  return result;
}

unint64_t sub_25B9B90E0()
{
  unint64_t result = qword_26A51CF90;
  if (!qword_26A51CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF90);
  }
  return result;
}

unint64_t sub_25B9B9130()
{
  unint64_t result = qword_26A51CF98;
  if (!qword_26A51CF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CF98);
  }
  return result;
}

unint64_t sub_25B9B9180()
{
  unint64_t result = qword_26A51CFA0;
  if (!qword_26A51CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFA0);
  }
  return result;
}

unint64_t sub_25B9B91D0()
{
  unint64_t result = qword_26A51CFA8;
  if (!qword_26A51CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFA8);
  }
  return result;
}

unint64_t sub_25B9B9220()
{
  unint64_t result = qword_26A51CFB0;
  if (!qword_26A51CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFB0);
  }
  return result;
}

unint64_t sub_25B9B9270()
{
  unint64_t result = qword_26A51CFB8;
  if (!qword_26A51CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFB8);
  }
  return result;
}

unint64_t sub_25B9B92C0()
{
  unint64_t result = qword_26A51CFC0;
  if (!qword_26A51CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFC0);
  }
  return result;
}

unint64_t sub_25B9B9310()
{
  unint64_t result = qword_26A51CFC8;
  if (!qword_26A51CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFC8);
  }
  return result;
}

unint64_t sub_25B9B9360()
{
  unint64_t result = qword_26A51CFD0;
  if (!qword_26A51CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFD0);
  }
  return result;
}

unint64_t sub_25B9B93B0()
{
  unint64_t result = qword_26A51CFD8;
  if (!qword_26A51CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFD8);
  }
  return result;
}

unint64_t sub_25B9B9400()
{
  unint64_t result = qword_26A51CFE0;
  if (!qword_26A51CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFE0);
  }
  return result;
}

unint64_t sub_25B9B9450()
{
  unint64_t result = qword_26A51CFE8;
  if (!qword_26A51CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFE8);
  }
  return result;
}

unint64_t sub_25B9B94A0()
{
  unint64_t result = qword_26A51CFF0;
  if (!qword_26A51CFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFF0);
  }
  return result;
}

unint64_t sub_25B9B94F0()
{
  unint64_t result = qword_26A51CFF8;
  if (!qword_26A51CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51CFF8);
  }
  return result;
}

uint64_t sub_25B9B953C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarizationXPCResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B9B95A0()
{
  return sub_25B9ED4F0();
}

uint64_t sub_25B9B95C0()
{
  return swift_beginAccess();
}

uint64_t sub_25B9B95DC()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B9B95FC()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_25B9B9610()
{
  return v0;
}

uint64_t sub_25B9B9628()
{
  return v0;
}

uint64_t sub_25B9B963C()
{
  return swift_allocError();
}

uint64_t sub_25B9B9654()
{
  return sub_25B9B565C(v0, v1);
}

uint64_t sub_25B9B966C()
{
  return v0;
}

uint64_t sub_25B9B967C()
{
  return swift_willThrow();
}

uint64_t sub_25B9B96AC()
{
  return v0;
}

uint64_t sub_25B9B96C4()
{
  return sub_25B9ED590();
}

uint64_t sub_25B9B96E8()
{
  return sub_25B9ED660();
}

uint64_t sub_25B9B9708()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_25B9B971C()
{
  sub_25B9C9E84();
  int v3 = v0;
  if (v0)
  {
    if (v0 == 1) {
      uint64_t v4 = 0x6966697373616C63;
    }
    else {
      uint64_t v4 = 1953719668;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xEE006E6F69746163;
    }
    else {
      unint64_t v5 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE700000000000000;
    uint64_t v4 = sub_25B9C9744();
  }
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v2 = 0x6966697373616C63;
    }
    else {
      uint64_t v2 = 1953719668;
    }
    if (v1 == 1) {
      unint64_t v6 = 0xEE006E6F69746163;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B9C9D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25B9B980C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000007974696CLL;
  unint64_t v3 = 0x6962616C69617661;
  uint64_t v4 = a1;
  unint64_t v5 = "streamingSummarization";
  uint64_t v6 = 0x6962616C69617661;
  unint64_t v7 = 0xEC0000007974696CLL;
  switch(v4)
  {
    case 1:
      uint64_t v6 = 0x6C69626967696C65;
      unint64_t v7 = 0xEB00000000797469;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v6 = sub_25B9C9744();
      break;
    case 3:
      uint64_t v6 = 0x7A6972616D6D7573;
      unint64_t v7 = 0xED00006E6F697461;
      break;
    case 4:
      unint64_t v7 = 0x800000025B9EE990;
      uint64_t v6 = 0xD000000000000016;
      break;
    case 5:
      uint64_t v6 = sub_25B9C9C4C();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6C69626967696C65;
      unint64_t v2 = 0xEB00000000797469;
      break;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      sub_25B9C9E84();
      break;
    case 3:
      unint64_t v3 = 0x7A6972616D6D7573;
      unint64_t v2 = 0xED00006E6F697461;
      break;
    case 4:
      unint64_t v2 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000016;
      break;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      unint64_t v3 = 1953719668;
      break;
    default:
      break;
  }
  if (v6 == v3 && v7 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_25B9B9A00(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7373654D74786554;
  }
  else {
    uint64_t v2 = 0x7373654D6C69614DLL;
  }
  if (a2) {
    uint64_t v3 = 0x7373654D74786554;
  }
  else {
    uint64_t v3 = 0x7373654D6C69614DLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_25B9B9A98(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x636967614DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x636967614DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x657369636E6F43;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x796C646E65697246;
      break;
    case 3:
      unint64_t v5 = 0x69737365666F7250;
      uint64_t v6 = 1818324591;
      goto LABEL_11;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6574696C6F50;
      break;
    case 5:
      unint64_t v5 = 0x65646E456E65704FLL;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 6:
      unint64_t v3 = 0x800000025B9EEB60;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7374656C6C7542;
      break;
    case 8:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x73656C626154;
      break;
    case 9:
      unint64_t v5 = 0x79617761656B6154;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 10:
      unint64_t v5 = 0x616572666F6F7250;
      uint64_t v6 = 1735289188;
LABEL_11:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x657369636E6F43;
      break;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x796C646E65697246;
      break;
    case 3:
      unint64_t v2 = 0x69737365666F7250;
      uint64_t v8 = 1818324591;
      goto LABEL_23;
    case 4:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v2 = 0x6574696C6F50;
      break;
    case 5:
      unint64_t v2 = 0x65646E456E65704FLL;
      unint64_t v7 = 0xE900000000000064;
      break;
    case 6:
      unint64_t v7 = 0x800000025B9EEB60;
      unint64_t v2 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x7374656C6C7542;
      break;
    case 8:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v2 = 0x73656C626154;
      break;
    case 9:
      unint64_t v2 = 0x79617761656B6154;
      unint64_t v7 = 0xE900000000000073;
      break;
    case 10:
      unint64_t v2 = 0x616572666F6F7250;
      uint64_t v8 = 1735289188;
LABEL_23:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v10 = 1;
  }
  else {
    char v10 = sub_25B9C9D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_25B9B9DA8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = (unint64_t)"cation";
  unint64_t v4 = 0x800000025B9EE890;
  uint64_t v5 = a1;
  uint64_t v6 = "classifyUserNotificationThread";
  unint64_t v7 = "classifyTextMessageThread";
  uint64_t v8 = "classifyMailMessageThread";
  uint64_t v9 = 0xD000000000000013;
  char v10 = "classifyUserNotification";
  uint64_t v11 = "classifyTextMessage";
  switch(v5)
  {
    case 1:
      uint64_t v12 = "classifyMailMessage";
      goto LABEL_7;
    case 2:
      uint64_t v9 = 0xD000000000000018;
      uint64_t v12 = "classifyTextMessage";
      goto LABEL_7;
    case 3:
      uint64_t v9 = 0xD000000000000019;
      uint64_t v12 = "classifyUserNotification";
      goto LABEL_7;
    case 4:
      uint64_t v9 = 0xD000000000000019;
      uint64_t v12 = "classifyMailMessageThread";
      goto LABEL_7;
    case 5:
      uint64_t v9 = 0xD00000000000001ELL;
      uint64_t v12 = "classifyTextMessageThread";
LABEL_7:
      unint64_t v4 = (unint64_t)v12 | 0x8000000000000000;
      break;
    case 6:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v9 = sub_25B9C9A98();
      break;
    case 7:
      uint64_t v9 = 0x7966697373616C63;
      unint64_t v4 = 0xEF6D726177657250;
      break;
    default:
      break;
  }
  unint64_t v13 = v3 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v14 = v11 - 32;
      goto LABEL_16;
    case 2:
      v2 += 5;
      uint64_t v14 = v10 - 32;
      goto LABEL_16;
    case 3:
      v2 += 6;
      uint64_t v14 = v8 - 32;
      goto LABEL_16;
    case 4:
      v2 += 6;
      uint64_t v14 = v7 - 32;
      goto LABEL_16;
    case 5:
      v2 += 11;
      uint64_t v14 = v6 - 32;
LABEL_16:
      unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
      break;
    case 6:
      unint64_t v13 = 0xE700000000000000;
      unint64_t v2 = 0x6E776F6E6B6E75;
      break;
    case 7:
      unint64_t v2 = 0x7966697373616C63;
      unint64_t v13 = 0xEF6D726177657250;
      break;
    default:
      break;
  }
  if (v9 == v2 && v4 == v13) {
    char v16 = 1;
  }
  else {
    char v16 = sub_25B9C9D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_25B9B9FB0()
{
  uint64_t v0 = SummarizationClient.UseCase.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == SummarizationClient.UseCase.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_25B9BA048(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x696A6F6D6E6567;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x696A6F6D6E6567;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x706150636967616DLL;
      unint64_t v3 = 0xEA00000000007265;
      break;
    case 2:
      unint64_t v3 = 0x800000025B9EEAE0;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x706150636967616DLL;
      unint64_t v6 = 0xEA00000000007265;
      break;
    case 2:
      unint64_t v6 = 0x800000025B9EEAE0;
      unint64_t v2 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v2 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25B9BA1C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000016;
  unint64_t v3 = 0x800000025B9EEB00;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000016;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6973734174786574;
      unint64_t v3 = 0xED0000746E617473;
      break;
    case 2:
      unint64_t v5 = 0x6552697261666173;
      uint64_t v6 = 1919247457;
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0x72506C6175736976;
      uint64_t v6 = 1953525103;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x800000025B9EEB00;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x6973734174786574;
      unint64_t v7 = 0xED0000746E617473;
      break;
    case 2:
      unint64_t v2 = 0x6552697261666173;
      uint64_t v8 = 1919247457;
      goto LABEL_10;
    case 3:
      unint64_t v2 = 0x72506C6175736976;
      uint64_t v8 = 1953525103;
LABEL_10:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v10 = 1;
  }
  else {
    char v10 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_25B9BA36C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000746E617473;
  unint64_t v3 = 0x6973734174786574;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6973734174786574;
  unint64_t v6 = 0xED0000746E617473;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6552697261666173;
      unint64_t v6 = 0xEC00000072656461;
      break;
    case 2:
      unint64_t v6 = 0x800000025B9EEA90;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v6 = 0x800000025B9EEAB0;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6552697261666173;
      unint64_t v2 = 0xEC00000072656461;
      break;
    case 2:
      unint64_t v2 = 0x800000025B9EEA90;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000018;
      unint64_t v2 = 0x800000025B9EEAB0;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B9ED6A0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_25B9BA518(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_25B9BA524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25B9ED130();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v5) == 1)
  {
    sub_25B9C9300(a1, &qword_26A51B578);
  }
  else
  {
    sub_25B9ED120();
    sub_25B97AD18();
    sub_25B959038();
    v6();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25B9ED0D0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t SummarizationClient.UseCase.identifier.getter()
{
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B9C98BC();
  uint64_t v2 = v0;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_25B9BA6D4()
{
  qword_26A51D008 = (uint64_t)&unk_270932930;
  return &unk_270932930;
}

id static SummarizationXPCService.interface.getter()
{
  if (qword_26A51B028 != -1) {
    swift_once();
  }
  sub_25B960750();
  uint64_t v0 = (void *)qword_26A51D008;
  return v0;
}

void static SummarizationXPCService.interface.setter(uint64_t a1)
{
  if (qword_26A51B028 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  uint64_t v2 = (void *)qword_26A51D008;
  qword_26A51D008 = a1;
}

uint64_t (*static SummarizationXPCService.interface.modify())()
{
  if (qword_26A51B028 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t static SummarizationXPCService.serviceName.getter()
{
  return sub_25B9C9AC8();
}

uint64_t static SummarizationXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B960740(a1, a2, qword_26A51D010);
}

uint64_t (*static SummarizationXPCService.serviceName.modify())()
{
  return j__swift_endAccess;
}

uint64_t static SummarizationXPCService.entitlementName.getter()
{
  return sub_25B9C9AC8();
}

uint64_t sub_25B9BA8B8()
{
  sub_25B9C9E10();
  sub_25B960750();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SummarizationXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  return sub_25B960740(a1, a2, qword_26A51D020);
}

uint64_t (*static SummarizationXPCService.entitlementName.modify())()
{
  return j_j__swift_endAccess;
}

void sub_25B9BA954()
{
  qword_26A51D030 = MEMORY[0x263F8EE78];
}

uint64_t static SummarizationXPCService.selectorClasses.getter()
{
  if (qword_26A51B030 != -1) {
    swift_once();
  }
  sub_25B960750();
  return swift_bridgeObjectRetain();
}

uint64_t static SummarizationXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_26A51B030 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  qword_26A51D030 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarizationXPCService.selectorClasses.modify())()
{
  if (qword_26A51B030 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t sub_25B9BAAC0()
{
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9604A4(v0, qword_26A51D038);
  uint64_t v1 = sub_25B9559F0(v0, (uint64_t)qword_26A51D038);
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9559F0(v0, (uint64_t)qword_26A51C170);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static SummarizationXPCService.logger.getter()
{
  if (qword_26A51B038 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51D038);
  sub_25B960750();
  sub_25B97AD18();
  sub_25B96D8F8();
  return v1();
}

uint64_t static SummarizationXPCService.logger.setter(uint64_t a1)
{
  if (qword_26A51B038 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  sub_25B9559F0(v2, (uint64_t)qword_26A51D038);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = sub_25B9953E0();
  v5(v4);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*static SummarizationXPCService.logger.modify())()
{
  if (qword_26A51B038 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51D038);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void static SummarizationXPCService.customize(serverInterface:)(void *a1)
{
  id v2 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_270931AF8);
  objc_msgSend(a1, sel_setInterface_forSelector_argumentIndex_ofReply_, v2, sel_performStreamingSummarizationRequest_delegate_, 1, 0);
}

uint64_t SummarizationClient.__allocating_init()()
{
  sub_25B9C9CDC();
  uint64_t v0 = swift_allocObject();
  SummarizationClient.init()();
  return v0;
}

uint64_t SummarizationClient.init()()
{
  *(void *)(v0 + 16) = 0;
  type metadata accessor for TextAssistantStreamingState();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_25B9C6C88();
  sub_25B9C956C(&qword_26A51AFC8, v1, (void (*)(uint64_t))type metadata accessor for SummarizationClient);
  sub_25B94E854(&qword_26A51AF38);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 16) = sub_25B9EC9F0();
  swift_release();
  return v0;
}

uint64_t sub_25B9BAF6C()
{
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26A51C170);
  uint64_t v1 = sub_25B9ECD40();
  os_log_type_t v2 = sub_25B9ED230();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_25B94C000, v1, v2, "SummarizationClient.xpcConnectionWasInvalidated; client connection invalidated",
      v3,
      2u);
    sub_25B959290();
  }

  return sub_25B9BB050();
}

uint64_t sub_25B9BB050()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B9EC190();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_25B9EC1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25B9C2B14();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v14 = v7;
    uint64_t v15 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v9 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25B9EC170();
      sub_25B961270(MEMORY[0x263F8EE78]);
      sub_25B9C956C((unint64_t *)&qword_26A51B628, 255, MEMORY[0x263F06060]);
      sub_25B9EC200();
      char v10 = (void *)sub_25B9EC160();
      (*v15)(v6, v3);
      uint64_t v11 = (void *)sub_25B9EC210();

      uint64_t v12 = (void *)sub_25B9ECFC0();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_didEncounterTextAssistantStreamingError_forRequestIdentifier_, v11, v12, v14);

      v9 += 16;
      --v8;
    }
    while (v8);
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9BB29C(uint64_t a1)
{
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  sub_25B9559F0(v2, (uint64_t)qword_26A51C170);
  uint64_t v3 = sub_25B9ECD40();
  os_log_type_t v4 = sub_25B9ED230();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25B94C000, v3, v4, "summarize(text:) is UNIMPLEMENTED", v5, 2u);
    MEMORY[0x26116D280](v5, -1, -1);
  }

  swift_bridgeObjectRetain();
  return a1;
}

uint64_t SummarizationClient.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t SummarizationClient.__deallocating_deinit()
{
  SummarizationClient.deinit();
  uint64_t v0 = sub_25B9C9CDC();
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_25B9BB3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SummarizationClient();
  return MEMORY[0x270F57798](a1, v5, a3);
}

uint64_t sub_25B9BB444(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t SummarizationClient.UseCase.rawValue.getter()
{
  uint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 2:
      uint64_t result = 0xD000000000000019;
      break;
    case 3:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      uint64_t result = sub_25B9C97F8();
      break;
    case 7:
      uint64_t result = sub_25B9C9708();
      break;
    case 9:
      uint64_t result = 0xD000000000000018;
      break;
    case 0xA:
      uint64_t result = 0x696A6F6D6E6567;
      break;
    case 0xB:
      uint64_t result = sub_25B9C9928();
      break;
    case 0xD:
      uint64_t result = sub_25B9C9A98();
      break;
    case 0xE:
      uint64_t result = sub_25B9C9744();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for TextAssistantStreamingState()
{
  return self;
}

Sage::SummarizationClient::UseCase_optional __swiftcall SummarizationClient.UseCase.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_25B9BB658()
{
  return sub_25B9B9FB0();
}

uint64_t sub_25B9BB664()
{
  return sub_25B9CE1EC();
}

uint64_t sub_25B9BB66C()
{
  return sub_25B9CE75C();
}

uint64_t sub_25B9BB674()
{
  return sub_25B9CEA14();
}

Sage::SummarizationClient::UseCase_optional sub_25B9BB67C(Swift::String *a1)
{
  return SummarizationClient.UseCase.init(rawValue:)(*a1);
}

uint64_t sub_25B9BB688@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SummarizationClient.UseCase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B9BB6B0()
{
  return sub_25B9ED040();
}

uint64_t sub_25B9BB710()
{
  return sub_25B9ED020();
}

uint64_t SummarizationClient.AvailabilityParameters.useCases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummarizationClient.AvailabilityParameters.useCases.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SummarizationClient.AvailabilityParameters.useCases.modify())()
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.AvailabilityParameters.onBehalfOfProcess.modify())()
{
  return nullsub_1;
}

__n128 SummarizationClient.AvailabilityParameters.init(useCases:onBehalfOfProcess:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int32 v3 = a2[1].n128_u32[0];
  *(void *)a3 = a1;
  __n128 result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(_DWORD *)(a3 + 24) = v3;
  return result;
}

void SummarizationClient.currentAvailablity(parameters:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v2 = sub_25B94E854(&qword_26A51D050);
  uint64_t v3 = sub_25B96068C(v2);
  MEMORY[0x270FA5388](v3);
  sub_25B958FE4();
  uint64_t v55 = v4;
  sub_25B9EC8A0();
  sub_25B950790();
  uint64_t v56 = v6;
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  uint64_t v54 = v7;
  uint64_t v8 = sub_25B9EC8C0();
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B958FE4();
  uint64_t v50 = v12;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B97AD18();
  MEMORY[0x270FA5388](v13);
  sub_25B950870();
  char v16 = (void *)(v15 - v14);
  uint64_t v17 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  sub_25B950870();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = *v1;
  if (*(void *)(*v1 + 16))
  {
    uint64_t v49 = v10;
    uint64_t v51 = v8;
    int v53 = *((_DWORD *)v1 + 6);
    uint64_t v25 = v1[2];
    uint64_t v52 = v1[1];
    sub_25B9EC2F0();
    uint64_t v26 = sub_25B9EC2C0();
    uint64_t v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
    sub_25B9C9E1C();
    swift_bridgeObjectRelease();
    sub_25B9C97CC();
    SummarizationClient.UseCase.rawValue.getter();
    sub_25B9ED000();
    swift_bridgeObjectRelease();
    long long v29 = v62[0];
    void *v16 = v24;
    swift_storeEnumTagMultiPayload();
    *(void *)&v62[0] = v26;
    *((void *)&v62[0] + 1) = v28;
    v62[1] = v29;
    v60[0] = v52;
    v60[1] = v25;
    int v61 = v53;
    v58[0] = 0;
    v58[1] = 0;
    int v59 = 0;
    id v30 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)((uint64_t)v16, v62, v60, v58);
    os_log_t v41 = sub_25B9BC15C(v31);

    uint64_t v42 = *(void *)(v24 + 16);
    if (v42)
    {
      v60[0] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25B992848(0, v42, 0);
      uint64_t v43 = 0;
      uint64_t v44 = v60[0];
      do
      {
        uint64_t v45 = *(unsigned __int8 *)(v24 + v43 + 32);
        sub_25B9C9E1C();
        swift_bridgeObjectRelease();
        sub_25B9C97CC();
        switch(v45)
        {
          case 7:
            sub_25B9C9E70();
            break;
          case 13:
            sub_25B9C9A98();
            break;
          case 14:
            sub_25B9C9744();
            break;
          default:
            break;
        }
        sub_25B9ED000();
        swift_bridgeObjectRelease();
        long long v46 = v62[0];
        v60[0] = v44;
        unint64_t v48 = *(void *)(v44 + 16);
        unint64_t v47 = *(void *)(v44 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_25B992848(v47 > 1, v48 + 1, 1);
          uint64_t v44 = v60[0];
        }
        ++v43;
        *(void *)(v44 + 16) = v48 + 1;
        *(_OWORD *)(v44 + 16 * v48 + 32) = v46;
      }
      while (v42 != v43);
      swift_bridgeObjectRelease();
    }
    sub_25B9EC8B0();
    sub_25B9EC8E0();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
  }
  else
  {
    if (qword_26A51B010 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_25B9ECD70();
    sub_25B9559F0(v32, (uint64_t)qword_26A51C170);
    uint64_t v33 = sub_25B9ECD40();
    os_log_type_t v34 = sub_25B9ED240();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_25B94C000, v33, v34, "parameters.useCases was empty", v35, 2u);
      sub_25B959290();
    }

    sub_25B94E854(&qword_26A51D060);
    uint64_t v36 = sub_25B9EC880();
    sub_25B950790();
    uint64_t v38 = v37;
    unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_25B9F6AE0;
    (*(void (**)(unint64_t, void, uint64_t))(v38 + 104))(v40 + v39, *MEMORY[0x263F410F0], v36);
    sub_25B9A05D0(v40);
    sub_25B9EC890();
    (*(void (**)(uint64_t, void, uint64_t))(v56 + 104))(v54, *MEMORY[0x263F40FA8], v57);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v55, 1, 1, v8);
    sub_25B9EC8D0();
  }
  sub_25B964F50();
}

os_log_t sub_25B9BC15C(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for SummarizationXPCRequest.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_25B9ECD70();
  uint64_t v10 = sub_25B9559F0(v9, (uint64_t)qword_26A51C170);
  id v11 = a1;
  uint64_t v12 = sub_25B9ECD40();
  int v13 = sub_25B9ED250();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    LODWORD(v53) = v13;
    uint64_t v54 = v4;
    uint64_t v55 = (uint64_t)v2;
    os_log_t v56 = v10;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v62 = v52;
    *(_DWORD *)uint64_t v14 = 136446722;
    sub_25B9AD048(&v58);
    uint64_t v15 = (uint64_t)v8;
    uint64_t v16 = v58;
    uint64_t v17 = v59;
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_25B9910E8(v16, v17, &v62);
    sub_25B9ED2C0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    sub_25B9AD048(&v58);
    uint64_t v18 = v60;
    uint64_t v19 = v61;
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_25B9910E8(v18, v19, &v62);
    sub_25B9ED2C0();

    uint64_t v8 = (char *)v15;
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    swift_beginAccess();
    sub_25B9C945C();
    SummarizationXPCRequest.Request.category.getter((char *)&v58);
    sub_25B9C94B8(v15);
    uint64_t v20 = 0xEC0000007974696CLL;
    uint64_t v4 = v54;
    uint64_t v21 = 0x6962616C69617661;
    switch((char)v58)
    {
      case 1:
        uint64_t v21 = 0x6C69626967696C65;
        uint64_t v20 = 0xEB00000000797469;
        break;
      case 2:
        uint64_t v20 = 0xE700000000000000;
        uint64_t v21 = 0x6D726177657270;
        break;
      case 3:
        uint64_t v21 = 0x7A6972616D6D7573;
        uint64_t v20 = 0xED00006E6F697461;
        break;
      case 4:
        uint64_t v20 = 0x800000025B9EE990;
        uint64_t v21 = 0xD000000000000016;
        break;
      case 5:
        uint64_t v20 = 0xE400000000000000;
        uint64_t v21 = 1953719668;
        break;
      default:
        break;
    }
    uint64_t v58 = sub_25B9910E8(v21, v20, &v62);
    sub_25B9ED2C0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B94C000, v12, (os_log_type_t)v53, "SummarizationClient sending synchronous request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s", (uint8_t *)v14, 0x20u);
    uint64_t v23 = v52;
    swift_arrayDestroy();
    MEMORY[0x26116D280](v23, -1, -1);
    MEMORY[0x26116D280](v14, -1, -1);

    uint64_t v3 = (void *)v55;
  }
  else
  {
  }
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
    JUMPOUT(0x25B9BCB0CLL);
  }
  MEMORY[0x270FA5388](v22);
  *(&v51 - 2) = (uint64_t)v11;
  type metadata accessor for SummarizationXPCResult(0);
  swift_retain();
  uint64_t v24 = v3;
  sub_25B9EC9D0();
  if (v3)
  {
    swift_release();
    id v25 = v11;
    id v26 = v3;
    os_log_t v27 = (os_log_t)v25;
    id v28 = v24;
    long long v29 = sub_25B9ECD40();
    int v30 = sub_25B9ED230();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      LODWORD(v54) = v30;
      os_log_t v56 = v29;
      uint64_t v31 = (uint64_t)v8;
      uint64_t v32 = swift_slowAlloc();
      int v53 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v62 = v55;
      *(_DWORD *)uint64_t v32 = 136446978;
      sub_25B9AD048(&v58);
      uint64_t v33 = v58;
      uint64_t v34 = v59;
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_25B9910E8(v33, v34, &v62);
      sub_25B9ED2C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      sub_25B9AD048(&v58);
      uint64_t v35 = v60;
      uint64_t v36 = v61;
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_25B9910E8(v35, v36, &v62);
      sub_25B9ED2C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2082;
      swift_beginAccess();
      sub_25B9C945C();
      SummarizationXPCRequest.Request.category.getter((char *)&v57);
      sub_25B9C94B8(v31);
      uint64_t v37 = 0xEC0000007974696CLL;
      uint64_t v38 = 0x6962616C69617661;
      switch((char)v57)
      {
        case 1:
          uint64_t v38 = 0x6C69626967696C65;
          uint64_t v37 = 0xEB00000000797469;
          break;
        case 2:
          uint64_t v37 = 0xE700000000000000;
          uint64_t v38 = 0x6D726177657270;
          break;
        case 3:
          uint64_t v38 = 0x7A6972616D6D7573;
          uint64_t v37 = 0xED00006E6F697461;
          break;
        case 4:
          uint64_t v37 = 0x800000025B9EE990;
          uint64_t v38 = 0xD000000000000016;
          break;
        case 5:
          uint64_t v37 = 0xE400000000000000;
          uint64_t v38 = 1953719668;
          break;
        default:
          break;
      }
      uint64_t v57 = sub_25B9910E8(v38, v37, &v62);
      sub_25B9ED2C0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 32) = 2114;
      id v46 = v24;
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v57 = v47;
      sub_25B9ED2C0();
      unint64_t v48 = v53;
      *int v53 = v47;

      long long v29 = v56;
      _os_log_impl(&dword_25B94C000, v56, (os_log_type_t)v54, "Synchronous SummarizationClient request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s failed with error: %{public}@", (uint8_t *)v32, 0x2Au);
      sub_25B94E854((uint64_t *)&unk_26A51DCE0);
      swift_arrayDestroy();
      MEMORY[0x26116D280](v48, -1, -1);
      uint64_t v49 = v55;
      swift_arrayDestroy();
      MEMORY[0x26116D280](v49, -1, -1);
      MEMORY[0x26116D280](v32, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
  }
  else
  {
    swift_release();
    os_log_t v27 = (os_log_t)v58;
    id v39 = v11;
    uint64_t v40 = sub_25B9ECD40();
    os_log_type_t v41 = sub_25B9ED250();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v62 = v43;
      os_log_t v56 = v27;
      *(_DWORD *)uint64_t v42 = 136446210;
      uint64_t v55 = (uint64_t)(v42 + 4);
      sub_25B9AD048(&v58);
      uint64_t v45 = v58;
      uint64_t v44 = v59;
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_25B9910E8(v45, v44, &v62);
      os_log_t v27 = v56;
      sub_25B9ED2C0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25B94C000, v40, v41, "SummarizationClient received response for synchronous request with requestIdentifier=%{public}s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26116D280](v43, -1, -1);
      MEMORY[0x26116D280](v42, -1, -1);
    }
    else
    {
    }
  }
  return v27;
}

BOOL static SummarizationClient.SummarizationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SummarizationClient.SummarizationStyle.hash(into:)()
{
  return sub_25B9ED750();
}

uint64_t sub_25B9BCB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656E694C706F74 && a2 == 0xE700000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736973706F6E7973 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_25B9ED6A0();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25B9BCCC4(char a1)
{
  if (!a1) {
    return 0x6369706F74;
  }
  if (a1 == 1) {
    return 0x656E694C706F74;
  }
  return 0x736973706F6E7973;
}

uint64_t sub_25B9BCD18()
{
  return sub_25B9BCCC4(*v0);
}

uint64_t sub_25B9BCD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9BCB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9BCD48(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6CF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9BCD84(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6CF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9BCDC0(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6D3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9BCDFC(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6D3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9BCE38(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6D88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9BCE74(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6D88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25B9BCEB0(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6DD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9BCEEC(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6DD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SummarizationClient.SummarizationStyle.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_25B94E854(&qword_26A51D068);
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  sub_25B958FE4();
  sub_25B94E854(&qword_26A51D070);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B96DA28();
  sub_25B94E854(&qword_26A51D078);
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B9652E4();
  sub_25B94E854(&qword_26A51D080);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B959398();
  int v8 = *v1;
  sub_25B94F2E0(v3, v3[3]);
  sub_25B9C6CF0();
  sub_25B9ED7B0();
  if (v8)
  {
    if (v8 == 1) {
      sub_25B9C6D88();
    }
    else {
      sub_25B9C6D3C();
    }
    sub_25B9C9C90();
  }
  else
  {
    sub_25B9C6DD4();
    sub_25B9C9C90();
  }
  sub_25B959038();
  v10(v9);
  uint64_t v11 = sub_25B9C9E04();
  v12(v11);
  sub_25B961A64();
}

uint64_t SummarizationClient.SummarizationStyle.hashValue.getter()
{
  return sub_25B9ED790();
}

void SummarizationClient.SummarizationStyle.init(from:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v34 = v4;
  sub_25B94E854(&qword_26A51D0A8);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B958FE4();
  sub_25B94E854(&qword_26A51D0B0);
  sub_25B950790();
  MEMORY[0x270FA5388](v6);
  sub_25B959380();
  sub_25B94E854(&qword_26A51D0B8);
  sub_25B950790();
  MEMORY[0x270FA5388](v7);
  sub_25B97B0B0();
  uint64_t v8 = sub_25B94E854(&qword_26A51D0C0);
  sub_25B950790();
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v10);
  sub_25B96DA28();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B9C6CF0();
  sub_25B9ED7A0();
  if (v0) {
    goto LABEL_10;
  }
  uint64_t v36 = v3;
  uint64_t v11 = v1;
  uint64_t v12 = sub_25B9ED5B0();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
LABEL_9:
    sub_25B9ED3D0();
    swift_allocError();
    id v26 = v25;
    sub_25B94E854(&qword_26A51B2A0);
    *id v26 = &type metadata for SummarizationClient.SummarizationStyle;
    sub_25B9ED500();
    sub_25B9ED3C0();
    sub_25B97AD18();
    (*(void (**)(void *))(v27 + 104))(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v11, v8);
    uint64_t v3 = v36;
LABEL_10:
    uint64_t v28 = (uint64_t)v3;
    goto LABEL_11;
  }
  uint64_t v14 = v1;
  int v15 = *(unsigned __int8 *)(v12 + 32);
  sub_25B958E48(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v17 != v19 >> 1)
  {
    uint64_t v11 = v14;
    goto LABEL_9;
  }
  char v20 = v15;
  if (v15)
  {
    if (v15 == 1)
    {
      sub_25B9C6D88();
      sub_25B9C9C5C();
      uint64_t v21 = v34;
      sub_25B959038();
      v22();
      swift_unknownObjectRelease();
      uint64_t v23 = sub_25B9C9830();
      v24(v23);
    }
    else
    {
      sub_25B9C6D3C();
      sub_25B9C9C5C();
      uint64_t v21 = v34;
      sub_25B959038();
      v31();
      swift_unknownObjectRelease();
      uint64_t v32 = sub_25B9C9830();
      v33(v32);
      char v20 = v15;
    }
  }
  else
  {
    sub_25B9C6DD4();
    sub_25B9C9C5C();
    sub_25B959038();
    v29();
    swift_unknownObjectRelease();
    sub_25B959038();
    v30();
    uint64_t v21 = v34;
  }
  *uint64_t v21 = v20;
  uint64_t v28 = (uint64_t)v36;
LABEL_11:
  sub_25B94F65C(v28);
  sub_25B961A64();
}

void sub_25B9BD624()
{
}

void sub_25B9BD63C()
{
}

void SummarizationClient.prewarm(for:onBehalfOfProcess:requestIdentifier:)()
{
}

void SummarizationClient.prewarm(for:onBehalfOfProcess:requestIdentifier:completion:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v22 = v8;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_25B94E854(&qword_26A51B578);
  uint64_t v14 = sub_25B96068C(v13);
  MEMORY[0x270FA5388](v14);
  sub_25B9652E4();
  char v15 = *v12;
  uint64_t v17 = *v10;
  uint64_t v16 = v10[1];
  int v18 = *((_DWORD *)v10 + 4);
  uint64_t v19 = sub_25B9ED130();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v7;
  *(unsigned char *)(v20 + 48) = v15;
  *(void *)(v20 + 56) = v17;
  *(void *)(v20 + 64) = v16;
  *(_DWORD *)(v20 + 72) = v18;
  *(void *)(v20 + 80) = v5;
  *(void *)(v20 + 88) = v3;
  *(void *)(v20 + 96) = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_25B9953E0();
  sub_25B95F950(v21);
  swift_retain();
  sub_25B95D778(v1, (uint64_t)&unk_26A51D0D0, v20);
  swift_release();
  sub_25B964F50();
}

uint64_t sub_25B9BD7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v13;
  *(_OWORD *)(v8 + 56) = v12;
  *(_DWORD *)(v8 + 120) = v11;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(unsigned char *)(v8 + 124) = a6;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 80) = type metadata accessor for SummarizationXPCRequest.Request(0);
  *(void *)(v8 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B9BD880, 0, 0);
}

uint64_t sub_25B9BD880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_25B9C9960();
  a27 = v29;
  a28 = v30;
  sub_25B9C9E98();
  a26 = v28;
  int v31 = *(_DWORD *)(v28 + 120);
  uint64_t v33 = *(void *)(v28 + 40);
  uint64_t v32 = *(void *)(v28 + 48);
  uint64_t v35 = *(void *)(v28 + 24);
  uint64_t v34 = *(void *)(v28 + 32);
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  strcpy((char *)&a10, "summarization.");
  HIBYTE(a10) = -18;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v36 = a10;
  swift_storeEnumTagMultiPayload();
  *(void *)&a10 = v35;
  *((void *)&a10 + 1) = v34;
  a11 = v36;
  a12 = v33;
  a13 = v32;
  a14 = v31;
  a15 = 0;
  a16 = 0;
  a17 = 0;
  id v37 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  uint64_t v38 = sub_25B9C9CAC();
  *(void *)(v28 + 96) = sub_25B9C9DE4(v38);
  id v39 = (void *)swift_task_alloc();
  *(void *)(v28 + 104) = v39;
  *id v39 = v28;
  v39[1] = sub_25B9BD9D8;
  sub_25B960668();
  sub_25B9C9944();
  return sub_25B9BDD58(v40);
}

uint64_t sub_25B9BD9D8()
{
  sub_25B960594();
  uint64_t v3 = v2;
  sub_25B960524();
  sub_25B96054C();
  void *v5 = v4;
  uint64_t v6 = *v1;
  sub_25B96053C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {

  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9BDABC()
{
  sub_25B960594();
  uint64_t v1 = (void (*)(void, void))v0[7];
  uint64_t v2 = (void *)v0[12];
  if (v1) {
    v1(v0[3], v0[4]);
  }

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9BDB3C()
{
  uint64_t v1 = *(void (**)(void, void))(v0 + 56);
  if (v1) {
    v1(*(void *)(v0 + 24), *(void *)(v0 + 32));
  }
  if (qword_26A51B018 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v3 = sub_25B9ECD70();
  sub_25B9559F0(v3, (uint64_t)qword_26A51C188);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_25B9ECD40();
  os_log_type_t v7 = sub_25B9ED230();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 112);
  if (v8)
  {
    uint64_t v16 = *(void **)(v0 + 96);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    int v11 = (void *)sub_25B995700();
    *(_DWORD *)uint64_t v10 = 138543362;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v13;
    sub_25B9ED2C0();
    *int v11 = v13;

    _os_log_impl(&dword_25B94C000, v6, v7, "Prewarm failed with error: %{public}@", v10, 0xCu);
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  swift_task_dealloc();
  sub_25B9605A0();
  return v14();
}

uint64_t sub_25B9BDD58(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  v2[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25B9BDDE8, 0, 0);
}

uint64_t sub_25B9BDDE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, os_log_t log, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31)
{
  sub_25B9C9960();
  a30 = v32;
  a31 = v33;
  sub_25B9C9E98();
  a29 = v31;
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v35 = (id *)(v31 + 17);
  uint64_t v34 = (void *)v31[17];
  uint64_t v36 = sub_25B9ECD70();
  v31[20] = sub_25B9559F0(v36, (uint64_t)qword_26A51C170);
  id v37 = v34;
  uint64_t v38 = sub_25B9ECD40();
  os_log_type_t v39 = sub_25B9ED250();
  if (os_log_type_enabled(v38, v39))
  {
    os_log_type_t v68 = v39;
    loga = v38;
    uint64_t v40 = v31[19];
    uint64_t v41 = (void *)v31[17];
    uint64_t v42 = sub_25B9954D8();
    a16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136446722;
    sub_25B9AD048(&a17);
    uint64_t v44 = a17;
    uint64_t v43 = a18;
    swift_bridgeObjectRelease();
    v31[13] = sub_25B9910E8(v44, v43, &a16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v42 + 12) = 2082;
    sub_25B9AD048(&a17);
    uint64_t v45 = a19;
    uint64_t v46 = a20;
    swift_bridgeObjectRelease();
    v31[14] = sub_25B9910E8(v45, v46, &a16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v42 + 22) = 2082;
    sub_25B960750();
    sub_25B9C945C();
    SummarizationXPCRequest.Request.category.getter((char *)&a17);
    sub_25B9C94B8(v40);
    uint64_t v47 = 0xEC0000007974696CLL;
    uint64_t v48 = 0x6962616C69617661;
    switch((char)a17)
    {
      case 1:
        uint64_t v48 = sub_25B9C9A00();
        break;
      case 2:
        uint64_t v47 = 0xE700000000000000;
        uint64_t v48 = sub_25B9C9744();
        break;
      case 3:
        uint64_t v48 = sub_25B9C9904();
        break;
      case 4:
        uint64_t v48 = sub_25B9C9E3C();
        break;
      case 5:
        uint64_t v48 = sub_25B9C9C4C();
        break;
      default:
        break;
    }
    id v50 = *v35;
    v31[16] = sub_25B9910E8(v48, v47, &a16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_25B94C000, loga, v68, "SummarizationClient sending request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    id v49 = *v35;
  }
  uint64_t v51 = v31[17];
  uint64_t v52 = v31[18];
  sub_25B9AD048(&a17);
  uint64_t v53 = a17;
  uint64_t v54 = a18;
  v31[21] = a18;
  swift_bridgeObjectRelease();
  uint64_t v55 = swift_task_alloc();
  v31[22] = v55;
  *(void *)(v55 + 16) = v52;
  *(void *)(v55 + 24) = v51;
  os_log_t v56 = (void *)swift_task_alloc();
  v31[23] = v56;
  v56[2] = v52;
  v56[3] = v53;
  v56[4] = v54;
  uint64_t v57 = (void *)swift_task_alloc();
  v31[24] = v57;
  type metadata accessor for SummarizationXPCResult(0);
  *uint64_t v57 = v31;
  v57[1] = sub_25B9BE230;
  sub_25B9C9944();
  return MEMORY[0x270FA2338](v58, v59, v60, v61, v62, v63, v64, v65);
}

uint64_t sub_25B9BE230()
{
  sub_25B960558();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9BE330()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  id v2 = *(id *)(v0 + 136);
  uint64_t v3 = sub_25B9ECD40();
  os_log_type_t v4 = sub_25B9ED250();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void **)(v0 + 136);
    uint64_t v14 = v1;
    uint64_t v6 = (_DWORD *)swift_slowAlloc();
    uint64_t v15 = sub_25B9954D8();
    *uint64_t v6 = 136446210;
    sub_25B9AD048(v16);
    uint64_t v8 = v16[0];
    uint64_t v7 = v16[1];
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = sub_25B9910E8(v8, v7, &v15);
    sub_25B9ED2C0();
    uint64_t v1 = v14;
    swift_bridgeObjectRelease();

    sub_25B9C9DC4(&dword_25B94C000, v9, v10, "SummarizationClient received response for request with requestIdentifier=%{public}s");
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    int v11 = *(void **)(v0 + 136);
  }
  swift_task_dealloc();
  sub_25B9C9E50();
  return v12(v1);
}

uint64_t sub_25B9BE4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30)
{
  sub_25B9C9960();
  a29 = v31;
  a30 = v32;
  sub_25B9C9E98();
  a28 = v30;
  uint64_t v33 = (void *)v30[25];
  uint64_t v34 = (void *)v30[17];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  id v35 = v34;
  id v36 = v33;
  id v37 = v35;
  id v38 = v33;
  os_log_type_t v39 = sub_25B9ECD40();
  os_log_type_t v40 = sub_25B9ED230();
  if (os_log_type_enabled(v39, v40))
  {
    a11 = v30 + 11;
    uint64_t v41 = v30[19];
    uint64_t v42 = (void *)v30[17];
    uint64_t v43 = swift_slowAlloc();
    a12 = (void *)sub_25B995700();
    a13 = swift_slowAlloc();
    a14 = a13;
    *(_DWORD *)uint64_t v43 = 136446978;
    sub_25B9AD048(&a15);
    uint64_t v45 = a15;
    uint64_t v44 = a16;
    swift_bridgeObjectRelease();
    v30[9] = sub_25B9910E8(v45, v44, &a14);
    a10 = v30 + 10;
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v43 + 12) = 2082;
    sub_25B9AD048(&a15);
    uint64_t v46 = a17;
    uint64_t v47 = a18;
    swift_bridgeObjectRelease();
    v30[8] = sub_25B9910E8(v46, v47, &a14);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v43 + 22) = 2082;
    sub_25B960750();
    sub_25B9C945C();
    SummarizationXPCRequest.Request.category.getter((char *)&a15);
    sub_25B9C94B8(v41);
    uint64_t v48 = 0xEC0000007974696CLL;
    uint64_t v49 = 0x6962616C69617661;
    switch((char)a15)
    {
      case 1:
        uint64_t v49 = sub_25B9C9A00();
        break;
      case 2:
        uint64_t v48 = 0xE700000000000000;
        uint64_t v49 = sub_25B9C9744();
        break;
      case 3:
        uint64_t v49 = sub_25B9C9904();
        break;
      case 4:
        uint64_t v49 = sub_25B9C9E3C();
        break;
      case 5:
        uint64_t v49 = sub_25B9C9C4C();
        break;
      default:
        break;
    }
    uint64_t v52 = (void *)v30[25];
    uint64_t v53 = (void *)v30[17];
    v30[10] = sub_25B9910E8(v49, v48, &a14);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v43 + 32) = 2114;
    id v54 = v52;
    uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
    v30[11] = v55;
    sub_25B9ED2C0();
    *a12 = v55;

    _os_log_impl(&dword_25B94C000, v39, v40, "SummarizationClient request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s, category=%{public}s failed with error: %{public}@", (uint8_t *)v43, 0x2Au);
    sub_25B94E854((uint64_t *)&unk_26A51DCE0);
    swift_arrayDestroy();
    sub_25B959290();
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
    id v50 = (void *)v30[25];
    uint64_t v51 = (void *)v30[17];
  }
  swift_willThrow();
  swift_task_dealloc();
  sub_25B9605A0();
  sub_25B9C9944();
  return v57(v56, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

unint64_t SummarizationClient.PrewarmCategory.identifier.getter()
{
  return 0xD000000000000016;
}

uint64_t SummarizationClient.PrewarmCategory.rawValue.getter()
{
  uint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_25B9C97F8();
      break;
    case 2:
      uint64_t result = sub_25B9C9708();
      break;
    case 3:
      uint64_t result = 0x72506C6175736976;
      break;
    default:
      return result;
  }
  return result;
}

Sage::SummarizationClient::PrewarmCategory_optional __swiftcall SummarizationClient.PrewarmCategory.init(rawValue:)(Swift::String rawValue)
{
  return (Sage::SummarizationClient::PrewarmCategory_optional)sub_25B9C4490(v1);
}

uint64_t sub_25B9BEA64(unsigned __int8 *a1, char *a2)
{
  return sub_25B9BA1C4(*a1, *a2);
}

uint64_t sub_25B9BEA70()
{
  return sub_25B9CE1F8(*v0);
}

uint64_t sub_25B9BEA78(uint64_t a1)
{
  return sub_25B9CE870(a1, *v1);
}

uint64_t sub_25B9BEA80(uint64_t a1)
{
  return sub_25B9CE9E4(a1, *v1);
}

Sage::SummarizationClient::PrewarmCategory_optional sub_25B9BEA88(Swift::String *a1)
{
  return SummarizationClient.PrewarmCategory.init(rawValue:)(*a1);
}

uint64_t sub_25B9BEA94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SummarizationClient.PrewarmCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B9BEABC()
{
  return sub_25B9ED040();
}

uint64_t sub_25B9BEB1C()
{
  return sub_25B9ED020();
}

Swift::Void __swiftcall SummarizationClient.prewarm(category:)(Sage::SummarizationClient::PrewarmCategory category)
{
  uint64_t v2 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_25B959380();
  sub_25B9EC2F0();
  sub_25B9EC2C0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  SummarizationClient.prewarm(for:onBehalfOfProcess:requestIdentifier:)();
  swift_bridgeObjectRelease();
}

void SummarizationClient.TextAssistantSummarizationOptions.init()(unsigned char *a1@<X8>)
{
  *a1 = 0;
  sub_25B9C9AD0((uint64_t)a1);
}

void static SummarizationClient.TextAssistantSummarizationOptions.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
  sub_25B9C9AD0((uint64_t)a1);
}

Sage::SummarizationClient::TextAssistantSummarizationOptions::Source_optional __swiftcall SummarizationClient.TextAssistantSummarizationOptions.Source.init(rawValue:)(Swift::String rawValue)
{
  return (Sage::SummarizationClient::TextAssistantSummarizationOptions::Source_optional)sub_25B9C4490(v1);
}

unint64_t SummarizationClient.TextAssistantSummarizationOptions.Source.rawValue.getter()
{
  unint64_t result = 0x6973734174786574;
  switch(*v0)
  {
    case 1:
      unint64_t result = sub_25B9C9708();
      break;
    case 2:
      unint64_t result = sub_25B9C9B14();
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9BECF8(unsigned __int8 *a1, char *a2)
{
  return sub_25B9BA36C(*a1, *a2);
}

uint64_t sub_25B9BED04()
{
  return sub_25B9CE210(*v0);
}

uint64_t sub_25B9BED0C()
{
  return sub_25B9CE924();
}

uint64_t sub_25B9BED14(uint64_t a1)
{
  return sub_25B9CE9CC(a1, *v1);
}

Sage::SummarizationClient::TextAssistantSummarizationOptions::Source_optional sub_25B9BED1C(Swift::String *a1)
{
  return SummarizationClient.TextAssistantSummarizationOptions.Source.init(rawValue:)(*a1);
}

unint64_t sub_25B9BED28@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SummarizationClient.TextAssistantSummarizationOptions.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B9BED50()
{
  return sub_25B9ED040();
}

uint64_t sub_25B9BEDB0()
{
  return sub_25B9ED020();
}

void SummarizationClient.TextAssistantSummarizationOptions.source.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*SummarizationClient.TextAssistantSummarizationOptions.source.modify())()
{
  return nullsub_1;
}

uint64_t _s4Sage19SummarizationClientC22AvailabilityParametersV17onBehalfOfProcessAA0cI4InfoVSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  int v3 = *(_DWORD *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t _s4Sage19SummarizationClientC22AvailabilityParametersV17onBehalfOfProcessAA0cI4InfoVSgvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(_DWORD *)(v1 + 24) = v4;
  return result;
}

uint64_t (*SummarizationClient.TextAssistantSummarizationOptions.originatingProcess.modify())()
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantSummarizationOptions.init(source:originatingProcess:)(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  int v5 = *((_DWORD *)a2 + 4);
  sub_25B9C9E70();
  uint64_t v7 = v6;
  switch(v2)
  {
    case 1:
    case 2:
    case 3:
      char v8 = sub_25B9ED6A0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_4;
      }
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_4:
      if (!v3)
      {
        if (qword_26A51B010 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_25B9ECD70();
        sub_25B9559F0(v9, (uint64_t)qword_26A51C170);
        uint64_t v10 = sub_25B9ECD40();
        os_log_type_t v11 = sub_25B9ED230();
        if (os_log_type_enabled(v10, v11))
        {
          id v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v12 = 0;
          _os_log_impl(&dword_25B94C000, v10, v11, "Expected non-nil originatingProcess when source is .textAssistant.", v12, 2u);
          sub_25B959290();
        }
      }
      break;
  }
  *(unsigned char *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = v4;
  *(void *)(v7 + 16) = v3;
  *(_DWORD *)(v7 + 24) = v5;
  return swift_bridgeObjectRelease();
}

void SummarizationClient.TextAssistantSummarizationOptions.init(source:)(unsigned char *a1@<X8>, unsigned char *a2@<X0>)
{
  *a1 = *a2;
  sub_25B9C9AD0((uint64_t)a1);
}

uint64_t sub_25B9BF0A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000025B9F1370)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25B9BF18C(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_25B9BF1C4()
{
  return sub_25B9BF18C(*v0);
}

uint64_t sub_25B9BF1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9BF0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9BF1F4(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6F70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9BF230(uint64_t a1)
{
  unint64_t v2 = sub_25B9C6F70();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SummarizationClient.TextAssistantSummarizationOptions.encode(to:)()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51D0D8);
  sub_25B950790();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_25B959380();
  sub_25B94F2E0(v3, v3[3]);
  sub_25B9C6F70();
  sub_25B9ED7B0();
  sub_25B9C6FBC();
  sub_25B9C9B94();
  sub_25B9ED660();
  if (!v0)
  {
    sub_25B99DCF0();
    sub_25B9C9B94();
    sub_25B9ED600();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25B961A64();
}

void SummarizationClient.TextAssistantSummarizationOptions.init(from:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25B94E854(&qword_26A51D0F0);
  sub_25B950790();
  MEMORY[0x270FA5388](v5);
  sub_25B97B0B0();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9C6F70();
  sub_25B9ED7A0();
  if (!v0)
  {
    sub_25B9C7008();
    sub_25B9C9AAC();
    sub_25B9ED590();
    sub_25B99DE38();
    sub_25B9C9AAC();
    sub_25B9ED530();
    uint64_t v6 = sub_25B9C9B64();
    v7(v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v9;
    *(_DWORD *)(v4 + 24) = v10;
  }
  sub_25B94F65C((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_25B961A64();
}

void sub_25B9BF52C()
{
}

void sub_25B9BF544()
{
}

uint64_t (*SummarizationClient.TextAssistantSummary.content.modify())()
{
  return nullsub_1;
}

void SummarizationClient.TextAssistantSummary.safetyClassification.getter(unsigned char *a1@<X8>)
{
}

unsigned char *SummarizationClient.TextAssistantSummary.safetyClassification.setter(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 44)) = *result;
  return result;
}

uint64_t (*SummarizationClient.TextAssistantSummary.safetyClassification.modify())()
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.TextAssistantSummary.inferenceEnvironmentInfo.modify())()
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantSummary.init(content:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_25B9BFAB0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for SummarizationClient.TextAssistantSummary, a7);
}

uint64_t SummarizationClient.TextAssistantSummary.init(content:safetyClassification:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_25B9BFB8C(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for SummarizationClient.TextAssistantSummary, a6);
}

uint64_t sub_25B9BF620(char a1)
{
  if (!a1) {
    return 0x746E65746E6F63;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0xD000000000000018;
}

BOOL sub_25B9BF67C(char *a1, char *a2)
{
  return sub_25B94ED88(*a1, *a2);
}

uint64_t sub_25B9BF694()
{
  return sub_25B94EF30();
}

uint64_t sub_25B9BF6B8()
{
  return sub_25B94ED98();
}

uint64_t sub_25B9BF6C8(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_25B9BFD74(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void))sub_25B94ED98);
}

uint64_t sub_25B9BF6E0()
{
  return sub_25B9BF620(*v0);
}

uint64_t sub_25B9BF6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9BFC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9BF724(void *a1, uint64_t a2)
{
  return sub_25B9BFDE8(a1, a2, (uint64_t (*)(void, void, void, void))sub_25B94EF78);
}

uint64_t sub_25B9BF73C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25B94EF28();
  *a1 = result;
  return result;
}

uint64_t sub_25B9BF770(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25B9BF7C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void SummarizationClient.TextAssistantSummary.encode(to:)()
{
}

void SummarizationClient.TextAssistantSummary.init(from:)()
{
}

void sub_25B9BF8AC()
{
}

void sub_25B9BF8D0()
{
}

uint64_t _s4Sage19SummarizationClientC20TextAssistantSummaryV7contentxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _s4Sage19SummarizationClientC20TextAssistantSummaryV7contentxvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.content.modify())()
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.safetyClassification.modify())()
{
  return nullsub_1;
}

void *_s4Sage19SummarizationClientC20TextAssistantSummaryV24inferenceEnvironmentInfoAA09InferencehI0VSgvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25B9A2504(v2 + *(int *)(a1 + 48), (uint64_t)v5);
  sub_25B9A2504((uint64_t)v5, a2);
  return sub_25B9A25D0(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95A8EC);
}

uint64_t _s4Sage19SummarizationClientC20TextAssistantSummaryV24inferenceEnvironmentInfoAA09InferencehI0VSgvs_0(uint64_t a1, uint64_t a2)
{
  sub_25B9A2504(a1, (uint64_t)v6);
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  sub_25B9A2504(v4, (uint64_t)v7);
  sub_25B9A25D0(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95AA78);
  return sub_25B9A2504((uint64_t)v6, v4);
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.inferenceEnvironmentInfo.modify())()
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantPartialSummary.init(content:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_25B9BFAB0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for SummarizationClient.TextAssistantPartialSummary, a7);
}

uint64_t sub_25B9BFAB0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a8@<X8>)
{
  char v14 = *a2;
  sub_25B9A2504(a3, (uint64_t)v20);
  uint64_t v15 = a7(0, a4, a5, a6);
  uint64_t v16 = *(int *)(v15 + 44);
  uint64_t v17 = a8 + *(int *)(v15 + 48);
  sub_25B97AD18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(a8, a1, a4);
  *(unsigned char *)(a8 + v16) = v14;
  return sub_25B9A2504((uint64_t)v20, v17);
}

uint64_t SummarizationClient.TextAssistantPartialSummary.init(content:safetyClassification:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_25B9BFB8C(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for SummarizationClient.TextAssistantPartialSummary, a6);
}

uint64_t sub_25B9BFB8C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  char v10 = *a2;
  uint64_t v11 = a6(0, a3, a4, a5);
  uint64_t v12 = *(int *)(v11 + 44);
  uint64_t v13 = a7 + *(int *)(v11 + 48);
  sub_25B9A2F44(v16);
  sub_25B9A2504((uint64_t)v16, v13);
  sub_25B97AD18();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(a7, a1, a3);
  *(unsigned char *)(a7 + v12) = v10;
  return result;
}

uint64_t sub_25B9BFC38(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v4 || (sub_25B9C9E10(), (sub_25B9A0948() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0xD000000000000014 && v2 == 0x800000025B9F18E0 || (sub_25B9A0948() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 0xD000000000000018 && v2 == 0x800000025B9F12C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25B9A0948();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25B9BFD5C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_25B9BFD74(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void))sub_25B9C95F8);
}

uint64_t sub_25B9BFD74(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void))
{
  sub_25B9ED740();
  a4(v8, *v4, a2[2], a2[3], a2[4]);
  return sub_25B9ED790();
}

uint64_t sub_25B9BFDD0(void *a1, uint64_t a2)
{
  return sub_25B9BFDE8(a1, a2, (uint64_t (*)(void, void, void, void))sub_25B9A6C60);
}

uint64_t sub_25B9BFDE8(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4]);
}

uint64_t sub_25B9BFE18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25B9BFE6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void SummarizationClient.TextAssistantPartialSummary.encode(to:)()
{
}

void sub_25B9BFF00()
{
  sub_25B961A4C();
  uint64_t v3 = v2;
  uint64_t v20 = v0;
  uint64_t v21 = v1;
  uint64_t v5 = v4;
  uint64_t v8 = v6[2];
  uint64_t v7 = v6[3];
  v19[0] = v6;
  v19[1] = v6[4];
  v19[2] = v8;
  v3(255, v8, v7);
  swift_getWitnessTable();
  uint64_t v9 = sub_25B9ED680();
  sub_25B950790();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v19 - v13;
  sub_25B94F2E0(v5, v5[3]);
  uint64_t v15 = v20;
  sub_25B9ED7B0();
  v23[0] = 0;
  uint64_t v16 = v21;
  sub_25B9ED660();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  }
  else
  {
    uint64_t v17 = v11;
    uint64_t v18 = v19[0];
    sub_25B9C7084();
    sub_25B9ED600();
    sub_25B9A2504(v15 + *(int *)(v18 + 48), (uint64_t)v23);
    sub_25B9A2504((uint64_t)v23, (uint64_t)&v22);
    sub_25B9A2C04();
    sub_25B9ED600();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v9);
  }
  sub_25B961A64();
}

void SummarizationClient.TextAssistantPartialSummary.init(from:)()
{
}

void sub_25B9C0154()
{
  sub_25B961A4C();
  uint64_t v2 = v1;
  uint64_t v46 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v37 = v11;
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v9);
  sub_25B9C9ADC(v12, v35);
  v13(255);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = sub_25B9ED5C0();
  sub_25B950790();
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v39 = v8;
  uint64_t v41 = v6;
  uint64_t v18 = v2(0, v8, v6, v4);
  sub_25B950790();
  uint64_t v36 = v19;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v24 = *(int *)(v21 + 44);
  *((unsigned char *)&v35 + v24 - v22) = 2;
  id v25 = (char *)&v35 + *(int *)(v21 + 48) - v22;
  sub_25B9A2F44(v50);
  uint64_t v44 = v25;
  sub_25B9A2504((uint64_t)v50, (uint64_t)v25);
  id v26 = (void *)sub_25B9C9E04();
  sub_25B94F2E0(v26, v27);
  uint64_t v42 = v17;
  uint64_t v28 = v46;
  sub_25B9ED7A0();
  if (v28)
  {
    sub_25B94F65C(v10);
    sub_25B9A2504((uint64_t)v44, (uint64_t)v49);
    sub_25B9A25D0(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95AA78);
  }
  else
  {
    uint64_t WitnessTable = v18;
    uint64_t v46 = v24;
    LOBYTE(v49[0]) = 0;
    sub_25B9ED590();
    sub_25B994EA4();
    v29();
    LOBYTE(v48[0]) = 1;
    sub_25B9C70D0();
    sub_25B9ED530();
    v23[v46] = v49[0];
    sub_25B9A2F64();
    sub_25B9ED530();
    uint64_t v30 = sub_25B9C999C();
    v31(v30);
    sub_25B9A2504((uint64_t)v49, (uint64_t)v47);
    uint64_t v32 = (uint64_t)v44;
    sub_25B9A2504((uint64_t)v44, (uint64_t)v48);
    sub_25B9A25D0(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25B95AA78);
    sub_25B9A2504((uint64_t)v47, v32);
    uint64_t v33 = v36;
    uint64_t v34 = WitnessTable;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v37, v23, WitnessTable);
    sub_25B94F65C(v10);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v34);
  }
  sub_25B961A64();
}

void sub_25B9C051C()
{
}

void sub_25B9C0540()
{
}

void SummarizationClient.isLanguageEligibleForSummarization(_:options:requestIdentifier:)()
{
  sub_25B961A4C();
  uint64_t v18 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B97AD18();
  MEMORY[0x270FA5388](v7);
  sub_25B9652E4();
  char v8 = *v6;
  uint64_t v9 = *((void *)v6 + 2);
  uint64_t v17 = *((void *)v6 + 1);
  int v10 = *((_DWORD *)v6 + 6);
  *(void *)&long long v23 = 0;
  *((void *)&v23 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B9C9848();
  LOBYTE(v21[0]) = v8 + 6;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  uint64_t v11 = v1 + *(int *)(sub_25B94E854(&qword_26A51CA20) + 48);
  sub_25B9EC310();
  sub_25B97AD18();
  sub_25B96D8F8();
  v12();
  *(unsigned char *)uint64_t v11 = v8;
  *(void *)(v11 + 8) = v17;
  *(void *)(v11 + 16) = v9;
  *(_DWORD *)(v11 + 24) = v10;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v23 = v18;
  *((void *)&v23 + 1) = v4;
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v21[0] = 0;
  v21[1] = 0;
  int v22 = 0;
  v19[0] = 0;
  v19[1] = 0;
  int v20 = 0;
  id v13 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  swift_bridgeObjectRetain();
  id v14 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v1, &v23, v21, v19);
  os_log_t v15 = sub_25B9BC15C(v14);
  if (v0)
  {
  }
  else
  {
    os_log_t v16 = v15;
    sub_25B9B6820();
  }
  sub_25B961A64();
}

void SummarizationClient.isTextEligibleForSummarization(_:options:requestIdentifier:)()
{
  sub_25B961A4C();
  uint64_t v20 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v19 = v9;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B97AD18();
  MEMORY[0x270FA5388](v10);
  sub_25B959398();
  char v11 = *v6;
  uint64_t v12 = *((void *)v6 + 2);
  uint64_t v18 = *((void *)v6 + 1);
  int v13 = *((_DWORD *)v6 + 6);
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B9C9848();
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v19;
  *(void *)(v1 + 8) = v8;
  *(unsigned char *)(v1 + 16) = v11;
  *(void *)(v1 + 24) = v18;
  *(void *)(v1 + 32) = v12;
  *(_DWORD *)(v1 + 40) = v13;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v25 = v20;
  *((void *)&v25 + 1) = v4;
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  v23[0] = 0;
  v23[1] = 0;
  int v24 = 0;
  v21[0] = 0;
  v21[1] = 0;
  int v22 = 0;
  id v14 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v1, &v25, v23, v21);
  os_log_t v16 = sub_25B9BC15C(v15);
  if (v0)
  {
  }
  else
  {
    os_log_t v17 = v16;
    sub_25B9B6820();
  }
  sub_25B961A64();
}

uint64_t SummarizationClient.isTextEligibleForSummarization(_:options:requestIdentifier:)()
{
  sub_25B960594();
  uint64_t v3 = v2;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 24) = v5;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 16) = v7;
  uint64_t v8 = type metadata accessor for SummarizationXPCRequest.Request(0);
  *(void *)(v1 + 56) = v8;
  sub_25B96068C(v8);
  *(void *)(v1 + 64) = sub_25B960674();
  *(unsigned char *)(v1 + 124) = *(unsigned char *)v3;
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(v3 + 8);
  *(_DWORD *)(v1 + 120) = *(_DWORD *)(v3 + 24);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C0980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_25B9951C8();
  a29 = v31;
  a30 = v32;
  sub_25B995B9C();
  a28 = v30;
  char v33 = *(unsigned char *)(v30 + 124);
  int v52 = *(_DWORD *)(v30 + 120);
  uint64_t v35 = *(void *)(v30 + 72);
  uint64_t v34 = *(void *)(v30 + 80);
  uint64_t v36 = *(void *)(v30 + 64);
  uint64_t v37 = *(void *)(v30 + 40);
  uint64_t v53 = *(void *)(v30 + 32);
  *(void *)&a12 = 0;
  uint64_t v39 = *(void *)(v30 + 16);
  uint64_t v38 = *(void *)(v30 + 24);
  swift_bridgeObjectRetain();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a17 = v33 + 6;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v40 = a12;
  *(void *)uint64_t v36 = v39;
  *(void *)(v36 + 8) = v38;
  *(unsigned char *)(v36 + 16) = v33;
  *(void *)(v36 + 24) = v35;
  *(void *)(v36 + 32) = v34;
  *(_DWORD *)(v36 + 40) = v52;
  swift_storeEnumTagMultiPayload();
  *(void *)&a12 = v53;
  *((void *)&a12 + 1) = v37;
  a13 = v40;
  uint64_t v41 = (objc_class *)sub_25B9C99E4();
  sub_25B9C9C78(v41);
  sub_25B9C9CAC();
  uint64_t v42 = swift_bridgeObjectRetain();
  id v45 = sub_25B9C96E8(v42, v43, v44);
  sub_25B9C9BDC((uint64_t)v45);
  uint64_t v46 = swift_task_alloc();
  uint64_t v47 = (void *)sub_25B9C9B7C(v46);
  *uint64_t v47 = v48;
  v47[1] = sub_25B9C0AE8;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v49);
}

uint64_t sub_25B9C0AE8()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C0BD8()
{
  sub_25B994E80();
  uint64_t v2 = v0[13];
  uint64_t v1 = (void *)v0[14];
  uint64_t v3 = (void *)v0[11];
  char v4 = sub_25B9B6820();

  swift_task_dealloc();
  sub_25B9C9E50();
  if (v2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4 & 1;
  }
  return v5(v6);
}

uint64_t sub_25B9C0C70()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9C9E50();
  return v1(0);
}

uint64_t SummarizationClient.summarize(_:options:requestIdentifier:)()
{
  sub_25B960594();
  uint64_t v3 = v2;
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v0;
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = v8;
  uint64_t v9 = type metadata accessor for SummarizationXPCRequest.Request(0);
  *(void *)(v1 + 64) = v9;
  sub_25B96068C(v9);
  *(void *)(v1 + 72) = sub_25B960674();
  *(unsigned char *)(v1 + 132) = *(unsigned char *)v3;
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v3 + 8);
  *(_DWORD *)(v1 + 128) = *(_DWORD *)(v3 + 24);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C0D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_25B9951C8();
  a29 = v31;
  a30 = v32;
  sub_25B995B9C();
  a28 = v30;
  char v33 = *(unsigned char *)(v30 + 132);
  int v34 = *(_DWORD *)(v30 + 128);
  uint64_t v36 = *(void *)(v30 + 80);
  uint64_t v35 = *(void *)(v30 + 88);
  uint64_t v37 = *(void *)(v30 + 72);
  uint64_t v38 = *(void *)(v30 + 48);
  uint64_t v50 = *(void *)(v30 + 40);
  uint64_t v39 = *(void *)(v30 + 32);
  uint64_t v49 = *(void *)(v30 + 24);
  sub_25B9C9C0C();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v40 = a12;
  *(void *)uint64_t v37 = v49;
  *(void *)(v37 + 8) = v39;
  *(unsigned char *)(v37 + 16) = v33;
  *(void *)(v37 + 24) = v36;
  *(void *)(v37 + 32) = v35;
  *(_DWORD *)(v37 + 40) = v34;
  swift_storeEnumTagMultiPayload();
  *(void *)&a12 = v50;
  *((void *)&a12 + 1) = v38;
  a13 = v40;
  a14 = 0;
  a15 = 0;
  a16 = 0;
  a17 = v36;
  a18 = v35;
  a19 = v34;
  id v41 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  swift_bridgeObjectRetain_n();
  uint64_t v42 = swift_bridgeObjectRetain();
  *(void *)(v30 + 96) = sub_25B9C96E8(v42, v43, v44);
  id v45 = (void *)swift_task_alloc();
  *(void *)(v30 + 104) = v45;
  *id v45 = v30;
  v45[1] = sub_25B9C0EF8;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v46);
}

uint64_t sub_25B9C0EF8()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C0FE8()
{
  sub_25B960558();
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 96);
  sub_25B9B69E8(*(void **)(v0 + 16));

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C1070()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

void SummarizationClient.partialSummaries(for:options:requestIdentifier:)()
{
  sub_25B964F38();
  uint64_t v59 = v0;
  uint64_t v4 = v3;
  uint64_t v56 = v5;
  uint64_t v57 = v6;
  uint64_t v8 = v7;
  uint64_t v54 = v9;
  uint64_t v55 = type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_25B97AD18();
  MEMORY[0x270FA5388](v10);
  sub_25B950870();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_25B94E854(&qword_26A51D128);
  sub_25B950790();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_25B959380();
  uint64_t v58 = sub_25B94E854(&qword_26A51BF30);
  sub_25B950790();
  v51[1] = v18;
  MEMORY[0x270FA5388](v19);
  sub_25B959398();
  char v20 = *v8;
  uint64_t v21 = *((void *)v8 + 2);
  uint64_t v53 = *((void *)v8 + 1);
  int v52 = *((_DWORD *)v8 + 6);
  sub_25B94E854(&qword_26A51CEA8);
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v1, *MEMORY[0x263F8F680], v14);
  sub_25B9ED160();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v14);
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  sub_25B9C98BC();
  *(void *)&v64[0] = v22;
  *((void *)&v64[0] + 1) = v23;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v24 = v64[0];
  uint64_t v25 = v53;
  uint64_t v26 = v56;
  *(void *)uint64_t v13 = v54;
  *(void *)(v13 + 8) = v26;
  *(unsigned char *)(v13 + 16) = v20;
  *(void *)(v13 + 24) = v25;
  *(void *)(v13 + 32) = v21;
  LODWORD(v8) = v52;
  *(_DWORD *)(v13 + 40) = v52;
  swift_storeEnumTagMultiPayload();
  *(void *)&v64[0] = v57;
  *((void *)&v64[0] + 1) = v4;
  v64[1] = v24;
  v62[0] = 0;
  v62[1] = 0;
  int v63 = 0;
  v60[0] = v25;
  v60[1] = v21;
  int v61 = (int)v8;
  id v27 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v28 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v13, v64, v62, v60);
  uint64_t v29 = *(void *)(v59 + 24);
  uint64_t v30 = v57;
  sub_25B9C1924();
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v29;
  v32[3] = v30;
  v32[4] = v4;
  v32[5] = v31;
  uint64_t v55 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v56 = v2;
  sub_25B9ED170();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_25B9ECD70();
  sub_25B9559F0(v33, (uint64_t)qword_26A51C170);
  id v34 = v28;
  uint64_t v35 = sub_25B9ECD40();
  os_log_type_t v36 = sub_25B9ED250();
  uint64_t v54 = v29;
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = sub_25B9C9DAC();
    v62[0] = sub_25B9C9BAC();
    *(_DWORD *)uint64_t v37 = 136446466;
    sub_25B9C9D80();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_25B9C99B0();
    sub_25B9C997C(v38);

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    sub_25B9C9D80();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_25B9C99B0();
    sub_25B9C997C(v39);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25B94C000, v35, v36, "SummarizationClient sending streaming request with requestIdentifier=%{public}s, useCaseIdentifier=%{public}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    sub_25B959290();
    sub_25B959290();
  }
  else
  {
  }
  uint64_t v41 = v59;
  if (*(void *)(v59 + 16))
  {
    MEMORY[0x270FA5388](v40);
    v51[-2] = v34;
    v51[-1] = v41;
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    id v42 = v34;
    uint64_t v43 = sub_25B9ECD40();
    os_log_type_t v44 = sub_25B9ED250();
    if (os_log_type_enabled(v43, v44))
    {
      id v45 = (_DWORD *)swift_slowAlloc();
      v62[0] = sub_25B9954D8();
      *id v45 = 136446210;
      sub_25B9AD048(v64);
      long long v46 = v64[0];
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_25B9910E8(v46, *((uint64_t *)&v46 + 1), v62);
      sub_25B9C9D98(v47);
      sub_25B9ED2C0();

      swift_bridgeObjectRelease();
      sub_25B9C9DC4(&dword_25B94C000, v48, v49, "SummarizationClient streaming request with requestIdentifier=%{public}s was successful");
      swift_arrayDestroy();
      sub_25B959290();
      sub_25B959290();
    }
    else
    {
    }
    sub_25B959038();
    v50();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B9C1924()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B9C9370(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25B9C1984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25B9C1A04();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_25B9C1A60(a3, a4);
    return swift_release();
  }
  return result;
}

void sub_25B9C1A04()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25B9C9354(v2);
  os_unfair_lock_unlock(v3);
}

void sub_25B9C1A60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51B578);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B9ED130();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25B9BA524((uint64_t)v7, (uint64_t)&unk_26A51D418, (uint64_t)v9);
  swift_release();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_25B9ECD70();
  sub_25B9559F0(v10, (uint64_t)qword_26A51C170);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_25B9ECD40();
  os_log_type_t v12 = sub_25B9ED250();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25B9910E8(a1, a2, &v16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B94C000, v11, v12, "Summarization request with identifier %{public}s was cancelled by client.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26116D280](v14, -1, -1);
    MEMORY[0x26116D280](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void SummarizationClient.didProduceTextAssistantPartialSummary(_:forRequestIdentifier:)()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B94E854(&qword_26A51D130);
  sub_25B950790();
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v6);
  sub_25B958FE4();
  uint64_t v27 = v7;
  uint64_t v8 = sub_25B94E854(&qword_26A51D138);
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B958FE4();
  uint64_t v29 = v10;
  uint64_t v11 = sub_25B94E854(&qword_26A51BF30);
  sub_25B950790();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  sub_25B9C9ADC(v15, v25);
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_25B9ECD70();
  sub_25B9559F0(v16, (uint64_t)qword_26A51C170);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_25B9ECD40();
  os_log_type_t v18 = sub_25B9ED250();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v26 = v4;
    uint64_t v19 = sub_25B9C9DAC();
    v32[0] = sub_25B9C9BAC();
    *(_DWORD *)uint64_t v19 = 136446466;
    sub_25B9910E8(0xD00000000000003ELL, 0x800000025B9F1650, v32);
    sub_25B9ED2C0();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    v31[0] = sub_25B9910E8(v3, v1, v32);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B94C000, v17, v18, "%{public}s called for requestIdentifier: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_25B959290();
    uint64_t v4 = v26;
    sub_25B959290();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = sub_25B9C9E04();
  sub_25B9C20A8(v20, v21, 0xD00000000000003ELL, v22, v23);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v29, 1, v11) == 1)
  {
    sub_25B9C9300(v29, &qword_26A51D138);
  }
  else
  {
    sub_25B994EA4();
    v24();
    sub_25B9B6AD0(v32);
    memcpy(v31, v32, sizeof(v31));
    sub_25B9ED180();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v4);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v30, v11);
  }
  sub_25B964F50();
}

uint64_t sub_25B9C20A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_25B94E854(&qword_26A51D138);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9C2B74((uint64_t)v12);
  uint64_t v13 = sub_25B94E854(&qword_26A51BF30);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_25B9C9300((uint64_t)v12, &qword_26A51D138);
    if (qword_26A51B010 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_25B9ECD70();
    sub_25B9559F0(v14, (uint64_t)qword_26A51C170);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_25B9ECD40();
    os_log_type_t v16 = sub_25B9ED230();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v17 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_25B9910E8(a3, a4, &v25);
      uint64_t v23 = a5;
      uint64_t v24 = v18;
      sub_25B9ED2C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25B9910E8(a1, a2, &v25);
      a5 = v23;
      sub_25B9ED2C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B94C000, v15, v16, "%{public}s: no continuation found for: %{public}s", (uint8_t *)v17, 0x16u);
      uint64_t v19 = v22;
      swift_arrayDestroy();
      MEMORY[0x26116D280](v19, -1, -1);
      MEMORY[0x26116D280](v17, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v20 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a5, v12, v13);
    uint64_t v20 = 0;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a5, v20, 1, v13);
}

void SummarizationClient.didEncounterTextAssistantStreamingError(_:forRequestIdentifier:)()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_25B94E854(&qword_26A51D138);
  uint64_t v7 = sub_25B96068C(v6);
  MEMORY[0x270FA5388](v7);
  sub_25B96DA28();
  uint64_t v8 = sub_25B94E854(&qword_26A51BF30);
  sub_25B950790();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  sub_25B95BA7C();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_25B9ECD70();
  sub_25B9559F0(v12, (uint64_t)qword_26A51C170);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_25B9ECD40();
  os_log_type_t v14 = sub_25B9ED250();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v23 = v1;
    uint64_t v15 = sub_25B9C9DAC();
    uint64_t v24 = sub_25B9C9BAC();
    *(_DWORD *)uint64_t v15 = 136446466;
    sub_25B9910E8(0xD000000000000040, 0x800000025B9F1690, &v24);
    sub_25B9C9CFC();
    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25B9910E8(v10, v3, &v24);
    sub_25B9C9E5C(v16);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B94C000, v13, v14, "%{public}s called for requestIdentifier: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    sub_25B959290();
    uint64_t v1 = v23;
    sub_25B959290();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = sub_25B9953E0();
  sub_25B9C20A8(v17, v18, 0xD000000000000040, v19, v20);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v8) == 1)
  {
    sub_25B9C9300(v1, &qword_26A51D138);
  }
  else
  {
    sub_25B994EA4();
    v21();
    uint64_t v24 = (uint64_t)v5;
    id v22 = v5;
    sub_25B9ED190();
    sub_25B9C1A04();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
  }
  sub_25B964F50();
}

Swift::Void __swiftcall SummarizationClient.didFinishTextAssistantStreaming(forRequestIdentifier:)(Swift::String forRequestIdentifier)
{
  sub_25B964F38();
  uint64_t v4 = v3;
  uint64_t v5 = sub_25B94E854(&qword_26A51D138);
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  uint64_t v7 = sub_25B94E854(&qword_26A51BF30);
  sub_25B950790();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_25B95BA7C();
  if (qword_26A51B010 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_25B9ECD70();
  sub_25B9559F0(v11, (uint64_t)qword_26A51C170);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_25B9ECD40();
  os_log_type_t v13 = sub_25B9ED250();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v21 = v2;
    uint64_t v14 = sub_25B9C9DAC();
    uint64_t v22 = sub_25B9C9BAC();
    *(_DWORD *)uint64_t v14 = 136446466;
    sub_25B9910E8(0xD000000000000036, 0x800000025B9F16E0, &v22);
    sub_25B9C9CFC();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25B9910E8(v9, v4, &v22);
    sub_25B9C9E5C(v15);
    sub_25B9ED2C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25B94C000, v12, v13, "%{public}s called for requestIdentifier: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    sub_25B959290();
    uint64_t v2 = v21;
    sub_25B959290();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = sub_25B9953E0();
  sub_25B9C20A8(v16, v17, 0xD000000000000036, v18, v19);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v7) == 1)
  {
    sub_25B9C9300(v1, &qword_26A51D138);
  }
  else
  {
    sub_25B994EA4();
    v20();
    uint64_t v22 = 0;
    sub_25B9ED190();
    sub_25B9C1A04();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  }
  sub_25B964F50();
}

uint64_t sub_25B9C2B14()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 24);
  os_unfair_lock_lock(v1);
  sub_25B9C6C00(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void sub_25B9C2B74(uint64_t a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25B9C91F4(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t SummarizationClient.summarize(_:options:)()
{
  sub_25B960594();
  uint64_t v3 = v2;
  *(void *)(v1 + 352) = v4;
  *(void *)(v1 + 360) = v0;
  uint64_t v5 = sub_25B9EC300();
  *(void *)(v1 + 368) = v5;
  sub_25B964F20(v5);
  *(void *)(v1 + 376) = v6;
  *(void *)(v1 + 384) = sub_25B960674();
  *(unsigned char *)(v1 + 440) = *(unsigned char *)v3;
  *(_OWORD *)(v1 + 392) = *(_OWORD *)(v3 + 8);
  *(_DWORD *)(v1 + 348) = *(_DWORD *)(v3 + 24);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960594();
  uint64_t v4 = sub_25B9C9A38(v2, v3);
  v1[5] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v0;
  v1[6] = v5;
  v1[7] = v6;
  sub_25B9C9894();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960594();
  uint64_t v4 = sub_25B9C9A38(v2, v3);
  v1[5] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v0;
  v1[6] = v5;
  v1[7] = v6;
  sub_25B9C981C();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960594();
  uint64_t v4 = sub_25B9C9A38(v2, v3);
  v1[5] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v0;
  v1[6] = v5;
  v1[7] = v6;
  sub_25B9C981C();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960558();
  uint64_t v4 = sub_25B9C9A58(v3);
  v2[4] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v1;
  v2[5] = v5;
  v2[6] = v6;
  v2[7] = *v0;
  sub_25B9C9894();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960558();
  uint64_t v4 = sub_25B9C9A58(v3);
  v2[4] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v1;
  v2[5] = v5;
  v2[6] = v6;
  v2[7] = *v0;
  sub_25B9C981C();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960558();
  uint64_t v4 = sub_25B9C9A58(v3);
  v2[4] = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  uint64_t v6 = *v1;
  v2[5] = v5;
  v2[6] = v6;
  v2[7] = *v0;
  sub_25B9C981C();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C2C84()
{
  uint64_t v1 = v0;
  int v2 = *(_DWORD *)(v0 + 348);
  char v3 = *(unsigned char *)(v0 + 440);
  uint64_t v6 = v0 + 392;
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(v1 + 376);
  uint64_t v7 = *(void *)(v1 + 384);
  uint64_t v9 = *(void *)(v1 + 368);
  id v10 = objc_msgSend(*(id *)(v1 + 352), sel_string);
  sub_25B9ECFD0();
  uint64_t v12 = v11;

  *(void *)(v1 + 408) = v12;
  *(unsigned char *)(v1 + 320) = v3;
  *(void *)(v1 + 328) = v4;
  *(void *)(v1 + 336) = v5;
  *(_DWORD *)(v1 + 344) = v2;
  sub_25B9EC2F0();
  sub_25B9EC2C0();
  *(void *)(v1 + 416) = v13;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 424) = v14;
  void *v14 = v1;
  v14[1] = sub_25B9C2DDC;
  return SummarizationClient.summarize(_:options:requestIdentifier:)();
}

uint64_t sub_25B9C2DDC()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 432) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C2ED8()
{
  sub_25B994E80();
  memcpy((void *)(v0 + 168), (const void *)(v0 + 16), 0x98uLL);
  sub_25B9C71E8();
  swift_bridgeObjectRetain();
  id v1 = sub_25B9C2FEC();
  sub_25B9B5758(v0 + 168);
  swift_task_dealloc();
  sub_25B9C9E50();
  return v2(v1);
}

uint64_t sub_25B9C2F90()
{
  sub_25B960594();
  swift_task_dealloc();
  sub_25B9605A0();
  return v0();
}

id sub_25B9C2FEC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_25B9953E0();
  id v1 = (void *)sub_25B9ECFC0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_25B9C30DC()
{
  sub_25B9951C8();
  sub_25B995B9C();
  int v1 = *(_DWORD *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 88);
  char v17 = *(unsigned char *)(v0 + 140);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 96);
  sub_25B9C9C0C();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(sub_25B94E854(&qword_26A51CAC0) + 48);
  sub_25B9C945C();
  *(void *)uint64_t v8 = v6;
  *(void *)(v8 + 8) = v5;
  *(void *)(v8 + 16) = v4;
  *(unsigned char *)(v8 + 24) = v17;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v2;
  *(_DWORD *)(v8 + 48) = v1;
  *(void *)(v8 + 56) = v18;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (objc_class *)type metadata accessor for SummarizationXPCRequest(0);
  sub_25B9C9C78(v9);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  *(void *)(v0 + 104) = sub_25B9C96E8(v10, v11, v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v13;
  void *v13 = v0;
  v13[1] = sub_25B9C326C;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v14);
}

uint64_t sub_25B9C326C()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 128) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C335C()
{
  sub_25B960558();
  int v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[13];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C33E4()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B9C3588: call analysis failed (funcsize=71)"

uint64_t sub_25B9C35F8()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C36E8()
{
  sub_25B960558();
  int v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[11];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C3770()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B9C3914: call analysis failed (funcsize=71)"

uint64_t sub_25B9C3984()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C3B04()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  int v2 = *(_DWORD *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  char v13 = *(unsigned char *)(v0 + 140);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v7 = v8;
  *(void *)(v7 + 8) = v6;
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v4;
  *(unsigned char *)(v7 + 32) = v13;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v1;
  *(_DWORD *)(v7 + 56) = v2;
  *(void *)(v7 + 64) = v14;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v15 = v6;
  *((void *)&v15 + 1) = v5;
  unint64_t v16 = 0xD000000000000028;
  unint64_t v17 = 0x800000025B9F17B0;
  v18[0] = v3;
  v18[1] = v1;
  int v19 = v2;
  v20[0] = 0;
  v20[1] = 0;
  int v21 = 0;
  id v9 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 104) = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v7, &v15, v18, v20);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_25B9C3CB4;
  uint64_t v11 = sub_25B960668();
  return sub_25B9BDD58(v11);
}

uint64_t sub_25B9C3CB4()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 128) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C3DA4()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[13];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C3E2C()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B9C3FB4: call analysis failed (funcsize=62)"

uint64_t sub_25B9C4024()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C4114()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[11];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C419C()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B9C4324: call analysis failed (funcsize=62)"

uint64_t sub_25B9C4394()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 112) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

Sage::SummarizationClient::VisualPromptUseCase_optional __swiftcall SummarizationClient.VisualPromptUseCase.init(rawValue:)(Swift::String rawValue)
{
  return (Sage::SummarizationClient::VisualPromptUseCase_optional)sub_25B9C4490(v1);
}

uint64_t sub_25B9C4490@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25B9ED4E0();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t SummarizationClient.VisualPromptUseCase.rawValue.getter()
{
  uint64_t result = 0x696A6F6D6E6567;
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_25B9C9928();
      break;
    case 2:
      uint64_t result = sub_25B9C9B14();
      break;
    case 3:
      uint64_t result = sub_25B9C9A98();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9C4550(unsigned __int8 *a1, char *a2)
{
  return sub_25B9BA048(*a1, *a2);
}

uint64_t sub_25B9C455C()
{
  return sub_25B9CE228(*v0);
}

uint64_t sub_25B9C4564(uint64_t a1)
{
  return sub_25B9CE7BC(a1, *v1);
}

uint64_t sub_25B9C456C(uint64_t a1)
{
  return sub_25B9CE9FC(a1, *v1);
}

Sage::SummarizationClient::VisualPromptUseCase_optional sub_25B9C4574(Swift::String *a1)
{
  return SummarizationClient.VisualPromptUseCase.init(rawValue:)(*a1);
}

uint64_t sub_25B9C4580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SummarizationClient.VisualPromptUseCase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25B9C45A8()
{
  return sub_25B9ED040();
}

uint64_t sub_25B9C4608()
{
  return sub_25B9ED020();
}

void SummarizationClient.VisualPromptOptions.useCase.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*SummarizationClient.VisualPromptOptions.useCase.modify())()
{
  return nullsub_1;
}

Sage::SummarizationClient::VisualPromptOptions __swiftcall SummarizationClient.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  sub_25B9A0B90(v1);
  return result;
}

uint64_t sub_25B9C468C(uint64_t a1)
{
  unint64_t v2 = sub_25B9C7228();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9C46C8(uint64_t a1)
{
  unint64_t v2 = sub_25B9C7228();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SummarizationClient.VisualPromptOptions.encode(to:)()
{
  sub_25B961A4C();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B94E854(&qword_26A51D180);
  sub_25B950790();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_25B959398();
  sub_25B94F2E0(v2, v2[3]);
  sub_25B9C7228();
  sub_25B9ED7B0();
  sub_25B99E034();
  sub_25B9ED660();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_25B961A64();
}

void SummarizationClient.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25B961A4C();
  unint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_25B94E854(&qword_26A51D190);
  sub_25B950790();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_25B959398();
  sub_25B94F2E0(v16, v16[3]);
  sub_25B9C7228();
  sub_25B9ED7A0();
  if (!v13)
  {
    sub_25B99E080();
    sub_25B9ED590();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v19);
    *uint64_t v18 = a13;
  }
  sub_25B94F65C((uint64_t)v16);
  sub_25B961A64();
}

void sub_25B9C4924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SummarizationClient.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_25B9C493C()
{
}

uint64_t SummarizationClient.summarize(requestIdentifier:text:options:)()
{
  sub_25B960594();
  uint64_t v3 = v2;
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v0;
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = v8;
  uint64_t v9 = type metadata accessor for SummarizationXPCRequest.Request(0);
  *(void *)(v1 + 64) = v9;
  sub_25B96068C(v9);
  *(void *)(v1 + 72) = sub_25B960674();
  *(unsigned char *)(v1 + 112) = *v3;
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C49E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_25B9C9960();
  a27 = v29;
  a28 = v30;
  sub_25B9C9E98();
  a26 = v28;
  char v31 = *(unsigned char *)(v28 + 112);
  uint64_t v32 = *(void *)(v28 + 72);
  uint64_t v34 = *(void *)(v28 + 40);
  uint64_t v33 = *(void *)(v28 + 48);
  uint64_t v36 = *(void *)(v28 + 24);
  uint64_t v35 = *(void *)(v28 + 32);
  swift_bridgeObjectRetain();
  sub_25B9ED390();
  swift_bridgeObjectRelease();
  strcpy((char *)&a10, "summarization.");
  HIBYTE(a10) = -18;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v37 = a10;
  *(void *)uint64_t v32 = v34;
  *(void *)(v32 + 8) = v33;
  *(unsigned char *)(v32 + 16) = v31;
  swift_storeEnumTagMultiPayload();
  *(void *)&a10 = v36;
  *((void *)&a10 + 1) = v35;
  a11 = v37;
  a12 = 0;
  a13 = 0;
  a14 = 0;
  a15 = 0;
  a16 = 0;
  a17 = 0;
  id v38 = objc_allocWithZone((Class)type metadata accessor for SummarizationXPCRequest(0));
  uint64_t v39 = sub_25B9C9CAC();
  *(void *)(v28 + 80) = sub_25B9C9DE4(v39);
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v28 + 88) = v40;
  *uint64_t v40 = v28;
  v40[1] = sub_25B9C4B48;
  sub_25B960668();
  sub_25B9C9944();
  return sub_25B9BDD58(v41);
}

uint64_t sub_25B9C4B48()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C4C38()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void *)v0[10];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C4CC0()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

uint64_t SummarizationClient.summarize(requestIdentifier:message:options:)()
{
  sub_25B960558();
  uint64_t v6 = sub_25B9C9870(v3, v4, v5);
  *(void *)(v2 + 48) = v6;
  sub_25B96068C(v6);
  *(void *)(v2 + 56) = sub_25B960674();
  long long v7 = v1[1];
  *(_OWORD *)(v2 + 64) = *v1;
  *(_OWORD *)(v2 + 80) = v7;
  *(unsigned char *)(v2 + 128) = *v0;
  *(unsigned char *)(v2 + 129) = v0[1];
  *(unsigned char *)(v2 + 130) = v0[2];
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960594();
  uint64_t v5 = sub_25B9C9C28(v1, v2, v3, v4);
  *(void *)(v0 + 56) = v5;
  sub_25B96068C(v5);
  uint64_t v6 = sub_25B960674();
  sub_25B9C9A78(v6);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_25B960594();
  uint64_t v5 = sub_25B9C9C28(v1, v2, v3, v4);
  *(void *)(v0 + 56) = v5;
  sub_25B96068C(v5);
  uint64_t v6 = sub_25B960674();
  sub_25B9C9A78(v6);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C4DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_25B9951C8();
  a29 = v31;
  a30 = v32;
  sub_25B995B9C();
  a28 = v30;
  char v33 = *(unsigned char *)(v30 + 128);
  char v50 = *(unsigned char *)(v30 + 129);
  char v51 = *(unsigned char *)(v30 + 130);
  uint64_t v35 = *(void *)(v30 + 80);
  uint64_t v34 = *(void *)(v30 + 88);
  uint64_t v37 = *(void *)(v30 + 64);
  uint64_t v36 = *(void *)(v30 + 72);
  uint64_t v38 = *(void *)(v30 + 56);
  uint64_t v39 = *(void *)(v30 + 32);
  uint64_t v49 = *(void *)(v30 + 24);
  sub_25B9C9C0C();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a17 = v33 + 10;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v40 = a12;
  *(void *)uint64_t v38 = v37;
  *(void *)(v38 + 8) = v36;
  *(void *)(v38 + 16) = v35;
  *(void *)(v38 + 24) = v34;
  *(unsigned char *)(v38 + 32) = v33;
  *(unsigned char *)(v38 + 33) = v50;
  *(unsigned char *)(v38 + 34) = v51;
  swift_storeEnumTagMultiPayload();
  *(void *)&a12 = v49;
  *((void *)&a12 + 1) = v39;
  a13 = v40;
  uint64_t v41 = (objc_class *)sub_25B9C99E4();
  sub_25B9C9C78(v41);
  swift_bridgeObjectRetain();
  uint64_t v42 = swift_bridgeObjectRetain();
  *(void *)(v30 + 96) = sub_25B9C96E8(v42, v43, v44);
  id v45 = (void *)swift_task_alloc();
  *(void *)(v30 + 104) = v45;
  *id v45 = v30;
  v45[1] = sub_25B9C4F38;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v46);
}

uint64_t sub_25B9C4F38()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 120) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C5028()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = (void *)v0[12];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C50B0()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

uint64_t sub_25B9C518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_25B9951C8();
  a29 = v33;
  a30 = v34;
  sub_25B995B9C();
  a28 = v31;
  sub_25B9C9774();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a17 = v32;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v35 = a12;
  sub_25B94E854(&qword_26A51C9B0);
  sub_25B9C945C();
  sub_25B9C9BF4();
  swift_storeEnumTagMultiPayload();
  *(void *)&a12 = a11;
  *((void *)&a12 + 1) = v30;
  a13 = v35;
  uint64_t v36 = (objc_class *)sub_25B9C99E4();
  id v37 = sub_25B9C9C78(v36);
  id v40 = sub_25B9C96E8((uint64_t)v37, v38, v39);
  sub_25B9C9BE8((uint64_t)v40);
  uint64_t v41 = swift_task_alloc();
  uint64_t v42 = (void *)sub_25B9C9B88(v41);
  *uint64_t v42 = v43;
  v42[1] = sub_25B9C52D4;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v44);
}

uint64_t sub_25B9C52D4()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_25B9951C8();
  a29 = v33;
  a30 = v34;
  sub_25B995B9C();
  a28 = v31;
  sub_25B9C9774();
  sub_25B9C9B28();
  swift_bridgeObjectRelease();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a17 = v32;
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ED000();
  swift_bridgeObjectRelease();
  long long v35 = a12;
  sub_25B94E854(&qword_26A51C9E0);
  sub_25B9C945C();
  sub_25B9C9BF4();
  swift_storeEnumTagMultiPayload();
  *(void *)&a12 = a11;
  *((void *)&a12 + 1) = v30;
  a13 = v35;
  uint64_t v36 = (objc_class *)sub_25B9C99E4();
  id v37 = sub_25B9C9C78(v36);
  id v40 = sub_25B9C96E8((uint64_t)v37, v38, v39);
  sub_25B9C9BE8((uint64_t)v40);
  uint64_t v41 = swift_task_alloc();
  uint64_t v42 = (void *)sub_25B9C9B88(v41);
  *uint64_t v42 = v43;
  v42[1] = sub_25B9C5584;
  sub_25B960668();
  sub_25B94E92C();
  return sub_25B9BDD58(v44);
}

uint64_t sub_25B9C5584()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C5674()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[9];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C56FC()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

uint64_t SummarizationClient.summarize(requestIdentifier:thread:options:)()
{
  sub_25B960558();
  uint64_t v4 = sub_25B9C9870(v1, v2, v3);
  *(void *)(v0 + 48) = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  sub_25B9C9D3C(v5);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_25B960558();
  uint64_t v4 = sub_25B9C9870(v1, v2, v3);
  *(void *)(v0 + 48) = v4;
  sub_25B96068C(v4);
  uint64_t v5 = sub_25B960674();
  sub_25B9C9D3C(v5);
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

#error "25B9C5888: call analysis failed (funcsize=63)"

uint64_t sub_25B9C58F8()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C59E8()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[9];
  sub_25B9B68F0(v0[2]);

  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C5A70()
{
  sub_25B960594();

  swift_task_dealloc();
  sub_25B9605A0();
  return v1();
}

#error "25B9C5BFC: call analysis failed (funcsize=63)"

uint64_t sub_25B9C5C6C()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t SummarizationClient.testTaskCancellation(sleepDuration:)()
{
  sub_25B960594();
  v1[3] = v0;
  v1[2] = v2;
  uint64_t v3 = type metadata accessor for SummarizationXPCRequest.Request(0);
  v1[4] = v3;
  sub_25B96068C(v3);
  v1[5] = sub_25B960674();
  uint64_t v4 = sub_25B9EC300();
  v1[6] = v4;
  sub_25B964F20(v4);
  v1[7] = v5;
  v1[8] = sub_25B960674();
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C5E10()
{
  sub_25B995768();
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = (void *)v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[2];
  sub_25B9EC2F0();
  uint64_t v6 = sub_25B9EC2C0();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_25B9C9A20();
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v24 = v6;
  *((void *)&v24 + 1) = v8;
  uint64_t v9 = (objc_class *)sub_25B9C96A0();
  id v10 = sub_25B9C99CC(v9);
  id v18 = sub_25B9C96C8((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v24, v25, v26, v27, v28, v29, v30);
  sub_25B9C9BE8((uint64_t)v18);
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = (void *)sub_25B9C9B88(v19);
  *uint64_t v20 = v21;
  v20[1] = sub_25B9C5F44;
  uint64_t v22 = sub_25B960668();
  return sub_25B9BDD58(v22);
}

uint64_t sub_25B9C5F44()
{
  sub_25B960558();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9C6034()
{
  sub_25B960558();
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 72);
  sub_25B9B674C();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_25B9605A0();
  return v3();
}

uint64_t sub_25B9C60C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25B9C60E8, 0, 0);
}

uint64_t sub_25B9C60E8()
{
  sub_25B960558();
  uint64_t v5 = *(void *)(v0[3] + 16);
  v0[5] = v5;
  if (v5)
  {
    uint64_t v6 = v0[4];
    uint64_t v7 = swift_task_alloc();
    v0[6] = v7;
    *(void *)(v7 + 16) = v6;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[7] = v8;
    uint64_t v4 = type metadata accessor for SummarizationXPCResult(0);
    *uint64_t v8 = v0;
    v8[1] = sub_25B9C61E0;
    uint64_t v1 = v0[2];
    uint64_t v2 = sub_25B9C9514;
    uint64_t v3 = v7;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9C61E0()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    sub_25B9605A0();
    __asm { BRAA            X1, X16 }
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

void sub_25B9C62EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  v10[4] = sub_25B960354;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_25B95EDF8;
  v10[3] = &unk_27092CEC8;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performSummarizationRequest_with_, a4, v9);
  _Block_release(v9);
}

void sub_25B9C63E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  v10[4] = sub_25B9C9604;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_25B95EDF8;
  v10[3] = &unk_27092D598;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performSummarizationRequest_with_, a4, v9);
  _Block_release(v9);
}

uint64_t sub_25B9C64D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_25B9C64F8, 0, 0);
}

void sub_25B9C64F8()
{
  sub_25B994E80();
  if (*(void *)(v0[3] + 16))
  {
    uint64_t v2 = v0[4];
    uint64_t v1 = v0[5];
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    swift_task_dealloc();
    sub_25B9605A0();
    v4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B9C65D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v7 = sub_25B94E854(&qword_26A51D138);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v27[-v11];
  uint64_t v13 = sub_25B94E854(&qword_26A51BF30);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *a1;
  swift_bridgeObjectRetain();
  sub_25B9830A0(a2, a3, v17);
  swift_bridgeObjectRelease();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_25B9C9300((uint64_t)v12, &qword_26A51D138);
  }
  else
  {
    uint64_t v31 = a2;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v12, v13);
    if (qword_26A51B010 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_25B9ECD70();
    sub_25B9559F0(v18, (uint64_t)qword_26A51C170);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_25B9ECD40();
    os_log_type_t v20 = sub_25B9ED230();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      int v28 = v21;
      uint64_t v23 = v22;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v23 = 136446466;
      uint64_t v30 = a1;
      uint64_t v33 = sub_25B9910E8(0xD000000000000028, 0x800000025B9F1900, &v34);
      sub_25B9ED2C0();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_25B9910E8(v31, a3, &v34);
      sub_25B9ED2C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25B94C000, v19, (os_log_type_t)v28, "%{public}s called with existing continuation for request identifier %{public}s. Cancelling existing stream to prevent leak.", (uint8_t *)v23, 0x16u);
      uint64_t v24 = v29;
      swift_arrayDestroy();
      MEMORY[0x26116D280](v24, -1, -1);
      MEMORY[0x26116D280](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_25B9ED100();
    sub_25B9C956C(&qword_26A51D420, 255, MEMORY[0x263F8F488]);
    uint64_t v25 = swift_allocError();
    sub_25B9ECF50();
    uint64_t v34 = v25;
    sub_25B9ED190();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    a2 = v31;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v10, v32, v13);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v13);
  swift_bridgeObjectRetain();
  return sub_25B9CEE38((uint64_t)v10, a2, a3);
}

uint64_t sub_25B9C6A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25B94E854(&qword_26A51D138);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25B94E854(&qword_26A51BF30);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v8);
  swift_bridgeObjectRetain();
  return sub_25B9CEE38((uint64_t)v7, a2, a3);
}

uint64_t sub_25B9C6AEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_25B991A30();
    if (v5)
    {
      unint64_t v6 = v4;
      uint64_t v7 = *(void *)(v3 + 56);
      uint64_t v8 = sub_25B94E854(&qword_26A51BF30);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, v7 + *(void *)(*(void *)(v8 - 8) + 72) * v6, v8);
      uint64_t v9 = a2;
      uint64_t v10 = 0;
      uint64_t v11 = v8;
    }
    else
    {
      uint64_t v11 = sub_25B94E854(&qword_26A51BF30);
      uint64_t v9 = a2;
      uint64_t v10 = 1;
    }
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v9, v10, 1, v11);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = sub_25B94E854(&qword_26A51BF30);
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a2, 1, 1, v12);
  }
}

uint64_t sub_25B9C6C00@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_25B96CBDC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_25B9C6C50()
{
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_25B9C6C88()
{
  sub_25B94E854(&qword_26A51AFD8);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = MEMORY[0x263F8EE80];
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t type metadata accessor for SummarizationClient()
{
  return self;
}

unint64_t sub_25B9C6CF0()
{
  unint64_t result = qword_26A51D088;
  if (!qword_26A51D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D088);
  }
  return result;
}

unint64_t sub_25B9C6D3C()
{
  unint64_t result = qword_26A51D090;
  if (!qword_26A51D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D090);
  }
  return result;
}

unint64_t sub_25B9C6D88()
{
  unint64_t result = qword_26A51D098;
  if (!qword_26A51D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D098);
  }
  return result;
}

unint64_t sub_25B9C6DD4()
{
  unint64_t result = qword_26A51D0A0;
  if (!qword_26A51D0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D0A0);
  }
  return result;
}

uint64_t sub_25B9C6E20()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_25B9C6E80()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = (void *)sub_25B9606AC(v3);
  *unint64_t v4 = v5;
  v4[1] = sub_25B95F890;
  uint64_t v6 = sub_25B960768();
  return sub_25B9BD7C8(v6, v7, v8, v9, v10, v2, v12, v1);
}

unint64_t sub_25B9C6F70()
{
  unint64_t result = qword_26A51D0E0;
  if (!qword_26A51D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D0E0);
  }
  return result;
}

unint64_t sub_25B9C6FBC()
{
  unint64_t result = qword_26A51D0E8;
  if (!qword_26A51D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D0E8);
  }
  return result;
}

unint64_t sub_25B9C7008()
{
  unint64_t result = qword_26A51D0F8;
  if (!qword_26A51D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D0F8);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantSummary()
{
  return sub_25B94E824();
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantSummary.CodingKeys()
{
  return sub_25B94E824();
}

unint64_t sub_25B9C7084()
{
  unint64_t result = qword_26A51D100;
  if (!qword_26A51D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D100);
  }
  return result;
}

unint64_t sub_25B9C70D0()
{
  unint64_t result = qword_26A51D108;
  if (!qword_26A51D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D108);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantPartialSummary()
{
  return sub_25B94E824();
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantPartialSummary.CodingKeys()
{
  return sub_25B94E824();
}

uint64_t sub_25B9C714C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25B9C7184()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25B9C71CC(uint64_t a1)
{
  return sub_25B9C1984(a1, v1[2], v1[3], v1[4]);
}

id sub_25B9C71D8(void *a1)
{
  return objc_msgSend(a1, sel_performStreamingSummarizationRequest_delegate_, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_25B9C71E8()
{
  unint64_t result = qword_26A51D148;
  if (!qword_26A51D148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A51D148);
  }
  return result;
}

unint64_t sub_25B9C7228()
{
  unint64_t result = qword_26A51D188;
  if (!qword_26A51D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D188);
  }
  return result;
}

uint64_t sub_25B9C7274(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B9C956C(&qword_26A51AFC8, a2, (void (*)(uint64_t))type metadata accessor for SummarizationClient);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25B9C72CC()
{
  return sub_25B9C956C(&qword_26A51B5D0, 255, MEMORY[0x263F61838]);
}

unint64_t sub_25B9C731C()
{
  unint64_t result = qword_26A51D1D0;
  if (!qword_26A51D1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D1D0);
  }
  return result;
}

unint64_t sub_25B9C736C()
{
  unint64_t result = qword_26A51D1D8;
  if (!qword_26A51D1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D1D8);
  }
  return result;
}

unint64_t sub_25B9C73BC()
{
  unint64_t result = qword_26A51D1E0;
  if (!qword_26A51D1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D1E0);
  }
  return result;
}

unint64_t sub_25B9C740C()
{
  unint64_t result = qword_26A51D1E8;
  if (!qword_26A51D1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D1E8);
  }
  return result;
}

unint64_t sub_25B9C745C()
{
  unint64_t result = qword_26A51D1F0[0];
  if (!qword_26A51D1F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A51D1F0);
  }
  return result;
}

void type metadata accessor for SummarizationXPCService()
{
}

uint64_t method lookup function for SummarizationClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SummarizationClient);
}

uint64_t dispatch thunk of SummarizationClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SummarizationClient.xpcConnectionWasInvalidated()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SummarizationClient.summarize(text:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t getEnumTagSinglePayload for SummarizationClient.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummarizationClient.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9C7690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

void type metadata accessor for SummarizationClient.UseCase()
{
}

uint64_t destroy for SummarizationClient.AvailabilityParameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationClient.AvailabilityParameters(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 28))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.AvailabilityParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SummarizationClient.AvailabilityParameters()
{
}

void type metadata accessor for SummarizationClient.SummarizationStyle()
{
}

void type metadata accessor for SummarizationClient.PrewarmCategory()
{
}

uint64_t destroy for SummarizationClient.TextAssistantSummarizationOptions()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 28))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 28) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions()
{
}

void type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source()
{
}

uint64_t sub_25B9C7A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25B9C7AB4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25B9C7B58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  int v6 = *(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  if ((v6 & 0x1000F8) != 0 || (v5 & 0xFFFFFFFFFFFFFFF8) + 136 > 0x18)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    sub_25B96D8F8();
    v9();
    *((unsigned char *)a1 + v5) = *((unsigned char *)a2 + v5);
    sub_25B9C9CEC();
    if (v12 - 1 < 0)
    {
      sub_25B9C960C(v10, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v10, v11, 0x80uLL);
    }
  }
  return a1;
}

unint64_t sub_25B9C7CB0(uint64_t a1)
{
  sub_25B97AD18();
  uint64_t v3 = v2 + 8;
  (*(void (**)(void))(v2 + 8))();
  unint64_t v4 = (*(void *)(v3 + 56) + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t result = *(void *)(v4 + 16);
  LODWORD(v6) = -1;
  if (result < 0xFFFFFFFF) {
    uint64_t v6 = *(void *)(v4 + 16);
  }
  if ((int)v6 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25B9C7D70(uint64_t a1, uint64_t a2)
{
  sub_25B97AD18();
  uint64_t v5 = v4 + 16;
  (*(void (**)(void))(v4 + 16))();
  sub_25B9C9AF8((unsigned char *)(*(void *)(v5 + 48) + a2));
  sub_25B9C9CEC();
  if (v8 - 1 < 0)
  {
    sub_25B9C960C(v6, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v6, v7, 0x80uLL);
  }
  return a1;
}

void sub_25B9C7E40()
{
  sub_25B964F38();
  unint64_t v1 = v0;
  sub_25B97AD18();
  uint64_t v3 = (void *)(v2 + 24);
  (*(void (**)(void))(v2 + 24))();
  sub_25B9C98E0(v3[5]);
  if (*(void *)(v5 + 16) >= 0xFFFFFFFFuLL) {
    int v6 = -1;
  }
  else {
    int v6 = *(void *)(v5 + 16);
  }
  int v7 = v6 - 1;
  unint64_t v8 = *(void *)(v4 + 16);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(v8) = -1;
  }
  int v9 = v8 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      sub_25B9C9D50();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[2] = v3[2];
      v1[3] = v3[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[4] = v3[4];
      v1[5] = v3[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[6] = v3[6];
      v1[7] = v3[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[8] = v3[8];
      v1[9] = v3[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[10] = v3[10];
      v1[11] = v3[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[12] = v3[12];
      v1[13] = v3[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[14] = v3[14];
      v1[15] = v3[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_11:
    memcpy(v1, v3, 0x80uLL);
    goto LABEL_12;
  }
  sub_25B9C9D50();
  v1[2] = v3[2];
  v1[3] = v3[3];
  v1[4] = v3[4];
  v1[5] = v3[5];
  v1[6] = v3[6];
  v1[7] = v3[7];
  v1[8] = v3[8];
  v1[9] = v3[9];
  v1[10] = v3[10];
  v1[11] = v3[11];
  v1[12] = v3[12];
  v1[13] = v3[13];
  v1[14] = v3[14];
  v1[15] = v3[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_12:
  sub_25B964F50();
}

uint64_t sub_25B9C80D0()
{
  sub_25B9C9E10();
  sub_25B97AD18();
  uint64_t v3 = v2 + 32;
  (*(void (**)(void))(v2 + 32))();
  uint64_t v4 = (void *)sub_25B9C9AF8((unsigned char *)(*(void *)(v3 + 32) + v0));
  memcpy(v4, v5, 0x80uLL);
  return v1;
}

uint64_t sub_25B9C813C(uint64_t a1, void *a2)
{
  sub_25B97AD18();
  uint64_t v5 = (void *)(v4 + 40);
  (*(void (**)(void))(v4 + 40))();
  sub_25B9C98E0(v5[3]);
  LODWORD(v7) = -1;
  if (*(void *)(v6 + 16) < 0xFFFFFFFFuLL) {
    uint64_t v7 = *(void *)(v6 + 16);
  }
  if ((int)v7 - 1 < 0)
  {
    sub_25B9C9CEC();
    if (v8 - 1 < 0)
    {
      *a2 = *v5;
      a2[1] = v5[1];
      swift_bridgeObjectRelease();
      a2[2] = v5[2];
      a2[3] = v5[3];
      swift_bridgeObjectRelease();
      a2[4] = v5[4];
      a2[5] = v5[5];
      swift_bridgeObjectRelease();
      a2[6] = v5[6];
      a2[7] = v5[7];
      swift_bridgeObjectRelease();
      a2[8] = v5[8];
      a2[9] = v5[9];
      swift_bridgeObjectRelease();
      a2[10] = v5[10];
      a2[11] = v5[11];
      swift_bridgeObjectRelease();
      a2[12] = v5[12];
      a2[13] = v5[13];
      swift_bridgeObjectRelease();
      a2[14] = v5[14];
      a2[15] = v5[15];
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  memcpy(a2, v5, 0x80uLL);
  return a1;
}

uint64_t sub_25B9C82D0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (v5 <= 0x7FFFFFFD) {
    unsigned int v6 = 2147483645;
  }
  else {
    unsigned int v6 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v7 = (*(void *)(*(void *)(v4 - 8) + 64) & 0xFFFFFFFFFFFFFFF8) + 136;
    unsigned int v8 = a2 - v6;
    uint64_t v9 = v7 & 0xFFFFFFF8;
    if ((v7 & 0xFFFFFFF8) != 0) {
      unsigned int v10 = 2;
    }
    else {
      unsigned int v10 = v8 + 1;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v7);
        if (!v13) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v7);
        if (v13) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25B9C841CLL);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v7);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = v13 - 1;
        if (v9)
        {
          int v15 = 0;
          LODWORD(v9) = *a1;
        }
        return sub_25B9C9D78(v6 + (v9 | v15));
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFD) {
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a1, v5, v4);
  }
  sub_25B9C9CEC();
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

double sub_25B9C8430(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFD) {
    unsigned int v8 = 2147483645;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 136;
  if ((v9 & 0xFFFFFFF8) == 0xFFFFFF78) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if ((v9 & 0xFFFFFFF8) == 0xFFFFFF78) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((v9 & 0xFFFFFFF8) != 0xFFFFFF78)
    {
      int v16 = ~v8 + a2;
      bzero(a1, (v9 & 0xFFFFFFFFFFFFFFF8) + 136);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x25B9C8624);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFD)
        {
          uint64_t v18 = (_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 8);
          if (a2 > 0x7FFFFFFD)
          {
            double result = 0.0;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 104) = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 120) = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 72) = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 88) = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 40) = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 56) = 0u;
            *uint64_t v18 = 0u;
            *(_OWORD *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 24) = 0u;
            *(_DWORD *)uint64_t v18 = a2 - 2147483646;
          }
          else
          {
            *(void *)(((unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8) + 16) = (a2 + 1);
          }
        }
        else
        {
          _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

void type metadata accessor for SummarizationClient.VisualPromptUseCase()
{
}

uint64_t _s4Sage19SummarizationClientC19VisualPromptUseCaseOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_25B9C9D78(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_25B9C9D78(v8);
}

unsigned char *_s4Sage19SummarizationClientC19VisualPromptUseCaseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9C87A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SummarizationClient.VisualPromptOptions()
{
}

unsigned char *storeEnumTagSinglePayload for SummarizationClient.VisualPromptOptions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9C8878);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.VisualPromptOptions.CodingKeys()
{
  return &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9C897CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys;
}

uint64_t _s4Sage19SummarizationClientC18SummarizationStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_25B9C9D78(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_25B9C9D78((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_25B9C9D78(v8);
}

unsigned char *_s4Sage19SummarizationClientC18SummarizationStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9C8B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.CodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.TopicCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.TopicCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.TopLineCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.TopLineCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.SynopsisCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.SynopsisCodingKeys;
}

unint64_t sub_25B9C8B70()
{
  unint64_t result = qword_26A51D378;
  if (!qword_26A51D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D378);
  }
  return result;
}

unint64_t sub_25B9C8BC0()
{
  unint64_t result = qword_26A51D380;
  if (!qword_26A51D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D380);
  }
  return result;
}

uint64_t sub_25B9C8C0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9C8C28()
{
  return swift_getWitnessTable();
}

unint64_t sub_25B9C8C48()
{
  unint64_t result = qword_26A51D388;
  if (!qword_26A51D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D388);
  }
  return result;
}

unint64_t sub_25B9C8C98()
{
  unint64_t result = qword_26A51D390;
  if (!qword_26A51D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D390);
  }
  return result;
}

unint64_t sub_25B9C8CE8()
{
  unint64_t result = qword_26A51D398;
  if (!qword_26A51D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D398);
  }
  return result;
}

uint64_t sub_25B9C8D34()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9C8D50()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9C8D6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25B9C8D88()
{
  return swift_getWitnessTable();
}

unint64_t sub_25B9C8DA8()
{
  unint64_t result = qword_26A51D3A0;
  if (!qword_26A51D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3A0);
  }
  return result;
}

unint64_t sub_25B9C8DF8()
{
  unint64_t result = qword_26A51D3A8;
  if (!qword_26A51D3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3A8);
  }
  return result;
}

unint64_t sub_25B9C8E48()
{
  unint64_t result = qword_26A51D3B0;
  if (!qword_26A51D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3B0);
  }
  return result;
}

unint64_t sub_25B9C8E98()
{
  unint64_t result = qword_26A51D3B8;
  if (!qword_26A51D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3B8);
  }
  return result;
}

unint64_t sub_25B9C8EE8()
{
  unint64_t result = qword_26A51D3C0;
  if (!qword_26A51D3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3C0);
  }
  return result;
}

unint64_t sub_25B9C8F38()
{
  unint64_t result = qword_26A51D3C8;
  if (!qword_26A51D3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3C8);
  }
  return result;
}

unint64_t sub_25B9C8F88()
{
  unint64_t result = qword_26A51D3D0;
  if (!qword_26A51D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3D0);
  }
  return result;
}

unint64_t sub_25B9C8FD8()
{
  unint64_t result = qword_26A51D3D8;
  if (!qword_26A51D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3D8);
  }
  return result;
}

unint64_t sub_25B9C9028()
{
  unint64_t result = qword_26A51D3E0;
  if (!qword_26A51D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3E0);
  }
  return result;
}

unint64_t sub_25B9C9078()
{
  unint64_t result = qword_26A51D3E8;
  if (!qword_26A51D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3E8);
  }
  return result;
}

unint64_t sub_25B9C90C4()
{
  unint64_t result = qword_26A51D3F0;
  if (!qword_26A51D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3F0);
  }
  return result;
}

unint64_t sub_25B9C9110()
{
  unint64_t result = qword_26A51D3F8;
  if (!qword_26A51D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D3F8);
  }
  return result;
}

unint64_t sub_25B9C915C()
{
  unint64_t result = qword_26A51D400;
  if (!qword_26A51D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D400);
  }
  return result;
}

unint64_t sub_25B9C91A8()
{
  unint64_t result = qword_26A51D408;
  if (!qword_26A51D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A51D408);
  }
  return result;
}

uint64_t sub_25B9C91F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25B9C6AEC(a1, a2);
}

uint64_t sub_25B9C9210()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25B9C9258()
{
  sub_25B994E80();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  int v3 = (void *)sub_25B9606AC(v2);
  *int v3 = v4;
  v3[1] = sub_25B960510;
  uint64_t v5 = sub_25B960768();
  return sub_25B9C64D4(v5, v6, v7, v8, v9, v1);
}

uint64_t sub_25B9C9300(uint64_t a1, uint64_t *a2)
{
  sub_25B94E854(a2);
  sub_25B97AD18();
  sub_25B959038();
  v3();
  return a1;
}

uint64_t sub_25B9C9354(uint64_t a1)
{
  return sub_25B9C6A24(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25B9C9370(uint64_t *a1)
{
  return sub_25B9C65D8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25B9C9390()
{
  sub_25B960558();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_25B9606AC(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_25B95F890;
  return sub_25B9C60C4(v2, v4, v3);
}

void sub_25B9C9430()
{
  sub_25B9C1A60(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_25B9C945C()
{
  sub_25B9C9E10();
  v1(0);
  sub_25B97AD18();
  sub_25B96D8F8();
  v2();
  return v0;
}

uint64_t sub_25B9C94B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25B9C9514(void *a1, uint64_t a2, uint64_t a3)
{
  sub_25B9C62EC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_25B9C951C()
{
  swift_release();
  uint64_t v0 = sub_25B9C9CDC();
  return MEMORY[0x270FA0238](v0, v1, v2);
}

uint64_t sub_25B9C954C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_25B9C955C()
{
  return swift_release();
}

void sub_25B9C9564(void *a1, uint64_t a2, uint64_t a3)
{
  sub_25B9C63E0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_25B9C956C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25B9C960C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9C96A0()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

id sub_25B9C96C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v15, &a9, &a12, &a15);
}

id sub_25B9C96E8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  long long v6 = va_arg(va1, __int128);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v3, (long long *)va, (uint64_t *)va1, (uint64_t *)va2);
}

uint64_t sub_25B9C9708()
{
  return 0x6552697261666173;
}

uint64_t sub_25B9C9744()
{
  return 0x6D726177657270;
}

uint64_t sub_25B9C9774()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9C97B0()
{
  return swift_bridgeObjectRetain();
}

void sub_25B9C97CC()
{
  strcpy((char *)(v0 - 120), "summarization.");
  *(unsigned char *)(v0 - 105) = -18;
}

uint64_t sub_25B9C97F8()
{
  return 0x6973734174786574;
}

__n128 sub_25B9C981C()
{
  __n128 result = *(__n128 *)(v0 + 8);
  v1[4] = result;
  v1[5].n128_u64[0] = *(void *)(v0 + 24);
  return result;
}

uint64_t sub_25B9C9830()
{
  return v0;
}

void sub_25B9C9848()
{
  strcpy((char *)(v0 - 112), "summarization.");
  *(unsigned char *)(v0 - 97) = -18;
}

uint64_t sub_25B9C9870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

__n128 sub_25B9C9894()
{
  __n128 result = *(__n128 *)(v0 + 8);
  *(unsigned char *)(v1 + 140) = *(unsigned char *)(v0 + 24);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(__n128 *)(v1 + 64) = result;
  *(_OWORD *)(v1 + 80) = v3;
  *(_DWORD *)(v1 + 136) = *(_DWORD *)(v0 + 48);
  *(void *)(v1 + 96) = *(void *)(v0 + 56);
  return result;
}

void sub_25B9C98E0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v1) = *(unsigned char *)(a1 + v2);
}

uint64_t sub_25B9C9904()
{
  return 0x7A6972616D6D7573;
}

uint64_t sub_25B9C9928()
{
  return 0x706150636967616DLL;
}

uint64_t sub_25B9C997C(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return sub_25B9ED2C0();
}

uint64_t sub_25B9C999C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_25B9C99B0()
{
  return sub_25B9910E8(v0, v1, (uint64_t *)(v2 - 144));
}

id sub_25B9C99CC(Class a1)
{
  return objc_allocWithZone(a1);
}

uint64_t sub_25B9C99E4()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_25B9C9A00()
{
  return 0x6C69626967696C65;
}

uint64_t sub_25B9C9A20()
{
  return sub_25B9ED390();
}

uint64_t sub_25B9C9A38(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

uint64_t sub_25B9C9A58(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

uint64_t sub_25B9C9A78(uint64_t result)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 104) = *v1;
  *(unsigned char *)(v2 + 105) = v1[1];
  *(unsigned char *)(v2 + 106) = v1[2];
  return result;
}

uint64_t sub_25B9C9A98()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_25B9C9AC8()
{
  return sub_25B9BA8B8();
}

void sub_25B9C9AD0(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_25B9C9ADC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t sub_25B9C9AF8@<X0>(unsigned char *a1@<X8>)
{
  *(unsigned char *)unint64_t v1 = *a1;
  return (v1 & 0xFFFFFFFFFFFFFFF8) + 8;
}

unint64_t sub_25B9C9B14()
{
  return 0xD000000000000014;
}

uint64_t sub_25B9C9B28()
{
  return sub_25B9ED390();
}

uint64_t sub_25B9C9B40()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_25B9C9B64()
{
  return v0;
}

uint64_t sub_25B9C9B7C(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t sub_25B9C9B88(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t sub_25B9C9B94()
{
  return v0 - 104;
}

uint64_t sub_25B9C9BAC()
{
  return swift_slowAlloc();
}

uint64_t sub_25B9C9BC4()
{
  *(void *)uint64_t v0 = v1;
  *(unsigned char *)(v0 + 8) = v2;
  return v0;
}

uint64_t sub_25B9C9BDC(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t sub_25B9C9BE8(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t sub_25B9C9BF4()
{
  *uint64_t v1 = v3;
  v1[1] = v2;
  v1[2] = v4;
  return v0;
}

uint64_t sub_25B9C9C0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25B9C9C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  void v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

uint64_t sub_25B9C9C4C()
{
  return 1953719668;
}

uint64_t sub_25B9C9C5C()
{
  return sub_25B9ED4F0();
}

id sub_25B9C9C78(Class a1)
{
  return objc_allocWithZone(a1);
}

uint64_t sub_25B9C9C90()
{
  return sub_25B9ED5D0();
}

uint64_t sub_25B9C9CAC()
{
  return swift_bridgeObjectRetain();
}

void *sub_25B9C9CC4()
{
  *uint64_t v0 = v4;
  v0[1] = v5;
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v1;
  return v0;
}

uint64_t sub_25B9C9CDC()
{
  return v0;
}

uint64_t sub_25B9C9CFC()
{
  return sub_25B9ED2C0();
}

uint64_t sub_25B9C9D20()
{
  return sub_25B9ED6A0();
}

uint64_t sub_25B9C9D3C(uint64_t result)
{
  uint64_t v4 = *v2;
  *(void *)(v3 + 56) = result;
  *(void *)(v3 + 64) = v4;
  *(unsigned char *)(v3 + 104) = *v1;
  return result;
}

uint64_t sub_25B9C9D50()
{
  *uint64_t v0 = *v1;
  uint64_t result = v1[1];
  v0[1] = result;
  return result;
}

uint64_t sub_25B9C9D64()
{
  *uint64_t v1 = v5;
  v1[1] = v4;
  v1[2] = v3;
  v1[3] = v2;
  return v0;
}

uint64_t sub_25B9C9D78@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_25B9C9D80()
{
  return sub_25B9AD048((void *)(v0 - 120));
}

uint64_t sub_25B9C9D98(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_25B9C9DAC()
{
  return swift_slowAlloc();
}

void sub_25B9C9DC4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

id sub_25B9C9DE4(uint64_t a1, ...)
{
  va_start(va2, a1);
  va_start(va1, a1);
  va_start(va, a1);
  long long v4 = va_arg(va1, __int128);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v1, (long long *)va, (uint64_t *)va1, (uint64_t *)va2);
}

uint64_t sub_25B9C9E04()
{
  return v0;
}

uint64_t sub_25B9C9E1C()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
  return sub_25B9ED390();
}

unint64_t sub_25B9C9E3C()
{
  return 0xD000000000000016;
}

uint64_t sub_25B9C9E5C(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_25B9C9E70()
{
  return 0x6552697261666173;
}

uint64_t Summary.topic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25B9C9EB0(v1, a1);
}

uint64_t sub_25B9C9EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51CF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Summary.topic.setter(uint64_t a1)
{
  return sub_25B9C9F20(a1, v1);
}

uint64_t sub_25B9C9F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25B94E854(&qword_26A51CF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Summary.topic.modify())()
{
  return nullsub_1;
}

uint64_t Summary.topLine.getter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD9EC() + 20);
  return sub_25B9C9EB0(v2, v0);
}

uint64_t type metadata accessor for Summary()
{
  uint64_t result = qword_26A51D4A0;
  if (!qword_26A51D4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Summary.topLine.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD8EC() + 20);
  return sub_25B9C9F20(v0, v2);
}

uint64_t (*Summary.topLine.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.synopsis.getter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD9EC() + 24);
  return sub_25B9C9EB0(v2, v0);
}

uint64_t Summary.synopsis.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD8EC() + 24);
  return sub_25B9C9F20(v0, v2);
}

uint64_t (*Summary.synopsis.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.visualConcepts.getter()
{
  type metadata accessor for Summary();
  return swift_bridgeObjectRetain();
}

uint64_t Summary.visualConcepts.setter()
{
  uint64_t v2 = *(int *)(sub_25B9CD8EC() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*Summary.visualConcepts.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.visualTopLine.getter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD9EC() + 32);
  return sub_25B9C9EB0(v2, v0);
}

uint64_t Summary.visualTopLine.setter()
{
  uint64_t v2 = v1 + *(int *)(sub_25B9CD8EC() + 32);
  return sub_25B9C9F20(v0, v2);
}

uint64_t (*Summary.visualTopLine.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.suggestedActions.getter()
{
  type metadata accessor for Summary();
  return swift_bridgeObjectRetain();
}

uint64_t Summary.suggestedActions.setter()
{
  uint64_t v2 = *(int *)(sub_25B9CD8EC() + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v2) = v0;
  return result;
}

uint64_t (*Summary.suggestedActions.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.safetyClassification.getter()
{
  uint64_t result = sub_25B9CD9EC();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t Summary.safetyClassification.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for Summary();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*Summary.safetyClassification.modify())(void)
{
  return nullsub_1;
}

void *Summary.inferenceEnvironmentInfo.getter()
{
  uint64_t v2 = sub_25B9CD9EC();
  sub_25B9A2504(v1 + *(int *)(v2 + 44), (uint64_t)v4);
  sub_25B9A2504((uint64_t)v4, v0);
  return sub_25B9CA4DC((uint64_t)v4);
}

uint64_t Summary.inferenceEnvironmentInfo.setter(uint64_t a1)
{
  sub_25B9A2504(a1, (uint64_t)v4);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for Summary() + 44);
  sub_25B9A2504(v2, (uint64_t)v5);
  sub_25B9CA4DC((uint64_t)v5);
  return sub_25B9A2504((uint64_t)v4, v2);
}

void *sub_25B9CA4DC(uint64_t a1)
{
  uint64_t v2 = sub_25B9A0BA4(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15]);
  return v1;
}

uint64_t (*Summary.inferenceEnvironmentInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v22 = *a7;
  sub_25B9A2504(a8, (uint64_t)v25);
  sub_25B9EC1F0();
  uint64_t v12 = (int *)sub_25B9CD91C(a9);
  uint64_t v13 = a9 + v12[5];
  sub_25B9CD950(v13);
  uint64_t v14 = a9 + v12[6];
  sub_25B9CD950(v14);
  uint64_t v15 = v12[7];
  *(void *)(a9 + v15) = 0;
  uint64_t v16 = a9 + v12[8];
  sub_25B9CD950(v16);
  uint64_t v17 = v12[10];
  *(unsigned char *)(a9 + v17) = 2;
  uint64_t v18 = a9 + v12[11];
  sub_25B9A2F44(v26);
  sub_25B9A2504((uint64_t)v26, v18);
  sub_25B9C9F20(a1, a9);
  sub_25B9C9F20(a2, v13);
  sub_25B9C9F20(a3, v14);
  swift_bridgeObjectRelease();
  *(void *)(a9 + v15) = a4;
  sub_25B9C9F20(a5, v16);
  *(void *)(a9 + v12[9]) = a6;
  *(unsigned char *)(a9 + v17) = v22;
  sub_25B9A2504(v18, (uint64_t)v27);
  sub_25B9CA4DC((uint64_t)v27);
  return sub_25B9A2504((uint64_t)v25, v18);
}

uint64_t sub_25B9CA6E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_25B9ED6A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656E694C706F74 && a2 == 0xE700000000000000;
    if (v6 || (sub_25B9ED6A0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x736973706F6E7973 && a2 == 0xE800000000000000;
      if (v7 || (sub_25B9ED6A0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6F436C6175736976 && a2 == 0xEE0073747065636ELL;
        if (v8 || (sub_25B9ED6A0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6F546C6175736976 && a2 == 0xED0000656E694C70;
          if (v9 || (sub_25B9ED6A0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x800000025B9F1A00 || (sub_25B9ED6A0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x800000025B9F18E0 || (sub_25B9ED6A0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x800000025B9F12C0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v10 = sub_25B9ED6A0();
            swift_bridgeObjectRelease();
            if (v10) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_25B9CAA4C(char a1)
{
  unint64_t result = 0x6369706F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656E694C706F74;
      break;
    case 2:
      unint64_t result = 0x736973706F6E7973;
      break;
    case 3:
      unint64_t result = 0x6F436C6175736976;
      break;
    case 4:
      unint64_t result = 0x6F546C6175736976;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25B9CAB70()
{
  return sub_25B9CAA4C(*v0);
}

uint64_t sub_25B9CAB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9CA6E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25B9CABA0(uint64_t a1)
{
  unint64_t v2 = sub_25B9CAF7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9CABDC(uint64_t a1)
{
  unint64_t v2 = sub_25B9CAF7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Summary.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_25B94E854(&qword_26A51D438);
  sub_25B950790();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_25B96DA10();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9CAF7C();
  sub_25B9ED7B0();
  LOBYTE(v15[0]) = 0;
  sub_25B9EC1F0();
  sub_25B9CB6DC((uint64_t)&unk_26A51D448);
  uint64_t v18 = v4;
  uint64_t v10 = v3;
  sub_25B9CD98C();
  if (!v2)
  {
    uint64_t v12 = (int *)type metadata accessor for Summary();
    sub_25B9CDA04(v12[5]);
    LOBYTE(v15[0]) = 1;
    sub_25B9CD98C();
    sub_25B9CDA04(v12[6]);
    LOBYTE(v15[0]) = 2;
    sub_25B9CD98C();
    v15[0] = *(void *)(v18 + v12[7]);
    v14[0] = 3;
    sub_25B94E854(&qword_26A51D450);
    sub_25B9CB71C((uint64_t)&unk_26A51D458);
    sub_25B9CD9A8();
    sub_25B9ED600();
    sub_25B9CDA04(v12[8]);
    LOBYTE(v15[0]) = 4;
    sub_25B9CD98C();
    v15[0] = *(void *)(v18 + v12[9]);
    v14[0] = 5;
    sub_25B94E854(&qword_26A51D460);
    sub_25B9CAFC8((uint64_t)&unk_26A51D468);
    sub_25B9CD9A8();
    sub_25B9ED660();
    char v17 = *(unsigned char *)(v18 + v12[10]);
    char v16 = 6;
    sub_25B9C7084();
    sub_25B9ED600();
    uint64_t v13 = sub_25B9CDA04(v12[11]);
    sub_25B9A2504(v13, (uint64_t)v15);
    sub_25B9A2504((uint64_t)v15, (uint64_t)v14);
    sub_25B9A2C04();
    sub_25B9ED600();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v6);
}

unint64_t sub_25B9CAF7C()
{
  unint64_t result = qword_26A51D440;
  if (!qword_26A51D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D440);
  }
  return result;
}

unint64_t sub_25B9CAFC8(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25B9524FC(&qword_26A51D460);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B9CB034()
{
  unint64_t result = qword_26A51D470;
  if (!qword_26A51D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D470);
  }
  return result;
}

void *Summary.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = sub_25B94E854(&qword_26A51CF58);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  long long v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v34 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v37 = (char *)&v34 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)&v34 - v11;
  sub_25B94E854(&qword_26A51D478);
  sub_25B950790();
  uint64_t v39 = v13;
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v12);
  sub_25B96DA10();
  uint64_t v14 = (int *)type metadata accessor for Summary();
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25B9EC1F0();
  sub_25B9CD950((uint64_t)v16);
  uint64_t v48 = &v16[v14[5]];
  sub_25B9CD950((uint64_t)v48);
  uint64_t v47 = &v16[v14[6]];
  sub_25B9CD950((uint64_t)v47);
  uint64_t v46 = v14[7];
  *(void *)&v16[v46] = 0;
  uint64_t v42 = &v16[v14[8]];
  sub_25B9CD950((uint64_t)v42);
  uint64_t v17 = v14[10];
  v16[v17] = 2;
  uint64_t v18 = (uint64_t)&v16[v14[11]];
  sub_25B9A2F44(v52);
  uint64_t v43 = v18;
  sub_25B9A2504((uint64_t)v52, v18);
  uint64_t v19 = a1[3];
  uint64_t v44 = a1;
  sub_25B94F2E0(a1, v19);
  sub_25B9CAF7C();
  uint64_t v41 = v2;
  uint64_t v20 = v45;
  sub_25B9ED7A0();
  if (v20)
  {
    uint64_t v27 = v43;
    uint64_t v28 = (uint64_t)v42;
    sub_25B94F65C((uint64_t)v44);
    sub_25B9CB67C((uint64_t)v16);
    sub_25B9CB67C((uint64_t)v48);
    sub_25B9CB67C((uint64_t)v47);
    swift_bridgeObjectRelease();
    sub_25B9CB67C(v28);
    sub_25B9A2504(v27, (uint64_t)v51);
    return sub_25B9CA4DC((uint64_t)v51);
  }
  else
  {
    uint64_t v45 = v17;
    LOBYTE(v51[0]) = 0;
    sub_25B9CB6DC((uint64_t)&unk_26A51D480);
    uint64_t v21 = (uint64_t)v38;
    sub_25B9ED530();
    sub_25B9C9F20(v21, (uint64_t)v16);
    LOBYTE(v51[0]) = 1;
    uint64_t v22 = (uint64_t)v37;
    sub_25B9ED530();
    sub_25B9C9F20(v22, (uint64_t)v48);
    LOBYTE(v51[0]) = 2;
    uint64_t v23 = (uint64_t)v36;
    sub_25B9CD9C4();
    sub_25B9C9F20(v23, (uint64_t)v47);
    sub_25B94E854(&qword_26A51D450);
    v50[0] = 3;
    sub_25B9CB71C((uint64_t)&unk_26A51D488);
    sub_25B9CD96C();
    sub_25B9ED530();
    uint64_t v24 = v51[0];
    uint64_t v25 = v46;
    swift_bridgeObjectRelease();
    *(void *)&v16[v25] = v24;
    LOBYTE(v51[0]) = 4;
    uint64_t v26 = (uint64_t)v35;
    sub_25B9CD9C4();
    sub_25B9C9F20(v26, (uint64_t)v42);
    sub_25B94E854(&qword_26A51D460);
    v50[0] = 5;
    sub_25B9CAFC8((uint64_t)&unk_26A51D490);
    sub_25B9CD96C();
    sub_25B9ED590();
    uint64_t v30 = v43;
    uint64_t v29 = (uint64_t)v44;
    *(void *)&v16[v14[9]] = v51[0];
    v50[0] = 6;
    sub_25B9C70D0();
    sub_25B9ED530();
    v16[v45] = v51[0];
    char v53 = 7;
    sub_25B9A2F64();
    sub_25B9ED530();
    uint64_t v31 = sub_25B9CD904();
    v32(v31);
    sub_25B9A2504((uint64_t)v51, (uint64_t)v49);
    sub_25B9A2504(v30, (uint64_t)v50);
    sub_25B9CA4DC((uint64_t)v50);
    sub_25B9A2504((uint64_t)v49, v30);
    sub_25B9CB7E4((uint64_t)v16, v34);
    sub_25B94F65C(v29);
    return (void *)sub_25B9CB848((uint64_t)v16);
  }
}

uint64_t sub_25B9CB67C(uint64_t a1)
{
  uint64_t v2 = sub_25B94E854(&qword_26A51CF58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25B9CB6DC(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    sub_25B9EC1F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B9CB71C(uint64_t a1)
{
  unint64_t result = sub_25B9A0BA4(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25B9524FC(&qword_26A51D450);
    sub_25B9CB6DC(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25B9CB798()
{
  unint64_t result = qword_26A51D498;
  if (!qword_26A51D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D498);
  }
  return result;
}

uint64_t sub_25B9CB7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Summary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25B9CB848(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Summary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_25B9CB8A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Summary.init(from:)(a1, a2);
}

uint64_t sub_25B9CB8BC(void *a1)
{
  return Summary.encode(to:)(a1);
}

void Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:safetyClassification:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t a8@<X8>)
{
  HIDWORD(v28) = *a7;
  sub_25B9EC1F0();
  char v16 = (int *)sub_25B9CD91C(a8);
  sub_25B9CD878(v16);
  *(unsigned char *)(a8 + v10) = 2;
  uint64_t v17 = a8 + *(int *)(v11 + 44);
  sub_25B9A2F44(v32);
  sub_25B9A2504((uint64_t)v32, v17);
  sub_25B9C9F20(a1, a8);
  sub_25B9C9F20(a2, v12);
  sub_25B9C9F20(a3, v8);
  sub_25B9C9F20(a5, v9);
  uint64_t v18 = swift_bridgeObjectRelease();
  sub_25B9CDA10(v18, v19, v20, v21, v22, v23, v24, v25, a3, a5, v28, a4, a6);
  *(unsigned char *)(a8 + v10) = v29;
}

uint64_t Summary.init(topic:topLine:synopsis:suggestedActions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_25B9EC1F0();
  sub_25B99533C(a5);
  uint64_t v7 = (int *)type metadata accessor for Summary();
  uint64_t v8 = a5 + v7[5];
  sub_25B99533C(v8);
  uint64_t v9 = a5 + v7[6];
  sub_25B99533C(v9);
  uint64_t v10 = v7[7];
  *(void *)(a5 + v10) = 0;
  uint64_t v11 = a5 + v7[8];
  sub_25B99533C(v11);
  uint64_t v12 = v7[10];
  *(unsigned char *)(a5 + v12) = 2;
  uint64_t v13 = a5 + v7[11];
  sub_25B9A2F44(v18);
  sub_25B9A2504((uint64_t)v18, v13);
  sub_25B9C9F20(a1, a5);
  sub_25B9C9F20(a2, v8);
  sub_25B9C9F20(a3, v9);
  sub_25B9CB67C(v11);
  sub_25B99533C(v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a5 + v10) = 0;
  *(void *)(a5 + v7[9]) = a4;
  *(unsigned char *)(a5 + v12) = 2;
  return result;
}

void Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_25B9EC1F0();
  uint64_t v14 = (int *)sub_25B9CD91C(a7);
  sub_25B9CD878(v14);
  *(unsigned char *)(a7 + v9) = 2;
  uint64_t v15 = a7 + *(int *)(v10 + 44);
  sub_25B9A2F44(v29);
  sub_25B9A2504((uint64_t)v29, v15);
  sub_25B9C9F20(a1, a7);
  sub_25B9C9F20(a2, v11);
  sub_25B9C9F20(a3, v7);
  sub_25B9C9F20(a5, v8);
  uint64_t v16 = swift_bridgeObjectRelease();
  sub_25B9CDA10(v16, v17, v18, v19, v20, v21, v22, v23, a2, a3, a5, a4, a6);
  *(unsigned char *)(a7 + v9) = 2;
}

uint64_t *initializeBufferWithCopyOfBuffer for Summary(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25B9EC1F0();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_25B94E854(&qword_26A51CF58);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v14, 1, v7))
    {
      uint64_t v17 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v15, v16, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v15, 0, 1, v7);
    }
    uint64_t v18 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v7))
    {
      uint64_t v21 = sub_25B94E854(&qword_26A51CF58);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v19, v20, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v7);
    }
    uint64_t v22 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v23 = a3[11];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    if (v26 == 1)
    {
      memcpy(v24, v25, 0x80uLL);
    }
    else
    {
      *uint64_t v24 = *v25;
      v24[1] = v26;
      uint64_t v27 = v25[3];
      void v24[2] = v25[2];
      v24[3] = v27;
      uint64_t v28 = v25[5];
      v24[4] = v25[4];
      v24[5] = v28;
      uint64_t v29 = v25[7];
      v24[6] = v25[6];
      v24[7] = v29;
      uint64_t v30 = v25[9];
      v24[8] = v25[8];
      v24[9] = v30;
      uint64_t v31 = v25[11];
      v24[10] = v25[10];
      v24[11] = v31;
      uint64_t v32 = v25[13];
      v24[12] = v25[12];
      v24[13] = v32;
      uint64_t v33 = v25[14];
      uint64_t v34 = v25[15];
      v24[14] = v33;
      v24[15] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for Summary(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_25B9EC1F0();
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v5, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v5, v4);
  }
  uint64_t v6 = a1 + a2[6];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v6, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[8];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[11] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25B9EC1F0();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_25B94E854(&qword_26A51CF58);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v13, v14, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v18, 1, v6))
  {
    uint64_t v19 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v17, v18, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v6);
  }
  uint64_t v20 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  if (v24 == 1)
  {
    memcpy(v22, v23, 0x80uLL);
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = *((void *)v23 + 3);
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((void *)v22 + 3) = v25;
    uint64_t v26 = *((void *)v23 + 5);
    *((void *)v22 + 4) = *((void *)v23 + 4);
    *((void *)v22 + 5) = v26;
    uint64_t v27 = *((void *)v23 + 7);
    *((void *)v22 + 6) = *((void *)v23 + 6);
    *((void *)v22 + 7) = v27;
    uint64_t v28 = *((void *)v23 + 9);
    *((void *)v22 + 8) = *((void *)v23 + 8);
    *((void *)v22 + 9) = v28;
    uint64_t v29 = *((void *)v23 + 11);
    *((void *)v22 + 10) = *((void *)v23 + 10);
    *((void *)v22 + 11) = v29;
    uint64_t v30 = *((void *)v23 + 13);
    *((void *)v22 + 12) = *((void *)v23 + 12);
    *((void *)v22 + 13) = v30;
    uint64_t v31 = *((void *)v23 + 14);
    uint64_t v32 = *((void *)v23 + 15);
    *((void *)v22 + 14) = v31;
    *((void *)v22 + 15) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *assignWithCopy for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25B9EC1F0();
  int v7 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_25B94E854(&qword_26A51CF58);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v18], 1, v6);
  int v22 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v19, v20, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v23 = *(void *)(v6 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v6);
LABEL_18:
    uint64_t v24 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  int v28 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v25], 1, v6);
  int v29 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v26, v27, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v30 = *(void *)(v6 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v6);
LABEL_24:
    uint64_t v31 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v26, v27, v6);
LABEL_25:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)&a1[v32 + 8];
  uint64_t v36 = *((void *)v34 + 1);
  if (v35 != 1)
  {
    if (v36 != 1)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 2) = *((void *)v34 + 2);
      *((void *)v33 + 3) = *((void *)v34 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 4) = *((void *)v34 + 4);
      *((void *)v33 + 5) = *((void *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *((void *)v33 + 7) = *((void *)v34 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 8) = *((void *)v34 + 8);
      *((void *)v33 + 9) = *((void *)v34 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 10) = *((void *)v34 + 10);
      *((void *)v33 + 11) = *((void *)v34 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 12) = *((void *)v34 + 12);
      *((void *)v33 + 13) = *((void *)v34 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v33 + 14) = *((void *)v34 + 14);
      *((void *)v33 + 15) = *((void *)v34 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25B95B270((uint64_t)v33);
    goto LABEL_30;
  }
  if (v36 == 1)
  {
LABEL_30:
    memcpy(v33, v34, 0x80uLL);
    return a1;
  }
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  *((void *)v33 + 2) = *((void *)v34 + 2);
  *((void *)v33 + 3) = *((void *)v34 + 3);
  *((void *)v33 + 4) = *((void *)v34 + 4);
  *((void *)v33 + 5) = *((void *)v34 + 5);
  *((void *)v33 + 6) = *((void *)v34 + 6);
  *((void *)v33 + 7) = *((void *)v34 + 7);
  *((void *)v33 + 8) = *((void *)v34 + 8);
  *((void *)v33 + 9) = *((void *)v34 + 9);
  *((void *)v33 + 10) = *((void *)v34 + 10);
  *((void *)v33 + 11) = *((void *)v34 + 11);
  *((void *)v33 + 12) = *((void *)v34 + 12);
  *((void *)v33 + 13) = *((void *)v34 + 13);
  *((void *)v33 + 14) = *((void *)v34 + 14);
  *((void *)v33 + 15) = *((void *)v34 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *initializeWithTake for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25B9EC1F0();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_25B94E854(&qword_26A51CF58);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v13, v14, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v16], 1, v6))
  {
    uint64_t v19 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v17, v18, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v6);
  }
  uint64_t v20 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v20] = a2[v20];
  memcpy(&a1[a3[11]], &a2[a3[11]], 0x80uLL);
  return a1;
}

char *assignWithTake for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_25B9EC1F0();
  int v7 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_25B94E854(&qword_26A51CF58);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v18], 1, v6);
  int v22 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v19, v20, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v23 = *(void *)(v6 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v6);
LABEL_18:
    uint64_t v24 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  int v28 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v25], 1, v6);
  int v29 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v26, v27, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v30 = *(void *)(v6 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v6);
LABEL_24:
    uint64_t v31 = sub_25B94E854(&qword_26A51CF58);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v26, v27, v6);
LABEL_25:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  if (*(void *)&a1[v32 + 8] != 1)
  {
    uint64_t v35 = *((void *)v34 + 1);
    if (v35 != 1)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *((void *)v34 + 3);
      *((void *)v33 + 2) = *((void *)v34 + 2);
      *((void *)v33 + 3) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *((void *)v34 + 5);
      *((void *)v33 + 4) = *((void *)v34 + 4);
      *((void *)v33 + 5) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = *((void *)v34 + 7);
      *((void *)v33 + 6) = *((void *)v34 + 6);
      *((void *)v33 + 7) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *((void *)v34 + 9);
      *((void *)v33 + 8) = *((void *)v34 + 8);
      *((void *)v33 + 9) = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = *((void *)v34 + 11);
      *((void *)v33 + 10) = *((void *)v34 + 10);
      *((void *)v33 + 11) = v40;
      swift_bridgeObjectRelease();
      uint64_t v41 = *((void *)v34 + 13);
      *((void *)v33 + 12) = *((void *)v34 + 12);
      *((void *)v33 + 13) = v41;
      swift_bridgeObjectRelease();
      uint64_t v42 = *((void *)v34 + 15);
      *((void *)v33 + 14) = *((void *)v34 + 14);
      *((void *)v33 + 15) = v42;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25B95B270((uint64_t)&a1[v32]);
  }
  memcpy(v33, v34, 0x80uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for Summary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25B9CD440);
}

uint64_t sub_25B9CD440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25B94E854(&qword_26A51CF58);
  sub_25B950858();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Summary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25B9CD4E4);
}

void sub_25B9CD4E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25B94E854(&qword_26A51CF58);
  sub_25B950858();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
}

void sub_25B9CD570()
{
  sub_25B9CD62C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25B9CD62C()
{
  if (!qword_26A51D4B0)
  {
    sub_25B9EC1F0();
    unint64_t v0 = sub_25B9ED2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A51D4B0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Summary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9CD750);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Summary.CodingKeys()
{
  return &type metadata for Summary.CodingKeys;
}

unint64_t sub_25B9CD78C()
{
  unint64_t result = qword_26A51D4B8;
  if (!qword_26A51D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4B8);
  }
  return result;
}

unint64_t sub_25B9CD7DC()
{
  unint64_t result = qword_26A51D4C0;
  if (!qword_26A51D4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4C0);
  }
  return result;
}

unint64_t sub_25B9CD82C()
{
  unint64_t result = qword_26A51D4C8;
  if (!qword_26A51D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4C8);
  }
  return result;
}

uint64_t sub_25B9CD878(int *a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[5], 1, 1, v2);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[6], 1, 1, v2);
  *(void *)(v1 + a1[7]) = 0;
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[8], 1, 1, v2);
}

uint64_t sub_25B9CD8EC()
{
  return type metadata accessor for Summary();
}

uint64_t sub_25B9CD904()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_25B9CD91C(uint64_t a1)
{
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
  return type metadata accessor for Summary();
}

uint64_t sub_25B9CD950(uint64_t a1)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

uint64_t sub_25B9CD96C()
{
  return v0;
}

uint64_t sub_25B9CD98C()
{
  return sub_25B9ED600();
}

uint64_t sub_25B9CD9A8()
{
  return v0 + 144;
}

uint64_t sub_25B9CD9C4()
{
  return sub_25B9ED530();
}

uint64_t sub_25B9CD9EC()
{
  return type metadata accessor for Summary();
}

uint64_t sub_25B9CDA04@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 72) + a1;
}

void sub_25B9CDA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + v14) = a12;
  *(void *)(v13 + *(int *)(v15 + 36)) = a13;
}

uint64_t SummarySafetyClassification.isSafe.getter()
{
  return *v0;
}

Sage::SummarySafetyClassification __swiftcall SummarySafetyClassification.init(isSafe:)(Sage::SummarySafetyClassification isSafe)
{
  v1->isSafe = isSafe.isSafe;
  return isSafe;
}

uint64_t sub_25B9CDA34(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656661537369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25B9ED6A0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25B9CDAB4()
{
  return 0x656661537369;
}

uint64_t sub_25B9CDACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25B9CDA34(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25B9CDAF8(uint64_t a1)
{
  unint64_t v2 = sub_25B9CDC58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25B9CDB34(uint64_t a1)
{
  unint64_t v2 = sub_25B9CDC58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SummarySafetyClassification.encode(to:)(void *a1)
{
  sub_25B94E854(&qword_26A51D4D0);
  sub_25B9CE13C();
  MEMORY[0x270FA5388](v2);
  sub_25B959398();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9CDC58();
  sub_25B9ED7B0();
  sub_25B9ED620();
  uint64_t v3 = sub_25B9CE15C();
  return v4(v3);
}

unint64_t sub_25B9CDC58()
{
  unint64_t result = qword_26A51D4D8;
  if (!qword_26A51D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4D8);
  }
  return result;
}

uint64_t SummarySafetyClassification.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_25B94E854(&qword_26A51D4E0);
  sub_25B9CE13C();
  MEMORY[0x270FA5388](v5);
  sub_25B959398();
  sub_25B94F2E0(a1, a1[3]);
  sub_25B9CDC58();
  sub_25B9ED7A0();
  if (!v2)
  {
    char v6 = sub_25B9ED550();
    uint64_t v7 = sub_25B9CE15C();
    v8(v7);
    *a2 = v6 & 1;
  }
  return sub_25B94F65C((uint64_t)a1);
}

uint64_t sub_25B9CDDAC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SummarySafetyClassification.init(from:)(a1, a2);
}

uint64_t sub_25B9CDDC4(void *a1)
{
  return SummarySafetyClassification.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SummarySafetyClassification(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummarySafetyClassification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9CDF40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySafetyClassification()
{
  return &type metadata for SummarySafetyClassification;
}

unsigned char *storeEnumTagSinglePayload for SummarySafetyClassification.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25B9CE014);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySafetyClassification.CodingKeys()
{
  return &type metadata for SummarySafetyClassification.CodingKeys;
}

unint64_t sub_25B9CE050()
{
  unint64_t result = qword_26A51D4E8;
  if (!qword_26A51D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4E8);
  }
  return result;
}

unint64_t sub_25B9CE0A0()
{
  unint64_t result = qword_26A51D4F0;
  if (!qword_26A51D4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4F0);
  }
  return result;
}

unint64_t sub_25B9CE0F0()
{
  unint64_t result = qword_26A51D4F8;
  if (!qword_26A51D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D4F8);
  }
  return result;
}

uint64_t sub_25B9CE15C()
{
  return v0;
}

uint64_t sub_25B9CE174(char a1)
{
  return sub_25B9CEBB0(0, a1);
}

uint64_t sub_25B9CE180()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9CE1BC(uint64_t a1)
{
  return sub_25B9CE240(a1, (void (*)(unsigned char *, uint64_t))sub_25B9CE62C);
}

uint64_t sub_25B9CE1D4(uint64_t a1)
{
  return sub_25B9CE240(a1, (void (*)(unsigned char *, uint64_t))sub_25B9CE31C);
}

uint64_t sub_25B9CE1EC()
{
  return sub_25B9CEA14();
}

uint64_t sub_25B9CE1F8(uint64_t a1)
{
  return sub_25B9CE240(a1, (void (*)(unsigned char *, uint64_t))sub_25B9CE870);
}

uint64_t sub_25B9CE210(uint64_t a1)
{
  return sub_25B9CE240(a1, (void (*)(unsigned char *, uint64_t))sub_25B9CE924);
}

uint64_t sub_25B9CE228(uint64_t a1)
{
  return sub_25B9CE240(a1, (void (*)(unsigned char *, uint64_t))sub_25B9CE7BC);
}

uint64_t sub_25B9CE240(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_25B9ED740();
  a2(v5, a1);
  return sub_25B9ED790();
}

uint64_t sub_25B9CE290()
{
  return sub_25B9CEAC8();
}

uint64_t sub_25B9CE29C(uint64_t a1, char a2)
{
  if (!a2) {
    sub_25B9DBF94();
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE31C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_25B9DBF94();
      break;
    default:
      break;
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE424()
{
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE48C()
{
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE62C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 6:
      sub_25B9DC2C8();
      break;
    default:
      break;
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE744()
{
  return sub_25B9ECFF0();
}

uint64_t sub_25B9CE75C()
{
  SummarizationClient.UseCase.rawValue.getter();
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE7BC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_25B9DC2DC();
      break;
    case 3:
      sub_25B9DC2C8();
      break;
    default:
      break;
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE870(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_25B9DC000();
      break;
    case 2:
      sub_25B9DC094();
      break;
    default:
      break;
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE924()
{
  sub_25B9DC000();
  switch(v0)
  {
    case 1:
      sub_25B9DC094();
      break;
    case 2:
      sub_25B9DC2DC();
      break;
    default:
      break;
  }
  sub_25B9ECFF0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9CE9CC(uint64_t a1, uint64_t a2)
{
  return sub_25B9CEB64(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25B9CE924);
}

uint64_t sub_25B9CE9E4(uint64_t a1, uint64_t a2)
{
  return sub_25B9CEB64(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25B9CE870);
}

uint64_t sub_25B9CE9FC(uint64_t a1, uint64_t a2)
{
  return sub_25B9CEB64(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25B9CE7BC);
}

uint64_t sub_25B9CEA14()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9CEA78()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9CEAB0(uint64_t a1, uint64_t a2)
{
  return sub_25B9CEB64(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25B9CE62C);
}

uint64_t sub_25B9CEAC8()
{
  return sub_25B9ED790();
}

uint64_t sub_25B9CEB4C(uint64_t a1, uint64_t a2)
{
  return sub_25B9CEB64(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25B9CE31C);
}

uint64_t sub_25B9CEB64(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_25B9ED740();
  a3(v6, a2);
  return sub_25B9ED790();
}

uint64_t sub_25B9CEBB0(uint64_t a1, char a2)
{
  if (!a2) {
    sub_25B9DBF94();
  }
  sub_25B9ECFF0();
  swift_bridgeObjectRelease();
  return sub_25B9ED790();
}

void sub_25B9CEC44()
{
}

void sub_25B9CEC74()
{
}

void sub_25B9CECA4()
{
  sub_25B964F38();
  int v2 = v1;
  uint64_t v24 = v3;
  uint64_t v5 = v4;
  BOOL v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_25B94E854(v6);
  uint64_t v13 = sub_25B96068C(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (uint64_t *)sub_25B9DC118();
  uint64_t v15 = sub_25B94E854(v14);
  sub_25B950790();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  sub_25B950870();
  uint64_t v21 = v20 - v19;
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v11, 1, v15) == 1)
  {
    sub_25B9DBC70(v11, v7);
    v2(v9);
    sub_25B9EC300();
    sub_25B95097C();
    (*(void (**)(uint64_t))(v22 + 8))(v9);
    sub_25B9DBC70(v0, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v21, v11, v15);
    sub_25B9D9294(v21, v9, v24, v5);
    sub_25B9EC300();
    sub_25B95097C();
    (*(void (**)(uint64_t))(v23 + 8))(v9);
  }
  sub_25B964F50();
}

uint64_t sub_25B9CEE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_25B94E854(&qword_26A51D138);
  uint64_t v9 = sub_25B96068C(v8);
  MEMORY[0x270FA5388](v9);
  sub_25B9652E4();
  uint64_t v10 = sub_25B94E854(&qword_26A51BF30);
  sub_25B950790();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_25B9DC118();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v14, 1, v10) == 1)
  {
    sub_25B9DBC70(a1, &qword_26A51D138);
    sub_25B9953E0();
    sub_25B993C0C();
    swift_bridgeObjectRelease();
    return sub_25B9DBC70(v3, &qword_26A51D138);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v4, a1, v10);
    sub_25B9D9318(v4, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25B9CEF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_25B961A24((_OWORD *)a1, v6);
    sub_25B9D93A8(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25B9DBC70(a1, &qword_26A51B7E8);
    sub_25B993D40(v6);
    swift_bridgeObjectRelease();
    return sub_25B9DBC70((uint64_t)v6, &qword_26A51B7E8);
  }
}

void *sub_25B9CF008()
{
  qword_26B34AA10 = (uint64_t)&unk_270932CC8;
  return &unk_270932CC8;
}

id static TextCompositionXPCService.interface.getter()
{
  if (qword_26B34A9E0 != -1) {
    swift_once();
  }
  sub_25B960750();
  uint64_t v0 = (void *)qword_26B34AA10;
  return v0;
}

void static TextCompositionXPCService.interface.setter(uint64_t a1)
{
  if (qword_26B34A9E0 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  int v2 = (void *)qword_26B34AA10;
  qword_26B34AA10 = a1;
}

uint64_t (*static TextCompositionXPCService.interface.modify())()
{
  if (qword_26B34A9E0 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t static TextCompositionXPCService.serviceName.getter()
{
  return sub_25B995628();
}

uint64_t static TextCompositionXPCService.serviceName.setter()
{
  return sub_25B9DC164();
}

uint64_t (*static TextCompositionXPCService.serviceName.modify())()
{
  return j__swift_endAccess;
}

uint64_t static TextCompositionXPCService.entitlementName.getter()
{
  return sub_25B995628();
}

uint64_t static TextCompositionXPCService.entitlementName.setter()
{
  return sub_25B9DC164();
}

uint64_t sub_25B9CF1F8()
{
  sub_25B9DC318();
  swift_beginAccess();
  *uint64_t v1 = v3;
  *uint64_t v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TextCompositionXPCService.entitlementName.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25B9CF294()
{
  sub_25B94E854(&qword_26B34AA58);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25B9F6AE0;
  *(void *)(v0 + 32) = sel_reviewWithString_range_options_with_;
  *(void *)(v0 + 40) = 0;
  sub_25B94E854(&qword_26B34AA60);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_25B9F76E0;
  uint64_t v2 = sub_25B97E120(0, &qword_26B34AA30);
  *(void *)(v1 + 56) = sub_25B94E854(&qword_26B34AA38);
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = sub_25B97E120(0, &qword_26B34AA18);
  *(void *)(v1 + 88) = sub_25B94E854(&qword_26B34AA20);
  *(void *)(v1 + 64) = v3;
  sub_25B97E120(0, &qword_26B34AA28);
  uint64_t v4 = (void *)MEMORY[0x26116C6E0](v1);
  sub_25B97E120(0, &qword_26B34AA48);
  sub_25B97E0C0();
  uint64_t v5 = sub_25B9ED1F0();

  uint64_t v6 = sub_25B97D390(v5);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v6;
  qword_26B34A9F0 = v0;
  return result;
}

uint64_t static TextCompositionXPCService.selectorClasses.getter()
{
  if (qword_26B34A9E8 != -1) {
    swift_once();
  }
  sub_25B960750();
  return swift_bridgeObjectRetain();
}

uint64_t static TextCompositionXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_26B34A9E8 != -1) {
    swift_once();
  }
  sub_25B9607EC();
  qword_26B34A9F0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TextCompositionXPCService.selectorClasses.modify())()
{
  if (qword_26B34A9E8 != -1) {
    swift_once();
  }
  sub_25B960610();
  return j_j__swift_endAccess;
}

uint64_t sub_25B9CF550()
{
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9604A4(v0, qword_26B34A9F8);
  sub_25B9559F0(v0, (uint64_t)qword_26B34A9F8);
  return sub_25B9ECA30();
}

uint64_t static TextCompositionXPCService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B34A9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  uint64_t v3 = sub_25B9559F0(v2, (uint64_t)qword_26B34A9F8);
  sub_25B960750();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static TextCompositionXPCService.logger.setter(uint64_t a1)
{
  if (qword_26B34A9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25B9ECD70();
  sub_25B9559F0(v2, (uint64_t)qword_26B34A9F8);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = sub_25B9953E0();
  v5(v4);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*static TextCompositionXPCService.logger.modify())()
{
  if (qword_26B34A9D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25B9ECD70();
  sub_25B9559F0(v0, (uint64_t)qword_26B34A9F8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_25B9CF7F0()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D520 = result;
  *(void *)algn_26A51D528 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionIsPrecomputationRequestKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B040);
}

uint64_t sub_25B9CF848()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D530 = result;
  *(void *)algn_26A51D538 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientRespondOnlyIfCached.getter()
{
  return sub_25B9CFE3C(&qword_26A51B048);
}

uint64_t sub_25B9CF8A0()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D540 = result;
  *(void *)algn_26A51D548 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientAppProcessIdentifierKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B050);
}

uint64_t sub_25B9CF8F8()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D550 = result;
  *(void *)algn_26A51D558 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientProcessIdentifierKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B058);
}

uint64_t sub_25B9CF950()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51AF18 = result;
  unk_26A51AF20 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientTokenKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51AF10);
}

id sub_25B9CF9A8()
{
  qword_26A51D560 = *MEMORY[0x263F7E4B8];
  return (id)qword_26A51D560;
}

id static TextCompositionClient.textCompositionClientUseCaseIdentifierKey.getter()
{
  if (qword_26A51B060 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26A51D560;
  return v0;
}

uint64_t sub_25B9CFA1C()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D568 = result;
  unk_26A51D570 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientUserPreferredLanguageKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B068);
}

uint64_t sub_25B9CFA74()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D578 = result;
  unk_26A51D580 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientResultIndexKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B070);
}

uint64_t sub_25B9CFACC()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D588 = result;
  unk_26A51D590 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientResultCountKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B078);
}

uint64_t sub_25B9CFB24()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D598 = result;
  unk_26A51D5A0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientFinishedKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B080);
}

uint64_t sub_25B9CFB7C()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5A8 = result;
  unk_26A51D5B0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientRewritingTypeKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B088);
}

uint64_t sub_25B9CFBD4()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5B8 = result;
  unk_26A51D5C0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientLanguageKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B090);
}

uint64_t sub_25B9CFC2C()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5C8 = result;
  unk_26A51D5D0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientInstructionsKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B098);
}

uint64_t sub_25B9CFC84()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5D8 = result;
  unk_26A51D5E0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientSeedKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B0A0);
}

uint64_t sub_25B9CFCDC()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5E8 = result;
  unk_26A51D5F0 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientSmartQuotesTypeKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B0A8);
}

uint64_t sub_25B9CFD34()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D5F8 = result;
  unk_26A51D600 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientSmartDashesTypeKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B0B0);
}

uint64_t sub_25B9CFD8C()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D608 = result;
  unk_26A51D610 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientUserQuotesKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B0B8);
}

uint64_t sub_25B9CFDE4()
{
  uint64_t result = sub_25B9ECFD0();
  qword_26A51D618 = result;
  unk_26A51D620 = v1;
  return result;
}

uint64_t static TextCompositionClient.textCompositionClientUserFeedbackInputStringKey.getter()
{
  return sub_25B9CFE3C(&qword_26A51B0C0);
}

uint64_t sub_25B9CFE3C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return sub_25B995998();
}

Sage::TextCompositionClient::RewritingType_optional __swiftcall TextCompositionClient.RewritingType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t TextCompositionClient.RewritingType.rawValue.getter()
{
  unint64_t result = 0x636967614DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x657369636E6F43;
      break;
    case 2:
      unint64_t result = 0x796C646E65697246;
      break;
    case 3:
      unint64_t result = 0x69737365666F7250;
      break;
    case 4:
      unint64_t result = 0x6574696C6F50;
      break;
    case 5:
      unint64_t result = 0x65646E456E65704FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x7374656C6C7542;
      break;
    case 8:
      unint64_t result = 0x73656C626154;
      break;
    case 9:
      unint64_t result = 0x79617761656B6154;
      break;
    case 0xA:
      unint64_t result = 0x616572666F6F7250;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25B9D0050(unsigned __int8 *a1, char *a2)
{
  return sub_25B9B9A98(*a1, *a2);
}

uint64_t sub_25B9D005C()
{
  return sub_25B9CE240(*v0, (void (*)(unsigned char *, uint64_t))sub_25B9CE48C);
}

uint64_t sub_25B9D008C()
{
  return sub_25B9CE48C();
}

uint64_t sub_25B9D0094(uint64_t a1)
{
  return sub_25B9CEB64(a1, *v1, (void (*)(unsigned char *, uint64_t))sub_25B9CE48C);
}

Sage::TextCompositionClient::RewritingType_optional sub_25B9D00C4(Swift::String *a1)
{
  return TextCompositionClient.RewritingType.init(rawValue:)(*a1);
}

unint64_t sub_25B9D00D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TextCompositionClient.RewritingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Sage::TextCompositionClient::TCDocumentType_optional __swiftcall TextCompositionClient.TCDocumentType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25B9ED4E0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TextCompositionClient.TCDocumentType.rawValue.getter()
{
  if (*v0) {
    return 0x7373654D74786554;
  }
  else {
    return 0x7373654D6C69614DLL;
  }
}

uint64_t sub_25B9D0198(char *a1, char *a2)
{
  return sub_25B9B9A00(*a1, *a2);
}

uint64_t sub_25B9D01A4()
{
  return sub_25B9CE290();
}

uint64_t sub_25B9D01AC()
{
  return sub_25B9CE424();
}

uint64_t sub_25B9D01B4()
{
  return sub_25B9CEAC8();
}

Sage::TextCompositionClient::TCDocumentType_optional sub_25B9D01BC(Swift::String *a1)
{
  return TextCompositionClient.TCDocumentType.init(rawValue:)(*a1);
}

uint64_t sub_25B9D01C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TextCompositionClient.TCDocumentType.rawValue.getter();
  *a1 = result;
  a1[1] = 0xEB00000000656761;
  return result;
}

id TextCompositionClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t sub_25B9D0230(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  if (!a1) {
    a1 = sub_25B9ECF80();
  }
  uint64_t v22 = a1;
  uint64_t v11 = qword_26A51B080;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_26A51D598;
  uint64_t v13 = unk_26A51D5A0;
  uint64_t v21 = MEMORY[0x263F8D4F8];
  LOBYTE(v20[0]) = a2 & 1;
  swift_bridgeObjectRetain();
  sub_25B9CEF74((uint64_t)v20, v12, v13);
  uint64_t v14 = MEMORY[0x263F8D6C8];
  if ((a4 & 1) == 0)
  {
    if (qword_26A51B070 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_26A51D578;
    uint64_t v16 = unk_26A51D580;
    uint64_t v21 = v14;
    v20[0] = a3;
    swift_bridgeObjectRetain();
    sub_25B9CEF74((uint64_t)v20, v15, v16);
  }
  if ((a6 & 1) == 0)
  {
    if (qword_26A51B078 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_26A51D588;
    uint64_t v18 = unk_26A51D590;
    uint64_t v21 = v14;
    v20[0] = a5;
    swift_bridgeObjectRetain();
    sub_25B9CEF74((uint64_t)v20, v17, v18);
  }
  return v22;
}

uint64_t sub_25B9D0404(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 16))
    {
      swift_bridgeObjectRetain();
      sub_25B9953E0();
      unint64_t v2 = sub_25B991A30();
      if (v3)
      {
        sub_25B993AC8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
        swift_bridgeObjectRelease();
        if (*((void *)&v6 + 1))
        {
          uint64_t result = swift_dynamicCast();
          if (result) {
            return v4;
          }
          return result;
        }
      }
      else
      {
        long long v5 = 0u;
        long long v6 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v5 = 0u;
      long long v6 = 0u;
    }
    sub_25B9DBC70((uint64_t)&v5, &qword_26A51B7E8);
    return 0;
  }
  return result;
}

void sub_25B9D04E0()
{
  sub_25B964F38();
  unint64_t v2 = v1;
  uint64_t v3 = sub_25B9ECD70();
  sub_25B950790();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v15 - v8;
  if (v2 >= 0x7FFFFFFFFFFFFFFFLL)
  {
    sub_25B9ECD60();
    uint64_t v12 = sub_25B9ECD40();
    os_log_type_t v13 = sub_25B9ED250();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      v15[2] = v2;
      sub_25B9ED2C0();
      _os_log_impl(&dword_25B94C000, v12, v13, "Error cancelling request: %lu - token value needs to be smaller than MAXINT", v14, 0xCu);
      sub_25B959290();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v3);
    goto LABEL_7;
  }
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  objc_msgSend(v10, sel_requestCancellationForToken_, v2);

  if (*(void *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x270FA5388](v11);
    v15[-2] = v2;
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
LABEL_7:
    sub_25B964F50();
    return;
  }
  __break(1u);
}

id sub_25B9D0828(id result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return objc_msgSend(result, sel_cancelWithToken_, a2);
  }
  __break(1u);
  return result;
}

void sub_25B9D0840()
{
  sub_25B964F38();
  uint64_t v2 = v1;
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v3);
  sub_25B959380();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  objc_msgSend(v4, sel_requestCancellationForToken_, v2);

  if (*(void *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x270FA5388](v5);
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B9D0A94()
{
  sub_25B964F38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v4);
  sub_25B959380();
  uint64_t v5 = sub_25B9EC1F0();
  uint64_t v6 = sub_25B96068C(v5);
  MEMORY[0x270FA5388](v6);
  sub_25B950870();
  sub_25B97E120(0, (unint64_t *)&qword_26A51D148);
  sub_25B9EC1E0();
  id v7 = (id)sub_25B9ED270();
  id v8 = objc_msgSend(v7, sel_length);
  id v9 = objc_allocWithZone(MEMORY[0x263F7E420]);
  id v10 = sub_25B9D8B20(v7, 0, (uint64_t)v8, 0);
  if (*(void *)(v1 + OBJC_IVAR___TextCompositionClient_client))
  {
    uint64_t v11 = v10;
    *(void *)&v12[-16] = MEMORY[0x270FA5388](v10);
    *(void *)&v12[-8] = v3;
    swift_retain();
    sub_25B9EC9C0();
    swift_release();

    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B9D0DC4(void *a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  id v4 = (id)sub_25B9ED070();
  objc_msgSend(a1, sel_prewarmWithInput_rewritingTypes_, a2, v4);
  swift_unknownObjectRelease();
}

void sub_25B9D0E48()
{
  sub_25B964F38();
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  if (*(void *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x270FA5388](v2);
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

void sub_25B9D106C(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = (id)sub_25B9ECFC0();
  objc_msgSend(a1, sel_prewarmSmartRepliesWithDocumentType_, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_25B9D1118()
{
  sub_25B964F38();
  sub_25B9ECD70();
  sub_25B950790();
  MEMORY[0x270FA5388](v1);
  sub_25B959380();
  if (*(void *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x270FA5388](v2);
    swift_retain();
    sub_25B9EC9C0();
    swift_release();
    sub_25B964F50();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25B9D1344(void *a1, char a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = 0x7373654D74786554;
  }
  else {
    uint64_t v5 = 0x7373654D6C69614DLL;
  }
  swift_unknownObjectRetain();
  sub_25B9D13DC(v5, 0xEB00000000656761, a3, a1);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D13DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)sub_25B9ECFC0();
  if (a3) {
    uint64_t v7 = sub_25B9ECF60();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  objc_msgSend(a4, sel_prewarmSmartRepliesWithDocumentType_options_, v6);
}

id sub_25B9D147C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v38[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = *a4;
  id location = (id)sub_25B9EC1B0();
  if (a5) {
    uint64_t v13 = a5;
  }
  else {
    uint64_t v13 = sub_25B9ECF80();
  }
  uint64_t v37 = v13;
  if (v11 == 11)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = qword_26A51B088;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_26A51D5A8;
    uint64_t v16 = unk_26A51D5B0;
    sub_25B9DC294();
    switch(v11)
    {
      case 1:
        sub_25B9DC1E0();
        break;
      case 2:
        sub_25B9DC1C8();
        break;
      case 3:
        sub_25B9DC074();
        break;
      case 4:
        sub_25B9DC280();
        break;
      case 5:
        sub_25B9DC134();
        break;
      case 6:
        sub_25B9DC2F0();
        break;
      case 7:
        sub_25B9DC1F8();
        break;
      case 8:
        sub_25B9DC26C();
        break;
      case 9:
        sub_25B9DC0B4();
        break;
      case 10:
        sub_25B9DC024();
        break;
      default:
        break;
    }
    v38[3] = (id)MEMORY[0x263F8D310];
    v38[0] = v18;
    v38[1] = v17;
    swift_bridgeObjectRetain();
    sub_25B9CEF74((uint64_t)v38, v15, v16);
    uint64_t v13 = v37;
  }
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  v38[0] = 0;
  id v20 = sub_25B9D9A24(a1, a2, a3, v13, (uint64_t)v38, v19);

  id v21 = v38[0];
  if (v20)
  {
    sub_25B97E120(0, (unint64_t *)&unk_26A51D630);
    unint64_t v22 = sub_25B9ED080();
    id v23 = v21;

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25B9ED4A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v36 = v6;
    if (v24)
    {
      if (v24 < 1) {
        __break(1u);
      }
      NSUInteger v25 = 0;
      uint64_t v26 = 0;
      NSUInteger v27 = 0;
      NSUInteger v28 = (NSUInteger)location;
      do
      {
        if ((v22 & 0xC000000000000001) != 0) {
          id v29 = (id)MEMORY[0x26116C810](v26, v22);
        }
        else {
          id v29 = *(id *)(v22 + 8 * v26 + 32);
        }
        uint64_t v30 = v29;
        id location = objc_msgSend(v29, sel_actualRange, v36);
        NSUInteger length = v31;
        if (v25)
        {
          v39.id location = v28;
          v39.NSUInteger length = v27;
          v40.id location = (NSUInteger)location;
          v40.NSUInteger length = length;
          NSRange v33 = NSUnionRange(v39, v40);
          id location = (id)v33.location;
          NSUInteger length = v33.length;
        }
        ++v26;

        NSUInteger v25 = length;
        NSUInteger v28 = (NSUInteger)location;
        NSUInteger v27 = length;
      }
      while (v24 != v26);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v34 = v38[0];
    sub_25B9EC220();

    swift_willThrow();
  }
  return location;
}

id sub_25B9D1824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  id v7 = objc_msgSend(v6, sel_canHandleAttributedString_range_, a1, a2, a3);

  return v7;
}

uint64_t sub_25B9D1894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  void v5[3] = a1;
  return sub_25B9650C8((uint64_t)sub_25B9D18B4);
}

uint64_t sub_25B9D18B4()
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B9DC34C(*(void *)(v1 + 56));
  if (v0)
  {
    uint64_t v7 = *(void *)(v1 + 40);
    uint64_t v6 = *(void *)(v1 + 48);
    long long v14 = *(_OWORD *)(v1 + 24);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v1 + 72) = v8;
    *(_OWORD *)(v8 + 16) = v14;
    *(void *)(v8 + 32) = v7;
    *(void *)(v8 + 40) = v6;
    id v9 = (void *)*(unsigned int *)(MEMORY[0x263F61858] + 4);
    swift_retain();
    uint64_t v10 = swift_task_alloc();
    sub_25B9DC36C(v10);
    sub_25B94E854(&qword_26A51D640);
    sub_25B9DBD88();
    *id v9 = v11;
    v9[1] = sub_25B9D19B4;
    sub_25B9DBD98();
    sub_25B9DC150();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D19B4()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D1AA0()
{
  sub_25B960558();
  if (!*(void *)(v0 + 48))
  {
    sub_25B9ECF80();
    sub_25B995674();
  }
  sub_25B9DC250();
  uint64_t v1 = sub_25B9DC0D4();
  return v2(v1);
}

uint64_t sub_25B9D1B3C()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9DC194();
  return v0();
}

uint64_t sub_25B9D1B9C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  id v15 = objc_msgSend(a4, sel_string);
  uint64_t v16 = sub_25B9ECFD0();
  uint64_t v18 = v17;

  sub_25B9D1C9C(v16, v18, a5, a6, a7, (uint64_t)sub_25B9C9604, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D1C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = (void *)sub_25B9ECFC0();
  if (a5) {
    a5 = (void *)sub_25B9ECF60();
  }
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D1DC0;
  void v16[3] = &unk_27092DAC0;
  id v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_reviewWithString_range_options_with_, v14, a3, a4, a5, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D1DC0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_25B97E120(0, &qword_26B34AA18);
    uint64_t v4 = sub_25B9ED080();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_25B9D1E64()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  int64_t v9 = v8;
  unint64_t v11 = v10;
  uint64_t v12 = sub_25B94E854(&qword_26A51B578);
  uint64_t v13 = sub_25B96068C(v12);
  MEMORY[0x270FA5388](v13);
  sub_25B9652E4();
  if (v11 >> 62)
  {
    sub_25B9DC2A8();
    uint64_t v14 = sub_25B9ED4A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9) {
    goto LABEL_8;
  }
  uint64_t v27 = v7;
  sub_25B9D8EDC(v9, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0) {
    id v15 = (id)MEMORY[0x26116C810](v9, v11);
  }
  else {
    id v15 = *(id *)(v11 + 8 * v9 + 32);
  }
  uint64_t v16 = v15;
  id v17 = objc_msgSend(v15, sel_modifiedRange);
  uint64_t v18 = (char *)objc_msgSend(v16, sel_offset);
  if (!__OFADD__(v17, v18))
  {
    uint64_t v26 = &v18[(void)v17];
    objc_msgSend(v16, sel_modifiedRange);
    uint64_t v25 = v19;
    uint64_t v20 = sub_25B9D9C58(v16, (SEL *)&selRef_filteredOptions);
    BOOL v21 = v9 + 1 >= v14;
    uint64_t v22 = sub_25B9ED130();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, v22);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    *(void *)(v23 + 24) = 0;
    *(void *)(v23 + 32) = v0;
    *(void *)(v23 + 40) = v16;
    *(void *)(v23 + 48) = v27;
    *(void *)(v23 + 56) = v20;
    *(void *)(v23 + 64) = v5;
    *(void *)(v23 + 72) = v3;
    *(void *)(v23 + 80) = v26;
    *(void *)(v23 + 88) = v25;
    *(unsigned char *)(v23 + 96) = v21;
    *(void *)(v23 + 104) = v9;
    *(void *)(v23 + 112) = v11;
    swift_bridgeObjectRetain();
    id v24 = v0;
    swift_retain();
    sub_25B95D778(v1, (uint64_t)&unk_26A51D7D8, v23);
    swift_release();
LABEL_8:
    sub_25B964F50();
    return;
  }
  __break(1u);
}

uint64_t sub_25B9D2044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 88) = v13;
  *(void *)(v8 + 96) = v14;
  *(unsigned char *)(v8 + 136) = v12;
  *(void *)(v8 + 80) = v11;
  *(_OWORD *)(v8 + 64) = v10;
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 24) = a4;
  return MEMORY[0x270FA2498](sub_25B9D2090, 0, 0);
}

uint64_t sub_25B9D2090()
{
  sub_25B960558();
  uint64_t v5 = *(void *)(v0[3] + OBJC_IVAR___TextCompositionClient_client);
  v0[13] = v5;
  if (v5)
  {
    uint64_t v6 = v0[4];
    uint64_t v7 = swift_task_alloc();
    v0[14] = v7;
    *(void *)(v7 + 16) = v6;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[15] = v8;
    sub_25B97E120(0, &qword_26A51D7E0);
    sub_25B9DBD88();
    *uint64_t v8 = v9;
    v8[1] = sub_25B9D2194;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D2194()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D2280()
{
  sub_25B9DC1BC();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  LODWORD(v1) = objc_msgSend(v3, sel_cancellationRequestedForToken_, v1);

  if (v1)
  {
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v6 = *(void (**)(void, uint64_t, uint64_t, uint64_t, id))(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = sub_25B9DBE60(*(void *)(v0 + 48));
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
    id v10 = objc_msgSend(v9, sel_cancellationErrorForToken_, v7);

    id v11 = v10;
    v6(0, v5, v4, v8, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = sub_25B9D9C58(v2, (SEL *)&selRef_options);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_25B9ED4A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    char v15 = *(unsigned char *)(v0 + 136);
    uint64_t v16 = *(void (**)(uint64_t))(v0 + 56);
    sub_25B9D0230(v13, v15, *(void *)(v0 + 88), 0, v14, 0);
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v2, sel_results);
    sub_25B97E120(0, &qword_26B34AA18);
    sub_25B9ED080();

    uint64_t v18 = sub_25B9DC210();
    v16(v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      if (__OFADD__(*(void *)(v0 + 88), 1))
      {
        __break(1u);
        return result;
      }
      sub_25B9D1E64();
    }
  }

  sub_25B9605A0();
  return v20();
}

uint64_t sub_25B9D24D4()
{
  sub_25B96DA78();
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = (void (*)(void, uint64_t, uint64_t, uint64_t, void *))v0[7];
  uint64_t v5 = v0[6];
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = sub_25B9DBE60(v5);
  id v7 = v1;
  v4(0, v3, v2, v6, v1);

  swift_bridgeObjectRelease();
  sub_25B9605A0();
  return v8();
}

uint64_t sub_25B9D25A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D264C(a4, (uint64_t)sub_25B9C9604, v8, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25B9D264C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v7[4] = a2;
  v7[5] = a3;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_25B9D2714;
  v7[3] = &unk_27092DA70;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_reviewWithInput_with_, a1, v6);
  _Block_release(v6);
}

id sub_25B9D2718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  id v7 = objc_msgSend(v6, sel_nextToken);

  if (a4) {
    uint64_t v8 = a4;
  }
  else {
    uint64_t v8 = sub_25B9ECF80();
  }
  uint64_t v28 = v8;
  uint64_t v9 = qword_26A51AF10;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26A51AF18;
  uint64_t v11 = unk_26A51AF20;
  uint64_t v31 = MEMORY[0x263F8D6C8];
  id v29 = v7;
  swift_bridgeObjectRetain();
  sub_25B9CEF74((uint64_t)&v29, v10, v11);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  id v29 = 0;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_25B9DC210();
  id v17 = sub_25B9D9A24(v13, v14, v15, v28, v16, v12);

  if (v17)
  {
    id v18 = v29;
    swift_bridgeObjectRelease();
    sub_25B97E120(0, (unint64_t *)&unk_26A51D630);
    sub_25B9ED080();

    sub_25B9D1E64();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = v29;
    uint64_t v20 = (void *)sub_25B9EC220();

    swift_willThrow();
    sub_25B94E854(&qword_26B34AA60);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_25B9F6AE0;
    id v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_25B9ED000();
    sub_25B94E854(&qword_26A51BA68);
    sub_25B9ED440();
    id v22 = v29;
    unint64_t v23 = v30;
    *(void *)(v21 + 56) = MEMORY[0x263F8D310];
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    sub_25B9ED730();
    swift_bridgeObjectRelease();
    sub_25B9DBE60(v28);
    swift_bridgeObjectRelease();
    id v24 = v20;
    uint64_t v25 = sub_25B9DC378();
    a5(v25);

    swift_bridgeObjectRelease();
  }
  return v7;
}

void sub_25B9D2A34()
{
  sub_25B964F38();
  sub_25B9DC32C();
  uint64_t v0 = sub_25B94E854(&qword_26A51D648);
  sub_25B950790();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_25B950870();
  uint64_t v6 = v5 - v4;
  sub_25B94E854((uint64_t *)&unk_26A51D650);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, *MEMORY[0x263F8F680], v0);
  sub_25B9ED1D0();
  sub_25B964F50();
}

uint64_t sub_25B9D2B28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v11 = sub_25B94E854(&qword_26A51D7B8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  id v16 = a2;
  id v17 = sub_25B9D2718(a3, a4, a5, v22, (void (*)(uint64_t))sub_25B9DBA14);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  id v19 = v16;
  return sub_25B9ED170();
}

uint64_t sub_25B9D2CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_25B94E854(&qword_26A51D7C8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A51B080 != -1) {
    swift_once();
  }
  char v14 = sub_25B9D0404(a4);
  if (a1)
  {
    char v15 = v14;
    v18[0] = a1;
    v18[1] = a2;
    uint64_t v18[2] = a3;
    v18[3] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_25B94E854(&qword_26A51D7B8);
    sub_25B9ED180();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v15 & 1) == 0) {
      return result;
    }
    v18[0] = 0;
  }
  else
  {
    if (a5)
    {
      v18[0] = a5;
      id v17 = a5;
    }
    else
    {
      v18[0] = 0;
    }
    sub_25B94E854(&qword_26A51D7B8);
  }
  return sub_25B9ED190();
}

uint64_t sub_25B9D2EA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = v5;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 32) = a1;
  *(unsigned char *)(v6 + 104) = *a4;
  return sub_25B9650C8((uint64_t)sub_25B9D2ECC);
}

uint64_t sub_25B9D2ECC()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DC340(*(void *)(v1 + 64));
  if (v0)
  {
    char v6 = *(unsigned char *)(v1 + 104);
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v7 = *(void *)(v1 + 56);
    uint64_t v9 = (__n128 *)swift_task_alloc();
    sub_25B9DC304(v9, v10, v11, v12, v13, v14, v15, v16, v17);
    *(void *)(v18 + 32) = v8;
    *(unsigned char *)(v18 + 40) = v6;
    *(void *)(v18 + 48) = v7;
    swift_retain();
    id v19 = (void *)swift_task_alloc();
    *(void *)(v1 + 88) = v19;
    *id v19 = v1;
    v19[1] = sub_25B9D2FD8;
    sub_25B9DBEA8();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D2FD8()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D30C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25B9DC23C();
  sub_25B96DA78();
  uint64_t v10 = *(void *)(v9 + 56);
  sub_25B97E120(0, (unint64_t *)&qword_26A51D148);
  sub_25B995998();
  sub_25B9C2FEC();
  if (!v10) {
    sub_25B9ECF80();
  }
  uint64_t v20 = sub_25B9605A0();
  swift_bridgeObjectRetain();
  sub_25B9DC150();
  return v15(v11, v12, v13, v14, v15, v16, v17, v18, a9, v20);
}

uint64_t sub_25B9D31B4()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9DC044();
  return v0();
}

uint64_t sub_25B9D3214(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  id v17 = objc_msgSend(a4, sel_string);
  uint64_t v18 = sub_25B9ECFD0();
  uint64_t v20 = v19;

  uint64_t v21 = 0xE500000000000000;
  uint64_t v22 = 0x636967614DLL;
  switch(a7)
  {
    case 1:
      uint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x657369636E6F43;
      break;
    case 2:
      uint64_t v21 = 0xE800000000000000;
      uint64_t v22 = 0x796C646E65697246;
      break;
    case 3:
      uint64_t v21 = 0xEC0000006C616E6FLL;
      uint64_t v22 = 0x69737365666F7250;
      break;
    case 4:
      uint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x6574696C6F50;
      break;
    case 5:
      uint64_t v22 = 0x65646E456E65704FLL;
      uint64_t v21 = 0xE900000000000064;
      break;
    case 6:
      uint64_t v21 = 0x800000025B9EEB60;
      uint64_t v22 = 0xD000000000000011;
      break;
    case 7:
      uint64_t v21 = 0xE700000000000000;
      uint64_t v22 = 0x7374656C6C7542;
      break;
    case 8:
      uint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x73656C626154;
      break;
    case 9:
      uint64_t v21 = 0xE900000000000073;
      uint64_t v22 = 0x79617761656B6154;
      break;
    case 10:
      uint64_t v21 = 0xEC000000676E6964;
      uint64_t v22 = 0x616572666F6F7250;
      break;
    default:
      break;
  }
  sub_25B9D3494(v18, v20, a5, a6, v22, v21, a8, (uint64_t)sub_25B9DB67C, v16, a1);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D3494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v14 = (void *)sub_25B9ECFC0();
  uint64_t v15 = (void *)sub_25B9ECFC0();
  if (a7) {
    a7 = (void *)sub_25B9ECF60();
  }
  void v17[4] = a8;
  void v17[5] = a9;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_25B9D35DC;
  v17[3] = &unk_27092D9A8;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a10, sel_rewriteWithString_range_rewritingType_options_with_, v14, a3, a4, v15, a7, v16);
  _Block_release(v16);
}

uint64_t sub_25B9D35DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_25B9ECFD0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_25B9D3674()
{
  sub_25B964F38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  int64_t v11 = v10;
  unint64_t v13 = v12;
  uint64_t v14 = sub_25B94E854(&qword_26A51B578);
  uint64_t v15 = sub_25B96068C(v14);
  MEMORY[0x270FA5388](v15);
  sub_25B959380();
  char v16 = *v7;
  if (v13 >> 62)
  {
    sub_25B9DC2A8();
    uint64_t v17 = sub_25B9ED4A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 <= v11) {
    goto LABEL_8;
  }
  char v30 = v16;
  uint64_t v31 = v9;
  sub_25B9D8EDC(v11, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0) {
    id v18 = (id)MEMORY[0x26116C810](v11, v13);
  }
  else {
    id v18 = *(id *)(v13 + 8 * v11 + 32);
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_modifiedRange);
  uint64_t v21 = (char *)objc_msgSend(v19, sel_offset);
  if (!__OFADD__(v20, v21))
  {
    id v29 = &v21[(void)v20];
    objc_msgSend(v19, sel_modifiedRange);
    uint64_t v28 = v22;
    uint64_t v23 = sub_25B9D9C58(v19, (SEL *)&selRef_filteredOptions);
    BOOL v24 = v11 + 1 >= v17;
    uint64_t v25 = sub_25B9ED130();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, v25);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    *(void *)(v26 + 32) = v0;
    *(void *)(v26 + 40) = v19;
    *(unsigned char *)(v26 + 48) = v30;
    *(void *)(v26 + 56) = v31;
    *(void *)(v26 + 64) = v5;
    *(void *)(v26 + 72) = v3;
    *(void *)(v26 + 80) = v29;
    *(void *)(v26 + 88) = v28;
    *(unsigned char *)(v26 + 96) = v24;
    *(void *)(v26 + 104) = v11;
    *(void *)(v26 + 112) = v13;
    *(void *)(v26 + 120) = v23;
    swift_bridgeObjectRetain();
    id v27 = v0;
    swift_retain();
    sub_25B95D778(v1, (uint64_t)&unk_26A51D7A8, v26);
    swift_release();
LABEL_8:
    sub_25B964F50();
    return;
  }
  __break(1u);
}

uint64_t sub_25B9D386C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 136) = v14;
  *(void *)(v8 + 144) = v15;
  *(unsigned char *)(v8 + 185) = v12;
  *(void *)(v8 + 120) = v11;
  *(void *)(v8 + 128) = v13;
  *(_OWORD *)(v8 + 104) = v10;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  *(unsigned char *)(v8 + 184) = a6;
  *(void *)(v8 + 72) = a4;
  *(void *)(v8 + 80) = a5;
  return MEMORY[0x270FA2498](sub_25B9D38BC, 0, 0);
}

uint64_t sub_25B9D38BC()
{
  sub_25B994E80();
  uint64_t v5 = *(void *)(*(void *)(v0 + 72) + OBJC_IVAR___TextCompositionClient_client);
  *(void *)(v0 + 152) = v5;
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 160) = v8;
    *(void *)(v8 + 16) = v7;
    *(unsigned char *)(v8 + 24) = v6;
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v9;
    sub_25B97E120(0, &qword_26A51D7B0);
    sub_25B9DBD88();
    *uint64_t v9 = v10;
    v9[1] = sub_25B9D39D0;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D39D0()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

void sub_25B9D3ABC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 136);
  char v2 = *(unsigned char *)(v0 + 185);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v7 = *(void **)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v8 = *(void **)(v0 + 64);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v1;
  *(unsigned char *)(v9 + 64) = v2;
  *(void *)(v9 + 72) = v8;
  *(void *)(v9 + 80) = v15;
  *(void *)(v9 + 88) = v16;
  *(void *)(v0 + 48) = sub_25B9DB8DC;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 16) = MEMORY[0x263EF8330];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_25B9D4288;
  *(void *)(v0 + 40) = &unk_27092D908;
  uint64_t v10 = _Block_copy((const void *)(v0 + 16));
  id v11 = v7;
  swift_retain();
  id v12 = v8;
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v12, sel_enumerateRewrittenAttributedStringsWithInput_usingBlock_, v17, v10);
  _Block_release(v10);
  if (v2) {
    goto LABEL_4;
  }
  if (!__OFADD__(*(void *)(v0 + 128), 1))
  {
    sub_25B9D3674();
LABEL_4:

    sub_25B9605A0();
    sub_25B994D4C();
    __asm { BRAA            X1, X16 }
  }
  __break(1u);
}

uint64_t sub_25B9D3C5C()
{
  sub_25B96DA78();
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = (void (*)(void, uint64_t, uint64_t, uint64_t, void *))v0[12];
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = sub_25B9DBE60(v2);
  id v7 = v1;
  v5(0, v4, v3, v6, v1);

  swift_bridgeObjectRelease();
  sub_25B9605A0();
  return v8();
}

uint64_t sub_25B9D3D2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = 0xE500000000000000;
  uint64_t v12 = 0x636967614DLL;
  uint64_t v13 = v10;
  switch(a5)
  {
    case 1:
      uint64_t v11 = 0xE700000000000000;
      uint64_t v12 = 0x657369636E6F43;
      break;
    case 2:
      uint64_t v11 = 0xE800000000000000;
      uint64_t v12 = 0x796C646E65697246;
      break;
    case 3:
      uint64_t v11 = 0xEC0000006C616E6FLL;
      uint64_t v12 = 0x69737365666F7250;
      break;
    case 4:
      uint64_t v11 = 0xE600000000000000;
      uint64_t v12 = 0x6574696C6F50;
      break;
    case 5:
      uint64_t v12 = 0x65646E456E65704FLL;
      uint64_t v11 = 0xE900000000000064;
      break;
    case 6:
      uint64_t v11 = 0x800000025B9EEB60;
      uint64_t v12 = 0xD000000000000011;
      break;
    case 7:
      uint64_t v11 = 0xE700000000000000;
      uint64_t v12 = 0x7374656C6C7542;
      break;
    case 8:
      uint64_t v11 = 0xE600000000000000;
      uint64_t v12 = 0x73656C626154;
      break;
    case 9:
      uint64_t v11 = 0xE900000000000073;
      uint64_t v12 = 0x79617761656B6154;
      break;
    case 10:
      uint64_t v11 = 0xEC000000676E6964;
      uint64_t v12 = 0x616572666F6F7250;
      break;
    default:
      break;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D3F54(a4, v12, v11, (uint64_t)sub_25B9C9604, v13, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D3F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)sub_25B9ECFC0();
  v12[4] = a4;
  void v12[5] = a5;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_25B9D2714;
  v12[3] = &unk_27092D958;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a6, sel_rewriteWithInput_rewritingType_with_, a1, v10, v11);
  _Block_release(v11);
}

void sub_25B9D4038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t, uint64_t, id), uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14, uint64_t a15)
{
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  unsigned int v20 = objc_msgSend(v19, sel_cancellationRequestedForToken_, a6);

  if (v20)
  {
    uint64_t v21 = sub_25B9D0230(a4, 1, 0, 1, 0, 1);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
    id v23 = objc_msgSend(v22, sel_cancellationErrorForToken_, a6);

    id v32 = v23;
    a8(0, a10, a11, v21, v23);
    swift_bridgeObjectRelease();

    return;
  }
  if (a12)
  {
    uint64_t v24 = a2;
    id v25 = objc_msgSend(a13, sel_range);
    char v27 = a3 + a2 >= (uint64_t)v25 + v26;
    if ((a15 & 0x8000000000000000) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v28 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))a8;
    goto LABEL_14;
  }
  char v27 = 0;
  uint64_t v24 = a2;
  if (a15 < 0) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v28 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))a8;
  if ((a15 & 0x4000000000000000) != 0)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_25B9ED4A0();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v29 = *(void *)((a15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  uint64_t v30 = sub_25B9D0230(a4, v27, a14, 0, v29, 0);
  v28(a1, v24, a3, v30, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_25B9D4288(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void (**)(void))(a1 + 32);
  if (a5) {
    sub_25B9ECF70();
  }
  swift_retain();
  id v7 = a2;
  v6();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_25B9D4350(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v7 = *a4;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  id v9 = objc_msgSend(v8, sel_nextToken);

  if (a5) {
    uint64_t v10 = a5;
  }
  else {
    uint64_t v10 = sub_25B9ECF80();
  }
  uint64_t v31 = v10;
  uint64_t v11 = qword_26A51AF10;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_26A51AF18;
  uint64_t v13 = unk_26A51AF20;
  uint64_t v33 = MEMORY[0x263F8D6C8];
  v32[0] = v9;
  swift_bridgeObjectRetain();
  sub_25B9CEF74((uint64_t)v32, v12, v13);
  if (qword_26A51B088 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_26A51D5A8;
  uint64_t v14 = unk_26A51D5B0;
  sub_25B9DC294();
  switch(v7)
  {
    case 1:
      sub_25B9DC1E0();
      break;
    case 2:
      sub_25B9DC1C8();
      break;
    case 3:
      sub_25B9DC074();
      break;
    case 4:
      sub_25B9DC280();
      break;
    case 5:
      sub_25B9DC134();
      break;
    case 6:
      sub_25B9DC2F0();
      break;
    case 7:
      sub_25B9DC1F8();
      break;
    case 8:
      sub_25B9DC26C();
      break;
    case 9:
      sub_25B9DC0B4();
      break;
    case 10:
      sub_25B9DC024();
      break;
    default:
      break;
  }
  uint64_t v33 = MEMORY[0x263F8D310];
  v32[0] = v17;
  v32[1] = v16;
  swift_bridgeObjectRetain();
  sub_25B9CEF74((uint64_t)v32, v15, v14);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E408]), sel_init);
  v32[0] = 0;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_25B9DC210();
  id v23 = sub_25B9D9A24(v19, v20, v21, v31, v22, v18);

  if (v23)
  {
    id v24 = v32[0];
    swift_bridgeObjectRelease();
    sub_25B97E120(0, (unint64_t *)&unk_26A51D630);
    sub_25B9ED080();

    LOBYTE(v32[0]) = v7;
    sub_25B9D3674();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = v32[0];
    uint64_t v26 = (void *)sub_25B9EC220();

    swift_willThrow();
    sub_25B9DBE60(v31);
    swift_bridgeObjectRelease();
    id v27 = v26;
    uint64_t v28 = sub_25B9DC378();
    a6(v28);

    swift_bridgeObjectRelease();
  }
  return v9;
}

void sub_25B9D46DC()
{
  sub_25B964F38();
  sub_25B9DC1A4();
  uint64_t v0 = sub_25B94E854(&qword_26A51D660);
  sub_25B950790();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  sub_25B950870();
  uint64_t v6 = v5 - v4;
  sub_25B94E854(qword_26A51D668);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, *MEMORY[0x263F8F680], v0);
  sub_25B9ED1D0();
  sub_25B964F50();
}

uint64_t sub_25B9D47D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7)
{
  uint64_t v23 = a5;
  uint64_t v24 = a7;
  uint64_t v12 = sub_25B94E854(&qword_26A51D788);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unsigned __int8 v25 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  id v17 = a2;
  id v18 = sub_25B9D4350(a3, a4, v23, &v25, v24, (void (*)(uint64_t))sub_25B9DB68C);
  swift_release();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v18;
  id v20 = v17;
  return sub_25B9ED170();
}

void sub_25B9D49A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_25B94E854(&qword_26A51D798);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A51B080 != -1) {
    swift_once();
  }
  char v14 = sub_25B9D0404(a4);
  if (a1)
  {
    char v15 = v14;
    v18[0] = a1;
    v18[1] = a2;
    uint64_t v18[2] = a3;
    v18[3] = a4;
    id v16 = a1;
    swift_bridgeObjectRetain();
    sub_25B94E854(&qword_26A51D788);
    sub_25B9ED180();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v15)
    {
      v18[0] = 0;
      sub_25B9ED190();
    }
  }
  else
  {
    if (a5)
    {
      v18[0] = a5;
      id v17 = a5;
    }
    else
    {
      v18[0] = 0;
    }
    sub_25B94E854(&qword_26A51D788);
    sub_25B9ED190();
  }
}

void sub_25B9D4B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_25B94E854(a4);
  sub_25B950790();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_25B9652E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, a1, v6);
  LODWORD(a1) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v4, v6);
  int v10 = *MEMORY[0x263F8F650];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
  if (a1 == v10) {
    sub_25B9D0840();
  }
}

uint64_t sub_25B9D4C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return sub_25B9650C8((uint64_t)sub_25B9D4C7C);
}

uint64_t sub_25B9D4C7C()
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B9DC340(v1[8]);
  if (v0)
  {
    uint64_t v7 = v1[6];
    uint64_t v6 = v1[7];
    uint64_t v8 = (__n128 *)swift_task_alloc();
    sub_25B9DC304(v8, v9, v10, v11, v12, v13, v14, v15, v16);
    *(void *)(v17 + 32) = v7;
    *(void *)(v17 + 40) = v6;
    swift_retain();
    id v18 = (void *)swift_task_alloc();
    v1[11] = v18;
    *id v18 = v1;
    v18[1] = sub_25B9D4D7C;
    sub_25B9DC150();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D4D7C()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D4E68()
{
  sub_25B994E80();
  if (!*(void *)(v0 + 56)) {
    sub_25B9ECF80();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_25B995998();
  return v3(v1);
}

uint64_t sub_25B9D4F20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  id v15 = objc_msgSend(a6, sel_string);
  uint64_t v16 = sub_25B9ECFD0();
  uint64_t v18 = v17;

  sub_25B9D5020(a4, a5, v16, v18, a7, (uint64_t)sub_25B9DB67C, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D5020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = (void *)sub_25B9ECFC0();
  if (a5) {
    a5 = (void *)sub_25B9ECF60();
  }
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D35DC;
  void v16[3] = &unk_27092D840;
  id v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_describeWithResult_index_string_options_with_, a1, a2, v14, a5, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D514C(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 24) = a1;
  *(unsigned char *)(v4 + 80) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D5170);
}

uint64_t sub_25B9D5170()
{
  sub_25B994E80();
  uint64_t v5 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR___TextCompositionClient_client);
  *(void *)(v0 + 48) = v5;
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 56) = v9;
    *(void *)(v9 + 16) = v8;
    *(unsigned char *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v7;
    swift_retain();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v10;
    sub_25B97E120(0, qword_26A51D680);
    sub_25B9DBD88();
    *uint64_t v10 = v11;
    v10[1] = sub_25B9D5288;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D5288()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D5374()
{
  sub_25B960594();
  if (!sub_25B9D9C58(*(void **)(v0 + 16), (SEL *)&selRef_options))
  {
    if (!*(void *)(v0 + 32))
    {
      sub_25B9ECF80();
      sub_25B995674();
    }
    swift_bridgeObjectRetain();
  }
  uint64_t v1 = sub_25B9DBDF4();
  return v2(v1);
}

uint64_t sub_25B9D5424()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25B9D548C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  if (a5) {
    uint64_t v13 = 0x7373654D74786554;
  }
  else {
    uint64_t v13 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D5590(a4, v13, 0xEB00000000656761, a6, (uint64_t)sub_25B9C9604, v12, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D5590(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = (void *)sub_25B9ECFC0();
  if (a4) {
    a4 = (void *)sub_25B9ECF60();
  }
  v14[4] = a5;
  v14[5] = a6;
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_25B9D2714;
  void v14[3] = &unk_27092D7F0;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a7, sel_requestShortFormSmartRepliesWithInputContextHistory_documentType_options_with_, a1, v12, a4, v13);
  _Block_release(v13);
}

uint64_t sub_25B9D56B4(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 96) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D56DC);
}

uint64_t sub_25B9D56DC()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DC34C(*(void *)(v1 + 56));
  if (v0)
  {
    uint64_t v6 = (__n128 *)sub_25B9DBEF8();
    sub_25B9DBED8(v6, v7, v8, v9, v10, v11, v12, v13, v14);
    id v15 = (void *)*(unsigned int *)(MEMORY[0x263F61858] + 4);
    swift_retain();
    uint64_t v16 = swift_task_alloc();
    sub_25B9DC36C(v16);
    sub_25B97E120(0, qword_26A51D680);
    sub_25B9DBD88();
    *id v15 = v17;
    v15[1] = sub_25B9D57C4;
    sub_25B9DBD98();
    sub_25B9DBEA8();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D57C4()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D58B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  if (a5) {
    uint64_t v17 = 0x7373654D74786554;
  }
  else {
    uint64_t v17 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D59D4(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_25B9C9604, v16, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D59D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13 = (void *)sub_25B9ECFC0();
  __n128 v14 = (void *)sub_25B9ECFC0();
  if (a6) {
    a6 = (void *)sub_25B9ECF60();
  }
  v16[4] = a7;
  v16[5] = a8;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D2714;
  void v16[3] = &unk_27092A698;
  id v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a9, sel_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_options_with_, a1, v13, v14, a6, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D5B18(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 96) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D5B40);
}

uint64_t sub_25B9D5B40()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DC34C(*(void *)(v1 + 56));
  if (v0)
  {
    uint64_t v6 = (__n128 *)sub_25B9DBEF8();
    sub_25B9DBED8(v6, v7, v8, v9, v10, v11, v12, v13, v14);
    id v15 = (void *)*(unsigned int *)(MEMORY[0x263F61858] + 4);
    swift_retain();
    uint64_t v16 = swift_task_alloc();
    sub_25B9DC36C(v16);
    sub_25B97E120(0, qword_26A51D698);
    sub_25B9DBD88();
    *id v15 = v17;
    v15[1] = sub_25B9D5C28;
    sub_25B9DBD98();
    sub_25B9DBEA8();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D5C28()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D5D14()
{
  sub_25B960594();
  if (!sub_25B9D9C58(*(void **)(v0 + 16), (SEL *)&selRef_options))
  {
    if (!*(void *)(v0 + 48))
    {
      sub_25B9ECF80();
      sub_25B995674();
    }
    swift_bridgeObjectRetain();
  }
  uint64_t v1 = sub_25B9DBDF4();
  return v2(v1);
}

uint64_t sub_25B9D5DC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  if (a5) {
    uint64_t v17 = 0x7373654D74786554;
  }
  else {
    uint64_t v17 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D5EE8(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_25B9C9604, v16, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D5EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13 = (void *)sub_25B9ECFC0();
  __n128 v14 = (void *)sub_25B9ECFC0();
  if (a6) {
    a6 = (void *)sub_25B9ECF60();
  }
  v16[4] = a7;
  v16[5] = a8;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D2714;
  void v16[3] = &unk_27092D778;
  id v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a9, sel_requestUserQuestionnaireWithInputContextHistory_documentType_replyType_options_with_, a1, v13, v14, a6, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D602C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 72) = a8;
  *(void *)(v9 + 80) = v8;
  *(void *)(v9 + 56) = a6;
  *(void *)(v9 + 64) = a7;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a3;
  *(unsigned char *)(v9 + 120) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D6058);
}

uint64_t sub_25B9D6058()
{
  sub_25B9DC1BC();
  uint64_t v5 = *(void *)(*(void *)(v0 + 80) + OBJC_IVAR___TextCompositionClient_client);
  *(void *)(v0 + 88) = v5;
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 48);
    long long v15 = *(_OWORD *)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 96) = v10;
    long long v11 = *(_OWORD *)(v0 + 56);
    *(void *)(v10 + 16) = v9;
    *(unsigned char *)(v10 + 24) = v6;
    *(_OWORD *)(v10 + 32) = v15;
    *(void *)(v10 + 48) = v8;
    *(_OWORD *)(v10 + 56) = v11;
    *(void *)(v10 + 72) = v7;
    swift_retain();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v12;
    sub_25B97E120(0, qword_26A51D680);
    sub_25B9DBD88();
    *uint64_t v12 = v13;
    v12[1] = sub_25B9D619C;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D619C()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D6288()
{
  sub_25B960594();
  if (!sub_25B9D9C58(*(void **)(v0 + 16), (SEL *)&selRef_options))
  {
    if (!*(void *)(v0 + 72))
    {
      sub_25B9ECF80();
      sub_25B995674();
    }
    swift_bridgeObjectRetain();
  }
  uint64_t v1 = sub_25B9DBDF4();
  return v2(v1);
}

uint64_t sub_25B9D6338()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9605A0();
  return v0();
}

uint64_t sub_25B9D639C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (a5) {
    uint64_t v18 = 0x7373654D74786554;
  }
  else {
    uint64_t v18 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D64C4(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, a10, a11, (uint64_t)sub_25B9C9604, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D64C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v13 = a9;
  __n128 v14 = (void *)sub_25B9ECFC0();
  long long v15 = (void *)sub_25B9ECFC0();
  uint64_t v16 = (void *)sub_25B9ECFC0();
  if (a9) {
    uint64_t v13 = (void *)sub_25B9ECF60();
  }
  aBlock[4] = a10;
  aBlock[5] = a11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25B9D2714;
  aBlock[3] = &unk_27092D728;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a12, sel_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_baseResponse_userFilledQuestionnaire_options_with_, a1, v14, v15, v16, a8, v13, v17);
  _Block_release(v17);
}

uint64_t sub_25B9D6630(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(unsigned char *)(v5 + 88) = *a3;
  return sub_25B9650C8((uint64_t)sub_25B9D6654);
}

uint64_t sub_25B9D6654()
{
  sub_25B994E80();
  uint64_t v5 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR___TextCompositionClient_client);
  *(void *)(v0 + 56) = v5;
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 64) = v8;
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v0 + 24);
    *(unsigned char *)(v8 + 32) = v6;
    *(void *)(v8 + 40) = v7;
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v9;
    sub_25B94E854(&qword_26A51AF28);
    sub_25B9DBD88();
    *uint64_t v9 = v10;
    v9[1] = sub_25B9D6764;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D6764()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D6850()
{
  sub_25B960558();
  if (!*(void *)(v0 + 40))
  {
    sub_25B9ECF80();
    sub_25B995674();
  }
  sub_25B9DC250();
  uint64_t v1 = sub_25B9DC0D4();
  return v2(v1);
}

uint64_t sub_25B9D68EC()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9605A0();
  return v0();
}

uint64_t sub_25B9D6950(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (a6) {
    uint64_t v15 = 0x7373654D74786554;
  }
  else {
    uint64_t v15 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D6A5C(a4, a5, v15, 0xEB00000000656761, a7, (uint64_t)sub_25B960354, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D6A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v13 = (void *)sub_25B9ED070();
  uint64_t v14 = (void *)sub_25B9ECFC0();
  if (a5) {
    a5 = (void *)sub_25B9ECF60();
  }
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D6BA8;
  void v16[3] = &unk_27092D6D8;
  uint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_requestEmojiSmartRepliesWithInputContextHistory_tapbackMessageGUIDs_documentType_options_with_, a1, v13, v14, a5, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D6BA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_25B94E854(&qword_26A51AF30);
    uint64_t v4 = sub_25B9ECF70();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9D6C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return sub_25B9650C8((uint64_t)sub_25B9D6C70);
}

uint64_t sub_25B9D6C70()
{
  sub_25B96DA78();
  sub_25B9DC340(*(void *)(v1 + 64));
  if (v0)
  {
    uint64_t v6 = *(void *)(v1 + 56);
    long long v11 = *(_OWORD *)(v1 + 24);
    long long v12 = *(_OWORD *)(v1 + 40);
    uint64_t v7 = swift_task_alloc();
    *(void *)(v1 + 80) = v7;
    *(_OWORD *)(v7 + 16) = v11;
    *(_OWORD *)(v7 + 32) = v12;
    *(void *)(v7 + 48) = v6;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v1 + 88) = v8;
    sub_25B97E120(0, qword_26A51D680);
    sub_25B9DBD88();
    *uint64_t v8 = v9;
    v8[1] = sub_25B9D6D90;
    uint64_t v2 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D6D90()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D6E7C()
{
  sub_25B960558();
  if (!*(void *)(v0 + 56))
  {
    sub_25B9ECF80();
    sub_25B995674();
  }
  sub_25B9DC250();
  uint64_t v1 = sub_25B9DC0D4();
  return v2(v1);
}

uint64_t sub_25B9D6F18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D6FF0(a4, a5, a6, a7, a8, (uint64_t)sub_25B9C9604, v16, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25B9D6FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  long long v12 = (void *)sub_25B9ECFC0();
  uint64_t v13 = (void *)sub_25B9ECFC0();
  if (a5) {
    a5 = (void *)sub_25B9ECF60();
  }
  v15[4] = a6;
  v15[5] = a7;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  v15[2] = sub_25B9D2714;
  void v15[3] = &unk_27092A710;
  uint64_t v14 = _Block_copy(v15);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_requestEmojiSmartRepliesWithMessageID_messageText_options_with_, v12, v13, a5, v14);
  _Block_release(v14);
}

uint64_t sub_25B9D7124(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a3;
  *(unsigned char *)(v7 + 104) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D714C);
}

uint64_t sub_25B9D714C()
{
  sub_25B96DA78();
  sub_25B9DC340(*(void *)(v1 + 64));
  if (v0)
  {
    char v6 = *(unsigned char *)(v1 + 104);
    uint64_t v7 = *(void *)(v1 + 56);
    uint64_t v9 = *(void *)(v1 + 24);
    uint64_t v8 = *(void *)(v1 + 32);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v1 + 80) = v10;
    long long v11 = *(_OWORD *)(v1 + 40);
    *(void *)(v10 + 16) = v9;
    *(unsigned char *)(v10 + 24) = v6;
    *(void *)(v10 + 32) = v8;
    *(_OWORD *)(v10 + 40) = v11;
    *(void *)(v10 + 56) = v7;
    swift_retain();
    long long v12 = (void *)swift_task_alloc();
    *(void *)(v1 + 88) = v12;
    sub_25B97E120(0, qword_26A51D680);
    sub_25B9DBD88();
    *long long v12 = v13;
    v12[1] = sub_25B9D7278;
    uint64_t v2 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D7278()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D7364()
{
  sub_25B960594();
  if (!sub_25B9D9C58(*(void **)(v0 + 16), (SEL *)&selRef_options))
  {
    if (!*(void *)(v0 + 56))
    {
      sub_25B9ECF80();
      sub_25B995674();
    }
    swift_bridgeObjectRetain();
  }
  uint64_t v1 = sub_25B9DBDF4();
  return v2(v1);
}

uint64_t sub_25B9D7414(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (a5) {
    uint64_t v18 = 0x7373654D74786554;
  }
  else {
    uint64_t v18 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D753C(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, (uint64_t)sub_25B9C9604, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v14 = (void *)sub_25B9ECFC0();
  uint64_t v15 = (void *)sub_25B9ECFC0();
  if (a7) {
    a7 = (void *)sub_25B9ECF60();
  }
  void v17[4] = a8;
  void v17[5] = a9;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_25B9D2714;
  v17[3] = &unk_27092A6E8;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a10, sel_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_userFilledQuestionnaire_options_with_, a1, v14, v15, a6, a7, v16);
  _Block_release(v16);
}

uint64_t sub_25B9D768C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = v7;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 24) = a1;
  *(unsigned char *)(v8 + 112) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D76B8);
}

uint64_t sub_25B9D76B8()
{
  sub_25B9DC1BC();
  uint64_t v5 = *(void *)(*(void *)(v0 + 72) + OBJC_IVAR___TextCompositionClient_client);
  *(void *)(v0 + 80) = v5;
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 64);
    long long v13 = *(_OWORD *)(v0 + 32);
    long long v14 = *(_OWORD *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 88) = v9;
    *(void *)(v9 + 16) = v8;
    *(unsigned char *)(v9 + 24) = v6;
    *(_OWORD *)(v9 + 32) = v13;
    *(_OWORD *)(v9 + 48) = v14;
    *(void *)(v9 + 64) = v7;
    swift_retain();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v10;
    sub_25B97E120(0, qword_26A51D698);
    sub_25B9DBD88();
    *uint64_t v10 = v11;
    v10[1] = sub_25B9D77F4;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D77F4()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *char v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D78E0()
{
  sub_25B960594();
  if (!sub_25B9D9C58(*(void **)(v0 + 16), (SEL *)&selRef_options))
  {
    if (!*(void *)(v0 + 64))
    {
      sub_25B9ECF80();
      sub_25B995674();
    }
    swift_bridgeObjectRetain();
  }
  uint64_t v1 = sub_25B9DBDF4();
  return v2(v1);
}

uint64_t sub_25B9D7990()
{
  sub_25B960594();
  swift_release();
  swift_task_dealloc();
  sub_25B9605A0();
  return v0();
}

uint64_t sub_25B9D79F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (a5) {
    uint64_t v18 = 0x7373654D74786554;
  }
  else {
    uint64_t v18 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D7B20(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, a10, (uint64_t)sub_25B9C9604, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D7B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *a11)
{
  long long v13 = (void *)sub_25B9ECFC0();
  long long v14 = (void *)sub_25B9ECFC0();
  uint64_t v15 = (void *)sub_25B9ECFC0();
  if (a8) {
    a8 = (void *)sub_25B9ECF60();
  }
  void v17[4] = a9;
  void v17[5] = a10;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  _OWORD v17[2] = sub_25B9D2714;
  v17[3] = &unk_27092A6C0;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a11, sel_requestUserQuestionnaireWithInputContextHistory_documentType_replyType_baseResponse_options_with_, a1, v13, v14, v15, a8, v16);
  _Block_release(v16);
}

uint64_t sub_25B9D7C88(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 96) = *a2;
  return sub_25B9650C8((uint64_t)sub_25B9D7CB0);
}

uint64_t sub_25B9D7CB0()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DC34C(*(void *)(v1 + 56));
  if (v0)
  {
    uint64_t v6 = (__n128 *)sub_25B9DBEF8();
    sub_25B9DBED8(v6, v7, v8, v9, v10, v11, v12, v13, v14);
    uint64_t v15 = (void *)*(unsigned int *)(MEMORY[0x263F61858] + 4);
    swift_retain();
    uint64_t v16 = swift_task_alloc();
    sub_25B9DC36C(v16);
    sub_25B97E120(0, (unint64_t *)&unk_26A51D6D0);
    sub_25B9DBD88();
    *uint64_t v15 = v17;
    v15[1] = sub_25B9D7D98;
    sub_25B9DBD98();
    sub_25B9DBEA8();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v2, v3, v4, v5);
}

uint64_t sub_25B9D7D98()
{
  sub_25B960594();
  sub_25B960524();
  uint64_t v3 = v2;
  sub_25B96054C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25B96053C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

id sub_25B9D7E84()
{
  sub_25B960558();
  uint64_t v1 = (void *)v0[2];
  id result = objc_msgSend(v1, sel_response);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v3 = result;
  id result = objc_msgSend(v1, sel_questionnaire);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v4 = result;
  uint64_t v5 = sub_25B9D9C58(v1, (SEL *)&selRef_options);
  if (!v5)
  {
    uint64_t v6 = v0[6];
    if (v6)
    {
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
    uint64_t v5 = sub_25B9ECF80();
  }
  uint64_t v6 = v5;
LABEL_7:

  uint64_t v7 = (uint64_t (*)(id, id, uint64_t))v0[1];
  return (id)v7(v3, v4, v6);
}

uint64_t sub_25B9D7F98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  if (a5) {
    uint64_t v17 = 0x7373654D74786554;
  }
  else {
    uint64_t v17 = 0x7373654D6C69614DLL;
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D80BC(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_25B9C9604, v16, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25B9D80BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v13 = (void *)sub_25B9ECFC0();
  __n128 v14 = (void *)sub_25B9ECFC0();
  if (a6) {
    a6 = (void *)sub_25B9ECF60();
  }
  v16[4] = a7;
  v16[5] = a8;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_25B9D2714;
  void v16[3] = &unk_27092D610;
  uint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a9, sel_requestBasicLongFormRepliesAndQuestionnaireWithInputContextHistory_documentType_replyType_options_with_, a1, v13, v14, a6, v15);
  _Block_release(v15);
}

uint64_t sub_25B9D8200(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = v1;
  return sub_25B9650C8((uint64_t)sub_25B9D8218);
}

id sub_25B9D8218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B983150(*(void *)(v10 + 208), (_OWORD *)(v10 + 128));
  if (*(void *)(v10 + 152))
  {
    uint64_t v11 = (_OWORD *)sub_25B995998();
    sub_25B961A24(v11, v12);
    sub_25B94E854(&qword_26A51D6E0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_25B9FD3A0;
    sub_25B993AC8(v10 + 96, v10 + 160);
    swift_dynamicCast();
    uint64_t v14 = *(void *)(v10 + 192);
    uint64_t v15 = *(void *)(v10 + 200);
    objc_allocWithZone(MEMORY[0x263F7E430]);
    id result = sub_25B9D8C48(v14, v15, 0);
    if (result)
    {
      *(void *)(v13 + 32) = result;
      sub_25B9ED090();
      uint64_t v17 = sub_25B9ECF80();
      id v18 = objc_allocWithZone(MEMORY[0x263F7E410]);
      sub_25B94E8B8();
      id result = sub_25B9D8CF4(v19, v20, v21, 0, v17);
      *(void *)(v10 + 224) = result;
      if (result)
      {
        uint64_t v22 = (void *)swift_task_alloc();
        *(void *)(v10 + 232) = v22;
        *uint64_t v22 = v10;
        v22[1] = sub_25B9D8458;
        sub_25B9953E0();
        sub_25B9DC150();
        return (id)sub_25B9D86CC(v23, v24);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_25B9DBC70(v10 + 128, &qword_26A51B7E8);
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F087E8]), sel_init);
  swift_willThrow();
  sub_25B9605A0();
  sub_25B9DC150();
  return (id)v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
}

uint64_t sub_25B9D8458()
{
  sub_25B994E80();
  uint64_t v3 = v2;
  sub_25B960524();
  uint64_t v5 = v4;
  sub_25B96054C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_25B96053C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v5 + 248) = v3;
  }
  sub_25B94E8B8();
  return MEMORY[0x270FA2498]();
}

uint64_t sub_25B9D855C()
{
  sub_25B960558();
  uint64_t v1 = v0[31];
  uint64_t v2 = (void *)v0[28];
  sub_25B94E854((uint64_t *)&unk_26A51DCF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25B9F6AE0;
  *(void *)(inited + 32) = 0xD000000000000031;
  *(void *)(inited + 40) = 0x800000025B9F1AB0;
  *(void *)(inited + 72) = sub_25B97E120(0, &qword_26A51D6F0);
  *(void *)(inited + 48) = v1;
  uint64_t v4 = sub_25B9ECF80();

  sub_25B94F65C((uint64_t)(v0 + 12));
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_25B9D8664()
{
  sub_25B960594();

  sub_25B94F65C(v0 + 96);
  sub_25B9605A0();
  return v1();
}

uint64_t sub_25B9D86CC(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return sub_25B9650C8((uint64_t)sub_25B9D86E8);
}

uint64_t sub_25B9D86E8()
{
  sub_25B994E80();
  uint64_t v5 = *(void *)(v0[5] + OBJC_IVAR___TextCompositionClient_client);
  v0[6] = v5;
  if (v5)
  {
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t v8 = swift_task_alloc();
    v0[7] = v8;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v6;
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[8] = v9;
    sub_25B97E120(0, &qword_26A51D6F0);
    sub_25B9DBD88();
    *uint64_t v9 = v10;
    v9[1] = sub_25B9D5288;
    uint64_t v1 = sub_25B9DBD98();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270F57710](v1, v2, v3, v4);
}

uint64_t sub_25B9D87F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_25B9D88A4(a4, a5, (uint64_t)sub_25B9C9604, v10, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_25B9D88A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2) {
    uint64_t v9 = (void *)sub_25B9ECF60();
  }
  else {
    uint64_t v9 = 0;
  }
  v11[4] = a3;
  void v11[5] = a4;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_25B9D2714;
  v11[3] = &unk_27092CEF0;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_requestCalendarEventFromOCRInput_inputOptions_with_, a1, v9, v10);
  _Block_release(v10);
}

void sub_25B9D89B0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  id v8 = a2;
  id v6 = a3;
  uint64_t v7 = sub_25B995998();
  v5(v7);
  swift_release();
}

id TextCompositionClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextCompositionClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25B9D8A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TextCompositionClient();
  return MEMORY[0x270F57798](a1, v5, a3);
}

uint64_t sub_25B9D8AD0(uint64_t a1)
{
  return nullsub_1(a1);
}

id sub_25B9D8B20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v14[1] = *(id *)MEMORY[0x263EF8340];
  if (a4)
  {
    uint64_t v9 = (void *)sub_25B9ECF60();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v14[0] = 0;
  id v10 = objc_msgSend(v5, sel_initWithAttributedString_range_options_error_, a1, a2, a3, v9, v14);

  if (v10)
  {
    id v11 = v14[0];
  }
  else
  {
    id v12 = v14[0];
    sub_25B9EC220();

    swift_willThrow();
  }

  return v10;
}

id sub_25B9D8C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    id v6 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = (void *)sub_25B9ECFC0();
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_25B97E120(0, &qword_26A51D780);
  id v6 = (void *)sub_25B9ED070();
  swift_bridgeObjectRelease();
LABEL_6:
  id v7 = objc_msgSend(v3, sel_initWithText_coordinates_, v5, v6);

  return v7;
}

id sub_25B9D8CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    sub_25B97E120(0, &qword_26A51D778);
    id v10 = (void *)sub_25B9ED070();
    swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    id v10 = 0;
    if (a2)
    {
LABEL_3:
      sub_25B97E120(0, &qword_26A51D778);
      id v11 = (void *)sub_25B9ED070();
      swift_bridgeObjectRelease();
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  id v11 = 0;
  if (a3)
  {
LABEL_4:
    sub_25B97E120(0, &qword_26A51D778);
    id v12 = (void *)sub_25B9ED070();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v13 = 0;
    if (a5) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v14 = 0;
    goto LABEL_12;
  }
LABEL_9:
  id v12 = 0;
  if (!a4) {
    goto LABEL_10;
  }
LABEL_5:
  sub_25B97E120(0, &qword_26A51D778);
  uint64_t v13 = (void *)sub_25B9ED070();
  swift_bridgeObjectRelease();
  if (!a5) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v14 = (void *)sub_25B9ECF60();
  swift_bridgeObjectRelease();
LABEL_12:
  id v15 = objc_msgSend(v5, sel_initWithTextBoxes_paragraphBoxes_paragraphGroupBoxes_blockBoxes_options_, v10, v11, v12, v13, v14);

  return v15;
}

id sub_25B9D8EA8(void *a1)
{
  return sub_25B9D0828(a1, *(void *)(v1 + 16));
}

id sub_25B9D8EB0(void *a1)
{
  return objc_msgSend(a1, sel_cancelWithToken_, *(void *)(v1 + 16));
}

void sub_25B9D8EC0(void *a1)
{
  sub_25B9D0DC4(a1, *(void *)(v1 + 16));
}

void sub_25B9D8EC8(void *a1)
{
}

uint64_t sub_25B9D8ED0(void *a1)
{
  return sub_25B9D1344(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_25B9D8EDC(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25B9D8F00()
{
  sub_25B9DC318();
  sub_25B9DC054(v4, v5, v6, v7);
  uint64_t v9 = *(void *)(v8 + 48);
  sub_25B9ECF40();
  sub_25B95097C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9 + *(void *)(v10 + 72) * v3, v2);
  *(void *)(*(void *)(v0 + 56) + 8 * v3) = v1;
  uint64_t v12 = *(void *)(v0 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 16) = v14;
  }
  return result;
}

uint64_t sub_25B9D8F8C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_25B9EC300();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_25B9D9044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_25B9DC32C();
  sub_25B9DC054(v10, v11, v12, v13);
  uint64_t v15 = *(void *)(v14 + 48);
  sub_25B9EC300();
  sub_25B95097C();
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15 + *(void *)(v16 + 72) * v8, v7);
  uint64_t v17 = *(void *)(v5 + 56);
  sub_25B94E854(a5);
  sub_25B95097C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17 + *(void *)(v18 + 72) * v8, v6);
  uint64_t v20 = *(void *)(v5 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v22;
  }
  return result;
}

uint64_t sub_25B9D9108(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_25B94E854(&qword_26A51BF30);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_25B9D91BC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25B961A24(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25B9D9228(uint64_t a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_25B9DC0FC();
  sub_25B9D9438(a1, a2);
  *uint64_t v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9D9294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_25B9DC0FC();
  sub_25B9D95C8(a1, a2, v9, a3, a4, v10, v11, v12, v14, v15, v17, v18);
  *unint64_t v4 = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9D9318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_25B9D9774(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9D93A8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_25B9D98E4(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25B9D9438(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = sub_25B9EC300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)*v2;
  sub_25B991964();
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v13 = v11;
  char v14 = v12;
  sub_25B94E854(&qword_26A51BF50);
  if ((sub_25B9ED450() & 1) == 0) {
    goto LABEL_5;
  }
  sub_25B991964();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    uint64_t result = sub_25B9ED6E0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v3;
  if (v14)
  {
    uint64_t v18 = v17[7];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v18 + 8 * v13) = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    return sub_25B9D8F8C(v13, (uint64_t)v9, a1, v17);
  }
  return result;
}

void sub_25B9D95C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_25B964F38();
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  char v16 = v15;
  uint64_t v17 = v12;
  uint64_t v19 = v18;
  uint64_t v20 = sub_25B9EC300();
  sub_25B950790();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *v12;
  sub_25B991964();
  if (__OFADD__(*(void *)(v26 + 16), (v28 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v29 = v27;
  char v30 = v28;
  sub_25B94E854(v16);
  if ((sub_25B9ED450() & 1) == 0) {
    goto LABEL_5;
  }
  sub_25B991964();
  if ((v30 & 1) != (v32 & 1))
  {
LABEL_11:
    sub_25B9ED6E0();
    __break(1u);
    return;
  }
  uint64_t v29 = v31;
LABEL_5:
  uint64_t v33 = *v17;
  if (v30)
  {
    sub_25B94E854(v42);
    sub_25B95097C();
    sub_25B964F50();
    v37(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v19, v20);
    sub_25B9D9044(v29, (uint64_t)v25, v43, v33, v42);
    sub_25B964F50();
  }
}

uint64_t sub_25B9D9774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25B991A30();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25B94E854(&qword_26A51BF38);
  if ((sub_25B9ED450() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25B991A30();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_25B9ED6E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  unint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_25B94E854(&qword_26A51BF30);
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v11;
    return v19(v21, a1, v20);
  }
  else
  {
    sub_25B9D9108(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_25B9D98E4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25B991A30();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25B94E854(&qword_26A51BF28);
  if ((sub_25B9ED450() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25B991A30();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)sub_25B9ED6E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  unint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v11);
    sub_25B94F65C((uint64_t)v16);
    return sub_25B961A24(a1, v16);
  }
  else
  {
    sub_25B9D91BC(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

id sub_25B9D9A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  unint64_t v11 = (void *)sub_25B9ECF60();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(a6, sel_inputArrayForAttributedString_range_options_error_, a1, a2, a3, v11, a5);

  return v12;
}

uint64_t sub_25B9D9AD8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D1B9C(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_25B9D9AE4(uint64_t a1)
{
  return sub_25B9D2B28(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_25B9D9AF4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D3214(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned char *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_25B9D9B08(uint64_t a1)
{
  return sub_25B9D47D8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_25B9D9B1C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D4F20(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_25B9D9B28(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D548C(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_25B9D9B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D9C34(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_25B9D58B0);
}

uint64_t sub_25B9D9B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D9C34(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_25B9D5DC4);
}

uint64_t sub_25B9D9B68(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D639C(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void **)(v3 + 72));
}

uint64_t sub_25B9D9BA8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D6950(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_25B9D9BB8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D6F18(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_25B9D9BC8()
{
  sub_25B9DC358();
  return sub_25B9D7414(v0, v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25B9D9BF0()
{
  sub_25B9DC358();
  return sub_25B9D79F4(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(void **)(v0 + 64));
}

uint64_t sub_25B9D9C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D9C34(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))sub_25B9D7F98);
}

uint64_t sub_25B9D9C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void, void, void, void))
{
  return a4(a1, a2, a3, *(void *)(v4 + 16), *(unsigned __int8 *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48));
}

uint64_t sub_25B9D9C50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25B9D87F4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_25B9D9C58(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_25B9ECF70();

  return v4;
}

unint64_t sub_25B9D9CC4()
{
  unint64_t result = qword_26A51D6F8;
  if (!qword_26A51D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D6F8);
  }
  return result;
}

unint64_t sub_25B9D9D14()
{
  unint64_t result = qword_26A51D700;
  if (!qword_26A51D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A51D700);
  }
  return result;
}

uint64_t sub_25B9D9D60(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25B9D9E04(&qword_26B34AAE8, a2, (void (*)(uint64_t))type metadata accessor for TextCompositionClient);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25B9D9DB8()
{
  return sub_25B9D9E04(&qword_26A51B5D0, 255, MEMORY[0x263F61838]);
}

uint64_t sub_25B9D9E04(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for TextCompositionClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TextCompositionClient);
}

uint64_t dispatch thunk of TextCompositionClient.requestCancellation(token:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TextCompositionClient.cancelRequest(token:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarming(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarmingForSmartReplies(documentType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarmingForSmartReplies(documentType:options:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TextCompositionClient.actualRangeForRewritingOrReview(of:range:rewritingType:options:)()
{
  sub_25B94E968();
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of TextCompositionClient.canHandle(attributedString:range:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TextCompositionClient.requestReview(of:range:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B9DBF80();
  sub_25B94E968();
  uint64_t v22 = *(void *)(v9 + 192) + **(int **)(v9 + 192);
  uint64_t v10 = swift_task_alloc();
  unint64_t v11 = (void *)sub_25B9DBE9C(v10);
  *unint64_t v11 = v12;
  v11[1] = sub_25B9DA0E0;
  sub_25B9DBF64();
  sub_25B9DC150();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t sub_25B9DA0E0()
{
  sub_25B960558();
  sub_25B960524();
  uint64_t v1 = *v0;
  sub_25B96053C();
  *id v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_25B9953E0();
  return v4(v3);
}

uint64_t dispatch thunk of TextCompositionClient.requestReview(of:range:options:resultHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TextCompositionClient.streamForReview(of:range:options:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TextCompositionClient.requestRewriting(of:range:rewritingType:options:)()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DBE84();
  sub_25B94E968();
  uint64_t v14 = v0 + 224;
  uint64_t v13 = *(void *)(v0 + 224) + **(int **)(v0 + 224);
  uint64_t v1 = swift_task_alloc();
  id v2 = (void *)sub_25B9DBE9C(v1);
  *id v2 = v3;
  v2[1] = sub_25B9DA320;
  sub_25B9DBDD4();
  sub_25B9DBEA8();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t sub_25B9DA320()
{
  sub_25B994E80();
  sub_25B9DBF80();
  sub_25B960524();
  uint64_t v5 = *v2;
  sub_25B96053C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8);
  return v7(v4, v3, v1, v0);
}

uint64_t dispatch thunk of TextCompositionClient.requestRewriting(of:range:rewritingType:options:resultHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TextCompositionClient.streamForRewriting(of:range:rewritingType:options:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TextCompositionClient.requestDescription(for:index:in:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B9DBF80();
  sub_25B94E968();
  uint64_t v22 = *(void *)(v9 + 256) + **(int **)(v9 + 256);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25B9DBE9C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_25B9DA578;
  sub_25B9DBF64();
  sub_25B9DC150();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t sub_25B9DA578()
{
  sub_25B960558();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_25B960524();
  uint64_t v7 = *v0;
  sub_25B96053C();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  return v9(v6, v4, v2);
}

uint64_t dispatch thunk of TextCompositionClient.requestShortFormSmartReplies(with:documentType:options:)()
{
  sub_25B994E80();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x108);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_25B9DBE9C(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_25B9DBD84;
  return v12(v6, v4, v2);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:options:)()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DBE84();
  sub_25B94E968();
  uint64_t v14 = (void *)(v0 + 272);
  uint64_t v13 = *v14 + *(int *)*v14;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9DBE9C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B9DBD84;
  sub_25B9DBDD4();
  sub_25B9DBEA8();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:options:)()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DBE84();
  sub_25B94E968();
  uint64_t v14 = (void *)(v0 + 280);
  uint64_t v13 = *v14 + *(int *)*v14;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9DBE9C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B9DBD84;
  sub_25B9DBDD4();
  sub_25B9DBEA8();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:baseResponse:userFilledQuestionnaire:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25B94E968();
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 + 288) + **(int **)(v16 + 288));
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)sub_25B9DBE9C(v17);
  *uint64_t v18 = v19;
  v18[1] = sub_25B9DBD84;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of TextCompositionClient.requestEmojiSmartReplies(inputContextHistory:tapbackMessageGUIDs:documentType:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25B9DC23C();
  sub_25B96DA78();
  sub_25B9DBF80();
  sub_25B94E968();
  uint64_t v22 = *(void *)(v9 + 296) + **(int **)(v9 + 296);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_25B9DBE9C(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_25B9DBD84;
  sub_25B9DBF64();
  sub_25B9DC150();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of TextCompositionClient.requestEmojiSmartReplies(messageID:messageText:options:)()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DBE84();
  sub_25B94E968();
  uint64_t v14 = (void *)(v0 + 304);
  uint64_t v13 = *v14 + *(int *)*v14;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9DBE9C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B9DBD84;
  sub_25B9DBDD4();
  sub_25B9DBEA8();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:userFilledQuestionnaire:options:)()
{
  sub_25B9DC1BC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_25B94E968();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 312)
                                                                                     + **(int **)(v12 + 312));
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)sub_25B9DBE9C(v13);
  void *v14 = v15;
  v14[1] = sub_25B9DBD84;
  return v17(v11, v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:baseResponse:options:)()
{
  sub_25B9DC1BC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_25B94E968();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 320)
                                                                                              + **(int **)(v14 + 320));
  uint64_t v15 = swift_task_alloc();
  uint64_t v16 = (void *)sub_25B9DBE9C(v15);
  void *v16 = v17;
  v16[1] = sub_25B9DBD84;
  return v19(v13, v11, v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of TextCompositionClient.requestBasicLongFormRepliesAndQuestionnaire(with:documentType:replyType:options:)()
{
  sub_25B9DBEC0();
  sub_25B96DA78();
  sub_25B9DBE84();
  sub_25B94E968();
  uint64_t v14 = (void *)(v0 + 328);
  uint64_t v13 = *v14 + *(int *)*v14;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9DBE9C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B9DBD7C;
  sub_25B9DBDD4();
  sub_25B9DBEA8();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of TextCompositionClient.requestCalendarEventFromOCROutput(with:)()
{
  sub_25B960558();
  uint64_t v1 = v0;
  sub_25B94E968();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 336) + **(int **)(v2 + 336));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_25B9DBE9C(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_25B9DB1C4;
  return v7(v1);
}

uint64_t sub_25B9DB1C4()
{
  sub_25B960594();
  uint64_t v2 = v1;
  sub_25B960524();
  uint64_t v3 = *v0;
  sub_25B96053C();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of TextCompositionClient.requestCalendarEventFrom(fromOCRInput:inputOptions:)()
{
  sub_25B994E80();
  sub_25B94E968();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 344) + **(int **)(v0 + 344));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_25B9DBE9C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25B9DBD84;
  uint64_t v4 = sub_25B9953E0();
  return v6(v4);
}

uint64_t getEnumTagSinglePayload for TextCompositionClient.RewritingType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for TextCompositionClient.RewritingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9DB4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for TextCompositionClient.RewritingType()
{
}

unsigned char *storeEnumTagSinglePayload for TextCompositionClient.TCDocumentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25B9DB5F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for TextCompositionClient.TCDocumentType()
{
}

uint64_t sub_25B9DB62C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25B9DB664(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_25B9DB674()
{
  return swift_release();
}