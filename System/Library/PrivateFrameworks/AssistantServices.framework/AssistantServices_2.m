void sub_1002CBE30(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  uint64_t vars8;

  v11 = a3;
  v7 = [*(id *)(a1 + 32) objectForKey:a2];
  v8 = v7;
  v9 = *(void *)(*(void *)(a1 + 40) + 8);
  if (v7)
  {
    if (*(unsigned char *)(v9 + 24))
    {
      v10 = [v7 matchesCapabilityDescriptions:v11];
      v9 = *(void *)(*(void *)(a1 + 40) + 8);
    }
    else
    {
      v10 = 0;
    }
    *(unsigned char *)(v9 + 24) = v10;
  }
  else
  {
    *(unsigned char *)(v9 + 24) = 0;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a4 = 1;
  }
}

NSDictionary *__cdecl sub_1002CBEF0(id a1, SVDCapability *a2)
{
  v2 = a2;
  v3 = [(SVDCapability *)v2 key];
  v6 = v3;
  v7 = v2;
  v4 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];

  return (NSDictionary *)v4;
}

void sub_1002CC190(uint64_t a1, uint64_t a2)
{
  v3 = [*(id *)(a1 + 32) _devicesMatchingDescriptions:*(void *)(a1 + 40) capabilitiesTuples:a2 proximityMap:0];
  v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    v5 = v4;
    v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v3 count]);
    int v7 = 136315394;
    v8 = "-[ADDeviceResolutionServiceListener getDevicesMatchingCapabilityDescriptions:completion:]_block_invoke";
    __int16 v9 = 2112;
    v10 = v6;
    _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s #hal returning  [matchingDevices count] %@", (uint8_t *)&v7, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1002CC2BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1002CC38C;
  v6[3] = &unk_10050A580;
  v6[4] = v4;
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = *(id *)(a1 + 48);
  id v5 = v3;
  [v4 getDeviceContextAndProximityMapIncludingAllReachableDevice:1 completion:v6];
}

void sub_1002CC38C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1002AB8D8(a3);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  v4 = [*(id *)(a1 + 32) _devicesMatchingDescriptions:*(void *)(a1 + 40) capabilitiesTuples:*(void *)(a1 + 48) proximityMap:v5];
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1002CC4C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v21 = sub_1002AB8D8(a3);
  id v22 = objc_alloc_init((Class)NSMutableDictionary);
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = v5;
  id v6 = [obj countByEnumeratingWithState:&v24 objects:v30 count:16];
  if (v6)
  {
    id v8 = v6;
    uint64_t v9 = *(void *)v25;
    *(void *)&long long v7 = 136315138;
    long long v20 = v7;
    do
    {
      v10 = 0;
      do
      {
        if (*(void *)v25 != v9) {
          objc_enumerationMutation(obj);
        }
        v11 = objc_msgSend(*(id *)(*((void *)&v24 + 1) + 8 * (void)v10), "content", v20);
        v12 = [v11 identifier];
        if (v12 && [*(id *)(a1 + 32) containsObject:v12])
        {
          uint64_t v13 = a1;
          v14 = [v11 deviceInfo];
          v15 = [v14 assistantIdentifier];

          if (!v15
            || ([v21 objectForKey:v15], (v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue()) == 0))
          {
            if ([v11 fromLocalDevice])
            {
              v17 = AFSiriLogContextDaemon;
              v16 = &off_100523B40;
              if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = v20;
                v29 = "-[ADDeviceResolutionServiceListener getSourceDeviceForContextWithIdentifiers:completion:]_block_invoke";
                _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s Override proximity for local device to be primary", buf, 0xCu);
              }
            }
            else
            {
              v16 = 0;
            }
          }
          v18 = [v11 deviceInfo];
          v19 = sub_1002CAF88(v18, (uint64_t)[v16 integerValue]);

          [v22 setObject:v19 forKey:v12];
          a1 = v13;
        }

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [obj countByEnumeratingWithState:&v24 objects:v30 count:16];
    }
    while (v8);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002CC7F0(uint64_t a1, uint64_t a2, void *a3)
{
  objc_msgSend(a3, "af_lenientMappedArray:", &stru_10050A5C0);
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

SVDDeviceUnit *__cdecl sub_1002CC85C(id a1, AFPeerContentTuple *a2)
{
  v2 = a2;
  id v3 = [(AFPeerContentTuple *)v2 info];
  id v4 = [(AFPeerContentTuple *)v2 content];

  id v5 = sub_1002CAF88(v3, (uint64_t)[v4 integerValue]);
  id v6 = [v5 assistantId];
  id v7 = [v6 length];

  if (v7)
  {
    id v8 = v5;
  }
  else
  {
    uint64_t v9 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v11 = 136315394;
      v12 = "-[ADDeviceResolutionServiceListener getAllReachableDevicesWithCompletion:]_block_invoke_2";
      __int16 v13 = 2112;
      v14 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Missing assistantId for device: %@", (uint8_t *)&v11, 0x16u);
    }
    id v8 = 0;
  }

  return (SVDDeviceUnit *)v8;
}

void sub_1002CCB90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = sub_1002AB8D8(a3);
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      int v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        v12 = objc_msgSend(*(id *)(*((void *)&v21 + 1) + 8 * (void)v11), "content", (void)v21);
        __int16 v13 = [v12 identifier];
        v14 = [v12 deviceInfo];
        v15 = [v14 assistantIdentifier];

        if (v13 && ([*(id *)(a1 + 32) containsObject:v13] & 1) != 0)
        {
          if (v15)
          {
LABEL_12:
            v16 = [v6 objectForKey:v15];
          }
          else
          {
            v16 = 0;
          }
          [*(id *)(a1 + 48) setObject:v16 forKeyedSubscript:v12];

          goto LABEL_14;
        }
        if (v15 && ([*(id *)(a1 + 40) containsObject:v15] & 1) != 0) {
          goto LABEL_12;
        }
LABEL_14:

        int v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
    }
    while (v9);
  }

  v17 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v18 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 136315394;
    long long v26 = "-[ADDeviceResolutionServiceListener getContextAndProximitySnapshotForCurrentRequestForDeviceUnits:serviceConte"
          "xts:completion:]_block_invoke_3";
    __int16 v27 = 2112;
    uint64_t v28 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s #hal cacheDeviceContextProximity getContextAndProximitySnapshotForCurrentRequest result: %@", buf, 0x16u);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = +[NSDictionary dictionaryWithDictionary:](NSDictionary, "dictionaryWithDictionary:", *(void *)(a1 + 48), (void)v21);
  (*(void (**)(uint64_t, void *))(v19 + 16))(v19, v20);
}

id sub_1002CCDE4(id a1, SVDDeviceUnit *a2)
{
  return [(SVDDeviceUnit *)a2 assistantId];
}

id sub_1002CCDEC(id a1, AFServiceDeviceContext *a2)
{
  return [(AFServiceDeviceContext *)a2 identifier];
}

void sub_1002CD840(uint64_t a1)
{
  v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v3 = *(_DWORD *)(a1 + 32);
    int v4 = 136315394;
    id v5 = "-[ADDeviceResolutionServiceListener listener:shouldAcceptNewConnection:]_block_invoke";
    __int16 v6 = 1024;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Device Resolution Service Connection Invalidated (pid=%d)", (uint8_t *)&v4, 0x12u);
  }
}

void sub_1002CD8FC(uint64_t a1)
{
  v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v3 = *(_DWORD *)(a1 + 32);
    int v4 = 136315394;
    id v5 = "-[ADDeviceResolutionServiceListener listener:shouldAcceptNewConnection:]_block_invoke";
    __int16 v6 = 1024;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Device Resolution Service Connection Interrupted (pid=%d)", (uint8_t *)&v4, 0x12u);
  }
}

void *sub_1002CDA2C(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 8))
  {
    v2 = result;
    int v3 = *(void **)(v1 + 24);
    int v4 = +[SVDDeviceResolutionXPCInterface serviceName];
    uint64_t v5 = [v3 createXPCListenerWithMachServiceName:v4];
    uint64_t v6 = v2[4];
    int v7 = *(void **)(v6 + 8);
    *(void *)(v6 + 8) = v5;

    id v8 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *(void *)(v2[4] + 8);
      int v10 = 136315394;
      int v11 = "-[ADDeviceResolutionServiceListener setupListener]_block_invoke";
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "%s listener = %@", (uint8_t *)&v10, 0x16u);
    }
    objc_msgSend(*(id *)(v2[4] + 8), "setDelegate:");
    return [*(id *)(v2[4] + 8) resume];
  }
  return result;
}

void sub_1002CDF3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_type_t type = xpc_get_type(v3);
  if (type == (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v12 = 136315138;
      uint64_t v13 = "-[ADSiriTetherListener _handleNewConnection:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Message!", (uint8_t *)&v12, 0xCu);
    }
    xpc_object_t reply = xpc_dictionary_create_reply(v3);
    id v8 = reply;
    if (reply)
    {
      xpc_dictionary_get_remote_connection(reply);
      uint64_t v9 = (_xpc_connection_s *)objc_claimAutoreleasedReturnValue();
      if (v9)
      {
        int v10 = v9;
        xpc_connection_send_message(v9, v8);
      }
    }
  }
  else
  {
    uint64_t v5 = AFSiriLogContextDaemon;
    if (type == (xpc_type_t)&_xpc_type_error)
    {
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        int v12 = 136315394;
        uint64_t v13 = "-[ADSiriTetherListener _handleNewConnection:]_block_invoke";
        __int16 v14 = 2048;
        uint64_t v15 = v11;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Clearing tether %p", (uint8_t *)&v12, 0x16u);
      }
      xpc_connection_cancel(*(xpc_connection_t *)(a1 + 32));
    }
    else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v12 = 136315138;
      uint64_t v13 = "-[ADSiriTetherListener _handleNewConnection:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Ignoring unexpected event", (uint8_t *)&v12, 0xCu);
    }
  }
}

void sub_1002CE1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002CE1F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_type_t type = xpc_get_type(v3);
  if (type == (xpc_type_t)&_xpc_type_connection)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _handleNewConnection:v3];
LABEL_6:

    goto LABEL_8;
  }
  xpc_type_t v5 = type;
  uint64_t v6 = AFSiriLogContextDaemon;
  BOOL v7 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (v5 == (xpc_type_t)&_xpc_type_error)
  {
    if (!v7) {
      goto LABEL_8;
    }
    WeakRetained = v6;
    int v9 = 136315394;
    int v10 = "-[ADSiriTetherListener listen]_block_invoke";
    __int16 v11 = 2082;
    string = xpc_dictionary_get_string(v3, _xpc_error_key_description);
    _os_log_error_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "%s %{public}s", (uint8_t *)&v9, 0x16u);
    goto LABEL_6;
  }
  if (v7)
  {
    int v9 = 136315138;
    int v10 = "-[ADSiriTetherListener listen]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Ignoring unexpected event", (uint8_t *)&v9, 0xCu);
  }
LABEL_8:
}

void sub_1002CEBC4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1002CEBE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  uint64_t v1 = +[ADSpeechPlaybackSimulator _speechLogDecodingError];
  [WeakRetained speechCapturingDidStopRecordingWithError:v1 endpointMode:0 totalPacketCount:0 endpointerMetrics:0];
}

void sub_1002CEC5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained speechCapturingDidStartRecordingSuccessfully:1 error:0 withInfo:*(void *)(a1 + 40)];
}

void sub_1002CECB8(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
  [WeakRetained speechCapturingDidRecordSpeechPackets:a1[5] atTimestamp:a1[6] totalPacketCount:0.0];
}

void sub_1002CED10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained speechCapturingDidStopRecordingWithError:0 endpointMode:1 totalPacketCount:*(void *)(a1 + 40) endpointerMetrics:0];
}

void sub_1002CED70(uint64_t a1)
{
  v2 = [*(id *)(a1 + 32) lastObject];
  if (v2)
  {
    [*(id *)(a1 + 32) removeLastObject];
    __int16 v11 = v2;
    id v3 = +[NSArray arrayWithObjects:&v11 count:1];
    int v4 = *(NSObject **)(*(void *)(a1 + 40) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1002CF068;
    block[3] = &unk_10050A830;
    objc_copyWeak(&v10, (id *)(a1 + 64));
    id v5 = v3;
    uint64_t v6 = *(void *)(a1 + 56);
    id v8 = v5;
    uint64_t v9 = v6;
    dispatch_async(v4, block);
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) += [v5 count];

    objc_destroyWeak(&v10);
  }
  if (![*(id *)(a1 + 32) count]) {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 48));
  }
}

void sub_1002CEED0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1002CEEEC(uint64_t a1)
{
  if (*(void *)(a1 + 72) == *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = 2;
  }
  id v3 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002CEFF4;
  block[3] = &unk_10050A880;
  objc_copyWeak(v9, (id *)(a1 + 64));
  uint64_t v4 = *(void *)(a1 + 56);
  v9[1] = (id)v2;
  void block[4] = v4;
  dispatch_async(v3, block);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 24);
  if (v6 == *(void **)(a1 + 40))
  {
    *(void *)(v5 + 24) = 0;
  }
  uint64_t v7 = *(void *)(a1 + 48);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
  objc_destroyWeak(v9);
}

void sub_1002CEFE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1002CEFF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained delegate];
  [v2 speechCapturingDidStopRecordingWithError:0 endpointMode:*(void *)(a1 + 48) totalPacketCount:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) endpointerMetrics:0];
}

void sub_1002CF068(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = [WeakRetained delegate];
  [v2 speechCapturingDidRecordSpeechPackets:*(void *)(a1 + 32) atTimestamp:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) totalPacketCount:0.0];
}

id sub_1002CF230(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 8), *(id *)(a1 + 40));
}

id sub_1002CF408(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * i), "identifier", (void)v11);
        if (v8) {
          [v2 addObject:v8];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = [v2 copy];
  return v9;
}

void sub_1002CF7C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((sub_1002CF998(v3) & 1) == 0)
  {
    id v4 = AFSiriLogContextDaemon;
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
LABEL_3:

      [*(id *)(a1 + 32) addObject:v3];
      goto LABEL_4;
    }
    id v5 = [v3 identifier];
    uint64_t v6 = [v3 model];
    uint64_t v7 = [v3 name];
    id v8 = [v3 roomName];
    int v9 = [v3 proximity];
    if (v9 > 19)
    {
      if (v9 == 20)
      {
        id v10 = "Near";
        goto LABEL_15;
      }
      if (v9 == 30)
      {
        id v10 = "Far";
        goto LABEL_15;
      }
    }
    else
    {
      if (!v9)
      {
        id v10 = "Unknown";
        goto LABEL_15;
      }
      if (v9 == 10)
      {
        id v10 = "Immed";
LABEL_15:
        int v11 = 136316418;
        long long v12 = "-[ADAudioSessionCoordinator _disqualifiedDevices]_block_invoke";
        __int16 v13 = 2112;
        long long v14 = v5;
        __int16 v15 = 2112;
        v16 = v6;
        __int16 v17 = 2112;
        uint64_t v18 = v7;
        __int16 v19 = 2112;
        long long v20 = v8;
        __int16 v21 = 2080;
        long long v22 = v10;
        _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s deviceID = %@, model = %@, name = %@, roomName = %@, proximity = %s", (uint8_t *)&v11, 0x3Eu);

        goto LABEL_3;
      }
    }
    id v10 = "?";
    goto LABEL_15;
  }
LABEL_4:
}

id sub_1002CF998(void *a1)
{
  id v1 = sub_1002CF9D0(a1);
  id v2 = [v1 isSupportedAndEnabled];

  return v2;
}

id sub_1002CF9D0(void *a1)
{
  id v1 = a1;
  id v2 = [v1 siriInfo];
  id v3 = [v2 objectForKey:@"audio-session-coordination.system-info"];

  if (v3) {
    id v4 = [objc_alloc((Class)AFAudioSessionCoordinationSystemInfo) initWithDictionaryRepresentation:v3];
  }
  else {
    id v4 = 0;
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1002CFB08;
  v9[3] = &unk_10050AD78;
  id v5 = v1;
  id v10 = v5;
  uint64_t v6 = objc_retainBlock(v9);
  if (v4)
  {
    id v7 = [v4 mutatedCopyWithMutator:v6];
  }
  else
  {
    id v7 = +[AFAudioSessionCoordinationSystemInfo newWithBuilder:v6];
  }

  return v7;
}

void sub_1002CFB08(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 roomName];
  [v4 setHomeKitRoomName:v5];

  id v6 = [*(id *)(a1 + 32) mediaSystemIdentifier];
  [v4 setHomeKitMediaSystemIdentifier:v6];
}

void sub_1002CFD98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_1002CF998(v3) && (sub_1002CFF80(v3, *(void **)(*(void *)(a1 + 32) + 64)) & 1) == 0)
  {
    id v4 = AFSiriLogContextDaemon;
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:

      [*(id *)(a1 + 40) addObject:v3];
      goto LABEL_5;
    }
    id v5 = [v3 identifier];
    id v6 = [v3 model];
    id v7 = [v3 name];
    id v8 = [v3 roomName];
    int v9 = [v3 proximity];
    if (v9 > 19)
    {
      if (v9 == 20)
      {
        id v10 = "Near";
        goto LABEL_16;
      }
      if (v9 == 30)
      {
        id v10 = "Far";
        goto LABEL_16;
      }
    }
    else
    {
      if (!v9)
      {
        id v10 = "Unknown";
        goto LABEL_16;
      }
      if (v9 == 10)
      {
        id v10 = "Immed";
LABEL_16:
        int v11 = 136316418;
        long long v12 = "-[ADAudioSessionCoordinator _qualifiedOutOfRangeDevices]_block_invoke";
        __int16 v13 = 2112;
        long long v14 = v5;
        __int16 v15 = 2112;
        v16 = v6;
        __int16 v17 = 2112;
        uint64_t v18 = v7;
        __int16 v19 = 2112;
        long long v20 = v8;
        __int16 v21 = 2080;
        long long v22 = v10;
        _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s deviceID = %@, model = %@, name = %@, roomName = %@, proxmity = %s", (uint8_t *)&v11, 0x3Eu);

        goto LABEL_4;
      }
    }
    id v10 = "?";
    goto LABEL_16;
  }
LABEL_5:
}

uint64_t sub_1002CFF80(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 homeKitRoomName];
  uint64_t v6 = [v3 roomName];
  id v7 = (void *)v6;
  uint64_t v8 = 0;
  if (v5 && v6)
  {
    if ([v5 isEqual:v6])
    {
      int v9 = [v4 homeKitMediaSystemIdentifier];
      uint64_t v10 = [v3 mediaSystemIdentifier];
      int v11 = (void *)v10;
      if (v9 && v10 && ([v9 isEqual:v10] & 1) != 0)
      {
        uint64_t v8 = 1;
      }
      else
      {
        long long v12 = [v4 mediaRemoteGroupIdentifier];
        __int16 v13 = sub_1002CF9D0(v3);
        long long v14 = [v13 mediaRemoteGroupIdentifier];

        uint64_t v8 = 0;
        if (v12 && v14) {
          uint64_t v8 = (uint64_t)[v12 isEqual:v14];
        }
      }
    }
    else
    {
      uint64_t v8 = 0;
    }
  }

  return v8;
}

void sub_1002D02C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_1002CF998(v3) && sub_1002CFF80(v3, *(void **)(*(void *)(a1 + 32) + 64)))
  {
    id v4 = AFSiriLogContextDaemon;
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:

      [*(id *)(a1 + 40) addObject:v3];
      goto LABEL_5;
    }
    id v5 = [v3 identifier];
    uint64_t v6 = [v3 model];
    id v7 = [v3 name];
    uint64_t v8 = [v3 roomName];
    int v9 = [v3 proximity];
    if (v9 > 19)
    {
      if (v9 == 20)
      {
        uint64_t v10 = "Near";
        goto LABEL_16;
      }
      if (v9 == 30)
      {
        uint64_t v10 = "Far";
        goto LABEL_16;
      }
    }
    else
    {
      if (!v9)
      {
        uint64_t v10 = "Unknown";
        goto LABEL_16;
      }
      if (v9 == 10)
      {
        uint64_t v10 = "Immed";
LABEL_16:
        int v11 = 136316418;
        long long v12 = "-[ADAudioSessionCoordinator _qualifiedInRangeDevices]_block_invoke";
        __int16 v13 = 2112;
        long long v14 = v5;
        __int16 v15 = 2112;
        v16 = v6;
        __int16 v17 = 2112;
        uint64_t v18 = v7;
        __int16 v19 = 2112;
        long long v20 = v8;
        __int16 v21 = 2080;
        long long v22 = v10;
        _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s deviceID = %@, model = %@, name = %@, roomName = %@, proximity = %s", (uint8_t *)&v11, 0x3Eu);

        goto LABEL_4;
      }
    }
    uint64_t v10 = "?";
    goto LABEL_16;
  }
LABEL_5:
}

void sub_1002D0618(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_1002CF998(v3))
  {
    id v4 = AFSiriLogContextDaemon;
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
LABEL_3:

      [*(id *)(a1 + 32) addObject:v3];
      goto LABEL_4;
    }
    id v5 = [v3 identifier];
    uint64_t v6 = [v3 model];
    id v7 = [v3 name];
    uint64_t v8 = [v3 roomName];
    int v9 = [v3 proximity];
    if (v9 > 19)
    {
      if (v9 == 20)
      {
        uint64_t v10 = "Near";
        goto LABEL_15;
      }
      if (v9 == 30)
      {
        uint64_t v10 = "Far";
        goto LABEL_15;
      }
    }
    else
    {
      if (!v9)
      {
        uint64_t v10 = "Unknown";
        goto LABEL_15;
      }
      if (v9 == 10)
      {
        uint64_t v10 = "Immed";
LABEL_15:
        int v11 = 136316418;
        long long v12 = "-[ADAudioSessionCoordinator _qualifiedDevices]_block_invoke";
        __int16 v13 = 2112;
        long long v14 = v5;
        __int16 v15 = 2112;
        v16 = v6;
        __int16 v17 = 2112;
        uint64_t v18 = v7;
        __int16 v19 = 2112;
        long long v20 = v8;
        __int16 v21 = 2080;
        long long v22 = v10;
        _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s deviceID = %@, model = %@, name = %@, roomName = %@, proximity = %s", (uint8_t *)&v11, 0x3Eu);

        goto LABEL_3;
      }
    }
    uint64_t v10 = "?";
    goto LABEL_15;
  }
LABEL_4:
}

id sub_1002D2620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleUpdatedLocalAssertionsForReason:@"Local Assertion Removal" pendingAssertions:a2 activeAssertions:a3];
}

id sub_1002D2970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleUpdatedLocalAssertionsForReason:@"Local Assertion Deactivation" pendingAssertions:a2 activeAssertions:a3];
}

id sub_1002D2D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleUpdatedLocalAssertionsForReason:@"Local Assertion Activation" pendingAssertions:a2 activeAssertions:a3];
}

id sub_1002D2EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleUpdatedLocalAssertionsForReason:@"Local Assertion Addition" pendingAssertions:a2 activeAssertions:a3];
}

void sub_1002D3480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002D34AC(uint64_t a1, uint64_t a2)
{
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    int v6 = 136315394;
    id v7 = "-[ADAudioSessionCoordinator _startHeartBeatWithEffectiveDate:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s index = %tu", (uint8_t *)&v6, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _heartBeatFired];
}

void sub_1002D3588(id a1, unint64_t a2)
{
  id v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    int v4 = 136315394;
    id v5 = "-[ADAudioSessionCoordinator _startHeartBeatWithEffectiveDate:]_block_invoke";
    __int16 v6 = 2048;
    unint64_t v7 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s count = %tu", (uint8_t *)&v4, 0x16u);
  }
}

void sub_1002D3EA0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [[ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest alloc] initWithExpirationDuration:*(double *)(a1 + 40)];
  [v3 _sendKeepAudioSessionAliveRequest:v5 toDeviceWithID:v4 responseHandler:0];
}

id sub_1002D4ACC(uint64_t a1, void *a2)
{
  return _[a2 setMediaRemoteRouteIdentifier:*(void *)(a1 + 32)];
}

id sub_1002D4CD4(uint64_t a1, void *a2)
{
  return _[a2 setMediaRemoteGroupIdentifier:*(void *)(a1 + 32)];
}

id sub_1002D4EDC(uint64_t a1, void *a2)
{
  return [a2 setHomeKitMediaSystemIdentifier:*(void *)(a1 + 32)];
}

id sub_1002D50E4(uint64_t a1, void *a2)
{
  return [a2 setHomeKitRoomName:*(void *)(a1 + 32)];
}

uint64_t sub_1002D53B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1002D5A74(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userInfo];
  id v5 = [v2 objectForKey:AFMediaRemoteDeviceInfoNotificationKey];

  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v4 = v5;
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_5;
    }
    id v4 = 0;
  }
  [*(id *)(a1 + 40) _updateMediaRemoteGroupIdentifier:v4 reason:@"Notification (Optimistic)"];
LABEL_5:
}

void sub_1002D5C70(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userInfo];
  id v5 = [v2 objectForKey:AFMediaRemoteDeviceInfoNotificationKey];

  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v4 = v5;
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_5;
    }
    id v4 = 0;
  }
  [*(id *)(a1 + 40) _updateMediaRemoteRouteIdentifier:v4 reason:@"Notification (Optimistic)"];
LABEL_5:
}

id sub_1002D5E2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _resetRapportLinkAndReconnectNow:0];
}

id sub_1002D5F3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _resetRapportLinkAndReconnectNow:1];
}

void *sub_1002D602C(uint64_t a1)
{
  result = *(void **)(a1 + 32);
  if (!result[13]) {
    return [result _setUpRapportLink];
  }
  return result;
}

id sub_1002D6174(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleLostRemoteDevice:*(void *)(a1 + 40)];
}

id sub_1002D62C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleUpdatedRemoteDevice:*(void *)(a1 + 40)];
}

id sub_1002D6408(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleFoundRemoteDevice:*(void *)(a1 + 40)];
}

id sub_1002D6548(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleUpdatedLocalDevice:*(void *)(a1 + 40)];
}

id sub_1002D687C(uint64_t a1, void *a2)
{
  return [a2 setIsSupportedAndEnabled:*(unsigned __int8 *)(a1 + 32)];
}

id sub_1002D6FE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _invalidate];
}

void sub_1002D713C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    *(_DWORD *)buf = 136315650;
    long long v14 = "-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteGroupIdentifierForReason:]_block_invoke";
    __int16 v15 = 2112;
    id v16 = v3;
    __int16 v17 = 2048;
    uint64_t v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s groupIdentifier = %@ (%f seconds)", buf, 0x20u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = *(NSObject **)(v7 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D72B0;
  block[3] = &unk_10050DCB8;
  void block[4] = v7;
  id v11 = v3;
  id v12 = *(id *)(a1 + 40);
  id v9 = v3;
  dispatch_async(v8, block);
}

id sub_1002D72B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateMediaRemoteGroupIdentifier:*(void *)(a1 + 40) reason:*(void *)(a1 + 48)];
}

void sub_1002D7414(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    *(_DWORD *)buf = 136315650;
    long long v14 = "-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteRouteIdentifierForReason:]_block_invoke";
    __int16 v15 = 2112;
    id v16 = v3;
    __int16 v17 = 2048;
    uint64_t v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s routeIdentifier = %@ (%f seconds)", buf, 0x20u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = *(NSObject **)(v7 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D7588;
  block[3] = &unk_10050DCB8;
  void block[4] = v7;
  id v11 = v3;
  id v12 = *(id *)(a1 + 40);
  id v9 = v3;
  dispatch_async(v8, block);
}

id sub_1002D7588(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateMediaRemoteRouteIdentifier:*(void *)(a1 + 40) reason:*(void *)(a1 + 48)];
}

void sub_1002D79DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002D79FC(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 80);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1002D7BC8;
  v9[3] = &unk_10050ACB8;
  id v10 = *(id *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002D7D3C;
  v4[3] = &unk_10050ACE0;
  uint64_t v8 = *(void *)(a1 + 64);
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 40);
  id v3 = +[AFAssertionContext newWithBuilder:v4];
  [v2 relinquishAsertionsPassingTest:v9 context:v3];
}

uint64_t sub_1002D7B40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002D7B50(uint64_t a1)
{
}

void sub_1002D7B58(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = *(NSObject **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v2)
  {
    dispatch_source_cancel(v2);
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

uint64_t sub_1002D7BC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 context];
  id v5 = [v4 userInfo];
  id v6 = [v5 objectForKey:@"isRemote"];
  unsigned int v7 = [v6 BOOLValue];

  if (v7)
  {
    uint64_t v8 = [v3 context];
    id v9 = [v8 userInfo];
    id v10 = [v9 objectForKey:@"senderID"];
    uint64_t v11 = (uint64_t)[v10 isEqualToString:*(void *)(a1 + 32)];

    if (v11)
    {
      id v12 = AFSiriLogContextDaemon;
      uint64_t v11 = 1;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        int v14 = 136315394;
        __int16 v15 = "-[ADAudioSessionCoordinator _relinquishRemoteAssertionForSenderID:reason:effectiveDate:error:]_block_invoke_2";
        __int16 v16 = 2112;
        id v17 = v3;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s Remote assertion %@ will be relinquished now.", (uint8_t *)&v14, 0x16u);
      }
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

void sub_1002D7D3C(void *a1, void *a2)
{
  uint64_t v3 = a1[7];
  id v4 = a2;
  [v4 setTimestamp:v3];
  [v4 setEffectiveDate:a1[4]];
  [v4 setReason:a1[5]];
  uint64_t v5 = a1[6];
  v7[0] = @"senderID";
  v7[1] = @"isRemote";
  v8[0] = v5;
  v8[1] = &__kCFBooleanTrue;
  id v6 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  [v4 setUserInfo:v6];
}

void sub_1002D85B8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1002D85D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTimestamp:*(void *)(a1 + 64)];
  [v3 setReason:*(void *)(a1 + 32)];
  [v3 setEffectiveDate:*(void *)(a1 + 40)];
  [v3 setExpirationDuration:*(double *)(a1 + 72)];
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 56);
    v13[0] = @"senderID";
    v13[1] = @"senderName";
    v14[0] = v5;
    v14[1] = v4;
    v13[2] = @"isRemote";
    v14[2] = &__kCFBooleanTrue;
    id v6 = v14;
    unsigned int v7 = v13;
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 56);
    v11[0] = @"senderID";
    v11[1] = @"isRemote";
    v12[0] = v9;
    v12[1] = &__kCFBooleanTrue;
    id v6 = v12;
    unsigned int v7 = v11;
    uint64_t v8 = 2;
  }
  id v10 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v7 count:v8];
  [v3 setUserInfo:v10];
}

void sub_1002D870C(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v6 = 136315394;
    unsigned int v7 = "-[ADAudioSessionCoordinator _acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:]_block_invoke_2";
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Relinquished remote assertion %@.", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = 0;
}

uint64_t sub_1002D87E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 context];
  uint64_t v5 = [v4 userInfo];
  int v6 = [v5 objectForKey:@"isRemote"];
  unsigned int v7 = [v6 BOOLValue];

  if (!v7) {
    goto LABEL_4;
  }
  __int16 v8 = [v3 context];
  uint64_t v9 = [v8 userInfo];
  id v10 = [v9 objectForKey:@"senderID"];
  unsigned int v11 = [v10 isEqualToString:*(void *)(a1 + 32)];

  if (!v11) {
    goto LABEL_4;
  }
  id v12 = [v3 uuid];
  unsigned __int8 v13 = [v12 isEqual:*(void *)(a1 + 40)];

  if ((v13 & 1) == 0)
  {
    __int16 v16 = AFSiriLogContextDaemon;
    uint64_t v14 = 1;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v17 = 136315394;
      uint64_t v18 = "-[ADAudioSessionCoordinator _acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:]_block_invoke";
      __int16 v19 = 2112;
      id v20 = v3;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "%s Remote assertion %@ will be relinquished now.", (uint8_t *)&v17, 0x16u);
    }
  }
  else
  {
LABEL_4:
    uint64_t v14 = 0;
  }

  return v14;
}

void sub_1002D897C(void *a1, void *a2)
{
  id v3 = a2;
  [v3 setTimestamp:a1[8]];
  [v3 setEffectiveDate:a1[4]];
  [v3 setReason:a1[5]];
  uint64_t v4 = a1[6];
  if (v4)
  {
    uint64_t v5 = a1[7];
    v13[0] = @"senderID";
    v13[1] = @"senderName";
    v14[0] = v5;
    v14[1] = v4;
    v13[2] = @"isRemote";
    v14[2] = &__kCFBooleanTrue;
    int v6 = v14;
    unsigned int v7 = v13;
    uint64_t v8 = 3;
  }
  else
  {
    uint64_t v9 = a1[7];
    v11[0] = @"senderID";
    v11[1] = @"isRemote";
    v12[0] = v9;
    v12[1] = &__kCFBooleanTrue;
    int v6 = v12;
    unsigned int v7 = v11;
    uint64_t v8 = 2;
  }
  id v10 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v7 count:v8];
  [v3 setUserInfo:v10];
}

void sub_1002D8C08(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id v9 = a3;
  uint64_t v10 = mach_absolute_time();
  unsigned int v11 = [v9 objectForKey:RPOptionSenderID];

  id v12 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315906;
    long long v26 = "-[ADAudioSessionCoordinator _registerRequestID:requestHandler:]_block_invoke";
    __int16 v27 = 2112;
    uint64_t v28 = v11;
    __int16 v29 = 2112;
    uint64_t v30 = v18;
    __int16 v31 = 2112;
    id v32 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%s <<<--- senderID = %@, requestID = %@, request = %@", buf, 0x2Au);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D8DD8;
  block[3] = &unk_10050ABC8;
  unsigned __int8 v13 = *(NSObject **)(a1 + 40);
  id v14 = *(id *)(a1 + 48);
  id v20 = v7;
  id v21 = v11;
  id v23 = v8;
  uint64_t v24 = v10;
  id v22 = v14;
  id v15 = v8;
  id v16 = v11;
  id v17 = v7;
  dispatch_async(v13, block);
}

void sub_1002D8DD8(void *a1)
{
  uint64_t v1 = a1[6];
  if (v1)
  {
    uint64_t v4 = a1[4];
    id v3 = (void *)a1[5];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1002D8EA0;
    v8[3] = &unk_10050ABA0;
    id v5 = v3;
    id v7 = (void *)a1[7];
    uint64_t v6 = a1[8];
    id v9 = v5;
    uint64_t v11 = v6;
    id v10 = v7;
    (*(void (**)(uint64_t, uint64_t, id, void *))(v1 + 16))(v1, v4, v5, v8);
  }
}

void sub_1002D8EA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = v7;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    int v11 = 136316162;
    id v12 = "-[ADAudioSessionCoordinator _registerRequestID:requestHandler:]_block_invoke_2";
    __int16 v13 = 2112;
    uint64_t v14 = v8;
    __int16 v15 = 2112;
    id v16 = v5;
    __int16 v17 = 2112;
    id v18 = v6;
    __int16 v19 = 2048;
    uint64_t v20 = v10;
    _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%s --->>> senderID = %@, response = %@, error = %@ (%f seconds)", (uint8_t *)&v11, 0x34u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002D91D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 104);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v14 = RPOptionStatusFlags;
  __int16 v15 = &off_100523B58;
  id v6 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1002D9324;
  v9[3] = &unk_10050AB50;
  id v7 = *(id *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 80);
  id v10 = v7;
  uint64_t v13 = v8;
  id v11 = *(id *)(a1 + 64);
  id v12 = *(id *)(a1 + 72);
  [v3 sendRequestID:v2 request:v4 destinationID:v5 options:v6 responseHandler:v9];
}

void sub_1002D9324(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  uint64_t v8 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = v8;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    *(_DWORD *)buf = 136316162;
    id v21 = "-[ADAudioSessionCoordinator _sendRequestID:request:recipientID:responseHandler:]_block_invoke";
    __int16 v22 = 2112;
    uint64_t v23 = v13;
    __int16 v24 = 2112;
    id v25 = v6;
    __int16 v26 = 2112;
    id v27 = v7;
    __int16 v28 = 2048;
    uint64_t v29 = v15;
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "%s <<<--- recipientID = %@, response = %@, error = %@ (%f seconds)", buf, 0x34u);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002D94D0;
  block[3] = &unk_10050E1D8;
  id v9 = *(NSObject **)(a1 + 40);
  id v10 = *(id *)(a1 + 48);
  id v18 = v7;
  id v19 = v10;
  id v17 = v6;
  id v11 = v7;
  id v12 = v6;
  dispatch_async(v9, block);
}

uint64_t sub_1002D94D0(void *a1)
{
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[4], a1[5]);
  }
  return result;
}

id sub_1002D9614(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleDidSetAudioSessionActive:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1002D9740(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleWillSetAudioSessionActive:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1002D987C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  [v3 setTimestamp:v2];
  [v3 setReason:@"Relinquish all local assertions"];
}

BOOL sub_1002D98D8(id a1, AFAssertion *a2, BOOL a3)
{
  return 1;
}

void sub_1002D9BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose((const void *)(v36 - 248), 8);
  _Block_object_dispose((const void *)(v36 - 200), 8);
  _Block_object_dispose((const void *)(v36 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1002D9C24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1[5];
  id v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  id v7 = a2;
  uint64_t v8 = v6(v5, a3);
  uint64_t v9 = *(void *)(a1[6] + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  uint64_t v11 = (*(void (**)(void))(a1[5] + 16))();

  uint64_t v12 = *(void *)(a1[7] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  uint64_t v14 = a1[4];
  dispatch_group_leave(v14);
}

void sub_1002D9CD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1[5];
  id v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  id v7 = a2;
  uint64_t v8 = v6(v5, a3);
  uint64_t v9 = *(void *)(a1[6] + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  uint64_t v11 = (*(void (**)(void))(a1[5] + 16))();

  uint64_t v12 = *(void *)(a1[7] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  uint64_t v14 = a1[4];
  dispatch_group_leave(v14);
}

void sub_1002D9D8C(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  long long v2 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 48);
  long long v7 = v2;
  v5[2] = sub_1002D9ECC;
  v5[3] = &unk_10050AAA0;
  v5[4] = *(void *)(a1 + 32);
  id v3 = +[AFAudioSessionCoordinationSnapshot newWithBuilder:v5];
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v9 = "-[ADAudioSessionCoordinator getSnapshotWithCompletion:]_block_invoke_4";
    __int16 v10 = 2112;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s snapshot = %@", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002D9ECC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setCurrentOrUpNextDateInterval:*(void *)(*(void *)(a1 + 32) + 40)];
  [v3 setIsAudioSessionActive:*(void *)(*(void *)(a1 + 32) + 48) > 1uLL];
  [v3 setLocalActiveAssertionContexts:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  [v3 setLocalPendingAssertionContexts:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  [v3 setRemoteActiveAssertionContexts:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  [v3 setRemotePendingAssertionContexts:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];
  uint64_t v4 = [*(id *)(*(void *)(a1 + 32) + 104) localDevice];
  uint64_t v5 = sub_1002DA250(v4);
  [v3 setLocalDevice:v5];

  id v6 = objc_alloc_init((Class)NSMutableArray);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v7 = [*(id *)(a1 + 32) _qualifiedInRangeDevices];
  id v8 = [v7 countByEnumeratingWithState:&v35 objects:v41 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v36;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v36 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = sub_1002DA250(*(void **)(*((void *)&v35 + 1) + 8 * (void)v11));
        if (v12) {
          [v6 addObject:v12];
        }

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v35 objects:v41 count:16];
    }
    while (v9);
  }

  [v3 setRemoteQualifiedInRangeDevices:v6];
  id v13 = objc_alloc_init((Class)NSMutableArray);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v14 = [*(id *)(a1 + 32) _qualifiedOutOfRangeDevices];
  id v15 = [v14 countByEnumeratingWithState:&v31 objects:v40 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v32;
    do
    {
      id v18 = 0;
      do
      {
        if (*(void *)v32 != v17) {
          objc_enumerationMutation(v14);
        }
        id v19 = sub_1002DA250(*(void **)(*((void *)&v31 + 1) + 8 * (void)v18));
        if (v19) {
          [v13 addObject:v19];
        }

        id v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      id v16 = [v14 countByEnumeratingWithState:&v31 objects:v40 count:16];
    }
    while (v16);
  }

  [v3 setRemoteQualifiedOutOfRangeDevices:v13];
  id v20 = objc_alloc_init((Class)NSMutableArray);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v21 = objc_msgSend(*(id *)(a1 + 32), "_disqualifiedDevices", 0);
  id v22 = [v21 countByEnumeratingWithState:&v27 objects:v39 count:16];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = *(void *)v28;
    do
    {
      id v25 = 0;
      do
      {
        if (*(void *)v28 != v24) {
          objc_enumerationMutation(v21);
        }
        __int16 v26 = sub_1002DA250(*(void **)(*((void *)&v27 + 1) + 8 * (void)v25));
        if (v26) {
          [v20 addObject:v26];
        }

        id v25 = (char *)v25 + 1;
      }
      while (v23 != v25);
      id v23 = [v21 countByEnumeratingWithState:&v27 objects:v39 count:16];
    }
    while (v23);
  }

  [v3 setRemoteDisqualifiedDevices:v20];
}

id sub_1002DA250(void *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002DA300;
  v4[3] = &unk_10050AEA8;
  id v5 = a1;
  id v1 = v5;
  id v2 = +[AFAudioSessionCoordinationDeviceInfo newWithBuilder:v4];

  return v2;
}

void sub_1002DA300(uint64_t a1, void *a2)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1002DA3E0;
  v7[3] = &unk_10050DB08;
  id v8 = *(id *)(a1 + 32);
  id v4 = a2;
  id v5 = +[AFPeerInfo newWithBuilder:v7];
  [v4 setPeerInfo:v5];

  id v6 = sub_1002CF9D0(*(void **)(a1 + 32));
  [v4 setSystemInfo:v6];
}

void sub_1002DA3E0(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = [*(id *)(a1 + 32) idsDeviceIdentifier];
  if (v3)
  {
    [v15 setIdsDeviceUniqueIdentifier:v3];
    id v4 = (void *)_IDSCopyIDForDeviceUniqueID();
    [v15 setIdsIdentifier:v4];
  }
  id v5 = [*(id *)(a1 + 32) name];
  [v15 setName:v5];

  id v6 = [*(id *)(a1 + 32) model];
  [v15 setProductType:v6];

  long long v7 = [*(id *)(a1 + 32) mediaRouteIdentifier];
  [v15 setMediaRouteIdentifier:v7];

  id v8 = [*(id *)(a1 + 32) mediaSystemIdentifier];
  id v9 = [v8 UUIDString];
  [v15 setMediaSystemIdentifier:v9];

  uint64_t v10 = [*(id *)(a1 + 32) homeKitIdentifier];
  id v11 = [v10 UUIDString];
  [v15 setHomeKitAccessoryIdentifier:v11];

  uint64_t v12 = [*(id *)(a1 + 32) effectiveIdentifier];
  [v15 setRapportEffectiveIdentifier:v12];

  id v13 = [*(id *)(a1 + 32) roomName];
  [v15 setRoomName:v13];

  uint64_t v14 = [*(id *)(a1 + 32) homeKitIdentifier];
  [v15 setIsCommunalDevice:v14 != 0];

  objc_msgSend(v15, "setIsDeviceOwnedByCurrentUser:", ((unint64_t)objc_msgSend(*(id *)(a1 + 32), "statusFlags") >> 19) & 1);
}

id sub_1002DA5A4(id a1, NSArray *a2)
{
  id v2 = a2;
  id v3 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", -[NSArray count](v2, "count"));
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  id v5 = [(NSArray *)v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "context", (void)v12);
        if (v9) {
          [v3 addObject:v9];
        }
      }
      id v6 = [(NSArray *)v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  id v10 = [v3 copy];
  return v10;
}

void sub_1002DAC3C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) homeKitMediaSystemIdentifier];
  if (v2)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v3 = [*(id *)(*(void *)(a1 + 32) + 104) activeDevices];
    id v4 = [v3 countByEnumeratingWithState:&v18 objects:v26 count:16];
    if (v4)
    {
      id v6 = v4;
      uint64_t v7 = *(void *)v19;
      *(void *)&long long v5 = 136315394;
      long long v17 = v5;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v3);
          }
          id v9 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          id v10 = objc_msgSend(v9, "mediaSystemIdentifier", v17);
          unsigned int v11 = [v10 isEqual:v2];

          if (v11)
          {
            long long v12 = sub_1002DA250(v9);
            long long v13 = AFSiriLogContextDaemon;
            if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = v17;
              id v23 = "-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke";
              __int16 v24 = 2112;
              id v25 = v12;
              _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "%s Found Stereo Pair partner %@.", buf, 0x16u);
            }
            long long v14 = [v12 systemInfo];
            unsigned int v15 = [v14 isSupportedAndEnabled];

            if (v15) {
              *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
            }
          }
        }
        id v6 = [v3 countByEnumeratingWithState:&v18 objects:v26 count:16];
      }
      while (v6);
    }
  }
  else
  {
    id v16 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136315138;
      id v23 = "-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke";
      _os_log_debug_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "%s No media system identifier for local system.", buf, 0xCu);
    }
  }
}

void sub_1002DAE94(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = AFSiriLogContextDaemon;
  if (v6)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v9 = 136315394;
      id v10 = "-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke_2";
      __int16 v11 = 2112;
      id v12 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s error = %@", (uint8_t *)&v9, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v9 = 136315394;
    id v10 = "-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke";
    __int16 v11 = 2112;
    id v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s relinquishmentContext = %@", (uint8_t *)&v9, 0x16u);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v5, v6);
  }
}

void sub_1002DAFEC(id a1, AFAssertionContextMutating *a2)
{
  id v2 = a2;
  id v3 = +[NSDate date];
  [(AFAssertionContextMutating *)v2 setEffectiveDate:v3];
}

void sub_1002DB1D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (v3)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 104);
      *(_DWORD *)buf = 136315650;
      long long v18 = "-[ADAudioSessionCoordinator _setUpRapportLink]_block_invoke";
      __int16 v19 = 2112;
      uint64_t v20 = v6;
      __int16 v21 = 2112;
      id v22 = v3;
      uint64_t v7 = "%s Failed activating Rapport Link %@ due to error %@.";
      uint64_t v8 = v4;
      uint32_t v9 = 32;
LABEL_7:
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, v7, buf, v9);
    }
  }
  else if (v5)
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 104);
    *(_DWORD *)buf = 136315394;
    long long v18 = "-[ADAudioSessionCoordinator _setUpRapportLink]_block_invoke";
    __int16 v19 = 2112;
    uint64_t v20 = v14;
    uint64_t v7 = "%s Activated Rapport Link %@.";
    uint64_t v8 = v4;
    uint32_t v9 = 22;
    goto LABEL_7;
  }
  id v10 = [*(id *)(*(void *)(a1 + 32) + 104) localDevice];
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = *(NSObject **)(v11 + 8);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1002DB38C;
  v15[3] = &unk_10050E160;
  v15[4] = v11;
  id v16 = v10;
  id v13 = v10;
  dispatch_async(v12, v15);
}

void sub_1002DB38C(uint64_t a1)
{
  [*(id *)(a1 + 32) _handleUpdatedLocalDevice:*(void *)(a1 + 40)];
  id v2 = *(NSObject **)(*(void *)(a1 + 32) + 96);
  dispatch_group_leave(v2);
}

void sub_1002DB3D0(id a1, ADRapportLinkConfigurationMutating *a2)
{
  id v2 = a2;
  id v3 = +[ADRapportLinkDiscoveryOptions newWithBuilder:&stru_10050A968];
  [(ADRapportLinkConfigurationMutating *)v2 setDiscoveryOptions:v3];

  id v4 = +[ADRapportLinkTransportOptions newWithBuilder:&stru_10050A9A8];
  [(ADRapportLinkConfigurationMutating *)v2 setTransportOptions:v4];
}

void sub_1002DB464(id a1, ADRapportLinkTransportOptionsMutating *a2)
{
}

void sub_1002DB470(id a1, ADRapportLinkDiscoveryOptionsMutating *a2)
{
  id v2 = a2;
  [(ADRapportLinkDiscoveryOptionsMutating *)v2 setIncludesHome:2];
  [(ADRapportLinkDiscoveryOptionsMutating *)v2 setIncludesRemoraDevices:2];
}

void sub_1002DB864(uint64_t a1, unint64_t a2)
{
  id v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Queue %s did not respond to watchdog and is likely blocked.", dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32)));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v7 = "-[ADAudioSessionCoordinator initWithInstanceContext:delegate:]_block_invoke";
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_fault_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "%s %@", buf, 0x16u);
  }
  int v5 = AFIsInternalInstall();
  if (a2 <= 3 && v5) {
    WriteStackshotReport_async();
  }
}

void sub_1002DB980(id a1, AFAudioSessionCoordinationSystemInfoMutating *a2)
{
  id v2 = a2;
  [(AFAudioSessionCoordinationSystemInfoMutating *)v2 setIsSupportedAndEnabled:AFSupportsAudioSessionCoordination()];
}

void sub_1002E07E8(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = v4[9];
  id v9 = v3;
  if (v5)
  {
    [v3 setObject:v5 forKey:@"Path"];
    id v4 = *(void **)(a1 + 32);
  }
  uint64_t v6 = v4[7];
  if (v6)
  {
    [v9 setObject:v6 forKey:@"Domains"];
    id v4 = *(void **)(a1 + 32);
  }
  uint64_t v7 = v4[10];
  if (v7)
  {
    [v9 setObject:v7 forKey:@"Clears Domain Objects"];
    id v4 = *(void **)(a1 + 32);
  }
  uint64_t v8 = v4[8];
  if (v8) {
    [v9 setObject:v8 forKey:@"Sync Keys"];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002E09B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1002E09C4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained[14] invalidate];
    id WeakRetained = v2;
  }
}

uint64_t sub_1002E0BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(result + 16))(result, a2, 0, a3);
  }
  return result;
}

uint64_t sub_1002E0BF8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(result + 16))(result, 0, a2, 0);
  }
  return result;
}

void sub_1002E0EEC(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v9 = a2;
  id v6 = a4;
  dispatch_group_leave(*(dispatch_group_t *)(a1[4] + 120));
  uint64_t v7 = a1[5];
  if (v7) {
    (*(void (**)(uint64_t, id, id))(v7 + 16))(v7, v9, v6);
  }
  uint64_t v8 = a1[6];
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v9, v6);
  }
}

void sub_1002E1318(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (v5
    || ([v9 encodedClassName],
        id v6 = objc_claimAutoreleasedReturnValue(),
        unsigned int v7 = [v6 isEqualToString:SACommandFailedClassIdentifier],
        v6,
        v7))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained failedToLaunchAppWithBundleIdentifier:*(void *)(a1 + 32)];
  }
}

void sub_1002E2504(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(a1 + 32);
        id v12 = +[NSString stringWithFormat:@"%@#%@", v5, *(void *)(*((void *)&v13 + 1) + 8 * (void)v10)];
        [v11 addObject:v12];

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }
}

void sub_1002E2648(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(a1 + 32);
        id v12 = +[NSString stringWithFormat:@"%@#%@", v5, *(void *)(*((void *)&v13 + 1) + 8 * (void)v10)];
        [v11 addObject:v12];

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }
}

void sub_1002E278C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(a1 + 32);
        id v12 = +[NSString stringWithFormat:@"%@#%@", v5, *(void *)(*((void *)&v13 + 1) + 8 * (void)v10)];
        [v11 addObject:v12];

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }
}

id sub_1002E29E8(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (a2) {
    *a2 = 0;
  }
  if (v3)
  {
    id v12 = 0;
    id v5 = +[NSKeyedArchiver archivedDataWithRootObject:v3 requiringSecureCoding:1 error:&v12];
    id v6 = v12;
    if (v6)
    {
      id v7 = v6;
      id v8 = +[AFError errorWithCode:2401 description:@"Failed to archive input message." underlyingError:v6];

      if (!a2) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    if (v5)
    {
      id v8 = 0;
      if (!a2) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    id v8 = +[AFError errorWithCode:2401 description:@"No output data." underlyingError:0];
    if (a2) {
LABEL_11:
    }
      *a2 = v8;
  }
  else
  {
    id v8 = +[AFError errorWithCode:2401 description:@"No input message." underlyingError:0];
    id v5 = 0;
    if (a2) {
      goto LABEL_11;
    }
  }
LABEL_12:
  if (v8) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = v5 == 0;
  }
  if (v9)
  {
    id v10 = 0;
  }
  else
  {
    v13[0] = @"d";
    v13[1] = @"v";
    v14[0] = v5;
    v14[1] = &off_100523B70;
    id v10 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:2];
  }

  return v10;
}

id sub_1002E2BAC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (a2) {
    *a2 = 0;
  }
  if (!v3)
  {
    CFStringRef v12 = @"No input dictionary representation.";
    goto LABEL_12;
  }
  id v5 = [v3 objectForKey:@"v"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    goto LABEL_11;
  }
  id v6 = [v5 unsignedIntegerValue];

  if (v6)
  {
LABEL_11:
    CFStringRef v12 = @"Incompatible input dictionary representation.";
LABEL_12:
    uint64_t v11 = +[AFError errorWithCode:2402 description:v12 underlyingError:0];
    id v8 = 0;
    if (!a2) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  id v7 = [v4 objectForKey:@"d"];
  if (v7)
  {
    id v16 = 0;
    id v8 = +[NSKeyedUnarchiver unarchivedObjectOfClass:objc_opt_class() fromData:v7 error:&v16];
    id v9 = v16;
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = +[AFError errorWithCode:2402 description:@"Failed to unarchive input data." underlyingError:v9];
    }
    else if (v8)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = +[AFError errorWithCode:2402 description:@"No output message." underlyingError:0];
    }
  }
  else
  {
    uint64_t v11 = +[AFError errorWithCode:2402 description:@"No input data. Possible incompatible input dictionary representation." underlyingError:0];
    id v8 = 0;
  }

  if (a2) {
LABEL_13:
  }
    *a2 = v11;
LABEL_14:
  if (v11) {
    long long v13 = 0;
  }
  else {
    long long v13 = v8;
  }
  id v14 = v13;

  return v14;
}

uint64_t sub_1002E2DA4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  CFStringRef v12 = a2;
  long long v13 = a3;
  id v14 = a4;
  long long v15 = a5;
  id v16 = a6;
  uint64_t v17 = 0;
  switch((unint64_t)[v11 type])
  {
    case 2uLL:
      if (v12)
      {
        v12[2](v12);
        uint64_t v17 = 1;
      }
      else
      {
        uint64_t v17 = 0;
      }
      break;
    case 4uLL:
      uint64_t v18 = [v11 commandPushGenerationsResponse];
      __int16 v19 = (void *)v18;
      if (v13) {
        BOOL v20 = v18 == 0;
      }
      else {
        BOOL v20 = 1;
      }
      uint64_t v17 = !v20;
      if (!v20) {
        v13[2](v13, v18);
      }
      goto LABEL_36;
    case 6uLL:
      uint64_t v21 = [v11 commandPullGenerationsResponse];
      __int16 v19 = (void *)v21;
      if (v14) {
        BOOL v22 = v21 == 0;
      }
      else {
        BOOL v22 = 1;
      }
      uint64_t v17 = !v22;
      if (!v22) {
        v14[2](v14, v21);
      }
      goto LABEL_36;
    case 8uLL:
      uint64_t v23 = [v11 commandPullDeltaResponse];
      __int16 v19 = (void *)v23;
      if (v15) {
        BOOL v24 = v23 == 0;
      }
      else {
        BOOL v24 = 1;
      }
      uint64_t v17 = !v24;
      if (!v24) {
        v15[2](v15, v23);
      }
      goto LABEL_36;
    case 0xAuLL:
      uint64_t v25 = [v11 commandPullSnapshotResponse];
      __int16 v19 = (void *)v25;
      if (v16) {
        BOOL v26 = v25 == 0;
      }
      else {
        BOOL v26 = 1;
      }
      uint64_t v17 = !v26;
      if (!v26) {
        v16[2](v16, v25);
      }
LABEL_36:

      break;
    default:
      break;
  }

  return v17;
}

void sub_1002E35B8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[2];
  if (!v3)
  {
    [v2 _fetchSyncFlagsOnDisk];
    id v2 = *(void **)(a1 + 32);
    id v3 = (void *)v2[2];
  }
  id v4 = [v3 allObjects];
  [v2 _clearSyncNeededFlagsForKeys:v4];
}

id sub_1002E36D4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (!v2[2])
  {
    [v2 _fetchSyncFlagsOnDisk];
    id v2 = *(void **)(a1 + 32);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  return [v2 _clearSyncNeededFlagsForKeys:v3];
}

id sub_1002E37C8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (!v2[2])
  {
    [v2 _fetchSyncFlagsOnDisk];
    id v2 = *(void **)(a1 + 32);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  return _[v2 _setSyncNeededFlagsForKeys:v3];
}

uint64_t sub_1002E38B8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (!v2[2]) {
    [v2 _fetchSyncFlagsOnDisk];
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v3();
}

void sub_1002E39F4(id a1)
{
  id v1 = objc_alloc_init(ADSyncFlagManager);
  uint64_t v2 = qword_100586168;
  qword_100586168 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_1002E3DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002E3DDC(uint64_t a1)
{
  sub_1002E4128();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RadarDraft");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_100586198 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getRadarDraftClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ADRadarManager.m", 28, @"Unable to find class %s", "RadarDraft");

    __break(1u);
  }
}

void sub_1002E3EA4(uint64_t a1)
{
  sub_1002E4128();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RadarComponent");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1005861A0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getRadarComponentClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ADRadarManager.m", 29, @"Unable to find class %s", "RadarComponent");

    __break(1u);
  }
}

id sub_1002E3F6C()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_100586188;
  uint64_t v7 = qword_100586188;
  if (!qword_100586188)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1002E4060;
    v3[3] = &unk_10050E318;
    v3[4] = &v4;
    sub_1002E4060((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1002E4038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E4050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1002E4060(uint64_t a1)
{
  sub_1002E4128();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("TapToRadarService");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_100586188 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getTapToRadarServiceClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ADRadarManager.m", 27, @"Unable to find class %s", "TapToRadarService");

    __break(1u);
  }
}

void sub_1002E4128()
{
  v3[0] = 0;
  if (!qword_100586190)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = sub_1002E4278;
    v3[4] = &unk_10050E350;
    void v3[5] = v3;
    long long v4 = off_10050B020;
    uint64_t v5 = 0;
    qword_100586190 = _sl_dlopen();
  }
  if (!qword_100586190)
  {
    id v1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"void *TapToRadarKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"ADRadarManager.m", 26, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1002E4278()
{
  uint64_t result = _sl_dlopen();
  qword_100586190 = result;
  return result;
}

void sub_1002E4378(id a1)
{
  id v1 = objc_opt_new();
  unsigned int v2 = [v1 fileExistsAtPath:@"/AppleInternal/Library/Frameworks/TapToRadarKit.framework" isDirectory:0];

  if (v2)
  {
    if (sub_1002E3F6C())
    {
      id v3 = [[ADRadarManager alloc] _init];
      uint64_t v4 = qword_100586178;
      qword_100586178 = (uint64_t)v3;
      _objc_release_x1(v3, v4);
    }
    else
    {
      uint64_t v5 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
      {
        int v6 = 136315394;
        uint64_t v7 = "+[ADRadarManager sharedInstance]_block_invoke";
        __int16 v8 = 2080;
        id v9 = "+[ADRadarManager sharedInstance]_block_invoke";
        _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s %s: TapToRadarService class is not available", (uint8_t *)&v6, 0x16u);
      }
    }
  }
}

void sub_1002E4760(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDeviceSync;
  if (os_log_type_enabled(AFSiriLogContextDeviceSync, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 136315650;
    *(void *)&uint8_t buf[4] = "-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]_block_invoke";
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v3;
    *(_WORD *)&buf[22] = 2112;
    long long v33 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Loaded synced timer storage %@ for device %@.", buf, 0x20u);
  }
  uint64_t v23 = v3;
  id v6 = objc_alloc_init((Class)NSMutableDictionary);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v22 = a1;
  id obj = [*(id *)(a1 + 40) items];
  id v7 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v26;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v26 != v9) {
          objc_enumerationMutation(obj);
        }
        id v11 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        CFStringRef v12 = [v11 UUID];
        id v13 = [v6 objectForKey:v12];
        id v14 = v11;
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_1000B924C;
        v29[3] = &unk_100500C70;
        id v15 = v14;
        id v30 = v15;
        id v16 = objc_retainBlock(v29);
        if (v13)
        {
          id v17 = [v13 mutatedCopyWithMutator:v16];
        }
        else
        {
          *(void *)buf = _NSConcreteStackBlock;
          *(void *)&buf[8] = 3221225472;
          *(void *)&buf[16] = sub_1000B92F8;
          long long v33 = &unk_100500C98;
          *(void *)&long long v34 = v15;
          *((void *)&v34 + 1) = v16;
          id v17 = +[AFClockTimer newWithBuilder:buf];
        }
        [v6 setObject:v17 forKey:v12];
      }
      id v8 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v8);
  }

  [v23 beginGrouping];
  [v23 setItemsByID:v6];
  objc_msgSend(v23, "setGeneration:", objc_msgSend(*(id *)(a1 + 40), "generation"));
  uint64_t v18 = [*(id *)(a1 + 40) date];
  [v23 setDate:v18];

  [v23 endGroupingWithOptions:0];
  __int16 v19 = AFSiriLogContextDeviceSync;
  if (os_log_type_enabled(AFSiriLogContextDeviceSync, OS_LOG_TYPE_INFO))
  {
    uint64_t v21 = *(void **)(v22 + 32);
    uint64_t v20 = *(void *)(v22 + 40);
    *(_DWORD *)buf = 136315906;
    *(void *)&uint8_t buf[4] = "-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]_block_invoke";
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v20;
    *(_WORD *)&buf[22] = 2112;
    long long v33 = v21;
    LOWORD(v34) = 2112;
    *(void *)((char *)&v34 + 2) = v23;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s Dumped device sync snapshot %@ from device %@ to synced timer storage %@.", buf, 0x2Au);
  }
}

uint64_t sub_1002E4E98(uint64_t a1, void *a2)
{
  id v3 = [a2 generation];
  uint64_t v4 = AFSiriLogContextDeviceSync;
  if (os_log_type_enabled(AFSiriLogContextDeviceSync, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 136315650;
    id v8 = "-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]_block_invoke";
    __int16 v9 = 2048;
    id v10 = v3;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Loaded synced timer generation %llu for device %@.", (uint8_t *)&v7, 0x20u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_1002E590C()
{
  if (qword_1005861D8 != -1) {
    dispatch_once(&qword_1005861D8, &stru_10050B118);
  }
  v0 = (void *)qword_1005861E0;
  return v0;
}

void sub_1002E5960(id a1)
{
  qword_1005861E0 = (uint64_t)objc_getClass("EKPreferences");
  if (!qword_1005861E0) {
    __assert_rtn("initEKPreferences_block_invoke", "ADShowNextEventRequestHandler.m", 28, "classEKPreferences");
  }
  off_100583A10 = sub_1002E5A24;
}

void sub_1002E59C4()
{
  if (!qword_1005861B8)
  {
    qword_1005861B8 = (uint64_t)dlopen("/System/Library/Frameworks/EventKit.framework/EventKit", 2);
    if (!qword_1005861B8) {
      __assert_rtn("EventKitLibrary", "ADShowNextEventRequestHandler.m", 26, "frameworkLibrary");
    }
  }
}

id sub_1002E5A24()
{
  return (id)qword_1005861E0;
}

void sub_1002E5D88()
{
  if (!qword_1005861C0)
  {
    qword_1005861C0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation", 2);
    if (!qword_1005861C0) {
      __assert_rtn("CalendarFoundationLibrary", "ADShowNextEventRequestHandler.m", 19, "frameworkLibrary");
    }
  }
}

id sub_1002E5DE8(uint64_t a1, void *a2)
{
  unsigned int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v3 startDate];
  uint64_t v5 = [v3 endDate];

  id v6 = [v2 CalIsBetweenStartDate:v4 endDate:v5];
  return v6;
}

id sub_1002E5E58()
{
  if (qword_1005861C8 != -1) {
    dispatch_once(&qword_1005861C8, &stru_10050B0F8);
  }
  v0 = (void *)qword_1005861D0;
  return v0;
}

void sub_1002E5EAC(id a1)
{
  qword_1005861D0 = (uint64_t)objc_getClass("CalDateRange");
  if (!qword_1005861D0) {
    __assert_rtn("initCalDateRange_block_invoke", "ADShowNextEventRequestHandler.m", 20, "classCalDateRange");
  }
  off_100583A08 = sub_1002E5F10;
}

id sub_1002E5F10()
{
  return (id)qword_1005861D0;
}

uint64_t sub_1002E6314(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002E632C(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) createResponse];
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = +[NSError errorWithDomain:kAFAssistantErrorDomain code:706 userInfo:0];
    uint64_t v3 = 0;
  }
  id v5 = (id)v3;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_1002E63CC()
{
  if (qword_1005861A8 != -1) {
    dispatch_once(&qword_1005861A8, &stru_10050B0D8);
  }
  v0 = (void *)qword_1005861B0;
  return v0;
}

void sub_1002E6420(id a1)
{
  qword_1005861B0 = (uint64_t)objc_getClass("EKEventStore");
  if (!qword_1005861B0) {
    __assert_rtn("initEKEventStore_block_invoke", "ADShowNextEventRequestHandler.m", 27, "classEKEventStore");
  }
  off_100583A00 = sub_1002E6484;
}

id sub_1002E6484()
{
  return (id)qword_1005861B0;
}

void sub_1002E6998(uint64_t a1)
{
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "setDelegate:");
  unsigned int v2 = *(void **)(*(void *)(a1 + 32) + 8);
  CFStringRef v4 = @"com.apple.icloud.fmip.voiceassistantsync";
  uint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
  [v2 _setEnabledTopics:v3];
}

void sub_1002E6B4C(id a1)
{
  id v1 = objc_alloc_init(ADFMIPListener);
  uint64_t v2 = qword_100586210;
  qword_100586210 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_1002E6B88(id a1)
{
  v4[0] = @"com.apple.alarm.label";
  v4[1] = @"com.apple.reminder.list.name";
  v4[2] = @"com.apple.siri.surfstatus";
  id v1 = +[NSArray arrayWithObjects:v4 count:3];
  uint64_t v2 = +[NSSet setWithArray:v1];
  uint64_t v3 = (void *)qword_100586218;
  qword_100586218 = v2;
}

void sub_1002E6C40(id a1)
{
  id v1 = objc_alloc((Class)NSSet);
  v5[0] = @"com.apple.alarm.label";
  v5[1] = @"com.apple.chatkit.groups";
  v5[2] = @"com.apple.homekit.name";
  v5[3] = @"com.apple.icloud.fmip";
  v5[4] = @"com.apple.maps";
  void v5[5] = @"com.apple.media.entities";
  v5[6] = @"com.apple.media.podcasts";
  v5[7] = @"com.apple.reminder.list.name";
  v5[8] = @"com.apple.siri.appIntentSupportPolicyAndVocab.nano";
  v5[9] = @"com.apple.siri.appIntentSupportPolicyAndVocab";
  v5[10] = @"com.apple.siri.calendar.systemsetting";
  v5[11] = @"com.apple.siri.client.state.DynamiteClientState";
  v5[12] = @"com.apple.siri.parsecContext";
  v5[13] = @"com.apple.siri.ParsecSubscriptionServiceSupport";
  v5[14] = @"com.apple.siri.surfstatus";
  v5[15] = @"com.apple.siri.voice";
  v5[16] = @"com.apple.siri.voice.resource";
  uint64_t v2 = +[NSArray arrayWithObjects:v5 count:17];
  id v3 = [v1 initWithArray:v2];
  CFStringRef v4 = (void *)qword_100586228;
  qword_100586228 = (uint64_t)v3;
}

void sub_1002E6D88(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = +[ADSyncFlagManager sharedManager];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1002E6E34;
    v3[3] = &unk_10050C250;
    id v4 = v1;
    [v2 fetchKeysThatNeedToSync:v3];
  }
}

void sub_1002E6E34(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 allObjects];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_1002E6E94(void *a1)
{
  id v1 = a1;
  uint64_t v2 = AFSiriLogContextUtility;
  if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_DEBUG))
  {
    int v4 = 136315394;
    id v5 = "ADSetSyncNeededFlagForReason";
    __int16 v6 = 2112;
    id v7 = v1;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s %@", (uint8_t *)&v4, 0x16u);
  }
  id v3 = sub_1002E6F70(v1);
  sub_1002E70B8(v3);
}

id sub_1002E6F70(void *a1)
{
  id v1 = a1;
  if (qword_1005861F8 != -1) {
    dispatch_once(&qword_1005861F8, &stru_10050B138);
  }
  if ([v1 length])
  {
    uint64_t v2 = [(id)qword_100586200 objectForKey:v1];
    if ([v2 count]) {
      goto LABEL_10;
    }
    if ([v1 hasSuffix:@".siri_data_changed"])
    {
      uint64_t v3 = [v1 substringToIndex:(unsigned char *)objc_msgSend(v1, "length") - (unsigned char *)objc_msgSend(@".siri_data_changed", "length")];
      if (v3)
      {
        int v4 = (void *)v3;
        uint64_t v7 = v3;
        uint64_t v5 = +[NSArray arrayWithObjects:&v7 count:1];

        uint64_t v2 = (void *)v5;
        goto LABEL_10;
      }
    }
  }
  uint64_t v2 = 0;
LABEL_10:

  return v2;
}

void sub_1002E70B8(void *a1)
{
  id v1 = a1;
  id v2 = +[ADSyncFlagManager sharedManager];
  [v2 setSyncNeededFlagForKeys:v1];
}

void sub_1002E711C(id a1)
{
  if (AFSupportsPairedDevice())
  {
    v31[0] = @"com.apple.siri.applications";
    v31[1] = @"com.apple.siri.appIntentSupportPolicyAndVocab";
    v31[2] = @"com.apple.siri.appIntentSupportPolicyAndVocab.nano";
    id v1 = v31;
    uint64_t v2 = 3;
  }
  else
  {
    v30[0] = @"com.apple.siri.applications";
    v30[1] = @"com.apple.siri.appIntentSupportPolicyAndVocab";
    id v1 = v30;
    uint64_t v2 = 2;
  }
  id v16 = +[NSArray arrayWithObjects:v1 count:v2];
  v29[0] = v16;
  v28[0] = @"registered_applications_changed";
  v28[1] = @"address_book";
  CFStringRef v27 = @"com.apple.contact.people";
  id v15 = +[NSArray arrayWithObjects:&v27 count:1];
  v29[1] = v15;
  v28[2] = @"locale_change";
  CFStringRef v26 = @"com.apple.siri.calendar.systemsetting";
  uint64_t v3 = +[NSArray arrayWithObjects:&v26 count:1];
  v29[2] = v3;
  v28[3] = @"com.apple.assistant.sync_homekit_now";
  CFStringRef v25 = @"com.apple.homekit.name";
  int v4 = +[NSArray arrayWithObjects:&v25 count:1];
  v29[3] = v4;
  v28[4] = @"encryption_key_did_change";
  CFStringRef v24 = @"com.apple.homekit.name";
  uint64_t v5 = +[NSArray arrayWithObjects:&v24 count:1];
  void v29[4] = v5;
  v28[5] = @"siri_kit_app_vocabulary";
  CFStringRef v23 = @"com.apple.siri.vocabularyupdates";
  __int16 v6 = +[NSArray arrayWithObjects:&v23 count:1];
  v29[5] = v6;
  v28[6] = @"dynamite_token_change";
  CFStringRef v22 = @"com.apple.siri.client.state.DynamiteClientState";
  uint64_t v7 = +[NSArray arrayWithObjects:&v22 count:1];
  v29[6] = v7;
  v28[7] = @"correction_profiles_change";
  CFStringRef v21 = @"com.apple.siri.corrections";
  id v8 = +[NSArray arrayWithObjects:&v21 count:1];
  v29[7] = v8;
  v28[8] = @"com.apple.geoservices.siri_data_changed";
  CFStringRef v20 = @"com.apple.maps";
  __int16 v9 = +[NSArray arrayWithObjects:&v20 count:1];
  v29[8] = v9;
  v28[9] = @"parsec_context_change";
  CFStringRef v19 = @"com.apple.siri.parsecContext";
  id v10 = +[NSArray arrayWithObjects:&v19 count:1];
  v29[9] = v10;
  v28[10] = @"voice_assets";
  v18[0] = @"com.apple.siri.voice";
  v18[1] = @"com.apple.siri.voice.resource";
  __int16 v11 = +[NSArray arrayWithObjects:v18 count:2];
  v29[10] = v11;
  v28[11] = @"subcscirption_status";
  CFStringRef v17 = @"com.apple.siri.ParsecSubscriptionServiceSupport";
  uint64_t v12 = +[NSArray arrayWithObjects:&v17 count:1];
  v29[11] = v12;
  uint64_t v13 = +[NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:12];
  id v14 = (void *)qword_100586200;
  qword_100586200 = v13;
}

void sub_1002E7490(void *a1)
{
  id v1 = a1;
  id v2 = +[ADSyncFlagManager sharedManager];
  [v2 clearFlagsForKeys:v1];
}

uint64_t sub_1002E74F4(void *a1)
{
  id v1 = a1;
  id v2 = sub_1002E756C();
  uint64_t v3 = [v2 objectForKey:v1];
  if (v3) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = (uint64_t)[v1 hasSuffix:@".siri_data_changed"];
  }

  return v4;
}

id sub_1002E756C()
{
  v0 = (void *)qword_1005861E8;
  if (!qword_1005861E8)
  {
    id v1 = [@"CKPersistentStorageKeysAndValuesUpdated." stringByAppendingString:@"synched"];
    id v2 = [@"CKPersistentStorageKeysRemoved." stringByAppendingString:@"synched"];
    uint64_t v3 = SAKnowledgeStoreNameSiriUserCorrectionsValue;
    uint64_t v4 = [@"CKPersistentStorageKeysAndValuesUpdated." stringByAppendingString:SAKnowledgeStoreNameSiriUserCorrectionsValue];
    uint64_t v5 = [@"CKPersistentStorageKeysRemoved." stringByAppendingString:v3];
    v9[0] = @"AppleDatePreferencesChangedNotification";
    v9[1] = kCFLocaleCurrentLocaleDidChangeNotification;
    v10[0] = @"locale_change";
    v10[1] = @"locale_change";
    id v9[2] = @"com.apple.LaunchServices.applicationRegistered";
    v9[3] = @"com.apple.LaunchServices.applicationUnregistered";
    v10[2] = @"registered_applications_changed";
    v10[3] = @"registered_applications_changed";
    void v9[4] = @"ADPreferencesEnabledBitsDidChangeNotification";
    v9[5] = @"com.apple.assistant.sync_needed";
    v10[4] = @"assistant_enabled";
    v10[5] = @"requested_by_assistantd";
    v9[6] = @"MPStoreClientTokenDidChangeNotification";
    v9[7] = @"com.apple.assistant.app_vocabulary";
    v10[6] = @"dynamite_token_change";
    v10[7] = @"siri_kit_app_vocabulary";
    v9[8] = @"com.apple.assistant.siri_settings_did_change";
    v9[9] = @"com.apple.assistant.sync_homekit_now";
    v10[8] = @"siri_settings_did_change";
    v10[9] = @"com.apple.assistant.sync_homekit_now";
    v9[10] = @"com.apple.assistant.sync_homekit_urgent";
    v9[11] = @"com.apple.assistant.sync_data_changed";
    v10[10] = @"com.apple.assistant.sync_homekit_now";
    v10[11] = @"com.apple.assistant.sync_data_changed";
    v9[12] = @"__ABDataBaseChangedByOtherProcessNotification";
    v9[13] = @"ABDatabaseChangedExternallyNotificationPriv";
    v10[12] = @"address_book";
    v10[13] = @"address_book";
    v9[14] = @"ABDistributedDatabaseChangedNotificationPriv";
    v9[15] = @"com.apple.siri.vocabulary.contacts_changed";
    v10[14] = @"address_book";
    v10[15] = @"address_book";
    v9[16] = v1;
    v9[17] = v2;
    v10[16] = @"correction_profiles_change";
    v10[17] = @"correction_profiles_change";
    v9[18] = v4;
    v9[19] = v5;
    v10[18] = @"correction_profiles_change";
    v10[19] = @"correction_profiles_change";
    v9[20] = @"com.apple.geoservices.siri_data_changed";
    v9[21] = @"com.apple.parsecd.bag";
    v10[20] = @"com.apple.geoservices.siri_data_changed";
    v10[21] = @"parsec_context_change";
    v9[22] = @"com.apple.voiceservices.notification.voice-update";
    v9[23] = @"com.apple.MobileAsset.VoiceServices.VoiceResources.new-asset-installed";
    v10[22] = @"voice_assets";
    v10[23] = @"voice_assets";
    v9[24] = @"com.apple.VideoSubscriberAccount.DidRegisterSubscription";
    v10[24] = @"subcscirption_status";
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:25];
    uint64_t v7 = (void *)qword_1005861E8;
    qword_1005861E8 = v6;

    v0 = (void *)qword_1005861E8;
  }
  return v0;
}

id sub_1002E7814(void *a1)
{
  id v1 = a1;
  id v2 = sub_1002E756C();
  id v3 = [v2 objectForKey:v1];

  if (!v3)
  {
    if ([v1 hasSuffix:@".siri_data_changed"]) {
      id v3 = v1;
    }
    else {
      id v3 = 0;
    }
  }

  return v3;
}

BOOL sub_1002E78A0(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 isEqualToString:@"address_book"]
    && ((+[AFUtilitiesWrapper deviceSupportsSiriUOD](AFUtilitiesWrapper, "deviceSupportsSiriUOD") & 1) != 0|| (+[AFUtilitiesWrapper shouldRunAsrOnServerForUOD](AFUtilitiesWrapper, "shouldRunAsrOnServerForUOD") & 1) != 0|| +[AFUtilitiesWrapper offlineDictationCapable](AFUtilitiesWrapper, "offlineDictationCapable"))&& ([v7 isEqualToString:@"com.apple.siri.vocabulary.contacts_changed"] & 1) == 0)
  {
    CFStringRef v23 = AFSiriLogContextUtility;
    BOOL v8 = 1;
    if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      *(void *)&uint8_t buf[4] = "ADSyncNotificationShouldBeFilteredForReason";
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "%s Ignoring AB notification that is not from Siri Vocabulary", buf, 0xCu);
    }
  }
  else
  {
    BOOL v8 = 0;
  }
  unsigned __int8 v9 = [v5 isEqualToString:@"address_book"];
  if (v6) {
    unsigned __int8 v10 = v9;
  }
  else {
    unsigned __int8 v10 = 0;
  }
  if ((v10 & 1) == 0)
  {
    if (((v6 != 0) & [v5 isEqualToString:@"registered_applications_changed"]) == 1)
    {
      if (xpc_dictionary_get_BOOL(v6, (const char *)[@"isPlaceholder" UTF8String]))
      {
        CFStringRef v19 = AFSiriLogContextUtility;
        LOBYTE(v8) = 1;
        if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136315138;
          *(void *)&uint8_t buf[4] = "ADSyncNotificationShouldBeFilteredForReason";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s Ignoring App notification for placeholders", buf, 0xCu);
        }
      }
      if (xpc_dictionary_get_BOOL(v6, (const char *)[@"isForcedUpdate" UTF8String]))
      {
        CFStringRef v20 = AFSiriLogContextUtility;
        BOOL v8 = 1;
        if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136315138;
          *(void *)&uint8_t buf[4] = "ADSyncNotificationShouldBeFilteredForReason";
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s Ignoring App notification for forced update", buf, 0xCu);
        }
      }
      else if (v8)
      {
        BOOL v8 = 1;
      }
      else if (AFIsInternalInstall())
      {
        CFStringRef v24 = xpc_dictionary_get_array(v6, (const char *)[@"bundleIDs" UTF8String]);
        CFStringRef v25 = v24;
        if (v24 && xpc_array_get_count(v24))
        {
          *(void *)buf = 0;
          *(void *)&buf[8] = buf;
          *(void *)&buf[16] = 0x2020000000;
          LOBYTE(v34) = 0;
          v30[0] = _NSConcreteStackBlock;
          v30[1] = 3221225472;
          void v30[2] = sub_1002E7F90;
          v30[3] = &unk_10050B160;
          v30[4] = buf;
          xpc_array_apply(v25, v30);
          BOOL v8 = *(unsigned char *)(*(void *)&buf[8] + 24) == 0;
          if (!*(unsigned char *)(*(void *)&buf[8] + 24))
          {
            CFStringRef v26 = AFSiriLogContextUtility;
            if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long v31 = 136315138;
              long long v32 = "ADSyncNotificationShouldBeFilteredForReason";
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "%s Ignoring App notification for internal stressCycler test app", v31, 0xCu);
            }
          }
          _Block_object_dispose(buf, 8);
        }
        else
        {
          BOOL v8 = 0;
        }
      }
      else
      {
        BOOL v8 = 0;
      }
    }
    else if (((v6 != 0) & [v5 isEqualToString:@"correction_profiles_change"]) == 1)
    {
      *(void *)buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&buf[16] = 0x2020000000;
      LOBYTE(v34) = 0;
      CFStringRef v21 = xpc_dictionary_get_dictionary(v6, "updated");
      CFStringRef v22 = xpc_dictionary_get_array(v6, "removed");
      if (v21 && xpc_dictionary_get_count(v21))
      {
        applier[0] = _NSConcreteStackBlock;
        applier[1] = 3221225472;
        applier[2] = sub_1002E8000;
        applier[3] = &unk_10050B188;
        applier[4] = buf;
        xpc_dictionary_apply(v21, applier);
      }
      else if (v22 && xpc_array_get_count(v22))
      {
        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472;
        v28[2] = sub_1002E8050;
        v28[3] = &unk_10050B160;
        v28[4] = buf;
        xpc_array_apply(v22, v28);
      }
      else
      {
        *(unsigned char *)(*(void *)&buf[8] + 24) = 1;
      }
      if (*(unsigned char *)(*(void *)&buf[8] + 24))
      {
        BOOL v8 = 0;
      }
      else
      {
        CFStringRef v27 = AFSiriLogContextUtility;
        BOOL v8 = 1;
        if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long v31 = 136315138;
          long long v32 = "ADSyncNotificationShouldBeFilteredForReason";
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "%s Ignoring CK notification because there's no correction profile change", v31, 0xCu);
          BOOL v8 = *(unsigned char *)(*(void *)&buf[8] + 24) == 0;
        }
      }

      _Block_object_dispose(buf, 8);
    }
  }
  __int16 v11 = (void *)qword_1005861F0;
  if (!qword_1005861F0)
  {
    id v12 = [objc_alloc((Class)NSSet) initWithArray:&off_100523348];
    uint64_t v13 = (void *)qword_1005861F0;
    qword_1005861F0 = (uint64_t)v12;

    __int16 v11 = (void *)qword_1005861F0;
  }
  if (([v11 containsObject:v5] & 1) == 0)
  {
    id v14 = sub_1001FD474(@"session_did_finish_timestamp");
    if (!v14)
    {
      sub_1001FD584(@"session_did_finish_timestamp");
      id v14 = +[NSDate date];
    }
    [v14 timeIntervalSinceNow];
    BOOL v16 = v15 > -691200.0;

    if (!v16)
    {
      CFStringRef v17 = AFSiriLogContextUtility;
      if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315650;
        *(void *)&uint8_t buf[4] = "ADSyncNotificationShouldBeFilteredForReason";
        *(_WORD *)&buf[12] = 2048;
        *(void *)&buf[14] = 8;
        *(_WORD *)&buf[22] = 2112;
        id v34 = v5;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s User hasn't used Siri or dictation in the past %tu days, not syncing for %@", buf, 0x20u);
      }
      sub_1002E6E94(v5);
      BOOL v8 = 1;
    }
  }

  return v8;
}

void sub_1002E7F68(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002E7F90(uint64_t a1, int a2, xpc_object_t xstring)
{
  string_ptr = (char *)xpc_string_get_string_ptr(xstring);
  if (strstr(string_ptr, "com.apple.stressCycler")) {
    return 1;
  }
  id v6 = strstr(string_ptr, "com.apple.watchOSStressCycler");
  uint64_t result = 1;
  if (!v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    return 0;
  }
  return result;
}

BOOL sub_1002E8000(uint64_t a1, char *__s1)
{
  id v3 = strstr(__s1, "Correction:");
  if (v3) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  }
  return v3 == 0;
}

BOOL sub_1002E8050(uint64_t a1, int a2, xpc_object_t xstring)
{
  string_ptr = (char *)xpc_string_get_string_ptr(xstring);
  id v5 = strstr(string_ptr, "Correction:");
  if (v5) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  }
  return v5 == 0;
}

uint64_t sub_1002E80A0()
{
  v0 = (void *)qword_100586238;
  if (!qword_100586238)
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant", 2);
    qword_100586238 = (uint64_t)v0;
    if (!v0) {
      __assert_rtn("SetupAssistantLibrary", "ADSyncUtilities.m", 46, "frameworkLibrary");
    }
  }
  uint64_t v1 = (uint64_t (*)())dlsym(v0, "BYSetupAssistantHasCompletedInitialRun");
  off_100583A78 = v1;
  if (!v1) {
    __assert_rtn("initBYSetupAssistantHasCompletedInitialRun", "ADSyncUtilities.m", 47, "softLinkBYSetupAssistantHasCompletedInitialRun");
  }
  return v1();
}

void sub_1002E82D4(id *a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    id v12 = "-[ADHomeKitService handleCommand:forDomain:executionContext:reply:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s This path is deprecated", buf, 0xCu);
  }
  id v3 = [a1[4] _hmConnection];
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1002E84A0;
      block[3] = &unk_10050E1D8;
      id v8 = v3;
      id v9 = a1[5];
      id v10 = a1[6];
      uint64_t v4 = (void (**)(void))dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_USER_INTERACTIVE, 0, block);
      v4[2]();

      id v5 = v8;
LABEL_8:

      goto LABEL_9;
    }
  }
  id v6 = (void (**)(id, void, void *))a1[6];
  if (v6)
  {
    id v5 = +[AFError errorWithCode:102];
    v6[2](v6, 0, v5);
    goto LABEL_8;
  }
LABEL_9:
}

void sub_1002E84A0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002E8530;
  v3[3] = &unk_10050B210;
  id v4 = *(id *)(a1 + 48);
  [v1 sendSiriCommand:v2 completionHandler:v3];
}

void sub_1002E8530(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  os_signpost_id_t v8 = os_signpost_id_generate(AFSiriLogContextDaemon);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v9 = v8;
    if (os_signpost_enabled(v7))
    {
      *(_WORD *)id v12 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, v9, "ADHomeKitServiceEvent", "SAHACommand sent to HMClientConnection", v12, 2u);
    }
  }

  uint64_t v10 = *(void *)(a1 + 32);
  if (v10)
  {
    __int16 v11 = +[AceObject aceObjectWithDictionary:v6];
    (*(void (**)(uint64_t, void *, id))(v10 + 16))(v10, v11, v5);
  }
}

void sub_1002E86AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = 0;
}

id sub_1002E8740(uint64_t a1)
{
  return [*(id *)(a1 + 32) _hmConnection];
}

id sub_1002E8948(void *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = a1;
    os_signpost_id_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472;
    uint64_t v10 = sub_1002E8A48;
    __int16 v11 = &unk_10050B2B8;
    id v12 = objc_alloc_init((Class)NSMutableArray);
    id v13 = v3;
    id v5 = v12;
    [v4 enumerateObjectsUsingBlock:&v8];

    id v6 = objc_msgSend(v5, "copy", v8, v9, v10, v11);
  }
  else
  {
    id v6 = &__NSArray0__struct;
  }

  return v6;
}

void sub_1002E8A48(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

BOOL sub_1002E8AB8(id a1, ADDictationSession *a2, BOOL *a3)
{
  return (id)[(ADDictationSession *)a2 speechRecognitionTransactionState] == (id)3;
}

BOOL sub_1002E8ADC(id a1, ADDictationSession *a2, BOOL *a3)
{
  return (id)[(ADDictationSession *)a2 audioFileIOTransactionState] == (id)3;
}

BOOL sub_1002E8B00(id a1, ADDictationSession *a2, BOOL *a3)
{
  id v3 = a2;
  BOOL v4 = (char *)[(ADDictationSession *)v3 speechRecognitionTransactionState] - 1 < (char *)2
    || (char *)[(ADDictationSession *)v3 audioFileIOTransactionState] - 1 < (char *)2;

  return v4;
}

void sub_1002E918C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _fetchKnownAccounts];
  [*(id *)(a1 + 32) _publishHomeSeed:*(void *)(a1 + 40) forAccounts:v2];
}

void sub_1002E9638(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  BOOL v4 = [v8 iCloudAltDSID];

  if (v4)
  {
    id v5 = objc_alloc((Class)BMAccount);
    id v6 = [v8 iCloudAltDSID];
    id v7 = [v5 initWithAltDSID:v6];

    if (v7) {
      [*(id *)(a1 + 32) addObject:v7];
    }
  }
}

void sub_1002E9E10(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) isPartOfHome];
  id v3 = +[ADAnalyticsIdentifiersUtils logger];
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Ensuring home seed and aggregation id is published to all Home members", v5, 2u);
    }

    [*(id *)(a1 + 32) _publishHomeSeedToAllMembers];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Won't run consistency check as device is not part of a home", buf, 2u);
    }
  }
}

void sub_1002EA650(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (!v6)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315651;
      CFStringRef v19 = "-[ADCommandCenter(RemoteExecute) startRemoteRequest:onTargetDevice:completion:]_block_invoke";
      __int16 v20 = 2113;
      uint64_t v21 = v10;
      __int16 v22 = 2113;
      id v23 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Routing to multiuser device (%{private}@ / %{private}@)", buf, 0x20u);
    }
    __int16 v11 = [[ADPeerInfo alloc] initWithUniqueIdentifer:v5];
    [(ADPeerInfo *)v11 setAssistantIdentifier:*(void *)(a1 + 32)];
    id v12 = [*(id *)(a1 + 40) _queue];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_1002EA890;
    void v14[3] = &unk_10050E228;
    id v13 = *(void **)(a1 + 48);
    v14[4] = *(void *)(a1 + 40);
    id v15 = v13;
    BOOL v16 = v11;
    id v17 = *(id *)(a1 + 56);
    uint64_t v9 = v11;
    dispatch_async(v12, v14);

    goto LABEL_9;
  }
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    CFStringRef v19 = "-[ADCommandCenter(RemoteExecute) startRemoteRequest:onTargetDevice:completion:]_block_invoke_2";
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s No reachable multiuser device", buf, 0xCu);
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    uint64_t v9 = +[AFError errorWithCode:1012];
    (*(void (**)(uint64_t, ADPeerInfo *))(v8 + 16))(v8, v9);
LABEL_9:
  }
}

id sub_1002EA890(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _startRemoteRequest:*(void *)(a1 + 40) onPeer:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

void sub_1002EADD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EADF4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002EAE04(uint64_t a1)
{
}

void sub_1002EAE0C(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[5];
  if (v4)
  {
    if (a2)
    {
      (*(void (**)(void, void))(v4 + 16))(a1[5], 0);
    }
    else
    {
      id v5 = +[AFError errorWithCode:1200];
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
    }
  }
  id v6 = +[AFAnalytics sharedAnalytics];
  uint64_t v7 = *(void *)(a1[6] + 8);
  v12[0] = @"transport type";
  v12[1] = @"id";
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = a1[4];
  v13[0] = v8;
  v13[1] = v9;
  void v12[2] = @"success";
  uint64_t v10 = +[NSNumber numberWithBool:a2];
  void v13[2] = v10;
  __int16 v11 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:3];
  [v6 logEventWithType:4804 context:v11];
}

id sub_1002EB03C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _startRemoteRequest:*(void *)(a1 + 40) onPeer:0 completion:*(void *)(a1 + 48)];
}

uint64_t sub_1002EB180(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  unint64_t v7 = *(void *)(a1 + 32) - 1;
  if (v7 <= 6 && ((0x4Bu >> v7) & 1) != 0)
  {
    uint64_t v8 = +[NSSet setWithArray:](NSSet, "setWithArray:", off_10050B4B0[v7], (void)v15);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t)[v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v16;
    while (2)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v8);
        }
        uint64_t v12 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        id v13 = objc_msgSend(v5, "productType", (void)v15);
        LOBYTE(v12) = [v13 hasPrefix:v12];

        if (v12)
        {
          uint64_t v9 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v9 = (uint64_t)[v8 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v9;
}

void sub_1002EB998(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = v6;
  if (v5)
  {
    id v8 = objc_alloc_init((Class)SAExecuteOnRemoteResponse);
    [v8 setResult:v5];
    uint64_t v9 = [*(id *)(a1 + 32) remoteDevice];
    [v8 setRemoteDevice:v9];

    objc_msgSend(v8, "setResponseFromRemote:", objc_msgSend(*(id *)(a1 + 32), "requiresResponseFromRemote"));
    uint64_t v10 = *(void **)(a1 + 40);
    uint64_t v11 = 2;
    uint64_t v12 = 0;
LABEL_5:
    [v10 _addNetworkActivityTracingForLabel:7 start:0 withCompletionReason:v11 andError:v12];
    goto LABEL_6;
  }
  if (v6)
  {
    sub_100358964(v6);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v10 = *(void **)(a1 + 40);
    uint64_t v11 = 4;
    uint64_t v12 = v7;
    goto LABEL_5;
  }
  [*(id *)(a1 + 40) _addNetworkActivityTracingForLabel:7 start:0 withCompletionReason:4 andError:0];
  id v8 = 0;
LABEL_6:
  if ([*(id *)(a1 + 32) suppressResponse])
  {
    id v13 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      id v14 = *(void **)(a1 + 32);
      long long v15 = v13;
      long long v16 = [v14 dictionary];
      int v17 = 136315394;
      long long v18 = "-[ADCommandCenter(RemoteExecute) _saExecuteOnRemoteRequest:executionContext:completion:]_block_invoke";
      __int16 v19 = 2112;
      __int16 v20 = v16;
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%s Suppressing response/error, as suppressResponse is set on %@", (uint8_t *)&v17, 0x16u);
    }
    id v8 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1002EC3BC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1002EC3EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    unint64_t v7 = v6;
    id v8 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      id v30 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allo"
            "wFallbackOnAWDL:executionContext:completion:]_block_invoke";
      __int16 v31 = 2112;
      id v32 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Error: %@", buf, 0x16u);
    }
    uint64_t v9 = *(void *)(a1 + 64);
    if (v9) {
      (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v7);
    }
    [*(id *)(a1 + 32) _logExecuteOnRemoteRequestForRequestId:*(void *)(a1 + 40) turnId:*(void *)(a1 + 48) event:2];
    uint64_t v10 = 0;
  }
  else
  {
    id v11 = v5;
    objc_opt_class();
    uint64_t v12 = v11;
    if (objc_opt_isKindOfClass())
    {
      id v13 = [v11 objectForKeyedSubscript:@"payload"];

      uint64_t v12 = v11;
      if (v13)
      {
        uint64_t v12 = [v11 objectForKeyedSubscript:@"payload"];
      }
    }
    uint64_t v10 = +[SAGenericCommand aceObjectWithDictionary:v12];
    id v14 = AFSiriLogContextDaemon;
    BOOL v15 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
    if (!v12 || v10)
    {
      if (v15)
      {
        *(_DWORD *)buf = 136315394;
        id v30 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:al"
              "lowFallbackOnAWDL:executionContext:completion:]_block_invoke";
        __int16 v31 = 2112;
        id v32 = v11;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s Response from peer: %@", buf, 0x16u);
      }
      uint64_t v17 = *(void *)(a1 + 64);
      if (v17) {
        (*(void (**)(uint64_t, void *, void))(v17 + 16))(v17, v10, 0);
      }
      unint64_t v7 = 0;
    }
    else
    {
      if (v15)
      {
        *(_DWORD *)buf = 136315394;
        id v30 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:al"
              "lowFallbackOnAWDL:executionContext:completion:]_block_invoke";
        __int16 v31 = 2112;
        id v32 = v11;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s Malformed command dictionary: %@", buf, 0x16u);
      }
      unint64_t v7 = +[AFError errorWithCode:102];
      uint64_t v16 = *(void *)(a1 + 64);
      if (v16) {
        (*(void (**)(uint64_t, void, void *))(v16 + 16))(v16, 0, v7);
      }
    }
    [*(id *)(a1 + 32) _logExecuteOnRemoteRequestForRequestId:*(void *)(a1 + 40) turnId:*(void *)(a1 + 48) event:1];

    if (v10
      && (+[AFFeatureFlags isCrossDeviceTVControlFromWatchEnabled] & 1) == 0)
    {
      long long v18 = +[AFAnalytics sharedAnalytics];
      __int16 v19 = AFAnalyticsContextCreateWithError();
      v28[0] = v19;
      __int16 v20 = AFAnalyticsContextCreateWithCommand();
      v28[1] = v20;
      uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
      v26[0] = @"transport type";
      v26[1] = @"id";
      uint64_t v22 = *(void *)(a1 + 56);
      v27[0] = v21;
      v27[1] = v22;
      id v23 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
      v28[2] = v23;
      CFStringRef v24 = +[NSArray arrayWithObjects:v28 count:3];
      CFStringRef v25 = AFAnalyticsContextsMerge();
      [v18 logEventWithType:4802 context:v25];
    }
  }
}

void sub_1002EC7A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    unint64_t v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v20 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allo"
            "wFallbackOnAWDL:executionContext:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Falling back on IDS in sending command to peer.", buf, 0xCu);
    }
    uint64_t v8 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = @"ids";

    uint64_t v10 = +[AFAnalytics sharedAnalytics];
    uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
    v17[0] = @"transport type";
    v17[1] = @"id";
    uint64_t v12 = *(void *)(a1 + 32);
    v18[0] = v11;
    v18[1] = v12;
    id v13 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:2];
    [v10 logEventWithType:4801 context:v13];

    id v14 = +[ADPeerCloudService sharedInstance];
    [v14 startRemoteSerialzedCommandExecution:*(void *)(a1 + 40) onPeer:*(void *)(a1 + 48) allowsRelay:*(unsigned __int8 *)(a1 + 80) allowFallbackOnAWDL:0 executionContext:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
  }
  else
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = @"rapport";

    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

uint64_t sub_1002EC978(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1002ED0BC(uint64_t a1, void *a2)
{
  return [a2 setAssistantIdentifier:*(void *)(a1 + 32)];
}

void sub_1002ED0C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = AFSiriLogContextDaemon;
  if (!v6)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 136315651;
      uint64_t v12 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:"
            "allowFallbackOnAWDL:executionContext:completion:]_block_invoke";
      __int16 v13 = 2113;
      uint64_t v14 = v10;
      __int16 v15 = 2113;
      id v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Routing to multiuser device (%{private}@ / %{private}@)", (uint8_t *)&v11, 0x20u);
    }
    uint64_t v9 = [[ADPeerInfo alloc] initWithUniqueIdentifer:v5];
    [(ADPeerInfo *)v9 setAssistantIdentifier:*(void *)(a1 + 32)];
    objc_msgSend(*(id *)(a1 + 40), "_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allowFallbackOnAWDL:executionContext:completion:", *(void *)(a1 + 48), v9, *(unsigned __int8 *)(a1 + 72), *(unsigned __int8 *)(a1 + 73), *(void *)(a1 + 56), *(void *)(a1 + 64));
    goto LABEL_9;
  }
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v11 = 136315138;
    uint64_t v12 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:al"
          "lowFallbackOnAWDL:executionContext:completion:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s No reachable multiuser device", (uint8_t *)&v11, 0xCu);
  }
  uint64_t v8 = *(void *)(a1 + 64);
  if (v8)
  {
    uint64_t v9 = +[AFError errorWithCode:1012];
    (*(void (**)(uint64_t, void, ADPeerInfo *))(v8 + 16))(v8, 0, v9);
LABEL_9:
  }
}

void sub_1002ED27C(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  if ([v3 length])
  {
    uint64_t v4 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t v14 = 136315651;
      *(void *)&v14[4] = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDevice"
                           "ForAssistantId:allowFallbackOnAWDL:executionContext:completion:]_block_invoke";
      *(_WORD *)&v14[12] = 2113;
      *(void *)&v14[14] = v3;
      *(_WORD *)&v14[22] = 2113;
      uint64_t v15 = v5;
      id v6 = "%s Routing to context collector (%{private}@ for relay to %{private}@)";
      unint64_t v7 = v4;
      uint32_t v8 = 32;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v6, v14, v8);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  int v9 = AFSupportsHALOnDemandRapportConnection();
  uint64_t v10 = AFSiriLogContextDaemon;
  if (v9)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t v14 = 136315395;
      *(void *)&v14[4] = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDevice"
                           "ForAssistantId:allowFallbackOnAWDL:executionContext:completion:]_block_invoke";
      *(_WORD *)&v14[12] = 2113;
      *(void *)&v14[14] = v11;
      id v6 = "%s #hal Routing to context collector through #on-demand connection to %{private}@)";
      unint64_t v7 = v10;
      uint32_t v8 = 22;
      goto LABEL_7;
    }
LABEL_8:
    objc_msgSend(*(id *)(a1 + 40), "_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allowFallbackOnAWDL:executionContext:completion:", *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned __int8 *)(a1 + 80), *(unsigned __int8 *)(a1 + 81), *(void *)(a1 + 64), *(void *)(a1 + 72), *(_OWORD *)v14, *(void *)&v14[16], v15);
    goto LABEL_9;
  }
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t v14 = 136315138;
    *(void *)&v14[4] = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceFo"
                         "rAssistantId:allowFallbackOnAWDL:executionContext:completion:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s Remote device not reachable and no context collector is available for relay", v14, 0xCu);
  }
  uint64_t v12 = *(void *)(a1 + 72);
  if (v12)
  {
    __int16 v13 = +[AFError errorWithCode:1000];
    (*(void (**)(uint64_t, void, void *))(v12 + 16))(v12, 0, v13);
  }
LABEL_9:
}

void sub_1002ED7A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = v4;
    id v6 = [v3 idsIdentifier];
    int v7 = 136315394;
    uint32_t v8 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:pre"
         "ferredMessagingOption:allowFallbackOnAWDL:executionContext:completion:]_block_invoke";
    __int16 v9 = 2112;
    uint64_t v10 = v6;
    _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s Executing command on primary user device with identifier: %@", (uint8_t *)&v7, 0x16u);
  }
  if (*(void *)(a1 + 64)) {
    objc_msgSend(v3, "setPreferredMessagingOptionsForCommands:");
  }
  objc_msgSend(*(id *)(a1 + 32), "_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allowFallbackOnAWDL:executionContext:completion:", *(void *)(a1 + 40), v3, 0, *(unsigned __int8 *)(a1 + 72), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

void sub_1002EDDA8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1002EDDCC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = v6;
    uint32_t v8 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      CFStringRef v26 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDe"
            "vice:executionContext:completion:]_block_invoke";
      __int16 v27 = 2112;
      id v28 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Error: %@", buf, 0x16u);
    }
LABEL_13:
    uint64_t v13 = a1[5];
    if (v13) {
      (*(void (**)(uint64_t, void, void *))(v13 + 16))(v13, 0, v7);
    }
    __int16 v9 = 0;
    goto LABEL_16;
  }
  __int16 v9 = +[SAGenericCommand aceObjectWithDictionary:v5];
  uint64_t v10 = AFSiriLogContextDaemon;
  BOOL v11 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
  if (!v9)
  {
    if (v11)
    {
      *(_DWORD *)buf = 136315394;
      CFStringRef v26 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDe"
            "vice:executionContext:completion:]_block_invoke";
      __int16 v27 = 2112;
      id v28 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s Malformed command dictionary: %@", buf, 0x16u);
    }
    int v7 = +[AFError errorWithCode:102];
    goto LABEL_13;
  }
  if (v11)
  {
    *(_DWORD *)buf = 136315394;
    CFStringRef v26 = "-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevi"
          "ce:executionContext:completion:]_block_invoke";
    __int16 v27 = 2112;
    id v28 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s Response came back from the companion: %@", buf, 0x16u);
  }
  uint64_t v12 = a1[5];
  if (v12) {
    (*(void (**)(uint64_t, void *, void))(v12 + 16))(v12, v9, 0);
  }
  int v7 = 0;
LABEL_16:
  uint64_t v14 = +[AFAnalytics sharedAnalytics];
  uint64_t v15 = AFAnalyticsContextCreateWithError();
  v24[0] = v15;
  id v16 = AFAnalyticsContextCreateWithCommand();
  v24[1] = v16;
  uint64_t v17 = *(void *)(*(void *)(a1[6] + 8) + 40);
  v22[0] = @"transport type";
  v22[1] = @"id";
  uint64_t v18 = a1[4];
  v23[0] = v17;
  v23[1] = v18;
  __int16 v19 = +[NSDictionary dictionaryWithObjects:v23 forKeys:v22 count:2];
  v24[2] = v19;
  __int16 v20 = +[NSArray arrayWithObjects:v24 count:3];
  uint64_t v21 = AFAnalyticsContextsMerge();
  [v14 logEventWithType:4802 context:v21];
}

void sub_1002EE6B0(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) _beginRemoteExecutionContextForCommand:*(void *)(a1 + 40) fromPeer:*(void *)(a1 + 48) withRemoteExecutionInfo:*(void *)(a1 + 56)];
  id v3 = objc_alloc((Class)AFTwoArgumentSafetyBlock);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_1002EE8A8;
  v18[3] = &unk_10050B420;
  id v4 = *(id *)(a1 + 64);
  id v19 = v2;
  id v20 = v4;
  v18[4] = *(void *)(a1 + 32);
  id v5 = v2;
  id v6 = +[AFError errorWithCode:40];
  id v7 = [v3 initWithBlock:v18 defaultValue1:0 defaultValue2:v6];

  uint32_t v8 = [*(id *)(a1 + 32) rootExecutionContexts];
  __int16 v9 = [v5 info];
  uint64_t v10 = [v9 requestID];
  BOOL v11 = [v8 valueForKey:v10];

  uint64_t v12 = [v11 personaId];
  [*(id *)(a1 + 32) _attachPersonaIdIfNeeded:v12 aceCommand:*(void *)(a1 + 40)];
  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1002EEA28;
  v16[3] = &unk_10050B308;
  id v17 = v7;
  id v15 = v7;
  [v14 _handleCommand:v13 executionContext:v5 completion:v16];
}

void sub_1002EE8A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (v6)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315394;
      BOOL v11 = "-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke_2";
      __int16 v12 = 2112;
      id v13 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s error = %@", (uint8_t *)&v10, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v10 = 136315394;
    BOOL v11 = "-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke";
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s response = %@", (uint8_t *)&v10, 0x16u);
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8)
  {
    __int16 v9 = [v5 dictionary];
    (*(void (**)(uint64_t, void *, id))(v8 + 16))(v8, v9, v6);
  }
  [*(id *)(a1 + 32) _endRemoteExecutionContext:*(void *)(a1 + 40)];
}

id sub_1002EEA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) invokeWithValue:a2 andValue:a3];
}

void sub_1002EEDFC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002EEE34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002EEE44(uint64_t a1)
{
}

void sub_1002EEE4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002EF3D4;
  block[3] = &unk_10050B828;
  long long v7 = *(_OWORD *)(a1 + 40);
  id v5 = (id)v7;
  long long v10 = v7;
  id v9 = v3;
  id v6 = v3;
  dispatch_async(v4, block);
}

Class sub_1002EEF10(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_100586248)
  {
    v6[1] = _NSConcreteStackBlock;
    v6[2] = (void *)3221225472;
    v6[3] = sub_1002EF360;
    v6[4] = &unk_10050E350;
    void v6[5] = v6;
    long long v7 = off_10050B538;
    uint64_t v8 = 0;
    qword_100586248 = _sl_dlopen();
  }
  if (!qword_100586248)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v4 = +[NSString stringWithUTF8String:"void *iTunesCloudLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"ADDevicePropertiesUtils.m", 23, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("ICMusicSubscriptionStatusController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getICMusicSubscriptionStatusControllerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"ADDevicePropertiesUtils.m", 24, @"Unable to find class %s", "ICMusicSubscriptionStatusController");

LABEL_10:
    __break(1u);
  }
  qword_100586240 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1002EF0FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v7 = AFSiriLogContextDaemon;
  if (v6)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      __int16 v12 = "+[ADDevicePropertiesUtils fetchActiveSubscriptionsWithQueue:completion:]_block_invoke_3";
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Error fetching active subscriptions: %@", buf, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315138;
    __int16 v12 = "+[ADDevicePropertiesUtils fetchActiveSubscriptionsWithQueue:completion:]_block_invoke";
    _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s Retrieved", buf, 0xCu);
  }
  uint64_t v8 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(a1 + 40) _SISchemaAppleMediaProductsSubscriptionFrom:v5]);
  long long v10 = v8;
  id v9 = +[NSArray arrayWithObjects:&v10 count:1];

  [*(id *)(a1 + 32) invokeWithValue:v9];
}

id sub_1002EF294(uint64_t a1)
{
  unsigned __int8 v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315138;
    id v5 = "+[ADDevicePropertiesUtils fetchActiveSubscriptionsWithQueue:completion:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Timed out", (uint8_t *)&v4, 0xCu);
  }
  AnalyticsSendEvent();
  return [*(id *)(a1 + 32) invokeWithValue:0];
}

uint64_t sub_1002EF360()
{
  uint64_t result = _sl_dlopen();
  qword_100586248 = result;
  return result;
}

uint64_t sub_1002EF3D4(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v2)
  {
    [v2 cancel];
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
    int v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_1002EF604(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 16);
    if (v2)
    {
      (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v2, 1);
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = *(void **)(v3 + 16);
      *(void *)(v3 + 16) = 0;
    }
  }
}

void sub_1002F016C(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  int v4 = [*(id *)(a1[6] + 48) path];
  id v10 = 0;
  unsigned int v5 = [v2 createSymbolicLinkAtPath:v3 withDestinationPath:v4 error:&v10];
  id v6 = v10;

  long long v7 = AFSiriLogContextAnalytics;
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = a1[5];
      *(_DWORD *)buf = 136315394;
      __int16 v12 = "-[ADAnalyticsService _linkStoreForSysdiagnose]_block_invoke";
      __int16 v13 = 2112;
      uint64_t v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Created link at %@.", buf, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = a1[5];
    *(_DWORD *)buf = 136315650;
    __int16 v12 = "-[ADAnalyticsService _linkStoreForSysdiagnose]_block_invoke";
    __int16 v13 = 2112;
    uint64_t v14 = v9;
    __int16 v15 = 2112;
    id v16 = v6;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to create link at %@ due to error %@.", buf, 0x20u);
  }
}

id sub_1002F04C8(uint64_t a1)
{
  [*(id *)(a1 + 32) _processStagedEvents];
  uint64_t v2 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    unsigned int v5 = "-[ADAnalyticsService _endEventsFuzzingWithEndTime:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Finished flushing, removing time interval", (uint8_t *)&v4, 0xCu);
  }
  return [*(id *)(*(void *)(a1 + 32) + 112) dequeueObject];
}

void sub_1002F08D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _houseKeeperArrived];
}

void sub_1002F11F4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id v6 = (void *)AFSiriLogContextAnalytics;
    if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_ERROR))
    {
      long long v7 = *(void **)(a1 + 32);
      uint64_t v8 = v6;
      int v9 = 136315650;
      id v10 = "-[ADAnalyticsService _processStagedEvents]_block_invoke";
      __int16 v11 = 2048;
      id v12 = [v7 count];
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s Failed to save %tu events to the analytics store due to error %@.", (uint8_t *)&v9, 0x20u);
    }
  }
}

void sub_1002F1584(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(NSObject **)(a1 + 32);
  id v6 = a2;
  dispatch_group_enter(v5);
  id v7 = objc_alloc((Class)AFSafetyBlock);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472;
  v39[2] = sub_1002F18C8;
  v39[3] = &unk_10050C0A8;
  id v40 = *(id *)(a1 + 32);
  id v8 = [v7 initWithBlock:v39];
  int v9 = *(void **)(a1 + 40);
  id v10 = +[NSNumber numberWithInt:a3];
  [v9 setObject:v8 forKey:v10];

  __int16 v11 = +[NSUUID UUID];
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_1002F18D0;
  v35[3] = &unk_10050B6A8;
  int8x16_t v25 = *(int8x16_t *)(a1 + 40);
  id v12 = (id)v25.i64[0];
  int8x16_t v36 = vextq_s8(v25, v25, 8uLL);
  int v38 = a3;
  id v37 = v11;
  id v13 = v11;
  id v14 = objc_retainBlock(v35);
  __int16 v15 = *(void **)(a1 + 48);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1002F1984;
  v32[3] = &unk_10050B6D0;
  int v34 = a3;
  id v16 = v14;
  id v33 = v16;
  [v15 _observeConnectionDisrupted:a3 observer:v32 referenceId:v13];
  id v17 = objc_alloc((Class)AFWatchdogTimer);
  uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8);
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1002F1A50;
  v29[3] = &unk_10050B6D0;
  int v31 = a3;
  id v19 = v16;
  id v30 = v19;
  id v20 = [v17 initWithTimeoutInterval:v18 onQueue:v29 timeoutHandler:3.0];
  [v20 start];
  uint64_t v21 = *(void *)(a1 + 56);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  void v26[2] = sub_1002F1B2C;
  v26[3] = &unk_10050E188;
  id v27 = v20;
  id v28 = v19;
  uint64_t v22 = *(void (**)(uint64_t, id, uint64_t, void *))(v21 + 16);
  id v23 = v19;
  id v24 = v20;
  v22(v21, v6, a3, v26);
}

void sub_1002F18A8(uint64_t a1)
{
}

uint64_t sub_1002F18B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F18C8(uint64_t a1)
{
}

void sub_1002F18D0(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1002F1B70;
  v5[3] = &unk_10050B6A8;
  id v3 = *(id *)(a1 + 40);
  int v9 = *(_DWORD *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v2, v5);
}

uint64_t sub_1002F1984(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    int v5 = 136315394;
    id v6 = "-[ADAnalyticsService _executeDelegateBlockOnAllConnections:completion:]_block_invoke_5";
    __int16 v7 = 1024;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Connection disrupted for pid: %d, aborting boost request.", (uint8_t *)&v5, 0x12u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F1A50(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    int v5 = 136315650;
    id v6 = "-[ADAnalyticsService _executeDelegateBlockOnAllConnections:completion:]_block_invoke";
    __int16 v7 = 2048;
    uint64_t v8 = 0x4008000000000000;
    __int16 v9 = 1024;
    int v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Timed out after %f seconds waiting for pid: %d", (uint8_t *)&v5, 0x1Cu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F1B2C(uint64_t a1)
{
  [*(id *)(a1 + 32) stop];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v2();
}

id sub_1002F1B70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  int v3 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 56)];
  [v2 removeObjectForKey:v3];

  uint64_t v4 = *(unsigned int *)(a1 + 56);
  int v5 = *(void **)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  return _[v5 _stopObservingConnectionDisrupted:v4 referenceId:v6];
}

void sub_1002F1CB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(NSObject **)(v2 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002F1D64;
  block[3] = &unk_10050C688;
  void block[4] = v2;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  dispatch_async(v3, block);
}

uint64_t sub_1002F1D64(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        __int16 v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        objc_msgSend(v7, "processIdentifier", (void)v10);
        uint64_t v8 = [v7 remoteObjectProxyWithErrorHandler:&stru_10050B680];
        if (v8) {
          (*(void (**)(void))(a1[5] + 16))();
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F2304(id a1, AFAnalyticsServiceDelegate *a2, int a3, id a4)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1002F2398;
  v6[3] = &unk_10050D440;
  id v7 = a4;
  id v5 = v7;
  [(AFAnalyticsServiceDelegate *)a2 flushStagedEventsWithReply:v6];
}

uint64_t sub_1002F2398(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F2440(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 80);
  if (v2)
  {
    (*(void (**)(void))(v2 + 16))();
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 80);
    *(void *)(v3 + 80) = 0;
  }
  id v5 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(v6 + 80);
  *(void *)(v6 + 80) = v5;
  return _objc_release_x1(v5, v7);
}

uint64_t sub_1002F2644(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F265C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_ERROR))
  {
    int v5 = 136315394;
    uint64_t v6 = "-[ADAnalyticsService _publishEventsToObserver:completion:]_block_invoke_2";
    __int16 v7 = 2112;
    id v8 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s %@", (uint8_t *)&v5, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F273C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F28F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F2910(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(ADAnalyticsFBFDeliveryInfrastructure);
  [(ADAnalyticsFBFDeliveryInfrastructure *)v2 deliverWrappedEvents:*(void *)(a1 + 32)];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1002F2B00(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F2B18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 98))
  {
    uint64_t v2 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v2();
  }
  else
  {
    *(unsigned char *)(v1 + 98) = 1;
    id v3 = *(void **)(a1 + 32);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1002F2BF0;
    void v4[3] = &unk_10050E188;
    void v4[4] = v3;
    id v5 = *(id *)(a1 + 40);
    [v3 _executeDelegateBlockOnAllConnections:&stru_10050B640 completion:v4];
  }
}

void sub_1002F2BF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 8);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002F2DE0;
  v3[3] = &unk_10050E188;
  void v3[4] = v1;
  id v4 = *(id *)(a1 + 40);
  dispatch_async(v2, v3);
}

void sub_1002F2C84(id a1, AFAnalyticsServiceDelegate *a2, int a3, id a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  id v8 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315650;
    long long v13 = "-[ADAnalyticsService boostAllConnections:]_block_invoke_3";
    __int16 v14 = 2112;
    __int16 v15 = v6;
    __int16 v16 = 1024;
    int v17 = a3;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Boosting events on connection: %@ pid: %d", buf, 0x1Cu);
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1002F2DD0;
  v10[3] = &unk_10050D440;
  id v11 = v7;
  id v9 = v7;
  [(AFAnalyticsServiceDelegate *)v6 boostQueuedEvents:v10];
}

uint64_t sub_1002F2DD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1002F2DE0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 98) = 0;
  uint64_t v2 = AFSiriLogContextAnalytics;
  if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    id v5 = "-[ADAnalyticsService boostAllConnections:]_block_invoke_3";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Finished boosting all analytics connections", (uint8_t *)&v4, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002F2F6C(void *a1)
{
  id v5 = [objc_alloc((Class)SISchemaClientEvent) initWithData:a1[4]];
  if (v5)
  {
    uint64_t v2 = +[AssistantSiriAnalytics sharedAnalytics];
    id v3 = [v2 defaultMessageStream];
    [v3 emitMessage:v5 timestamp:a1[6]];
  }
  uint64_t v4 = a1[5];
  if (v4) {
    (*(void (**)(void))(v4 + 16))();
  }
}

id sub_1002F3088(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _endEventsFuzzingWithEndTime:*(void *)(a1 + 40)];
}

id sub_1002F3108(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _beginEventsFuzzingWithStartTime:*(void *)(a1 + 40)];
}

id sub_1002F31DC(void *a1)
{
  return [*(id *)(a1[4] + 64) logInstrumentationOfType:a1[5] machAbsoluteTime:a1[7] turnIdentifier:a1[6]];
}

id sub_1002F3264(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _endEventsGrouping];
}

id sub_1002F32E0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _beginEventsGrouping];
}

uint64_t sub_1002F3438(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1002F3450(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 72);
  if (!v2)
  {
    id v3 = AFSiriLogContextAnalytics;
    if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v21 = "-[ADAnalyticsService stageEvents:completion:]_block_invoke_2";
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Hub events logged but no speechId currently available. Staging events using NULL in place of speechId.", buf, 0xCu);
    }
  }
  id v4 = [*(id *)(a1 + 40) copy];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v5 = v4;
  id v6 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v5);
        }
        objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * i), "setSpeechId:", v2, (void)v15);
      }
      id v7 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v7);
  }

  long long v10 = *(unsigned char **)(a1 + 32);
  if (!v10[96])
  {
    id v11 = +[NSPredicate predicateWithBlock:&stru_10050B600];
    long long v12 = [v5 filteredArrayUsingPredicate:v11];

    long long v13 = *(void **)(a1 + 32);
    __int16 v14 = +[NSSet setWithArray:v12];
    [v13 _stageEvents:v14];

    long long v10 = *(unsigned char **)(a1 + 32);
  }
  objc_msgSend(v10, "_publishEventsToObserver:completion:", v5, *(void *)(a1 + 48), (void)v15);
}

BOOL sub_1002F3648(id a1, AFAnalyticsEvent *a2, NSDictionary *a3)
{
  id v3 = a2;
  if ([(AFAnalyticsEvent *)v3 deliveryStream])
  {
    char IsValid = 1;
  }
  else
  {
    [(AFAnalyticsEvent *)v3 type];
    char IsValid = AFAnalyticsEventTypeIsValid();
  }

  return IsValid;
}

void sub_1002F3888(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002F3914;
  v3[3] = &unk_10050B598;
  id v4 = *(id *)(a1 + 32);
  [a2 countQueuedEventRecordsWithCompletion:v3];
}

void sub_1002F3914(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = AFSiriLogContextAnalytics;
    if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_ERROR))
    {
      int v16 = 136315394;
      long long v17 = "-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke_2";
      __int16 v18 = 2112;
      id v19 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Error counting queued event records in analytics db: %@", (uint8_t *)&v16, 0x16u);
    }
  }
  else if (a2)
  {
    id v7 = (void *)AFSiriLogContextAnalytics;
    if (os_log_type_enabled(AFSiriLogContextAnalytics, OS_LOG_TYPE_ERROR))
    {
      long long v13 = *(void **)(a1 + 32);
      __int16 v14 = v7;
      long long v15 = +[ADPreferences sharedPreferences];
      int v16 = 136315906;
      long long v17 = "-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke";
      __int16 v18 = 2112;
      id v19 = v13;
      __int16 v20 = 2048;
      uint64_t v21 = a2;
      __int16 v22 = 1024;
      unsigned int v23 = [v15 metricsSenderDisabled];
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%s Triggering ABC for upload failure since %@, recordCount: %lu, senderDisabled: %d", (uint8_t *)&v16, 0x26u);
    }
    uint64_t v8 = +[SiriCoreSymptomsReporter sharedInstance];
    id v9 = +[NSProcessInfo processInfo];
    id v10 = [v9 processIdentifier];
    [v8 reportIssueForType:@"analytics_deliverability" subType:@"upload_stuck" context:0 processIdentifier:v10 walkboutStatus:byte_100585E38];

    id v11 = +[ADPreferences sharedPreferences];
    long long v12 = +[NSDate date];
    [v11 setLastMetricsUploadFailureReportedOnDate:v12];
  }
}

uint64_t sub_1002F3C3C(uint64_t a1)
{
  uint64_t result = AFIsInternalInstall();
  if ((result & 1) == 0)
  {
    id v3 = +[AFPreferences sharedPreferences];
    unsigned int v4 = [v3 shouldLogForQA];

    id v5 = *(void **)(a1 + 32);
    if (v4)
    {
      return (uint64_t)[v5 _linkStoreForSysdiagnose];
    }
    else
    {
      return (uint64_t)[v5 _unlinkStoreForSysdiagnose];
    }
  }
  return result;
}

id sub_1002F3D48(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _resumeEventsStaging];
}

id sub_1002F3DC4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _suspendEventsStaging];
}

void sub_1002F3E64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  unsigned int v4 = *(void **)(v2 + 88);
  if (v4 != v3)
  {
    uint64_t v5 = *(void *)(v2 + 80);
    if (v5)
    {
      (*(void (**)(uint64_t))(v5 + 16))(v5);
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = *(void **)(v6 + 80);
      *(void *)(v6 + 80) = 0;

      unsigned int v4 = *(void **)(*(void *)(a1 + 32) + 88);
    }
    [v4 invalidate];
    uint64_t v8 = *(void **)(a1 + 40);
    id v9 = (id *)(*(void *)(a1 + 32) + 88);
    objc_storeStrong(v9, v8);
  }
}

void sub_1002F3F90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) _store];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_1002F4094(uint64_t a1)
{
  [*(id *)(a1 + 32) _removeConnection:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  return _[v2 _signalConnectionDisruption:v3];
}

id sub_1002F417C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _signalConnectionDisruption:*(void *)(a1 + 40)];
}

id sub_1002F4230(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _addConnection:*(void *)(a1 + 40)];
}

id sub_1002F4594(uint64_t a1)
{
  if ((AFIsInternalInstall() & 1) != 0
    || (+[AFPreferences sharedPreferences],
        id v2 = objc_claimAutoreleasedReturnValue(),
        unsigned int v3 = [v2 shouldLogForQA],
        v2,
        v3))
  {
    unsigned int v4 = *(void **)(a1 + 32);
    return [v4 _linkStoreForSysdiagnose];
  }
  else
  {
    uint64_t v6 = *(void **)(a1 + 32);
    return [v6 _unlinkStoreForSysdiagnose];
  }
}

void sub_1002F4674(id a1)
{
  uint64_t v1 = objc_alloc_init(ADAnalyticsService);
  uint64_t v2 = qword_100586258;
  qword_100586258 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1002F4888(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 32);
  if (v2)
  {
    unsigned int v3 = [v2 remoteObjectProxyWithErrorHandler:&stru_10050B768];
    [v3 receivedNotificationResponse:*(void *)(a1 + 40)];
  }
  else
  {
    unsigned int v4 = [*(id *)(a1 + 40) notification];
    uint64_t v5 = [v4 request];
    id v6 = [v5 identifier];
    id v7 = [v6 rangeOfString:@"-snoozed" options:4];
    unsigned int v3 = v6;
    if (v7 != (unsigned char *)0x7FFFFFFFFFFFFFFFLL)
    {
      id v9 = v7;
      unsigned int v3 = v6;
      if (v7 == (char *)[v6 length] - v8)
      {
        unsigned int v3 = [v6 substringToIndex:v9];
      }
    }

    uint64_t v10 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:v3];
    id v11 = (void *)v10;
    if (v10)
    {
      (*(void (**)(uint64_t, void))(v10 + 16))(v10, *(void *)(a1 + 40));
      [*(id *)(a1 + 32) _clearNotificationWithIdentifier:v3];
    }
    else
    {
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));

      if (WeakRetained)
      {
        id v13 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
        [v13 receivedNotificationResponse:*(void *)(a1 + 40)];
      }
      else
      {
        __int16 v14 = AFSiriLogContextUtility;
        if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_ERROR))
        {
          uint64_t v16 = *(void *)(a1 + 40);
          int v17 = 136315394;
          __int16 v18 = "-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletion"
                "Handler:]_block_invoke";
          __int16 v19 = 2112;
          uint64_t v20 = v16;
          _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%s No response handler for %@", (uint8_t *)&v17, 0x16u);
        }
      }
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1002F4AB4(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = AFSiriLogContextUtility;
  if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    uint64_t v5 = "-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler"
         ":]_block_invoke_2";
    __int16 v6 = 2112;
    id v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Failed to connect to notification service client: %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_1002F4C40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) identifier];
  if (v2)
  {
    unsigned int v3 = *(void **)(*(void *)(a1 + 40) + 16);
    id v4 = objc_retainBlock(*(id *)(a1 + 48));
    [v3 setObject:v4 forKey:v2];

    if ((*(unsigned char *)(a1 + 56) & 1) != 0 && (AFIsDeviceUnlocked() & 1) == 0)
    {
      if (([*(id *)(a1 + 40) _isMonitoringUnlockActivity] & 1) == 0) {
        [*(id *)(a1 + 40) _startMonitoringUnlockActivity];
      }
      uint64_t v5 = [*(id *)(a1 + 32) identifier];
      __int16 v6 = sub_1002F4E8C(v5);

      id v7 = [*(id *)(a1 + 32) content];
      uint64_t v8 = [*(id *)(a1 + 32) trigger];
      id v9 = +[UNNotificationRequest requestWithIdentifier:v6 content:v7 trigger:v8];

      uint64_t v10 = *(void **)(*(void *)(a1 + 40) + 40);
      id v11 = [*(id *)(a1 + 32) identifier];
      [v10 setObject:v9 forKey:v11];
    }
    long long v12 = *(void **)(a1 + 32);
    id v13 = *(void **)(a1 + 40);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1002F4EFC;
    v16[3] = &unk_10050C610;
    id v17 = v12;
    [v13 postNotificationRequest:v17 completion:v16];
  }
  else
  {
    __int16 v14 = AFSiriLogContextUtility;
    if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      __int16 v19 = "-[ADUserNotificationServiceProvider postNotificationRequest:options:responseHandler:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%s No identifier specified for %@", buf, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

id sub_1002F4E8C(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)NSString) initWithFormat:@"%@%@", v1, @"-snoozed"];

  return v2;
}

void sub_1002F4EFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = AFSiriLogContextUtility;
    if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 136315650;
      id v7 = "-[ADUserNotificationServiceProvider postNotificationRequest:options:responseHandler:]_block_invoke";
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed to post notification %@ with error %@", (uint8_t *)&v6, 0x20u);
    }
  }
}

id sub_1002F5074(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 24), *(id *)(a1 + 40));
}

void sub_1002F52D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = AFSiriLogContextUtility;
    if (os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 136315650;
      id v7 = "-[ADUserNotificationServiceProvider _snoozeNotifications]_block_invoke";
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed to snooze notification %@ with error %@", (uint8_t *)&v6, 0x20u);
    }
  }
}

void sub_1002F54AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [v4 elements];
  id v6 = [v5 count];

  id v7 = AFSiriLogContextUtility;
  BOOL v8 = os_log_type_enabled(AFSiriLogContextUtility, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    if (v8)
    {
      __int16 v20 = v7;
      uint64_t v21 = [v4 elements];
      *(_DWORD *)buf = 136315394;
      long long v29 = "-[ADUserNotificationServiceProvider _startMonitoringUnlockActivity]_block_invoke";
      __int16 v30 = 2112;
      int v31 = v21;
      _os_log_debug_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "%s %@", buf, 0x16u);
    }
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    uint64_t v9 = [v4 elements];
    id v10 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v24;
      uint64_t v13 = FBSDisplayLayoutElementLockScreenIdentifier;
      while (2)
      {
        __int16 v14 = 0;
        do
        {
          if (*(void *)v24 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v15 = [*(id *)(*((void *)&v23 + 1) + 8 * (void)v14) identifier];
          unsigned __int8 v16 = [v15 isEqualToString:v13];

          if (v16)
          {

            goto LABEL_16;
          }
          __int16 v14 = (char *)v14 + 1;
        }
        while (v11 != v14);
        id v11 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v11) {
          continue;
        }
        break;
      }
    }

    dispatch_time_t v17 = dispatch_time(0, 1500000000);
    uint64_t v18 = *(void *)(a1 + 32);
    __int16 v19 = *(NSObject **)(v18 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1002F5744;
    block[3] = &unk_10050E138;
    void block[4] = v18;
    dispatch_after(v17, v19, block);
  }
  else if (v8)
  {
    *(_DWORD *)buf = 136315138;
    long long v29 = "-[ADUserNotificationServiceProvider _startMonitoringUnlockActivity]_block_invoke";
    _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s No layout elements", buf, 0xCu);
  }
LABEL_16:
}

id sub_1002F5744(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _snoozeNotifications];
}

void sub_1002F57F4(uint64_t a1)
{
  id v2 = sub_1002F4E8C(*(void **)(a1 + 32));
  id v3 = *(void **)(*(void *)(a1 + 40) + 8);
  v5[0] = *(void *)(a1 + 32);
  v5[1] = v2;
  id v4 = +[NSArray arrayWithObjects:v5 count:2];
  [v3 removeDeliveredNotificationsWithIdentifiers:v4];

  [*(id *)(a1 + 40) _clearNotificationWithIdentifier:*(void *)(a1 + 32)];
}

void sub_1002F5B1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  id v3 = *(id *)(a1 + 40);

  if (WeakRetained == v3)
  {
    id v4 = *(void **)(*(void *)(a1 + 32) + 8);
    [v4 setDelegate:0];
  }
}

id sub_1002F5C28(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setDelegate:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 40);
  id v3 = (id *)(*(void *)(a1 + 32) + 24);
  return objc_storeWeak(v3, v2);
}

id sub_1002F5CE0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) resume];
}

id sub_1002F6558(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _invokeCompletionWithContext:*(void *)(a1 + 40) forPID:*(unsigned int *)(a1 + 48)];
}

void sub_1002F6634(id *a1)
{
  [0 setDelegate:a1[4]];
  id v18 = objc_alloc_init((Class)NSMutableDictionary);
  id v2 = dispatch_group_create();
  id v3 = *((id *)a1[4] + 1);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = a1[5];
  id v4 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v6) {
          objc_enumerationMutation(obj);
        }
        BOOL v8 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        dispatch_group_enter(v2);
        uint64_t v9 = [v8 identifier];
        id v10 = a1[4];
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        void v26[2] = sub_1002F6958;
        v26[3] = &unk_10050E2F0;
        id v27 = v3;
        id v28 = v18;
        id v29 = v9;
        __int16 v30 = v2;
        id v11 = v9;
        [v10 _getContextForAppInfo:v8 completion:v26];
      }
      id v5 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
    }
    while (v5);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002F6A34;
  block[3] = &unk_10050E1D8;
  id v12 = a1[6];
  id v13 = a1[4];
  id v23 = v18;
  id v24 = v13;
  id v25 = v12;
  id v14 = v18;
  uint64_t v15 = v3;
  dispatch_group_notify(v2, v3, block);
  objc_initWeak(&location, a1[4]);
  dispatch_time_t v16 = dispatch_time(0, 1000000000);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1002F6A84;
  v19[3] = &unk_10050B790;
  objc_copyWeak(&v20, &location);
  dispatch_after(v16, v15, v19);
  objc_destroyWeak(&v20);
  objc_destroyWeak(&location);
}

void sub_1002F6958(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1002F6AC4;
  v5[3] = &unk_10050DC68;
  id v6 = a2;
  id v3 = *(NSObject **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  id v4 = v6;
  dispatch_async(v3, v5);
}

id sub_1002F6A34(void *a1)
{
  uint64_t v2 = a1[6];
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, a1[4]);
  }
  uint64_t v3 = a1[5];
  return [0 removeDelegate:v3];
}

void sub_1002F6A84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _invokeAllCompletionsWithError];
}

void sub_1002F6AC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    [*(id *)(a1 + 40) setObject:v2 forKey:*(void *)(a1 + 48)];
  }
  uint64_t v3 = *(NSObject **)(a1 + 56);
  dispatch_group_leave(v3);
}

void sub_1002F6EC0(id a1)
{
  if (AFIsHorseman())
  {
    v8[0] = SAAceDomainSignalDomainMEDIA_PLAYERValue;
    v8[1] = SAAceDomainSignalDomainMESSAGESValue;
    v9[0] = SAMPGroupIdentifier;
    v9[1] = SASmsGroupIdentifier;
    void v8[2] = SAAceDomainSignalDomainREMINDERSValue;
    v8[3] = SAAceDomainSignalDomainCONTACTValue;
    id v9[2] = SAReminderGroupIdentifier;
    v9[3] = SAABGroupIdentifier;
    void v8[4] = SAAceDomainSignalDomainPHONEValue;
    void v9[4] = SAPhoneGroupIdentifier;
    id v1 = v9;
    uint64_t v2 = v8;
    uint64_t v3 = 5;
  }
  else
  {
    v6[0] = SAAceDomainSignalDomainMESSAGESValue;
    v6[1] = SAAceDomainSignalDomainMEDIA_PLAYERValue;
    v7[0] = SASmsGroupIdentifier;
    v7[1] = SAMPGroupIdentifier;
    id v1 = v7;
    uint64_t v2 = v6;
    uint64_t v3 = 2;
  }
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v1 forKeys:v2 count:v3];
  id v5 = (void *)qword_100586270;
  qword_100586270 = v4;
}

void sub_1002F7388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_1002F73B4(uint64_t a1, uint64_t a2, void *a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002F750C;
  block[3] = &unk_10050C700;
  id v8 = a3;
  long long v6 = *(_OWORD *)(a1 + 32);
  id v4 = (id)v6;
  long long v9 = v6;
  id v5 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1002F7470(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = (void *)a1[4];
  if (*(unsigned char *)(*(void *)(a1[6] + 8) + 24)) {
    uint64_t v3 = (Class *)SACommandFailed_ptr;
  }
  else {
    uint64_t v3 = (Class *)SACommandSucceeded_ptr;
  }
  id v5 = objc_alloc_init(*v3);
  id v4 = [v2 createResponseWithReplyCommand:v5];
  (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v4, 0);
}

void sub_1002F750C(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

id sub_1002F752C()
{
  if (qword_1005862A0 != -1) {
    dispatch_once(&qword_1005862A0, &stru_10050B8A8);
  }
  v0 = (void *)qword_1005862A8;
  return v0;
}

void sub_1002F7580(id a1)
{
  if (qword_100586290 != -1) {
    dispatch_once(&qword_100586290, &stru_10050B888);
  }
  qword_1005862A8 = (uint64_t)objc_getClass("FBSOpenApplicationOptions");
  off_100583E48 = sub_1002F75E4;
}

id sub_1002F75E4()
{
  return (id)qword_1005862A8;
}

void sub_1002F75F0(id a1)
{
  qword_100586298 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices", 2);
}

id sub_1002F761C()
{
  if (qword_100586280 != -1) {
    dispatch_once(&qword_100586280, &stru_10050B868);
  }
  v0 = (void *)qword_100586288;
  return v0;
}

void sub_1002F7670(id a1)
{
  if (qword_100586290 != -1) {
    dispatch_once(&qword_100586290, &stru_10050B888);
  }
  qword_100586288 = (uint64_t)objc_getClass("FBSOpenApplicationService");
  off_100583E40 = sub_1002F76D4;
}

id sub_1002F76D4()
{
  return (id)qword_100586288;
}

void sub_1002F78F4(id a1)
{
  v3[0] = SAAceDomainSignalDomainALARMValue;
  v3[1] = SAAceDomainSignalDomainCALENDARValue;
  v4[0] = @"com.apple.NanoAlarm";
  v4[1] = @"com.apple.NanoCalendar";
  v3[2] = SAAceDomainSignalDomainHEALTHValue;
  v3[3] = SAAceDomainSignalDomainMAPSValue;
  v4[2] = @"com.apple.SessionTrackerApp";
  void v4[3] = @"com.apple.NanoMaps";
  void v3[4] = SAAceDomainSignalDomainSETTINGSValue;
  void v3[5] = SAAceDomainSignalDomainTIMERValue;
  void v4[4] = @"com.apple.NanoSettings";
  void v4[5] = @"com.apple.private.NanoTimer";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:6];
  uint64_t v2 = (void *)qword_100586260;
  qword_100586260 = v1;
}

void *sub_1002F7D50(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315395;
    id v11 = "-[ADAssistantDataManager localMeCardDidUpdate:]_block_invoke";
    __int16 v12 = 2113;
    uint64_t v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s %{private}@", buf, 0x16u);
  }
  uint64_t result = *(void **)(a1 + 40);
  if (!result[22])
  {
    if (*(void *)(a1 + 32))
    {
      id v5 = [*(id *)(a1 + 32) copy];
      id v9 = v5;
      uint64_t v6 = +[NSArray arrayWithObjects:&v9 count:1];
      uint64_t v7 = *(void *)(a1 + 40);
      id v8 = *(void **)(v7 + 24);
      *(void *)(v7 + 24) = v6;

      uint64_t result = *(void **)(a1 + 40);
    }
    return [result _generateAssistantData];
  }
  return result;
}

void sub_1002F82C8(uint64_t a1)
{
  unsigned __int8 v2 = +[TUCallCapabilities supportsTelephonyCalls];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(NSObject **)(v3 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002F8370;
  block[3] = &unk_10050D378;
  void block[4] = v3;
  unsigned __int8 v7 = v2;
  id v6 = *(id *)(a1 + 40);
  dispatch_async(v4, block);
}

uint64_t sub_1002F8370(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v2 = *(unsigned __int8 *)(v1 + 104);
  int v3 = *(unsigned __int8 *)(a1 + 48);
  *(unsigned char *)(v1 + 104) = v3;
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, v2 != v3);
  }
  return result;
}

void sub_1002F83A0(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create(0, v1);

  int v3 = (void *)qword_1005862D8;
  qword_1005862D8 = (uint64_t)v2;
}

void sub_1002F86A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)SAVoice) initWithSiriVoice:v6];

  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(NSObject **)(v8 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002F8E74;
  block[3] = &unk_10050E1D8;
  void block[4] = v8;
  id v13 = v7;
  id v14 = v5;
  id v10 = v5;
  id v11 = v7;
  dispatch_async(v9, block);
}

void sub_1002F8794(uint64_t a1)
{
  dispatch_queue_t v2 = +[ADPreferences sharedPreferences];
  int v3 = [v2 outputVoice];

  id v4 = AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
    __int16 v19 = 2112;
    id v20 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Retrieving best available voice asset for voice info %@...", buf, 0x16u);
  }
  id v5 = objc_alloc((Class)SiriTTSSynthesisVoice);
  id v6 = [v3 languageCode];
  id v7 = [v3 name];
  id v8 = [v5 initWithLanguage:v6 name:v7];

  id v9 = +[SiriTTSDaemonSession afSharedSession];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_1002F8CD8;
  void v12[3] = &unk_10050BA28;
  id v13 = v8;
  id v14 = v3;
  id v15 = *(id *)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  id v10 = v3;
  id v11 = v8;
  [v9 getSynthesisVoiceMatching:v11 reply:v12];
}

void sub_1002F898C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    id v8 = +[AFPreferences sharedPreferences];
    id v9 = [v8 inProgressOutputVoice];

    if (v9)
    {
      id v10 = [v9 languageCode];
      id v11 = [v9 name];
      if ([v10 isEqualToString:a1[5]]
        && ([v11 isEqualToString:a1[6]] & 1) != 0)
      {
        [v5 updateWithTargetVoice:a1[7]];
        if ([v5 footprint] == (id)2 || objc_msgSend(v5, "footprint") == (id)3)
        {
          __int16 v12 = AFSiriLogContextSession;
          if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
          {
            int v20 = 136315138;
            uint64_t v21 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s InProgress Output Voice download complete", (uint8_t *)&v20, 0xCu);
          }
          id v13 = +[AFPreferences sharedPreferences];
          [v13 setInProgressOutputVoice:0];

          id v14 = +[ADCommandCenter sharedCommandCenter];
          [v14 setOutputVoice:a1[4]];

          (*(void (**)(void))(a1[9] + 16))();
          goto LABEL_19;
        }
      }
      else
      {
        id v15 = AFSiriLogContextSession;
        if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
        {
          int v20 = 136315138;
          uint64_t v21 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s InProgress Output Voice changed during downloaded", (uint8_t *)&v20, 0xCu);
        }
      }
    }
    else
    {
      id v16 = AFSiriLogContextSession;
      if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
      {
        int v20 = 136315138;
        uint64_t v21 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "%s InProgress Output Voice download already completed", (uint8_t *)&v20, 0xCu);
      }
    }
    (*(void (**)(void))(a1[8] + 16))();
LABEL_19:

    goto LABEL_20;
  }
  id v7 = (void *)AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_ERROR))
  {
    uint64_t v17 = a1[4];
    id v18 = v7;
    __int16 v19 = [v6 localizedDescription];
    int v20 = 136315650;
    uint64_t v21 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
    __int16 v22 = 2112;
    uint64_t v23 = v17;
    __int16 v24 = 2112;
    id v25 = v19;
    _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s Unable to retrieve best available voice asset for in-progress voice info %@, error: %@", (uint8_t *)&v20, 0x20u);
  }
  (*(void (**)(void))(a1[8] + 16))();
LABEL_20:
}

void sub_1002F8CD8(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextSession;
  if (v6)
  {
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_ERROR))
    {
      id v8 = (void *)a1[4];
      id v9 = v7;
      id v10 = [v6 localizedDescription];
      int v12 = 136315650;
      id v13 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
      __int16 v14 = 2112;
      id v15 = v8;
      __int16 v16 = 2112;
      uint64_t v17 = v10;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Unable to retrieve best available voice asset for voice info %@, error: %@", (uint8_t *)&v12, 0x20u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    id v11 = (void *)a1[5];
    int v12 = 136315650;
    id v13 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
    __int16 v14 = 2112;
    id v15 = v5;
    __int16 v16 = 2112;
    uint64_t v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Retrieved best available voice asset %@ for voice info %@.", (uint8_t *)&v12, 0x20u);
  }
  [v5 updateWithTargetVoice:a1[4]];
  (*(void (**)(void))(a1[6] + 16))();
}

uint64_t sub_1002F8E74(uint64_t a1)
{
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 80) isEqual:*(void *)(a1 + 40)];
  int v3 = AFSiriLogContextSession;
  BOOL v4 = os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (!v4) {
      goto LABEL_7;
    }
    uint64_t v5 = *(void *)(a1 + 40);
    int v12 = 136315394;
    id v13 = "-[ADAssistantDataManager _updateVoice:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v5;
    id v6 = "%s Cached voice for assistant data is still %@.";
    id v7 = v3;
    uint32_t v8 = 22;
  }
  else
  {
    if (!v4) {
      goto LABEL_7;
    }
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 80);
    int v12 = 136315650;
    id v13 = "-[ADAssistantDataManager _updateVoice:]_block_invoke_2";
    __int16 v14 = 2112;
    uint64_t v15 = v10;
    __int16 v16 = 2112;
    uint64_t v17 = v9;
    id v6 = "%s Cached voice for assistant data updated from %@ to %@.";
    id v7 = v3;
    uint32_t v8 = 32;
  }
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v12, v8);
LABEL_7:
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, v2 ^ 1);
  }
  return result;
}

void sub_1002F9360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  _Block_object_dispose(&a46, 8);
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose((const void *)(v56 - 232), 8);
  _Block_object_dispose((const void *)(v56 - 200), 8);
  _Block_object_dispose((const void *)(v56 - 168), 8);
  _Block_object_dispose((const void *)(v56 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F93D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002F93E4(uint64_t a1)
{
}

void sub_1002F93EC(void *a1)
{
  id v14 = +[MCProfileConnection sharedConnection];
  if ([v14 effectiveBoolValueForSetting:MCFeatureSafariAllowed] == 2)
  {
    unsigned int v2 = (void *)a1[4];
    uint64_t v3 = SAWebGroupIdentifier;
    BOOL v4 = +[NSString stringWithFormat:@"%@#%@", SAWebGroupIdentifier, SAWebSearchClassIdentifier];
    [v2 addObject:v4];

    uint64_t v5 = (void *)a1[4];
    id v6 = +[NSString stringWithFormat:@"%@#%@", v3, SAWebSiteSearchClassIdentifier];
    [v5 addObject:v6];
  }
  if ([v14 effectiveBoolValueForSetting:MCFeatureVideoConferencingAllowed] == 2)
  {
    id v7 = (void *)a1[4];
    uint32_t v8 = +[NSString stringWithFormat:@"%@#%@", SAPhoneGroupIdentifier, SAPhoneCallFaceTimeRestrictionKeyValue];
    [v7 addObject:v8];
  }
  if ([v14 effectiveBoolValueForSetting:MCFeatureBluetoothModificationAllowed] == 2)
  {
    uint64_t v9 = (void *)a1[4];
    uint64_t v10 = +[NSString stringWithFormat:@"%@#%@", SASettingGroupIdentifier, SASettingSetBluetoothClassIdentifier];
    [v9 addObject:v10];
  }
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = sub_1001FB870();
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v14 effectiveBoolValueForSetting:MCFeatureAssistantUserGeneratedContentAllowed] == 1;
  *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = [v14 effectiveBoolValueForSetting:MCFeatureExplicitContentAllowed] == 1;
  id v11 = [v14 effectiveValueForSetting:MCFeatureMaximumMoviesRating];
  *(void *)(*(void *)(a1[8] + 8) + 24) = [v11 integerValue];

  int v12 = [v14 effectiveValueForSetting:MCFeatureMaximumTVShowsRating];
  *(void *)(*(void *)(a1[9] + 8) + 24) = [v12 integerValue];

  id v13 = [v14 effectiveValueForSetting:MCFeatureMaximumAppsRating];
  *(void *)(*(void *)(a1[10] + 8) + 24) = [v13 integerValue];
}

void sub_1002F96A4(uint64_t a1, int a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2 == 1;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1002F96C0(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    unsigned int v2 = *(void **)(a1 + 32);
    uint64_t v3 = +[NSString stringWithFormat:@"%@#%@", SAGroupIdentifier, SAGetRequestOriginLocationRestrictionKeyValue];
    [v2 addObject:v3];
  }
  uint64_t v4 = CRCopyCountryCode();
  uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  unsigned int v7 = [*(id *)(*(void *)(a1 + 40) + 48) isEqual:*(void *)(a1 + 32)];
  uint64_t v8 = *(void *)(a1 + 40);
  if (v7)
  {
    if (*(unsigned __int8 *)(v8 + 56) == *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)
      && *(unsigned __int8 *)(v8 + 57) == *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8) + 24)
      && *(unsigned __int8 *)(v8 + 89) == *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 88) + 8) + 24))
    {
      id v9 = [*(id *)(v8 + 96) movieRestriction];
      uint64_t v8 = *(void *)(a1 + 40);
      if (v9 == *(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 24))
      {
        id v10 = [*(id *)(v8 + 96) tvRestriction];
        uint64_t v8 = *(void *)(a1 + 40);
        if (v10 == *(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 24))
        {
          id v11 = [*(id *)(v8 + 96) appRestriction];
          uint64_t v8 = *(void *)(a1 + 40);
          if (v11 == *(id *)(*(void *)(*(void *)(a1 + 112) + 8) + 24))
          {
            int v12 = [*(id *)(v8 + 96) countryCode];
            id v13 = v12;
            if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)) {
              CFStringRef v14 = *(const __CFString **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
            }
            else {
              CFStringRef v14 = &stru_10050F7D8;
            }
            [v12 isEqualToString:v14];

            uint64_t v8 = *(void *)(a1 + 40);
          }
        }
      }
    }
  }
  objc_storeStrong((id *)(v8 + 48), *(id *)(a1 + 32));
  *(unsigned char *)(*(void *)(a1 + 40) + 56) = *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  *(unsigned char *)(*(void *)(a1 + 40) + 57) = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
  *(unsigned char *)(*(void *)(a1 + 40) + 89) = *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
  [*(id *)(*(void *)(a1 + 40) + 96) setMovieRestriction:*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24)];
  [*(id *)(*(void *)(a1 + 40) + 96) setTvRestriction:*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 24)];
  [*(id *)(*(void *)(a1 + 40) + 96) setAppRestriction:*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 24)];
  [*(id *)(*(void *)(a1 + 40) + 96) setCountryCode:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];
  [*(id *)(a1 + 40) _setAllowExplicitContent:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 88) + 8) + 24)];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    __int16 v16 = *(uint64_t (**)(void))(result + 16);
    return v16();
  }
  return result;
}

uint64_t sub_1002F9A04(uint64_t a1)
{
  AFDictationRestricted();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1002F9B08(uint64_t a1)
{
  _AFPreferencesForceOnDeviceOnlyDictationEnabled();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1002F9BB0(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create(0, v1);

  uint64_t v3 = (void *)qword_1005862C8;
  qword_1005862C8 = (uint64_t)v2;
}

uint64_t sub_1002F9DD0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;
  return _objc_release_x1(v2, v4);
}

void sub_1002F9F0C(uint64_t a1)
{
}

uint64_t sub_1002FA0E4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 72) = 1;
  if (([*(id *)(*(void *)(a1 + 32) + 64) isEqualToString:*(void *)(a1 + 40)] & 1) == 0)
  {
    id v2 = [*(id *)(a1 + 40) copy];
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v3 + 64);
    *(void *)(v3 + 64) = v2;

    uint64_t v5 = +[ADPreferences sharedPreferences];
    [v5 setCountryCode:*(void *)(a1 + 40)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    unsigned int v7 = *(uint64_t (**)(void))(result + 16);
    return v7();
  }
  return result;
}

void sub_1002FA204(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(NSObject **)(v2 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002FA27C;
  void v4[3] = &unk_10050CD50;
  void v4[4] = v2;
  char v5 = a2;
  dispatch_async(v3, v4);
}

void sub_1002FA27C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 106);
  int v4 = *(unsigned __int8 *)(a1 + 40);
  char v5 = AFSiriLogContextSession;
  BOOL v6 = os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO);
  if (v3 == v4)
  {
    if (v6)
    {
      int v8 = 136315394;
      id v9 = "-[ADAssistantDataManager _updateDictationAllowedStatus]_block_invoke";
      __int16 v10 = 1024;
      int v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Dictation Allowed status: %d", (uint8_t *)&v8, 0x12u);
    }
  }
  else
  {
    if (v6)
    {
      int v8 = 136315650;
      id v9 = "-[ADAssistantDataManager _updateDictationAllowedStatus]_block_invoke_2";
      __int16 v10 = 1024;
      int v11 = v3;
      __int16 v12 = 1024;
      int v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Dictation Allowed status changed from %d -> %d", (uint8_t *)&v8, 0x18u);
      LOBYTE(v4) = *(unsigned char *)(a1 + 40);
      uint64_t v2 = *(void *)(a1 + 32);
    }
    *(unsigned char *)(v2 + 106) = v4;
    unsigned int v7 = +[AFPreferences sharedPreferences];
    [v7 _setDictationIsAllowed:*(unsigned __int8 *)(*(void *)(a1 + 32) + 106)];
  }
}

void sub_1002FA44C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(NSObject **)(v2 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002FA4C4;
  void v4[3] = &unk_10050CD50;
  char v5 = a2;
  void v4[4] = v2;
  dispatch_async(v3, v4);
}

void sub_1002FA4C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = +[ADPreferences sharedPreferences];
    [v2 setSiriDataSharingOptInStatus:2 propagateToHomeAccessories:0 source:10 reason:@"HIPAA MDM profile installed" completion:0];

    int v3 = *(unsigned __int8 *)(a1 + 40);
  }
  else
  {
    int v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(v4 + 105);
  BOOL v6 = AFSiriLogContextSession;
  BOOL v7 = os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO);
  if (v5 == v3)
  {
    if (v7)
    {
      *(_DWORD *)buf = 136315394;
      int v20 = "-[ADAssistantDataManager _notifyObserversOfDictationHIPAAMDMStatus]_block_invoke";
      __int16 v21 = 1024;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Dictation HIPAA MDM status enabled: %d", buf, 0x12u);
    }
  }
  else
  {
    if (v7)
    {
      *(_DWORD *)buf = 136315650;
      int v20 = "-[ADAssistantDataManager _notifyObserversOfDictationHIPAAMDMStatus]_block_invoke_2";
      __int16 v21 = 1024;
      int v22 = v5;
      __int16 v23 = 1024;
      int v24 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Dictation HIPAA MDM status changed from %d -> %d", buf, 0x18u);
      LOBYTE(v3) = *(unsigned char *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 32);
    }
    *(unsigned char *)(v4 + 105) = v3;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v8 = *(id *)(*(void *)(a1 + 32) + 16);
    id v9 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v15 != v11) {
            objc_enumerationMutation(v8);
          }
          int v13 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          if (objc_opt_respondsToSelector()) {
            objc_msgSend(v13, "assistantDataManagerDictationHIPAAMDMStatusDidChange", (void)v14);
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v10);
    }
  }
}

id sub_1002FB0D8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FB148;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateRestrictions:v3];
}

id *sub_1002FB148(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

id sub_1002FB1CC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FB23C;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateVoiceOverStatus:v3];
}

id *sub_1002FB23C(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

id sub_1002FB2C0(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    BOOL v6 = "-[ADAssistantDataManager _safeGenerateAssistantDataForVoiceTriggerEnabled]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Got voice trigger enabled changed notification, updating assistant data", (uint8_t *)&v5, 0xCu);
  }
  id result = sub_1001FD6CC();
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v4 + 73) != result)
  {
    *(unsigned char *)(v4 + 73) = (_BYTE)result;
    return [*(id *)(a1 + 32) _generateAssistantData];
  }
  return result;
}

void sub_1002FB490(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  int v3 = +[GEOCountryConfiguration sharedConfiguration];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002FB538;
  void v4[3] = &unk_10050B918;
  void v4[4] = *(void *)(a1 + 32);
  [v2 _onMainThreadUpdateCountryCodeWithCountryConfiguration:v3 completion:v4];
}

id *sub_1002FB538(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

id sub_1002FB648(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FB6B8;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateVoice:v3];
}

id sub_1002FB6B8(id result, int a2)
{
  if (a2)
  {
    id v2 = result;
    os_signpost_id_t v3 = os_signpost_id_generate(AFSiriLogContextMultiUser);
    uint64_t v4 = AFSiriLogContextMultiUser;
    int v5 = v4;
    if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
    {
      *(_WORD *)BOOL v6 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "MultiUserService", "Start the download of HQ TTS assets for personal requests", v6, 2u);
    }

    *(void *)(*((void *)v2 + 4) + 40) = v3;
    return [*((id *)v2 + 4) _generateAssistantData];
  }
  return result;
}

id sub_1002FB870(uint64_t a1)
{
  +[NSTimeZone resetSystemTimeZone];
  id v2 = *(void **)(a1 + 32);
  return [v2 _generateAssistantData];
}

id sub_1002FBA38(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FBAA8;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateItunesStoreIdentifier:v3];
}

void sub_1002FBAA8(uint64_t a1, int a2)
{
  if (a2)
  {
    os_signpost_id_t v3 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 128);
      int v6 = 136315395;
      BOOL v7 = "-[ADAssistantDataManager _storeFrontDidChange:]_block_invoke_2";
      __int16 v8 = 2113;
      uint64_t v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Current store front has changed to %{private}@; updating assistant data",
        (uint8_t *)&v6,
        0x16u);
    }
    [*(id *)(a1 + 32) _generateAssistantData];
    int v5 = +[NSNotificationCenter defaultCenter];
    [v5 postNotificationName:@"ADAssistantDataManageriTunesStoreFrontIdentifierDidChangeNotification" object:0];
  }
}

id sub_1002FBC9C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FBD0C;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateRestrictions:v3];
}

id *sub_1002FBD0C(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

id sub_1002FBE44(uint64_t a1)
{
  return [*(id *)(a1 + 32) _generateAssistantData];
}

id sub_1002FBF4C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1002FBFBC;
  v3[3] = &unk_10050B918;
  void v3[4] = v1;
  return [v1 _updateVoice:v3];
}

void sub_1002FBFBC(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) _generateAssistantData];
    os_signpost_id_t v3 = AFSiriLogContextMultiUser;
    uint64_t v4 = v3;
    os_signpost_id_t v5 = *(void *)(*(void *)(a1 + 32) + 40);
    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
    {
      *(_WORD *)int v6 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_END, v5, "MultiUserService", "HQV Download finished", v6, 2u);
    }
  }
}

id sub_1002FC1AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _generateAssistantData];
}

void sub_1002FC24C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v2 = +[NSArray arrayWithObjects:&v11 count:1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v3 = *(void *)(*(void *)(a1 + 40) + 24);
  if (v2 | v3 && ![(id)v3 isEqualToArray:v2])
  {
    os_signpost_id_t v5 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
    {
      int v9 = 136315138;
      id v10 = "-[ADAssistantDataManager addressBookManagerDidUpdateData:meCard:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Updating assistant data for me card change notification", (uint8_t *)&v9, 0xCu);
    }
    id v6 = [(id)v2 copy];
    uint64_t v7 = *(void *)(a1 + 40);
    __int16 v8 = *(void **)(v7 + 24);
    *(void *)(v7 + 24) = v6;

    [*(id *)(a1 + 40) _generateAssistantData];
  }
  else
  {
    uint64_t v4 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
    {
      int v9 = 136315138;
      id v10 = "-[ADAssistantDataManager addressBookManagerDidUpdateData:meCard:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s No actual change, ignoring me card change notification", (uint8_t *)&v9, 0xCu);
    }
  }
}

id sub_1002FC4CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002FC558;
  void v4[3] = &unk_10050B918;
  void v4[4] = v2;
  [v2 _updateRestrictions:v4];
  [*(id *)(a1 + 32) _notifyObserversOfDictationHIPAAMDMStatus];
  return [*(id *)(a1 + 32) _updateDictationAllowedStatus];
}

id *sub_1002FC558(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

id *sub_1002FC668(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _generateAssistantData];
  }
  return result;
}

void sub_1002FC720(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 88) || *(void *)(v2 + 32))
  {
    unint64_t v3 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136315138;
      uint64_t v7 = "-[ADAssistantDataManager getAssistantDataWithCompletion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s result is incomplete or missing", (uint8_t *)&v6, 0xCu);
      uint64_t v2 = *(void *)(a1 + 32);
    }
  }
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = [*(id *)(v2 + 144) copy];
  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

id sub_1002FC890(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setAllowExplicitContentAndCensorSpeech:*(unsigned __int8 *)(a1 + 40)];
}

uint64_t sub_1002FC990(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 152) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;
  return _objc_release_x1(v2, v4);
}

void sub_1002FCA84(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (!v2[22])
  {
    __int16 v8 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v19 = "-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Using local store", buf, 0xCu);
    }
    int v9 = +[ADLocalMeCardStore sharedStore];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1002FCD4C;
    v16[3] = &unk_10050B940;
    id v17 = *(id *)(a1 + 40);
    [v9 meCard:v16];

    id v10 = v17;
    goto LABEL_13;
  }
  uint64_t v3 = (void *)v2[3];
  if (!v3)
  {
    uint64_t v11 = v2[4];
    if (v11)
    {
      __int16 v12 = AFSiriLogContextSession;
      if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        __int16 v19 = "-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s Waiting for initial meCard fetch to complete", buf, 0xCu);
        id v2 = *(void **)(a1 + 32);
        uint64_t v11 = v2[4];
      }
      int v13 = v2[1];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1002FCE84;
      block[3] = &unk_10050E188;
      void block[4] = v2;
      id v15 = *(id *)(a1 + 40);
      dispatch_group_notify(v11, v13, block);
      id v10 = v15;
LABEL_13:

      return;
    }
  }
  uint64_t v4 = (void *)AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    *(_DWORD *)buf = 136315394;
    __int16 v19 = "-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke";
    __int16 v20 = 2048;
    id v21 = [v3 count];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Returning %lu meCards", buf, 0x16u);

    uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 24);
  }
  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = [v3 copy];
  (*(void (**)(uint64_t, id))(v6 + 16))(v6, v7);
}

void sub_1002FCD4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    CFStringRef v5 = @"a";
    if (!v3) {
      CFStringRef v5 = @"NO";
    }
    *(_DWORD *)buf = 136315394;
    id v10 = "-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke";
    __int16 v11 = 2112;
    CFStringRef v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Found %@ meCard locally", buf, 0x16u);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v3)
  {
    id v8 = v3;
    id v7 = +[NSArray arrayWithObjects:&v8 count:1];
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
  }
}

void sub_1002FCE84(uint64_t a1)
{
  id v2 = (void *)AFSiriLogContextSession;
  if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 24);
    uint64_t v4 = v2;
    int v7 = 136315394;
    id v8 = "-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke";
    __int16 v9 = 2048;
    id v10 = [v3 count];
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s meCard fetch complete, got %lu meCards", (uint8_t *)&v7, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
}

void sub_1002FD030(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[16];
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    id v6 = [v3 copy];
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }
  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_1002FD110;
    v7[3] = &unk_10050C890;
    id v5 = *(id *)(a1 + 40);
    void v7[4] = *(void *)(a1 + 32);
    id v8 = v5;
    [v2 _updateItunesStoreIdentifier:v7];
  }
}

void sub_1002FD110(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(*(void *)(a1 + 32) + 128) copy];
  (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);

  if (a2)
  {
    id v5 = +[NSNotificationCenter defaultCenter];
    [v5 postNotificationName:@"ADAssistantDataManageriTunesStoreFrontIdentifierDidChangeNotification" object:0];
  }
}

id sub_1002FD318(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1[18]) {
    return objc_msgSend(v1, "_notifyObserversOfSAD:");
  }
  else {
    return [v1 _generateAssistantData];
  }
}

id sub_1002FD3C4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObject:*(void *)(a1 + 40)];
}

id sub_1002FD468(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
}

void sub_1002FDEC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = v4[1];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002FE53C;
  block[3] = &unk_10050DCB8;
  id v8 = v4;
  id v9 = v3;
  id v10 = *(id *)(a1 + 40);
  id v6 = v3;
  dispatch_async(v5, block);
}

void sub_1002FDF88(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = v4[1];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002FE464;
  block[3] = &unk_10050DCB8;
  id v8 = v4;
  id v9 = v3;
  id v10 = *(id *)(a1 + 40);
  id v6 = v3;
  dispatch_async(v5, block);
}

void sub_1002FE050(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1002FE45C;
  v2[3] = &unk_10050B918;
  uint64_t v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  [v1 _updateVoice:v2];
}

void sub_1002FE0D8(uint64_t a1)
{
}

void sub_1002FE0E0(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1002FE454;
  v2[3] = &unk_10050B918;
  uint64_t v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  [v1 _updateVoiceOverStatus:v2];
}

void sub_1002FE168(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1002FE44C;
  v2[3] = &unk_10050B918;
  uint64_t v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  [v1 _updateItunesStoreIdentifier:v2];
}

void sub_1002FE1F0(uint64_t a1)
{
  id v2 = +[GEOCountryConfiguration sharedConfiguration];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002FE444;
  void v4[3] = &unk_10050B918;
  id v3 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v3 _onMainThreadUpdateCountryCodeWithCountryConfiguration:v2 completion:v4];
}

void sub_1002FE2A0(uint64_t a1)
{
}

void *sub_1002FE2A8(void *result)
{
  uint64_t v1 = result[4];
  if (!*(unsigned char *)(v1 + 88))
  {
    id v2 = result;
    id v3 = AFSiriLogContextSession;
    if (os_log_type_enabled(AFSiriLogContextSession, OS_LOG_TYPE_INFO))
    {
      int v4 = 136315138;
      id v5 = "-[ADAssistantDataManager initWithInstanceContext:]_block_invoke_15";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Initial fetch took too long, timing out.", (uint8_t *)&v4, 0xCu);
      uint64_t v1 = v2[4];
    }
    *(unsigned char *)(v1 + 88) = 1;
    return [(id)v2[4] _generateAssistantData];
  }
  return result;
}

id sub_1002FE37C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 88) = 1;
  return [*(id *)(a1 + 32) _generateAssistantData];
}

void sub_1002FE390(uint64_t a1, char a2)
{
  id v3 = *(void **)(a1 + 32);
  int v4 = v3[1];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1002FE434;
  v5[3] = &unk_10050CD50;
  id v6 = v3;
  char v7 = a2;
  dispatch_async(v4, v5);
}

id sub_1002FE424(uint64_t a1, void *a2)
{
  return _[a2 _safeUpdateVoiceOverStatus];
}

id sub_1002FE42C(uint64_t a1, void *a2)
{
  return _[a2 _safeGenerateAssistantDataForVoiceTriggerEnabled];
}

uint64_t sub_1002FE434(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 105) = *(unsigned char *)(result + 40);
  return result;
}

void sub_1002FE444(uint64_t a1)
{
}

void sub_1002FE44C(uint64_t a1)
{
}

void sub_1002FE454(uint64_t a1)
{
}

void sub_1002FE45C(uint64_t a1)
{
}

void sub_1002FE464(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v1 = [*(id *)(a1 + 40) copy];
    id v7 = v1;
    int v4 = +[NSArray arrayWithObjects:&v7 count:1];
  }
  else
  {
    int v4 = 0;
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), v4);
  if (v3)
  {
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 32) + 32));
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 32);
  *(void *)(v5 + 32) = 0;
}

void sub_1002FE53C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v1 = [*(id *)(a1 + 40) copy];
    id v7 = v1;
    int v4 = +[NSArray arrayWithObjects:&v7 count:1];
  }
  else
  {
    int v4 = 0;
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), v4);
  if (v3)
  {
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 32) + 32));
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 32);
  *(void *)(v5 + 32) = 0;
}

void sub_1002FE6B4(id a1)
{
  id v1 = objc_alloc_init(ADAssistantDataManager);
  uint64_t v2 = qword_1005862B0;
  qword_1005862B0 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1002FECDC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_1002FEE68(void *a1, const char *a2, uint64_t a3, unsigned int a4)
{
  return [a1 _powerChangedMessageType:a3 notificationID:a4];
}

id sub_1002FEF50(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1[533]) {
    return [v1 _restartConnectionProviders];
  }
  else {
    return [v1 _closeNetworkConnection];
  }
}

void sub_1002FF018(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextProxy;
  if (v3)
  {
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136315394;
      id v7 = "-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke";
      __int16 v8 = 2114;
      id v9 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s %{public}@", (uint8_t *)&v6, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void **)(a1 + 32);
    int v6 = 136315394;
    id v7 = "-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke";
    __int16 v8 = 2048;
    id v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Wrote: %lu", (uint8_t *)&v6, 0x16u);
  }
}

void sub_1002FF598(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 40);
  if (*(void *)(a1 + 32) == v7[5])
  {
    if (v6)
    {
      [v7 _networkConnectionErrorOccurred:v6];
    }
    else if (v5)
    {
      [v7 _networkConnectionReceivedData:v5];
      [*(id *)(a1 + 40) _waitForNetworkData];
    }
    else
    {
      __int16 v8 = AFSiriLogContextProxy;
      if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
      {
        int v9 = 136315138;
        id v10 = "-[ADSiriConnectionRemote _waitForNetworkData]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s no data or error, possibly an already canceled connection", (uint8_t *)&v9, 0xCu);
      }
    }
  }
}

void sub_1002FF738(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextProxy;
  if (v3)
  {
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136315394;
      id v7 = "-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke";
      __int16 v8 = 2114;
      id v9 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s %{public}@", (uint8_t *)&v6, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
  {
    id v5 = *(void **)(a1 + 32);
    int v6 = 136315394;
    id v7 = "-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke";
    __int16 v8 = 2048;
    id v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Wrote: %lu", (uint8_t *)&v6, 0x16u);
  }
}

void sub_1002FFD60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 32);
  if (v7[3] == *(void *)(a1 + 40))
  {
    __int16 v8 = AFSiriLogContextProxy;
    BOOL v9 = os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO);
    if (!v5 || v6)
    {
      if (v9)
      {
        int v10 = 136315394;
        __int16 v11 = "-[ADSiriConnectionRemote _waitForPeerData]_block_invoke";
        __int16 v12 = 2112;
        size_t size = (size_t)v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s error: %@", (uint8_t *)&v10, 0x16u);
        id v7 = *(void **)(a1 + 32);
      }
      [v7 _peerReadStreamErrorOccurred:v6];
    }
    else
    {
      if (v9)
      {
        int v10 = 136315394;
        __int16 v11 = "-[ADSiriConnectionRemote _waitForPeerData]_block_invoke";
        __int16 v12 = 2048;
        size_t size = dispatch_data_get_size(v5);
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s read %lu bytes", (uint8_t *)&v10, 0x16u);
        id v7 = *(void **)(a1 + 32);
      }
      [v7 _peerConnectionReceivedData:v5];
      [*(id *)(a1 + 32) _waitForPeerData];
    }
  }
}

void sub_100300024(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v2[5] == v3)
  {
    id v7 = AFSiriLogContextProxy;
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315138;
      BOOL v9 = "-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Network Provider", (uint8_t *)&v8, 0xCu);
      uint64_t v2 = *(void **)(a1 + 32);
    }
    [v2 _networkConnectionFailure];
  }
  else
  {
    uint64_t v4 = v2[3];
    id v5 = AFSiriLogContextProxy;
    BOOL v6 = os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO);
    if (v4 == v3)
    {
      if (v6)
      {
        int v8 = 136315138;
        BOOL v9 = "-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Peer Provider", (uint8_t *)&v8, 0xCu);
        uint64_t v2 = *(void **)(a1 + 32);
      }
      [v2 _peerConnectionFailure];
    }
    else if (v6)
    {
      int v8 = 136315394;
      BOOL v9 = "-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke";
      __int16 v10 = 2112;
      uint64_t v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Unexpected %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_100300328(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextProxy;
  if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
  {
    int v6 = 136315138;
    id v7 = "-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Stale network timer firing", (uint8_t *)&v6, 0xCu);
  }
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v3 == *(void **)(v4 + 56))
  {
    *(void *)(v4 + 56) = 0;

    uint64_t v4 = *(void *)(a1 + 40);
  }
  if (*(void *)(v4 + 40) == *(void *)(a1 + 48) && !*(unsigned char *)(v4 + 48))
  {
    id v5 = AFSiriLogContextProxy;
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
    {
      int v6 = 136315138;
      id v7 = "-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Closing potentially stale network streams", (uint8_t *)&v6, 0xCu);
      uint64_t v4 = *(void *)(a1 + 40);
    }
    [(id)v4 _closeNetworkConnection];
  }
}

void sub_100300FD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextProxy;
  if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke";
    __int16 v19 = 2048;
    uint64_t v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s open complete %ld", buf, 0x16u);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(NSObject **)(v6 + 8);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100301148;
  v11[3] = &unk_10050BAE8;
  uint64_t v8 = *(void *)(a1 + 56);
  v11[4] = v6;
  uint64_t v15 = v8;
  id v12 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 64);
  id v13 = v9;
  id v14 = v3;
  id v10 = v3;
  dispatch_async(v7, v11);
}

void sub_100301148(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = v2[522];
  uint64_t v4 = a1[8];
  if (v3 != v4)
  {
    id v9 = AFSiriLogContextProxy;
    if (!os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO)) {
      return;
    }
    int v10 = 136315650;
    uint64_t v11 = "-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke";
    __int16 v12 = 2048;
    uint64_t v13 = v4;
    __int16 v14 = 2048;
    uint64_t v15 = v3;
    uint64_t v6 = "%s sequence number %ld doesn't match current %ld. Ignoring";
    id v7 = v9;
    uint32_t v8 = 32;
    goto LABEL_7;
  }
  if (v2[5] != a1[5])
  {
    uint64_t v5 = AFSiriLogContextProxy;
    if (!os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO)) {
      return;
    }
    int v10 = 136315138;
    uint64_t v11 = "-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke";
    uint64_t v6 = "%s Provider doesn't match our current provider. Ignoring";
    id v7 = v5;
    uint32_t v8 = 12;
LABEL_7:
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v10, v8);
    return;
  }
  objc_msgSend(v2, "_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:");
}

void sub_100301428(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextProxy;
  if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    id v7 = "-[ADSiriConnectionRemote peerStreamConnection:requestMetrics:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s ", buf, 0xCu);
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100301538;
  void v4[3] = &unk_10050BAC0;
  uint64_t v3 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v3 _connectionMetricsWithCompletion:v4];
}

uint64_t sub_100301538(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100301650(uint64_t a1)
{
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 24) isEstablishing];
  if ([*(id *)(a1 + 32) _hasPeerConnection] & 1) != 0 || (v2)
  {
    uint64_t v3 = AFSiriLogContextProxy;
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
    {
      CFStringRef v4 = @"have active";
      if (v2) {
        CFStringRef v4 = @"establishing";
      }
      int v10 = 136315394;
      uint64_t v11 = "-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke";
      __int16 v12 = 2112;
      CFStringRef v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Already %@ peer streams", (uint8_t *)&v10, 0x16u);
    }
  }
  else
  {
    [*(id *)(a1 + 32) _establishPeerConnection];
  }
  if ([*(id *)(a1 + 32) _hasOrIsEstablishingNetworkConnection])
  {
    id v5 = (void *)AFSiriLogContextProxy;
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void **)(*(void *)(a1 + 32) + 40);
      id v7 = v5;
      unsigned int v8 = [v6 isEstablishing];
      CFStringRef v9 = @"have active";
      if (v8) {
        CFStringRef v9 = @"establishing";
      }
      int v10 = 136315394;
      uint64_t v11 = "-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke";
      __int16 v12 = 2112;
      CFStringRef v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Already %@ network connection", (uint8_t *)&v10, 0x16u);
    }
  }
  else
  {
    [*(id *)(a1 + 32) _establishNetworkConnectionToURL:*(void *)(*(void *)(a1 + 32) + 4160) connectionId:0 withPOP:0];
  }
}

id sub_10030193C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _peerReadStreamErrorOccurred:*(void *)(a1 + 40)];
}

void sub_100301D58(uint64_t a1)
{
}

void sub_100301F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100301F28(uint64_t a1, int a2, int a3, UInt8 *newBytes, CFIndex numBytes)
{
  int appended = CFHTTPMessageAppendBytes(*(CFHTTPMessageRef *)(a1 + 40), newBytes, numBytes);
  if (appended) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += numBytes;
  }
  return appended != 0;
}

void sub_1003025BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  CFStringRef v4 = *(void **)(a1 + 32);
  if (v4[3] == *(void *)(a1 + 40))
  {
    uint64_t v6 = AFSiriLogContextProxy;
    if (v3)
    {
      if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_ERROR))
      {
        int v8 = 136315394;
        CFStringRef v9 = "-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke";
        __int16 v10 = 2114;
        id v11 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Error: %{public}@", (uint8_t *)&v8, 0x16u);
        CFStringRef v4 = *(void **)(a1 + 32);
      }
      [v4 _closePeerConnection];
    }
    else
    {
      if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
      {
        int v8 = 136315138;
        CFStringRef v9 = "-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Peer Provider open complete", (uint8_t *)&v8, 0xCu);
        CFStringRef v4 = *(void **)(a1 + 32);
      }
      id v7 = (void *)v4[533];
      v4[533] = 0;

      objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), &_dispatch_data_empty);
      *(void *)(*(void *)(a1 + 32) + 4168) = CFHTTPMessageCreateEmpty(0, 1u);
      [*(id *)(a1 + 32) _waitForPeerData];
    }
  }
  else
  {
    id v5 = AFSiriLogContextProxy;
    if (os_log_type_enabled(AFSiriLogContextProxy, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315138;
      CFStringRef v9 = "-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Ignoring completion from stale provider", (uint8_t *)&v8, 0xCu);
    }
  }
}

id sub_100302BDC(uint64_t a1)
{
  [*(id *)(a1 + 32) _preheat];
  unsigned int v2 = *(void **)(a1 + 32);
  return [v2 _registerForSleepNotification];
}

void sub_100304B8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      uint64_t v16 = "-[ADCloudKitKeyValueDataStore _mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:]_block_invoke";
      __int16 v17 = 2112;
      uint64_t v18 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save keys: %@", buf, 0x16u);
    }
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      uint64_t v16 = "-[ADCloudKitKeyValueDataStore _mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:]_block_invoke";
      __int16 v17 = 2112;
      uint64_t v18 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Successfully saved keys: %@", buf, 0x16u);
    }
    if ([*(id *)(a1 + 40) dataStoreShouldMirrorData])
    {
      __int16 v10 = +[ADCloudKitManager sharedManager];
      uint64_t v11 = *(void *)(a1 + 48);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_100304D80;
      void v13[3] = &unk_10050D700;
      id v14 = *(id *)(a1 + 32);
      [v10 saveKeyValueRecordsWithDictionary:v11 mirror:1 completion:v13];
    }
  }
  uint64_t v12 = *(void *)(a1 + 56);
  if (v12) {
    (*(void (**)(uint64_t, id))(v12 + 16))(v12, v5);
  }
}

void sub_100304D80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  BOOL v8 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (v5)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v12 = 136315394;
      CFStringRef v13 = "-[ADCloudKitKeyValueDataStore _mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:]_block_invoke";
      __int16 v14 = 2112;
      uint64_t v15 = v9;
      __int16 v10 = "%s Failed to save mirror keys: %@";
LABEL_7:
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, v10, (uint8_t *)&v12, 0x16u);
    }
  }
  else if (v8)
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = 136315394;
    CFStringRef v13 = "-[ADCloudKitKeyValueDataStore _mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v11;
    __int16 v10 = "%s Successfully saved mirror keys: %@";
    goto LABEL_7;
  }
}

void sub_100305408(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      uint64_t v15 = "-[ADCloudKitKeyValueDataStore synchronizeKeychainPreferencesWithCompletion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save keys: %@", buf, 0x16u);
    }
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      uint64_t v15 = "-[ADCloudKitKeyValueDataStore synchronizeKeychainPreferencesWithCompletion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Successfully saved keys: %@", buf, 0x16u);
    }
    if ([*(id *)(a1 + 40) dataStoreShouldMirrorData])
    {
      __int16 v10 = +[ADCloudKitManager sharedManager];
      uint64_t v11 = *(void *)(a1 + 48);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1003055E4;
      void v12[3] = &unk_10050D700;
      id v13 = *(id *)(a1 + 32);
      [v10 saveKeyValueRecordsWithDictionary:v11 mirror:1 completion:v12];
    }
  }
}

void sub_1003055E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 136315394;
      __int16 v10 = "-[ADCloudKitKeyValueDataStore synchronizeKeychainPreferencesWithCompletion:]_block_invoke";
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save mirror keys: %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

void sub_100306880(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315650;
      __int16 v19 = "-[ADCloudKitKeyValueDataStore synchronizeWithCompletion:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v14;
      __int16 v22 = 2112;
      id v23 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save keys (%@) with error: %@", buf, 0x20u);
    }
    uint64_t v8 = *(void *)(a1 + 56);
    if (v8)
    {
      int v9 = *(void (**)(void))(v8 + 16);
LABEL_12:
      v9();
    }
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      __int16 v19 = "-[ADCloudKitKeyValueDataStore synchronizeWithCompletion:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Successfully saved keys: %@", buf, 0x16u);
    }
    if ([*(id *)(a1 + 40) dataStoreShouldMirrorData])
    {
      __int16 v11 = +[ADCloudKitManager sharedManager];
      uint64_t v12 = *(void *)(a1 + 48);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_100306BB0;
      v15[3] = &unk_10050D750;
      id v16 = *(id *)(a1 + 32);
      id v17 = *(id *)(a1 + 56);
      [v11 saveKeyValueRecordsWithDictionary:v12 mirror:1 completion:v15];
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 56);
      if (v13)
      {
        int v9 = *(void (**)(void))(v13 + 16);
        goto LABEL_12;
      }
    }
  }
}

void sub_100306AAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 136315650;
    __int16 v11 = "-[ADCloudKitKeyValueDataStore synchronizeWithCompletion:]_block_invoke";
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save keys (%@) with error: %@", (uint8_t *)&v10, 0x20u);
  }
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
}

void sub_100306BB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 136315394;
      __int16 v11 = "-[ADCloudKitKeyValueDataStore synchronizeWithCompletion:]_block_invoke";
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to save mirror keys: %@", (uint8_t *)&v10, 0x16u);
    }
  }
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v8, 1);
  }
}

void sub_100306D94(id a1, NSException *a2)
{
  unsigned int v2 = a2;
  id v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    id v5 = "-[ADCloudKitKeyValueDataStore setServerChangeToken:]_block_invoke";
    __int16 v6 = 2112;
    id v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Error encountered while encoding key-value store server change token: %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100306EE0(id a1, NSException *a2)
{
  unsigned int v2 = a2;
  id v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    id v5 = "-[ADCloudKitKeyValueDataStore serverChangeToken]_block_invoke";
    __int16 v6 = 2112;
    id v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Error encountered while decoding key-value store server change token: %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100307A78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Block_object_dispose((const void *)(v2 - 120), 8);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_100307AAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100307ABC(uint64_t a1)
{
}

void sub_100307AC4(uint64_t a1, uint64_t a2)
{
  if (a2 == -2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained timeoutDetected];
  }
}

id sub_100307B10(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:-2];
}

void sub_100307B1C(uint64_t a1)
{
  [*(id *)(a1 + 32) invokeWithSignal:0];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100307BA4;
  block[3] = &unk_10050E318;
  uint64_t v2 = *(NSObject **)(a1 + 40);
  void block[4] = *(void *)(a1 + 48);
  dispatch_async(v2, block);
}

id sub_100307BA4(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) cancelIfNotAlreadyCanceled];
}

void sub_100307E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100307EAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained heartBeatFiredWithQueue:*(void *)(a1 + 32)];
}

id sub_1003080AC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _endMonitoring];
}

id sub_1003081B8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _beginMonitoring];
}

id sub_100308258(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeQueue:*(void *)(a1 + 40)];
}

id sub_10030833C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _addQueue:*(void *)(a1 + 40) heartBeatInterval:*(void *)(a1 + 48) timeoutInterval:*(double *)(a1 + 56) timeoutHandler:*(double *)(a1 + 64)];
}

void sub_100308460(id a1)
{
  id v1 = objc_alloc_init(ADQueueMonitor);
  uint64_t v2 = qword_1005862E8;
  qword_1005862E8 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_100308988(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setUUID:v3];
  [v4 setProperties:*(void *)(a1 + 40)];
}

id sub_1003093F0()
{
  if (qword_100586318 != -1) {
    dispatch_once(&qword_100586318, &stru_10050BD08);
  }
  v0 = (void *)qword_1005862F8;
  return v0;
}

void sub_100309444(id a1)
{
  if (qword_100586308 != -1) {
    dispatch_once(&qword_100586308, &stru_10050BCE8);
  }
  id v1 = (id *)dlsym((void *)qword_100586310, "ANUserInfoLatestAnnouncementIDKey");
  if (v1) {
    objc_storeStrong((id *)&qword_1005862F8, *v1);
  }
  off_100584218 = sub_1003094BC;
}

id sub_1003094BC()
{
  return (id)qword_1005862F8;
}

void sub_1003094C8(id a1)
{
  qword_100586310 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/Announce.framework/Announce", 2);
}

id sub_1003094F4()
{
  if (qword_100586300 != -1) {
    dispatch_once(&qword_100586300, &stru_10050BCC8);
  }
  v0 = (void *)qword_1005862F0;
  return v0;
}

void sub_100309548(id a1)
{
  if (qword_100586308 != -1) {
    dispatch_once(&qword_100586308, &stru_10050BCE8);
  }
  id v1 = (id *)dlsym((void *)qword_100586310, "ANUserInfoNotificationTypeKey");
  if (v1) {
    objc_storeStrong((id *)&qword_1005862F0, *v1);
  }
  off_100584210 = sub_1003095C0;
}

id sub_1003095C0()
{
  return (id)qword_1005862F0;
}

void sub_10030A9A8(uint64_t a1, uint64_t a2)
{
  if (a2 == 3)
  {
    uint64_t v3 = +[AFPreferences sharedPreferences];
    id v4 = [v3 languageCode];
  }
  else
  {
    id v4 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10030AF50(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 136315394;
      uint64_t v8 = "-[ADIntentVocabularyUpdateConnection _deleteEverythingOnBehalfOf:withDataStorageManager:]_block_invoke";
      __int16 v9 = 2114;
      uint64_t v10 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s User-vocabulary updates are throttled for %{public}@ not pushing delete", (uint8_t *)&v7, 0x16u);
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v4 = *(void **)(a1 + 40);
    _[v4 _triggerUserVocabularySyncAttributingApp:v5 vocabType:@"RESET"];
  }
}

void sub_10030B14C(void *a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)a1[4];
    uint64_t v4 = a1[5];
    uint64_t v5 = a1[6];
    _[v3 _triggerUserVocabularySyncAttributingApp:v4 vocabType:v5];
  }
  else
  {
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = a1[5];
      uint64_t v8 = a1[6];
      int v9 = 136315650;
      uint64_t v10 = "-[ADIntentVocabularyUpdateConnection _askToSyncSlot:onBehalfOf:]_block_invoke";
      __int16 v11 = 2114;
      uint64_t v12 = v7;
      __int16 v13 = 2114;
      uint64_t v14 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Ignoring attempt by %{public}@ to update %{public}@", (uint8_t *)&v9, 0x20u);
    }
  }
}

uint64_t sub_10030B474(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10030B62C;
    void v14[3] = &unk_10050BD30;
    int8x16_t v13 = *(int8x16_t *)(a1 + 48);
    id v6 = (id)v13.i64[0];
    int8x16_t v15 = vextq_s8(v13, v13, 8uLL);
    id v16 = *(id *)(a1 + 64);
    [v4 writeLatestVocabularyItems:v5 forIntentSlot:v6 completion:v14];
  }
  else
  {
    uint64_t v7 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v9 = *(void **)(a1 + 32);
      uint64_t v10 = v7;
      __int16 v11 = [v9 appBundleID];
      uint64_t v12 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 136315650;
      uint64_t v18 = "-[ADIntentVocabularyUpdateConnection _recordVocabulary:forIntentSlot:onBehalfOf:withDataStorageManager:withV"
            "alidationCompletion:]_block_invoke";
      __int16 v19 = 2114;
      __int16 v20 = v11;
      __int16 v21 = 2114;
      uint64_t v22 = v12;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s %{public}@ is not allowed to sync user vocabulary of type %{public}@", buf, 0x20u);
    }
  }
  uint64_t result = *(void *)(a1 + 72);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void sub_10030B62C(void *a1, int a2)
{
  if (a2)
  {
    if (+[_INSiriAuthorizationManager _siriAuthorizationStatusForAppID:*(void *)(a1[4] + 8) intentSlot:a1[5]] == (id)3)
    {
      notify_post(INVoocabularyChangedNotification);
      uint64_t v3 = (void *)a1[4];
      uint64_t v4 = a1[5];
      uint64_t v5 = a1[6];
      _[v3 askToSyncSlot:v4 onBehalfOf:v5];
    }
    else
    {
      id v6 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(a1[4] + 8);
        int v8 = 136315394;
        int v9 = "-[ADIntentVocabularyUpdateConnection _recordVocabulary:forIntentSlot:onBehalfOf:withDataStorageManager:with"
             "ValidationCompletion:]_block_invoke_2";
        __int16 v10 = 2112;
        uint64_t v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Vocabulary updates are disabled for %@, acting as-if there are no changes.", (uint8_t *)&v8, 0x16u);
      }
    }
  }
}

id sub_10030C068()
{
  if (qword_100586360 != -1) {
    dispatch_once(&qword_100586360, &stru_10050BE48);
  }
  v0 = (void *)qword_100586368;
  return v0;
}

void sub_10030C0BC(id a1)
{
  if (qword_100586340 != -1) {
    dispatch_once(&qword_100586340, &stru_10050BE08);
  }
  qword_100586368 = (uint64_t)objc_getClass("ANAnnounceFeatureStatus");
  off_1005842F0 = sub_10030C120;
}

id sub_10030C120()
{
  return (id)qword_100586368;
}

void sub_10030C12C(id a1)
{
  qword_100586348 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/Announce.framework/Announce", 2);
}

void sub_10030C2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

uint64_t sub_10030C2F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10030C300(uint64_t a1)
{
}

void sub_10030C308(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      int v11 = 136315394;
      uint64_t v12 = "-[ADHomeAnnouncementService _stopPlayback]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v3;
      id v6 = "%s Failed asking Announce to stop playing due to error %@.";
      uint64_t v7 = v4;
      uint32_t v8 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v11, v8);
    }
  }
  else if (v5)
  {
    int v11 = 136315138;
    uint64_t v12 = "-[ADHomeAnnouncementService _stopPlayback]_block_invoke";
    id v6 = "%s Done asking Announce to stop playing.";
    uint64_t v7 = v4;
    uint32_t v8 = 12;
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = 0;
}

id sub_10030C42C()
{
  if (qword_100586350 != -1) {
    dispatch_once(&qword_100586350, &stru_10050BE28);
  }
  v0 = (void *)qword_100586358;
  return v0;
}

void sub_10030C480(id a1)
{
  if (qword_100586340 != -1) {
    dispatch_once(&qword_100586340, &stru_10050BE08);
  }
  qword_100586358 = (uint64_t)objc_getClass("ANLocalPlaybackSession");
  off_1005842E8 = sub_10030C4E4;
}

id sub_10030C4E4()
{
  return (id)qword_100586358;
}

void sub_10030C5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    id v6 = "-[ADHomeAnnouncementService _stopPlaybackIfNeeded]_block_invoke";
    __int16 v7 = 2048;
    uint64_t v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Announce state is %llu.", (uint8_t *)&v5, 0x16u);
  }
  if (a2 == 1) {
    [*(id *)(a1 + 32) _stopPlayback];
  }
}

id sub_10030C740(uint64_t a1)
{
  id result = +[AFFeatureFlags isAnnounceEnabled];
  if (result)
  {
    id result = [*(id *)(a1 + 32) _shouldStopPlaybackWhenRequestBegins];
    if (result)
    {
      id v3 = *(void **)(a1 + 32);
      return _[v3 _stopPlaybackIfNeeded];
    }
  }
  return result;
}

id sub_10030C970()
{
  if (qword_100586338 != -1) {
    dispatch_once(&qword_100586338, &stru_10050BDE8);
  }
  v0 = (void *)qword_100586330;
  return v0;
}

void sub_10030C9C4(id a1)
{
  if (qword_100586340 != -1) {
    dispatch_once(&qword_100586340, &stru_10050BE08);
  }
  id v1 = (id *)dlsym((void *)qword_100586348, "kANAnnounceStateNotificationKey");
  if (v1) {
    objc_storeStrong((id *)&qword_100586330, *v1);
  }
  off_1005842E0 = sub_10030CA3C;
}

id sub_10030CA3C()
{
  return (id)qword_100586330;
}

id sub_10030CABC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _stopPlayback];
}

void sub_10030CB18(id a1)
{
  id v1 = [ADHomeAnnouncementService alloc];
  id v4 = +[AFInstanceContext currentContext];
  uint64_t v2 = [(ADHomeAnnouncementService *)v1 initWithInstanceContext:v4];
  id v3 = (void *)qword_100586328;
  qword_100586328 = (uint64_t)v2;
}

void sub_10030DAC4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v4 = WeakRetained[2];
    id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v10;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v10 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * (void)v8), "availableAnnouncementRequestTypesChanged:onPlatform:", *(void *)(a1 + 48), objc_msgSend((id)objc_opt_class(), "platform", (void)v9));
          uint64_t v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v6);
    }
  }
}

void sub_10030DD60(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v4 = WeakRetained[2];
    id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v10;
      do
      {
        uint64_t v8 = 0;
        do
        {
          if (*(void *)v10 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * (void)v8), "eligibleAnnouncementRequestTypesChanged:onPlatform:", *(void *)(a1 + 48), objc_msgSend((id)objc_opt_class(), "platform", (void)v9));
          uint64_t v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v6);
    }
  }
}

void sub_10030DF60(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained[2] removeObject:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10030E088(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained[2] addObject:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10030ED94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10030EDB8(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_100586378)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10030F204;
    void v6[4] = &unk_10050E350;
    void v6[5] = v6;
    long long v7 = off_10050BE90;
    uint64_t v8 = 0;
    qword_100586378 = _sl_dlopen();
  }
  if (!qword_100586378)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v4 = +[NSString stringWithUTF8String:"void *CoreServicesLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"AFSiriAnnouncementRequestCapabilityManager.m", 18, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("LSApplicationRecord");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getLSApplicationRecordClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"AFSiriAnnouncementRequestCapabilityManager.m", 19, @"Unable to find class %s", "LSApplicationRecord");

LABEL_10:
    __break(1u);
  }
  qword_100586370 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_10030EFA4(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_100586388)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10030F190;
    void v6[4] = &unk_10050E350;
    void v6[5] = v6;
    long long v7 = off_10050BEA8;
    uint64_t v8 = 0;
    qword_100586388 = _sl_dlopen();
  }
  if (!qword_100586388)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v4 = +[NSString stringWithUTF8String:"void *IntentsLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"AFSiriAnnouncementRequestCapabilityManager.m", 24, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("INAppInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getINAppInfoClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"AFSiriAnnouncementRequestCapabilityManager.m", 25, @"Unable to find class %s", "INAppInfo");

LABEL_10:
    __break(1u);
  }
  qword_100586380 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10030F190()
{
  uint64_t result = _sl_dlopen();
  qword_100586388 = result;
  return result;
}

uint64_t sub_10030F204()
{
  uint64_t result = _sl_dlopen();
  qword_100586378 = result;
  return result;
}

void sub_10030FBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10030FC10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10030FC20(uint64_t a1)
{
}

void sub_10030FC28(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v13 = v3;
  id v5 = [v3 firedDate];
  id v6 = v5;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  if (v4)
  {
    [v5 timeIntervalSinceDate:v8];
    double v10 = v9;

    if (v10 <= 0.0) {
      goto LABEL_6;
    }
    uint64_t v11 = [v13 firedDate];
    uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v8 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
  else
  {
    *(void *)(v7 + 40) = v5;
  }

LABEL_6:
}

void sub_10030FCF0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v13 = v3;
  id v5 = [v3 firedDate];
  id v6 = v5;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  if (v4)
  {
    [v5 timeIntervalSinceDate:v8];
    double v10 = v9;

    if (v10 <= 0.0) {
      goto LABEL_6;
    }
    uint64_t v11 = [v13 firedDate];
    uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v8 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
  else
  {
    *(void *)(v7 + 40) = v5;
  }

LABEL_6:
}

void sub_10030FFCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_halDeviceFromContext:proximity:", v5, objc_msgSend(a3, "integerValue"));
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  [*(id *)(a1 + 40) addObject:v6];
}

id sub_1003104B8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[CKContainer containerWithIdentifier:v1];
  id v3 = objc_opt_new();
  [v3 setUseZoneWidePCS:1];
  id v4 = objc_alloc((Class)CKContainer);
  id v5 = [v2 containerID];
  id v6 = [v4 initWithContainerID:v5 options:v3];

  return v6;
}

void sub_100310728(void *a1, void *a2, int a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  double v10 = (void (**)(void, void, void))v9;
  if (v8)
  {
    id v11 = [objc_alloc((Class)CKRecordZone) initWithZoneID:v7];
    uint64_t v12 = v11;
    if (a3) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = 3;
    }
    [v11 setCapabilities:v13];
    id v14 = objc_alloc((Class)CKModifyRecordZonesOperation);
    id v28 = v12;
    int8x16_t v15 = +[NSArray arrayWithObjects:&v28 count:1];
    id v16 = [v14 initWithRecordZonesToSave:v15 recordZoneIDsToDelete:0];

    __int16 v20 = _NSConcreteStackBlock;
    uint64_t v21 = 3221225472;
    uint64_t v22 = sub_1003109A0;
    id v23 = &unk_10050BF60;
    id v24 = v7;
    id v25 = v10;
    [v16 setModifyRecordZonesCompletionBlock:&v20];
    id v17 = objc_alloc_init((Class)CKOperationConfiguration);
    objc_msgSend(v17, "setDiscretionaryNetworkBehavior:", 0, v20, v21, v22, v23);
    [v17 setAutomaticallyRetryNetworkFailures:0];
    [v16 setConfiguration:v17];
    [v16 setQualityOfService:17];
    uint64_t v18 = [v8 privateCloudDatabase];
    [v18 addOperation:v16];

LABEL_10:
    goto LABEL_11;
  }
  if (v9)
  {
    __int16 v19 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v27 = "ADCloudKitCreateRecordZoneWithID";
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%s No container specified", buf, 0xCu);
    }
    uint64_t v12 = +[AFError errorWithCode:4023];
    ((void (**)(void, void *, void))v10)[2](v10, v12, 0);
    goto LABEL_10;
  }
LABEL_11:
}

void sub_1003109A0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    double v10 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void **)(a1 + 32);
      id v14 = v10;
      int8x16_t v15 = [v13 zoneName];
      int v16 = 136315650;
      id v17 = "ADCloudKitCreateRecordZoneWithID_block_invoke";
      __int16 v18 = 2112;
      __int16 v19 = v15;
      __int16 v20 = 2112;
      id v21 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%s Error creating zone (%@): (%@)", (uint8_t *)&v16, 0x20u);
    }
  }
  uint64_t v11 = *(void *)(a1 + 40);
  if (v11)
  {
    uint64_t v12 = [v7 firstObject];
    (*(void (**)(uint64_t, id, void *))(v11 + 16))(v11, v9, v12);
  }
}

uint64_t sub_100310AFC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (!v3) {
    goto LABEL_14;
  }
  if ([v1 code] == (id)26)
  {
    uint64_t v4 = 1;
    goto LABEL_15;
  }
  if ([v1 code] != (id)2)
  {
LABEL_14:
    uint64_t v4 = 0;
    goto LABEL_15;
  }
  id v5 = [v1 userInfo];
  id v6 = [v5 objectForKey:CKPartialErrorsByItemIDKey];

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v7 = objc_msgSend(v6, "allValues", 0);
  uint64_t v4 = (uint64_t)[v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v8 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v7);
        }
        if ([*(id *)(*((void *)&v11 + 1) + 8 * i) code] == (id)26)
        {
          uint64_t v4 = 1;
          goto LABEL_17;
        }
      }
      uint64_t v4 = (uint64_t)[v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_17:

LABEL_15:
  return v4;
}

uint64_t sub_100310C9C(void *a1)
{
  id v1 = a1;
  if (CKCanRetryForError()
    && ([v1 userInfo],
        uint64_t v2 = objc_claimAutoreleasedReturnValue(),
        [v2 objectForKey:CKErrorRetryAfterKey],
        unsigned int v3 = objc_claimAutoreleasedReturnValue(),
        v3,
        v2,
        v3))
  {
    uint64_t v4 = 1;
  }
  else
  {
    id v5 = [v1 domain];
    unsigned int v6 = [v5 isEqualToString:CKErrorDomain];

    if (v6)
    {
      unint64_t v7 = (unint64_t)[v1 code];
      if (v7 <= 0x17) {
        uint64_t v4 = (0x8000C0u >> v7) & 1;
      }
      else {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
  }

  return v4;
}

BOOL sub_100310D68(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  if ([v2 isEqualToString:CKErrorDomain] && objc_msgSend(v1, "code") == (id)21)
  {
    BOOL v3 = 1;
  }
  else
  {
    uint64_t v4 = [v1 domain];
    if ([v4 isEqualToString:CKInternalErrorDomain]) {
      BOOL v3 = [v1 code] == (id)2026;
    }
    else {
      BOOL v3 = 0;
    }
  }
  return v3;
}

uint64_t sub_100310E18(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (v3)
  {
    if ([v1 code] == (id)112)
    {
LABEL_17:
      int8x16_t v15 = +[AFAnalytics sharedAnalytics];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      void v17[2] = sub_100311070;
      v17[3] = &unk_10050E0C8;
      id v18 = v1;
      [v15 logEventWithType:6103 contextProvider:v17];

      uint64_t v14 = 1;
      id v5 = v18;
LABEL_18:

      goto LABEL_19;
    }
    if ([v1 code] == (id)2)
    {
      uint64_t v4 = [v1 userInfo];
      id v5 = [v4 objectForKey:CKPartialErrorsByItemIDKey];

      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      unsigned int v6 = [v5 allValues];
      id v7 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v20;
        do
        {
          for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v20 != v9) {
              objc_enumerationMutation(v6);
            }
            long long v11 = *(void **)(*((void *)&v19 + 1) + 8 * i);
            long long v12 = [v11 domain];
            if ([v12 isEqualToString:CKErrorDomain])
            {
              id v13 = [v11 code];

              if (v13 == (id)112)
              {

                goto LABEL_17;
              }
            }
            else
            {
            }
          }
          id v8 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
        }
        while (v8);
      }

      uint64_t v14 = 0;
      goto LABEL_18;
    }
  }
  uint64_t v14 = 0;
LABEL_19:

  return v14;
}

uint64_t sub_100311070()
{
  return AFAnalyticsContextCreateWithError();
}

id sub_100311078(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 code] == (id)2)
  {
    if (v4)
    {
      id v5 = [v3 userInfo];
      unsigned int v6 = [v5 objectForKey:CKPartialErrorsByItemIDKey];

      id v7 = [v6 objectForKey:v4];
      id v8 = [v7 userInfo];
      id v9 = [v8 objectForKey:NSUnderlyingErrorKey];
    }
    else
    {
      id v9 = 0;
    }
  }
  else
  {
    double v10 = [v3 userInfo];
    id v9 = [v10 objectForKey:NSUnderlyingErrorKey];

    if (!v9) {
      id v9 = v3;
    }
  }

  return v9;
}

BOOL sub_10031119C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  if ([v2 isEqualToString:kAFAssistantErrorDomain]) {
    BOOL v3 = [v1 code] == (id)4020;
  }
  else {
    BOOL v3 = 0;
  }

  return v3;
}

uint64_t sub_10031120C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 userInfo];
  BOOL v3 = [v2 objectForKey:NSUnderlyingErrorKey];

  id v4 = [v1 domain];
  if ([v4 isEqualToString:CKErrorDomain] && objc_msgSend(v1, "code") == (id)2)
  {

    goto LABEL_6;
  }
  id v5 = [v3 domain];
  if (([v5 isEqualToString:CKErrorDomain] & 1) == 0)
  {
LABEL_17:

    goto LABEL_18;
  }
  id v6 = [v3 code];

  if (v6 == (id)2)
  {
LABEL_6:
    id v7 = [v1 userInfo];
    id v4 = [v7 objectForKey:CKPartialErrorsByItemIDKey];

    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = [v4 allValues];
    id v8 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v21;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v10) {
            objc_enumerationMutation(v5);
          }
          long long v12 = *(void **)(*((void *)&v20 + 1) + 8 * i);
          id v13 = [v12 domain];
          if ([v13 isEqualToString:CKErrorDomain])
          {
            id v14 = [v12 code];

            if (v14 == (id)111)
            {

              int8x16_t v15 = +[AFAnalytics sharedAnalytics];
              v18[0] = _NSConcreteStackBlock;
              v18[1] = 3221225472;
              void v18[2] = sub_1003114B8;
              v18[3] = &unk_10050E0C8;
              id v19 = v1;
              [v15 logEventWithType:4103 contextProvider:v18];

              uint64_t v16 = 1;
              goto LABEL_19;
            }
          }
          else
          {
          }
        }
        id v9 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }
      while (v9);
    }
    goto LABEL_17;
  }
LABEL_18:
  uint64_t v16 = 0;
LABEL_19:

  return v16;
}

uint64_t sub_1003114B8()
{
  return AFAnalyticsContextCreateWithError();
}

uint64_t sub_1003114C0(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (v3)
  {
    if ([v1 code] == (id)3 || objc_msgSend(v1, "code") == (id)4)
    {
      int v4 = 0;
      char v5 = 1;
    }
    else
    {
      char v5 = 0;
      int v4 = 1;
    }
    id v7 = [v1 userInfo];
    id v8 = [v7 objectForKey:NSUnderlyingErrorKey];

    if (v4 && [v1 code] == (id)2)
    {
LABEL_11:
      long long v11 = [v1 userInfo];
      long long v12 = [v11 objectForKey:CKPartialErrorsByItemIDKey];

      long long v25 = 0u;
      long long v26 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v22 = v12;
      id v13 = [v12 allValues];
      id v14 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (!v14) {
        goto LABEL_24;
      }
      id v15 = v14;
      uint64_t v16 = *(void *)v24;
      while (1)
      {
        for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v24 != v16) {
            objc_enumerationMutation(v13);
          }
          id v18 = *(void **)(*((void *)&v23 + 1) + 8 * i);
          id v19 = [v18 domain];
          if (![v19 isEqualToString:CKErrorDomain])
          {

            continue;
          }
          if ([v18 code] == (id)3)
          {
          }
          else
          {
            id v20 = [v1 code];

            if (v20 != (id)4) {
              continue;
            }
          }
          char v5 = 1;
        }
        id v15 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (!v15)
        {
LABEL_24:

          goto LABEL_26;
        }
      }
    }
    id v9 = [v8 domain];
    if ([v9 isEqualToString:CKErrorDomain])
    {
      id v10 = [v8 code];

      if (v10 != (id)2) {
        goto LABEL_26;
      }
      goto LABEL_11;
    }

LABEL_26:
    uint64_t v6 = v5 & 1;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

BOOL sub_100311748(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (v3)
  {
    id v4 = [v1 code];
    char v5 = [v1 userInfo];
    uint64_t v6 = [v5 objectForKey:NSUnderlyingErrorKey];

    BOOL v7 = v4 == (id)14;
    if (v4 != (id)14 && [v1 code] == (id)2) {
      goto LABEL_6;
    }
    id v8 = [v6 domain];
    if ([v8 isEqualToString:CKErrorDomain])
    {
      id v9 = [v6 code];

      if (v9 == (id)2)
      {
LABEL_6:
        id v10 = [v1 userInfo];
        long long v11 = [v10 objectForKey:CKPartialErrorsByItemIDKey];

        long long v25 = 0u;
        long long v26 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        long long v22 = v11;
        long long v12 = [v11 allValues];
        id v13 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v13)
        {
          id v14 = v13;
          uint64_t v15 = *(void *)v24;
          do
          {
            for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v24 != v15) {
                objc_enumerationMutation(v12);
              }
              id v17 = *(void **)(*((void *)&v23 + 1) + 8 * i);
              id v18 = [v17 domain];
              if ([v18 isEqualToString:CKErrorDomain])
              {
                id v19 = [v17 code];

                if (v19 == (id)14) {
                  BOOL v7 = 1;
                }
              }
              else
              {
              }
            }
            id v14 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
          }
          while (v14);
        }
      }
    }
    else
    {
    }
    BOOL v20 = v7;
    goto LABEL_21;
  }
  BOOL v20 = 0;
LABEL_21:

  return v20;
}

BOOL sub_100311994(void *a1)
{
  id v1 = a1;
  BOOL v2 = (sub_100310C9C(v1) & 1) != 0 || (sub_1003114C0(v1) & 1) != 0 || sub_100311748(v1);

  return v2;
}

id sub_100311C14(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
  id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
  if (!result)
  {
    unsigned int v3 = *(void **)(a1 + 32);
    return [v3 _stopObserving];
  }
  return result;
}

id sub_100311D08(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
  id result = [*(id *)(*(void *)(a1 + 32) + 32) count];
  if (result == (id)1)
  {
    unsigned int v3 = *(void **)(a1 + 32);
    return _[v3 _startObserving];
  }
  return result;
}

void sub_100311DDC(uint64_t a1)
{
  BOOL v2 = +[VTPreferences sharedPreferences];
  unsigned int v3 = [v2 voiceTriggerEnabled];

  id v4 = +[AFPreferences sharedPreferences];
  char v5 = [v4 languageCode];

  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 9);
  if (v7 != v3)
  {
    id v8 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      CFStringRef v9 = @"disabled";
      if (v3) {
        CFStringRef v9 = @"enabled";
      }
      int v18 = 136315394;
      id v19 = "-[ADVoiceTriggerInCallAvailabilityObserver _voiceTriggerEnabledDidChange]_block_invoke";
      __int16 v20 = 2112;
      CFStringRef v21 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Voice Trigger is now %@", (uint8_t *)&v18, 0x16u);
      uint64_t v6 = *(void *)(a1 + 32);
    }
    *(unsigned char *)(v6 + 9) = v3;
    uint64_t v6 = *(void *)(a1 + 32);
  }
  id v10 = *(void **)(v6 + 16);
  if (v10)
  {
    if ([v10 isEqualToString:v5])
    {
      if (v7 == v3) {
        goto LABEL_21;
      }
      goto LABEL_15;
    }
    uint64_t v6 = *(void *)(a1 + 32);
  }
  long long v11 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
  {
    CFStringRef v12 = *(const __CFString **)(v6 + 16);
    int v18 = 136315650;
    id v19 = "-[ADVoiceTriggerInCallAvailabilityObserver _voiceTriggerEnabledDidChange]_block_invoke";
    __int16 v20 = 2112;
    CFStringRef v21 = v12;
    __int16 v22 = 2112;
    long long v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%s Siri Language changed from %@ to %@", (uint8_t *)&v18, 0x20u);
    uint64_t v6 = *(void *)(a1 + 32);
  }
  objc_storeStrong((id *)(v6 + 16), v5);
LABEL_15:
  int v13 = AFSupportsCallHangUp();
  uint64_t v14 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v14 + 8) != v13)
  {
    int v15 = v13;
    uint64_t v16 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      CFStringRef v17 = @"unavailable";
      if (v15) {
        CFStringRef v17 = @"available";
      }
      int v18 = 136315394;
      id v19 = "-[ADVoiceTriggerInCallAvailabilityObserver _voiceTriggerEnabledDidChange]_block_invoke";
      __int16 v20 = 2112;
      CFStringRef v21 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "%s Voice Trigger in-call is now %@", (uint8_t *)&v18, 0x16u);
      uint64_t v14 = *(void *)(a1 + 32);
    }
    *(unsigned char *)(v14 + 8) = v15;
    [*(id *)(a1 + 32) notifyDelegates];
  }
LABEL_21:
}

id sub_100312104(uint64_t a1, void *a2)
{
  return _[a2 _voiceTriggerEnabledDidChange];
}

void sub_100312210(id a1)
{
  id v1 = objc_alloc_init(ADVoiceTriggerInCallAvailabilityObserver);
  uint64_t v2 = qword_100586398;
  qword_100586398 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

id sub_10031240C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) automotive];
  if ((result & 1) != 0
    || (id result = [*(id *)(*(void *)(a1 + 32) + 16) walking], (result & 1) != 0)
    || (id result = [*(id *)(*(void *)(a1 + 32) + 16) running], (result & 1) != 0)
    || (id result = [*(id *)(*(void *)(a1 + 32) + 16) cycling], result))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = 3;
  }
  else
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 16) stationary];
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    if (result) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = 2;
    }
  }
  *(void *)(v3 + 24) = v4;
  return result;
}

id sub_100312604(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) automotive];
  if (result)
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 16) stationary];
    char v3 = result ^ 1;
  }
  else
  {
    char v3 = 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

uint64_t sub_1003127E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1003127F4(uint64_t a1)
{
}

void sub_1003127FC(uint64_t a1)
{
  unint64_t v2 = (unint64_t)[*(id *)(*(void *)(a1 + 32) + 16) confidence];
  unint64_t v3 = v2;
  if (v2 > 2)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = +[NSNumber numberWithDouble:dbl_1003E2EF0[v2]];
  }
  id v5 = v4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
  if (v3 <= 2)
  {
  }
}

id sub_100312A30(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) stationary]
    && ([*(id *)(*(void *)(a1 + 32) + 16) automotive] & 1) != 0)
  {
    unint64_t v2 = (id *)&SAMotionActivityInVehicleStationaryValue;
  }
  else if ([*(id *)(*(void *)(a1 + 32) + 16) stationary])
  {
    unint64_t v2 = (id *)&SAMotionActivityStationaryValue;
  }
  else if ([*(id *)(*(void *)(a1 + 32) + 16) walking])
  {
    unint64_t v2 = (id *)&SAMotionActivityWalkingValue;
  }
  else if ([*(id *)(*(void *)(a1 + 32) + 16) running])
  {
    unint64_t v2 = (id *)&SAMotionActivityRunningValue;
  }
  else if ([*(id *)(*(void *)(a1 + 32) + 16) automotive])
  {
    unint64_t v2 = (id *)&SAMotionActivityInVehicleMovingValue;
  }
  else if ([*(id *)(*(void *)(a1 + 32) + 16) cycling])
  {
    unint64_t v2 = (id *)&SAMotionActivityCyclingValue;
  }
  else
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 16) unknown];
    if (!result) {
      return result;
    }
    unint64_t v2 = (id *)&SAMotionActivityUnknownValue;
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *v2;
  uint64_t v6 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v5;
  return (id)_objc_release_x1(v5, v6);
}

uint64_t sub_100312C9C(uint64_t a1)
{
  unint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    int v4 = 136315138;
    id v5 = "-[ADMotionManager stopUpdatingMotionActivityForReason:completion:]_block_invoke";
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s Stopping activity updates", (uint8_t *)&v4, 0xCu);
  }
  [*(id *)(*(void *)(a1 + 32) + 8) stopActivityUpdates];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100312EB4(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 8)
    && +[CMMotionActivityManager isActivityAvailable])
  {
    id v2 = objc_alloc_init((Class)CMMotionActivityManager);
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(void **)(v3 + 8);
    *(void *)(v3 + 8) = v2;
  }
  id v5 = *(void **)(a1 + 32);
  if (v5[1])
  {
    objc_initWeak(&location, v5);
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136315138;
      CFStringRef v17 = "-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke";
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "%s Starting activity updates", buf, 0xCu);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 8);
    uint64_t v9 = *(void *)(v7 + 24);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1003130C4;
    void v13[3] = &unk_10050BFA8;
    objc_copyWeak(&v14, &location);
    [v8 startActivityUpdatesToQueue:v9 withHandler:v13];
    uint64_t v10 = *(void *)(a1 + 40);
    if (v10) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v10, 1);
    }
    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 40);
    if (v11)
    {
      CFStringRef v12 = *(void (**)(void))(v11 + 16);
      v12();
    }
  }
}

void sub_10031309C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003130C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = WeakRetained[5];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_100313178;
    v7[3] = &unk_10050E160;
    id v8 = v3;
    uint64_t v9 = v5;
    dispatch_async(v6, v7);
  }
}

id sub_100313178(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 136315394;
    uint64_t v6 = "-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke_2";
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s motionActivity updated = %@", (uint8_t *)&v5, 0x16u);
  }
  return [*(id *)(a1 + 40) _setMotionActivity:*(void *)(a1 + 32)];
}

void sub_1003133C8(uint64_t a1, unint64_t a2)
{
  id v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Queue %s did not respond to watchdog and is likely blocked.", dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32)));
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v7 = "-[ADMotionManager init]_block_invoke";
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_fault_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "%s %@", buf, 0x16u);
  }
  int v5 = AFIsInternalInstall();
  if (a2 <= 3 && v5) {
    WriteStackshotReport_async();
  }
}

void sub_100313AEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    uint64_t v6 = "-[ADClientConnection _fetchAppContextForApplicationInfo:reply:]_block_invoke";
    __int16 v7 = 2112;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Sending context to tool %@", (uint8_t *)&v5, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100313D84(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKey:AceObjectGroupPListKey];
  id v3 = [*(id *)(a1 + 32) objectForKey:AceObjectClassPListKey];
  uint64_t v4 = +[ADCommandCenter sharedCommandCenter];
  int v5 = [v4 _serviceManager];

  uint64_t v6 = [v5 serviceForIdentifier:*(void *)(a1 + 40)];
  if (v6
    || ([v5 serviceForDomain:v2 command:v3], (uint64_t v6 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    __int16 v7 = +[NSString stringWithFormat:@"SA%@", v3];
    id v8 = [objc_alloc(NSClassFromString(v7)) initWithDictionary:*(void *)(a1 + 32)];
    id v9 = [objc_alloc((Class)SAGenericCommand) initWithDictionary:*(void *)(a1 + 32)];
    uint64_t v10 = [v9 groupIdentifier];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100313F7C;
    void v12[3] = &unk_10050CF00;
    id v13 = *(id *)(a1 + 48);
    [v6 handleCommand:v8 forDomain:v10 executionContext:0 reply:v12];
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v6 = +[AFError errorWithCode:100];
    (*(void (**)(uint64_t, void, void *))(v11 + 16))(v11, 0, v6);
  }
}

void sub_100313F7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  __int16 v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    CFStringRef v8 = &stru_10050F7D8;
    *(_DWORD *)uint64_t v11 = 136315650;
    *(void *)&v11[4] = "-[ADClientConnection _performTaskCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2";
    *(_WORD *)&v11[12] = 2112;
    if (v6) {
      CFStringRef v8 = v6;
    }
    *(void *)&v11[14] = v5;
    __int16 v12 = 2112;
    CFStringRef v13 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s returning bundle reply %@ %@", v11, 0x20u);
  }
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = objc_msgSend(v5, "dictionary", *(_OWORD *)v11);
  (*(void (**)(uint64_t, void *, __CFString *))(v9 + 16))(v9, v10, v6);
}

void sub_1003141A4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKey:AceObjectGroupPListKey];
  id v3 = [*(id *)(a1 + 32) objectForKey:AceObjectClassPListKey];
  uint64_t v4 = +[ADCommandCenter sharedCommandCenter];
  id v5 = [v4 _serviceManager];

  uint64_t v6 = [v5 serviceForIdentifier:*(void *)(a1 + 40)];
  if (v6
    || ([v5 serviceForDomain:v2 command:v3], (uint64_t v6 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    __int16 v7 = +[SAGenericCommand aceObjectWithDictionary:*(void *)(a1 + 32)];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      CFStringRef v8 = +[ADCommandCenter sharedCommandCenter];
      uint64_t v9 = [v7 refId];
      uint64_t v10 = NSStringFromSelector(*(SEL *)(a1 + 56));
      [v8 _addOutstandingRequestId:v9 forReason:v10];
    }
    uint64_t v11 = [v7 groupIdentifier];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1003143CC;
    void v13[3] = &unk_10050CF00;
    id v14 = *(id *)(a1 + 48);
    [v6 handleCommand:v7 forDomain:v11 executionContext:0 reply:v13];
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v6 = +[AFError errorWithCode:100];
    (*(void (**)(uint64_t, void, void *))(v12 + 16))(v12, 0, v6);
  }
}

void sub_1003143CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  __int16 v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    CFStringRef v8 = &stru_10050F7D8;
    *(_DWORD *)uint64_t v11 = 136315650;
    *(void *)&v11[4] = "-[ADClientConnection _performCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2";
    *(_WORD *)&v11[12] = 2112;
    if (v6) {
      CFStringRef v8 = v6;
    }
    *(void *)&v11[14] = v5;
    __int16 v12 = 2112;
    CFStringRef v13 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s returning bundle reply %@ %@", v11, 0x20u);
  }
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = objc_msgSend(v5, "dictionary", *(_OWORD *)v11);
  (*(void (**)(uint64_t, void *, __CFString *))(v9 + 16))(v9, v10, v6);
}

void sub_100314674(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 dictionary];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_100314D5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100314EA0;
  v10[3] = &unk_10050DE70;
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  id v11 = v4;
  [v3 enumerateKeysAndObjectsUsingBlock:v10];

  uint64_t v5 = *(void *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100314F00;
  v8[3] = &unk_10050DE98;
  id v9 = v4;
  id v6 = v4;
  id v7 = +[AFClockTimerSnapshot newWithBuilder:v8];
  (*(void (**)(uint64_t, id, void))(v5 + 16))(v5, v7, 0);
}

void sub_100314EA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 timersByID];
  if ([v4 count]) {
    [*(id *)(a1 + 32) addEntriesFromDictionary:v4];
  }
}

void sub_100314F00(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = +[NSDate date];
  [v4 setDate:v3];

  [v4 setTimersByID:*(void *)(a1 + 32)];
}

void sub_100315148(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id v11 = objc_msgSend(v10, "identifier", (void)v12);
        [v4 setObject:v10 forKey:v11];
      }
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003159F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), a2);
}

void sub_100316424(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 16);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003164C0;
  v7[3] = &unk_10050E188;
  void v7[4] = v4;
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_1003164C0(uint64_t a1, __n128 a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(void *)(v3 + 88))
  {
    uint64_t v4 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      id v11 = "-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:sessionUUID:completion:]_block_invoke_2";
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Shouldn't have a pending request, continuing and canceling it now.", (uint8_t *)&v10, 0xCu);
      uint64_t v3 = *(void *)(a1 + 32);
    }
    [(id)v3 _continuePendingSpeechRequestFromTimestamp:0.0];
    uint64_t v3 = *(void *)(a1 + 32);
  }
  if (*(unsigned char *)(v3 + 129))
  {
    a2.n128_u64[0] = *(void *)(v3 + 80);
    id v5 = *(void (***)(__n128))(a1 + 40);
    if (a2.n128_f64[0] >= 0.0)
    {
      v5[2](a2);
    }
    else
    {
      id v6 = objc_retainBlock(v5);
      uint64_t v7 = *(void *)(a1 + 32);
      id v8 = *(void **)(v7 + 88);
      *(void *)(v7 + 88) = v6;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 40);
    if (v9)
    {
      a2.n128_u64[0] = 0;
      (*(void (**)(__n128))(v9 + 16))(a2);
    }
  }
}

uint64_t sub_10031678C(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = a1[4];
  id v5 = *(void **)(v4 + 24);
  id v8 = v3;
  if (v5 == (void *)a1[5])
  {
    *(void *)(v4 + 24) = 0;

    id v3 = v8;
  }
  uint64_t v6 = a1[6];
  if (v6)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t, id))(v6 + 16))(v6, v8);
    id v3 = v8;
  }
  return _objc_release_x1(v6, v3);
}

uint64_t sub_100317120(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v2();
}

void sub_100317458(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(NSObject **)(v10 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100317558;
  block[3] = &unk_10050DCB8;
  void block[4] = v10;
  id v12 = v7;
  id v16 = v12;
  id v13 = v8;
  id v17 = v13;
  dispatch_async(v11, block);
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14) {
    (*(void (**)(uint64_t, id))(v14 + 16))(v14, v9);
  }
}

id sub_100317558(uint64_t a1)
{
  [*(id *)(a1 + 32) _addAudioSessionAssertion:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  return [v2 _setBluetoothDevice:v3];
}

void sub_100317A00(uint64_t a1)
{
  if (*(void *)(a1 + 32) == *(void *)(*(void *)(a1 + 40) + 136))
  {
    if ([*(id *)(a1 + 48) primaryInEarStatus] == (id)3
      && [*(id *)(a1 + 56) primaryInEarStatus] != (id)3)
    {
      uint64_t v3 = AFSiriLogContextDaemon;
      int v2 = 1;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 136315394;
        long long v15 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
        __int16 v16 = 2112;
        uint64_t v17 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s %@ primary earbud becomes out of ear.", buf, 0x16u);
      }
    }
    else
    {
      int v2 = 0;
    }
    if ([*(id *)(a1 + 48) secondaryInEarStatus] == (id)3
      && [*(id *)(a1 + 56) secondaryInEarStatus] != (id)3)
    {
      id v5 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 136315394;
        long long v15 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
        __int16 v16 = 2112;
        uint64_t v17 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s %@ secondary earbud becomes out of ear.", buf, 0x16u);
      }
    }
    else if (!v2)
    {
      return;
    }
    id v7 = +[ADCommandCenter sharedCommandCenter];
    id v8 = [v7 _queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100317C34;
    block[3] = &unk_10050E278;
    uint64_t v13 = *(void *)(a1 + 64);
    int8x16_t v10 = *(int8x16_t *)(a1 + 32);
    id v9 = (id)v10.i64[0];
    int8x16_t v12 = vextq_s8(v10, v10, 8uLL);
    dispatch_async(v8, block);
  }
}

void sub_100317C34(void *a1)
{
  int v2 = +[ADCommandCenter sharedCommandCenter];
  uint64_t v3 = [v2 _currentClient];
  uint64_t v4 = (void *)a1[4];

  if (v3 == v4)
  {
    id v7 = [*(id *)(a1[4] + 24) activationEvent];
    BOOL v9 = v7 == (id)6 || v7 == (id)9;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_100317E68;
    void v14[3] = &unk_10050C170;
    int8x16_t v10 = (void *)a1[5];
    uint64_t v16 = a1[6];
    id v15 = v10;
    BOOL v17 = v9;
    id v11 = +[AFSiriActivationContext newWithBuilder:v14];
    int8x16_t v12 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      id v19 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s Asking activation service to deactivate...", buf, 0xCu);
    }
    uint64_t v13 = +[AFSiriActivationConnection sharedConnection];
    [v13 deactivateForReason:2 options:0 context:v11 completion:&stru_10050C190];

    [0 deactivateForReason:2 options:0 context:v11 completion:&stru_10050C1B0];
  }
  else
  {
    id v5 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = a1[4];
      *(_DWORD *)buf = 136315394;
      id v19 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s %@ is not the current client.", buf, 0x16u);
    }
  }
}

void sub_100317E68(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = a2;
  [v4 setTimestamp:v3];
  [v4 setSource:4];
  [v4 setEvent:11];
  id v5 = [*(id *)(a1 + 32) identifier];
  [v4 setDeviceID:v5];

  uint64_t v11 = AFSiriActivationUserInfoKey[3];
  CFStringRef v9 = @"inSpokenNotification";
  uint64_t v6 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  int8x16_t v10 = v6;
  id v7 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
  int8x16_t v12 = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  [v4 setUserInfo:v8];
}

void sub_100317FA4(id a1, AFSiriActivationResult *a2)
{
  int v2 = a2;
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    id v5 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
    __int16 v6 = 2112;
    id v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s uint64_t result = %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100318064(id a1, AFSiriActivationResult *a2)
{
  int v2 = a2;
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    id v5 = "-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke";
    __int16 v6 = 2112;
    id v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s uint64_t result = %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_1003182F8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 audioPlaybackRequestDidStop:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
}

void sub_1003183E4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 audioPlaybackRequestDidStart:*(void *)(a1 + 40)];
}

void sub_1003184D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 audioPlaybackRequestWillStart:*(void *)(a1 + 40)];
}

void sub_100318644(uint64_t a1)
{
  id v2 = +[ADSpeechManager sharedManager];
  uint64_t v3 = [v2 audioSessionController];
  id v4 = [v3 getAudioSessionID];

  id v5 = [*(id *)(a1 + 32) _serviceDelegate];
  [v5 audioSessionIDChanged:v4];
}

void sub_1003187F0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 audioSessionIDChanged:0];
}

void sub_100318958(uint64_t a1)
{
  id v2 = +[ADSpeechManager sharedManager];
  uint64_t v3 = [v2 audioSessionController];
  id v4 = [v3 getAudioSessionID];

  id v5 = [*(id *)(a1 + 32) _serviceDelegate];
  [v5 audioSessionIDChanged:v4];
}

void sub_100318B04(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 audioSessionIDChanged:0];
}

void sub_100318D9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    if (v2 != 1) {
      return;
    }
    id v4 = [*(id *)(a1 + 32) _serviceDelegate];
    [v4 audioSessionDidBeginInterruptionWithUserInfo:*(void *)(a1 + 40)];
  }
  else
  {
    uint64_t v3 = *(_DWORD *)(a1 + 56) & 1;
    id v4 = [*(id *)(a1 + 32) _serviceDelegate];
    [v4 audioSessionDidEndInterruption:v3 userInfo:*(void *)(a1 + 40)];
  }
}

id sub_100318EB0(uint64_t a1)
{
  [*(id *)(a1 + 32) _setADShouldSpeak:*(unsigned __int8 *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);
  return [v2 _logShouldSpeakState:v3];
}

void sub_100319008(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v22 = "-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:context:completion:]_block_invoke";
    __int16 v23 = 2112;
    dispatch_group_t v24 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100319278;
  v19[3] = &unk_10050C0A8;
  dispatch_group_t v20 = v2;
  id v5 = v2;
  id v6 = [v4 initWithBlock:v19];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100319358;
  v16[3] = &unk_10050DEE8;
  id v7 = *(void **)(a1 + 32);
  id v18 = *(id *)(a1 + 40);
  id v8 = v6;
  id v17 = v8;
  CFStringRef v9 = [v7 _serviceDelegateWithErrorHandler:v16];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_1003193AC;
  void v13[3] = &unk_10050C120;
  uint64_t v10 = *(void *)(a1 + 48);
  id v11 = *(id *)(a1 + 40);
  id v14 = v8;
  id v15 = v11;
  id v12 = v8;
  [v9 speechRecordingPerformTwoShotPromptWithType:v10 reply:v13];
}

void sub_100319278(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:context:completion:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_100319358(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(double, double))(v2 + 16))(0.0, 0.0);
  }
  uint64_t v3 = *(void **)(a1 + 32);
  return [v3 invokeWithSignal:0];
}

id sub_1003193AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(void **)(a1 + 32);
  return [v3 invokeWithSignal:0];
}

void sub_10031946C(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADClientConnection adSpeechRecordingDidDetectStartPointWithContext:]_block_invoke";
    __int16 v19 = 2112;
    dispatch_group_t v20 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1003196B4;
  v15[3] = &unk_10050C0A8;
  dispatch_group_t v16 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v15];

  id v7 = *(void **)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100319794;
  void v13[3] = &unk_10050C610;
  id v8 = v6;
  id v14 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_1003197A0;
  v11[3] = &unk_10050E138;
  id v12 = v8;
  id v10 = v8;
  [v9 speechRecordingStartpointDetectedWithReply:v11];
}

void sub_1003196B4(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidDetectStartPointWithContext:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_100319794(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_1003197A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_100319848(uint64_t a1)
{
  dispatch_group_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 136315394;
    int v6 = "-[ADClientConnection adSpeechRecognitionDidFail:sessionUUID:]_block_invoke";
    __int16 v7 = 2114;
    uint64_t v8 = v4;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Sending speech recognition failed %{public}@", (uint8_t *)&v5, 0x16u);
  }
  uint64_t v3 = [*(id *)(a1 + 40) _serviceDelegate];
  [v3 speechRecognitionDidFail:*(void *)(a1 + 32)];
}

void sub_1003199BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 speechRecordingWillBeginRecognitionUpdateForTask:*(void *)(a1 + 40)];
}

void sub_100319AB4(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 136315650;
    __int16 v7 = "-[ADClientConnection adSpeechRecognizedPartialResult:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s %p Sending speech partial result %@...", (uint8_t *)&v6, 0x20u);
  }
  int v5 = [*(id *)(a1 + 32) _serviceDelegate];
  [v5 speechRecognizedPartialResult:*(void *)(a1 + 40)];
}

void sub_100319C30(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 136315650;
    __int16 v7 = "-[ADClientConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s %p Sending speech recognized %@...", (uint8_t *)&v6, 0x20u);
  }
  int v5 = [*(id *)(a1 + 32) _serviceDelegate];
  [v5 speechRecognized:*(void *)(a1 + 40)];
}

void sub_100319D88(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADClientConnection adSpeechRecordingWillStopWithSignpostID:]_block_invoke";
    __int16 v19 = 2112;
    dispatch_group_t v20 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100319F7C;
  v15[3] = &unk_10050C0A8;
  dispatch_group_t v16 = v2;
  int v5 = v2;
  id v6 = [v4 initWithBlock:v15];

  __int16 v7 = *(void **)(a1 + 32);
  __int16 v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  id v12 = sub_10031A05C;
  uint64_t v13 = &unk_10050C610;
  id v14 = v6;
  id v8 = v6;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:&v10];
  objc_msgSend(v9, "willStopRecordingWithSignpostID:", *(void *)(a1 + 40), v10, v11, v12, v13);
}

void sub_100319F7C(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    __int16 v7 = "-[ADClientConnection adSpeechRecordingWillStopWithSignpostID:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031A05C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031A180(uint64_t a1)
{
  dispatch_group_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v13 = *(NSObject **)(a1 + 32);
    *(_DWORD *)buf = 136315394;
    uint64_t v21 = "-[ADClientConnection adSpeechRecordingDidFail:context:]_block_invoke";
    __int16 v22 = 2114;
    dispatch_group_t v23 = v13;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Sending recording failed %{public}@", buf, 0x16u);
  }
  dispatch_group_t v3 = (dispatch_group_t)*(id *)(*(void *)(a1 + 40) + 48);
  if (!v3)
  {
    dispatch_group_t v3 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 48), v3);
  }
  dispatch_group_enter(v3);
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v21 = "-[ADClientConnection adSpeechRecordingDidFail:context:]_block_invoke";
    __int16 v22 = 2112;
    dispatch_group_t v23 = v3;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v5 = objc_alloc((Class)AFSafetyBlock);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10031A440;
  v18[3] = &unk_10050C0A8;
  dispatch_group_t v19 = v3;
  int v6 = v3;
  id v7 = [v5 initWithBlock:v18];

  [*(id *)(a1 + 40) _speechRecordingDidFinish];
  __int16 v8 = *(void **)(a1 + 40);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10031A520;
  v16[3] = &unk_10050C610;
  id v9 = v7;
  id v17 = v9;
  __int16 v10 = [v8 _serviceDelegateWithErrorHandler:v16];
  uint64_t v11 = *(void *)(a1 + 32);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10031A52C;
  void v14[3] = &unk_10050E138;
  id v15 = v9;
  id v12 = v9;
  [v10 speechRecordingDidFail:v11 reply:v14];
}

void sub_10031A440(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidFail:context:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031A520(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031A52C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031A62C(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADClientConnection adSpeechRecordingDidCancelWithContext:]_block_invoke";
    __int16 v19 = 2112;
    dispatch_group_t v20 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10031A87C;
  v15[3] = &unk_10050C0A8;
  dispatch_group_t v16 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v15];

  [*(id *)(a1 + 32) _speechRecordingDidFinish];
  id v7 = *(void **)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10031A95C;
  void v13[3] = &unk_10050C610;
  id v8 = v6;
  id v14 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10031A968;
  v11[3] = &unk_10050E138;
  id v12 = v8;
  id v10 = v8;
  [v9 speechRecordingDidCancelWithReply:v11];
}

void sub_10031A87C(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidCancelWithContext:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031A95C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031A968(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031AA68(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    id v18 = "-[ADClientConnection adSpeechRecordingDidEndWithContext:]_block_invoke";
    __int16 v19 = 2112;
    dispatch_group_t v20 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10031ACB8;
  v15[3] = &unk_10050C0A8;
  dispatch_group_t v16 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v15];

  [*(id *)(a1 + 32) _speechRecordingDidFinish];
  id v7 = *(void **)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10031AD98;
  void v13[3] = &unk_10050C610;
  id v8 = v6;
  id v14 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10031ADA4;
  v11[3] = &unk_10050E138;
  id v12 = v8;
  id v10 = v8;
  [v9 speechRecordingDidEndWithReply:v11];
}

void sub_10031ACB8(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidEndWithContext:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031AD98(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031ADA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031AEC0(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v22 = "-[ADClientConnection adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHost"
          "Time:context:]_block_invoke";
    __int16 v23 = 2112;
    dispatch_group_t v24 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10031B140;
  v19[3] = &unk_10050C0A8;
  dispatch_group_t v20 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v19];

  [*(id *)(a1 + 32) _setBluetoothDevice:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _addSpeechCapturingContext:*(void *)(a1 + 48)];
  id v7 = *(void **)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10031B220;
  v17[3] = &unk_10050C610;
  id v8 = v6;
  id v18 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v17];
  uint64_t v10 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 73);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10031B22C;
  v15[3] = &unk_10050E138;
  id v16 = v8;
  id v14 = v8;
  [v9 speechRecordingDidChangeAVRecordRoute:v13 isDucking:v10 isTwoShot:v11 speechEndHostTime:v12 reply:v15];
}

void sub_10031B140(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostT"
         "ime:context:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031B220(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031B22C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031B3E4(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v21 = "-[ADClientConnection adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionRequestUUI"
          "D:dictationOptions:context:]_block_invoke";
    __int16 v22 = 2112;
    dispatch_group_t v23 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10031B668;
  v18[3] = &unk_10050C0A8;
  dispatch_group_t v19 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v18];

  [*(id *)(a1 + 32) _setBluetoothDevice:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _addSpeechCapturingContext:*(void *)(a1 + 48)];
  id v7 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10031B748;
  v16[3] = &unk_10050C610;
  id v8 = v6;
  id v17 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v16];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(unsigned int *)(a1 + 64);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10031B754;
  void v14[3] = &unk_10050E138;
  id v12 = v8;
  id v15 = v12;
  [v9 speechRecordingDidBeginOnAVRecordRoute:v10 audioSessionID:v11 reply:v14];

  uint64_t v13 = *(void **)(a1 + 32);
  if (v13[17]) {
    [v13 _adjustSiriVolumeIfNeeded];
  }
}

void sub_10031B668(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionRequestUUID"
         ":dictationOptions:context:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031B748(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031B754(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

void sub_10031B824(uint64_t a1)
{
  dispatch_group_t v2 = (dispatch_group_t)*(id *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v2 = dispatch_group_create();
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v2);
  }
  dispatch_group_enter(v2);
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315394;
    dispatch_group_t v19 = "-[ADClientConnection adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:context:]_block_invoke";
    __int16 v20 = 2112;
    dispatch_group_t v21 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s Entered request group %@.", buf, 0x16u);
  }
  id v4 = objc_alloc((Class)AFSafetyBlock);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10031BA80;
  v16[3] = &unk_10050C0A8;
  dispatch_group_t v17 = v2;
  uint64_t v5 = v2;
  id v6 = [v4 initWithBlock:v16];

  id v7 = *(void **)(a1 + 32);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10031BB60;
  void v14[3] = &unk_10050C610;
  id v8 = v6;
  id v15 = v8;
  uint64_t v9 = [v7 _serviceDelegateWithErrorHandler:v14];
  uint64_t v10 = *(void *)(a1 + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_10031BB6C;
  void v12[3] = &unk_10050E138;
  id v13 = v8;
  id v11 = v8;
  [v9 speechRecordingWillBeginWithInputAudioPowerXPCWrapper:v10 reply:v12];

  [*(id *)(a1 + 32) _addSpeechCapturingContext:*(void *)(a1 + 48)];
}

void sub_10031BA80(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    id v7 = "-[ADClientConnection adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:context:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ (signal = %ld).", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031BB60(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031BB6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:0];
}

id sub_10031BFD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setServerForcedTTS:0];
}

void sub_10031C114(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 networkDidBecomeActive];
}

void sub_10031C1F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 appLaunchFailedWithBundleIdentifier:*(void *)(a1 + 40)];
}

void sub_10031C2DC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 willProcessAppLaunchWithBundleIdentifier:*(void *)(a1 + 40)];
}

void sub_10031C3A8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 audioSessionDidBecomeActive:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10031C474(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 audioSessionWillBecomeActive:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10031C59C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_10031C6B0;
  v8[3] = &unk_10050D440;
  id v9 = *(id *)(a1 + 48);
  dispatch_group_t v3 = [v2 _serviceDelegateWithErrorHandler:v8];
  uint64_t v4 = *(void *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10031C6D0;
  v6[3] = &unk_10050C058;
  uint64_t v5 = *(void *)(a1 + 56);
  id v7 = *(id *)(a1 + 48);
  [v3 willProcessStartPlayback:v5 intent:v4 completion:v6];
}

uint64_t sub_10031C6B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

uint64_t sub_10031C6D0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10031C75C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 startPlaybackDidFail:*(void *)(a1 + 40)];
}

id sub_10031C828(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setServerForcedTTS:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10031C8D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 aceConnectionWillRetryOnError:*(void *)(a1 + 40)];
}

void sub_10031C998(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 invalidateCurrentUserActivity];
}

void sub_10031CAA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 setUserActivityInfo:*(void *)(a1 + 40) webpageURL:*(void *)(a1 + 48)];
}

void sub_10031CB6C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 acousticIDRequestDidFinishWithSuccess:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10031CC34(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 musicWasDetected];
}

void sub_10031CCEC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 acousticIDRequestWillStart];
}

void sub_10031CDA4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 quickStopWasHandledWithActions:*(void *)(a1 + 40)];
}

void sub_10031CE6C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 requestRequestedDismissAssistantWithReason:*(void *)(a1 + 40)];
}

void sub_10031CF34(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _serviceDelegate];
  [v1 requestRequestedDismissAssistant];
}

void sub_10031D03C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 extensionRequestFinishedForApplication:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
}

void sub_10031D128(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 extensionRequestWillStartForApplication:*(void *)(a1 + 40)];
}

void sub_10031D214(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegateWithErrorHandler:&stru_10050C030];
  [v2 cacheImage:*(void *)(a1 + 40)];
}

void sub_10031D270(id a1, NSError *a2)
{
  id v2 = a2;
  dispatch_group_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    uint64_t v5 = "-[ADClientConnection adWantsToCacheImage:]_block_invoke_2";
    __int16 v6 = 2114;
    id v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s failed with Error %{public}@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_10031D4C8(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10031D568;
  void v4[3] = &unk_10050D440;
  id v2 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  dispatch_group_t v3 = [v2 _serviceDelegateWithErrorHandler:v4];
  [v3 getBulletinContext:*(void *)(a1 + 40)];
}

void sub_10031D568(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v6 = 136315394;
    id v7 = "-[ADClientConnection adGetBulletinContext:]_block_invoke_2";
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s failed with Error %{public}@", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
  }
}

void sub_10031D718(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10031D7CC;
  v6[3] = &unk_10050D440;
  id v7 = *(id *)(a1 + 48);
  id v3 = [v2 _serviceDelegateWithErrorHandler:v6];
  int v4 = v3;
  if (*(void *)(a1 + 48)) {
    uint64_t v5 = *(Block_layout **)(a1 + 48);
  }
  else {
    uint64_t v5 = &stru_10050C010;
  }
  [v3 requestRequestedOpenURL:*(void *)(a1 + 40) reply:v5];
}

void sub_10031D7CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v6 = 136315394;
    id v7 = "-[ADClientConnection adRequestRequestedOpenURL:completion:]_block_invoke_2";
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s failed with Error %{public}@", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
  }
}

void sub_10031D9A8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10031DA50;
  void v4[3] = &unk_10050D440;
  id v5 = *(id *)(a1 + 56);
  id v3 = [v2 _serviceDelegateWithErrorHandler:v4];
  [v3 requestRequestedOpenApplicationWithBundleID:*(void *)(a1 + 40) URL:*(void *)(a1 + 48) reply:*(void *)(a1 + 56)];
}

void sub_10031DA50(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v6 = 136315394;
    id v7 = "-[ADClientConnection adRequestRequestedOpenApplicationWithBundleID:URL:completion:]_block_invoke_2";
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s failed with Error %{public}@", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
  }
}

void sub_10031DC00(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_10031DD0C;
  v7[3] = &unk_10050D440;
  id v8 = *(id *)(a1 + 48);
  id v3 = [v2 _serviceDelegateWithErrorHandler:v7];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10031DDF4;
  v5[3] = &unk_10050E250;
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v3 startUIRequestWithText:v4 completion:v5];
}

void sub_10031DD0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v6 = 136315394;
    id v7 = "-[ADClientConnection adStartUIRequestWithText:completion:]_block_invoke_2";
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s failed with Error %{public}@", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
  }
}

uint64_t sub_10031DDF4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10031E05C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 requestDidAskForTimeoutExtension:*(double *)(a1 + 40)];
}

void sub_10031E1F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _serviceDelegate];
  [v2 aceConnectionWillRetryOnError:*(void *)(a1 + 40)];
}

void sub_10031E394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = AFSiriLogContextDaemon;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      *(_DWORD *)buf = 136315394;
      id v16 = "-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke";
      __int16 v17 = 2048;
      uint64_t v18 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s %p commandGroup exists, waiting until commandGroup is done...", buf, 0x16u);
      uint64_t v2 = *(void *)(a1 + 32);
    }
    id v6 = *(id *)(v2 + 56);
    uint64_t v7 = *(void *)(a1 + 32);
    __int16 v8 = *(NSObject **)(v7 + 48);
    id v9 = *(NSObject **)(v7 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10031E570;
    block[3] = &unk_10050DCB8;
    void block[4] = v7;
    id v13 = v6;
    id v14 = *(id *)(a1 + 40);
    id v10 = v6;
    dispatch_group_notify(v8, v9, block);
  }
  else
  {
    if (v5)
    {
      uint64_t v11 = *(void *)(v2 + 56);
      *(_DWORD *)buf = 136315650;
      id v16 = "-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke";
      __int16 v17 = 2048;
      uint64_t v18 = v2;
      __int16 v19 = 2112;
      uint64_t v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s %p commandGroup does not exist, handling request completed with UUID %@...", buf, 0x20u);
      uint64_t v2 = *(void *)(a1 + 32);
    }
    [(id)v2 _handleRequestCompletedWithUUID:*(void *)(v2 + 56) error:*(void *)(a1 + 40)];
  }
}

id sub_10031E570(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 136315650;
    uint64_t v7 = "-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s %p commandGroup is done, handling request completed with UUID %@...", (uint8_t *)&v6, 0x20u);
  }
  return [*(id *)(a1 + 32) _handleRequestCompletedWithUUID:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
}

void sub_10031E9EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 136315906;
    id v15 = "-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke";
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    __int16 v18 = 2112;
    id v19 = v5;
    __int16 v20 = 2112;
    uint64_t v21 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s %p Received reply %@ for command %@.", buf, 0x2Au);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10031EDA0;
  block[3] = &unk_10050E138;
  __int16 v10 = *(NSObject **)(a1 + 48);
  id v13 = *(id *)(a1 + 40);
  dispatch_async(v10, block);
  uint64_t v11 = *(void *)(a1 + 56);
  if (v11) {
    (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v5, v6);
  }
}

void sub_10031EB60(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 136315650;
    id v14 = "-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke_2";
    __int16 v15 = 2048;
    uint64_t v16 = v3;
    __int16 v17 = 2112;
    uint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s %p Sending command %@...", buf, 0x20u);
  }
  id v5 = *(void **)(a1 + 32);
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  uint64_t v9 = sub_10031ECA8;
  __int16 v10 = &unk_10050DEE8;
  uint64_t v11 = v5;
  id v12 = *(id *)(a1 + 48);
  id v6 = [v5 _serviceDelegateWithErrorHandler:&v7];
  objc_msgSend(v6, "requestHandleCommand:reply:", *(void *)(a1 + 40), *(void *)(a1 + 48), v7, v8, v9, v10, v11);
}

void sub_10031ECA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    uint64_t v7 = "-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = v5;
    __int16 v10 = 2114;
    id v11 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s %p Failure sending ace command to client %{public}@", (uint8_t *)&v6, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_10031EDA0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "adClientConnection_leaveRequestGroup");
}

void sub_10031EE40(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10031EED0;
  void v4[3] = &unk_10050C610;
  void v4[4] = v2;
  id v3 = [v2 _serviceDelegateWithErrorHandler:v4];
  [v3 requestDidUpdateResponseMode:*(void *)(a1 + 40)];
}

void sub_10031EED0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 136315650;
    uint64_t v7 = "-[ADClientConnection adRequestDidUpdateResponseMode:]_block_invoke_2";
    __int16 v8 = 2048;
    uint64_t v9 = v5;
    __int16 v10 = 2114;
    id v11 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s #modes %p Failure sending response modde to client %{public}@", (uint8_t *)&v6, 0x20u);
  }
}

id sub_10031F048(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 48);
  if (!v2)
  {
    dispatch_group_t v3 = dispatch_group_create();
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 48);
    *(void *)(v4 + 48) = v3;

    uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 48);
  }
  int v6 = *(void **)(a1 + 40);
  return _objc_msgSend(v6, "adClientConnection_enterRequestGroup:", v2);
}

void sub_10031F3C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTimestamp:mach_absolute_time()];
  [v3 setReason:*(void *)(a1 + 32)];
  v7[0] = @"processIdentifier";
  uint64_t v4 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(*(void *)(a1 + 40) + 8) processIdentifier]);
  v7[1] = @"client";
  v8[0] = v4;
  id v5 = [objc_alloc((Class)NSString) initWithFormat:@"%@", *(void *)(a1 + 40)];
  v8[1] = v5;
  int v6 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  [v3 setUserInfo:v6];
}

void sub_10031F7E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTimestamp:mach_absolute_time()];
  [v3 setReason:*(void *)(a1 + 32)];
  v7[0] = @"processIdentifier";
  uint64_t v4 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(*(void *)(a1 + 40) + 8) processIdentifier]);
  v7[1] = @"client";
  v8[0] = v4;
  id v5 = [objc_alloc((Class)NSString) initWithFormat:@"%@", *(void *)(a1 + 40)];
  v8[1] = v5;
  int v6 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  [v3 setUserInfo:v6];
}

void sub_10031FF58(uint64_t a1)
{
  [*(id *)(a1 + 32) _removeAllSpeechCapturingContextsForReason:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _removeAllAudioSessionAssertionsForReason:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _setBluetoothDevice:0];
  [*(id *)(a1 + 32) _continuePendingSpeechRequestFromTimestamp:0.0];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 48);
  *(void *)(v2 + 48) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = 0;

  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void **)(v6 + 56);
  *(void *)(v6 + 56) = 0;

  *(unsigned char *)(*(void *)(a1 + 32) + 129) = 0;
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 64);
  *(void *)(v8 + 64) = 0;

  *(void *)(*(void *)(a1 + 32) + 96) = 0;
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(v10 + 112);
  *(void *)(v10 + 112) = 0;

  uint64_t v12 = *(void *)(a1 + 32);
  id v13 = *(void **)(v12 + 104);
  *(void *)(v12 + 104) = 0;

  [*(id *)(*(void *)(a1 + 32) + 160) cancel];
  uint64_t v14 = *(void *)(a1 + 32);
  __int16 v15 = *(void **)(v14 + 160);
  *(void *)(v14 + 160) = 0;
}

void sub_1003203D0(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315394;
    uint64_t v12 = "-[ADClientConnection initWithXPCConnection:]_block_invoke";
    __int16 v13 = 2048;
    uint64_t v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Long lived client connection (%lf seconds) triggered", buf, 0x16u);
  }
  uint64_t v4 = +[SiriCoreSymptomsReporter sharedInstance];
  id v5 = +[NSNumber numberWithDouble:*(double *)(a1 + 32), @"long_lived_duration"];
  uint64_t v10 = v5;
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
  uint64_t v7 = +[NSProcessInfo processInfo];
  id v8 = [v7 processIdentifier];
  [v4 reportIssueForType:@"client_connection" subType:@"long_lived_connection" context:v6 processIdentifier:v8 walkboutStatus:byte_100585E38];
}

void sub_100320748(uint64_t a1, uint64_t a2)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 136315906;
    id v8 = "-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestGroup:]_block_invoke";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    __int16 v13 = 2048;
    uint64_t v14 = a2;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s Left request group %@ for command %@ (signal = %ld).", (uint8_t *)&v7, 0x2Au);
  }
}

uint64_t sub_100321034(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_1005863A8;
  qword_1005863A8 = (uint64_t)v1;
  return _objc_release_x1(v1, v2);
}

uint64_t sub_100321190(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100321470(uint64_t a1)
{
  return [*(id *)(a1 + 32) _continuePendingSpeechRequestFromTimestamp:*(double *)(a1 + 40)];
}

id sub_10032160C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (AFIsInternalInstall())
    {
      uint64_t v2 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        int v7 = 136315394;
        id v8 = "-[ADDictationConnection localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke";
        __int16 v9 = 2114;
        uint64_t v10 = v6;
        _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Speech recognition encountered error: %{public}@", (uint8_t *)&v7, 0x16u);
      }
    }
  }
  [*(id *)(*(void *)(a1 + 40) + 8) invalidate];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(v3 + 8);
  *(void *)(v3 + 8) = 0;

  id result = [*(id *)(*(void *)(a1 + 40) + 24) speechRecognitionDidFinishWithError:*(void *)(a1 + 32)];
  *(unsigned char *)(*(void *)(a1 + 40) + 48) = 0;
  *(unsigned char *)(*(void *)(a1 + 40) + 16) = 0;
  return result;
}

id sub_1003217AC(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidRecognizePackage:*(void *)(a1 + 40)];
}

id sub_100321914(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidProcessAudioDuration:*(double *)(a1 + 40)];
}

id sub_1003219C0(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidRecognizeTokens:*(void *)(a1 + 40) nluResult:0 usingSpeechModel:&stru_10050F7D8];
}

uint64_t sub_10032228C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100322C4C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_100322D30;
    v7[3] = &unk_10050C388;
    id v8 = objc_alloc_init((Class)NSMutableArray);
    id v6 = v8;
    [v5 enumerateKeysAndObjectsUsingBlock:v7];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100322D30(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (AFOfflineDictationStatusStringIsInstalled()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

uint64_t sub_100323678(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (AFConnectionHasEntitlement())
  {
    uint64_t v4 = 1;
  }
  else
  {
    if (v3)
    {
      [v3 auditToken];
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    uint64_t v18 = kTCCAccessCheckOptionPrompt;
    id v5 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2, v12, v13);
    id v19 = v5;
    +[NSDictionary dictionaryWithObjects:&v19 forKeys:&v18 count:1];
    int v6 = TCCAccessCheckAuditToken();

    if (v6)
    {
      id v7 = objc_alloc_init((Class)BKSApplicationStateMonitor);
      unsigned int v8 = objc_msgSend(v7, "mostElevatedApplicationStateForPID:", objc_msgSend(v3, "processIdentifier"));
      [v7 invalidate];
      uint64_t v4 = (v8 >> 3) & 1;
      if ((v8 & 8) == 0)
      {
        __int16 v9 = AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136315394;
          __int16 v15 = "CheckPrerecordedConnectionAccess";
          __int16 v16 = 2114;
          id v17 = v3;
          _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Connection (%{public}@) cannot use pre-recorded speech recognition; cannot start from the background",
            buf,
            0x16u);
        }
      }
    }
    else
    {
      uint64_t v10 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        __int16 v15 = "CheckPrerecordedConnectionAccess";
        __int16 v16 = 2114;
        id v17 = v3;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s Connection (%{public}@) cannot use pre-recorded dictation; needs dictation prerecorded entitlement or speec"
          "h recognition entitlement",
          buf,
          0x16u);
      }
      uint64_t v4 = 0;
    }
  }

  return v4;
}

void *sub_10032389C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = result;
    id result = [*(id *)(result[4] + 24) speechRecognitionDidFinishWithError:a4];
    *(unsigned char *)(v4[4] + 48) = 0;
    *(unsigned char *)(v4[4] + 16) = 0;
  }
  return result;
}

void sub_100323F60(uint64_t a1)
{
  id v2 = +[CSSpeechController sharedController];
  [v2 languageDetectorSetMostRecentRecognitionLanguage:*(void *)(a1 + 32)];
}

BOOL sub_1003241C0(void *a1)
{
  if (a1) {
    [a1 auditToken];
  }
  return TCCAccessCheckAuditToken() != 0;
}

void sub_100324220(void *a1)
{
  id v1 = a1;
  if (AFConnectionHasEntitlement())
  {
    id v2 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      id v3 = v2;
      int v6 = 136315650;
      id v7 = "SanitizeAFSpeechRequestOptions";
      __int16 v8 = 1024;
      unsigned int v9 = [v1 suppressStartAlert];
      __int16 v10 = 1024;
      unsigned int v11 = [v1 suppressStopAlert];
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Client has entitlement, so skipping sanitization of speech options (suppressStartAlert: %d, suppressStopAlert: %d)", (uint8_t *)&v6, 0x18u);
    }
  }
  else
  {
    if ([v1 suppressStopAlert])
    {
      uint64_t v4 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
      {
        int v6 = 136315138;
        id v7 = "SanitizeAFSpeechRequestOptions";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Ignoring suppressStopAlert from client", (uint8_t *)&v6, 0xCu);
      }
      [v1 setSuppressStopAlert:0];
    }
    if ([v1 suppressStartAlert])
    {
      id v5 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
      {
        int v6 = 136315138;
        id v7 = "SanitizeAFSpeechRequestOptions";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Ignoring suppressStartAlert from client", (uint8_t *)&v6, 0xCu);
      }
      [v1 setSuppressStartAlert:0];
    }
  }
}

void sub_100324C98(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(v4 + 80))
  {
    id v5 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v14 = 136315138;
      __int16 v15 = "-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Shouldn't have a pending request, continuing and canceling it now.", (uint8_t *)&v14, 0xCu);
      uint64_t v4 = *(void *)(a1 + 32);
    }
    [(id)v4 _continuePendingSpeechRequestFromTimestamp:0.0];
    uint64_t v4 = *(void *)(a1 + 32);
  }
  if (*(unsigned char *)(v4 + 88))
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    if (v3) {
      v3[2](v3, 0.0);
    }
  }
  else
  {
    int v6 = objc_retainBlock(v3);
    uint64_t v7 = *(void *)(a1 + 32);
    __int16 v8 = *(void **)(v7 + 80);
    *(void *)(v7 + 80) = v6;

    uint64_t v9 = +[NSXPCListener anonymousListener];
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned int v11 = *(void **)(v10 + 64);
    *(void *)(v10 + 64) = v9;

    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "setDelegate:");
    [*(id *)(*(void *)(a1 + 32) + 64) resume];
    uint64_t v12 = *(void *)(a1 + 40);
    long long v13 = [*(id *)(*(void *)(a1 + 32) + 64) endpoint];
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);
  }
}

void sub_100324FBC(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 136315394;
    __int16 v8 = "-[ADDictationConnection startRequestActivityWithCompletion:]_block_invoke";
    __int16 v9 = 2048;
    uint64_t v10 = v6;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s %p", (uint8_t *)&v7, 0x16u);
  }
  [*(id *)(a1 + 32) _invokeRequestCompletion];
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 96);
  *(void *)(v4 + 96) = v3;
}

uint64_t sub_1003258A8()
{
  uint64_t state64 = 0;
  uint32_t state = notify_get_state(dword_1005863B8, &state64);
  if (!state) {
    return state64 & 1;
  }
  uint32_t v1 = state;
  id v2 = AFSiriLogContextDaemon;
  uint64_t result = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (result)
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v6 = "_GetKeyboardIsVisible";
    __int16 v7 = 1024;
    uint32_t v8 = v1;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Could not read keyboard visibility status: %ud", buf, 0x12u);
    return 0;
  }
  return result;
}

uint64_t sub_100325988()
{
  uint64_t state64 = 0;
  uint32_t state = notify_get_state(dword_1005863BC, &state64);
  if (!state) {
    return state64 & 1;
  }
  uint32_t v1 = state;
  id v2 = AFSiriLogContextDaemon;
  uint64_t result = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (result)
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v6 = "_GetHardwareKeyboardAttached";
    __int16 v7 = 1024;
    uint32_t v8 = v1;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Could not read hw keyboard attached status: %ud", buf, 0x12u);
    return 0;
  }
  return result;
}

id sub_100325ADC(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidPauseRecognition];
}

id sub_100325B80(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidBeginLocalRecognitionWithModelInfo:*(void *)(a1 + 40)];
}

id sub_100325C24(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) speechDidRecognizeMultilingualSpeech:*(void *)(a1 + 40)];
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  return [v2 speechRecognitionDidFinishWithError:0];
}

id sub_100325D04(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) languageDetectorFailedWithError:*(void *)(a1 + 40)];
}

id sub_100325DDC(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) speechDidDetectLanguage:*(void *)(a1 + 40) confidenceScores:*(void *)(a1 + 48) isConfident:*(unsigned __int8 *)(a1 + 56)];
}

uint64_t sub_100325EA0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 50);
  return result;
}

void sub_100325FB4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 50) = 0;
  id v4 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"audio file finished writing; file handle: %@; error: %@",
         *(void *)(a1 + 40),
         *(void *)(a1 + 48));
  id v2 = *(void **)(*(void *)(a1 + 32) + 56);
  id v3 = [*(id *)(a1 + 56) sessionUUID];
  [v2 notifyAudioFileIOTransactionStoppedForReason:v4 sessionUUID:v3];
}

void sub_10032612C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 48))
  {
    *(unsigned char *)(v1 + 48) = 0;
    id v3 = objc_opt_new();
    id v4 = [*(id *)(a1 + 40) pronunciationData];
    id v5 = [v4 orthography];
    [v3 setOrthography:v5];

    uint64_t v6 = [*(id *)(a1 + 40) pronunciationData];
    __int16 v7 = [v6 language];
    [v3 setLanguage:v7];

    uint32_t v8 = [*(id *)(a1 + 40) pronunciationData];
    __int16 v9 = [v8 ttsPronunciations];
    [v3 setPhonemeSuggestions:v9];

    uint64_t v10 = *(void **)(*(void *)(a1 + 32) + 24);
    long long v13 = v3;
    unsigned int v11 = +[NSArray arrayWithObjects:&v13 count:1];
    [v10 speechDidRecognizeTranscriptionObjects:v11 usingSpeechModel:*(void *)(a1 + 48)];

    [*(id *)(*(void *)(a1 + 32) + 24) speechRecognitionDidFinishWithError:0];
    uint64_t v12 = *(void *)(a1 + 32);
    if (!*(unsigned char *)(v12 + 49)) {
      [*(id *)(v12 + 56) notifySpeechRecognitionTransactionStoppedForReason:@"dictation speech was recognized remotely and we're not waiting for structured results" sessionUUID:*(void *)(a1 + 56)];
    }
  }
}

void *sub_1003263D0(void *result)
{
  uint64_t v1 = result[4];
  if (*(unsigned char *)(v1 + 104))
  {
    if (!*(unsigned char *)(v1 + 106))
    {
      id v2 = result;
      *(unsigned char *)(v1 + 106) = 1;
      uint64_t v3 = result[4];
      if (*(unsigned char *)(v3 + 48))
      {
        *(unsigned char *)(v3 + 48) = 0;
        id v4 = AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
        {
          int v5 = 136315138;
          uint64_t v6 = "-[ADDictationConnection adSpeechLocalRecognitionDidSucceedWithSessionUUID:]_block_invoke";
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Dictation transaction for utterance detection request ended in local recognition", (uint8_t *)&v5, 0xCu);
        }
        [(id)v2[4] _invokeRequestCompletion];
        [*(id *)(v2[4] + 24) speechRecognitionDidFinishWithError:0];
        return [*(id *)(v2[4] + 56) notifySpeechRecognitionTransactionStoppedForReason:@"dictation local speech recognition succeeded" sessionUUID:v2[5]];
      }
    }
  }
  return result;
}

id sub_100326630(id result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((void *)result + 4);
  if (*(unsigned char *)(v2 + 48) || *(unsigned char *)(v2 + 49))
  {
    *(unsigned char *)(v2 + 48) = 0;
    *(unsigned char *)(*((void *)result + 4) + 49) = 0;
    [*((id *)result + 4) _invokeRequestCompletion];
    [*(id *)(v1[4] + 24) speechRecognitionDidFinishWithError:v1[5]];
    uint64_t v3 = *(void **)(v1[4] + 56);
    uint64_t v4 = v1[6];
    return [v3 notifySpeechRecognitionTransactionStoppedForReason:@"dictation speech recognition failed" sessionUUID:v4];
  }
  return result;
}

void *sub_1003268C0(void *result)
{
  uint64_t v1 = result[4];
  if (*(unsigned char *)(v1 + 49))
  {
    uint64_t v2 = result;
    *(unsigned char *)(v1 + 49) = 0;
    uint64_t result = [*(id *)(result[4] + 24) speechDidRecognizeTranscriptionObjects:result[5] usingSpeechModel:result[6]];
    uint64_t v3 = v2[4];
    if (!*(unsigned char *)(v3 + 48))
    {
      uint64_t v4 = *(void **)(v3 + 56);
      uint64_t v5 = v2[7];
      return [v4 notifySpeechRecognitionTransactionStoppedForReason:@"dictation structured result was returned and we're not recording an audio file" sessionUUID:v5];
    }
  }
  return result;
}

void sub_100326A48(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[104])
  {
    if (!v2[105] || v2[106])
    {
      uint64_t v3 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        __int16 v22 = "-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:rawPhrases:utterances:rawUtterances:nluResult"
              ":sessionUUID:refId:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Did recognize phrases in utterance detection mode. Recognition might not be finished yet.", buf, 0xCu);
      }
      return;
    }
    v2[106] = 1;
  }
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    __int16 v22 = "-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:rawPhrases:utterances:rawUtterances:nluResult:ses"
          "sionUUID:refId:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Dictation transaction ended in local recognition", buf, 0xCu);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v5 + 48) || *(unsigned char *)(v5 + 49))
  {
    *(unsigned char *)(v5 + 48) = 0;
    [*(id *)(a1 + 32) _invokeRequestCompletion];
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(unsigned char *)(v6 + 49))
    {
      id v7 = objc_alloc_init((Class)NSMutableString);
      long long v16 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      id v8 = *(id *)(a1 + 40);
      id v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v17;
        do
        {
          uint64_t v12 = 0;
          do
          {
            if (*(void *)v17 != v11) {
              objc_enumerationMutation(v8);
            }
            long long v13 = objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * (void)v12), "interpretations", (void)v16);
            int v14 = [v13 firstObject];
            __int16 v15 = [v14 text];
            [v7 appendString:v15];

            uint64_t v12 = (char *)v12 + 1;
          }
          while (v10 != v12);
          id v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
        }
        while (v10);
      }

      [*(id *)(*(void *)(a1 + 32) + 24) speechDidReceiveSearchResults:&__NSArray0__struct recognitionText:v7 stable:1 final:1];
      *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;

      uint64_t v6 = *(void *)(a1 + 32);
    }
    objc_msgSend(*(id *)(v6 + 24), "speechRecognitionDidFinishWithError:", 0, (void)v16);
    [*(id *)(*(void *)(a1 + 32) + 56) notifySpeechRecognitionTransactionStoppedForReason:@"dictation speech was recognized locally and we're not waiting for search results or structured results" sessionUUID:*(void *)(a1 + 48)];
  }
}

void sub_100326DB4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);
  uint64_t v3 = [*(id *)(a1 + 40) voiceSearchResults];
  uint64_t v4 = [*(id *)(a1 + 40) recognitionText];
  [v2 speechDidReceiveSearchResults:v3 recognitionText:v4 stable:1 final:1];

  uint64_t v5 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v5 + 48))
  {
    uint64_t v6 = *(void **)(v5 + 56);
    [v6 notifySpeechRecognitionTransactionStoppedForReason:@"voice search final result result was returned and we're not recording an audio file" sessionUUID:0];
  }
}

void sub_100326EFC(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);
  id v4 = [*(id *)(a1 + 40) voiceSearchResults];
  uint64_t v3 = [*(id *)(a1 + 40) recognitionText];
  objc_msgSend(v2, "speechDidReceiveSearchResults:recognitionText:stable:final:", v4, v3, objc_msgSend(*(id *)(a1 + 40), "stable"), 0);
}

void sub_100327020(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) language];
  uint64_t v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v9 = 136315650;
    id v10 = "-[ADDictationConnection adSpeechRecognizedPartialResult:]_block_invoke";
    __int16 v11 = 2112;
    uint64_t v12 = v4;
    __int16 v13 = 2112;
    int v14 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Partial result %@, Speech model %@", (uint8_t *)&v9, 0x20u);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (!*(unsigned char *)(v5 + 51)) {
    goto LABEL_7;
  }
  if (sub_1003258A8() & 1) != 0 || (sub_100325988())
  {
    *(unsigned char *)(*(void *)(a1 + 40) + 51) = 0;
    uint64_t v5 = *(void *)(a1 + 40);
LABEL_7:
    [*(id *)(v5 + 24) speechDidRecognizePartialResult:*(void *)(a1 + 32)];
    goto LABEL_8;
  }
  uint64_t v6 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v9 = 136315138;
    id v10 = "-[ADDictationConnection adSpeechRecognizedPartialResult:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s No keyboard visible during dictation; cancelling recognition",
      (uint8_t *)&v9,
      0xCu);
  }
  id v7 = *(void **)(*(void *)(a1 + 40) + 24);
  id v8 = +[NSError errorWithDomain:kAFAssistantErrorDomain code:223 userInfo:&__NSDictionary0__struct];
  [v7 speechRecognitionDidFinishWithError:v8];

  [*(id *)(a1 + 40) cancelSpeech];
LABEL_8:
}

id sub_1003272BC(id result)
{
  uint64_t v1 = *((void *)result + 4);
  if (*(unsigned char *)(v1 + 48))
  {
    id v2 = result;
    *(unsigned char *)(v1 + 48) = 0;
    [*((id *)result + 4) _invokeRequestCompletion];
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v15 = "-[ADDictationConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Dictation transaction ended in remote recognition", buf, 0xCu);
    }
    uint64_t v4 = *(void **)(*((void *)v2 + 4) + 24);
    uint64_t v5 = [*((id *)v2 + 5) recognition];
    uint64_t v6 = objc_msgSend(v5, "af_speechPhrases");
    id v7 = [*((id *)v2 + 5) recognition];
    id v8 = objc_msgSend(v7, "af_speechUtterances");
    uint64_t v9 = *((void *)v2 + 6);
    id v10 = objc_msgSend(*((id *)v2 + 5), "af_correctionContext");
    __int16 v11 = [*((id *)v2 + 5) audioAnalytics];
    uint64_t v12 = objc_msgSend(v11, "af_audioAnalytics");
    [v4 speechDidRecognizePhrases:v6 rawPhrases:0 utterances:v8 rawUtterances:0 nluResult:0 usingSpeechModel:v9 correctionContext:v10 audioAnalytics:v12];

    uint64_t result = [*(id *)(*((void *)v2 + 4) + 24) speechRecognitionDidFinishWithError:0];
    uint64_t v13 = *((void *)v2 + 4);
    if (!*(unsigned char *)(v13 + 49)) {
      return [*(id *)(v13 + 56) notifySpeechRecognitionTransactionStoppedForReason:@"dictation speech was recognized remotely and we're not waiting for structured results" sessionUUID:*((void *)v2 + 7)];
    }
  }
  return result;
}

void sub_1003275C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 48) || *(unsigned char *)(v2 + 49))
  {
    *(unsigned char *)(v2 + 48) = 0;
    *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;
    [*(id *)(a1 + 32) _invokeRequestCompletion];
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 136315394;
      id v8 = "-[ADDictationConnection adSpeechRecordingDidFail:context:]_block_invoke";
      __int16 v9 = 2114;
      uint64_t v10 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Sending recording failed %{public}@", (uint8_t *)&v7, 0x16u);
    }
    [*(id *)(*(void *)(a1 + 32) + 24) speechRecordingDidFail:*(void *)(a1 + 40)];
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 56);
    uint64_t v5 = [*(id *)(a1 + 48) sessionUUID];
    [v4 notifySpeechRecognitionTransactionStoppedForReason:@"dictation audio recording failed and an audio file is not being written" sessionUUID:v5];
  }
}

void sub_100327804(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 48) || *(unsigned char *)(v2 + 49))
  {
    *(unsigned char *)(v2 + 48) = 0;
    *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;
    [*(id *)(a1 + 32) _invokeRequestCompletion];
    [*(id *)(*(void *)(a1 + 32) + 24) speechRecordingDidCancel];
    uint64_t v3 = *(void **)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 56);
    uint64_t v5 = [v3 sessionUUID];
    [v4 notifySpeechRecognitionTransactionStoppedForReason:@"dictation audio recording was cancelled" sessionUUID:v5];
  }
  uint64_t v6 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v7 = 136315138;
    id v8 = "-[ADDictationConnection adSpeechRecordingDidCancelWithContext:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Dictation transaction ended in cancel", (uint8_t *)&v7, 0xCu);
  }
}

void sub_100327CF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setTimestamp:mach_absolute_time()];
  [v3 setReason:*(void *)(a1 + 32)];
  CFStringRef v9 = @"client";
  id v4 = objc_alloc((Class)NSString);
  uint64_t v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  id v7 = [v4 initWithFormat:@"%@ %p", v6, *(void *)(a1 + 40)];
  id v10 = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
  [v3 setUserInfo:v8];
}

void sub_100327FD4(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 32) releaseAudioSessionOnRecordingCompletion])
  {
    [*(id *)(a1 + 32) _removeAllAudioSessionAssertionsForReason:@"Dictation Options Specified Release Audio Session On Recording Completion"];
    uint64_t v2 = +[ADCommandCenter sharedCommandCenter];
    [v2 forceAudioSessionInactiveWithOptions:*(void *)(a1 + 40) completion:0];
  }
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = 0;
}

id sub_100328130(uint64_t a1)
{
  [*(id *)(a1 + 32) _removeAllAudioSessionAssertionsForReason:@"Dictation Connection Disconnected"];
  [*(id *)(a1 + 32) _continuePendingSpeechRequestFromTimestamp:0.0];
  uint64_t v2 = *(void **)(a1 + 32);
  return [v2 _invokeRequestCompletion];
}

void sub_1003283FC(id a1)
{
  uint32_t v1 = notify_register_check("com.apple.keyboard.isOnScreen", &dword_1005863B8);
  if (v1)
  {
    uint32_t v2 = v1;
    dword_1005863B8 = -1;
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315394;
      id v8 = "-[ADDictationConnection initWithServiceDelegate:]_block_invoke";
      __int16 v9 = 1024;
      uint32_t v10 = v2;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Could not register keyboard notify: %ud", (uint8_t *)&v7, 0x12u);
    }
  }
  uint32_t v4 = notify_register_check("GSEventHardwareKeyboardAttached", &dword_1005863BC);
  if (v4)
  {
    uint32_t v5 = v4;
    dword_1005863BC = -1;
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315394;
      id v8 = "-[ADDictationConnection initWithServiceDelegate:]_block_invoke";
      __int16 v9 = 1024;
      uint32_t v10 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Could not register hw keyboard notify: %ud", (uint8_t *)&v7, 0x12u);
    }
  }
}

uint64_t sub_100328D8C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

uint64_t sub_100328ED4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

void sub_1003291C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 44))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 80));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    uint32_t v5 = [*(id *)(v4 + 64) sessionUUID];
    [WeakRetained speechManager:v4 didRecognizeTokens:v3 sessionUUID:v5];
  }
  else
  {
    uint64_t v6 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v9 = "-[ADSpeechManager asrBridgeReceivedPartialResult:language:tokens:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Speech finished dropping callback", buf, 0xCu);
    }
  }
}

void sub_1003293D8(void *a1)
{
  uint64_t v1 = a1[4];
  if (*(unsigned char *)(v1 + 44))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 80));
    [WeakRetained speechManager:a1[4] didRecognizePackage:a1[5] sessionUUID:a1[6]];
  }
  else
  {
    uint64_t v3 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v6 = "-[ADSpeechManager asrBridgeReceivedFinalResult:speechPackage:sessionUUID:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Speech finished dropping callback", buf, 0xCu);
    }
  }
}

void sub_1003295BC(void *a1)
{
  uint64_t v1 = a1[4];
  if (*(void *)(v1 + 48) == 3)
  {
    uint32_t v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v6 = "-[ADSpeechManager asrBridgeReceivedEagerRecognitionCandidate:rawRecognitionResult:duration:sessionUUID:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Speech skipping sending raw eager recognition candidate callback", buf, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 80));
    [WeakRetained speechManager:a1[4] didRecognizeRawEagerRecognitionCandidate:a1[5] sessionUUID:a1[6]];
  }
}

void sub_1003297D4(uint64_t a1, void *a2, float a3)
{
  id v5 = a2;
  if (v5)
  {
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Failed to get Siri volume: %@", buf, 0x16u);
    }
    (*(void (**)(float))(*(void *)(a1 + 48) + 16))(a3);
  }
  else if (a3 < 0.3 || a3 > 0.7)
  {
    int v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke";
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = a3;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s Siri volume: %f", buf, 0x16u);
    }
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000;
    char v29 = 0;
    v26[0] = 0;
    v26[1] = v26;
    void v26[2] = 0x2020000000;
    int v27 = 0;
    v24[0] = 0;
    v24[1] = v24;
    v24[2] = 0x2020000000;
    float v25 = a3;
    id v8 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    __int16 v9 = dispatch_queue_create("_getAdjustedSiriOutputVolumeLevelForAudioRoute", v8);

    uint32_t v10 = dispatch_group_create();
    dispatch_group_enter(v10);
    __int16 v11 = [*(id *)(a1 + 32) _volumeService];
    uint64_t v12 = *(void **)(a1 + 40);
    uint64_t v13 = [v12 routeName];
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100329BCC;
    v21[3] = &unk_10050C900;
    dispatch_group_t v23 = v26;
    int v14 = v10;
    __int16 v22 = v14;
    [v11 getMusicOutputVolumeForAudioRoute:v12 withName:v13 completion:v21];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100329CC0;
    block[3] = &unk_10050E318;
    void block[4] = buf;
    dispatch_group_async(v14, v9, block);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100329D28;
    v15[3] = &unk_10050C928;
    long long v17 = buf;
    long long v18 = v24;
    long long v19 = v26;
    id v16 = *(id *)(a1 + 48);
    dispatch_group_notify(v14, v9, v15);

    _Block_object_dispose(v24, 8);
    _Block_object_dispose(v26, 8);
    _Block_object_dispose(buf, 8);
  }
  else
  {
    (*(void (**)(float))(*(void *)(a1 + 48) + 16))(a3);
  }
}

void sub_100329B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100329BCC(uint64_t a1, void *a2, float a3)
{
  id v5 = a2;
  if (v5)
  {
    uint64_t v6 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315394;
      id v8 = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke";
      __int16 v9 = 2112;
      id v10 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Failed to get Media volume: %@", (uint8_t *)&v7, 0x16u);
    }
  }
  else
  {
    *(float *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100329CC0(uint64_t a1)
{
  id v2 = +[SOMediaNowPlayingObserver defaultObserver];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v2 playbackState] == (id)1;
}

uint64_t sub_100329D28(void *a1)
{
  if (*(unsigned char *)(*(void *)(a1[5] + 8) + 24)) {
    *(_DWORD *)(*(void *)(a1[6] + 8) + 24) = *(_DWORD *)(*(void *)(a1[7] + 8) + 24);
  }
  float v2 = *(float *)(*(void *)(a1[6] + 8) + 24);
  int v3 = 1050253722;
  if (v2 < 0.3)
  {
    uint64_t v4 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24);
      int v7 = v4;
      id v8 = +[NSNumber numberWithBool:v6];
      int v16 = 136315906;
      long long v17 = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke_2";
      __int16 v18 = 2048;
      double v19 = v2;
      __int16 v20 = 2048;
      double v21 = 0.300000012;
      __int16 v22 = 2112;
      dispatch_group_t v23 = v8;
LABEL_13:
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s Reference volume: %f, adjusted Siri volume: %f, Media volume used: %@", (uint8_t *)&v16, 0x2Au);

      goto LABEL_8;
    }
    goto LABEL_8;
  }
  __int16 v9 = (void *)AFSiriLogContextDaemon;
  BOOL v10 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG);
  int v3 = 1060320051;
  if (v2 > 0.7)
  {
    if (v10)
    {
      uint64_t v12 = *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24);
      int v7 = v9;
      id v8 = +[NSNumber numberWithBool:v12];
      int v16 = 136315906;
      long long v17 = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke";
      __int16 v18 = 2048;
      double v19 = v2;
      __int16 v20 = 2048;
      double v21 = 0.699999988;
      __int16 v22 = 2112;
      dispatch_group_t v23 = v8;
      goto LABEL_13;
    }
LABEL_8:
    v5.n128_u32[0] = v3;
    return (*(uint64_t (**)(__n128))(a1[4] + 16))(v5);
  }
  if (v10)
  {
    uint64_t v13 = *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24);
    int v14 = v9;
    __int16 v15 = +[NSNumber numberWithBool:v13];
    int v16 = 136315906;
    long long v17 = "-[ADSpeechManager _getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:]_block_invoke";
    __int16 v18 = 2048;
    double v19 = v2;
    __int16 v20 = 2048;
    double v21 = v2;
    __int16 v22 = 2112;
    dispatch_group_t v23 = v15;
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "%s Reference volume: %f, adjusted Siri volume: %f, Media volume used: %@", (uint8_t *)&v16, 0x2Au);

    float v2 = *(float *)(*(void *)(a1[6] + 8) + 24);
  }
  v5.n128_f32[0] = v2;
  return (*(uint64_t (**)(__n128))(a1[4] + 16))(v5);
}

void sub_10032A0B4(uint64_t a1)
{
  float v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10032A144;
  v3[3] = &unk_10050C8D8;
  void v3[4] = v2;
  id v4 = v1;
  [v2 _getAdjustedSiriOutputVolumeLevelForAudioRoute:v4 withCompletion:v3];
}

void sub_10032A144(uint64_t a1, char a2, void *a3, float a4)
{
  double v7 = COERCE_DOUBLE(a3);
  if (v7 == 0.0)
  {
    if (a2)
    {
      __int16 v9 = [*(id *)(a1 + 32) _volumeService];
      BOOL v10 = *(void **)(a1 + 40);
      __int16 v11 = [v10 routeName];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_10032A32C;
      void v13[3] = &unk_10050C8B0;
      float v14 = a4;
      [v9 setSiriOutputVolume:v10 forAudioRoute:v11 withName:1 operationType:v13 completion:COERCE_DOUBLE((unint64_t)LODWORD(a4))];
    }
    else
    {
      uint64_t v12 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136315394;
        int v16 = "-[ADSpeechManager adjustSiriOutputVolumeForRouteIfNeeded:]_block_invoke";
        __int16 v17 = 2048;
        double v18 = a4;
        _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%s No need to adjust the volume: %f", buf, 0x16u);
      }
    }
  }
  else
  {
    id v8 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      int v16 = "-[ADSpeechManager adjustSiriOutputVolumeForRouteIfNeeded:]_block_invoke_2";
      __int16 v17 = 2112;
      double v18 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s Error: %@", buf, 0x16u);
    }
  }
}

void sub_10032A32C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG);
  if (v3)
  {
    if (v5)
    {
      double v6 = *(float *)(a1 + 32);
      int v11 = 136315650;
      uint64_t v12 = "-[ADSpeechManager adjustSiriOutputVolumeForRouteIfNeeded:]_block_invoke";
      __int16 v13 = 2048;
      double v14 = v6;
      __int16 v15 = 2112;
      id v16 = v3;
      double v7 = "%s Failed to adjust volume to %f, reason: %@";
      id v8 = v4;
      uint32_t v9 = 32;
LABEL_7:
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, v7, (uint8_t *)&v11, v9);
    }
  }
  else if (v5)
  {
    double v10 = *(float *)(a1 + 32);
    int v11 = 136315394;
    uint64_t v12 = "-[ADSpeechManager adjustSiriOutputVolumeForRouteIfNeeded:]_block_invoke";
    __int16 v13 = 2048;
    double v14 = v10;
    double v7 = "%s Volume adjusted to %f";
    id v8 = v4;
    uint32_t v9 = 22;
    goto LABEL_7;
  }
}

uint64_t sub_10032A610(uint64_t a1)
{
  float v2 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(unsigned __int8 *)(v3 + 240);
    LODWORD(v3) = *(unsigned __int8 *)(v3 + 241);
    int v6 = 136315650;
    double v7 = "-[ADSpeechManager _updateSiriOutputVolume:completion:]_block_invoke";
    __int16 v8 = 1024;
    int v9 = v4;
    __int16 v10 = 1024;
    int v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s hasFetchedSmartSiriVolume = %d, hasUpdatedSiriOutputVolume = %d", (uint8_t *)&v6, 0x18u);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10032AA88(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _speechRecorder];
  id v2 = [*(id *)(a1 + 40) copy];
  [v3 setEARLanguageDetectorSpeechRequestId:v2];
}

uint64_t sub_10032ABD8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
  return v2();
}

void sub_10032AC9C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _speechRecorder];
  [v2 setEndpointerDelayedTrigger:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10032AD68(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _speechRecorder];
  [v2 setEndpointerThreshold:*(double *)(a1 + 40)];
}

void sub_10032AE54(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _speechRecorder];
  [v2 updateSpeechSynthesisRecord:*(void *)(a1 + 40)];
}

void sub_10032AF4C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  [v2 getLastStartpointTimestampAndCurrentTime:*(void *)(a1 + 40)];
}

void sub_10032B018(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  id v3 = v2;
  if (*(unsigned char *)(a1 + 40))
  {
    [v2 forceSuccessAudioAlertOnStop];
    id v2 = v3;
  }
  [v2 setFingerprintingEnabled:0];
}

id sub_10032B148(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateCapturingStateWithOptions:*(void *)(a1 + 40)];
}

void sub_10032B1C8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  [v1 playRecordingStartAlert];
}

id sub_10032B2A4(uint64_t a1)
{
  id v2 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 136315394;
    int v6 = "-[ADSpeechManager setSpeechRecognizedContext:]_block_invoke";
    __int16 v7 = 2112;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s context = %@", (uint8_t *)&v5, 0x16u);
  }
  return [*(id *)(*(void *)(a1 + 40) + 160) setSpeechRecognizedContext:*(void *)(a1 + 32)];
}

void sub_10032B3E0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  [v1 enforcePreviousEndpointHint];
}

void sub_10032B4F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  [v2 updateEndpointHintForRC:*(void *)(a1 + 40) forceAccept:*(unsigned __int8 *)(a1 + 56) completion:*(void *)(a1 + 48)];
}

id sub_10032B5C4(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 160) setSpeechWasRecognizedForElapsedTime:*(unsigned __int8 *)(a1 + 48) isFinal:*(double *)(a1 + 40)];
}

void sub_10032B674(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  [v2 updateASRFeatures:*(void *)(a1 + 40)];
}

void sub_10032B740(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentSpeechCaptureSource];
  objc_msgSend(v2, "suspendAutomaticEndpointingInRange:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

id sub_10032B808(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 160) setFingerprintWasRecognized];
}

id sub_10032B888(uint64_t a1)
{
  id v2 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    int v6 = "-[ADSpeechManager deactivateAudioSessionIfNoActiveAssertions]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s ", (uint8_t *)&v5, 0xCu);
  }
  id result = [*(id *)(*(void *)(a1 + 32) + 312) hasActiveAudioSessionAssertions];
  if ((result & 1) == 0)
  {
    int v4 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      int v5 = 136315138;
      int v6 = "-[ADSpeechManager deactivateAudioSessionIfNoActiveAssertions]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s No active assertions, releasing the audio session", (uint8_t *)&v5, 0xCu);
    }
    return [*(id *)(a1 + 32) audioSessionCoordinator:*(void *)(*(void *)(a1 + 32) + 312) releaseAudioSessionWithContext:0];
  }
  return result;
}

uint64_t sub_10032BA44(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 160) setSuppressInterruptionEndedNotifications:1];
  id v2 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    int v5 = "-[ADSpeechManager suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Notifications suppressed", (uint8_t *)&v4, 0xCu);
  }
  if (AFIsHorseman()) {
    [*(id *)(*(void *)(a1 + 32) + 312) relinquishLocalAssertions];
  }
  [*(id *)(a1 + 32) _endSessionIfIdle];
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10032C0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

id sub_10032C0C0(unsigned int a1)
{
  v4[0] = *(_OWORD *)&off_10050C970;
  v4[1] = *(_OWORD *)&off_10050C980;
  CFStringRef v5 = @"ADSpeechStateCanceling";
  id v1 = *((id *)v4 + a1);
  for (uint64_t i = 32; i != -8; i -= 8)

  return v1;
}

uint64_t sub_10032C16C(uint64_t a1, uint64_t a2)
{
  if (a2 == -1)
  {
    uint64_t v3 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136315138;
      int v6 = "-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Completion is invoked by the deallocation of the safety block. Something went wrong.", (uint8_t *)&v5, 0xCu);
    }
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10032C238(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*((_DWORD *)WeakRetained + 10) == 2)
    {
      *((unsigned char *)WeakRetained + 104) = 1;
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      void v5[2] = sub_10032C3AC;
      v5[3] = &unk_10050E138;
      id v6 = *(id *)(a1 + 32);
      [v3 _addRecordStoppedCompletion:v5];
      [v3 _cancelRecordingWithError:0 suppressAlert:1];
    }
    else
    {
      int v4 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        uint64_t v8 = "-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Recording failed to start releasing session in completion", buf, 0xCu);
      }
      [v3 _releaseSession];
      [*(id *)(a1 + 32) invoke];
    }
  }
}

id sub_10032C39C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

id sub_10032C3A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

id sub_10032C3AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

id sub_10032C5E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _endSessionIfIdle];
}

intptr_t sub_10032C5F0(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(NSObject **)(a1 + 32);
  return dispatch_semaphore_signal(v2);
}

id sub_10032C634(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:*(void *)(a1 + 40)];
}

void sub_10032C7EC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(_DWORD **)(a1 + 32);
  int v4 = v3[10];
  if ((v4 - 3) < 2)
  {
    __int16 v10 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      long long v26 = "-[ADSpeechManager endSession]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s Stopping, waiting for did stop to release session", buf, 0xCu);
    }
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_10032CCA4;
    v19[3] = &unk_10050E138;
    id v20 = v2;
    int v11 = objc_retainBlock(v19);
    uint64_t v12 = *(void *)(a1 + 32);
    __int16 v13 = *(void **)(v12 + 96);
    *(void *)(v12 + 96) = v11;

    int v9 = v20;
    goto LABEL_13;
  }
  if (v4 == 2)
  {
    double v14 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      long long v26 = "-[ADSpeechManager endSession]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s Recording, stopping record to release session", buf, 0xCu);
    }
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10032CC9C;
    v21[3] = &unk_10050E138;
    id v22 = v2;
    __int16 v15 = objc_retainBlock(v21);
    uint64_t v16 = *(void *)(a1 + 32);
    __int16 v17 = *(void **)(v16 + 96);
    *(void *)(v16 + 96) = v15;

    [*(id *)(a1 + 32) _cancelRecordingWithError:0 suppressAlert:1];
    int v9 = v22;
    goto LABEL_13;
  }
  if (v4 == 1)
  {
    int v5 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      long long v26 = "-[ADSpeechManager endSession]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Started, waiting for did start to stop recording then release session", buf, 0xCu);
    }
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    void v23[2] = sub_10032CB40;
    v23[3] = &unk_10050E138;
    id v24 = v2;
    id v6 = objc_retainBlock(v23);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 88);
    *(void *)(v7 + 88) = v6;

    int v9 = v24;
LABEL_13:

    goto LABEL_14;
  }
  double v18 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    long long v26 = "-[ADSpeechManager endSession]_block_invoke_2";
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "%s Asking AVVoiceController to release its audio session now", buf, 0xCu);
    uint64_t v3 = *(_DWORD **)(a1 + 32);
  }
  [v3 _releaseSession];
LABEL_14:
}

void sub_10032CB40(uint64_t a1)
{
  id v2 = *(_DWORD **)(a1 + 32);
  if (v2[10] == 2)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_10032CCAC;
    v8[3] = &unk_10050E138;
    int v9 = v2;
    uint64_t v3 = v9;
    int v4 = objc_retainBlock(v8);
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 96);
    *(void *)(v5 + 96) = v4;

    [*(id *)(a1 + 32) _cancelRecordingWithError:0 suppressAlert:1];
  }
  else
  {
    uint64_t v7 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      int v11 = "-[ADSpeechManager endSession]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Recording failed to start releasing session in completion", buf, 0xCu);
      id v2 = *(_DWORD **)(a1 + 32);
    }
    [v2 _releaseSession];
  }
}

id sub_10032CC9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _releaseSession];
}

id sub_10032CCA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _releaseSession];
}

id sub_10032CCAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _releaseSession];
}

id sub_10032CD2C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 160) setSuppressInterruptionEndedNotifications:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10032CFCC(uint64_t a1)
{
  id v2 = *(_DWORD **)(a1 + 32);
  int v3 = v2[10];
  int v4 = AFSiriLogContextSpeech;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO);
  if (v3 == 2)
  {
    if (v5)
    {
      int v7 = 136315138;
      uint64_t v8 = "-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Stopping speech capture in completion", (uint8_t *)&v7, 0xCu);
      id v2 = *(_DWORD **)(a1 + 32);
    }
    id v6 = [v2 _currentSpeechCaptureSource];
    [v6 stopSpeechCaptureForEvent:*(void *)(a1 + 40) suppressAlert:*(unsigned __int8 *)(a1 + 56) hostTime:*(void *)(a1 + 48)];

    [*(id *)(a1 + 32) _updateSpeechState:3];
  }
  else if (v5)
  {
    int v7 = 136315138;
    uint64_t v8 = "-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Recording failed to start, ignoring stop in completion", (uint8_t *)&v7, 0xCu);
  }
}

void *sub_10032D258(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 32);
  if (result[6] == 4) {
    return _[result _stopSpeechCaptureWithOptions:*(void *)(a1 + 40)];
  }
  return result;
}

id sub_10032D3E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopSpeechCaptureWithOptions:*(void *)(a1 + 40)];
}

void sub_10032D530(uint64_t a1)
{
  id v2 = *(_DWORD **)(a1 + 32);
  unsigned int v3 = v2[10];
  if (v3 == 1)
  {
    id v6 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      double v18 = "-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Recording started canceling in record start completion", buf, 0xCu);
      id v2 = *(_DWORD **)(a1 + 32);
    }
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10032D790;
    void v14[3] = &unk_10050CD50;
    __int16 v15 = v2;
    char v16 = *(unsigned char *)(a1 + 40);
    int v7 = v15;
    uint64_t v8 = objc_retainBlock(v14);
    uint64_t v9 = *(void *)(a1 + 32);
    __int16 v10 = *(void **)(v9 + 88);
    *(void *)(v9 + 88) = v8;
  }
  else if (v3 == 2)
  {
    int v4 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      double v18 = "-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Canceling speech capture", buf, 0xCu);
      id v2 = *(_DWORD **)(a1 + 32);
    }
    BOOL v5 = [v2 _currentSpeechCaptureSource];
    [v5 cancelSpeechCaptureSuppressingAlert:*(unsigned __int8 *)(a1 + 40)];

    [*(id *)(*(void *)(a1 + 32) + 128) cancelCurrentSpeechLog];
    [*(id *)(a1 + 32) _updateSpeechState:4];
  }
  else
  {
    int v11 = (void *)AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = v11;
      __int16 v13 = sub_10032C0C0(v3);
      *(_DWORD *)buf = 136315394;
      double v18 = "-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke";
      __int16 v19 = 2112;
      id v20 = v13;
      _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%s Asked to cancel when we're in state %@", buf, 0x16u);
    }
  }
}

void sub_10032D790(uint64_t a1)
{
  id v2 = *(_DWORD **)(a1 + 32);
  int v3 = v2[10];
  int v4 = AFSiriLogContextSpeech;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO);
  if (v3 == 2)
  {
    if (v5)
    {
      int v7 = 136315138;
      uint64_t v8 = "-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Canceling speech capture in completion", (uint8_t *)&v7, 0xCu);
      id v2 = *(_DWORD **)(a1 + 32);
    }
    id v6 = [v2 _currentSpeechCaptureSource];
    [v6 cancelSpeechCaptureSuppressingAlert:*(unsigned __int8 *)(a1 + 40)];

    [*(id *)(*(void *)(a1 + 32) + 128) cancelCurrentSpeechLog];
    [*(id *)(a1 + 32) _updateSpeechState:4];
  }
  else if (v5)
  {
    int v7 = 136315138;
    uint64_t v8 = "-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Recording failed to start, ignoring cancel in completion", (uint8_t *)&v7, 0xCu);
  }
}

id sub_10032D9D4(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 44) = 1;
  *(unsigned char *)(*(void *)(a1 + 32) + 256) = 0;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), *(id *)(a1 + 40));
  if (*(unsigned char *)(a1 + 56)) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 1;
  }
  *(void *)(*(void *)(a1 + 32) + 48) = v2;
  int v3 = [ADSpeechPlaybackSimulator alloc];
  int v4 = *(void **)(a1 + 32);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[17];
  uint64_t v7 = v4[18];
  uint64_t v8 = v4[24];
  uint64_t v9 = +[ADExperimentManager sharedManager];
  __int16 v10 = [v9 context];
  int v11 = [(ADSpeechPlaybackSimulator *)v3 initWithQueue:v5 speechController:v6 audioSessionController:v7 audioPlaybackService:v8 experimentContext:v10];
  uint64_t v12 = *(void *)(a1 + 32);
  __int16 v13 = *(void **)(v12 + 168);
  *(void *)(v12 + 168) = v11;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 152), *(id *)(*(void *)(a1 + 32) + 168));
  double v14 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 152);
    *(_DWORD *)buf = 136315394;
    long long v26 = "-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke";
    __int16 v27 = 2112;
    uint64_t v28 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s Speech capturing set to %@.", buf, 0x16u);
  }
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 168), "setDelegate:");
  uint64_t v16 = *(void *)(a1 + 32);
  __int16 v17 = *(void **)(v16 + 168);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(unsigned __int8 *)(a1 + 57);
  uint64_t v20 = *(unsigned __int8 *)(a1 + 56);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10032DC10;
  void v24[3] = &unk_10050E138;
  v24[4] = v16;
  [v17 startPlaybackWithURL:v18 narrowBand:v19 dictation:v20 completion:v24];
  double v21 = *(void **)(a1 + 32);
  id v22 = +[NSProcessInfo processInfo];
  [v22 systemUptime];
  objc_msgSend(v21, "_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:", 1, 1);

  return [*(id *)(a1 + 32) _updateSpeechState:1];
}

void sub_10032DC10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10032DC84;
  block[3] = &unk_10050E138;
  void block[4] = v1;
  dispatch_async(v2, block);
}

void sub_10032DC84(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 152), *(id *)(*(void *)(a1 + 32) + 160));
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(void **)(v2 + 168);
  *(void *)(v2 + 168) = 0;

  int v4 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 152);
    int v6 = 136315394;
    uint64_t v7 = "-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke_2";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Speech capturing set to %@.", (uint8_t *)&v6, 0x16u);
  }
}

void sub_10032DDFC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _speechCompressor];
  [v2 addAudioSampleData:*(void *)(a1 + 40)];
}

void sub_10032DF30(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 44) = 1;
  *(unsigned char *)(*(void *)(a1 + 32) + 256) = 0;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), *(id *)(a1 + 40));
  uint64_t v2 = 2;
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v2 = 3;
  }
  *(void *)(*(void *)(a1 + 32) + 48) = v2;
  int v3 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    int v18 = 136315394;
    uint64_t v19 = "-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:]_block_invoke";
    __int16 v20 = 1024;
    LODWORD(v21) = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s secureOfflineOnly is %d", (uint8_t *)&v18, 0x12u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) _speechCompressor];
  [v5 reset];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 152), v5);
  int v6 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 152);
    int v18 = 136315394;
    uint64_t v19 = "-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:]_block_invoke";
    __int16 v20 = 2112;
    uint64_t v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Speech capturing set to %@.", (uint8_t *)&v18, 0x16u);
  }
  [v5 startCompressionNarrowband:*(unsigned __int8 *)(a1 + 49)];
  [*(id *)(*(void *)(a1 + 32) + 8) invalidate];
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 8);
  *(void *)(v8 + 8) = 0;

  if (AFOfflineDictationCapable()
    && ([*(id *)(*(void *)(a1 + 32) + 288) applicationName],
        __int16 v10 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v11 = [v10 isEqualToString:@"OnDeviceDictationAudioData"],
        v10,
        (v11 & 1) == 0))
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), CoreEmbeddedSpeechRecognizerTaskDictation);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    __int16 v13 = *(void **)(v12 + 16);
    *(void *)(v12 + 16) = 0;

    double v14 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 272);
      int v18 = 136315394;
      uint64_t v19 = "-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s Not using local speech recognition for recorded %@", (uint8_t *)&v18, 0x16u);
    }
  }
  uint64_t v16 = *(void **)(a1 + 32);
  __int16 v17 = +[NSProcessInfo processInfo];
  [v17 systemUptime];
  objc_msgSend(v16, "_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:", 0, 1);

  [*(id *)(a1 + 32) _updateSpeechState:1];
}

void sub_10032EAC4(uint64_t a1)
{
  uint64_t v36 = 0;
  id v37 = (double *)&v36;
  uint64_t v38 = 0x2020000000;
  uint64_t v39 = 0;
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10032EFC4;
  v33[3] = &unk_10050C700;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  long long v35 = &v36;
  v33[4] = v4;
  id v34 = v5;
  id v32 = 0;
  LODWORD(v3) = [v2 startSpeechCaptureWithContext:v3 willStartHandler:v33 error:&v32];
  id v6 = v32;
  uint64_t v7 = +[NSProcessInfo processInfo];
  [v7 systemUptime];
  double v9 = v8;

  if (v3)
  {
    if (*(void *)(a1 + 64) == 1 && [*(id *)(a1 + 56) isInitialBringUp])
    {
      double v10 = v37[3];
      [*(id *)(a1 + 56) expectedActivationEventTime];
      +[AFAggregator logTimeToBeepWithDuration:v10 - v11];
    }
    if (*(void *)(*(void *)(a1 + 48) + 304))
    {
      uint64_t v12 = *(void **)(a1 + 56);
      if (v12 && [v12 disableInputAudioPowerUpdate])
      {
        __int16 v13 = AFSiriLogContextSpeech;
        if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136315138;
          v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
          double v14 = "%s Audio power updater disabled.";
LABEL_29:
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, v14, buf, 0xCu);
        }
      }
      else
      {
        long long v31 = AFSiriLogContextSpeech;
        if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 136315138;
          v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "%s Audio power updater enabled.", buf, 0xCu);
        }
        [*(id *)(*(void *)(a1 + 48) + 304) beginUpdate];
      }
    }
    else
    {
      __int16 v13 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
        double v14 = "%s Audio power updater not supported.";
        goto LABEL_29;
      }
    }
  }
  else
  {
    if (v37[3] == 0.0)
    {
      uint64_t v15 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s Inserting will start on speech failure", buf, 0xCu);
      }
      objc_msgSend(*(id *)(a1 + 48), "_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:", 0, objc_msgSend(*(id *)(a1 + 56), "disableInputAudioPowerUpdate"), v9);
    }
    [*(id *)(a1 + 48) _tellDelegateSpeechFailedWithError:v6];
    if ([*(id *)(a1 + 56) audioFileType]) {
      [*(id *)(a1 + 48) _tellDelegateAudioFileDidFinish:0 error:v6];
    }
    [*(id *)(a1 + 48) _updateSpeechState:0];
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = *(void *)(v16 + 88);
    if (v17)
    {
      int v18 = (void *)AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        unsigned int v19 = *(_DWORD *)(v16 + 40);
        __int16 v20 = v18;
        uint64_t v21 = sub_10032C0C0(v19);
        *(_DWORD *)buf = 136315394;
        v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
        __int16 v42 = 2112;
        v43 = v21;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s Invoking recording started completion (uint32_t state = %@)", buf, 0x16u);

        uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 88);
      }
      (*(void (**)(uint64_t))(v17 + 16))(v17);
      uint64_t v22 = *(void *)(a1 + 48);
      dispatch_group_t v23 = *(void **)(v22 + 88);
      *(void *)(v22 + 88) = 0;

      uint64_t v16 = *(void *)(a1 + 48);
    }
    uint64_t v24 = *(void *)(v16 + 96);
    if (v24)
    {
      float v25 = (void *)AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        unsigned int v26 = *(_DWORD *)(v16 + 40);
        __int16 v27 = v25;
        uint64_t v28 = sub_10032C0C0(v26);
        *(_DWORD *)buf = 136315394;
        v41 = "-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke";
        __int16 v42 = 2112;
        v43 = v28;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "%s Invoking recording stopped completion (uint32_t state = %@)", buf, 0x16u);

        uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 96);
      }
      (*(void (**)(uint64_t))(v24 + 16))(v24);
      uint64_t v29 = *(void *)(a1 + 48);
      __int16 v30 = *(void **)(v29 + 96);
      *(void *)(v29 + 96) = 0;
    }
  }

  _Block_object_dispose(&v36, 8);
}

void sub_10032EF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10032EFB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10032EFC4(uint64_t a1)
{
  uint64_t v2 = +[NSProcessInfo processInfo];
  [v2 systemUptime];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v3;

  double v4 = *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) disableInputAudioPowerUpdate];
  return [v5 _tellDelegateSpeechWillBeginWithTimestamp:0 isFromFile:v6 isAudioPowerUpdateDisabled:v4];
}

void sub_10032F1AC(uint64_t a1)
{
  [*(id *)(a1 + 32) _startCaptureForMode:*(void *)(a1 + 56) options:*(void *)(a1 + 40) context:*(void *)(a1 + 48)];
  id v1 = +[AFAnalytics sharedAnalytics];
  [v1 logEventWithType:302 context:0];
}

void sub_10032F3B0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) invalidate];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 8);
  *(void *)(v2 + 8) = 0;
}

void sub_10032F4F0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) invalidate];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 8);
  *(void *)(v2 + 8) = 0;

  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    id v5 = [*(id *)(a1 + 40) copy];
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 272), v5);
  if (v4)
  {
  }
}

uint64_t sub_10032F634(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(_DWORD *)(*(void *)(result + 32) + 40) == 0;
  return result;
}

uint64_t sub_10032F6FC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = (*(_DWORD *)(*(void *)(result + 32)
                                                                                            + 40)
                                                                                - 1) < 2;
  return result;
}

id sub_10032F7B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = v2;

  [*(id *)(*(void *)(a1 + 32) + 160) setClientConfiguration:*(void *)(a1 + 40)];
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = *(void **)(*(void *)(a1 + 32) + 184);
  return [v6 setClientConfiguration:v5];
}

id sub_10032F8A8(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 80), *(id *)(a1 + 40));
}

void sub_100330064(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (!v3)
  {
    if (!*(unsigned char *)(*(void *)(a1 + 32) + 120)
      || (+[AFError errorWithCode:29],
          (uint64_t v4 = objc_claimAutoreleasedReturnValue()) == 0))
    {
      uint64_t v17 = (void *)AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        unsigned int v18 = *(_DWORD *)(*(void *)(a1 + 32) + 40);
        unsigned int v19 = v17;
        __int16 v20 = sub_10032C0C0(v18);
        *(_DWORD *)buf = 136315394;
        v46 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
        __int16 v47 = 2112;
        unint64_t v48 = (unint64_t)v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s End preparing audio system. (speechState = %@)", buf, 0x16u);
      }
      unsigned int v8 = [*(id *)(a1 + 40) fetchAudioSessionID];
      uint64_t v21 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315394;
        v46 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
        __int16 v47 = 2048;
        unint64_t v48 = v8;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "%s audioSessionID = %lu", buf, 0x16u);
      }
      if ((AFSupportsRecordFromBluetoothDevice() & 1) != 0 || AFSupportsPlaybackToBluetoothDevice())
      {
        uint64_t v22 = [*(id *)(a1 + 40) fetchRecordingInfo];
        dispatch_group_t v23 = *(void **)(a1 + 32);
        uint64_t v24 = [v22 route];
        float v25 = [v22 deviceIdentifier];
        [v23 _updateRecordRoute:v24 andDeviceIdentifier:v25];

        unsigned int v26 = +[ADBluetoothManager sharedInstance];
        uint64_t v7 = [v26 deviceWithRecordingInfo:v22];

        [v7 getDeviceInfo:&stru_10050C520];
      }
      else
      {
        uint64_t v22 = [*(id *)(*(void *)(a1 + 32) + 216) recordDeviceInfo];
        if (!v22)
        {
          if ((objc_opt_respondsToSelector() & 1) == 0) {
            goto LABEL_38;
          }
          id v37 = [*(id *)(*(void *)(a1 + 32) + 136) performSelector:"fetchAudioDeviceInfo"];
          objc_opt_class();
          id v38 = (objc_opt_isKindOfClass() & 1) != 0 ? v37 : 0;

          uint64_t v22 = [v38 recordDeviceInfo];

          if (!v22)
          {
LABEL_38:
            uint64_t v7 = 0;
LABEL_20:
            int v6 = 1;
            uint64_t v4 = 0;
            if ([*(id *)(a1 + 48) reason] == (id)3) {
              *(unsigned char *)(*(void *)(a1 + 32) + 211) = 1;
            }
            goto LABEL_5;
          }
        }
        __int16 v30 = *(void **)(a1 + 32);
        long long v31 = [v22 route];
        id v32 = [v22 remoteDeviceUID];
        long long v33 = [v32 UUIDString];
        [v30 _updateRecordRoute:v31 andDeviceIdentifier:v33];

        uint64_t v7 = 0;
      }

      goto LABEL_20;
    }
  }
  uint64_t v5 = (void *)AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
  {
    unsigned int v34 = *(_DWORD *)(*(void *)(a1 + 32) + 40);
    long long v35 = v5;
    uint64_t v36 = sub_10032C0C0(v34);
    *(_DWORD *)buf = 136315650;
    v46 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v47 = 2112;
    unint64_t v48 = (unint64_t)v4;
    __int16 v49 = 2112;
    v50 = v36;
    _os_log_error_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "%s End preparing audio system with error %@. (speechState = %@)", buf, 0x20u);
  }
  [*(id *)(a1 + 56) relinquishWithError:v3 options:0];
  int v6 = 0;
  uint64_t v7 = 0;
  unsigned int v8 = 0;
LABEL_5:
  v44[0] = *(void *)(a1 + 64);
  double v9 = AFAnalyticsContextCreateWithError();
  v44[1] = v9;
  CFStringRef v10 = *(const __CFString **)(*(void *)(a1 + 32) + 224);
  if (!v10) {
    CFStringRef v10 = @"Unknown";
  }
  CFStringRef v42 = @"recordRoute";
  CFStringRef v43 = v10;
  double v11 = +[NSDictionary dictionaryWithObjects:&v43 forKeys:&v42 count:1];
  v44[2] = v11;
  uint64_t v12 = +[NSArray arrayWithObjects:v44 count:3];
  __int16 v13 = AFAnalyticsContextsMerge();

  double v14 = +[AFAnalytics sharedAnalytics];
  [v14 logEventWithType:245 context:v13 contextNoCopy:1];

  uint64_t v15 = *(void *)(a1 + 72);
  if (v15)
  {
    if (v6) {
      uint64_t v16 = *(void *)(a1 + 56);
    }
    else {
      uint64_t v16 = 0;
    }
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_100331570;
    v39[3] = &unk_10050C548;
    unsigned int v41 = v8;
    id v40 = v4;
    id v27 = +[AFSetAudioSessionActiveResult newWithBuilder:v39];
    (*(void (**)(uint64_t, uint64_t, void *, id))(v15 + 16))(v15, v16, v7, v27);
  }
  --*(void *)(*(void *)(a1 + 32) + 112);
  uint64_t v28 = *(void *)(a1 + 32);
  if (!*(void *)(v28 + 112) && *(unsigned char *)(v28 + 120))
  {
    uint64_t v29 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      v46 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "%s Release audio session now because releasing audio session was requested during audio system preparation.", buf, 0xCu);
      uint64_t v28 = *(void *)(a1 + 32);
    }
    [(id)v28 _releaseSession];
  }
}

void sub_100330670(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      unsigned int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 40);
      int v6 = v4;
      uint64_t v7 = sub_10032C0C0(v5);
      *(_DWORD *)buf = 136315394;
      unsigned int v19 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
      __int16 v20 = 2112;
      uint64_t v21 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Begin waiting for speech recording to stop. (speechState = %@)", buf, 0x16u);
    }
    uint64_t v8 = mach_absolute_time();
    id v9 = objc_alloc((Class)AFSafetyBlock);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100331470;
    v15[3] = &unk_10050C598;
    uint64_t v17 = v8;
    id v16 = v3;
    id v10 = [v9 initWithBlock:v15];
    double v11 = *(void **)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_100331568;
    void v13[3] = &unk_10050E138;
    id v14 = v10;
    id v12 = v10;
    [v11 _addRecordStoppedCompletion:v13];
  }
}

void sub_100330850(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      unsigned int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 40);
      int v6 = v4;
      uint64_t v7 = sub_10032C0C0(v5);
      *(_DWORD *)buf = 136315394;
      __int16 v20 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke_2";
      __int16 v21 = 2112;
      uint64_t v22 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Begin waiting for alerts to stop. (speechState = %@)", buf, 0x16u);
    }
    uint64_t v8 = mach_absolute_time();
    id v9 = objc_alloc((Class)AFOneArgumentSafetyBlock);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1003312E8;
    v16[3] = &unk_10050C5E8;
    uint64_t v18 = v8;
    id v17 = v3;
    id v10 = +[AFError errorWithCode:224 description:@"Safety continuation is dropped unexpectedly." underlyingError:0];
    id v11 = [v9 initWithBlock:v16 defaultValue:v10];

    id v12 = *(void **)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_100331464;
    void v14[3] = &unk_10050C610;
    id v15 = v11;
    id v13 = v11;
    [v12 performBlockAfterAlerts:v14 timeout:0.5];
  }
}

id sub_100330A64(uint64_t a1)
{
  id v2 = (char *)[*(id *)(a1 + 32) reason];
  if ((unint64_t)(v2 - 1) > 2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = qword_1003E2F08[(void)(v2 - 1)];
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (*(unsigned char *)(v4 + 120))
  {
    unsigned int v5 = +[AFError errorWithCode:29];
    int v6 = (void *)AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      unsigned int v7 = *(_DWORD *)(*(void *)(a1 + 40) + 40);
      uint64_t v8 = v6;
      id v9 = sub_10032C0C0(v7);
      *(_DWORD *)buf = 136315394;
      float v25 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke_2";
      __int16 v26 = 2112;
      id v27 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s Skip speech recorder preparation because releasing audio session was requested. (speechState = %@)", buf, 0x16u);
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(v4 + 211) && [*(id *)(a1 + 32) reason] == (id)3)
  {
    id v10 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      float v25 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s Skipped speech recorder preparation because audio system has prepared for playback.", buf, 0xCu);
    }
LABEL_18:
    unsigned int v5 = 0;
    goto LABEL_19;
  }
  id v11 = (void *)AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    unsigned int v12 = *(_DWORD *)(*(void *)(a1 + 40) + 40);
    id v13 = v11;
    id v14 = sub_10032C0C0(v12);
    *(_DWORD *)buf = 136315394;
    float v25 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v26 = 2112;
    id v27 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%s Begin speech recorder preparation. (speechState = %@)", buf, 0x16u);
  }
  mach_absolute_time();
  id v15 = *(void **)(a1 + 48);
  id v23 = 0;
  [v15 prepareSpeechCaptureWithOptions:v3 error:&v23];
  id v16 = v23;
  id v17 = (void *)AFSiriLogContextSpeech;
  if (!v16)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      __int16 v20 = v17;
      mach_absolute_time();
      AFMachAbsoluteTimeGetTimeInterval();
      *(_DWORD *)buf = 136315394;
      float v25 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
      __int16 v26 = 2048;
      id v27 = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s End speech recorder preparation. (duration = %f)", buf, 0x16u);
    }
    goto LABEL_18;
  }
  unsigned int v5 = v16;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
  {
    uint64_t v18 = v17;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    *(_DWORD *)buf = 136315650;
    float v25 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v26 = 2112;
    id v27 = v5;
    __int16 v28 = 2048;
    uint64_t v29 = v19;
    _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s End speech recorder preparation with error %@. (duration = %f)", buf, 0x20u);
  }
LABEL_19:
  return v5;
}

void sub_100330DDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) speechRequestOptions];

  if (v2)
  {
    uint64_t v3 = *(void **)(a1 + 40);
    uint64_t v4 = [*(id *)(a1 + 32) speechRequestOptions];
    [v3 setSpeechRequestOptions:v4];
  }
  if ([*(id *)(a1 + 32) options])
  {
    if (*(_DWORD *)(*(void *)(a1 + 48) + 40))
    {
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_100331180;
      void v12[3] = &unk_10050C688;
      uint64_t v5 = *(void *)(a1 + 64);
      id v14 = *(id *)(a1 + 72);
      id v15 = *(id *)(a1 + 80);
      id v13 = *(id *)(a1 + 56);
      (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v12);

      int v6 = v14;
    }
    else
    {
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      id v9[2] = sub_100331228;
      v9[3] = &unk_10050E188;
      uint64_t v7 = *(void *)(a1 + 72);
      id v11 = *(id *)(a1 + 80);
      id v10 = *(id *)(a1 + 56);
      (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v9);

      int v6 = v11;
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    [*(id *)(a1 + 56) invokeWithValue:v8];
  }
}

uint64_t sub_100330FBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100330FCC(void *a1, int a2)
{
  if (!a2)
  {
    id v8 = (void *)AFSiriLogContextSpeech;
    if (!os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR)) {
      return (*(uint64_t (**)(void))(a1[5] + 16))();
    }
    uint64_t v10 = a1[6];
    int v6 = v8;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    int v12 = 136315650;
    id v13 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v14 = 2048;
    uint64_t v15 = v10;
    __int16 v16 = 2048;
    uint64_t v17 = v11;
    _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s End waiting for Siri output volume to update after host time %llu due to timed out. (duration = %f)", (uint8_t *)&v12, 0x20u);
    goto LABEL_6;
  }
  uint64_t v3 = a1[4];
  if (a1[6] == *(void *)(v3 + 248)) {
    *(void *)(v3 + 248) = 0;
  }
  uint64_t v4 = (void *)AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = a1[6];
    int v6 = v4;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    int v12 = 136315650;
    id v13 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v14 = 2048;
    uint64_t v15 = v5;
    __int16 v16 = 2048;
    uint64_t v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s End waiting for Siri output volume to update after host time %llu. (duration = %f)", (uint8_t *)&v12, 0x20u);
LABEL_6:
  }
  return (*(uint64_t (**)(void))(a1[5] + 16))();
}

uint64_t sub_100331170(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100331180(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100331288;
  v3[3] = &unk_10050E188;
  uint64_t v2 = *(void *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  id v4 = *(id *)(a1 + 32);
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
}

void sub_100331228(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) invokeWithValue:v2];
}

void sub_100331288(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) invokeWithValue:v2];
}

void sub_1003312E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)AFSiriLogContextSpeech;
  if (v3)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      id v5 = v4;
      mach_absolute_time();
      AFMachAbsoluteTimeGetTimeInterval();
      int v8 = 136315650;
      id v9 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
      __int16 v10 = 2112;
      id v11 = v3;
      __int16 v12 = 2048;
      uint64_t v13 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s End waiting for alerts to stop with error %@. (duration = %f)", (uint8_t *)&v8, 0x20u);
LABEL_6:
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    int v8 = 136315394;
    id v9 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v10 = 2048;
    id v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s End waiting for alerts to stop. (duration = %f)", (uint8_t *)&v8, 0x16u);
    goto LABEL_6;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100331464(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) invokeWithValue:a2];
}

uint64_t sub_100331470(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    mach_absolute_time();
    AFMachAbsoluteTimeGetTimeInterval();
    int v8 = 136315650;
    id v9 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    __int16 v12 = 2048;
    uint64_t v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s End waiting for speech recording to stop. (signal = %ld, duration = %f)", (uint8_t *)&v8, 0x20u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100331568(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

void sub_100331570(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 40);
  id v4 = a2;
  [v4 setAudioSessionID:v3];
  [v4 setError:*(void *)(a1 + 32)];
}

void sub_1003315CC(id a1, AFBluetoothDeviceInfo *a2)
{
  id v2 = a2;
  uint64_t v3 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    id v5 = "-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke";
    __int16 v6 = 2112;
    uint64_t v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s bluetoothDevice = %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100331800(uint64_t a1, void *a2)
{
  id v9 = a2;
  [v9 setTimestamp:mach_absolute_time()];
  [v9 setReason:@"Prepare Audio System"];
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  int v4 = [*(id *)(a1 + 32) speechRequestOptions];
  if (v4) {
    [v3 setObject:v4 forKey:AFAudioSessionAssertionUserInfoKey[0]];
  }
  id v5 = [*(id *)(a1 + 32) options];
  if (v5)
  {
    __int16 v6 = +[NSNumber numberWithUnsignedInteger:v5];
    [v3 setObject:v6 forKey:AFAudioSessionAssertionUserInfoKey[1]];
  }
  id v7 = [*(id *)(a1 + 32) reason];
  if (v7)
  {
    int v8 = +[NSNumber numberWithInteger:v7];
    [v3 setObject:v8 forKey:AFAudioSessionAssertionUserInfoKey[2]];
  }
  [v3 setObject:&__kCFBooleanTrue forKey:AFAudioSessionAssertionUserInfoKey[3]];

  [v9 setUserInfo:v3];
}

id sub_100331944(uint64_t a1)
{
  return [*(id *)(a1 + 32) _prepareAudioSystemWithContext:*(void *)(a1 + 40) audioSessionAssertion:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

id sub_100331A88(uint64_t a1)
{
  id v2 = *(_DWORD **)(a1 + 32);
  if (!v2[10])
  {
    id v3 = [v2 _speechRecorder];
    [v3 preheatRecognizerWithOption:*(void *)(a1 + 40)];
  }
  int v4 = *(void **)(a1 + 40);
  return [v4 isTest];
}

void sub_100331C14(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = [*(id *)(a1 + 40) _speechRecorder];
    [v2 setSpeechRequestOptions:*(void *)(a1 + 32)];
  }
  uint64_t v3 = *(void *)(a1 + 40);
  if (!*(_DWORD *)(v3 + 40))
  {
    *(unsigned char *)(v3 + 210) = 1;
    id v4 = [*(id *)(a1 + 40) _speechRecorder];
    [v4 preheatWithOption:*(void *)(a1 + 32)];
  }
}

id sub_100331D24(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 160) eagerlyInitializeAudioRecording];
}

void sub_100331E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (*(void *)(a1 + 32) == *(void *)(v1 + 8))
  {
    if (*(void *)(v1 + 16)) {
      uint64_t IsOfflineOnly = CSSiriSpeechRecordingModeIsOfflineOnly();
    }
    else {
      uint64_t IsOfflineOnly = 0;
    }
    uint64_t v5 = *(void *)(a1 + 48);
    __int16 v6 = AFSiriLogContextSpeech;
    if (v5 && os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v12 = 136315394;
      uint64_t v13 = "-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke";
      __int16 v14 = 2114;
      uint64_t v15 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Speech recognition encountered error: %{public}@", (uint8_t *)&v12, 0x16u);
      __int16 v6 = AFSiriLogContextSpeech;
    }
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v12 = 136315138;
      uint64_t v13 = "-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Invalidating local speech recognizer connection for finish", (uint8_t *)&v12, 0xCu);
    }
    [*(id *)(a1 + 40) resetLocalRecognizer];
    uint64_t v7 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v7 + 44))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(v7 + 80));
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = [*(id *)(v9 + 64) sessionUUID];
      [WeakRetained speechManager:v9 recognitionDidCompleteWithError:v10 secureOfflineOnlyRecognition:IsOfflineOnly sessionUUID:v11 statistics:*(void *)(a1 + 56)];
    }
  }
  else
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      int v12 = 136315138;
      uint64_t v13 = "-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Ignoring completion from previous recognizer", (uint8_t *)&v12, 0xCu);
    }
  }
}

void sub_1003320E8(void *a1)
{
  uint64_t v1 = a1[5];
  if (a1[4] == *(void *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + 44))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(v1 + 80));
      uint64_t v5 = a1[5];
      uint64_t v4 = a1[6];
      __int16 v6 = [*(id *)(v5 + 64) sessionUUID];
      [WeakRetained speechManager:v5 didProduceLocalLoggablePackage:v4 sessionUUID:v6];
    }
    else
    {
      uint64_t v7 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315138;
        uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didProduceLoggablePackage:]_block_invoke";
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Speech finished dropping callback", buf, 0xCu);
      }
    }
  }
  else
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didProduceLoggablePackage:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Ignoring package from previous recognizer", buf, 0xCu);
    }
  }
}

void sub_100332350(void *a1)
{
  uint64_t v1 = a1[5];
  if (a1[4] == *(void *)(v1 + 8))
  {
    if (*(unsigned char *)(v1 + 44))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(v1 + 80));
      uint64_t v5 = a1[5];
      uint64_t v4 = a1[6];
      __int16 v6 = [*(id *)(v5 + 64) sessionUUID];
      [WeakRetained speechManager:v5 didRecognizePackage:v4 sessionUUID:v6];
    }
    else
    {
      uint64_t v7 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315138;
        uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke";
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Speech finished dropping callback", buf, 0xCu);
      }
    }
  }
  else
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Ignoring phrases from previous recognizer", buf, 0xCu);
    }
  }
}

void sub_10033258C(uint64_t a1)
{
  if (CSSiriSpeechRecordingModeIsOfflineOnly())
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      int v8 = "-[ADSpeechManager localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Speech skipping sending raw eager recognition candidate callback", buf, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 80));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v5 = [*(id *)(v4 + 64) sessionUUID];
    [WeakRetained speechManager:v4 didRecognizeRawEagerRecognitionCandidate:v3 sessionUUID:v5];
  }
}

void sub_100332854(void *a1)
{
  if (AFSupportsASROnDevice())
  {
    uint64_t v2 = a1[5];
    goto LABEL_6;
  }
  uint64_t v2 = a1[5];
  if (a1[4] == *(void *)(v2 + 8))
  {
LABEL_6:
    if (*(unsigned char *)(v2 + 44))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(v2 + 80));
      uint64_t v5 = a1[5];
      uint64_t v4 = a1[6];
      __int16 v6 = [*(id *)(v5 + 64) sessionUUID];
      [WeakRetained speechManager:v5 didRecognizeTokens:v4 sessionUUID:v6];
    }
    else
    {
      uint64_t v7 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315138;
        uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke";
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Speech finished dropping callback", buf, 0xCu);
      }
    }
    return;
  }
  uint64_t v3 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    uint64_t v10 = "-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Ignoring tokens from previous recognizer", buf, 0xCu);
  }
}

uint64_t sub_100332B58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100332B68(uint64_t a1)
{
}

uint64_t sub_100332B70(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _recordingInfo];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;
  return _objc_release_x1(v2, v4);
}

void sub_100332C60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) _recordingInfo];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100332D60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) _volumeService];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100332E30(uint64_t a1)
{
  if (sub_1003545D0(*(void *)(*(void *)(a1 + 32) + 32)))
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = 136315394;
      uint64_t v5 = "-[ADSpeechManager setDirtySiriOutputVolumeHostTime:]_block_invoke";
      __int16 v6 = 2048;
      uint64_t v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s dirtySiriOutputVolumeHostTime = %llu", (uint8_t *)&v4, 0x16u);
    }
    *(void *)(*(void *)(a1 + 32) + 248) = *(void *)(a1 + 40);
  }
}

void sub_100333054(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) hasActiveAudioSessionAssertions];
  uint64_t v3 = AFSiriLogContextSpeech;
  BOOL v4 = os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (!v4) {
      return;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    int v11 = 136315394;
    int v12 = "-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]_block_invoke";
    __int16 v13 = 2112;
    uint64_t v14 = v5;
    __int16 v6 = "%s Skipped releasing audio session because %@ has active assertions.";
    uint64_t v7 = v3;
    uint32_t v8 = 22;
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v11, v8);
    return;
  }
  if (v4)
  {
    int v11 = 136315138;
    int v12 = "-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Releasing audio session...", (uint8_t *)&v11, 0xCu);
  }
  unsigned int v9 = [*(id *)(a1 + 40) _releaseSession];
  uint64_t v10 = AFSiriLogContextSpeech;
  if (v9)
  {
    if (!os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO)) {
      return;
    }
    int v11 = 136315138;
    int v12 = "-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]_block_invoke";
    __int16 v6 = "%s Done releasing audio session.";
    uint64_t v7 = v10;
    uint32_t v8 = 12;
    goto LABEL_9;
  }
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
  {
    int v11 = 136315138;
    int v12 = "-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s Failed releasing audio session.", (uint8_t *)&v11, 0xCu);
  }
}

void sub_100333368(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) hasActiveAudioSessionAssertions];
  uint64_t v3 = AFSiriLogContextSpeech;
  BOOL v4 = os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      int v8 = 136315138;
      unsigned int v9 = "-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Preparing audio session...", (uint8_t *)&v8, 0xCu);
    }
    uint64_t v5 = *(void **)(a1 + 40);
    id v6 = +[AFSetAudioSessionActiveContext newWithBuilder:&stru_10050C478];
    [v5 _prepareAudioSystemWithContext:v6 audioSessionAssertion:0 completion:&stru_10050C4B8];
  }
  else if (v4)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 136315394;
    unsigned int v9 = "-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke";
    __int16 v10 = 2112;
    uint64_t v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Skipped preparing audio session because %@ has no active assertions.", (uint8_t *)&v8, 0x16u);
  }
}

void sub_1003334B8(id a1, AFRelinquishableAssertion *a2, AFBluetoothDevice *a3, AFSetAudioSessionActiveResult *a4)
{
  BOOL v4 = [(AFSetAudioSessionActiveResult *)a4 error];
  uint64_t v5 = AFSiriLogContextSpeech;
  if (v4)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136315394;
      uint64_t v7 = "-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke_2";
      __int16 v8 = 2112;
      unsigned int v9 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Failed preparing audio session with error %@.", (uint8_t *)&v6, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v6 = 136315138;
    uint64_t v7 = "-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Done preparing audio session.", (uint8_t *)&v6, 0xCu);
  }
}

void sub_1003335D4(id a1, AFSetAudioSessionActiveContextMutating *a2)
{
  uint64_t v3 = a2;
  [(AFSetAudioSessionActiveContextMutating *)v3 setOptions:2];
  [(AFSetAudioSessionActiveContextMutating *)v3 setReason:3];
  if (AFIsHorseman()) {
    id v2 = [objc_alloc((Class)AFSpeechRequestOptions) initWithActivationEvent:1];
  }
  else {
    id v2 = 0;
  }
  [(AFSetAudioSessionActiveContextMutating *)v3 setSpeechRequestOptions:v2];
}

void sub_1003366A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 8);
  if (v3)
  {
    [v3 invalidate];
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 8);
    *(void *)(v4 + 8) = 0;

    uint64_t v2 = *(void *)(a1 + 32);
  }
  int v6 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;
}

void sub_100336778(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 16))
  {
    uint64_t v3 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315138;
      unsigned int v9 = "-[ADSpeechManager cancelLocalRecognitionIfActive]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Canceling local recognition because servers results have arrived.", (uint8_t *)&v8, 0xCu);
      uint64_t v1 = *(void *)(a1 + 32);
    }
    uint64_t v4 = *(void **)(v1 + 8);
    if (v4)
    {
      [v4 invalidate];
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = *(void **)(v5 + 8);
      *(void *)(v5 + 8) = 0;

      uint64_t v1 = *(void *)(a1 + 32);
    }
    uint64_t v7 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0;
  }
}

uint64_t sub_100336914(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (*(void *)(v1 + 16)) {
    BOOL v2 = (*(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL) == 2;
  }
  else {
    BOOL v2 = 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = v2;
  return result;
}

uint64_t sub_1003369F4(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 16) != 0;
  return result;
}

void sub_100336AA8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _interactiveLocalSpeechRecognizer];
  [v2 resetDESWithCompletion:*(void *)(a1 + 40)];
}

void sub_100336B94(uint64_t a1)
{
  id v2 = +[SFEntitledAssetManager sharedInstance];
  uint64_t v3 = +[SFEntitledAssetManager subscriberIdForDictationAssets];
  id v4 = [v2 detailedInstallationStatusForLanguagesWithAssetType:3 subscriberId:v3];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100336DB8(uint64_t a1)
{
  id v2 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    uint64_t v24 = "-[ADSpeechManager dictationSessionDidComplete]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Dictation session did complete, enabling asset fetch in subsequent requests if needed", buf, 0xCu);
  }
  if (AFOfflineDictationCapable())
  {
    id v3 = objc_alloc_init((Class)NSMutableSet);
    id v4 = v3;
    uint64_t v5 = *(void *)(a1 + 32);
    if (*(void *)(v5 + 272))
    {
      objc_msgSend(v3, "addObject:");
      uint64_t v5 = *(void *)(a1 + 32);
    }
    if (*(void *)(v5 + 280)) {
      objc_msgSend(v4, "addObjectsFromArray:");
    }
    int v6 = +[ADDictationOfflineStatusObserver sharedDictationOfflineStatusObserver];
    uint64_t v7 = [v6 offlineDictationStatus];

    int v8 = [v7 allKeys];
    unsigned int v9 = +[NSSet setWithArray:v8];

    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v10 = v4;
    uint64_t v11 = (char *)[v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v11)
    {
      int v12 = v11;
      uint64_t v13 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v12; ++i)
        {
          if (*(void *)v19 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = AFOfflineDictationLanguageForKeyboardLanguage();
          if (v15)
          {
            id v16 = [objc_alloc((Class)SFEntitledAssetConfig) initWithLanguage:v15 assetType:3];
            uint64_t v17 = +[SFEntitledAssetManager subscriberIdForDictationAssets];
            +[SFEntitledAssetManager subscribeToAssetWithConfig:v16 regionId:0 subscriberId:v17 expiration:0];
          }
        }
        int v12 = (char *)[v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v12);
    }
  }
}

void sub_100337C50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) _speechRecorder];
  id v2 = [v3 currentVTSatScore];
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

id sub_1003381A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _currentSpeechCaptureSource];
}

void sub_1003381C8(uint64_t a1, unint64_t a2)
{
  id v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Queue %s did not respond to watchdog and is likely blocked.", dispatch_queue_get_label(*(dispatch_queue_t *)(a1 + 32)));
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v7 = "-[ADSpeechManager _initWithInstanceContext:]_block_invoke_2";
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_fault_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "%s %@", buf, 0x16u);
  }
  int v5 = AFIsInternalInstall();
  if (a2 <= 3 && v5) {
    WriteStackshotReport_async();
  }
}

void sub_100338338(id a1)
{
  uint64_t v1 = [ADSpeechManager alloc];
  id v4 = +[AFInstanceContext currentContext];
  id v2 = [(ADSpeechManager *)v1 _initWithInstanceContext:v4];
  id v3 = (void *)qword_1005863D0;
  qword_1005863D0 = (uint64_t)v2;
}

id sub_10033878C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _voicePromptStyleDidChange:*(void *)(a1 + 40)];
}

id sub_100338B48(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _adCallStateChangedCallIncoming:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100338C84(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentRequest];
  id v3 = [v2 requestInfo];
  id v4 = [v3 startLocalRequest];
  int v5 = [v4 aceId];

  int v6 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    id v9 = *(void **)(a1 + 40);
    id v10 = v6;
    uint64_t v11 = [v9 userInfo];
    int v12 = 136315650;
    uint64_t v13 = "-[ADExternalNotificationRequestHandler audioPlaybackService:didStartRequest:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v11;
    __int16 v16 = 2112;
    uint64_t v17 = v5;
    _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s playback request: %@, current request: %@", (uint8_t *)&v12, 0x20u);
  }
  uint64_t v7 = [*(id *)(a1 + 40) UUID];
  unsigned int v8 = [v7 isEqualToString:v5];

  if (v8)
  {
    [*(id *)(a1 + 32) _clearCurrentNotificationTimer];
    [*(id *)(a1 + 32) _completeNotificationsWithSuccess:1 forReason:1 shouldEmitInstrumentationEvent:1];
  }
}

void sub_100338E78(uint64_t a1)
{
  unint64_t v2 = (unint64_t)[*(id *)(a1 + 32) _currentState];
  id v3 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    id v4 = v3;
    int v5 = AFExternalNotificationRequestHandlerStateGetName();
    int v6 = 136315394;
    uint64_t v7 = "-[ADExternalNotificationRequestHandler speechManager:didStopUnexpectlyWithError:]_block_invoke";
    __int16 v8 = 2112;
    id v9 = v5;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s CSOSL stopped listening unexpectedly, current state: %@", (uint8_t *)&v6, 0x16u);
  }
  if ((v2 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    [*(id *)(a1 + 32) _stopCurrentRequestWithReason:18 shouldCancelRequest:1];
    [*(id *)(a1 + 32) _completeNotificationsWithSuccess:0 forReason:16 shouldEmitInstrumentationEvent:1];
  }
}

void sub_100339050(uint64_t a1)
{
  unint64_t v2 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    unint64_t v3 = *(void *)(a1 + 48);
    id v4 = v2;
    if (v3 > 4) {
      int v5 = @"(unknown)";
    }
    else {
      int v5 = *(&off_100509E48 + v3);
    }
    int v6 = v5;
    int v7 = *(unsigned __int8 *)(a1 + 60);
    *(_DWORD *)buf = 136315650;
    uint64_t v29 = "-[ADExternalNotificationRequestHandler speechManager:detectedSpeechForListeningType:atHostTime:shouldHandleAct"
          "ivation:]_block_invoke";
    __int16 v30 = 2112;
    long long v31 = v6;
    __int16 v32 = 1024;
    int v33 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s xpc_type_t type = %@ shouldHandleActivation: %d", buf, 0x1Cu);
  }
  id v8 = [*(id *)(*(void *)(a1 + 32) + 112) requestType];
  if (v8 == (id)2)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    if (*(void *)(v14 + 40) != 5)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
      return;
    }
    uint64_t v13 = *(NSObject **)(v14 + 80);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100339444;
    v21[3] = &unk_10050CD00;
    uint64_t v15 = *(void *)(a1 + 48);
    void v21[4] = v14;
    v21[5] = v15;
    int v22 = *(_DWORD *)(a1 + 56);
    int v12 = v21;
    goto LABEL_18;
  }
  if (v8 != (id)1) {
    return;
  }
  if (!_os_feature_enabled_impl() || *(unsigned char *)(a1 + 60))
  {
    id v9 = [*(id *)(a1 + 32) _currentState];
    id v10 = *(void **)(a1 + 32);
    if (v9 != (id)3)
    {
      if ([v10 _currentState] != (id)5) {
        return;
      }
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v13 = *(NSObject **)(v16 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1003393E8;
      block[3] = &unk_10050CD00;
      uint64_t v17 = *(void *)(a1 + 48);
      void block[4] = v16;
      void block[5] = v17;
      int v26 = *(_DWORD *)(a1 + 56);
      int v12 = block;
      goto LABEL_18;
    }
    uint64_t v11 = v10[10];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    void v27[2] = sub_1003393D8;
    v27[3] = &unk_10050E138;
    v27[4] = v10;
    int v12 = v27;
    goto LABEL_12;
  }
  id v18 = [*(id *)(a1 + 32) _currentState];
  long long v19 = *(void **)(a1 + 32);
  if (v18 == (id)3)
  {
    uint64_t v11 = v19[10];
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1003393F8;
    void v24[3] = &unk_10050E138;
    v24[4] = v19;
    int v12 = v24;
LABEL_12:
    uint64_t v13 = v11;
LABEL_18:
    dispatch_async(v13, v12);
    return;
  }
  if ([v19 _currentState] == (id)5)
  {
    uint64_t v20 = *(void *)(a1 + 32);
    uint64_t v13 = *(NSObject **)(v20 + 80);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    void v23[2] = sub_100339404;
    v23[3] = &unk_10050E138;
    void v23[4] = v20;
    int v12 = v23;
    goto LABEL_18;
  }
}

id sub_1003393D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _stopCurrentRequestWithReason:12 shouldCancelRequest:1];
}

id sub_1003393E8(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 48);
  return _[*(id *)(a1 + 32) _startTriggerlessFollowupRequestForSpeechObservingType:*(void *)(a1 + 40) hostTime:a2];
}

id sub_1003393F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _changeCurrentStateToState:4];
}

id sub_100339404(uint64_t a1)
{
  [*(id *)(a1 + 32) _clearTriggerlessUserReplyTimer];
  unint64_t v2 = *(void **)(a1 + 32);
  return [v2 _changeCurrentStateToState:6];
}

id sub_100339444(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 48);
  return _[*(id *)(a1 + 32) _startTriggerlessFollowupRequestForSpeechObservingType:*(void *)(a1 + 40) hostTime:a2];
}

void sub_100339520(uint64_t a1)
{
  unint64_t v2 = [*(id *)(a1 + 32) uuid];
  unint64_t v3 = [*(id *)(a1 + 40) _currentRequest];
  id v4 = [v3 requestInfo];
  int v5 = [v4 uuid];
  if ([v2 isEqual:v5] && *(void *)(a1 + 48))
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 40);

    if (v6 == 3)
    {
      int v7 = (void *)AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        id v8 = *(void **)(a1 + 32);
        id v9 = v7;
        double v10 = [v8 uuid];
        *(_DWORD *)buf = 136315394;
        __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
        __int16 v48 = 2112;
        double v49 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s Announcement request finished for request %@", buf, 0x16u);
      }
      [*(id *)(a1 + 40) _clearCurrentNotificationTimer];
      uint64_t v11 = [*(id *)(a1 + 40) _currentRequest];
      unsigned __int8 v12 = [v11 requestWasInterrupted];

      if ((v12 & 1) == 0)
      {
        uint64_t v13 = (void *)AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
        {
          uint64_t v14 = *(void **)(a1 + 32);
          uint64_t v15 = v13;
          double v16 = [v14 uuid];
          *(_DWORD *)buf = 136315394;
          __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
          __int16 v48 = 2112;
          double v49 = v16;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s Record positive feedback signal for request %@", buf, 0x16u);
        }
        [*(id *)(a1 + 40) _completeNotificationsWithSuccess:1 forReason:1 shouldEmitInstrumentationEvent:1];
        uint64_t v17 = [*(id *)(a1 + 40) _currentRequest];
        id v18 = *(void **)(*(void *)(a1 + 40) + 104);
        *(void *)(*(void *)(a1 + 40) + 104) = v17;

        if (*(unsigned char *)(*(void *)(a1 + 40) + 34)
          || ([*(id *)(a1 + 40) _requestQueue],
              uint64_t v39 = objc_claimAutoreleasedReturnValue(),
              [v39 nextAnnouncementRequest],
              id v40 = objc_claimAutoreleasedReturnValue(),
              v39,
              !v40))
        {
          long long v19 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 136315138;
            __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s Announcement request ended and the queue is empty and/or we are waiting for user input before reading the next announcement", buf, 0xCu);
          }
          uint64_t v20 = [*(id *)(a1 + 40) _currentRequest];
          unsigned int v21 = [v20 shouldSkipTriggerlessReply];

          if (v21)
          {
            int v22 = AFSiriLogContextDaemon;
            if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 136315138;
              __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
              _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "%s Skipping triggerless reply state for announce platform by going from reading state to idle state.", buf, 0xCu);
            }
            uint64_t v23 = 1;
          }
          else
          {
            _AFPreferencesSpokenNotificationTriggerlessReplyWindow();
            double v32 = v31;
            int v33 = AFSiriLogContextDaemon;
            if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 136315394;
              __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
              __int16 v48 = 2048;
              double v49 = v32;
              _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "%s Starting timer for triggerless reply with time window of %f seconds", buf, 0x16u);
            }
            objc_initWeak((id *)buf, *(id *)(a1 + 40));
            id v34 = objc_alloc((Class)AFWatchdogTimer);
            uint64_t v35 = *(void *)(*(void *)(a1 + 40) + 80);
            v44[0] = _NSConcreteStackBlock;
            v44[1] = 3221225472;
            v44[2] = sub_100339BB0;
            void v44[3] = &unk_10050CCD8;
            v45[1] = *(id *)&v32;
            objc_copyWeak(v45, (id *)buf);
            id v36 = [v34 initWithTimeoutInterval:v35 onQueue:v44 timeoutHandler:v32];
            uint64_t v37 = *(void *)(a1 + 40);
            id v38 = *(void **)(v37 + 24);
            *(void *)(v37 + 24) = v36;

            [*(id *)(*(void *)(a1 + 40) + 24) start];
            objc_destroyWeak(v45);
            objc_destroyWeak((id *)buf);
            uint64_t v23 = 5;
          }
          [*(id *)(a1 + 40) _changeCurrentStateToState:v23];
        }
        else
        {
          ++*(void *)(*(void *)(a1 + 40) + 120);
          unsigned int v41 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            double v42 = *(double *)(*(void *)(a1 + 40) + 120);
            *(_DWORD *)buf = 136315394;
            __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
            __int16 v48 = 2048;
            double v49 = v42;
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_INFO, "%s Announcement request ended and we have another in the queue, reading it out now, syncBurstIndex = %lu", buf, 0x16u);
          }
          [*(id *)(a1 + 40) _changeCurrentStateToState:2];
          [*(id *)(a1 + 40) _startAnnouncementRequest:v40];
        }
      }
      return;
    }
  }
  else
  {
  }
  id v43 = [*(id *)(a1 + 32) uuid];
  uint64_t v24 = [*(id *)(a1 + 40) _currentRequest];
  float v25 = [v24 requestInfo];
  int v26 = [v25 uuid];
  if ([v43 isEqual:v26] && *(void *)(a1 + 48))
  {
    uint64_t v27 = *(void *)(*(void *)(a1 + 40) + 40);

    if (v27 == 4)
    {
      __int16 v28 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        __int16 v47 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "%s Announcement ended while barged in, transitioning to user replying and canceling reply timer", buf, 0xCu);
      }
      __int16 v30 = *(void **)(a1 + 40);
      uint64_t v29 = (id *)(a1 + 40);
      [v30 _clearTriggerlessUserReplyTimer];
      [*v29 _changeCurrentStateToState:6];
      [*v29 _startTimerToResetStateFrom:6];
    }
  }
  else
  {
  }
}

void sub_100339B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100339BB0(uint64_t a1)
{
  unint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v6 = 136315394;
    int v7 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s triggerless reply, time window of %f seconds timed out", (uint8_t *)&v6, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _triggerlessListeningTimerEnded];
  }
}

void sub_100339E78(uint64_t a1)
{
  unint64_t v2 = [*(id *)(a1 + 32) uuid];
  uint64_t v3 = [*(id *)(a1 + 40) _currentRequest];
  id v4 = [v3 requestInfo];
  int v5 = [v4 uuid];
  if ([v2 isEqual:v5] && *(void *)(a1 + 48))
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 40);
    if (v6 == 3)
    {

LABEL_12:
      double v16 = (void *)AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v17 = v16;
        id v18 = AFRequestCancellationReasonGetName();
        int v22 = 136315394;
        uint64_t v23 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWasCancelledWithInfo:forReason:orig"
              "in:client:successorInfo:]_block_invoke";
        __int16 v24 = 2112;
        float v25 = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s Request cancelled while reading for reason %@", (uint8_t *)&v22, 0x16u);
      }
      long long v19 = [*(id *)(a1 + 40) _currentRequest];
      [v19 setRequestWasInterrupted:1];

      if (*(void *)(a1 + 56) == 14)
      {
        uint64_t v20 = *(void **)(a1 + 40);
        unsigned int v21 = [v20 _currentRequest];
        [v20 _markThreadCancellationForCurrentRequest:v21];
      }
      return;
    }

    if (v6 == 4) {
      goto LABEL_12;
    }
  }
  else
  {
  }
  if (*(uint64_t *)(*(void *)(a1 + 40) + 40) >= 5)
  {
    int v7 = [*(id *)(a1 + 32) speechRequestOptions];
    id v8 = [v7 activationEvent];

    if (v8 == (id)17)
    {
      uint64_t v9 = (void *)AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        double v10 = *(void **)(a1 + 40);
        uint64_t v11 = v9;
        unsigned __int8 v12 = [v10 _currentRequest];
        uint64_t v13 = [v12 requestInfo];
        uint64_t v14 = [v13 uuid];
        uint64_t v15 = AFExternalNotificationRequestHandlerStateGetName();
        int v22 = 136315650;
        uint64_t v23 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWasCancelledWithInfo:forReason:orig"
              "in:client:successorInfo:]_block_invoke";
        __int16 v24 = 2112;
        float v25 = v14;
        __int16 v26 = 2112;
        uint64_t v27 = v15;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%s Triggerless listening request cancelled: %@ during %@ phase", (uint8_t *)&v22, 0x20u);
      }
      [*(id *)(a1 + 40) _changeCurrentStateToState:1];
    }
  }
}

void sub_10033A248(uint64_t a1)
{
  switch(*(void *)(*(void *)(a1 + 32) + 40))
  {
    case 2:
      int v7 = [*(id *)(a1 + 40) uuid];
      id v8 = [*(id *)(a1 + 32) _currentRequest];
      uint64_t v9 = [v8 requestInfo];
      double v10 = [v9 uuid];
      if (![v7 isEqual:v10])
      {

LABEL_21:
        uint64_t v23 = (void *)AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
        {
          __int16 v24 = *(void **)(a1 + 40);
          float v25 = v23;
          __int16 v26 = [v24 uuid];
          *(_DWORD *)buf = 136315394;
          v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
          __int16 v52 = 2112;
          v53 = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "%s Request started for unrelated request: %@", buf, 0x16u);
        }
        goto LABEL_23;
      }
      uint64_t v11 = *(void *)(a1 + 48);

      if (!v11) {
        goto LABEL_21;
      }
      unsigned __int8 v12 = [*(id *)(a1 + 32) _currentRequest];
      if ([v12 requestType] == (id)2)
      {
        uint64_t v13 = [*(id *)(a1 + 32) _currentRequest];
        unsigned int v14 = [v13 requestWasInterrupted];

        if (v14)
        {
          uint64_t v15 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 136315138;
            v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s Call ended while setting up announcement request, cancelling announcement", buf, 0xCu);
          }
          double v16 = *(void **)(a1 + 32);
          uint64_t v17 = 13;
          goto LABEL_39;
        }
      }
      else
      {
      }
      uint64_t v27 = [*(id *)(a1 + 32) _currentRequest];
      id v28 = [v27 platform];

      if (v28 == (id)2)
      {
        uint64_t v29 = [*(id *)(a1 + 32) _currentRequest];
        unsigned int v30 = [v29 requestWasInterrupted];

        if (v30)
        {
          float v31 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 136315138;
            v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "%s CarPlay's audio session voice prompt style changed while setting up announcement request, cancelling announcement.", buf, 0xCu);
          }
          uint64_t v32 = 16;
        }
        else
        {
          uint64_t v32 = 0;
        }
        int v33 = +[AVSystemController sharedAVSystemController];
        id v34 = [v33 attributeForKey:AVSystemController_CarPlayIsPlayingLongerDurationSession];
        unsigned int v35 = [v34 BOOLValue];

        if (v35)
        {
          id v36 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 136315138;
            v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "%s CarPlay's audio session is not available for announce being it's being used by something else, cancelling announcement.", buf, 0xCu);
          }
          uint64_t v32 = 17;
        }
        if (AFSiriDeactivationReasonGetIsValidAndSpecified())
        {
          [*(id *)(a1 + 32) _completeNotificationsWithSuccess:0 forReason:11 shouldEmitInstrumentationEvent:1];
          double v16 = *(void **)(a1 + 32);
          uint64_t v17 = v32;
LABEL_39:
          [v16 _deactivateCurrentAnnouncementRequestForReason:v17];
          return;
        }
      }
      uint64_t v37 = (void *)AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        id v38 = *(void **)(a1 + 40);
        uint64_t v39 = v37;
        id v40 = [v38 uuid];
        *(_DWORD *)buf = 136315394;
        v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
        __int16 v52 = 2112;
        v53 = v40;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "%s Announcement request began for request: %@", buf, 0x16u);
      }
      [*(id *)(a1 + 32) _changeCurrentStateToState:3];
      AFSpokenMessagesExecutionTimeout();
      double v42 = v41 + -2.0;
      id v43 = objc_alloc((Class)AFWatchdogTimer);
      uint64_t v44 = *(void *)(a1 + 32);
      uint64_t v45 = *(void *)(v44 + 80);
      v49[0] = _NSConcreteStackBlock;
      v49[1] = 3221225472;
      v49[2] = sub_10033A8AC;
      v49[3] = &unk_10050E138;
      v49[4] = v44;
      id v46 = [v43 initWithTimeoutInterval:v45 onQueue:v49 timeoutHandler:(double)(uint64_t)v42];
      uint64_t v47 = *(void *)(a1 + 32);
      __int16 v48 = *(void **)(v47 + 8);
      *(void *)(v47 + 8) = v46;

      [*(id *)(*(void *)(a1 + 32) + 8) start];
      return;
    case 3:
    case 5:
      unint64_t v2 = [*(id *)(a1 + 56) speechRequestOptions];
      id v3 = [v2 activationEvent];

      if (v3 == (id)17) {
        return;
      }
      id v4 = [*(id *)(a1 + 56) activationEvent];
      int v5 = AFSiriLogContextDaemon;
      BOOL v6 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
      if (v4 == (id)10)
      {
        if (v6)
        {
          *(_DWORD *)buf = 136315138;
          v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Head Gesture request acting upon notification content, moving to userReplying", buf, 0xCu);
        }
        [*(id *)(a1 + 32) _clearTriggerlessUserReplyTimer];
LABEL_17:
        unsigned int v21 = *(void **)(a1 + 32);
        uint64_t v22 = 6;
      }
      else
      {
        if (v6)
        {
          *(_DWORD *)buf = 136315138;
          v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Unrelated request started during reading/triggerless window transition to idle", buf, 0xCu);
        }
LABEL_23:
        unsigned int v21 = *(void **)(a1 + 32);
        uint64_t v22 = 1;
      }
      [v21 _changeCurrentStateToState:v22];
      return;
    case 4:
      id v18 = [*(id *)(a1 + 40) speechRequestOptions];
      id v19 = [v18 activationEvent];

      if (v19 != (id)17) {
        return;
      }
      uint64_t v20 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v51 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s Triggerless Reply starting from Barge-In state", buf, 0xCu);
      }
      goto LABEL_17;
    default:
      return;
  }
}

id sub_10033A8AC(uint64_t a1)
{
  unint64_t v2 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    id v4 = *(void **)(a1 + 32);
    int v5 = v2;
    BOOL v6 = [v4 _currentRequest];
    int v7 = 136315394;
    id v8 = "-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    __int16 v9 = 2112;
    double v10 = v6;
    _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Timed out announcing the request for %@", (uint8_t *)&v7, 0x16u);
  }
  return [*(id *)(a1 + 32) _completeNotificationsWithSuccess:0 forReason:12 shouldEmitInstrumentationEvent:1];
}

uint64_t sub_10033AC8C(uint64_t a1)
{
  uint64_t result = (uint64_t)[*(id *)(a1 + 32) _currentState];
  if (result >= 2)
  {
    id v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      int v5 = 136315394;
      BOOL v6 = "-[ADExternalNotificationRequestHandler inEarDetectionStateDidChangeForBTAddress:fromState:toState:]_block_invoke";
      __int16 v7 = 2112;
      uint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s 🎧 [%@] bud went out of ear, shutting down the request", (uint8_t *)&v5, 0x16u);
    }
    return (uint64_t)[*(id *)(a1 + 32) _deactivateCurrentAnnouncementRequestForReason:2];
  }
  return result;
}

uint64_t sub_10033ADFC(uint64_t a1)
{
  unint64_t v2 = [*(id *)(a1 + 32) _currentRequest];
  id v3 = [v2 requestType];

  if (v3 == (id)2)
  {
    uint64_t v4 = 2;
  }
  else
  {
    int v5 = [*(id *)(a1 + 32) _currentRequest];
    id v6 = [v5 requestType];

    if (v6 != (id)1)
    {
      BOOL v7 = 0;
      goto LABEL_7;
    }
    uint64_t v4 = 1;
  }
  BOOL v7 = ((unint64_t)[*(id *)(a1 + 40) availableAnnouncementRequestTypes] & v4) != 0;
LABEL_7:
  uint64_t result = (uint64_t)[*(id *)(a1 + 32) _currentState];
  if (result >= 2 && !v7)
  {
    __int16 v9 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      double v10 = *(void **)(a1 + 40);
      uint64_t v11 = v9;
      unsigned __int8 v12 = [v10 avscRouteDescription];
      int v13 = 136315394;
      unsigned int v14 = "-[ADExternalNotificationRequestHandler currentAudioRouteDidChange:]_block_invoke";
      __int16 v15 = 2112;
      double v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%s 🎧 Audio route changed, shutting down the request; route: %@",
        (uint8_t *)&v13,
        0x16u);
    }
    return (uint64_t)[*(id *)(a1 + 32) _deactivateCurrentAnnouncementRequestForReason:2];
  }
  return result;
}

void sub_10033AFE0(uint64_t a1)
{
  id v2 = +[AFSiriHeadphonesMonitor sharedMonitor];
  [v2 removeDelegate:*(void *)(a1 + 32)];
}

void sub_10033B0AC(uint64_t a1)
{
  id v2 = +[AFSiriHeadphonesMonitor sharedMonitor];
  [v2 addDelegate:*(void *)(a1 + 32)];
}

id sub_10033B178(uint64_t a1)
{
  return [*(id *)(a1 + 32) _deactivateCurrentAnnouncementRequestForReason:*(void *)(a1 + 40)];
}

void sub_10033B324(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _requestQueue];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) _requestQueue];
    [v3 markNotificationAsReadWithIdentifer:*(void *)(a1 + 40)];
  }
}

void sub_10033B464(uint64_t a1)
{
  id v2 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v3 = *(void **)(a1 + 40);
    int v5 = v2;
    [v3 _currentState];
    id v6 = AFExternalNotificationRequestHandlerStateGetName();
    int v12 = 136315650;
    int v13 = "-[ADExternalNotificationRequestHandler fetchUnreadNotificationsFromThreadAfterNotificationWithID:completion:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v4;
    __int16 v16 = 2112;
    uint64_t v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Fetching notifications after notification with id: %@, in state: %@ ", (uint8_t *)&v12, 0x20u);
  }
  uint64_t v7 = [*(id *)(a1 + 40) _requestQueue];
  if (v7 && (v8 = (void *)v7, id v9 = [*(id *)(a1 + 40) _currentState], v8, v9 != (id)4))
  {
    id v11 = [*(id *)(a1 + 40) _requestQueue];
    [v11 fetchUnreadNotificationsFromThreadAfterNotificationWithID:*(void *)(a1 + 32) completion:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 48);
    id v11 = objc_alloc_init((Class)NSMutableArray);
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v11);
  }
}

void sub_10033B6C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    id v11 = v10;
    uint64_t v12 = [v9 audioSessionID];
    int v13 = [v9 error];
    *(_DWORD *)buf = 136315906;
    uint64_t v29 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke_2";
    __int16 v30 = 2048;
    uint64_t v31 = v12;
    __int16 v32 = 2112;
    id v33 = v8;
    __int16 v34 = 2112;
    unsigned int v35 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%s Audio session taken over because user began speaking, audioSessionID = %lu, bluetoothDevice = %@, error = %@", buf, 0x2Au);
  }
  uint64_t v14 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v14 + 32))
  {
    uint64_t v15 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v29 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s Time window for triggerless user reply has passed, not starting new request for user reply", buf, 0xCu);
    }
  }
  else
  {
    uint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 3221225472;
    __int16 v24 = sub_10033BA40;
    float v25 = &unk_10050CC88;
    uint64_t v26 = v14;
    id v27 = v7;
    __int16 v16 = objc_retainBlock(&v22);
    switch(*(void *)(a1 + 40))
    {
      case 0:
      case 4:
        uint64_t v17 = AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136315138;
          uint64_t v29 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke";
          _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%s Unspecified request delay type", buf, 0xCu);
        }
        break;
      case 1:
      case 2:
        +[ADAnnounceSpeechManager lookbackTimeForSpeechObservingType:](ADAnnounceSpeechManager, "lookbackTimeForSpeechObservingType:", v22, v23, v24, v25, v26);
        id v18 = [v8 deviceInfo];
        id v19 = [v18 deviceUID];
        uint64_t v20 = [v19 UUIDString];
        AFSiriActivationBluetoothDeviceTriggerless();

        break;
      case 3:
        unsigned int v21 = AFSiriLogContextDaemon;
        if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136315138;
          uint64_t v29 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke";
          _os_log_debug_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "%s Activating with non-BT triggerless path", buf, 0xCu);
        }
        AFSiriActivationTriggerless();
        break;
      default:
        break;
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_clearTriggerlessUserReplyTimer", v22, v23, v24, v25, v26);
}

void sub_10033BA40(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 error];

  int v5 = AFSiriLogContextDaemon;
  BOOL v6 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      id v7 = v5;
      id v8 = [v3 error];
      int v9 = 136315650;
      uint64_t v10 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke";
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      id v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Triggerless reply activation error: %@, result: %@", (uint8_t *)&v9, 0x20u);
    }
    [*(id *)(a1 + 32) _changeCurrentStateToState:1];
  }
  else
  {
    if (v6)
    {
      int v9 = 136315138;
      uint64_t v10 = "-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestForSpeechObservingType:hostTime:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Triggerless reply activation complete", (uint8_t *)&v9, 0xCu);
    }
    [*(id *)(a1 + 32) _startTimerToResetStateFrom:6];
  }
  [*(id *)(a1 + 40) relinquishWithContext:0 options:0];
}

void sub_10033BBB4(id a1, AFSetAudioSessionActiveContextMutating *a2)
{
}

uint64_t sub_10033BCC0(uint64_t a1)
{
  uint64_t result = (uint64_t)[*(id *)(a1 + 32) _currentState];
  if (result >= 2) {
    *(unsigned char *)(*(void *)(a1 + 32) + 34) = 1;
  }
  return result;
}

void sub_10033BDFC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _currentState];
  id v3 = *(void **)(a1 + 32);
  if (v2 == (id)4)
  {
    [v3 _changeCurrentStateToState:3];
  }
  else if ([v3 _currentState] == (id)6)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    _[v4 _processAnyQueuedAnnouncementsAfterUserSpeech];
  }
  else
  {
    int v5 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      BOOL v6 = *(void **)(a1 + 32);
      id v7 = v5;
      [v6 _currentState];
      id v8 = AFExternalNotificationRequestHandlerStateGetName();
      int v9 = 136315394;
      uint64_t v10 = "-[ADExternalNotificationRequestHandler notifySpeechDetectedIsUndirected]_block_invoke";
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Unexpected state when mitigation result result arrived: %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

id sub_10033C3A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _processAnyQueuedAnnouncementsAfterUserSpeech];
}

id sub_10033C6EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _withdrawalAnnouncementRequestForNotification:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_10033C7D8(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  [v4 setTimestamp:v3];
  [v4 setSource:a1[5]];
  [v4 setEvent:a1[6]];
}

void sub_10033C9D0(uint64_t a1, char a2)
{
  id v4 = AFSiriLogContextDaemon;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
  if (a2)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      uint64_t v15 = "-[ADExternalNotificationRequestHandler _deactivateCarPlayNotificationAnnouncementRequestForReason:notificati"
            "on:sourceAppId:completion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v6;
      __int16 v18 = 2112;
      uint64_t v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Issuing deactivate request for appId: %@, notification: %@.", buf, 0x20u);
    }
    uint64_t v8 = *(void *)(a1 + 64);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_10033CB88;
    void v12[3] = &unk_10050CBD8;
    int v9 = *(void **)(a1 + 48);
    id v13 = *(id *)(a1 + 56);
    [v9 _deactivateForReason:v8 source:5 event:7 completion:v12];
  }
  else
  {
    if (v5)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      uint64_t v15 = "-[ADExternalNotificationRequestHandler _deactivateCarPlayNotificationAnnouncementRequestForReason:notificati"
            "on:sourceAppId:completion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v10;
      __int16 v18 = 2112;
      uint64_t v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Deactivation was requested, but announcement requests are currently not permitted while the current presentation is active. Ignoring deactivation. appId: %@, notification: %@", buf, 0x20u);
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_10033CB88(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    BOOL v5 = v4;
    uint64_t v6 = [v3 error];
    uint64_t v7 = (void *)v6;
    CFStringRef v8 = &stru_10050F7D8;
    if (v6) {
      CFStringRef v8 = (const __CFString *)v6;
    }
    int v9 = 136315394;
    uint64_t v10 = "-[ADExternalNotificationRequestHandler _deactivateCarPlayNotificationAnnouncementRequestForReason:notification"
          ":sourceAppId:completion:]_block_invoke";
    __int16 v11 = 2112;
    CFStringRef v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Deactivate announcement request %@", (uint8_t *)&v9, 0x16u);
  }
  [v3 error];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10033CF84(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _deactivateNotificationAnnouncementRequestForReason:*(void *)(a1 + 64) notification:*(void *)(a1 + 40) sourceAppId:*(void *)(a1 + 48) platform:*(void *)(a1 + 72) completion:*(void *)(a1 + 56)];
}

void sub_10033D398(void *a1)
{
  id v2 = (void *)a1[4];
  if (v2[5] == 6)
  {
    id v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      int v6 = 136315138;
      uint64_t v7 = "-[ADExternalNotificationRequestHandler deactivateWorkoutReminderAnnouncementWithId:completion:]_block_invoke";
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%s User interacted with the workout reminder, aborting deactivation", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    [v2 _deactivateWorkoutReminderAnnouncementWithId:a1[5]];
    uint64_t v4 = a1[6];
    if (v4)
    {
      BOOL v5 = *(void (**)(void))(v4 + 16);
      v5();
    }
  }
}

void sub_10033D714(id a1, AFSiriActivationResult *a2)
{
  id v2 = a2;
  id v3 = [(AFSiriActivationResult *)v2 error];

  if (v3)
  {
    uint64_t v4 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      BOOL v5 = v4;
      int v6 = [(AFSiriActivationResult *)v2 error];
      int v7 = 136315394;
      CFStringRef v8 = "-[ADExternalNotificationRequestHandler _stopCurrentRequestWithReason:shouldCancelRequest:]_block_invoke";
      __int16 v9 = 2112;
      uint64_t v10 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Error dismissing Siri UI client: %@", (uint8_t *)&v7, 0x16u);
    }
  }
}

void *sub_10033D904(void *result)
{
  uint64_t v1 = (void *)result[4];
  if (v1[5] == result[5])
  {
    id v2 = result;
    id v3 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = v3;
      BOOL v5 = AFExternalNotificationRequestHandlerStateGetName();
      int v6 = 136315394;
      int v7 = "-[ADExternalNotificationRequestHandler _startTimerToResetStateFrom:]_block_invoke";
      __int16 v8 = 2112;
      __int16 v9 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s We are stuck in %@ state, resetting", (uint8_t *)&v6, 0x16u);

      uint64_t v1 = (void *)v2[4];
    }
    return [v1 _changeCurrentStateToState:1];
  }
  return result;
}

void sub_10033DC80(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10033DDDC;
  block[3] = &unk_10050D0D0;
  id v3 = *(id *)(a1 + 40);
  dispatch_async(v1, block);
}

void sub_10033DD10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 80);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_10033DDC8;
  v7[3] = &unk_10050E188;
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

uint64_t sub_10033DDC8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_10033DDDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10033E084(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3 || (uint64_t v4 = *(void **)(a1 + 32), v4[5] != 2))
  {
    id v5 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      id v6 = v5;
      int v7 = AFExternalNotificationRequestHandlerStateGetName();
      int v8 = 136315650;
      id v9 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequest:]_block_invoke";
      __int16 v10 = 2112;
      __int16 v11 = v7;
      __int16 v12 = 2112;
      id v13 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Error starting announcement request, current state: %@, error: %@", (uint8_t *)&v8, 0x20u);
    }
    [*(id *)(a1 + 32) _changeCurrentStateToState:1];
    objc_msgSend(*(id *)(a1 + 32), "_completeNotificationsWithSuccess:forReason:shouldEmitInstrumentationEvent:", 0, objc_msgSend(*(id *)(a1 + 32), "_getAnnouncementRequestFailureReasonFromError:", v3), 1);
  }
  else
  {
    [v4 _startAnnouncementRequestWithRequestInfo:*(void *)(a1 + 40)];
  }
}

void sub_10033E2D8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) requestType] == (id)1)
  {
    id v2 = +[SOMediaNowPlayingObserver defaultObserver];
    id v3 = [v2 playbackState];

    uint64_t v4 = *(id **)(a1 + 40);
    if (v3 == (id)1)
    {
      id v9 = *(id *)(a1 + 32);
      AFGetNowPlayingInfoDictionary();
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 32);
      id v8 = [v4[19] copy];
      [v4 _emitInstrumentationEventsForRequest:v7 currentlyPlayingMediaType:v8];
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    [v5 _emitInstrumentationEventsForRequest:v6 currentlyPlayingMediaType:0];
  }
}

void sub_10033E424(uint64_t a1, void *a2)
{
  id v3 = [a2 objectForKey:kMRMediaRemoteNowPlayingInfoMediaType];
  id v11 = v3;
  if (v3)
  {
    id v4 = [v3 copy];
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v5 + 152);
    *(void *)(v5 + 152) = v4;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v7 + 152);
    *(void *)(v7 + 152) = &stru_10050F7D8;
  }

  id v9 = *(id **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  id v10 = [v9[19] copy];
  [v9 _emitInstrumentationEventsForRequest:v8 currentlyPlayingMediaType:v10];
}

void sub_10033E590(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(NSObject **)(v6 + 80);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_10033E654;
  v9[3] = &unk_10050CAD0;
  char v13 = a2;
  id v10 = v5;
  uint64_t v11 = v6;
  id v12 = *(id *)(a1 + 40);
  id v8 = v5;
  dispatch_async(v7, v9);
}

void sub_10033E654(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  if (*(unsigned char *)(a1 + 56) && !*(void *)(a1 + 32)) {
    goto LABEL_14;
  }
  if (!*(void *)(*(void *)(a1 + 40) + 160)) {
    goto LABEL_6;
  }
  id v3 = [*(id *)(a1 + 48) uuid];
  id v4 = *(void **)(*(void *)(a1 + 40) + 160);

  if (v3 != v4)
  {
    int v2 = *(unsigned __int8 *)(a1 + 56);
LABEL_6:
    if ((!v2 || *(void *)(a1 + 32)) && [*(id *)(a1 + 40) _currentState] != (id)6)
    {
      id v5 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
      {
        uint64_t v18 = *(void *)(a1 + 32);
        int v20 = 136315394;
        unsigned int v21 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestWithRequestInfo:]_block_invoke";
        __int16 v22 = 2112;
        uint64_t v23 = v18;
        _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s request failed with error: %@", (uint8_t *)&v20, 0x16u);
      }
      [*(id *)(a1 + 40) _changeCurrentStateToState:1];
    }
    goto LABEL_14;
  }
  uint64_t v6 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 160);
    int v20 = 136315394;
    unsigned int v21 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestWithRequestInfo:]_block_invoke_2";
    __int16 v22 = 2112;
    uint64_t v23 = v19;
    _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "%s Ignoring activation failures caused by gesture invocation, associated with request UUID: %@", (uint8_t *)&v20, 0x16u);
  }
LABEL_14:
  uint64_t v7 = [*(id *)(a1 + 40) _currentRequest];
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = [*(id *)(a1 + 40) _currentRequest];
    unsigned int v10 = [v9 requestWasInterrupted];

    if (v10)
    {
      uint64_t v11 = (void *)AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        id v12 = *(void **)(a1 + 40);
        char v13 = v11;
        id v14 = [v12 _currentRequest];
        unsigned int v15 = [v14 requestWasInterrupted];
        int v20 = 136315394;
        unsigned int v21 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestWithRequestInfo:]_block_invoke";
        __int16 v22 = 1024;
        LODWORD(v23) = v15;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%s request was interrupted: %d", (uint8_t *)&v20, 0x12u);
      }
    }
  }
  __int16 v16 = *(void **)(a1 + 40);
  if (*(unsigned char *)(a1 + 56))
  {
    [*(id *)(a1 + 40) _completeNotificationsWithSuccess:1 forReason:10 shouldEmitInstrumentationEvent:1];
  }
  else
  {
    uint64_t v17 = [*(id *)(a1 + 40) _currentRequest];
    objc_msgSend(v16, "_completeNotificationsWithSuccess:forReason:shouldEmitInstrumentationEvent:", objc_msgSend(v17, "requestWasInterrupted"), 10, 1);
  }
}

void sub_10033ECCC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_10033ECF0(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  int v2 = *(void **)(a1 + 32);
  return [v2 _clearCurrentNotificationTimer];
}

id sub_10033ED3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invoke];
}

uint64_t sub_10033ED44(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10033ED64(uint64_t a1)
{
  int v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315138;
    id v5 = "-[ADExternalNotificationRequestHandler _handleNotificationWithRequiresOpportuneTime:completion:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Timed out waiting for a decision from Opportune Speaking Module", (uint8_t *)&v4, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10033EE24(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(NSObject **)(v6 + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10033EEF4;
  block[3] = &unk_10050CA80;
  char v14 = a2;
  void block[4] = v6;
  id v12 = v5;
  long long v10 = *(_OWORD *)(a1 + 40);
  id v8 = (id)v10;
  long long v13 = v10;
  id v9 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_10033EEF4(uint64_t a1)
{
  int v2 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v3 = *(unsigned __int8 *)(a1 + 64);
    int v4 = v2;
    id v5 = AFExternalNotificationRequestHandlerStateGetName();
    uint64_t v6 = *(void *)(a1 + 40);
    int v8 = 136315906;
    id v9 = "-[ADExternalNotificationRequestHandler _handleNotificationWithRequiresOpportuneTime:completion:]_block_invoke_2";
    __int16 v10 = 1024;
    int v11 = v3;
    __int16 v12 = 2112;
    long long v13 = v5;
    __int16 v14 = 2112;
    uint64_t v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Pause detected: %d current state: %@ error: %@", (uint8_t *)&v8, 0x26u);
  }
  if (!*(void *)(a1 + 40) && *(unsigned char *)(a1 + 64) && *(void *)(*(void *)(a1 + 32) + 40) == 2) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_10033F2A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10033F34C(uint64_t a1, int a2)
{
  int v3 = AFSiriLogContextDaemon;
  if (a2)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v10 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestIfOpportune:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Client conditions permit announcing", buf, 0xCu);
    }
    int v4 = *(void **)(a1 + 32);
    id v5 = [*(id *)(a1 + 40) requiresOpportuneTime];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_10033F4E8;
    v7[3] = &unk_10050C9E0;
    uint64_t v6 = *(void **)(a1 + 40);
    void v7[4] = *(void *)(a1 + 32);
    id v8 = v6;
    [v4 _handleNotificationWithRequiresOpportuneTime:v5 completion:v7];
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v10 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestIfOpportune:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Ongoing Siri session or presentation not permitting announcments", buf, 0xCu);
    }
    [*(id *)(a1 + 40) completeRequestWithSuccess:0 forReason:5 shouldEmitInstrumentationEvent:1];
    [*(id *)(a1 + 32) _changeCurrentStateToState:1];
  }
}

void sub_10033F4E8(uint64_t a1, char a2)
{
  int v3 = *(NSObject **)(*(void *)(a1 + 32) + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10033F58C;
  block[3] = &unk_10050CA08;
  char v9 = a2;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = v4;
  uint64_t v8 = v5;
  dispatch_async(v3, block);
  [*(id *)(a1 + 32) _adjustAnnouncementVolumeIfNeccessaryForRequest:*(void *)(a1 + 40)];
}

id sub_10033F58C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    id v2 = [*(id *)(a1 + 32) platform];
    int v3 = *(void **)(a1 + 40);
    if (v2 == (id)1) {
      [v3 _startObservingRouteChanges];
    }
    else {
      [v3 _stopObservingRouteChanges];
    }
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(a1 + 40);
    return [v6 _startAnnouncementRequest:v7];
  }
  else
  {
    id v4 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void **)(a1 + 32);
      char v9 = v4;
      __int16 v10 = [v8 notification];
      int v11 = 136315394;
      __int16 v12 = "-[ADExternalNotificationRequestHandler _startAnnouncementRequestIfOpportune:]_block_invoke_2";
      __int16 v13 = 2112;
      __int16 v14 = v10;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%s Not reading the notification: %@", (uint8_t *)&v11, 0x16u);
    }
    [*(id *)(a1 + 40) _completeNotificationsWithSuccess:0 forReason:2 shouldEmitInstrumentationEvent:1];
    return [*(id *)(a1 + 40) _changeCurrentStateToState:1];
  }
}

void sub_1003404FC(uint64_t a1, int a2)
{
  int v3 = AFSiriLogContextDaemon;
  if (a2)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136315138;
      uint64_t v6 = "-[ADExternalNotificationRequestHandler _handleAnnounceNotificationRequest:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Either no active client, or presentation allows announcements. Enqueueing request.", (uint8_t *)&v5, 0xCu);
    }
    id v4 = [*(id *)(a1 + 32) _requestQueue];
    [v4 enqueueAnnouncementRequest:*(void *)(a1 + 40)];
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v5 = 136315138;
      uint64_t v6 = "-[ADExternalNotificationRequestHandler _handleAnnounceNotificationRequest:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Ongoing Siri session, not reading announce request", (uint8_t *)&v5, 0xCu);
    }
    [*(id *)(a1 + 40) completeRequestWithSuccess:0 forReason:5 shouldEmitInstrumentationEvent:1];
  }
}

id sub_1003407F0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _deliverSummary:*(void *)(a1 + 40) forNotification:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

void sub_100340898(uint64_t a1)
{
  id v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v10 = 136315138;
    int v11 = "-[ADExternalNotificationRequestHandler announcementRequestReadyToBeAnnounced:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s ", (uint8_t *)&v10, 0xCu);
  }
  unint64_t v3 = (unint64_t)[*(id *)(a1 + 32) _currentState];
  if (v3 <= 5 && ((1 << v3) & 0x2E) != 0)
  {
    int v5 = [*(id *)(a1 + 32) _currentRequest];
    uint64_t v6 = *(void **)(a1 + 40);

    if (v5 == v6)
    {
      uint64_t v8 = AFSiriLogContextDaemon;
      if (!os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG)) {
        return;
      }
      int v10 = 136315138;
      int v11 = "-[ADExternalNotificationRequestHandler announcementRequestReadyToBeAnnounced:]_block_invoke";
      char v9 = "%s Not starting announcement: request has already been started";
      goto LABEL_13;
    }
    uint64_t v7 = *(unsigned char **)(a1 + 32);
    if (v7[34])
    {
      uint64_t v8 = AFSiriLogContextDaemon;
      if (!os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG)) {
        return;
      }
      int v10 = 136315138;
      int v11 = "-[ADExternalNotificationRequestHandler announcementRequestReadyToBeAnnounced:]_block_invoke";
      char v9 = "%s Not starting announcement: waiting for user input";
LABEL_13:
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, v9, (uint8_t *)&v10, 0xCu);
      return;
    }
    [v7 _startAnnouncementRequestIfOpportune:*(void *)(a1 + 40)];
  }
}

id sub_100340BD0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleAnnouncementRequest:*(void *)(a1 + 40)];
}

void sub_1003411A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 152);
  *(void *)(v1 + 152) = 0;
}

void sub_1003411B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 160);
  *(void *)(v1 + 160) = 0;
}

void sub_100341880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1003418A0(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1005863F0)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_100341AB4;
    void v6[4] = &unk_10050E350;
    void v6[5] = v6;
    long long v7 = off_10050CD70;
    uint64_t v8 = 0;
    qword_1005863F0 = _sl_dlopen();
  }
  if (!qword_1005863F0)
  {
    unint64_t v3 = +[NSAssertionHandler currentHandler];
    id v4 = +[NSString stringWithUTF8String:"void *BulletinBoardLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"ADExternalNotificationRequestHandler.m", 81, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("BBSettingsGateway");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    unint64_t v3 = +[NSAssertionHandler currentHandler];
    int v5 = +[NSString stringWithUTF8String:"Class getBBSettingsGatewayClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"ADExternalNotificationRequestHandler.m", 82, @"Unable to find class %s", "BBSettingsGateway");

LABEL_10:
    __break(1u);
  }
  qword_1005863E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100341A8C(id a1)
{
  uint64_t v1 = _AFPreferencesAnnounceNotificationThreadCancellationStaleThreshold();
  __AFPreferencesRemoveThreadCancellationsOlderThanTimeInterval(v1);
}

uint64_t sub_100341AB4()
{
  uint64_t result = _sl_dlopen();
  qword_1005863F0 = result;
  return result;
}

void sub_100341B7C(id a1)
{
  id v1 = [[ADExternalNotificationRequestHandler alloc] _init];
  uint64_t v2 = qword_1005863E0;
  qword_1005863E0 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_100341CA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100341F94(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      long long v7 = v4;
      uint64_t v8 = [v3 localizedDescription];
      int v9 = 136315394;
      int v10 = "-[ADSettingsClient createRadarForCrashWithReason:process:completion:]_block_invoke";
      __int16 v11 = 2112;
      __int16 v12 = v8;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s File-A-Radar failed creating a radar - error: %@", (uint8_t *)&v9, 0x16u);
    }
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = +[AFError errorWithCode:0 description:@"Radar creation failed" underlyingError:v3];
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100342728(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSAERequiredAssets();
  uint64_t v5 = AFAssetsAvailabilityMatchesRequiredAssets();

  uint64_t v6 = AFSiriLogContextConnection;
  BOOL v7 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO);
  if (v5)
  {
    if (v7)
    {
      int v9 = 136315138;
      int v10 = "-[ADSettingsClient areSiriSAEAssetsAvailable:]_block_invoke";
      uint64_t v8 = "%s All SAE assets are available";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v9, 0xCu);
    }
  }
  else if (v7)
  {
    int v9 = 136315138;
    int v10 = "-[ADSettingsClient areSiriSAEAssetsAvailable:]_block_invoke";
    uint64_t v8 = "%s Not all SAE assets are available";
    goto LABEL_6;
  }
  (*(void (**)(void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v5);
}

uint64_t sub_100342CDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100342ECC(void *a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = a1[4];
    int v11 = 136315394;
    __int16 v12 = "-[ADSettingsClient triggerABCForType:subType:context:completionHandler:]_block_invoke";
    __int16 v13 = 2112;
    uint64_t v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s %@", (uint8_t *)&v11, 0x16u);
  }
  uint64_t v4 = a1[7];
  if (v4) {
    (*(void (**)(uint64_t, void))(v4 + 16))(v4, 0);
  }
  uint64_t v5 = +[SiriCoreSymptomsReporter sharedInstance];
  uint64_t v7 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v8 = a1[4];
  int v9 = +[NSProcessInfo processInfo];
  id v10 = [v9 processIdentifier];
  [v5 reportIssueForType:v7 subType:v6 context:v8 processIdentifier:v10 walkboutStatus:byte_100585E38];
}

void sub_100343FBC(uint64_t a1)
{
  +[AFDictationSamplingUtilities deleteAllSamplingData];
  +[AFAssistantSamplingUtilities deleteAllSamplingData];
  +[SSRRPISampler deleteAllRPISampledData];
  id v2 = [*(id *)(a1 + 32) _localSpeechRecognizer];
  [v2 deleteAllDESRecordsForDictationPersonalization];
}

void sub_100344030(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = AFSiriLogContextDaemon;
  if (v2)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136315394;
      uint64_t v5 = "-[ADSettingsClient setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]_block_invoke";
      __int16 v6 = 2112;
      uint64_t v7 = v2;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Propagation completed with error=%@", (uint8_t *)&v4, 0x16u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    uint64_t v5 = "-[ADSettingsClient setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Propagation completed without error", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100344144(id a1)
{
  id v2 = +[ADCommandCenter sharedCommandCenter];
  id v1 = [v2 _sessionManager];
  [v1 resetSessionsAtNextRequestBoundary];
}

uint64_t sub_1003443D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100345240(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10034546C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 136315650;
    uint64_t v8 = "-[ADSettingsClient getInEarDetectionStateForBTAddress:withCompletion:]_block_invoke";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s In-ear detection state for %@: %@", (uint8_t *)&v7, 0x20u);
  }
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v3);
  }
}

uint64_t sub_1003456CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1003457C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = dispatch_group_create();
  uint64_t v5 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v6 = dispatch_queue_create("com.apple.assistant.settings-client.connected-bluetooth-devices", v5);

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = v3;
  id v7 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v21;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v21 != v9) {
          objc_enumerationMutation(obj);
        }
        __int16 v11 = *(void **)(*((void *)&v20 + 1) + 8 * (void)v10);
        dispatch_group_enter(v4);
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472;
        v16[2] = sub_100345A1C;
        v16[3] = &unk_10050D200;
        uint64_t v17 = v6;
        id v18 = *(id *)(a1 + 32);
        uint64_t v19 = v4;
        [v11 getDeviceInfo:v16];

        uint64_t v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v8);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100345AE4;
  block[3] = &unk_10050E188;
  id v15 = *(id *)(a1 + 40);
  id v14 = *(id *)(a1 + 32);
  dispatch_group_notify(v4, v6, block);
}

void sub_100345A1C(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100345B04;
  block[3] = &unk_10050DCB8;
  id v6 = a2;
  id v3 = *(NSObject **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v4 = v6;
  dispatch_async(v3, block);
}

uint64_t sub_100345AE4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100345B04(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    objc_msgSend(*(id *)(a1 + 40), "addObject:");
  }
  id v2 = *(NSObject **)(a1 + 48);
  dispatch_group_leave(v2);
}

uint64_t sub_100345C24(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100345D18(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100345DC8(uint64_t a1, void *a2)
{
  return _[a2 getHeadGestures:*(void *)(a1 + 32)];
}

id sub_100345E74(uint64_t a1, void *a2)
{
  return _[a2 setHeadGestures:*(unsigned __int8 *)(a1 + 40) completion:*(void *)(a1 + 32)];
}

id sub_100345F1C(uint64_t a1, void *a2)
{
  return _[a2 getPersonalVolume:*(void *)(a1 + 32)];
}

id sub_100345FC8(uint64_t a1, void *a2)
{
  return _[a2 setPersonalVolume:*(unsigned __int8 *)(a1 + 40) completion:*(void *)(a1 + 32)];
}

id sub_100346070(uint64_t a1, void *a2)
{
  return _[a2 getConversationAwareness:*(void *)(a1 + 32)];
}

id sub_10034611C(uint64_t a1, void *a2)
{
  return _[a2 setConversationAwareness:*(unsigned __int8 *)(a1 + 40) completion:*(void *)(a1 + 32)];
}

void sub_1003462A0(id a1, AFBluetoothDeviceBooleanSettingResponseMutating *a2)
{
  id v2 = a2;
  [(AFBluetoothDeviceBooleanSettingResponseMutating *)v2 setValue:0];
  [(AFBluetoothDeviceBooleanSettingResponseMutating *)v2 setStatus:4];
}

uint64_t sub_1003463CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1003464B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100346574(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

uint64_t sub_10034663C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

uint64_t sub_100346720(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_1003467E8(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100346874;
  v3[3] = &unk_10050CF78;
  id v4 = *(id *)(a1 + 32);
  [a2 resetWithCompletion:v3];
}

uint64_t sub_100346874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_10034693C(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1003469C8;
  v3[3] = &unk_10050CF78;
  id v4 = *(id *)(a1 + 32);
  [a2 purgeWithCompletion:v3];
}

uint64_t sub_1003469C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

id sub_100346B3C(uint64_t a1, void *a2)
{
  return _[a2 fetchEventRecordsCreatedAfterDate:0 completion:*(void *)(a1 + 32)];
}

uint64_t sub_100346B4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100347370(uint64_t a1, void *a2)
{
  uint64_t v16 = a1;
  id v2 = a2;
  id v18 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v19 = v2;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = [v2 allKeys];
  id v3 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v20 + 1) + 8 * i);
        id v8 = objc_msgSend(v19, "objectForKey:", v7, v16);
        uint64_t v9 = [v8 buildDictionaryRepresentation];
        id v10 = [v9 mutableCopy];

        __int16 v11 = +[ADMUXSyncTokenManager sharedInstance];
        id v12 = [v8 assistantID];
        __int16 v13 = [v8 aceHost];
        id v14 = [v11 getSyncTokenForAssistantId:v12 aceHost:v13];

        if (v14) {
          [v10 setObject:v14 forKey:@"SyncToken"];
        }
        id v15 = [v10 copy];
        [v18 setObject:v15 forKey:v7];
      }
      id v4 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v4);
  }

  (*(void (**)(void))(*(void *)(v16 + 32) + 16))();
}

void sub_100347B58(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 assistantIdentifier];
  [v3 setAssistantIdentifier:v4];
}

uint64_t sub_100347C68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100347F70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10034802C(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100348A5C(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = +[AFError errorWithCode:0];
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    uint64_t v6 = v3;
    uint64_t v4 = (*(uint64_t (**)(void))(v4 + 16))();
    uint64_t v3 = v6;
  }
  return _objc_release_x1(v4, v3);
}

void sub_100348B9C(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = [v9 indexOfObjectPassingTest:&stru_10050CFE0];
  if (v3 == (id)0x7FFFFFFFFFFFFFFFLL
    || ([v9 objectAtIndexedSubscript:v3], (uint64_t v4 = (ADAccount *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    uint64_t v5 = objc_alloc_init(ADAccount);
    [(ADAccount *)v5 setHostname:kAssistantMockServerHostname];
    [(ADAccount *)v5 setLabel:kAssistantMockServerLabel];
    [*(id *)(a1 + 32) _saveAccount:v5 setActive:1];
  }
  else
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(a1 + 40);
    uint64_t v7 = [(ADAccount *)v4 identifier];
    [v6 setActiveAccountIdentifier:v7];
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(void))(v8 + 16))();
  }
}

BOOL sub_100348C98(id a1, ADAccount *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(ADAccount *)a2 label];
  unsigned __int8 v5 = [v4 isEqualToString:kAssistantMockServerLabel];

  return v5;
}

void sub_100348DC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100348EA8;
  v6[3] = &unk_10050D3F0;
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = *(void *)(a1 + 32);
  id v11 = *(id *)(a1 + 56);
  id v10 = *(id *)(a1 + 48);
  id v5 = v3;
  [v4 _createMockServerIfNeededAndSetActiveWithCompletion:v6];
}

void sub_100348EA8(uint64_t a1)
{
  id v2 = +[ADMockServer sharedServer];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100348FD8;
  v8[3] = &unk_10050DF38;
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  id v9 = v4;
  uint64_t v10 = v5;
  id v11 = *(id *)(a1 + 64);
  [v2 replayWithFileURL:v3 completion:v8];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10034904C;
  v6[3] = &unk_10050E138;
  id v7 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100348FD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (*(void *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "setActiveAccountIdentifier:");
    id v3 = v6;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(v4 + 16))(v4, v6);
    id v3 = v6;
  }
  return _objc_release_x1(v4, v3);
}

void sub_10034904C(uint64_t a1)
{
  id v2 = [objc_alloc((Class)AFSpeechRequestOptions) initWithActivationEvent:19];
  [*(id *)(a1 + 32) handleRemoteSpeechRequest:v2 completion:0];
}

uint64_t sub_100349440(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    id v7 = v4;
    uint64_t v5 = (*(uint64_t (**)(void))(v5 + 16))();
    id v4 = v7;
  }
  return _objc_release_x1(v5, v4);
}

void sub_10034959C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    id v8 = v5;
    if (a2)
    {
      (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
    }
    else
    {
      id v7 = +[NSError errorWithDomain:kAFAssistantErrorDomain code:5 userInfo:0];
      (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
    }
    id v5 = v8;
  }
}

void sub_100349718(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    id v8 = v5;
    if (a2)
    {
      (*(void (**)(uint64_t, void))(v6 + 16))(v6, 0);
    }
    else
    {
      id v7 = +[NSError errorWithDomain:kAFAssistantErrorDomain code:5 userInfo:0];
      (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
    }
    id v5 = v8;
  }
}

void sub_100349F04(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  id v3 = +[SiriTTSLanguages availableLanguages];
  id v4 = AFPreferencesSupportedLanguages();
  id v5 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", objc_msgSend(v4, "count"));
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v6 = v4;
  id v7 = (char *)[v6 countByEnumeratingWithState:&v28 objects:v33 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v29;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = AFOutputVoiceLanguageForRecognitionLanguage();
        [v5 addObject:v11];

        ++v10;
      }
      while (v8 != v10);
      id v8 = (char *)[v6 countByEnumeratingWithState:&v28 objects:v33 count:16];
    }
    while (v8);
  }

  [v5 intersectSet:v3];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v12 = v5;
  id v13 = [v12 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v25;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v25 != v15) {
          objc_enumerationMutation(v12);
        }
        id v17 = [objc_alloc((Class)AFVoiceInfo) initWithLanguageCode:*(void *)(*((void *)&v24 + 1) + 8 * (void)v16) gender:0 isCustom:0];
        [v2 addObject:v17];

        uint64_t v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      id v14 = [v12 countByEnumeratingWithState:&v24 objects:v32 count:16];
    }
    while (v14);
  }

  id v18 = +[SiriTTSDaemonSession afSharedSession];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_10034A1E4;
  v20[3] = &unk_10050CF28;
  char v23 = *(unsigned char *)(a1 + 40);
  id v21 = v2;
  id v22 = *(id *)(a1 + 32);
  id v19 = v2;
  [v18 downloadedVoicesMatching:0 reply:v20];
}

void sub_10034A1E4(uint64_t a1, void *a2)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = a2;
  id v15 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v15)
  {
    uint64_t v3 = *(void *)v17;
    uint64_t v13 = a1;
    do
    {
      for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v3) {
          objc_enumerationMutation(obj);
        }
        id v5 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        if ([v5 type] == (id)3 || objc_msgSend(v5, "type") == (id)4)
        {
          id v6 = objc_alloc((Class)AFVoiceInfo);
          id v7 = [v5 language];
          id v8 = [v5 AFVoiceGender];
          uint64_t v9 = [v5 name];
          if (*(unsigned char *)(a1 + 48))
          {
            id v10 = [v5 AFVoiceFootprint];
            if (*(unsigned char *)(a1 + 48))
            {
              a1 = v13;
              id v11 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v5 version]);
              id v12 = [v6 initWithLanguageCode:v7 gender:v8 isCustom:1 name:v9 footprint:v10 contentVersion:v11 masteredVersion:0];

LABEL_13:
              [*(id *)(a1 + 32) addObject:v12];

              continue;
            }
          }
          else
          {
            id v10 = 0;
          }
          id v12 = [v6 initWithLanguageCode:v7 gender:v8 isCustom:1 name:v9 footprint:v10 contentVersion:0 masteredVersion:0];
          goto LABEL_13;
        }
      }
      id v15 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v15);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10034A62C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (*(void *)(a1 + 32))
  {
    id v6 = [a2 dictionary];
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315650;
      uint64_t v9 = "-[ADSettingsClient handleCommand:completion:]_block_invoke";
      __int16 v10 = 2112;
      id v11 = v6;
      __int16 v12 = 2112;
      id v13 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Responding %@ %@", (uint8_t *)&v8, 0x20u);
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t sub_10034A8DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10034A8F4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10034AABC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315650;
    uint64_t v9 = "-[ADSettingsClient getExperimentForConfigurationIdentifier:completion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v5;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Experiment: %@, Error: %@", (uint8_t *)&v8, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10034ACA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[ADDeviceProximityManager sharedManager];
  id v5 = sub_1002ABC8C(v3);

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10034AD78;
  v6[3] = &unk_10050CE88;
  id v7 = *(id *)(a1 + 32);
  [v4 getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:v5 includesAllReachableDevices:1 completion:v6];
}

uint64_t sub_10034AD78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10034AE34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v5);
        }
        __int16 v10 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v11 = objc_msgSend(v10, "info", (void)v15);
        __int16 v12 = [v10 content];
        id v13 = objc_msgSend(v12, "af_lenientMappedArray:", &stru_10050CE60);
        id v14 = v13;
        if (v11 && [v13 count]) {
          [v4 setObject:v14 forKey:v11];
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v7);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

NSData *__cdecl sub_10034AFDC(id a1, SVDCapability *a2)
{
  return +[NSKeyedArchiver archivedDataWithRootObject:a2 requiringSecureCoding:1 error:0];
}

void sub_10034B10C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v15;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v9);
        id v11 = +[ADPeerCloudService sharedInstance];
        __int16 v12 = [v11 peerInfoForIDSDeviceUniqueIdentifier:v10 allowNonPeers:1];

        [v12 setIdsDeviceUniqueIdentifier:v10];
        id v13 = [v12 afPeerInfo];
        [v4 addObject:v13];

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v7);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10034B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 == 0);
  }
  return result;
}

void sub_10034B954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10034B96C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10034B97C(uint64_t a1)
{
}

void sub_10034B984(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315394;
    uint64_t v9 = "-[ADSettingsClient _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Got sync verification finished notification %@", (uint8_t *)&v8, 0x16u);
  }
  id v5 = [v3 object];
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);
  }
  id v7 = +[NSNotificationCenter defaultCenter];
  [v7 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_10034BD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10034BD74(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v7 = 136315394;
    int v8 = "-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]_block_invoke";
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Got sync finished notification %@", (uint8_t *)&v7, 0x16u);
  }
  id v5 = [v3 object];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v6 = +[NSNotificationCenter defaultCenter];
  [v6 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_10034C1FC(id a1)
{
  id v2 = +[ADCommandCenter sharedCommandCenter];
  id v1 = [v2 _sessionManager];
  [v1 resetSessionsAtNextRequestBoundary];
}

void sub_10034C814(uint64_t a1)
{
  id v2 = +[AFPreferences sharedPreferences];
  unsigned __int8 v3 = [v2 dictationIsEnabled];

  if ((v3 & 1) == 0)
  {
    id v4 = +[NSSet set];
    id v5 = +[SFEntitledAssetManager subscriberIdForDictationAssets];
    id v6 = +[SFEntitledAssetManager unsubscribeFromAssetsWithAssetType:3 exceptLanguages:v4 subscriberId:v5];

    int v7 = +[ADDictationOfflineStatusObserver sharedDictationOfflineStatusObserver];
    [v7 fetchOfflineDictationStatusIgnoringCache:1 asynchronously:1];
  }
  +[AFDictationSamplingUtilities deleteAllSamplingData];
  id v8 = [*(id *)(a1 + 32) _localSpeechRecognizer];
  [v8 deleteAllDESRecordsForDictationPersonalization];
}

void sub_10034CA10(id a1)
{
}

void sub_10034CAC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    id v5 = v4;
    id v6 = [v3 description];
    int v9 = 136315395;
    id v10 = "-[ADSettingsClient fetchActiveAccount:]_block_invoke";
    __int16 v11 = 2113;
    __int16 v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s %{private}@", (uint8_t *)&v9, 0x16u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = [v3 messageDictionary];
  (*(void (**)(uint64_t, void *, void))(v7 + 16))(v7, v8, 0);
}

void sub_10034D0AC(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_10034D160;
  v5[3] = &unk_10050D818;
  id v6 = a2;
  id v3 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v4 = v6;
  [v3 fetchActiveAccountIdentifier:v5];
}

void sub_10034D160(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v17 = a1;
  id v5 = *(id *)(a1 + 32);
  id v6 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v19;
    uint64_t v9 = kAFAccountInfoIsActiveKey;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v5);
        }
        __int16 v11 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        __int16 v12 = [v11 messageDictionary];
        id v13 = [v11 identifier];
        unsigned int v14 = [v13 isEqualToString:v3];

        if (v14)
        {
          id v15 = [v12 mutableCopy];

          long long v16 = +[NSNumber numberWithBool:1];
          [v15 setObject:v16 forKey:v9];

          __int16 v12 = v15;
        }
        [v4 addObject:v12];
      }
      id v7 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v7);
  }

  (*(void (**)(void))(*(void *)(v17 + 40) + 16))();
}

void sub_10034DE64(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setDeviceIDPair:v3];
  [v4 setProximity:*(unsigned int *)(a1 + 48)];
  [v4 setObservationDate:*(void *)(a1 + 40)];
}

uint64_t sub_10034E7D4(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      __int16 v12 = objc_alloc_init(_ADPBDeviceStringKeyValuePair);
      [a1 addPairs:v12];
      if (!PBReaderPlaceMark() || !sub_10034FA94((uint64_t)v12, a2))
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_10034FA94(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_21:
        unsigned int v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 16;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1003505B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_10035067C;
  v7[3] = &unk_10050D558;
  int v12 = *(_DWORD *)(a1 + 64);
  id v8 = v3;
  uint64_t v9 = v4;
  long long v11 = *(_OWORD *)(a1 + 48);
  id v10 = *(id *)(a1 + 40);
  id v6 = v3;
  dispatch_async(v5, v7);
}

uint64_t sub_10035067C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = [v2 volumeCategoryForAudioCategory:@"VoiceCommand"];
    uint64_t v4 = AFSiriLogContextSpeech;
    if (v3)
    {
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        double v6 = *(float *)(a1 + 72);
        *(_DWORD *)buf = 136315394;
        long long v30 = "-[ADVolumeService _updateSiriVolume:completion:]_block_invoke_2";
        __int16 v31 = 2048;
        double v32 = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Updating Siri volume to %f.", buf, 0x16u);
      }
      LODWORD(v5) = *(_DWORD *)(a1 + 72);
      unsigned int v7 = [*(id *)(a1 + 40) _updateSystemVolumeForCategory:v3 andMode:@"SpeechRecognition" audioRoute:0 withName:0 usingSystemController:*(void *)(a1 + 32) volume:1 operationType:v5];
      id v8 = AFSiriLogContextSpeech;
      if (v7)
      {
        uint64_t v9 = 1;
        if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
        {
          double v10 = *(float *)(a1 + 72);
          *(_DWORD *)buf = 136315394;
          long long v30 = "-[ADVolumeService _updateSiriVolume:completion:]_block_invoke";
          __int16 v31 = 2048;
          double v32 = v10;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Updated Siri volume to %f.", buf, 0x16u);
        }
        goto LABEL_15;
      }
      if (!os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
LABEL_14:
        uint64_t v9 = 0;
LABEL_15:

        goto LABEL_16;
      }
      double v23 = *(float *)(a1 + 72);
      *(_DWORD *)buf = 136315394;
      long long v30 = "-[ADVolumeService _updateSiriVolume:completion:]_block_invoke";
      __int16 v31 = 2048;
      double v32 = v23;
      int v12 = "%s Failed to update Siri volume to %f.";
      uint64_t v13 = v8;
    }
    else
    {
      if (!os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR)) {
        goto LABEL_14;
      }
      *(_DWORD *)buf = 136315394;
      long long v30 = "-[ADVolumeService _updateSiriVolume:completion:]_block_invoke";
      __int16 v31 = 2112;
      double v32 = COERCE_DOUBLE(@"VoiceCommand");
      int v12 = "%s Unable to get the volume category for audio category '%@'";
      uint64_t v13 = v4;
    }
    _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, v12, buf, 0x16u);
    goto LABEL_14;
  }
  long long v11 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    long long v30 = "-[ADVolumeService _updateSiriVolume:completion:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%s Failed to fetch AVSystemController. Unable to update Siri volume.", buf, 0xCu);
  }
  uint64_t v9 = 0;
LABEL_16:
  unsigned int v14 = AFSiriLogContextSpeech;
  id v15 = v14;
  os_signpost_id_t v16 = *(void *)(a1 + 56);
  if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_INTERVAL_END, v16, "SiriUpdateOutputVolume", (const char *)&unk_100458042, buf, 2u);
  }

  if (v9)
  {
    *(void *)(*(void *)(a1 + 40) + 64) = *(void *)(a1 + 64);
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v17 = *(id *)(*(void *)(a1 + 40) + 72);
    id v18 = [v17 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v19; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v25 != v20) {
            objc_enumerationMutation(v17);
          }
          objc_msgSend(*(id *)(*((void *)&v24 + 1) + 8 * i), "invoke", (void)v24);
        }
        id v19 = [v17 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v19);
    }

    [*(id *)(*(void *)(a1 + 40) + 72) removeAllObjects];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, v9);
  }
  return result;
}

id sub_100350C50(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateSiriVolumeIfNeeded];
}

void sub_1003512B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003513AC;
  block[3] = &unk_10050D508;
  id v12 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v13 = v5;
  uint64_t v14 = v6;
  int v18 = *(_DWORD *)(a1 + 72);
  id v7 = *(id *)(a1 + 48);
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  id v15 = v7;
  uint64_t v17 = v8;
  id v16 = v9;
  id v10 = v3;
  dispatch_async(v4, block);
}

void sub_1003513AC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = [v2 volumeCategoryForAudioCategory:*(void *)(a1 + 40)];
    if (v3)
    {
      LODWORD(v4) = *(_DWORD *)(a1 + 80);
      [*(id *)(a1 + 48) _handleSystemVolumeChangeForCategory:v3 volume:*(void *)(a1 + 40) audioCategory:*(void *)(a1 + 56) reason:v4];
      id v5 = +[AFAnalytics sharedAnalytics];
      uint64_t v7 = *(void *)(a1 + 72);
      if (*(void *)(a1 + 56))
      {
        v29[0] = v3;
        v28[0] = @"category";
        v28[1] = @"volume";
        LODWORD(v6) = *(_DWORD *)(a1 + 80);
        uint64_t v8 = +[NSNumber numberWithFloat:v6];
        v28[2] = @"reason";
        uint64_t v9 = *(void *)(a1 + 56);
        v29[1] = v8;
        v29[2] = v9;
        id v10 = v29;
        long long v11 = v28;
        uint64_t v12 = 3;
      }
      else
      {
        v26[1] = @"volume";
        v27[0] = v3;
        v26[0] = @"category";
        LODWORD(v6) = *(_DWORD *)(a1 + 80);
        uint64_t v8 = +[NSNumber numberWithFloat:v6];
        v27[1] = v8;
        id v10 = v27;
        long long v11 = v26;
        uint64_t v12 = 2;
      }
      id v19 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v11 count:v12];
      [v5 logEventWithType:4601 machAbsoluteTime:v7 context:v19];
    }
    else
    {
      id v16 = AFSiriLogContextSpeech;
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = *(void *)(a1 + 40);
        uint64_t v18 = *(void *)(a1 + 64);
        int v20 = 136315650;
        long long v21 = "-[ADVolumeService systemVolumeChanged:]_block_invoke_2";
        __int16 v22 = 2112;
        uint64_t v23 = v17;
        __int16 v24 = 2112;
        uint64_t v25 = v18;
        _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%s Unable to get the volume category for audio category '%@' in the notification %@.", (uint8_t *)&v20, 0x20u);
      }
    }
  }
  else
  {
    id v13 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 40);
      uint64_t v15 = *(void *)(a1 + 64);
      int v20 = 136315650;
      long long v21 = "-[ADVolumeService systemVolumeChanged:]_block_invoke";
      __int16 v22 = 2112;
      uint64_t v23 = v14;
      __int16 v24 = 2112;
      uint64_t v25 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%s Failed to fetch AVSystemController. Unable to get volume category for audio category '%@' in the notification %@.", (uint8_t *)&v20, 0x20u);
    }
  }
}

void sub_100352608(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003526A4;
  v7[3] = &unk_10050E160;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_1003526A4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v1 = *(void **)(a1 + 40);
    _objc_msgSend(v1, "_fetchSystemVolumesUsingSystemController:");
  }
  else
  {
    id v2 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v3 = 136315138;
      uint64_t v4 = "-[ADVolumeService _fetchSystemVolumes]_block_invoke_2";
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s Failed to fetch AVSystemController. Unable to fetch system volumes.", (uint8_t *)&v3, 0xCu);
    }
  }
}

unsigned char *sub_100352A20(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[40])
  {
    [result _stopObservingSystemVolumes];
    [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
    [*(id *)(a1 + 32) _startObservingSystemVolumes];
    int v3 = *(void **)(a1 + 32);
    return [v3 _fetchSystemVolumes];
  }
  return result;
}

unsigned char *sub_100352AF8(uint64_t a1)
{
  [*(id *)(a1 + 32) _stopObservingSystemControllerLifecycle];
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[40])
  {
    [result _stopObservingSystemVolumes];
    [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
    int v3 = *(void **)(*(void *)(a1 + 32) + 72);
    return [v3 removeAllObjects];
  }
  return result;
}

void sub_100352D18(uint64_t a1)
{
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100352E68;
  void v14[3] = &unk_10050D440;
  id v15 = *(id *)(a1 + 56);
  id v2 = objc_retainBlock(v14);
  int v3 = +[ADAVSystemControllerLifecycleManager sharedManager];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100352E80;
  v8[3] = &unk_10050D490;
  uint64_t v4 = *(void **)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v4;
  id v5 = *(id *)(a1 + 48);
  int v13 = *(_DWORD *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 64);
  id v11 = v2;
  uint64_t v12 = v6;
  id v10 = v5;
  uint64_t v7 = v2;
  [v3 getAVSystemControllerWithTimeout:v8 completion:2.0];
}

uint64_t sub_100352E68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100352E80(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100352F70;
  block[3] = &unk_10050D468;
  id v11 = v3;
  uint64_t v12 = v4;
  id v13 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  int v17 = *(_DWORD *)(a1 + 72);
  id v8 = *(void **)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  id v14 = v6;
  uint64_t v16 = v7;
  id v15 = v8;
  id v9 = v3;
  dispatch_async(v5, block);
}

void sub_100352F70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = AFSiriLogContextSpeech;
  if (!v2)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      id v11 = "-[ADVolumeService setSiriOutputVolume:forAudioRoute:withName:operationType:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s AVSystemController is unavailable.", (uint8_t *)&v10, 0xCu);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v8 = 2603;
    goto LABEL_14;
  }
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v10 = 136315138;
    id v11 = "-[ADVolumeService setSiriOutputVolume:forAudioRoute:withName:operationType:completion:]_block_invoke_4";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Updating Siri volume...", (uint8_t *)&v10, 0xCu);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  LODWORD(v4) = *(_DWORD *)(a1 + 80);
  unsigned int v5 = [*(id *)(a1 + 40) _updateSystemVolumeForCategory:@"VoiceCommand" andMode:@"SpeechRecognition" audioRoute:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) usingSystemController:v2 volume:*(void *)(a1 + 72) operationType:v4];
  id v6 = AFSiriLogContextSpeech;
  if (!v5)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136315138;
      id v11 = "-[ADVolumeService setSiriOutputVolume:forAudioRoute:withName:operationType:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Failed to update Siri volume.", (uint8_t *)&v10, 0xCu);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v8 = 2605;
LABEL_14:
    id v9 = +[AFError errorWithCode:v8];
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v9);

    return;
  }
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    int v10 = 136315138;
    id v11 = "-[ADVolumeService setSiriOutputVolume:forAudioRoute:withName:operationType:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Updated Siri volume.", (uint8_t *)&v10, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
}

void sub_100353330(uint64_t a1)
{
  uint64_t v2 = +[ADAVSystemControllerLifecycleManager sharedManager];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_100353404;
  void v4[3] = &unk_10050D418;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  [v2 getAVSystemControllerWithTimeout:v4 completion:2.0];
}

void sub_100353404(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003534E8;
  block[3] = &unk_10050D3F0;
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  id v6 = v3;
  dispatch_async(v5, block);
}

void sub_1003534E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2)
  {
    id v6 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v12 = "-[ADVolumeService getSiriOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s AVSystemController is unavailable.", buf, 0xCu);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v8 = 2603;
    goto LABEL_14;
  }
  float v10 = 0.0;
  id v3 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    id v12 = "-[ADVolumeService getSiriOutputVolumeForAudioRoute:withName:completion:]_block_invoke_3";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Fetching Siri volume...", buf, 0xCu);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  unsigned int v4 = [*(id *)(a1 + 40) _fetchSystemVolumeForCategory:@"VoiceCommand" andMode:@"SpeechRecognition" audioRoute:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) usingSystemController:v2 volume:&v10];
  id v5 = AFSiriLogContextSpeech;
  if (!v4)
  {
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v12 = "-[ADVolumeService getSiriOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s Failed to fetch Siri volume.", buf, 0xCu);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v8 = 2604;
LABEL_14:
    uint64_t v9 = +[AFError errorWithCode:v8];
    (*(void (**)(uint64_t, void *, double))(v7 + 16))(v7, v9, 0.0);

    return;
  }
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    id v12 = "-[ADVolumeService getSiriOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
    __int16 v13 = 2048;
    double v14 = v10;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Fetched Siri volume is %f.", buf, 0x16u);
  }
  (*(void (**)(float))(*(void *)(a1 + 64) + 16))(v10);
}

void sub_1003538D4(uint64_t a1)
{
  uint64_t v2 = +[ADAVSystemControllerLifecycleManager sharedManager];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1003539A8;
  void v4[3] = &unk_10050D418;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  [v2 getAVSystemControllerWithTimeout:v4 completion:2.0];
}

void sub_1003539A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100353A8C;
  block[3] = &unk_10050D3F0;
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  id v6 = v3;
  dispatch_async(v5, block);
}

void sub_100353A8C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    float v13 = 0.0;
    id v3 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      id v15 = "-[ADVolumeService getMusicOutputVolumeForAudioRoute:withName:completion:]_block_invoke_3";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Fetching Media volume...", buf, 0xCu);
      uint64_t v2 = *(void **)(a1 + 32);
    }
    uint64_t v4 = [v2 volumeCategoryForAudioCategory:@"Audio/Video"];
    unsigned int v5 = [*(id *)(a1 + 40) _fetchSystemVolumeForCategory:v4 andMode:0 audioRoute:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) usingSystemController:*(void *)(a1 + 32) volume:&v13];
    id v6 = AFSiriLogContextSpeech;
    if (v5)
    {
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315394;
        id v15 = "-[ADVolumeService getMusicOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
        __int16 v16 = 2048;
        double v17 = v13;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Fetched Media volume is %f.", buf, 0x16u);
      }
      v7.n128_f32[0] = v13;
      (*(void (**)(__n128))(*(void *)(a1 + 64) + 16))(v7);
    }
    else
    {
      if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315138;
        id v15 = "-[ADVolumeService getMusicOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
        _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s Failed to fetch Media volume.", buf, 0xCu);
      }
      uint64_t v11 = *(void *)(a1 + 64);
      id v12 = +[AFError errorWithCode:2604];
      (*(void (**)(uint64_t, void *, double))(v11 + 16))(v11, v12, 0.0);
    }
  }
  else
  {
    id v8 = AFSiriLogContextSpeech;
    if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v15 = "-[ADVolumeService getMusicOutputVolumeForAudioRoute:withName:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s AVSystemController is unavailable.", buf, 0xCu);
    }
    uint64_t v9 = *(void *)(a1 + 64);
    uint64_t v4 = +[AFError errorWithCode:2603];
    v10.n128_u64[0] = 0;
    (*(void (**)(__n128))(v9 + 16))(v10);
  }
}

void sub_100353DB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;

  unsigned int v5 = AFSiriLogContextSpeech;
  if (os_log_type_enabled(AFSiriLogContextSpeech, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 32);
    int v7 = 136315394;
    id v8 = "-[ADVolumeService setClientConfiguration:]_block_invoke";
    __int16 v9 = 2112;
    uint64_t v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s %@", (uint8_t *)&v7, 0x16u);
  }
}

uint64_t sub_100354068(void *a1)
{
  return (*(uint64_t (**)(void, BOOL))(a1[5] + 16))(a1[5], *(void *)(a1[4] + 64) >= a1[6]);
}

void sub_10035408C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 64) >= *(void *)(a1 + 48)
    || (mach_absolute_time(), AFMachAbsoluteTimeGetTimeInterval(), double v3 = v2, v2 >= *(double *)(a1 + 56)))
  {
    int v7 = *(void **)(a1 + 40);
    [v7 invoke];
  }
  else
  {
    [*(id *)(*(void *)(a1 + 32) + 72) addObject:*(void *)(a1 + 40)];
    dispatch_time_t v4 = dispatch_time(0, (uint64_t)((*(double *)(a1 + 56) - v3) * 1000000000.0));
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(NSObject **)(v5 + 8);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1003541C8;
    v8[3] = &unk_10050E160;
    void v8[4] = v5;
    id v9 = *(id *)(a1 + 40);
    dispatch_after(v4, v6, v8);
  }
}

id sub_1003541C8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) removeObject:*(void *)(a1 + 40)];
  double v2 = *(void **)(a1 + 40);
  return [v2 invoke];
}

id sub_100354364(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateSiriVolume:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

id sub_100354484(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _fetchSmartSiriVolumeForType:*(void *)(a1 + 40)];
}

id sub_1003545D0(uint64_t a1)
{
  if (!a1)
  {
    id v1 = +[NSAssertionHandler currentHandler];
    double v2 = +[NSString stringWithUTF8String:"BOOL ADVolumeServiceSupportsSmartSiriVolume(AFInstanceContext *__strong)"];
    [v1 handleFailureInFunction:v2, @"ADVolumeService.m", 738, @"Invalid parameter not satisfying: %@", @"instanceContext != nil" file lineNumber description];
  }
  return +[CSSpeechController isSmartSiriVolumeAvailable];
}

id sub_100354678(uint64_t a1)
{
  double v2 = *(unsigned char **)(a1 + 32);
  if (v2[40])
  {
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 48);
    *(void *)(v4 + 48) = v3;

    id v6 = objc_alloc_init((Class)NSMutableSet);
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 72);
    *(void *)(v7 + 72) = v6;

    [*(id *)(a1 + 32) _startObservingSystemVolumes];
    [*(id *)(a1 + 32) _fetchSystemVolumes];
    double v2 = *(unsigned char **)(a1 + 32);
  }
  return _[v2 _startObservingSystemControllerLifecycle];
}

uint64_t sub_100354850(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 24);
  return result;
}

uint64_t sub_100354910(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 18);
  return result;
}

uint64_t sub_1003549D0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 17);
  return result;
}

uint64_t sub_100354A90(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 16);
  return result;
}

void sub_100355184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003551A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
  {
    int v7 = 136315138;
    id v8 = "-[ADSyncConfigAssetManager _registerUpdateHandler]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s New Siri Memory asset update", (uint8_t *)&v7, 0xCu);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] refresh];
    [v6 _populateConfiguration];
  }
}

id sub_1003553A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _populateConfiguration];
}

void sub_100355450(id a1)
{
  id v1 = objc_alloc_init(ADSyncConfigAssetManager);
  uint64_t v2 = qword_1005863F8;
  qword_1005863F8 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_1003563F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (v3)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v7 = 136315138;
      id v8 = "-[ADCommandCenter(LocationInternal) _sendLocationIfNeededForRequest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Location manager updated location", (uint8_t *)&v7, 0xCu);
    }
    uint64_t v5 = [*(id *)(a1 + 32) _currentRequest];
    id v6 = [v5 currentRequestId];
    [v3 setRefId:v6];

    [*(id *)(a1 + 32) _sendCommandToServer:v3];
  }
  else if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v7 = 136315138;
    id v8 = "-[ADCommandCenter(LocationInternal) _sendLocationIfNeededForRequest]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed updating location", (uint8_t *)&v7, 0xCu);
  }
}

void sub_100356654(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _locationManager];
  id v3 = [v2 knownLocation];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100356778(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _locationManager];
  [v2 dismissedAllVisibleAssistantUIForReason:*(void *)(a1 + 40)];
  [v2 drainRequestsWithErrorCode:1 clearLocationCache:1 dismissDialog:1];
}

void sub_1003568B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _locationManager];
  [v2 showingVisibleAssistantUIForReason:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  [v2 prefetchCurrentLocation];
}

void sub_1003569CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _locationManager];
  [v2 fetchLocationAuthorization:*(void *)(a1 + 40)];
}

void sub_100357A30(id a1)
{
  id v1 = [[ADBluetoothManager alloc] _init];
  uint64_t v2 = qword_100586408;
  qword_100586408 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1003581B4(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([*(id *)(a1 + 32) dataStoreShouldMirrorData])
  {
    id v3 = +[ADCloudKitManager sharedManager];
    [v3 saveCloudSyncEnabledRecord:1 mirror:1 completion:0];
  }
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = v7;
  if (v4)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(v4 + 16))(v4, v7);
    id v5 = v7;
  }
  return _objc_release_x1(v4, v5);
}

void sub_1003583C4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) dataStoreShouldMirrorData])
  {
    id v1 = +[ADCloudKitManager sharedManager];
    [v1 saveCloudSyncEnabledRecord:1 mirror:1 completion:&stru_10050D6D8];
  }
}

uint64_t sub_100358434(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 == 0);
  }
  return result;
}

void sub_100358454(id a1, NSError *a2, NSArray *a3)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v5 = 136315394;
    id v6 = "-[ADCloudKitAccountStatusDataStore synchronizeWithCompletion:]_block_invoke_2";
    __int16 v7 = 2112;
    id v8 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Cloud Sync record mirrored with error (%@)", (uint8_t *)&v5, 0x16u);
  }
}

void sub_1003585D4(id a1, NSException *a2)
{
  uint64_t v2 = a2;
  id v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    int v5 = "-[ADCloudKitAccountStatusDataStore setServerChangeToken:]_block_invoke";
    __int16 v6 = 2112;
    __int16 v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Error encountered while encoding account status server change token: %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100358720(id a1, NSException *a2)
{
  uint64_t v2 = a2;
  id v3 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    int v4 = 136315394;
    int v5 = "-[ADCloudKitAccountStatusDataStore serverChangeToken]_block_invoke";
    __int16 v6 = 2112;
    __int16 v7 = v2;
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Error encountered while decoding acount status server change token: %@", (uint8_t *)&v4, 0x16u);
  }
}

id sub_100358964(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v4 = 0;
    goto LABEL_24;
  }
  id v2 = objc_alloc((Class)SACommandFailed);
  id v3 = [v1 description];
  id v4 = [v2 initWithReason:v3];

  int v5 = [v1 domain];
  if ([v5 isEqualToString:kAFAssistantErrorDomain])
  {
    uint64_t v6 = (uint64_t)[v1 code];
    if (v6 > 1006)
    {
      switch(v6)
      {
        case 1011:
          unsigned int v9 = +[AFFeatureFlags isPersonalRequestDefinedErrorDialogsServerEnabled];
          __int16 v7 = (id *)&SACompanionUnavailableErrorCode;
          uint64_t v10 = (id *)&SACompanionNotFoundErrorCode;
          goto LABEL_20;
        case 1012:
        case 1013:
        case 1014:
        case 1015:
        case 1016:
        case 1018:
          goto LABEL_17;
        case 1017:
          goto LABEL_13;
        case 1019:
          unsigned int v9 = +[AFFeatureFlags isPersonalRequestDefinedErrorDialogsServerEnabled];
          __int16 v7 = (id *)&SACompanionUnavailableErrorCode;
          uint64_t v10 = (id *)&SACompanionNetworkMismatchErrorCode;
          goto LABEL_20;
        case 1020:
          unsigned int v9 = +[AFFeatureFlags isPersonalRequestDefinedErrorDialogsServerEnabled];
          __int16 v7 = (id *)&SACompanionUnavailableErrorCode;
          uint64_t v10 = (id *)&SACompanionWifiDisabledErrorCode;
LABEL_20:
          if (v9) {
            __int16 v7 = v10;
          }
          break;
        default:
          if (v6 != 1007) {
            goto LABEL_17;
          }
          __int16 v7 = (id *)&SACompanionTimeoutErrorCode;
          break;
      }
      goto LABEL_22;
    }
    switch(v6)
    {
      case 103:
        __int16 v7 = (id *)&SARequestTimeoutErrorCode;
        goto LABEL_22;
      case 1000:
LABEL_13:
        __int16 v7 = (id *)&SACompanionUnavailableErrorCode;
        goto LABEL_22;
      case 1001:
        __int16 v7 = (id *)&SACompanionCannotReachSiriErrorCode;
LABEL_22:
        id v8 = *v7;
        goto LABEL_23;
    }
LABEL_17:
    __int16 v7 = (id *)&SACompanionExecutionFailedErrorCode;
    goto LABEL_22;
  }
  if (![v5 isEqualToString:AFSiriAceErrorDomain]) {
    goto LABEL_17;
  }
  id v8 = [v1 code];
LABEL_23:
  [v4 setErrorCode:v8];

LABEL_24:
  return v4;
}

void sub_100358D28(void *a1, void *a2)
{
  id v4 = a2;
  id v3 = +[NSDate date];
  [v4 setDate:v3];

  [v4 setAccessoryIdentifier:a1[4]];
  [v4 setPropagationEvent:a1[7]];
  [v4 setPropagationEventReason:a1[5]];
  [v4 setAssociatedChangeLogEventIdentifier:a1[6]];
}

void sub_100358F54(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v7 = a2;
  [v7 setLogEventIdentifier:v3];
  id v4 = +[NSDate date];
  [v7 setDate:v4];

  [v7 setPreviousOptInStatus:0];
  [v7 setNewOptInStatus:a1[6]];
  [v7 setChangeSource:a1[7]];
  [v7 setChangeReason:a1[5]];
  int v5 = AFBuildVersion();
  [v7 setBuildVersion:v5];

  uint64_t v6 = AFProductVersion();
  [v7 setProductVersion:v6];

  [v7 setSchemaVersion:kAFSiriDataSharingOptInStatusHistorySchemaVersion];
}

id sub_100359138(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _logSiriDataSharingPropagationAccessoryIdentifier:*(void *)(a1 + 40) propagationEvent:*(void *)(a1 + 64) propagationReason:*(void *)(a1 + 48) associatedLogEventIdentifier:*(void *)(a1 + 56)];
}

id sub_100359250(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _logSiriDataSharingRepromptOptInStatus:*(void *)(a1 + 56) source:*(void *)(a1 + 64) reason:*(void *)(a1 + 40) logEventIdentifier:*(void *)(a1 + 48)];
}

void sub_10035943C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 136315650;
    unsigned int v9 = "-[ADHeadphonesAnnouncementRequestCapabilityProvider fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v3;
    __int16 v12 = 2112;
    uint64_t v13 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s CBDiscovery found CBUUID: %@ for device with address: %@", (uint8_t *)&v8, 0x20u);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = [v3 copy];
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
}

id sub_1003595AC()
{
  if (qword_100586440 != -1) {
    dispatch_once(&qword_100586440, &stru_10050D858);
  }
  v0 = (void *)qword_100586448;
  return v0;
}

void sub_100359600(id a1)
{
  qword_100586448 = (uint64_t)objc_getClass("FMDFMIPManager");
  if (!qword_100586448) {
    __assert_rtn("initFMDFMIPManager_block_invoke", "ADFMDMonitor.m", 22, "classFMDFMIPManager");
  }
  off_100585148 = sub_1003596C4;
}

void *sub_100359664()
{
  uint64_t result = (void *)qword_100586438;
  if (!qword_100586438)
  {
    uint64_t result = dlopen("/System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice", 2);
    qword_100586438 = (uint64_t)result;
    if (!result) {
      __assert_rtn("FindMyDeviceLibrary", "ADFMDMonitor.m", 20, "frameworkLibrary");
    }
  }
  return result;
}

id sub_1003596C4()
{
  return (id)qword_100586448;
}

void sub_100359744(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) _fetchLostModeState];
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v3 + 8) != v2)
  {
    unsigned int v4 = v2;
    uint64_t v5 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      CFStringRef v6 = @"disabled";
      if (v4) {
        CFStringRef v6 = @"enabled";
      }
      int v8 = 136315394;
      unsigned int v9 = "-[ADFMDMonitor _updateLostModeState]_block_invoke";
      __int16 v10 = 2112;
      CFStringRef v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Lost mode is now %@", (uint8_t *)&v8, 0x16u);
      uint64_t v3 = *(void *)(a1 + 32);
    }
    *(unsigned char *)(v3 + 8) = v4;
    uint64_t v7 = +[NSNotificationCenter defaultCenter];
    [v7 postNotificationName:@"ADLostModeStateDidChangeNotification" object:0];
  }
}

id sub_1003598E8()
{
  if (qword_100586430 != -1) {
    dispatch_once(&qword_100586430, &stru_10050D838);
  }
  v0 = (void *)qword_100586428;
  return v0;
}

void sub_10035993C(id a1)
{
  id v1 = sub_100359664();
  unsigned int v2 = (id *)dlsym(v1, "kLostModeChangedNotification");
  if (!v2) {
    __assert_rtn("initkLostModeChangedNotification_block_invoke", "ADFMDMonitor.m", 21, "constant");
  }
  objc_storeStrong((id *)&qword_100586428, *v2);
  off_100585140 = sub_1003599A8;
}

id sub_1003599A8()
{
  return (id)qword_100586428;
}

id sub_100359B40(uint64_t a1, void *a2)
{
  return _[a2 _updateLostModeState];
}

uint64_t sub_100359BE8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_100586420;
  qword_100586420 = (uint64_t)v1;
  return _objc_release_x1(v1, v2);
}

void *sub_100359F28(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 8))
  {
    --*(void *)(v1 + 16);
    uint64_t result = (void *)result[4];
    if (!result[2]) {
      return [result _invalidate];
    }
  }
  return result;
}

id sub_100359FC8(uint64_t a1)
{
  uint64_t v2 = +[ADBluetoothManager sharedInstance];
  uint64_t v3 = [v2 wirelessSplitterSession];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 8);
  *(void *)(v4 + 8) = v3;

  uint64_t v6 = *(void *)(a1 + 32);
  id result = *(id *)(v6 + 8);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 16);
    if (!v8)
    {
      id result = objc_msgSend(result, "addObserver:");
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(v6 + 16);
    }
    *(void *)(v6 + 16) = v8 + 1;
  }
  return result;
}

void sub_10035A170(id a1)
{
  id v1 = [[ADBluetoothWirelessSplitterSessionObserver alloc] _init];
  uint64_t v2 = qword_100586458;
  qword_100586458 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

id sub_10035A4B8(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 40)];
  uint64_t v4 = [v2 member:v3];

  if (v4)
  {
    uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 16);
    uint64_t v6 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 40)];
    [v5 removeObject:v6];

    uint64_t v7 = (void *)AFSiriLogContextDaemon;
    if (!os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO)) {
      goto LABEL_6;
    }
    uint64_t v8 = *(void *)(a1 + 40);
    unsigned int v9 = v7;
    __int16 v10 = +[NSNumber numberWithUnsignedInteger:v8];
    CFStringRef v11 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(*(void *)(a1 + 32) + 16) count]);
    int v17 = 136315650;
    uint64_t v18 = "-[ADBluetoothInEarDetectionStateObserver stopObservingForObserverID:]_block_invoke";
    __int16 v19 = 2112;
    int v20 = v10;
    __int16 v21 = 2112;
    __int16 v22 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s Removed observerID:%@ from observers, count: %@ observer(s)", (uint8_t *)&v17, 0x20u);

    goto LABEL_4;
  }
  __int16 v12 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v15 = *(void *)(a1 + 40);
    unsigned int v9 = v12;
    __int16 v10 = +[NSNumber numberWithUnsignedInteger:v15];
    __int16 v16 = *(void **)(*(void *)(a1 + 32) + 16);
    int v17 = 136315650;
    uint64_t v18 = "-[ADBluetoothInEarDetectionStateObserver stopObservingForObserverID:]_block_invoke";
    __int16 v19 = 2112;
    int v20 = v10;
    __int16 v21 = 2112;
    __int16 v22 = v16;
    _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Invalid call to stopObserving, no active observer with observerID: %@ in observers %@", (uint8_t *)&v17, 0x20u);
LABEL_4:
  }
LABEL_6:
  id result = [*(id *)(*(void *)(a1 + 32) + 16) count];
  if (!result)
  {
    double v14 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v17 = 136315138;
      uint64_t v18 = "-[ADBluetoothInEarDetectionStateObserver stopObservingForObserverID:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "%s No IED state observers, stop observing Bluetooth device", (uint8_t *)&v17, 0xCu);
    }
    return [*(id *)(a1 + 32) _invalidate];
  }
  return result;
}

void sub_10035A7E8(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(void *)(v2 + 32))
  {
    uint64_t v3 = [*(id *)(v2 + 32) identifier];
    unsigned __int8 v4 = [v3 isEqualToString:a1[5]];

    uint64_t v2 = a1[4];
    if ((v4 & 1) == 0)
    {
      [(id)v2 _invalidate];
      uint64_t v2 = a1[4];
    }
  }
  if (!*(void *)(v2 + 32))
  {
    uint64_t v5 = +[ADBluetoothManager sharedInstance];
    uint64_t v6 = [v5 deviceWithAddress:a1[5]];

    uint64_t v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v18 = 136315394;
      __int16 v19 = "-[ADBluetoothInEarDetectionStateObserver startObservingForBTAddress:forObserverID:]_block_invoke";
      __int16 v20 = 2112;
      __int16 v21 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Starting to observer in ear state for device: %@", (uint8_t *)&v18, 0x16u);
    }
    uint64_t v8 = a1[4];
    unsigned int v9 = *(void **)(v8 + 32);
    *(void *)(v8 + 32) = v6;
    id v10 = v6;

    objc_msgSend(*(id *)(a1[4] + 32), "addObserver:");
    uint64_t v2 = a1[4];
  }
  CFStringRef v11 = *(void **)(v2 + 16);
  __int16 v12 = +[NSNumber numberWithUnsignedInteger:a1[6]];
  [v11 addObject:v12];

  uint64_t v13 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = a1[6];
    uint64_t v15 = v13;
    __int16 v16 = +[NSNumber numberWithUnsignedInteger:v14];
    int v17 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1[4] + 16) count]);
    int v18 = 136315650;
    __int16 v19 = "-[ADBluetoothInEarDetectionStateObserver startObservingForBTAddress:forObserverID:]_block_invoke";
    __int16 v20 = 2112;
    __int16 v21 = v16;
    __int16 v22 = 2112;
    uint64_t v23 = v17;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s Added observerID:%@ to observers, count: %@ observer(s)", (uint8_t *)&v18, 0x20u);
  }
}

void sub_10035AB78(id a1)
{
  id v1 = [[ADBluetoothInEarDetectionStateObserver alloc] _init];
  uint64_t v2 = qword_100586468;
  qword_100586468 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

id sub_10035C6FC(uint64_t a1)
{
  uint64_t v2 = a1 - 1;
  if (unint64_t)(a1 - 1) <= 0x23 && ((0xE64E1F7BFuLL >> v2))
  {
    id v3 = *(id *)*(&off_10050D8E0 + v2);
  }
  else
  {
    id v3 = 0;
  }
  return v3;
}

void sub_10035DA0C()
{
}

void sub_10035DDD8(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 setIsDeviceOwnedByCurrentUser:*(unsigned __int8 *)(*(void *)(a1 + 32) + 8)];
  [v4 setAssistantIdentifier:*(void *)(*(void *)(a1 + 32) + 56)];
  [v4 setIdsIdentifier:*(void *)(*(void *)(a1 + 32) + 16)];
  [v4 setIdsDeviceUniqueIdentifier:*(void *)(*(void *)(a1 + 32) + 48)];
  [v4 setMediaSystemIdentifier:*(void *)(*(void *)(a1 + 32) + 96)];
  [v4 setRapportEffectiveIdentifier:*(void *)(*(void *)(a1 + 32) + 80)];
  [v4 setHomeKitAccessoryIdentifier:*(void *)(*(void *)(a1 + 32) + 88)];
  [v4 setRoomName:*(void *)(*(void *)(a1 + 32) + 104)];
  [v4 setUserInterfaceIdiom:*(void *)(*(void *)(a1 + 32) + 120)];
  [v4 setAceVersion:*(void *)(*(void *)(a1 + 32) + 128)];
  [v4 setName:*(void *)(*(void *)(a1 + 32) + 40)];
  [v4 setProductType:*(void *)(*(void *)(a1 + 32) + 24)];
  [v4 setBuildVersion:*(void *)(*(void *)(a1 + 32) + 32)];
  if ([*(id *)(*(void *)(a1 + 32) + 72) count])
  {
    id v3 = [*(id *)(*(void *)(a1 + 32) + 72) firstObject];
    [v4 setMediaRouteIdentifier:v3];
  }
  [v4 setAssistantIdentifier:*(void *)(*(void *)(a1 + 32) + 56)];
}

void sub_10035E554(uint64_t a1)
{
}

void sub_10035E65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10035E674(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10035E684(uint64_t a1)
{
}

uint64_t sub_10035E68C(uint64_t a1)
{
  id v2 = [(id)qword_100586478 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;
  return _objc_release_x1(v2, v4);
}

void sub_10035E72C(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("ADPeerInfo", v1);

  uint64_t v3 = (void *)qword_100586480;
  qword_100586480 = (uint64_t)v2;
}

void sub_10035F604(void *a1, void *a2)
{
  uint64_t v3 = a1[10];
  id v4 = a2;
  [v4 setHostTime:v3];
  [v4 setType:a1[11]];
  [v4 setPayloadBeginAudioSessionRequest:a1[4]];
  [v4 setPayloadBeginAudioSessionResponse:a1[5]];
  [v4 setPayloadKeepAudioSessionAliveRequest:a1[6]];
  [v4 setPayloadKeepAudioSessionAliveResponse:a1[7]];
  [v4 setPayloadEndAudioSessionRequest:a1[8]];
  [v4 setPayloadEndAudioSessionResponse:a1[9]];
}

void sub_100360500(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(v1 + 24);
  uint64_t v3 = AFSiriLogContextDaemon;
  if (v2)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      v50 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Local alarm snapshot is available, use it for alarm dismissal.", buf, 0xCu);
      uint64_t v1 = *(void *)(a1 + 32);
      dispatch_queue_t v2 = *(void **)(v1 + 24);
    }
    uint64_t v5 = *(void **)(v1 + 80);
    id v6 = v2;
    id v7 = v5;
    uint64_t v34 = 0;
    unsigned int v35 = &v34;
    uint64_t v36 = 0x2020000000;
    uint64_t v37 = 0;
    [v6 notifiedFiringAlarmIDs];
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    id v9 = [v8 countByEnumeratingWithState:&v30 objects:buf count:16];
    if (v9)
    {
      uint64_t v11 = *(void *)v31;
      *(void *)&long long v10 = 136315394;
      long long v29 = v10;
      do
      {
        __int16 v12 = 0;
        do
        {
          if (*(void *)v31 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v30 + 1) + 8 * (void)v12);
          uint64_t v14 = objc_msgSend(v6, "alarmsByID", v29, (void)v30);
          uint64_t v15 = [v14 objectForKey:v13];
          unsigned __int8 v16 = [v15 type];

          int v17 = AFSiriLogContextDaemon;
          if (v16)
          {
            if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)uint64_t v44 = v29;
              *(void *)&void v44[4] = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke_2";
              *(_WORD *)&v44[12] = 2112;
              *(void *)&v44[14] = v13;
              _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "%s Not dismissing media alarm: %@", v44, 0x16u);
            }
          }
          else
          {
            if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)uint64_t v44 = v29;
              *(void *)&void v44[4] = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
              *(_WORD *)&v44[12] = 2112;
              *(void *)&v44[14] = v13;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s Dismissing firing alarm %@...", v44, 0x16u);
            }
            int v18 = [v13 UUIDString];
            id v19 = [v7 dismissAlarmWithIdentifier:v18];

            ++v35[3];
          }
          __int16 v12 = (char *)v12 + 1;
        }
        while (v9 != v12);
        id v9 = [v8 countByEnumeratingWithState:&v30 objects:buf count:16];
      }
      while (v9);
    }

    __int16 v20 = [v6 alarmsByID];
    *(void *)uint64_t v44 = _NSConcreteStackBlock;
    *(void *)&v44[8] = 3221225472;
    *(void *)&v44[16] = sub_100361060;
    uint64_t v45 = &unk_10050E050;
    id v21 = v8;
    id v46 = v21;
    id v22 = v7;
    id v47 = v22;
    __int16 v48 = &v34;
    [v20 enumerateKeysAndObjectsUsingBlock:v44];

    unint64_t v23 = v35[3];
    if (v23 < 2)
    {
      __int16 v24 = AFSiriLogContextDaemon;
      BOOL v26 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
      if (v23 == 1)
      {
        if (v26)
        {
          *(_DWORD *)id v38 = 136315650;
          uint64_t v39 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
          __int16 v40 = 2112;
          id v41 = v22;
          __int16 v42 = 2048;
          uint64_t v43 = 1;
          uint64_t v25 = "%s Asked %@ to dismiss %tu firing alarm.";
          goto LABEL_25;
        }
      }
      else if (v26)
      {
        *(_DWORD *)id v38 = 136315138;
        uint64_t v39 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
        uint64_t v25 = "%s There is no firing alarms to dismiss.";
        long long v27 = v24;
        uint32_t v28 = 12;
        goto LABEL_28;
      }
    }
    else
    {
      __int16 v24 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)id v38 = 136315650;
        uint64_t v39 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
        __int16 v40 = 2112;
        id v41 = v22;
        __int16 v42 = 2048;
        uint64_t v43 = v23;
        uint64_t v25 = "%s Asked %@ to dismiss %tu firing alarms.";
LABEL_25:
        long long v27 = v24;
        uint32_t v28 = 32;
LABEL_28:
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, v25, v38, v28);
      }
    }

    _Block_object_dispose(&v34, 8);
    return;
  }
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    v50 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Local alarm snapshot is not available, skip alarm dismissal.", buf, 0xCu);
  }
}

void sub_1003609F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100360A24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  dispatch_queue_t v2 = *(void **)(v1 + 32);
  uint64_t v3 = AFSiriLogContextDaemon;
  if (v2)
  {
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      id v46 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Local timer snapshot is available, use it for timer dismissal.", buf, 0xCu);
      uint64_t v1 = *(void *)(a1 + 32);
      dispatch_queue_t v2 = *(void **)(v1 + 32);
    }
    uint64_t v5 = *(void **)(v1 + 88);
    id v6 = v2;
    id v7 = v5;
    uint64_t v30 = 0;
    long long v31 = &v30;
    uint64_t v32 = 0x2020000000;
    uint64_t v33 = 0;
    uint64_t v25 = v6;
    [v6 notifiedFiringTimerIDs];
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    id v9 = [v8 countByEnumeratingWithState:&v26 objects:buf count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v27;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(v8);
          }
          __int16 v12 = *(void **)(*((void *)&v26 + 1) + 8 * i);
          uint64_t v13 = AFSiriLogContextDaemon;
          if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)__int16 v40 = 136315394;
            *(void *)&v40[4] = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke_2";
            *(_WORD *)&v40[12] = 2112;
            *(void *)&v40[14] = v12;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%s Dismissing firing timer %@...", v40, 0x16u);
          }
          uint64_t v14 = [v12 UUIDString];
          id v15 = [v7 dismissTimerWithIdentifier:v14];

          ++v31[3];
        }
        id v9 = [v8 countByEnumeratingWithState:&v26 objects:buf count:16];
      }
      while (v9);
    }

    unsigned __int8 v16 = [v25 timersByID];
    *(void *)__int16 v40 = _NSConcreteStackBlock;
    *(void *)&v40[8] = 3221225472;
    *(void *)&v40[16] = sub_100360EC4;
    id v41 = &unk_10050E078;
    id v17 = v8;
    id v42 = v17;
    id v18 = v7;
    id v43 = v18;
    uint64_t v44 = &v30;
    [v16 enumerateKeysAndObjectsUsingBlock:v40];

    unint64_t v19 = v31[3];
    if (v19 < 2)
    {
      __int16 v20 = AFSiriLogContextDaemon;
      BOOL v22 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO);
      if (v19 == 1)
      {
        if (v22)
        {
          *(_DWORD *)uint64_t v34 = 136315650;
          unsigned int v35 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
          __int16 v36 = 2112;
          id v37 = v18;
          __int16 v38 = 2048;
          uint64_t v39 = 1;
          id v21 = "%s Asked %@ to dismiss %tu firing timer.";
          goto LABEL_21;
        }
      }
      else if (v22)
      {
        *(_DWORD *)uint64_t v34 = 136315138;
        unsigned int v35 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
        id v21 = "%s There is no firing timers to dismiss.";
        unint64_t v23 = v20;
        uint32_t v24 = 12;
        goto LABEL_24;
      }
    }
    else
    {
      __int16 v20 = AFSiriLogContextDaemon;
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t v34 = 136315650;
        unsigned int v35 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
        __int16 v36 = 2112;
        id v37 = v18;
        __int16 v38 = 2048;
        uint64_t v39 = v19;
        id v21 = "%s Asked %@ to dismiss %tu firing timers.";
LABEL_21:
        unint64_t v23 = v20;
        uint32_t v24 = 32;
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, v21, v34, v24);
      }
    }

    _Block_object_dispose(&v30, 8);
    return;
  }
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315138;
    id v46 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
    _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Local timer snapshot is not available, skip timer dismissal.", buf, 0xCu);
  }
}

void sub_100360E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100360EC4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v6 isFiring]
    && ([*(id *)(a1 + 32) containsObject:v5] & 1) == 0)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v11 = 136315394;
      __int16 v12 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.", (uint8_t *)&v11, 0x16u);
      id v7 = AFSiriLogContextDaemon;
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v11 = 136315394;
      __int16 v12 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Dismissing firing timer %@... (fail-safe)", (uint8_t *)&v11, 0x16u);
    }
    id v8 = *(void **)(a1 + 40);
    id v9 = [v5 UUIDString];
    id v10 = [v8 dismissTimerWithIdentifier:v9];

    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
}

void sub_100361060(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v6 isFiring]
    && ([*(id *)(a1 + 32) containsObject:v5] & 1) == 0
    && ([v6 type] & 1) == 0)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v11 = 136315394;
      __int16 v12 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.", (uint8_t *)&v11, 0x16u);
      id v7 = AFSiriLogContextDaemon;
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v11 = 136315394;
      __int16 v12 = "-[ADClockService _dismissFiringItemsWithOptions:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Dismissing firing alarm %@... (fail-safe)", (uint8_t *)&v11, 0x16u);
    }
    id v8 = *(void **)(a1 + 40);
    id v9 = [v5 UUIDString];
    id v10 = [v8 dismissAlarmWithIdentifier:v9];

    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
}

void sub_1003614A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003614C8(uint64_t a1)
{
  dispatch_queue_t v2 = *(NSObject **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100361708;
  v3[3] = &unk_10050E000;
  objc_copyWeak(&v7, (id *)(a1 + 64));
  id v4 = *(id *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  dispatch_async(v2, v3);

  objc_destroyWeak(&v7);
}

void sub_1003615A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315650;
    __int16 v13 = "-[ADClockService _removeTimer:completion:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed to remove timer %@ due to error %@.", buf, 0x20u);
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1003616F0;
  v9[3] = &unk_10050E188;
  id v5 = *(NSObject **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  id v10 = v3;
  id v11 = v6;
  id v7 = v3;
  dispatch_async(v5, v9);
}

uint64_t sub_1003616F0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_100361708(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1003617C4;
  void v4[3] = &unk_10050DFD8;
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [WeakRetained _fetchTimerWithID:v3 completion:v4];
}

void sub_1003617C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      int v15 = 136315650;
      __int16 v16 = "-[ADClockService _removeTimer:completion:]_block_invoke_3";
      __int16 v17 = 2112;
      uint64_t v18 = v13;
      __int16 v19 = 2112;
      id v20 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Failed to remove timer %@ because it still exists %@ after removal.", (uint8_t *)&v15, 0x20u);
    }
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = +[AFError errorWithCode:2119];
    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v9);
  }
  else
  {
    id v10 = AFSiriLogContextDaemon;
    if (v6)
    {
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v15 = 136315650;
        __int16 v16 = "-[ADClockService _removeTimer:completion:]_block_invoke";
        __int16 v17 = 2112;
        uint64_t v18 = v14;
        __int16 v19 = 2112;
        id v20 = v6;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s Failed to validate the removed timer %@ due to error %@.", (uint8_t *)&v15, 0x20u);
      }
      id v11 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    }
    else
    {
      if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v15 = 136315394;
        __int16 v16 = "-[ADClockService _removeTimer:completion:]_block_invoke";
        __int16 v17 = 2112;
        uint64_t v18 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%s removedTimer = %@", (uint8_t *)&v15, 0x16u);
      }
      id v11 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    }
    v11();
  }
}

void sub_100361B3C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v15 = 136315394;
      __int16 v16 = "-[ADClockService _removeTimerWithID:completion:]_block_invoke";
      __int16 v17 = 2112;
      id v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Found timer to remove %@.", (uint8_t *)&v15, 0x16u);
    }
    [*(id *)(a1 + 32) _removeTimer:v5 completion:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v8 = AFSiriLogContextDaemon;
    BOOL v9 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
    if (v6)
    {
      if (v9)
      {
        uint64_t v13 = *(void **)(a1 + 40);
        int v15 = 136315650;
        __int16 v16 = "-[ADClockService _removeTimerWithID:completion:]_block_invoke";
        __int16 v17 = 2112;
        id v18 = v13;
        __int16 v19 = 2112;
        id v20 = v6;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s Failed to find the timer to remove with ID %@ due to error %@.", (uint8_t *)&v15, 0x20u);
      }
      uint64_t v10 = *(void *)(a1 + 48);
      if (v10) {
        (*(void (**)(uint64_t, void, id))(v10 + 16))(v10, 0, v6);
      }
    }
    else
    {
      if (v9)
      {
        uint64_t v14 = *(void **)(a1 + 40);
        int v15 = 136315394;
        __int16 v16 = "-[ADClockService _removeTimerWithID:completion:]_block_invoke";
        __int16 v17 = 2112;
        id v18 = v14;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%s Unable to find the timer to remove with ID %@.", (uint8_t *)&v15, 0x16u);
      }
      uint64_t v11 = *(void *)(a1 + 48);
      if (v11)
      {
        uint64_t v12 = +[AFError errorWithCode:2118];
        (*(void (**)(uint64_t, void, void *))(v11 + 16))(v11, 0, v12);
      }
    }
  }
}

id sub_100361E14(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeTimerWithID:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_1003620C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003620E4(uint64_t a1)
{
  dispatch_queue_t v2 = *(NSObject **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100362324;
  v3[3] = &unk_10050E000;
  objc_copyWeak(&v7, (id *)(a1 + 64));
  id v4 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  dispatch_async(v2, v3);

  objc_destroyWeak(&v7);
}

void sub_1003621BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315650;
    uint64_t v13 = "-[ADClockService _updateTimer:completion:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed to update timer %@ due to error %@.", buf, 0x20u);
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_10036230C;
  v9[3] = &unk_10050E188;
  id v5 = *(NSObject **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  id v10 = v3;
  id v11 = v6;
  id v7 = v3;
  dispatch_async(v5, v9);
}

uint64_t sub_10036230C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_100362324(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1003623E4;
  void v4[3] = &unk_10050DFD8;
  id v6 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 40);
  [WeakRetained _fetchTimerWithID:v3 completion:v4];
}

void sub_1003623E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v15 = 136315394;
      __int16 v16 = "-[ADClockService _updateTimer:completion:]_block_invoke_3";
      __int16 v17 = 2112;
      id v18 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s updatedTimer = %@", (uint8_t *)&v15, 0x16u);
    }
    uint64_t v8 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_9:
    v8();
    goto LABEL_10;
  }
  BOOL v9 = AFSiriLogContextDaemon;
  BOOL v10 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (v6)
  {
    if (v10)
    {
      uint64_t v13 = *(void **)(a1 + 32);
      int v15 = 136315650;
      __int16 v16 = "-[ADClockService _updateTimer:completion:]_block_invoke";
      __int16 v17 = 2112;
      id v18 = v13;
      __int16 v19 = 2112;
      id v20 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Failed to validate the updated timer %@ due to error %@.", (uint8_t *)&v15, 0x20u);
    }
    uint64_t v8 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    goto LABEL_9;
  }
  if (v10)
  {
    __int16 v14 = *(void **)(a1 + 32);
    int v15 = 136315394;
    __int16 v16 = "-[ADClockService _updateTimer:completion:]_block_invoke";
    __int16 v17 = 2112;
    id v18 = v14;
    _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Unable to find the updated timer %@.", (uint8_t *)&v15, 0x16u);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = +[AFError errorWithCode:2117];
  (*(void (**)(uint64_t, void, void *))(v11 + 16))(v11, 0, v12);

LABEL_10:
}

void sub_100362780(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5)
  {
    id v25 = v6;
    uint64_t v8 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v33 = "-[ADClockService _updateTimerWithID:changes:completion:]_block_invoke";
      __int16 v34 = 2112;
      id v35 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Found timer to update %@.", buf, 0x16u);
    }
    id v9 = [v5 mutableCopy];
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v24 = a1;
    id v10 = *(id *)(a1 + 32);
    id v11 = [v10 countByEnumeratingWithState:&v28 objects:v38 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v29;
      do
      {
        __int16 v14 = 0;
        do
        {
          if (*(void *)v29 != v13) {
            objc_enumerationMutation(v10);
          }
          int v15 = *(void **)(*((void *)&v28 + 1) + 8 * (void)v14);
          v26[0] = _NSConcreteStackBlock;
          v26[1] = 3221225472;
          void v26[2] = sub_100362B28;
          void v26[3] = &unk_10050DF60;
          id v27 = v9;
          [v15 enumerateKeysAndObjectsUsingBlock:v26];

          __int16 v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v28 objects:v38 count:16];
      }
      while (v12);
    }

    __int16 v16 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v33 = "-[ADClockService _updateTimerWithID:changes:completion:]_block_invoke";
      __int16 v34 = 2112;
      id v35 = v9;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "%s Prepared timer to update %@.", buf, 0x16u);
    }
    [*(id *)(v24 + 40) _updateTimer:v9 completion:*(void *)(v24 + 56)];

    id v7 = v25;
  }
  else
  {
    __int16 v17 = AFSiriLogContextDaemon;
    BOOL v18 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v18)
      {
        BOOL v22 = *(void **)(a1 + 48);
        *(_DWORD *)buf = 136315650;
        uint64_t v33 = "-[ADClockService _updateTimerWithID:changes:completion:]_block_invoke";
        __int16 v34 = 2112;
        id v35 = v22;
        __int16 v36 = 2112;
        id v37 = v7;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%s Failed to find the timer to update with ID %@ due to error %@.", buf, 0x20u);
      }
      uint64_t v19 = *(void *)(a1 + 56);
      if (v19) {
        (*(void (**)(uint64_t, void, void *))(v19 + 16))(v19, 0, v7);
      }
    }
    else
    {
      if (v18)
      {
        unint64_t v23 = *(void **)(a1 + 48);
        *(_DWORD *)buf = 136315394;
        uint64_t v33 = "-[ADClockService _updateTimerWithID:changes:completion:]_block_invoke";
        __int16 v34 = 2112;
        id v35 = v23;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%s Unable to find the timer to update with ID %@.", buf, 0x16u);
      }
      uint64_t v20 = *(void *)(a1 + 56);
      if (v20)
      {
        id v21 = +[AFError errorWithCode:2116];
        (*(void (**)(uint64_t, void, void *))(v20 + 16))(v20, 0, v21);
      }
    }
  }
}

void sub_100362B28(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 136315650;
    id v9 = "-[ADClockService _updateTimerWithID:changes:completion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v5;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s [*] %@: %@", (uint8_t *)&v8, 0x20u);
  }
  [*(id *)(a1 + 32) setValue:v6 forKey:v5];
}

id sub_100362D04(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateTimerWithID:*(void *)(a1 + 40) changes:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

void sub_100362FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100362FD4(uint64_t a1)
{
  dispatch_queue_t v2 = *(NSObject **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100363214;
  v3[3] = &unk_10050E000;
  objc_copyWeak(&v7, (id *)(a1 + 64));
  id v4 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  dispatch_async(v2, v3);

  objc_destroyWeak(&v7);
}

void sub_1003630AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315650;
    id v13 = "-[ADClockService _addTimer:completion:]_block_invoke";
    __int16 v14 = 2112;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s Failed to add timer %@ due to error %@.", buf, 0x20u);
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1003631FC;
  v9[3] = &unk_10050E188;
  id v5 = *(NSObject **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  id v10 = v3;
  id v11 = v6;
  id v7 = v3;
  dispatch_async(v5, v9);
}

uint64_t sub_1003631FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_100363214(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _OWORD v4[2] = sub_1003632D4;
  void v4[3] = &unk_10050DFD8;
  id v6 = *(id *)(a1 + 48);
  id v5 = *(id *)(a1 + 40);
  [WeakRetained _fetchTimerWithID:v3 completion:v4];
}

void sub_1003632D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v15 = 136315394;
      __int16 v16 = "-[ADClockService _addTimer:completion:]_block_invoke_3";
      __int16 v17 = 2112;
      id v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s addedTimer = %@", (uint8_t *)&v15, 0x16u);
    }
    uint64_t v8 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_9:
    v8();
    goto LABEL_10;
  }
  id v9 = AFSiriLogContextDaemon;
  BOOL v10 = os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR);
  if (v6)
  {
    if (v10)
    {
      id v13 = *(void **)(a1 + 32);
      int v15 = 136315650;
      __int16 v16 = "-[ADClockService _addTimer:completion:]_block_invoke";
      __int16 v17 = 2112;
      id v18 = v13;
      __int16 v19 = 2112;
      id v20 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Failed to validate the added timer %@ due to error %@.", (uint8_t *)&v15, 0x20u);
    }
    uint64_t v8 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    goto LABEL_9;
  }
  if (v10)
  {
    __int16 v14 = *(void **)(a1 + 32);
    int v15 = 136315394;
    __int16 v16 = "-[ADClockService _addTimer:completion:]_block_invoke";
    __int16 v17 = 2112;
    id v18 = v14;
    _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%s Unable to find the added timer %@.", (uint8_t *)&v15, 0x16u);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  __int16 v12 = +[AFError errorWithCode:2115];
  (*(void (**)(uint64_t, void, void *))(v11 + 16))(v11, 0, v12);

LABEL_10:
}

void sub_1003635A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = *(void *)v15;
    while (2)
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v7);
        }
        uint64_t v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        __int16 v12 = objc_msgSend(v11, "timerID", (void)v14);
        unsigned int v13 = [v12 isEqual:*(void *)(a1 + 32)];

        if (v13)
        {
          id v8 = v11;
          goto LABEL_11;
        }
      }
      id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100363870(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003639E8;
  v7[3] = &unk_10050E188;
  id v4 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

void sub_100363920(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_1003639D0;
  v7[3] = &unk_10050E188;
  id v4 = *(NSObject **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

uint64_t sub_1003639D0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

uint64_t sub_1003639E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_100363CD4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 timersByID];
  if ([v6 count])
  {
    id v7 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      id v8 = v7;
      int v9 = 136315650;
      BOOL v10 = "-[ADClockService _mergedClockTimerSnapshot]_block_invoke";
      __int16 v11 = 2048;
      id v12 = [v6 count];
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Adding %tu timers (remote %@)...", (uint8_t *)&v9, 0x20u);
    }
    [*(id *)(a1 + 32) addEntriesFromDictionary:v6];
  }
}

void sub_100363DEC(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = +[NSDate date];
  [v4 setDate:v3];

  [v4 setTimersByID:*(void *)(a1 + 32)];
}

void sub_100364138(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 alarmsByID];
  if ([v6 count])
  {
    id v7 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      id v8 = v7;
      int v9 = 136315650;
      BOOL v10 = "-[ADClockService _mergedClockAlarmSnapshot]_block_invoke";
      __int16 v11 = 2048;
      id v12 = [v6 count];
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Adding %tu alarms (remote %@)...", (uint8_t *)&v9, 0x20u);
    }
    [*(id *)(a1 + 32) addEntriesFromDictionary:v6];
  }
}

void sub_100364250(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = +[NSDate date];
  [v4 setDate:v3];

  [v4 setAlarmsByID:*(void *)(a1 + 32)];
}

void sub_100364360(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 timersByID];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100364428;
  v9[3] = &unk_10050DDD0;
  id v7 = *(id *)(a1 + 32);
  id v10 = v5;
  id v11 = v7;
  id v8 = v5;
  [v6 enumerateKeysAndObjectsUsingBlock:v9];
}

uint64_t sub_100364428(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1003644F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10036459C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 alarmsByID];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100364664;
  v9[3] = &unk_10050DD58;
  id v7 = *(id *)(a1 + 32);
  id v10 = v5;
  id v11 = v7;
  id v8 = v5;
  [v6 enumerateKeysAndObjectsUsingBlock:v9];
}

uint64_t sub_100364664(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_100364730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100364954(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performBlock:*(void *)(a1 + 40)];
}

void sub_100364A10(void *a1)
{
  dispatch_queue_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = a1[6];
    uint64_t v4 = a1[4];
    int v7 = 136315650;
    id v8 = "-[ADClockService requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke";
    __int16 v9 = 2048;
    uint64_t v10 = v3;
    __int16 v11 = 2112;
    uint64_t v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s origin = %ld, client = %@", (uint8_t *)&v7, 0x20u);
  }
  if (a1[6] == 5)
  {
    uint64_t v5 = a1[5];
    id v6 = *(void **)(v5 + 16);
    *(void *)(v5 + 16) = 0;
  }
}

id sub_100364BE8(uint64_t a1)
{
  dispatch_queue_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 136315650;
    uint64_t v32 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    __int16 v33 = 2048;
    uint64_t v34 = v3;
    __int16 v35 = 2112;
    uint64_t v36 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s origin = %ld, client = %@", buf, 0x20u);
  }
  if (*(void *)(a1 + 56) == 5)
  {
    dispatch_group_t v5 = dispatch_group_create();
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v5;

    id v8 = *(id *)(*(void *)(a1 + 40) + 16);
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void **)(v9 + 56);
    *(void *)(v9 + 56) = 0;

    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void **)(v11 + 64);
    *(void *)(v11 + 64) = 0;

    dispatch_group_enter(v8);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100364EB0;
    void v29[3] = &unk_10050DC90;
    __int16 v13 = *(void **)(a1 + 48);
    void v29[4] = *(void *)(a1 + 40);
    id v14 = v8;
    long long v30 = v14;
    [v13 getLocalContextWithPrivacyClass:10 completion:v29];
    dispatch_group_enter(v14);
    uint64_t v15 = *(void *)(a1 + 40);
    long long v16 = *(void **)(v15 + 48);
    *(void *)(v15 + 48) = 0;

    long long v17 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v32 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%s Fetching remote timer snapshots...", buf, 0xCu);
    }
    uint64_t v18 = *(void *)(a1 + 40);
    __int16 v19 = *(void **)(v18 + 72);
    unint64_t v23 = _NSConcreteStackBlock;
    uint64_t v24 = 3221225472;
    id v25 = sub_100365094;
    long long v26 = &unk_10050DCE0;
    uint64_t v27 = v18;
    long long v28 = v14;
    id v20 = v14;
    [v19 getSnapshotsByDeviceIdentifierWithCompletion:&v23];
  }
  id v21 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315138;
    uint64_t v32 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "%s Dismissing firing alarms and timers...", buf, 0xCu);
  }
  return objc_msgSend(*(id *)(a1 + 40), "_dismissFiringItemsWithOptions:", 3, v23, v24, v25, v26, v27);
}

void sub_100364EB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 alarmSnapshot];
  dispatch_group_t v5 = [v3 timerSnapshot];

  uint64_t v6 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    long long v16 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    __int16 v17 = 2112;
    uint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Fetched local alarm snapshot %@.", buf, 0x16u);
    uint64_t v6 = AFSiriLogContextDaemon;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    long long v16 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    __int16 v17 = 2112;
    uint64_t v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s Fetched local timer snapshot %@.", buf, 0x16u);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(NSObject **)(v7 + 8);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_1003652BC;
  v11[3] = &unk_10050DC68;
  void v11[4] = v7;
  id v12 = v4;
  id v13 = v5;
  id v14 = *(id *)(a1 + 40);
  id v9 = v5;
  id v10 = v4;
  dispatch_async(v8, v11);
}

void sub_100365094(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 136315394;
    id v12 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Fetched remote timer snapshots %@.", buf, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(NSObject **)(v5 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003651E0;
  block[3] = &unk_10050DCB8;
  void block[4] = v5;
  id v9 = v3;
  id v10 = *(id *)(a1 + 40);
  id v7 = v3;
  dispatch_async(v6, block);
}

void sub_1003651E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 48);
  *(void *)(v3 + 48) = v2;

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 64);
  *(void *)(v5 + 64) = 0;

  id v7 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v8 = 136315138;
    id v9 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Done fetching remote timer snapshots.", (uint8_t *)&v8, 0xCu);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1003652BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 56);
  *(void *)(v5 + 56) = 0;

  id v7 = [*(id *)(a1 + 48) copy];
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 32);
  *(void *)(v8 + 32) = v7;

  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void **)(v10 + 64);
  *(void *)(v10 + 64) = 0;

  id v12 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v13 = 136315138;
    id v14 = "-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%s Done fetching local alarm and timer snapshots.", (uint8_t *)&v13, 0xCu);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1003654E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _mergedClockAlarmSnapshot];
  uint64_t v3 = [*(id *)(a1 + 32) _mergedClockTimerSnapshot];
  uint64_t v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    uint64_t v6 = "-[ADClockService getSnapshotsWithCompletion:]_block_invoke";
    __int16 v7 = 2112;
    uint64_t v8 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s mergedClockAlarmSnapshot = %@.", (uint8_t *)&v5, 0x16u);
    uint64_t v4 = AFSiriLogContextDaemon;
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315394;
    uint64_t v6 = "-[ADClockService getSnapshotsWithCompletion:]_block_invoke";
    __int16 v7 = 2112;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s mergedClockTimerSnapshot = %@.", (uint8_t *)&v5, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100365770(uint64_t a1)
{
  uint64_t v24 = 0;
  id v25 = &v24;
  uint64_t v26 = 0x2020000000;
  BOOL v27 = 0;
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) notifiedFiringAlarmIDs];
  BOOL v3 = [v2 count] != 0;

  BOOL v27 = v3;
  uint64_t v4 = v25;
  if (!*((unsigned char *)v25 + 24))
  {
    int v5 = [*(id *)(*(void *)(a1 + 32) + 24) alarmsByID];
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    void v23[2] = sub_100365C38;
    v23[3] = &unk_10050DB78;
    void v23[4] = &v24;
    [v5 enumerateKeysAndObjectsUsingBlock:v23];

    uint64_t v4 = v25;
  }
  uint64_t v6 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v7 = *((unsigned __int8 *)v4 + 24);
    *(_DWORD *)buf = 136315394;
    *(void *)&uint8_t buf[4] = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke";
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s hasFiringAlarms = %d (local)", buf, 0x12u);
    uint64_t v4 = v25;
  }
  if (!*((unsigned char *)v4 + 24))
  {
    uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 40);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_100365D28;
    v22[3] = &unk_10050DBC8;
    v22[4] = &v24;
    [v8 enumerateKeysAndObjectsUsingBlock:v22];
    id v9 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v10 = *((unsigned __int8 *)v25 + 24);
      *(_DWORD *)buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke";
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s hasFiringAlarms = %d (remote)", buf, 0x12u);
    }
  }
  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000;
  BOOL v33 = 0;
  uint64_t v11 = [*(id *)(*(void *)(a1 + 32) + 32) notifiedFiringTimerIDs];
  BOOL v12 = [v11 count] != 0;

  BOOL v33 = v12;
  uint64_t v13 = *(void *)&buf[8];
  if (!*(unsigned char *)(*(void *)&buf[8] + 24))
  {
    id v14 = [*(id *)(*(void *)(a1 + 32) + 32) timersByID];
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100365E08;
    v21[3] = &unk_10050DBF0;
    void v21[4] = buf;
    [v14 enumerateKeysAndObjectsUsingBlock:v21];

    uint64_t v13 = *(void *)&buf[8];
  }
  uint64_t v15 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v16 = *(unsigned __int8 *)(v13 + 24);
    *(_DWORD *)long long v28 = 136315394;
    long long v29 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke";
    __int16 v30 = 1024;
    int v31 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s hasFiringTimers = %d (local)", v28, 0x12u);
    uint64_t v13 = *(void *)&buf[8];
  }
  if (!*(unsigned char *)(v13 + 24))
  {
    __int16 v17 = *(void **)(*(void *)(a1 + 32) + 48);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100365EF8;
    v20[3] = &unk_10050DC40;
    void v20[4] = buf;
    [v17 enumerateKeysAndObjectsUsingBlock:v20];
    uint64_t v18 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      int v19 = *(unsigned __int8 *)(*(void *)&buf[8] + 24);
      *(_DWORD *)long long v28 = 136315394;
      long long v29 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke";
      __int16 v30 = 1024;
      int v31 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "%s hasFiringTimers = %d (remote)", v28, 0x12u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  _Block_object_dispose(buf, 8);
  _Block_object_dispose(&v24, 8);
}

void sub_100365C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_100365C38(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  if ([v6 isFiring])
  {
    int v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136315394;
      id v9 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2";
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.", (uint8_t *)&v8, 0x16u);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100365D28(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  int v8 = [a3 alarmsByID];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_1003660D8;
  v11[3] = &unk_10050DBA0;
  uint64_t v9 = *(void *)(a1 + 32);
  id v12 = v7;
  uint64_t v13 = v9;
  id v10 = v7;
  [v8 enumerateKeysAndObjectsUsingBlock:v11];

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    *a4 = 1;
  }
}

void sub_100365E08(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  if ([v6 isFiring])
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136315394;
      uint64_t v9 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke";
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.", (uint8_t *)&v8, 0x16u);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100365EF8(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  int v8 = [a3 timersByID];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100365FD8;
  v11[3] = &unk_10050DC18;
  uint64_t v9 = *(void *)(a1 + 32);
  id v12 = v7;
  uint64_t v13 = v9;
  id v10 = v7;
  [v8 enumerateKeysAndObjectsUsingBlock:v11];

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    *a4 = 1;
  }
}

void sub_100365FD8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  if ([v6 isFiring])
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 136315650;
      id v10 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2";
      __int16 v11 = 2112;
      id v12 = v6;
      __int16 v13 = 2112;
      uint64_t v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Found firing timer %@ from device %@.", (uint8_t *)&v9, 0x20u);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_1003660D8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  if ([v6 isFiring])
  {
    id v7 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 136315650;
      id v10 = "-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2";
      __int16 v11 = 2112;
      id v12 = v6;
      __int16 v13 = 2112;
      uint64_t v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Found firing alarm %@ from device %@.", (uint8_t *)&v9, 0x20u);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100366468(id a1)
{
  uint64_t v1 = objc_alloc_init(ADClockService);
  uint64_t v2 = qword_100586498;
  qword_100586498 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_100366990(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  [v4 setDataType:v3];
  [v4 setGeneration:a1[5]];
  [v4 setLimit:a1[6]];
}

id sub_100366EE0(uint64_t a1)
{
  v5[0] = @"hour";
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  v5[1] = @"storageSize";
  v6[0] = v2;
  v6[1] = *(void *)(a1 + 32);
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];

  return v3;
}

id sub_100367048(uint64_t a1)
{
  v5[0] = @"hour";
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  v5[1] = @"storageSize";
  v6[0] = v2;
  v6[1] = *(void *)(a1 + 32);
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];

  return v3;
}

id sub_100367210(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100367E9C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100367EBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100367ECC(uint64_t a1)
{
}

void sub_100367ED4(uint64_t a1, uint64_t a2)
{
  if (a2 == -1)
  {
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315138;
      uint64_t v8 = "-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke";
      id v4 = "%s observer callback is dropped before invocation";
      goto LABEL_8;
    }
  }
  else if (a2 == -2)
  {
    uint64_t v3 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136315138;
      uint64_t v8 = "-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke";
      id v4 = "%s timed out";
LABEL_8:
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, v4, (uint8_t *)&v7, 0xCu);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 32) + 48));
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) cancel];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = 0;
}

id sub_10036800C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeWithSignal:-2];
}

void sub_100368018(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315138;
    BOOL v22 = "-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke_2";
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s completion called", buf, 0xCu);
  }
  if (*((void *)a1[4] + 8)) {
    id v5 = [objc_alloc((Class)NSSet) initWithArray:*((void *)a1[4] + 8)];
  }
  else {
    id v5 = objc_alloc_init((Class)NSSet);
  }
  id v6 = v5;
  id v7 = [v5 mutableCopy];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v3;
  id v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        __int16 v13 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v14 = objc_msgSend(v13, "sectionID", (void)v16);
        if ([a1[4] _isAppRestrictedAndSiriRelated:v13])
        {
          [a1[5] addObject:v14];
          if ([v6 containsObject:v14]) {
            [v7 removeObject:v14];
          }
          else {
            [v7 addObject:v14];
          }
        }
        if ([v13 spokenNotificationSetting] == (id)2) {
          [a1[6] addObject:v14];
        }
      }
      id v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  objc_storeStrong((id *)a1[4] + 8, a1[5]);
  objc_storeStrong((id *)a1[4] + 9, a1[6]);
  if ([v7 count])
  {
    uint64_t v15 = +[NSNotificationCenter defaultCenter];
    [v15 postNotificationName:@"ADSharedDataDidChangeNotification" object:0];
  }
  objc_msgSend(a1[7], "invoke", (void)v16);
}

void sub_1003688FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_100368998;
  v7[3] = &unk_10050E160;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_100368998(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(unsigned char *)(*(void *)(a1 + 40) + 40) = 1;
    uint64_t v2 = *(void **)(a1 + 32);
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v8, "availableOnLockScreen", (void)v11))
        {
          uint64_t v9 = *(void **)(*(void *)(a1 + 40) + 32);
          id v10 = [v8 internalID];
          [v9 setObject:v8 forKey:v10];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 40) + 16));
}

id sub_100368C20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 80);
  *(void *)(v2 + 80) = 0;

  [*(id *)(a1 + 32) _setUpBBObserver];
  id v4 = *(void **)(a1 + 32);
  return [v4 _fetchInitialState];
}

void sub_100368D8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 56))
  {
    uint64_t v2 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v9 = "-[ADNotificationManager observer:updateSectionInfo:]_block_invoke";
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s Batched update pending", buf, 0xCu);
    }
  }
  else
  {
    *(unsigned char *)(v1 + 56) = 1;
    dispatch_time_t v4 = dispatch_time(0, 5000000000);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(NSObject **)(v5 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100368EBC;
    block[3] = &unk_10050E138;
    void block[4] = v5;
    dispatch_after(v4, v6, block);
  }
}

id sub_100368EBC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _getRestrictedAppsFromBulletinBoard];
}

void sub_10036906C(uint64_t a1)
{
  uint64_t v2 = +[AFBulletin internalIDForBBBulletinID:*(void *)(a1 + 32)];
  id v3 = [*(id *)(*(void *)(a1 + 40) + 24) bulletinForInternalID:v2];
  if (v3)
  {
    dispatch_time_t v4 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 136315394;
      uint64_t v9 = "-[ADNotificationManager observer:purgeReferencesToBulletinID:]_block_invoke";
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%s removed %@", (uint8_t *)&v8, 0x16u);
    }
    [*(id *)(*(void *)(a1 + 40) + 24) removeBulletinWithInternalID:v2];
    [*(id *)(*(void *)(a1 + 40) + 32) removeObjectForKey:v2];
    [*(id *)(a1 + 40) _notifyDelegatesDidRemoveBulletin:v3];
    [*(id *)(a1 + 40) _bulletinsDidChange];
  }
  else
  {
    uint64_t v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v8 = 136315394;
      uint64_t v9 = "-[ADNotificationManager observer:purgeReferencesToBulletinID:]_block_invoke";
      __int16 v10 = 2112;
      uint64_t v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s Asked to remove a bulletin %@ that I don't already have.", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1003692B8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) bulletinID];
  id v3 = +[AFBulletin internalIDForBBBulletinID:v2];
  dispatch_time_t v4 = [*(id *)(*(void *)(a1 + 40) + 24) bulletinForInternalID:v3];
  uint64_t v5 = v4;
  if (v4) {
    [v4 wasRemovedFromFeed:*(void *)(a1 + 48)];
  }
  if ((*(unsigned char *)(a1 + 48) & 8) != 0)
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 40) + 32) objectForKey:v3];

    uint64_t v7 = AFSiriLogContextConnection;
    if (v6)
    {
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEBUG))
      {
        int v8 = *(void **)(a1 + 32);
        int v9 = 136315394;
        __int16 v10 = "-[ADNotificationManager observer:removeBulletin:forFeed:]_block_invoke";
        __int16 v11 = 2112;
        long long v12 = v8;
        _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%s %@ removed from lock screen feed", (uint8_t *)&v9, 0x16u);
      }
      [*(id *)(*(void *)(a1 + 40) + 32) removeObjectForKey:v3];
      [*(id *)(a1 + 40) _bulletinsDidChange];
    }
    else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      int v9 = 136315394;
      __int16 v10 = "-[ADNotificationManager observer:removeBulletin:forFeed:]_block_invoke";
      __int16 v11 = 2112;
      long long v12 = v2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s Asked to remove a bulletin from lock screen %@ that I don't already have.", (uint8_t *)&v9, 0x16u);
    }
  }
}

void sub_100369598(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _afbulletinForBBBulletin:*(void *)(a1 + 40) forFeed:*(void *)(a1 + 48)];
  id v3 = [v2 internalID];
  dispatch_time_t v4 = [*(id *)(*(void *)(a1 + 32) + 24) bulletinForInternalID:v3];

  if (v4)
  {
    [*(id *)(*(void *)(a1 + 32) + 24) setBulletin:v2 forInternalID:v3];
    uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 32) objectForKey:v3];

    if (v5) {
      [*(id *)(*(void *)(a1 + 32) + 32) setObject:v2 forKey:v3];
    }
    [*(id *)(a1 + 32) _bulletinsDidChange];
  }
  else
  {
    uint64_t v6 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void **)(a1 + 40);
      int v8 = v6;
      int v9 = [v7 bulletinID];
      int v10 = 136315394;
      __int16 v11 = "-[ADNotificationManager observer:modifyBulletin:forFeed:]_block_invoke";
      __int16 v12 = 2112;
      long long v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s Trying to modify a bulletin %@ that I don't already have.", (uint8_t *)&v10, 0x16u);
    }
  }
}

void sub_1003697C0(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isHighlight];
  id v3 = (void *)AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v7 = *(void **)(a1 + 32);
    int v8 = v3;
    int v9 = [v7 sound];
    int v10 = [*(id *)(a1 + 32) contentType];
    int v14 = 136316162;
    uint64_t v15 = "-[ADNotificationManager observer:addBulletin:forFeed:]_block_invoke";
    __int16 v16 = 2112;
    long long v17 = v7;
    __int16 v18 = 2112;
    long long v19 = v9;
    __int16 v20 = 2112;
    id v21 = v10;
    __int16 v22 = 1024;
    unsigned int v23 = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "%s %@ added with sound %@ and contentType %@ and isHighlight %d", (uint8_t *)&v14, 0x30u);
  }
  dispatch_time_t v4 = [*(id *)(a1 + 40) _afbulletinForBBBulletin:*(void *)(a1 + 32) forFeed:*(void *)(a1 + 48)];
  uint64_t v5 = [v4 internalID];
  if ((*(unsigned char *)(a1 + 48) & 8) != 0)
  {
    uint64_t v6 = (void *)AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_DEBUG))
    {
      __int16 v11 = *(void **)(a1 + 32);
      __int16 v12 = v6;
      long long v13 = [v11 publisherBulletinID];
      int v14 = 136315394;
      uint64_t v15 = "-[ADNotificationManager observer:addBulletin:forFeed:]_block_invoke";
      __int16 v16 = 2112;
      long long v17 = v13;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%s %@ added to lock screen feed", (uint8_t *)&v14, 0x16u);
    }
    [v4 setAvailableOnLockScreen:1];
    [*(id *)(*(void *)(a1 + 40) + 32) setObject:v4 forKey:v5];
  }
  if (v2) {
    [v4 setIsHighlight:1];
  }
  [*(id *)(*(void *)(a1 + 40) + 24) setBulletin:v4 forInternalID:v5];
  [*(id *)(a1 + 40) _notifyDelegatesDidAddBulletin:v4];
  [*(id *)(a1 + 40) _bulletinsDidChange];
}

uint64_t sub_100369AAC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(*(void *)(a1 + 32) + 72));
}

uint64_t sub_100369B70(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(*(void *)(a1 + 32) + 64));
}

uint64_t sub_10036A19C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10036A354(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) bulletinWithNotificationID:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _performActionWithIdentifier:*(void *)(a1 + 48) forAFBulletin:v2 completion:*(void *)(a1 + 56)];
}

void sub_10036A550(uint64_t a1)
{
  id v3 = +[AFBulletin internalIDForBBBulletinID:*(void *)(a1 + 32)];
  id v2 = [*(id *)(*(void *)(a1 + 40) + 24) bulletinForInternalID:v3];
  [*(id *)(a1 + 40) _performActionWithIdentifier:*(void *)(a1 + 48) forAFBulletin:v2 completion:*(void *)(a1 + 56)];
}

void sub_10036A678(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 actions];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_10036A79C(void *a1)
{
  uint64_t v2 = +[AFBulletin internalIDForBBBulletinID:a1[4]];
  id v3 = [*(id *)(a1[5] + 24) bulletinForInternalID:v2];
  if (!v3)
  {
    dispatch_time_t v4 = AFSiriLogContextDaemon;
    if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136315138;
      uint64_t v6 = "-[ADNotificationManager fetchBulletinWithID:completion:]_block_invoke";
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s No Bulletin found", (uint8_t *)&v5, 0xCu);
    }
  }
  (*(void (**)(void))(a1[6] + 16))();
}

void sub_10036A968(void *a1)
{
  if (a1[4])
  {
    id v2 = objc_alloc((Class)NSMutableArray);
    id v3 = [*(id *)(a1[5] + 24) allBulletins];
    id v4 = objc_msgSend(v2, "initWithCapacity:", objc_msgSend(v3, "count"));

    uint64_t v5 = a1[4];
    uint64_t v6 = *(void **)(a1[5] + 24);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_10036AAE4;
    void v12[3] = &unk_10050E1B0;
    id v13 = v4;
    id v7 = v4;
    [v6 enumerateBulletinsAfterBulletinWithNotificationID:v5 usingBlock:v12];
    (*(void (**)(void))(a1[6] + 16))();
  }
  else if (AFIsDeviceUnlocked())
  {
    uint64_t v8 = a1[6];
    id v11 = [*(id *)(a1[5] + 24) allBulletins];
    (*(void (**)(uint64_t, id))(v8 + 16))(v8, v11);
  }
  else
  {
    int v9 = (void *)a1[5];
    uint64_t v10 = a1[6];
    [v9 fetchBulletinsOnLockScreenWithCompletion:v10];
  }
}

id sub_10036AAE4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_10036AB98(uint64_t a1)
{
  [*(id *)(a1 + 32) _fetchFromDataSourceIfNecessary];
  uint64_t v2 = *(void *)(a1 + 32);
  id v4 = *(NSObject **)(v2 + 8);
  id v3 = *(NSObject **)(v2 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_10036AC44;
  v6[3] = &unk_10050E188;
  id v5 = *(id *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  dispatch_group_notify(v3, v4, v6);
}

void sub_10036AC44(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    uint64_t v6 = "-[ADNotificationManager fetchBulletinsOnLockScreenWithCompletion:]_block_invoke_2";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s ", (uint8_t *)&v5, 0xCu);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(*(void *)(a1 + 32) + 32) allValues];
  (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
}

void sub_10036ADC0(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextDaemon;
  if (os_log_type_enabled(AFSiriLogContextDaemon, OS_LOG_TYPE_INFO))
  {
    int v5 = 136315138;
    uint64_t v6 = "-[ADNotificationManager fetchAllBulletinsWithCompletion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s ", (uint8_t *)&v5, 0xCu);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(*(void *)(a1 + 32) + 24) allBulletins];
  (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
}

void sub_10036AF30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 104));
  id v3 = *(id *)(a1 + 40);

  if (WeakRetained != v3)
  {
    objc_storeWeak((id *)(*(void *)(a1 + 32) + 104), *(id *)(a1 + 40));
    *(unsigned char *)(*(void *)(a1 + 32) + 40) = 0;
    id v4 = *(void **)(a1 + 32);
    [v4 _fetchFromDataSourceIfNecessary];
  }
}

id sub_10036B210(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fetchInitialState];
}

void sub_10036B308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10036B320(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1005864B8)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10036B50C;
    void v6[4] = &unk_10050E350;
    void v6[5] = v6;
    long long v7 = off_10050E338;
    uint64_t v8 = 0;
    qword_1005864B8 = _sl_dlopen();
  }
  if (!qword_1005864B8)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v4 = +[NSString stringWithUTF8String:"void *BulletinBoardLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"ADNotificationManager.m", 50, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("BBObserver");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    int v5 = +[NSString stringWithUTF8String:"Class getBBObserverClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"ADNotificationManager.m", 51, @"Unable to find class %s", "BBObserver");

LABEL_10:
    __break(1u);
  }
  qword_1005864B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10036B50C()
{
  uint64_t result = _sl_dlopen();
  qword_1005864B8 = result;
  return result;
}

void sub_10036B5D4(id a1)
{
  id v1 = [[ADNotificationManager alloc] _init];
  uint64_t v2 = qword_1005864A8;
  qword_1005864A8 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_10036BB5C(uint64_t a1, xpc_object_t xdict)
{
  if (xdict) {
    xpc_dictionary_get_BOOL(xdict, AFExternalRequestReplyKeyResult);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v3 = *(_xpc_connection_s **)(a1 + 32);
  xpc_connection_cancel(v3);
}

void sub_10036BE88(uint64_t a1, xpc_object_t xdict)
{
  if (xdict) {
    xpc_dictionary_get_BOOL(xdict, AFExternalRequestReplyKeyResult);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v3 = *(_xpc_connection_s **)(a1 + 32);
  xpc_connection_cancel(v3);
}

id sub_10036C1D4(uint64_t a1, void *a2)
{
  return _[a2 setGenerationsByDataType:*(void *)(a1 + 32)];
}

void sub_10036C570(id a1)
{
  id v1 = [[ADUserNotificationServiceProvider alloc] initWithConnection:0 bundleIdentifier:0 notificationCategories:0];
  uint64_t v2 = qword_1005864C8;
  qword_1005864C8 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

uint64_t ADCreateRequestLinkInfo()
{
  return _ADCreateRequestLinkInfo();
}

uint64_t ADEmitRequestLinkEventMessage()
{
  return _ADEmitRequestLinkEventMessage();
}

uint64_t AFAnalyticsContextCreateForCrossDeviceCommandHandled()
{
  return _AFAnalyticsContextCreateForCrossDeviceCommandHandled();
}

uint64_t AFAnalyticsContextCreateWithCommand()
{
  return _AFAnalyticsContextCreateWithCommand();
}

uint64_t AFAnalyticsContextCreateWithError()
{
  return _AFAnalyticsContextCreateWithError();
}

uint64_t AFAnalyticsContextCreateWithRequestInfo()
{
  return _AFAnalyticsContextCreateWithRequestInfo();
}

uint64_t AFAnalyticsContextCreateWithSpeechRequestOptions()
{
  return _AFAnalyticsContextCreateWithSpeechRequestOptions();
}

uint64_t AFAnalyticsContextsMerge()
{
  return _AFAnalyticsContextsMerge();
}

uint64_t AFAnalyticsEventTypeGetLegacyName()
{
  return _AFAnalyticsEventTypeGetLegacyName();
}

uint64_t AFAnalyticsEventTypeGetName()
{
  return _AFAnalyticsEventTypeGetName();
}

uint64_t AFAnalyticsEventTypeIsValid()
{
  return _AFAnalyticsEventTypeIsValid();
}

uint64_t AFAnalyticsLogsDirectory()
{
  return _AFAnalyticsLogsDirectory();
}

uint64_t AFAnalyticsObservationServiceGetXPCInterface()
{
  return _AFAnalyticsObservationServiceGetXPCInterface();
}

uint64_t AFAnalyticsObserverGetXPCInterface()
{
  return _AFAnalyticsObserverGetXPCInterface();
}

uint64_t AFAnalyticsServiceDelegateGetXPCInterface()
{
  return _AFAnalyticsServiceDelegateGetXPCInterface();
}

uint64_t AFAnalyticsServiceGetXPCInterface()
{
  return _AFAnalyticsServiceGetXPCInterface();
}

uint64_t AFAppleAudioDeviceConnectedInLast24Hours()
{
  return _AFAppleAudioDeviceConnectedInLast24Hours();
}

uint64_t AFApplicationClientIdentifierForApp()
{
  return _AFApplicationClientIdentifierForApp();
}

uint64_t AFApplicationClientIdentifierForWatchApp()
{
  return _AFApplicationClientIdentifierForWatchApp();
}

uint64_t AFApplicationWorkspaceEnumerateInstalledUserVisibleApplications()
{
  return _AFApplicationWorkspaceEnumerateInstalledUserVisibleApplications();
}

uint64_t AFAssertionGetContexts()
{
  return _AFAssertionGetContexts();
}

uint64_t AFAssertionGetCurrentOrUpNextDateIntervalFromContexts()
{
  return _AFAssertionGetCurrentOrUpNextDateIntervalFromContexts();
}

uint64_t AFAssertionGetEffectiveDateAndExpirationDurationFromDateInterval()
{
  return _AFAssertionGetEffectiveDateAndExpirationDurationFromDateInterval();
}

uint64_t AFAssertionRelinquishmentOptionsGetNames()
{
  return _AFAssertionRelinquishmentOptionsGetNames();
}

uint64_t AFAssetsAvailabilityMatchesRequiredAssets()
{
  return _AFAssetsAvailabilityMatchesRequiredAssets();
}

uint64_t AFAudioPlaybackOptionsGetNames()
{
  return _AFAudioPlaybackOptionsGetNames();
}

uint64_t AFAudioSessionAssertionGetConnectionWorkloop()
{
  return _AFAudioSessionAssertionGetConnectionWorkloop();
}

uint64_t AFAudioSessionAssertionGetCurrentAcquisitionService()
{
  return _AFAudioSessionAssertionGetCurrentAcquisitionService();
}

uint64_t AFAudioSessionAssertionServiceXPCInterface()
{
  return _AFAudioSessionAssertionServiceXPCInterface();
}

uint64_t AFBTAnnounceCallsUnsupportedOnProductID()
{
  return _AFBTAnnounceCallsUnsupportedOnProductID();
}

uint64_t AFBTCarHeadunitsConnectedInLast24Hours()
{
  return _AFBTCarHeadunitsConnectedInLast24Hours();
}

uint64_t AFBTProductIDSupportsAnnounce()
{
  return _AFBTProductIDSupportsAnnounce();
}

uint64_t AFBTProductIDSupportsFauxIED()
{
  return _AFBTProductIDSupportsFauxIED();
}

uint64_t AFBTProductIDSupportsIED()
{
  return _AFBTProductIDSupportsIED();
}

uint64_t AFBackedUpPreferencesSynchronize()
{
  return _AFBackedUpPreferencesSynchronize();
}

uint64_t AFBluetoothHeadphoneListeningModeGetName()
{
  return _AFBluetoothHeadphoneListeningModeGetName();
}

uint64_t AFBluetoothWirelessSplitterSessionStateGetName()
{
  return _AFBluetoothWirelessSplitterSessionStateGetName();
}

uint64_t AFBuildVersion()
{
  return _AFBuildVersion();
}

uint64_t AFBundleServicesCachePath()
{
  return _AFBundleServicesCachePath();
}

uint64_t AFCallStateGetNames()
{
  return _AFCallStateGetNames();
}

uint64_t AFCanProxyTelephony()
{
  return _AFCanProxyTelephony();
}

uint64_t AFClearInternalLogFiles()
{
  return _AFClearInternalLogFiles();
}

uint64_t AFClientLiteClientObjectInterface()
{
  return _AFClientLiteClientObjectInterface();
}

uint64_t AFClientLiteRemoteObjectInterface()
{
  return _AFClientLiteRemoteObjectInterface();
}

uint64_t AFClientServiceDelegateXPCInterface()
{
  return _AFClientServiceDelegateXPCInterface();
}

uint64_t AFClientServiceXPCInterface()
{
  return _AFClientServiceXPCInterface();
}

uint64_t AFCommandOutcomeFromMediaRemoteStatuses()
{
  return _AFCommandOutcomeFromMediaRemoteStatuses();
}

uint64_t AFConnectionHasEntitlement()
{
  return _AFConnectionHasEntitlement();
}

uint64_t AFConnectionHasEntitlementCached()
{
  return _AFConnectionHasEntitlementCached();
}

uint64_t AFContextProviderNameForBundleId()
{
  return _AFContextProviderNameForBundleId();
}

uint64_t AFCoreAnalyticsEventCreateForDeviceContexts()
{
  return _AFCoreAnalyticsEventCreateForDeviceContexts();
}

uint64_t AFCurrentUserInterfaceIdiom()
{
  return _AFCurrentUserInterfaceIdiom();
}

uint64_t AFDeleteCoreDuetEventsInStream()
{
  return _AFDeleteCoreDuetEventsInStream();
}

uint64_t AFDescriptionOfBKSApplicationState()
{
  return _AFDescriptionOfBKSApplicationState();
}

uint64_t AFDeviceColor()
{
  return _AFDeviceColor();
}

uint64_t AFDeviceContextPrivacyClassGetStringDescription()
{
  return _AFDeviceContextPrivacyClassGetStringDescription();
}

uint64_t AFDeviceContextServiceDelegateGetXPCInterface()
{
  return _AFDeviceContextServiceDelegateGetXPCInterface();
}

uint64_t AFDeviceContextServiceGetXPCInterface()
{
  return _AFDeviceContextServiceGetXPCInterface();
}

uint64_t AFDeviceEnclosureColor()
{
  return _AFDeviceEnclosureColor();
}

uint64_t AFDeviceEnclosureRGBColor()
{
  return _AFDeviceEnclosureRGBColor();
}

uint64_t AFDeviceHasAddressBook()
{
  return _AFDeviceHasAddressBook();
}

uint64_t AFDeviceIsTinker()
{
  return _AFDeviceIsTinker();
}

uint64_t AFDeviceMessagingOptionsGetNames()
{
  return _AFDeviceMessagingOptionsGetNames();
}

uint64_t AFDeviceProximityCompare()
{
  return _AFDeviceProximityCompare();
}

uint64_t AFDeviceProximityGetName()
{
  return _AFDeviceProximityGetName();
}

uint64_t AFDeviceRingerSwitchStateGetName()
{
  return _AFDeviceRingerSwitchStateGetName();
}

uint64_t AFDeviceSetupIsActive()
{
  return _AFDeviceSetupIsActive();
}

uint64_t AFDeviceSupportsANE()
{
  return _AFDeviceSupportsANE();
}

uint64_t AFDeviceSupportsBargeIn()
{
  return _AFDeviceSupportsBargeIn();
}

uint64_t AFDeviceSupportsBobble()
{
  return _AFDeviceSupportsBobble();
}

uint64_t AFDeviceSupportsCarPlay()
{
  return _AFDeviceSupportsCarPlay();
}

uint64_t AFDeviceSupportsDisablingServerFallbackWhenMissingAsset()
{
  return _AFDeviceSupportsDisablingServerFallbackWhenMissingAsset();
}

uint64_t AFDeviceSupportsFileACrashRadar()
{
  return _AFDeviceSupportsFileACrashRadar();
}

uint64_t AFDeviceSupportsFullSiriUOD()
{
  return _AFDeviceSupportsFullSiriUOD();
}

uint64_t AFDeviceSupportsGM()
{
  return _AFDeviceSupportsGM();
}

uint64_t AFDeviceSupportsHybridUOD()
{
  return _AFDeviceSupportsHybridUOD();
}

uint64_t AFDeviceSupportsMedoc()
{
  return _AFDeviceSupportsMedoc();
}

uint64_t AFDeviceSupportsNavigation()
{
  return _AFDeviceSupportsNavigation();
}

uint64_t AFDeviceSupportsSAE()
{
  return _AFDeviceSupportsSAE();
}

uint64_t AFDeviceSupportsSiriMUX()
{
  return _AFDeviceSupportsSiriMUX();
}

uint64_t AFDeviceSupportsSiriUOD()
{
  return _AFDeviceSupportsSiriUOD();
}

uint64_t AFDeviceSupportsSpokenMessages()
{
  return _AFDeviceSupportsSpokenMessages();
}

uint64_t AFDeviceSupportsWiFiLPASMode()
{
  return _AFDeviceSupportsWiFiLPASMode();
}

uint64_t AFDiagnosticsSubmissionAllowed()
{
  return _AFDiagnosticsSubmissionAllowed();
}

uint64_t AFDictationRequiresRequestValidation()
{
  return _AFDictationRequiresRequestValidation();
}

uint64_t AFDictationRestricted()
{
  return _AFDictationRestricted();
}

uint64_t AFDictationServiceDelegateXPCInterface()
{
  return _AFDictationServiceDelegateXPCInterface();
}

uint64_t AFDispatchTimeGetFromDateAndOffset()
{
  return _AFDispatchTimeGetFromDateAndOffset();
}

uint64_t AFDoesProductTypeSupportMUX()
{
  return _AFDoesProductTypeSupportMUX();
}

uint64_t AFEffectiveSiriBundleForLocation()
{
  return _AFEffectiveSiriBundleForLocation();
}

uint64_t AFEffectiveSiriBundlePathForLocation()
{
  return _AFEffectiveSiriBundlePathForLocation();
}

uint64_t AFExternalNotificationRequestHandlerStateGetName()
{
  return _AFExternalNotificationRequestHandlerStateGetName();
}

uint64_t AFFetchDeviceCarryStatus()
{
  return _AFFetchDeviceCarryStatus();
}

uint64_t AFFetchFollowerStatusInStereoPair()
{
  return _AFFetchFollowerStatusInStereoPair();
}

uint64_t AFGetMachAbsoluteTimeFromTimeInterval()
{
  return _AFGetMachAbsoluteTimeFromTimeInterval();
}

uint64_t AFGetNowPlayingInfoDictionary()
{
  return _AFGetNowPlayingInfoDictionary();
}

uint64_t AFGetNowPlayingQueueState()
{
  return _AFGetNowPlayingQueueState();
}

uint64_t AFGetTimeSinceEpochInMilliseconds()
{
  return _AFGetTimeSinceEpochInMilliseconds();
}

uint64_t AFGetTimeSinceEpochRoundedToHourInMilliseconds()
{
  return _AFGetTimeSinceEpochRoundedToHourInMilliseconds();
}

uint64_t AFGradingOptInStateChangeWithHistoryEntry()
{
  return _AFGradingOptInStateChangeWithHistoryEntry();
}

uint64_t AFHasCellularData()
{
  return _AFHasCellularData();
}

uint64_t AFHasCellularTelephony()
{
  return _AFHasCellularTelephony();
}

uint64_t AFHasGMSCapabilityUnembargoed()
{
  return _AFHasGMSCapabilityUnembargoed();
}

uint64_t AFHasGPS()
{
  return _AFHasGPS();
}

uint64_t AFHasHapticEngine()
{
  return _AFHasHapticEngine();
}

uint64_t AFHasPerfPowerEntitlement()
{
  return _AFHasPerfPowerEntitlement();
}

uint64_t AFHasRingerSwitch()
{
  return _AFHasRingerSwitch();
}

uint64_t AFHasUnlockedSinceBoot()
{
  return _AFHasUnlockedSinceBoot();
}

uint64_t AFInstallCommonSignalHandlers()
{
  return _AFInstallCommonSignalHandlers();
}

uint64_t AFInternalConfigValueForKey()
{
  return _AFInternalConfigValueForKey();
}

uint64_t AFInternalPreferencesSynchronize()
{
  return _AFInternalPreferencesSynchronize();
}

uint64_t AFIsATV()
{
  return _AFIsATV();
}

uint64_t AFIsATVOnly()
{
  return _AFIsATVOnly();
}

uint64_t AFIsDeviceUnlocked()
{
  return _AFIsDeviceUnlocked();
}

uint64_t AFIsDictationLanguageInstalledForOfflineRecognition()
{
  return _AFIsDictationLanguageInstalledForOfflineRecognition();
}

uint64_t AFIsDictationRequestEligibleForOnDeviceDictation()
{
  return _AFIsDictationRequestEligibleForOnDeviceDictation();
}

uint64_t AFIsDictationRequestFromAppleClient()
{
  return _AFIsDictationRequestFromAppleClient();
}

uint64_t AFIsDictationRequestSpeechApiRequest()
{
  return _AFIsDictationRequestSpeechApiRequest();
}

uint64_t AFIsFileNotFoundError()
{
  return _AFIsFileNotFoundError();
}

uint64_t AFIsH1Headset()
{
  return _AFIsH1Headset();
}

uint64_t AFIsH2Headset()
{
  return _AFIsH2Headset();
}

uint64_t AFIsHorseman()
{
  return _AFIsHorseman();
}

uint64_t AFIsIOS()
{
  return _AFIsIOS();
}

uint64_t AFIsInternalInstall()
{
  return _AFIsInternalInstall();
}

uint64_t AFIsMac()
{
  return _AFIsMac();
}

uint64_t AFIsMorphunAssetAvailableFromUodStatus()
{
  return _AFIsMorphunAssetAvailableFromUodStatus();
}

uint64_t AFIsMultiUserCompanion()
{
  return _AFIsMultiUserCompanion();
}

uint64_t AFIsNLAssetAvailableFromUodStatus()
{
  return _AFIsNLAssetAvailableFromUodStatus();
}

uint64_t AFIsNano()
{
  return _AFIsNano();
}

uint64_t AFIsSearchDictationRequest()
{
  return _AFIsSearchDictationRequest();
}

uint64_t AFIsSpeechAssetAvailableFromUodStatus()
{
  return _AFIsSpeechAssetAvailableFromUodStatus();
}

uint64_t AFIsVision()
{
  return _AFIsVision();
}

uint64_t AFKeychainSetValueForAccountAndKey()
{
  return _AFKeychainSetValueForAccountAndKey();
}

uint64_t AFKeychainValueForAccountAndKey()
{
  return _AFKeychainValueForAccountAndKey();
}

uint64_t AFLibraryDirectoryWithSubPath()
{
  return _AFLibraryDirectoryWithSubPath();
}

uint64_t AFLocationStatusIsAllowed()
{
  return _AFLocationStatusIsAllowed();
}

uint64_t AFLocationStatusIsDenied()
{
  return _AFLocationStatusIsDenied();
}

uint64_t AFLogDirectory()
{
  return _AFLogDirectory();
}

uint64_t AFLogInitIfNeeded()
{
  return _AFLogInitIfNeeded();
}

uint64_t AFMachAbsoluteTimeAddTimeInterval()
{
  return _AFMachAbsoluteTimeAddTimeInterval();
}

uint64_t AFMachAbsoluteTimeGetMilliseconds()
{
  return _AFMachAbsoluteTimeGetMilliseconds();
}

uint64_t AFMachAbsoluteTimeGetNanoseconds()
{
  return _AFMachAbsoluteTimeGetNanoseconds();
}

uint64_t AFMachAbsoluteTimeGetTimeInterval()
{
  return _AFMachAbsoluteTimeGetTimeInterval();
}

uint64_t AFMapsNavigationStatusIsActive()
{
  return _AFMapsNavigationStatusIsActive();
}

uint64_t AFMediaPlaybackStateGetName()
{
  return _AFMediaPlaybackStateGetName();
}

uint64_t AFMediaRemoteSendCommandWithOptions()
{
  return _AFMediaRemoteSendCommandWithOptions();
}

uint64_t AFMessagesGetAceDomainObjectsFromContext()
{
  return _AFMessagesGetAceDomainObjectsFromContext();
}

uint64_t AFMessagesGetDomainObjectsFromContext()
{
  return _AFMessagesGetDomainObjectsFromContext();
}

uint64_t AFModelForDailyStatus()
{
  return _AFModelForDailyStatus();
}

uint64_t AFMontaraRestricted()
{
  return _AFMontaraRestricted();
}

uint64_t AFMyriadMonitorDecisionGetWaitTime()
{
  return _AFMyriadMonitorDecisionGetWaitTime();
}

uint64_t AFMyriadPreferencesChangedNotifyStatePublisher()
{
  return _AFMyriadPreferencesChangedNotifyStatePublisher();
}

uint64_t AFNavigationStateIsNavigating()
{
  return _AFNavigationStateIsNavigating();
}

uint64_t AFNonNilMutableCopyOfArray()
{
  return _AFNonNilMutableCopyOfArray();
}

uint64_t AFNormalizeMacAddress()
{
  return _AFNormalizeMacAddress();
}

uint64_t AFNotifyGetEffectiveNotification()
{
  return _AFNotifyGetEffectiveNotification();
}

uint64_t AFNotifyGetEffectiveNotificationName()
{
  return _AFNotifyGetEffectiveNotificationName();
}

uint64_t AFOfflineDictationCapable()
{
  return _AFOfflineDictationCapable();
}

uint64_t AFOfflineDictationLanguageForKeyboardLanguage()
{
  return _AFOfflineDictationLanguageForKeyboardLanguage();
}

uint64_t AFOfflineDictationStatusForLanguage()
{
  return _AFOfflineDictationStatusForLanguage();
}

uint64_t AFOfflineDictationStatusStringIsAutoPunctuationSupported()
{
  return _AFOfflineDictationStatusStringIsAutoPunctuationSupported();
}

uint64_t AFOfflineDictationStatusStringIsContinuousListeningSupported()
{
  return _AFOfflineDictationStatusStringIsContinuousListeningSupported();
}

uint64_t AFOfflineDictationStatusStringIsEmojiRecognitionSupported()
{
  return _AFOfflineDictationStatusStringIsEmojiRecognitionSupported();
}

uint64_t AFOfflineDictationStatusStringIsHighQualityModelSupported()
{
  return _AFOfflineDictationStatusStringIsHighQualityModelSupported();
}

uint64_t AFOfflineDictationStatusStringIsInstalled()
{
  return _AFOfflineDictationStatusStringIsInstalled();
}

uint64_t AFOfflineDictationStatusStringIsOnDeviceSearchSupported()
{
  return _AFOfflineDictationStatusStringIsOnDeviceSearchSupported();
}

uint64_t AFOfflineDictationStatusStringIsVoiceCommandsSupported()
{
  return _AFOfflineDictationStatusStringIsVoiceCommandsSupported();
}

uint64_t AFOpportuneSpeakingModelServiceInterface()
{
  return _AFOpportuneSpeakingModelServiceInterface();
}

uint64_t AFOpportuneSpeakingModelTypeGetDescription()
{
  return _AFOpportuneSpeakingModelTypeGetDescription();
}

uint64_t AFOutputVoiceLanguageForRecognitionLanguage()
{
  return _AFOutputVoiceLanguageForRecognitionLanguage();
}

uint64_t AFOverrideLanguageCode()
{
  return _AFOverrideLanguageCode();
}

uint64_t AFPairedDeviceIsVictory()
{
  return _AFPairedDeviceIsVictory();
}

uint64_t AFPauseCommandsInterruptAudio()
{
  return _AFPauseCommandsInterruptAudio();
}

uint64_t AFPeerContentTupleGetContentMapFromArray()
{
  return _AFPeerContentTupleGetContentMapFromArray();
}

uint64_t AFPeerInfoGetCompactDescription()
{
  return _AFPeerInfoGetCompactDescription();
}

uint64_t AFPeerInfoMerge()
{
  return _AFPeerInfoMerge();
}

uint64_t AFPendingSpeechRequestServiceInterface()
{
  return _AFPendingSpeechRequestServiceInterface();
}

uint64_t AFPerformDeviceVolumeAction()
{
  return _AFPerformDeviceVolumeAction();
}

uint64_t AFPreferencesAlwaysEyesFreeEnabled()
{
  return _AFPreferencesAlwaysEyesFreeEnabled();
}

uint64_t AFPreferencesBufferedSpeechCapturePacketInterval()
{
  return _AFPreferencesBufferedSpeechCapturePacketInterval();
}

uint64_t AFPreferencesLanguageIsSupported()
{
  return _AFPreferencesLanguageIsSupported();
}

uint64_t AFPreferencesShouldIgnoreInternalConfig()
{
  return _AFPreferencesShouldIgnoreInternalConfig();
}

uint64_t AFPreferencesSimulateImmediateSpeechCapture()
{
  return _AFPreferencesSimulateImmediateSpeechCapture();
}

uint64_t AFPreferencesStreamingDictationEnabled()
{
  return _AFPreferencesStreamingDictationEnabled();
}

uint64_t AFPreferencesSupportedLanguages()
{
  return _AFPreferencesSupportedLanguages();
}

uint64_t AFPreferencesSupportedLanguagesForRemote()
{
  return _AFPreferencesSupportedLanguagesForRemote();
}

uint64_t AFPreferencesSupportedMultiUserLanguages()
{
  return _AFPreferencesSupportedMultiUserLanguages();
}

uint64_t AFPreferencesTestAccessEnabled()
{
  return _AFPreferencesTestAccessEnabled();
}

uint64_t AFPreferencesTypeToSiriEnabled()
{
  return _AFPreferencesTypeToSiriEnabled();
}

uint64_t AFProcessIsRunningAsInstance()
{
  return _AFProcessIsRunningAsInstance();
}

uint64_t AFProductAndBuildVersion()
{
  return _AFProductAndBuildVersion();
}

uint64_t AFProductType()
{
  return _AFProductType();
}

uint64_t AFProductTypeForInstrumentation()
{
  return _AFProductTypeForInstrumentation();
}

uint64_t AFProductVersion()
{
  return _AFProductVersion();
}

uint64_t AFProviderServiceDelegateXPCInterface()
{
  return _AFProviderServiceDelegateXPCInterface();
}

uint64_t AFProviderServiceXPCInterface()
{
  return _AFProviderServiceXPCInterface();
}

uint64_t AFRecordCoreDuetContext()
{
  return _AFRecordCoreDuetContext();
}

uint64_t AFRecordCoreDuetEventWithStream()
{
  return _AFRecordCoreDuetEventWithStream();
}

uint64_t AFRecordRouteIsHearst()
{
  return _AFRecordRouteIsHearst();
}

uint64_t AFRegionInfo()
{
  return _AFRegionInfo();
}

uint64_t AFRequestCancellationReasonGetName()
{
  return _AFRequestCancellationReasonGetName();
}

uint64_t AFSAERequiredAssets()
{
  return _AFSAERequiredAssets();
}

uint64_t AFSearchQueriesDataSharingStatusGetName()
{
  return _AFSearchQueriesDataSharingStatusGetName();
}

uint64_t AFSecurityDecryptData()
{
  return _AFSecurityDecryptData();
}

uint64_t AFSecurityDigestData()
{
  return _AFSecurityDigestData();
}

uint64_t AFSecurityEncryptData()
{
  return _AFSecurityEncryptData();
}

uint64_t AFSecurityGenerateRandomData()
{
  return _AFSecurityGenerateRandomData();
}

uint64_t AFSecurityServiceGetXPCInterface()
{
  return _AFSecurityServiceGetXPCInterface();
}

uint64_t AFServicePluginsURL()
{
  return _AFServicePluginsURL();
}

uint64_t AFSetAudioSessionActiveOptionsGetNames()
{
  return _AFSetAudioSessionActiveOptionsGetNames();
}

uint64_t AFSetAudioSessionActiveReasonGetName()
{
  return _AFSetAudioSessionActiveReasonGetName();
}

uint64_t AFSetAudioSessionInactiveOptionsGetNames()
{
  return _AFSetAudioSessionInactiveOptionsGetNames();
}

uint64_t AFSettingsServiceDelegateXPCInterface()
{
  return _AFSettingsServiceDelegateXPCInterface();
}

uint64_t AFSettingsServiceXPCInterface()
{
  return _AFSettingsServiceXPCInterface();
}

uint64_t AFShouldOptOutDataSharingForMigrationFromBuildVersion()
{
  return _AFShouldOptOutDataSharingForMigrationFromBuildVersion();
}

uint64_t AFShouldRunAsrOnServerForUOD()
{
  return _AFShouldRunAsrOnServerForUOD();
}

uint64_t AFShouldUseLanguageDetector()
{
  return _AFShouldUseLanguageDetector();
}

uint64_t AFSiriActivationBluetoothDeviceTriggerless()
{
  return _AFSiriActivationBluetoothDeviceTriggerless();
}

uint64_t AFSiriActivationCreateContextFromXPCDictionary()
{
  return _AFSiriActivationCreateContextFromXPCDictionary();
}

uint64_t AFSiriActivationCreateXPCDictionaryFromResult()
{
  return _AFSiriActivationCreateXPCDictionaryFromResult();
}

uint64_t AFSiriActivationGetDarwinNotificationNameFromContext()
{
  return _AFSiriActivationGetDarwinNotificationNameFromContext();
}

uint64_t AFSiriActivationPerform()
{
  return _AFSiriActivationPerform();
}

uint64_t AFSiriActivationServiceGetPort()
{
  return _AFSiriActivationServiceGetPort();
}

uint64_t AFSiriActivationTriggerless()
{
  return _AFSiriActivationTriggerless();
}

uint64_t AFSiriAnnouncementPlatformGetIsValid()
{
  return _AFSiriAnnouncementPlatformGetIsValid();
}

uint64_t AFSiriAnnouncementPlatformGetIsValidAndSpecified()
{
  return _AFSiriAnnouncementPlatformGetIsValidAndSpecified();
}

uint64_t AFSiriAnnouncementPlatformGetName()
{
  return _AFSiriAnnouncementPlatformGetName();
}

uint64_t AFSiriAnnouncementSummaryDecisionGetIsValidAndSpecified()
{
  return _AFSiriAnnouncementSummaryDecisionGetIsValidAndSpecified();
}

uint64_t AFSiriCarPlayAnnounceEnablementTypeGetName()
{
  return _AFSiriCarPlayAnnounceEnablementTypeGetName();
}

uint64_t AFSiriDataSharingOptInStatusGetFromName()
{
  return _AFSiriDataSharingOptInStatusGetFromName();
}

uint64_t AFSiriDataSharingOptInStatusGetName()
{
  return _AFSiriDataSharingOptInStatusGetName();
}

uint64_t AFSiriDeactivationReasonGetIsValid()
{
  return _AFSiriDeactivationReasonGetIsValid();
}

uint64_t AFSiriDeactivationReasonGetIsValidAndSpecified()
{
  return _AFSiriDeactivationReasonGetIsValidAndSpecified();
}

uint64_t AFSiriDeactivationReasonGetName()
{
  return _AFSiriDeactivationReasonGetName();
}

uint64_t AFSiriUserNotificationAnnouncementSpeakingStateGetIsValidAndSpecified()
{
  return _AFSiriUserNotificationAnnouncementSpeakingStateGetIsValidAndSpecified();
}

uint64_t AFSiriUserNotificationAnnouncementSpeakingStateGetName()
{
  return _AFSiriUserNotificationAnnouncementSpeakingStateGetName();
}

uint64_t AFSiriUserNotificationAnnouncementTypeGetIsValid()
{
  return _AFSiriUserNotificationAnnouncementTypeGetIsValid();
}

uint64_t AFSiriUserNotificationAnnouncementTypeGetName()
{
  return _AFSiriUserNotificationAnnouncementTypeGetName();
}

uint64_t AFSleepStateGetName()
{
  return _AFSleepStateGetName();
}

uint64_t AFSpeechEventIsBluetooth()
{
  return _AFSpeechEventIsBluetooth();
}

uint64_t AFSpeechEventIsTVRemote()
{
  return _AFSpeechEventIsTVRemote();
}

uint64_t AFSpeechEventIsVoiceTrigger()
{
  return _AFSpeechEventIsVoiceTrigger();
}

uint64_t AFSpeechLogsDirectory()
{
  return _AFSpeechLogsDirectory();
}

uint64_t AFSpokenMessagesExecutionTimeout()
{
  return _AFSpokenMessagesExecutionTimeout();
}

uint64_t AFSupportsASROnDevice()
{
  return _AFSupportsASROnDevice();
}

uint64_t AFSupportsAirPlayEndpointRoute()
{
  return _AFSupportsAirPlayEndpointRoute();
}

uint64_t AFSupportsAudioSessionCoordination()
{
  return _AFSupportsAudioSessionCoordination();
}

uint64_t AFSupportsCallHangUp()
{
  return _AFSupportsCallHangUp();
}

uint64_t AFSupportsHALCapabilitiesDonation()
{
  return _AFSupportsHALCapabilitiesDonation();
}

uint64_t AFSupportsHALContextCollecting()
{
  return _AFSupportsHALContextCollecting();
}

uint64_t AFSupportsHALContextCollectorElection()
{
  return _AFSupportsHALContextCollectorElection();
}

uint64_t AFSupportsHALContextDonation()
{
  return _AFSupportsHALContextDonation();
}

uint64_t AFSupportsHALDeviceRouting()
{
  return _AFSupportsHALDeviceRouting();
}

uint64_t AFSupportsHALFlowRouting()
{
  return _AFSupportsHALFlowRouting();
}

uint64_t AFSupportsHALOnDemandRapportConnection()
{
  return _AFSupportsHALOnDemandRapportConnection();
}

uint64_t AFSupportsHALProximityScanning()
{
  return _AFSupportsHALProximityScanning();
}

uint64_t AFSupportsMultiUser()
{
  return _AFSupportsMultiUser();
}

uint64_t AFSupportsPairedDevice()
{
  return _AFSupportsPairedDevice();
}

uint64_t AFSupportsPlayThisOnThat()
{
  return _AFSupportsPlayThisOnThat();
}

uint64_t AFSupportsPlayThisOnThatPlayback()
{
  return _AFSupportsPlayThisOnThatPlayback();
}

uint64_t AFSupportsPlaybackToBluetoothDevice()
{
  return _AFSupportsPlaybackToBluetoothDevice();
}

uint64_t AFSupportsRecordFromBluetoothDevice()
{
  return _AFSupportsRecordFromBluetoothDevice();
}

uint64_t AFSupportsSCDAFramework()
{
  return _AFSupportsSCDAFramework();
}

uint64_t AFSupportsWirelessSplitter()
{
  return _AFSupportsWirelessSplitter();
}

uint64_t AFSystemGetBootTimeInTimeInterval()
{
  return _AFSystemGetBootTimeInTimeInterval();
}

uint64_t AFTurnIdentifierGetBytes()
{
  return _AFTurnIdentifierGetBytes();
}

uint64_t AFTurnIdentifierGetString()
{
  return _AFTurnIdentifierGetString();
}

uint64_t AFUODStatusSupportedFull()
{
  return _AFUODStatusSupportedFull();
}

uint64_t AFUODStatusSupportedHybrid()
{
  return _AFUODStatusSupportedHybrid();
}

uint64_t AFUODStatusSupportedSAE()
{
  return _AFUODStatusSupportedSAE();
}

uint64_t AFUserAssignedDeviceName()
{
  return _AFUserAssignedDeviceName();
}

uint64_t AFUserNotificationAnnouncementSpeakingStateServiceDelegateGetXPCInterface()
{
  return _AFUserNotificationAnnouncementSpeakingStateServiceDelegateGetXPCInterface();
}

uint64_t AFUserNotificationAnnouncementSpeakingStateServiceGetXPCInterface()
{
  return _AFUserNotificationAnnouncementSpeakingStateServiceGetXPCInterface();
}

uint64_t AFUserSupportDirectoryPath()
{
  return _AFUserSupportDirectoryPath();
}

uint64_t AFValidatedNowPlayingInfo()
{
  return _AFValidatedNowPlayingInfo();
}

uint64_t AFWatchOSVersion()
{
  return _AFWatchOSVersion();
}

uint64_t AFWatchOSVersionIsGreaterThanOrEqual()
{
  return _AFWatchOSVersionIsGreaterThanOrEqual();
}

uint64_t AnalyticsSendEvent()
{
  return _AnalyticsSendEvent();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

OSStatus AudioConverterDispose(AudioConverterRef inAudioConverter)
{
  return _AudioConverterDispose(inAudioConverter);
}

OSStatus AudioConverterFillComplexBuffer(AudioConverterRef inAudioConverter, AudioConverterComplexInputDataProc inInputDataProc, void *inInputDataProcUserData, UInt32 *ioOutputDataPacketSize, AudioBufferList *outOutputData, AudioStreamPacketDescription *outPacketDescription)
{
  return _AudioConverterFillComplexBuffer(inAudioConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);
}

OSStatus AudioConverterNew(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, AudioConverterRef *outAudioConverter)
{
  return _AudioConverterNew(inSourceFormat, inDestinationFormat, outAudioConverter);
}

OSStatus AudioConverterSetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return _AudioConverterSetProperty(inAudioConverter, inPropertyID, inPropertyDataSize, inPropertyData);
}

OSStatus AudioFormatGetProperty(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return _AudioFormatGetProperty(inPropertyID, inSpecifierSize, inSpecifier, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioObjectAddPropertyListenerBlock(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, dispatch_queue_t inDispatchQueue, AudioObjectPropertyListenerBlock inListener)
{
  return _AudioObjectAddPropertyListenerBlock(inObjectID, inAddress, inDispatchQueue, inListener);
}

OSStatus AudioObjectGetPropertyData(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *ioDataSize, void *outData)
{
  return _AudioObjectGetPropertyData(inObjectID, inAddress, inQualifierDataSize, inQualifierData, ioDataSize, outData);
}

OSStatus AudioObjectGetPropertyDataSize(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *outDataSize)
{
  return _AudioObjectGetPropertyDataSize(inObjectID, inAddress, inQualifierDataSize, inQualifierData, outDataSize);
}

OSStatus AudioObjectRemovePropertyListenerBlock(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, dispatch_queue_t inDispatchQueue, AudioObjectPropertyListenerBlock inListener)
{
  return _AudioObjectRemovePropertyListenerBlock(inObjectID, inAddress, inDispatchQueue, inListener);
}

uint64_t BTAccessoryManagerAddCallbacks()
{
  return _BTAccessoryManagerAddCallbacks();
}

uint64_t BTAccessoryManagerGetAACPCapabilityInteger()
{
  return _BTAccessoryManagerGetAACPCapabilityInteger();
}

uint64_t BTAccessoryManagerGetAnnounceCallsSupport()
{
  return _BTAccessoryManagerGetAnnounceCallsSupport();
}

uint64_t BTAccessoryManagerGetAnnounceMessagesSupport()
{
  return _BTAccessoryManagerGetAnnounceMessagesSupport();
}

uint64_t BTAccessoryManagerGetControlCommand()
{
  return _BTAccessoryManagerGetControlCommand();
}

uint64_t BTAccessoryManagerGetDefault()
{
  return _BTAccessoryManagerGetDefault();
}

uint64_t BTAccessoryManagerGetFeatureCapability()
{
  return _BTAccessoryManagerGetFeatureCapability();
}

uint64_t BTAccessoryManagerGetInEarDetectionEnable()
{
  return _BTAccessoryManagerGetInEarDetectionEnable();
}

uint64_t BTAccessoryManagerGetInEarStatus()
{
  return _BTAccessoryManagerGetInEarStatus();
}

uint64_t BTAccessoryManagerGetPrimaryBudSide()
{
  return _BTAccessoryManagerGetPrimaryBudSide();
}

uint64_t BTAccessoryManagerRemoveCallbacks()
{
  return _BTAccessoryManagerRemoveCallbacks();
}

uint64_t BTAccessoryManagerSendControlCommand()
{
  return _BTAccessoryManagerSendControlCommand();
}

uint64_t BTDeviceAddressFromString()
{
  return _BTDeviceAddressFromString();
}

uint64_t BTDeviceAddressToString()
{
  return _BTDeviceAddressToString();
}

uint64_t BTDeviceFromAddress()
{
  return _BTDeviceFromAddress();
}

uint64_t BTDeviceFromIdentifier()
{
  return _BTDeviceFromIdentifier();
}

uint64_t BTDeviceGetAddressString()
{
  return _BTDeviceGetAddressString();
}

uint64_t BTDeviceGetDeviceId()
{
  return _BTDeviceGetDeviceId();
}

uint64_t BTDeviceGetName()
{
  return _BTDeviceGetName();
}

uint64_t BTDeviceIsAppleAudioDevice()
{
  return _BTDeviceIsAppleAudioDevice();
}

uint64_t BTLocalDeviceAddCallbacks()
{
  return _BTLocalDeviceAddCallbacks();
}

uint64_t BTLocalDeviceGetConnectedDevices()
{
  return _BTLocalDeviceGetConnectedDevices();
}

uint64_t BTLocalDeviceGetDefault()
{
  return _BTLocalDeviceGetDefault();
}

uint64_t BTLocalDeviceGetPairedDevices()
{
  return _BTLocalDeviceGetPairedDevices();
}

uint64_t BTLocalDeviceGetSharingAddresses()
{
  return _BTLocalDeviceGetSharingAddresses();
}

uint64_t BTLocalDeviceIsSharingEnabled()
{
  return _BTLocalDeviceIsSharingEnabled();
}

uint64_t BTLocalDeviceRemoveCallbacks()
{
  return _BTLocalDeviceRemoveCallbacks();
}

uint64_t BTServiceAddCallbacks()
{
  return _BTServiceAddCallbacks();
}

uint64_t BTServiceRemoveCallbacks()
{
  return _BTServiceRemoveCallbacks();
}

uint64_t BTSessionAttachWithQueue()
{
  return _BTSessionAttachWithQueue();
}

uint64_t BTSessionDetachWithQueue()
{
  return _BTSessionDetachWithQueue();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

uint64_t CBProductIDFromNSString()
{
  return _CBProductIDFromNSString();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return _CC_SHA1_Final(md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return _CC_SHA1_Init(c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA1_Update(c, data, len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CFBagAddValue(CFMutableBagRef theBag, const void *value)
{
}

void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction applier, void *context)
{
}

CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks)
{
  return _CFBagCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFBagGetCount(CFBagRef theBag)
{
  return _CFBagGetCount(theBag);
}

void CFBagRemoveValue(CFMutableBagRef theBag, const void *value)
{
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return _CFBundleCreate(allocator, bundleURL);
}

CFBundleRef CFBundleGetMainBundle(void)
{
  return _CFBundleGetMainBundle();
}

CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key)
{
  return _CFBundleGetValueForInfoDictionaryKey(bundle, key);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

Boolean CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes)
{
  return _CFHTTPMessageAppendBytes(message, newBytes, numBytes);
}

CFDataRef CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef message)
{
  return _CFHTTPMessageCopySerializedMessage(message);
}

CFHTTPMessageRef CFHTTPMessageCreateEmpty(CFAllocatorRef alloc, Boolean isRequest)
{
  return _CFHTTPMessageCreateEmpty(alloc, isRequest);
}

Boolean CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message)
{
  return _CFHTTPMessageIsHeaderComplete(message);
}

void CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef value)
{
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return _CFNotificationCenterGetDistributedCenter();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return _CFNotificationCenterGetLocalCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppIntegerValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle)
{
  return _CFUserNotificationDisplayNotice(timeout, flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle);
}

uint64_t CKCanRetryForError()
{
  return _CKCanRetryForError();
}

uint64_t CKDatabaseScopeString()
{
  return _CKDatabaseScopeString();
}

uint64_t CKStringFromAccountStatus()
{
  return _CKStringFromAccountStatus();
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  CLLocationCoordinate2D v4 = _CLLocationCoordinate2DMake(latitude, longitude);
  double v3 = v4.longitude;
  double v2 = v4.latitude;
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t CRCopyCountryCode()
{
  return _CRCopyCountryCode();
}

uint64_t CSSiriSpeechRecordingGetUsesServerEndpointingFromRequestOptions()
{
  return _CSSiriSpeechRecordingGetUsesServerEndpointingFromRequestOptions();
}

uint64_t CSSiriSpeechRecordingModeIsOfflineOnly()
{
  return _CSSiriSpeechRecordingModeIsOfflineOnly();
}

uint64_t CSSiriSpeechRecordingModeIsSiri()
{
  return _CSSiriSpeechRecordingModeIsSiri();
}

uint64_t CSSiriSpeechRecordingRecordedAudioDirectoryPath()
{
  return _CSSiriSpeechRecordingRecordedAudioDirectoryPath();
}

uint64_t CSSiriSpeechRecordingTrimmedAudioDirectoryPath()
{
  return _CSSiriSpeechRecordingTrimmedAudioDirectoryPath();
}

OSStatus ExtAudioFileCreateWithURL(CFURLRef inURL, AudioFileTypeID inFileType, const AudioStreamBasicDescription *inStreamDesc, const AudioChannelLayout *inChannelLayout, UInt32 inFlags, ExtAudioFileRef *outExtAudioFile)
{
  return _ExtAudioFileCreateWithURL(inURL, inFileType, inStreamDesc, inChannelLayout, inFlags, outExtAudioFile);
}

OSStatus ExtAudioFileDispose(ExtAudioFileRef inExtAudioFile)
{
  return _ExtAudioFileDispose(inExtAudioFile);
}

OSStatus ExtAudioFileGetProperty(ExtAudioFileRef inExtAudioFile, ExtAudioFilePropertyID inPropertyID, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return _ExtAudioFileGetProperty(inExtAudioFile, inPropertyID, ioPropertyDataSize, outPropertyData);
}

OSStatus ExtAudioFileOpenURL(CFURLRef inURL, ExtAudioFileRef *outExtAudioFile)
{
  return _ExtAudioFileOpenURL(inURL, outExtAudioFile);
}

OSStatus ExtAudioFileRead(ExtAudioFileRef inExtAudioFile, UInt32 *ioNumberFrames, AudioBufferList *ioData)
{
  return _ExtAudioFileRead(inExtAudioFile, ioNumberFrames, ioData);
}

OSStatus ExtAudioFileSeek(ExtAudioFileRef inExtAudioFile, SInt64 inFrameOffset)
{
  return _ExtAudioFileSeek(inExtAudioFile, inFrameOffset);
}

OSStatus ExtAudioFileSetProperty(ExtAudioFileRef inExtAudioFile, ExtAudioFilePropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return _ExtAudioFileSetProperty(inExtAudioFile, inPropertyID, inPropertyDataSize, inPropertyData);
}

OSStatus ExtAudioFileWrite(ExtAudioFileRef inExtAudioFile, UInt32 inNumberFrames, const AudioBufferList *ioData)
{
  return _ExtAudioFileWrite(inExtAudioFile, inNumberFrames, ioData);
}

uint64_t FBSOpenApplicationErrorCodeToString()
{
  return _FBSOpenApplicationErrorCodeToString();
}

uint64_t IDSCopyIDForDevice()
{
  return _IDSCopyIDForDevice();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

uint64_t INAppCanDonateIntent()
{
  return _INAppCanDonateIntent();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

IOReturn IODeregisterForSystemPower(io_object_t *notifier)
{
  return _IODeregisterForSystemPower(notifier);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
}

uint64_t IOPSDrawingUnlimitedPower()
{
  return _IOPSDrawingUnlimitedPower();
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

uint64_t MGRegisterForUpdates()
{
  return _MGRegisterForUpdates();
}

uint64_t MRMediaRemoteSendCommandToApp()
{
  return _MRMediaRemoteSendCommandToApp();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

NSString *__cdecl NSHomeDirectoryForUser(NSString *userName)
{
  return _NSHomeDirectoryForUser(userName);
}

void NSLog(NSString *format, ...)
{
}

void NSMapInsert(NSMapTable *table, const void *key, const void *value)
{
}

void NSMapRemove(NSMapTable *table, const void *key)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PLShouldLogRegisteredEvent()
{
  return _PLShouldLogRegisteredEvent();
}

uint64_t PPSCreateTelemetryIdentifier()
{
  return _PPSCreateTelemetryIdentifier();
}

uint64_t PPSSendTelemetry()
{
  return _PPSSendTelemetry();
}

uint64_t SAAlarmDayOfWeekForString()
{
  return _SAAlarmDayOfWeekForString();
}

uint64_t SASCodecForString()
{
  return _SASCodecForString();
}

uint64_t SCDAPreferencesChangedNotifyStatePublisher()
{
  return _SCDAPreferencesChangedNotifyStatePublisher();
}

uint64_t SIReflectionHydrateProtoFromEventTypeAndData()
{
  return _SIReflectionHydrateProtoFromEventTypeAndData();
}

uint64_t SIReflectionInferEventTypeFromClass()
{
  return _SIReflectionInferEventTypeFromClass();
}

uint64_t SOClockTimerCreateFromMTTimer()
{
  return _SOClockTimerCreateFromMTTimer();
}

uint64_t SOClockTimerGetTimerStateFromMTTimer()
{
  return _SOClockTimerGetTimerStateFromMTTimer();
}

uint64_t STStringFromGenericIntentResponseCode()
{
  return _STStringFromGenericIntentResponseCode();
}

uint64_t SVDCapabilityDescriptionsGroupedByCapabilityKey()
{
  return _SVDCapabilityDescriptionsGroupedByCapabilityKey();
}

uint64_t SZArchiverCreateStreamableZip()
{
  return _SZArchiverCreateStreamableZip();
}

CFStringRef SecTaskCopySigningIdentifier(SecTaskRef task, CFErrorRef *error)
{
  return _SecTaskCopySigningIdentifier(task, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return _SecTaskCreateWithAuditToken(allocator, token);
}

uint64_t SiriCoreConnectionTechnologyGetDescription()
{
  return _SiriCoreConnectionTechnologyGetDescription();
}

uint64_t SiriCoreSQLiteDatabaseIsErrorUnrecoverable()
{
  return _SiriCoreSQLiteDatabaseIsErrorUnrecoverable();
}

uint64_t SiriCoreUUIDStringCreate()
{
  return _SiriCoreUUIDStringCreate();
}

uint64_t SiriCoreUserAgentStringCreate()
{
  return _SiriCoreUserAgentStringCreate();
}

uint64_t TCCAccessCheckAuditToken()
{
  return _TCCAccessCheckAuditToken();
}

uint64_t TCCAccessCopyInformationForBundle()
{
  return _TCCAccessCopyInformationForBundle();
}

uint64_t TRIDeploymentEnvironment_EnumDescriptor()
{
  return _TRIDeploymentEnvironment_EnumDescriptor();
}

uint64_t TRIProject_ProjectId_IsValidValue()
{
  return _TRIProject_ProjectId_IsValidValue();
}

uint64_t VSPreferencesSetLogging()
{
  return _VSPreferencesSetLogging();
}

uint64_t VSPreferencesSetSpokenLanguageIdentifier()
{
  return _VSPreferencesSetSpokenLanguageIdentifier();
}

uint64_t WriteStackshotReport_async()
{
  return _WriteStackshotReport_async();
}

uint64_t _AFBackedUpPreferencesBoolValueForKey()
{
  return __AFBackedUpPreferencesBoolValueForKey();
}

uint64_t _AFBackedUpPreferencesKeyList()
{
  return __AFBackedUpPreferencesKeyList();
}

uint64_t _AFBackedUpPreferencesSetValueForKey()
{
  return __AFBackedUpPreferencesSetValueForKey();
}

uint64_t _AFBackedUpPreferencesValueForKey()
{
  return __AFBackedUpPreferencesValueForKey();
}

uint64_t _AFPreferencesAcousticIDAutoEndpoint()
{
  return __AFPreferencesAcousticIDAutoEndpoint();
}

uint64_t _AFPreferencesAnnounceCallsVoiceOffMaxRatio()
{
  return __AFPreferencesAnnounceCallsVoiceOffMaxRatio();
}

uint64_t _AFPreferencesAnnounceCallsVoiceOnMinRatio()
{
  return __AFPreferencesAnnounceCallsVoiceOnMinRatio();
}

uint64_t _AFPreferencesAnnounceNotificationThreadCancellationStaleThreshold()
{
  return __AFPreferencesAnnounceNotificationThreadCancellationStaleThreshold();
}

uint64_t _AFPreferencesAnnounceNotificationsInCarPlayTemporarilyDisabled()
{
  return __AFPreferencesAnnounceNotificationsInCarPlayTemporarilyDisabled();
}

uint64_t _AFPreferencesAnnounceNotificationsInCarPlayType()
{
  return __AFPreferencesAnnounceNotificationsInCarPlayType();
}

uint64_t _AFPreferencesAnnounceNotificationsOnBuiltInSpeakerEnabled()
{
  return __AFPreferencesAnnounceNotificationsOnBuiltInSpeakerEnabled();
}

uint64_t _AFPreferencesAnnounceNotificationsOnHearingAidsEnabled()
{
  return __AFPreferencesAnnounceNotificationsOnHearingAidsEnabled();
}

uint64_t _AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForAppOnPlatform()
{
  return __AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForAppOnPlatform();
}

uint64_t _AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForPlatform()
{
  return __AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForPlatform();
}

uint64_t _AFPreferencesAnnounceNotificationsVoiceOffMaxRatio()
{
  return __AFPreferencesAnnounceNotificationsVoiceOffMaxRatio();
}

uint64_t _AFPreferencesAnnounceNotificationsVoiceOnMinRatio()
{
  return __AFPreferencesAnnounceNotificationsVoiceOnMinRatio();
}

uint64_t _AFPreferencesAuthenticationDisabled()
{
  return __AFPreferencesAuthenticationDisabled();
}

uint64_t _AFPreferencesBLECompanionConnectionsEnabled()
{
  return __AFPreferencesBLECompanionConnectionsEnabled();
}

uint64_t _AFPreferencesBoolFromValueWithDefault()
{
  return __AFPreferencesBoolFromValueWithDefault();
}

uint64_t _AFPreferencesClearAnnounceNotificationsInCarPlayTemporarilyDisabled()
{
  return __AFPreferencesClearAnnounceNotificationsInCarPlayTemporarilyDisabled();
}

uint64_t _AFPreferencesClearAnnounceNotificationsInCarPlayType()
{
  return __AFPreferencesClearAnnounceNotificationsInCarPlayType();
}

uint64_t _AFPreferencesCloudSyncEnabled()
{
  return __AFPreferencesCloudSyncEnabled();
}

uint64_t _AFPreferencesCloudUserID()
{
  return __AFPreferencesCloudUserID();
}

uint64_t _AFPreferencesCompanionMessagingEnabled()
{
  return __AFPreferencesCompanionMessagingEnabled();
}

uint64_t _AFPreferencesEnableCloudSync()
{
  return __AFPreferencesEnableCloudSync();
}

uint64_t _AFPreferencesForceOnDeviceOnlyDictationEnabled()
{
  return __AFPreferencesForceOnDeviceOnlyDictationEnabled();
}

uint64_t _AFPreferencesGetEnableServerDebugFlags()
{
  return __AFPreferencesGetEnableServerDebugFlags();
}

uint64_t _AFPreferencesGetMessageWithoutConfirmationEnabled()
{
  return __AFPreferencesGetMessageWithoutConfirmationEnabled();
}

uint64_t _AFPreferencesGetMessageWithoutConfirmationHeadphonesEnabled()
{
  return __AFPreferencesGetMessageWithoutConfirmationHeadphonesEnabled();
}

uint64_t _AFPreferencesGetMessageWithoutConfirmationInCarPlayEnabled()
{
  return __AFPreferencesGetMessageWithoutConfirmationInCarPlayEnabled();
}

uint64_t _AFPreferencesGetNonManateeIdentity()
{
  return __AFPreferencesGetNonManateeIdentity();
}

uint64_t _AFPreferencesGetShowAppsBehindSiriInCarPlayEnabled()
{
  return __AFPreferencesGetShowAppsBehindSiriInCarPlayEnabled();
}

uint64_t _AFPreferencesHardCodedBluetoothProximityNumber()
{
  return __AFPreferencesHardCodedBluetoothProximityNumber();
}

uint64_t _AFPreferencesHomePodAdjustedOptIn2021WithContext()
{
  return __AFPreferencesHomePodAdjustedOptIn2021WithContext();
}

uint64_t _AFPreferencesHomePodPriorOptInValue2021IsPresentWithContext()
{
  return __AFPreferencesHomePodPriorOptInValue2021IsPresentWithContext();
}

uint64_t _AFPreferencesIsHomePodInHH2Mode()
{
  return __AFPreferencesIsHomePodInHH2Mode();
}

uint64_t _AFPreferencesKeepRecorededAudioFiles()
{
  return __AFPreferencesKeepRecorededAudioFiles();
}

uint64_t _AFPreferencesLastPushedCensorSpeechSetting()
{
  return __AFPreferencesLastPushedCensorSpeechSetting();
}

uint64_t _AFPreferencesMultilingualDictationTimeoutInMilliSeconds()
{
  return __AFPreferencesMultilingualDictationTimeoutInMilliSeconds();
}

uint64_t _AFPreferencesNetworkLoggingEnabled()
{
  return __AFPreferencesNetworkLoggingEnabled();
}

uint64_t _AFPreferencesNotificationPreviewRestrictedApps()
{
  return __AFPreferencesNotificationPreviewRestrictedApps();
}

uint64_t _AFPreferencesOpportuneSpeakingEdgeDetectorSignalOverride()
{
  return __AFPreferencesOpportuneSpeakingEdgeDetectorSignalOverride();
}

uint64_t _AFPreferencesOpportuneSpeakingModelUsed()
{
  return __AFPreferencesOpportuneSpeakingModelUsed();
}

uint64_t _AFPreferencesOpportuneSpeakingModuleEnabled()
{
  return __AFPreferencesOpportuneSpeakingModuleEnabled();
}

uint64_t _AFPreferencesOpportuneSpeakingTimeout()
{
  return __AFPreferencesOpportuneSpeakingTimeout();
}

uint64_t _AFPreferencesReplacementLanguageForLocalRecognizerLanguageCode()
{
  return __AFPreferencesReplacementLanguageForLocalRecognizerLanguageCode();
}

uint64_t _AFPreferencesSessionShutdownDelayOverride()
{
  return __AFPreferencesSessionShutdownDelayOverride();
}

uint64_t _AFPreferencesSetAnnounceNotificationsInCarPlayTemporarilyDisabled()
{
  return __AFPreferencesSetAnnounceNotificationsInCarPlayTemporarilyDisabled();
}

uint64_t _AFPreferencesSetAnnounceNotificationsInCarPlayType()
{
  return __AFPreferencesSetAnnounceNotificationsInCarPlayType();
}

uint64_t _AFPreferencesSetCloudSyncEnabledModificationDate()
{
  return __AFPreferencesSetCloudSyncEnabledModificationDate();
}

uint64_t _AFPreferencesSetCloudUserID()
{
  return __AFPreferencesSetCloudUserID();
}

uint64_t _AFPreferencesSetDictationLanguageDetectorEnabledByServer()
{
  return __AFPreferencesSetDictationLanguageDetectorEnabledByServer();
}

uint64_t _AFPreferencesSetHomePodOptIn2021AdjustedWithContext()
{
  return __AFPreferencesSetHomePodOptIn2021AdjustedWithContext();
}

uint64_t _AFPreferencesSetHomePodPriorOptInValue2021WithContext()
{
  return __AFPreferencesSetHomePodPriorOptInValue2021WithContext();
}

uint64_t _AFPreferencesSetInitialInterstitialDelay()
{
  return __AFPreferencesSetInitialInterstitialDelay();
}

uint64_t _AFPreferencesSetInitialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking()
{
  return __AFPreferencesSetInitialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking();
}

uint64_t _AFPreferencesSetIsHomePodInHH2Mode()
{
  return __AFPreferencesSetIsHomePodInHH2Mode();
}

uint64_t _AFPreferencesSetLanguageCodeWithContext()
{
  return __AFPreferencesSetLanguageCodeWithContext();
}

uint64_t _AFPreferencesSetLastPushedCensorSpeechSetting()
{
  return __AFPreferencesSetLastPushedCensorSpeechSetting();
}

uint64_t _AFPreferencesSetMultilingualDictationTimeoutInMilliSeconds()
{
  return __AFPreferencesSetMultilingualDictationTimeoutInMilliSeconds();
}

uint64_t _AFPreferencesSetNotificationPreviewRestrictedApps()
{
  return __AFPreferencesSetNotificationPreviewRestrictedApps();
}

uint64_t _AFPreferencesSetOutputVoiceWithContext()
{
  return __AFPreferencesSetOutputVoiceWithContext();
}

uint64_t _AFPreferencesSetShouldCensorSpeechInternal()
{
  return __AFPreferencesSetShouldCensorSpeechInternal();
}

uint64_t _AFPreferencesSetSiriDataSharingHomeAccessoryMigrated()
{
  return __AFPreferencesSetSiriDataSharingHomeAccessoryMigrated();
}

uint64_t _AFPreferencesSetSiriDataSharingOptInAlertPresented()
{
  return __AFPreferencesSetSiriDataSharingOptInAlertPresented();
}

uint64_t _AFPreferencesSetSiriDataSharingOptInStatusWithContext()
{
  return __AFPreferencesSetSiriDataSharingOptInStatusWithContext();
}

uint64_t _AFPreferencesSetSiriDesignModeEnabled()
{
  return __AFPreferencesSetSiriDesignModeEnabled();
}

uint64_t _AFPreferencesSetValueForKey()
{
  return __AFPreferencesSetValueForKey();
}

uint64_t _AFPreferencesSetValueForKeyWithContext()
{
  return __AFPreferencesSetValueForKeyWithContext();
}

uint64_t _AFPreferencesShouldCensorSpeechInternal()
{
  return __AFPreferencesShouldCensorSpeechInternal();
}

uint64_t _AFPreferencesShouldSuppressSiriDataSharingOptInAlert()
{
  return __AFPreferencesShouldSuppressSiriDataSharingOptInAlert();
}

uint64_t _AFPreferencesShouldSyncFirstPartyAppIntentPolicy()
{
  return __AFPreferencesShouldSyncFirstPartyAppIntentPolicy();
}

uint64_t _AFPreferencesShouldWriteSODABiomeStreamsToSysdiagnose()
{
  return __AFPreferencesShouldWriteSODABiomeStreamsToSysdiagnose();
}

uint64_t _AFPreferencesSiriDataSharingHomeAccessoryMigrated()
{
  return __AFPreferencesSiriDataSharingHomeAccessoryMigrated();
}

uint64_t _AFPreferencesSiriDataSharingLegacyOptInStatusWithContext()
{
  return __AFPreferencesSiriDataSharingLegacyOptInStatusWithContext();
}

uint64_t _AFPreferencesSiriDataSharingOptInStatus()
{
  return __AFPreferencesSiriDataSharingOptInStatus();
}

uint64_t _AFPreferencesSiriDesignModeIsEnabled()
{
  return __AFPreferencesSiriDesignModeIsEnabled();
}

uint64_t _AFPreferencesSiriPersonalizedASRDisabled()
{
  return __AFPreferencesSiriPersonalizedASRDisabled();
}

uint64_t _AFPreferencesSiriRMVSetting()
{
  return __AFPreferencesSiriRMVSetting();
}

uint64_t _AFPreferencesSiriXAssetsDidChange()
{
  return __AFPreferencesSiriXAssetsDidChange();
}

uint64_t _AFPreferencesSiriXNLAssetOverride()
{
  return __AFPreferencesSiriXNLAssetOverride();
}

uint64_t _AFPreferencesSpokenNotificationIsAlwaysOpportune()
{
  return __AFPreferencesSpokenNotificationIsAlwaysOpportune();
}

uint64_t _AFPreferencesSpokenNotificationPlayAlertBeforeTriggerlessListening()
{
  return __AFPreferencesSpokenNotificationPlayAlertBeforeTriggerlessListening();
}

uint64_t _AFPreferencesSpokenNotificationShouldAnnounceAllNotifications()
{
  return __AFPreferencesSpokenNotificationShouldAnnounceAllNotifications();
}

uint64_t _AFPreferencesSpokenNotificationShouldSkipTriggerlessReplies()
{
  return __AFPreferencesSpokenNotificationShouldSkipTriggerlessReplies();
}

uint64_t _AFPreferencesSpokenNotificationShowUIDuringTriggerlessListening()
{
  return __AFPreferencesSpokenNotificationShowUIDuringTriggerlessListening();
}

uint64_t _AFPreferencesSpokenNotificationSkipTriggerlessReplyConfirmation()
{
  return __AFPreferencesSpokenNotificationSkipTriggerlessReplyConfirmation();
}

uint64_t _AFPreferencesSpokenNotificationTriggerlessReplyTresholdTime()
{
  return __AFPreferencesSpokenNotificationTriggerlessReplyTresholdTime();
}

uint64_t _AFPreferencesSpokenNotificationTriggerlessReplyWindow()
{
  return __AFPreferencesSpokenNotificationTriggerlessReplyWindow();
}

uint64_t _AFPreferencesSpokenNotificationsProxCardSeen()
{
  return __AFPreferencesSpokenNotificationsProxCardSeen();
}

uint64_t _AFPreferencesSyncFromWatchEnabled()
{
  return __AFPreferencesSyncFromWatchEnabled();
}

uint64_t _AFPreferencesValueForKey()
{
  return __AFPreferencesValueForKey();
}

uint64_t _AFPreferencesValueForKeyWithContext()
{
  return __AFPreferencesValueForKeyWithContext();
}

uint64_t _AFPreferencesiRATManagerRecommendationEnabled()
{
  return __AFPreferencesiRATManagerRecommendationEnabled();
}

uint64_t _AFRedactedCopyPerson()
{
  return __AFRedactedCopyPerson();
}

uint64_t _AFSupportPreferencesBoolValueForKey()
{
  return __AFSupportPreferencesBoolValueForKey();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchSetEnabled()
{
  return __AXSVoiceOverTouchSetEnabled();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFBundleCreateUnique()
{
  return __CFBundleCreateUnique();
}

uint64_t _CFBundleFlushBundleCaches()
{
  return __CFBundleFlushBundleCaches();
}

uint64_t _ExternalRequestConnection()
{
  return __ExternalRequestConnection();
}

uint64_t _IDSCopyIDForDeviceUniqueID()
{
  return __IDSCopyIDForDeviceUniqueID();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

void abort(void)
{
}

uint32_t arc4random(void)
{
  return _arc4random();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

int close(int a1)
{
  return _close(a1);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return _confstr(a1, a2, a3);
}

uLong crc32(uLong crc, const Bytef *buf, uInt len)
{
  return _crc32(crc, buf, len);
}

uint64_t ct_green_tea_logger_create()
{
  return _ct_green_tea_logger_create();
}

uint64_t ct_green_tea_logger_destroy()
{
  return _ct_green_tea_logger_destroy();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

BOOL dispatch_data_apply(dispatch_data_t data, dispatch_data_applier_t applier)
{
  return _dispatch_data_apply(data, applier);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return _dispatch_data_create(buffer, size, queue, destructor);
}

dispatch_data_t dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2)
{
  return _dispatch_data_create_concat(data1, data2);
}

dispatch_data_t dispatch_data_create_subrange(dispatch_data_t data, size_t offset, size_t length)
{
  return _dispatch_data_create_subrange(data, offset, length);
}

size_t dispatch_data_get_size(dispatch_data_t data)
{
  return _dispatch_data_get_size(data);
}

dispatch_queue_t dispatch_get_current_queue(void)
{
  return _dispatch_get_current_queue();
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

uint64_t dispatch_pthread_root_queue_create()
{
  return _dispatch_pthread_root_queue_create();
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return _dispatch_queue_attr_make_initially_inactive(attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return _dispatch_queue_create_with_target_V2(label, attr, target);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return _dispatch_queue_get_label(queue);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_set_qos_class_floor(dispatch_object_t object, dispatch_qos_class_t qos_class, int relative_priority)
{
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

int dup(int a1)
{
  return _dup(a1);
}

void exit(int a1)
{
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

int fcntl(int a1, int a2, ...)
{
  return _fcntl(a1, a2);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

void free(void *a1)
{
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return _getCTGreenTeaOsLogHandle();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

long double log(long double __x)
{
  return _log(__x);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint64_t nw_connection_create_with_connected_socket()
{
  return _nw_connection_create_with_connected_socket();
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return _open_dprotected_np(a1, a2, a3, a4);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_allows_internal_security_policies()
{
  return _os_variant_allows_internal_security_policies();
}

uint64_t productTypeFromUserAgentString()
{
  return _productTypeFromUserAgentString();
}

int pthread_attr_destroy(pthread_attr_t *a1)
{
  return _pthread_attr_destroy(a1);
}

int pthread_attr_getschedparam(const pthread_attr_t *a1, sched_param *a2)
{
  return _pthread_attr_getschedparam(a1, a2);
}

int pthread_attr_init(pthread_attr_t *a1)
{
  return _pthread_attr_init(a1);
}

int pthread_attr_setinheritsched(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setinheritsched(a1, a2);
}

int pthread_attr_setschedparam(pthread_attr_t *a1, const sched_param *a2)
{
  return _pthread_attr_setschedparam(a1, a2);
}

int pthread_attr_setschedpolicy(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setschedpolicy(a1, a2);
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return _setenv(__name, __value, __overwrite);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return _setsockopt(a1, a2, a3, a4, a5);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return _strstr(__s1, __s2);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return _uuid_compare(uu1, uu2);
}

void uuid_copy(uuid_t dst, const uuid_t src)
{
}

uint64_t voucher_adopt()
{
  return _voucher_adopt();
}

uint64_t voucher_copy()
{
  return _voucher_copy();
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return _write(__fd, __buf, __nbyte);
}

uint64_t xpc_activity_add_eligibility_changed_handler()
{
  return _xpc_activity_add_eligibility_changed_handler();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

uint64_t xpc_activity_remove_eligibility_changed_handler()
{
  return _xpc_activity_remove_eligibility_changed_handler();
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return _xpc_array_apply(xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return _xpc_array_get_count(xarray);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return _xpc_BOOL_get_value(xBOOL);
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return _xpc_connection_copy_entitlement_value();
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

uint64_t xpc_copy_entitlement_for_self()
{
  return _xpc_copy_entitlement_for_self();
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return _xpc_data_create(bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return _xpc_data_get_bytes_ptr(xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return _xpc_data_get_length(xdata);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return _xpc_dictionary_apply(xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_array(xdict, key);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_BOOL(xdict, key);
}

size_t xpc_dictionary_get_count(xpc_object_t xdict)
{
  return _xpc_dictionary_get_count(xdict);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_dictionary(xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_int64(xdict, key);
}

xpc_connection_t xpc_dictionary_get_remote_connection(xpc_object_t xdict)
{
  return _xpc_dictionary_get_remote_connection(xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_uint64(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return _xpc_dictionary_send_reply();
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return _xpc_equal(object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return _xpc_int64_create(value);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

xpc_object_t xpc_string_create(const char *string)
{
  return _xpc_string_create(string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return _xpc_string_get_string_ptr(xstring);
}

id objc_msgSend_AFVoiceFootprint(void *a1, const char *a2, ...)
{
  return _[a1 AFVoiceFootprint];
}

id objc_msgSend_AFVoiceGender(void *a1, const char *a2, ...)
{
  return _[a1 AFVoiceGender];
}

id objc_msgSend_AnalyticsIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 AnalyticsIdentifiers];
}

id objc_msgSend_CalDateForNow(void *a1, const char *a2, ...)
{
  return _[a1 CalDateForNow];
}

id objc_msgSend_CalIsBeforeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CalIsBeforeDate:");
}

id objc_msgSend_CalIsBetweenStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CalIsBetweenStartDate:endDate:");
}

id objc_msgSend_HomeSeed(void *a1, const char *a2, ...)
{
  return _[a1 HomeSeed];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_Metrics(void *a1, const char *a2, ...)
{
  return _[a1 Metrics];
}

id objc_msgSend_ODDSiriSchemaODDListenForFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ODDSiriSchemaODDListenForFrom:");
}

id objc_msgSend_OnDeviceDigestExperimentMetrics(void *a1, const char *a2, ...)
{
  return _[a1 OnDeviceDigestExperimentMetrics];
}

id objc_msgSend_OnDeviceDigestSegmentsCohorts(void *a1, const char *a2, ...)
{
  return _[a1 OnDeviceDigestSegmentsCohorts];
}

id objc_msgSend_OnDeviceDigestUsageMetrics(void *a1, const char *a2, ...)
{
  return _[a1 OnDeviceDigestUsageMetrics];
}

id objc_msgSend_SAVoiceGender(void *a1, const char *a2, ...)
{
  return _[a1 SAVoiceGender];
}

id objc_msgSend_SAVoiceQuality(void *a1, const char *a2, ...)
{
  return _[a1 SAVoiceQuality];
}

id objc_msgSend_SAVoiceType(void *a1, const char *a2, ...)
{
  return _[a1 SAVoiceType];
}

id objc_msgSend_SELFProcessedEvent(void *a1, const char *a2, ...)
{
  return _[a1 SELFProcessedEvent];
}

id objc_msgSend_SISchemaLocaleToSISchemaISOLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SISchemaLocaleToSISchemaISOLocale:");
}

id objc_msgSend_SISchemaUTCOffsetFromTimeZoneOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SISchemaUTCOffsetFromTimeZoneOffset:");
}

id objc_msgSend_Siri(void *a1, const char *a2, ...)
{
  return _[a1 Siri];
}

id objc_msgSend_UEIUUFRReadyDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 UEIUUFRReadyDialogPhase];
}

id objc_msgSend_UIService_didPresentUIResponseForCommand_withExecutionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UIService:didPresentUIResponseForCommand:withExecutionInfo:");
}

id objc_msgSend_UIService_executeHandler_forCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UIService:executeHandler:forCommand:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingPathExtension];
}

id objc_msgSend_URLForSoundID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForSoundID:");
}

id objc_msgSend_URLPathAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLPathAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLsForDirectory:inDomains:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_UUIDWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDWithString:");
}

id objc_msgSend_UserAggregationId(void *a1, const char *a2, ...)
{
  return _[a1 UserAggregationId];
}

id objc_msgSend_UserSeed(void *a1, const char *a2, ...)
{
  return _[a1 UserSeed];
}

id objc_msgSend_VSSpeechFootprint(void *a1, const char *a2, ...)
{
  return _[a1 VSSpeechFootprint];
}

id objc_msgSend_VSSpeechGender(void *a1, const char *a2, ...)
{
  return _[a1 VSSpeechGender];
}

id objc_msgSend__ADPBDeviceRequestType(void *a1, const char *a2, ...)
{
  return _[a1 _ADPBDeviceRequestType];
}

id objc_msgSend__ADPBLocationRequestType(void *a1, const char *a2, ...)
{
  return _[a1 _ADPBLocationRequestType];
}

id objc_msgSend__ADPBProxyRequestType(void *a1, const char *a2, ...)
{
  return _[a1 _ADPBProxyRequestType];
}

id objc_msgSend__AWDTimestampTruncatedToHourPrecision(void *a1, const char *a2, ...)
{
  return _[a1 _AWDTimestampTruncatedToHourPrecision];
}

id objc_msgSend__SISchemaAppleMediaProductsSubscriptionFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_SISchemaAppleMediaProductsSubscriptionFrom:");
}

id objc_msgSend__aadConnectionInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 _aadConnectionInterrupted];
}

id objc_msgSend__acceptSharesForMetadatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acceptSharesForMetadatas:");
}

id objc_msgSend__accessBTDeviceAndAccessoryManagerUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessBTDeviceAndAccessoryManagerUsingBlock:");
}

id objc_msgSend__accessBTLocalDeviceUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessBTLocalDeviceUsingBlock:");
}

id objc_msgSend__accessRecordedAudioWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessRecordedAudioWithIdentifier:completion:");
}

id objc_msgSend__accessibleAnnounceIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _accessibleAnnounceIsEnabled];
}

id objc_msgSend__accessoryForIdentifier_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryForIdentifier:inHome:");
}

id objc_msgSend__accessoryInfoForAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryInfoForAccessory:");
}

id objc_msgSend__accessoryLoggingSalt(void *a1, const char *a2, ...)
{
  return _[a1 _accessoryLoggingSalt];
}

id objc_msgSend__account(void *a1, const char *a2, ...)
{
  return _[a1 _account];
}

id objc_msgSend__accountForIdentifier_infoDictionary_intanceContext_isReadOnly_isCoupledToHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accountForIdentifier:infoDictionary:intanceContext:isReadOnly:isCoupledToHost:");
}

id objc_msgSend__accounts(void *a1, const char *a2, ...)
{
  return _[a1 _accounts];
}

id objc_msgSend__aceValue(void *a1, const char *a2, ...)
{
  return _[a1 _aceValue];
}

id objc_msgSend__acousticIDHelper(void *a1, const char *a2, ...)
{
  return _[a1 _acousticIDHelper];
}

id objc_msgSend__acousticId_clearPartialResultTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_clearPartialResultTimer");
}

id objc_msgSend__acousticId_commandFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_commandFailed:");
}

id objc_msgSend__acousticId_hasCommandForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_hasCommandForRefId:");
}

id objc_msgSend__acousticId_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_reset");
}

id objc_msgSend__acousticId_sessionFailed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_sessionFailed");
}

id objc_msgSend__acousticId_speechCaptureCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_speechCaptureCompleted");
}

id objc_msgSend__acousticId_startSessionForSpeechRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_startSessionForSpeechRequest:");
}

id objc_msgSend__acousticId_startSessionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acousticId_startSessionWithContext:");
}

id objc_msgSend__acquireRemoteAssertionForSenderID_reason_effectiveDate_expirationDuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:");
}

id objc_msgSend__activateAWDLMessageLink_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateAWDLMessageLink:completion:");
}

id objc_msgSend__activateOnDemandClientLinkToContextCollector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateOnDemandClientLinkToContextCollector:completion:");
}

id objc_msgSend__activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateWithCompletion:");
}

id objc_msgSend__activeAccountIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _activeAccountIdentifier];
}

id objc_msgSend__activityNotificationsForHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityNotificationsForHomes:");
}

id objc_msgSend__adCoreBluetoothDeviceForPeripheral_RSSI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adCoreBluetoothDeviceForPeripheral:RSSI:");
}

id objc_msgSend__adSessionTypeString(void *a1, const char *a2, ...)
{
  return _[a1 _adSessionTypeString];
}

id objc_msgSend__ad_SADHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_SADHash");
}

id objc_msgSend__ad_aceSettingBooleanEntityRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_aceSettingBooleanEntityRepresentation");
}

id objc_msgSend__ad_aceSettingsResponseCommandRepresentationForSiriResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_aceSettingsResponseCommandRepresentationForSiriResponse:");
}

id objc_msgSend__ad_aceSettingsResponseRepresentationForSetValueCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_aceSettingsResponseRepresentationForSetValueCommand:");
}

id objc_msgSend__ad_alarm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_alarm");
}

id objc_msgSend__ad_alarmResponseForResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_alarmResponseForResponse:");
}

id objc_msgSend__ad_connectionModeFromEnabledState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_connectionModeFromEnabledState");
}

id objc_msgSend__ad_contextLoggerWithEventType_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_contextLoggerWithEventType:context:completion:");
}

id objc_msgSend__ad_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_data");
}

id objc_msgSend__ad_dataOfClasses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_dataOfClasses:");
}

id objc_msgSend__ad_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_dictionaryRepresentation");
}

id objc_msgSend__ad_finalMetricsContextWithResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_finalMetricsContextWithResponse:error:");
}

id objc_msgSend__ad_getMessagesRequestValueWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_getMessagesRequestValueWithCompletionHandler:");
}

id objc_msgSend__ad_handleAceDomainSignalRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleAceDomainSignalRequest:completionHandler:");
}

id objc_msgSend__ad_handleAceDomainSignalRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleAceDomainSignalRequestWithCompletionHandler:");
}

id objc_msgSend__ad_handleAlarmRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleAlarmRequestWithCompletionHandler:");
}

id objc_msgSend__ad_handleAppLaunchCommandWithRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleAppLaunchCommandWithRequest:completion:");
}

id objc_msgSend__ad_handleSettingsRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleSettingsRequestWithCompletionHandler:");
}

id objc_msgSend__ad_handleShowNextEventRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleShowNextEventRequestWithCompletionHandler:");
}

id objc_msgSend__ad_handleStopwatchRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleStopwatchRequestWithCompletionHandler:");
}

id objc_msgSend__ad_handleTimerRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_handleTimerRequestWithCompletionHandler:");
}

id objc_msgSend__ad_internalAlarmIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_internalAlarmIdentifiers");
}

id objc_msgSend__ad_keyValueDictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_keyValueDictionaryWithDictionary:");
}

id objc_msgSend__ad_likelyApplicationBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_likelyApplicationBundleIdentifiers");
}

id objc_msgSend__ad_localRequestCommandWithRequestHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_localRequestCommandWithRequestHelper:");
}

id objc_msgSend__ad_mediaRemoteOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_mediaRemoteOptions");
}

id objc_msgSend__ad_metrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_metrics");
}

id objc_msgSend__ad_performForPeerLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performForPeerLocationWithCompletion:");
}

id objc_msgSend__ad_performNextItemWithTargetQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performNextItemWithTargetQueue:completion:");
}

id objc_msgSend__ad_performPreviousItemWithTargetQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performPreviousItemWithTargetQueue:completion:");
}

id objc_msgSend__ad_performSeekToBeginningWithTargetQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performSeekToBeginningWithTargetQueue:completion:");
}

id objc_msgSend__ad_performWithCloudService_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performWithCloudService:fromPeer:completion:");
}

id objc_msgSend__ad_performWithMediaRemoteService_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performWithMediaRemoteService:replyHandler:");
}

id objc_msgSend__ad_performWithPeerLocationManagerRemote_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performWithPeerLocationManagerRemote:completion:");
}

id objc_msgSend__ad_performWithPeerStreamConnection_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_performWithPeerStreamConnection:context:");
}

id objc_msgSend__ad_personContactHandlesWithAddressBookManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_personContactHandlesWithAddressBookManager:");
}

id objc_msgSend__ad_preheatableDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_preheatableDomain");
}

id objc_msgSend__ad_preheatableServiceDomainForDomainSignalRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_preheatableServiceDomainForDomainSignalRequest");
}

id objc_msgSend__ad_recordPreheatLaunchOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_recordPreheatLaunchOf:");
}

id objc_msgSend__ad_replyCommandValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_replyCommandValue");
}

id objc_msgSend__ad_requestCommandWithRequestHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_requestCommandWithRequestHelper:");
}

id objc_msgSend__ad_requestInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_requestInfo");
}

id objc_msgSend__ad_setAlarm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setAlarm:");
}

id objc_msgSend__ad_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setData:");
}

id objc_msgSend__ad_setHandoffPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setHandoffPayload:");
}

id objc_msgSend__ad_setMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setMetrics:");
}

id objc_msgSend__ad_setRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setRequestInfo:");
}

id objc_msgSend__ad_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setTimer:");
}

id objc_msgSend__ad_setVoiceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setVoiceInfo:");
}

id objc_msgSend__ad_setting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_setting");
}

id objc_msgSend__ad_settingType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_settingType");
}

id objc_msgSend__ad_settingsRequestRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_settingsRequestRepresentation");
}

id objc_msgSend__ad_siriSharedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_siriSharedData");
}

id objc_msgSend__ad_siriSharedDataProtobuf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_siriSharedDataProtobuf");
}

id objc_msgSend__ad_speechRequestOptionsWithClientConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_speechRequestOptionsWithClientConfiguration:");
}

id objc_msgSend__ad_timerRequestRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_timerRequestRepresentation");
}

id objc_msgSend__ad_timerResponseForResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_timerResponseForResponse:");
}

id objc_msgSend__ad_timerWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_timerWithState:");
}

id objc_msgSend__ad_transformedHealthSuccessResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedHealthSuccessResponse");
}

id objc_msgSend__ad_transformedMailSuccessResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedMailSuccessResponse");
}

id objc_msgSend__ad_transformedMapsRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedMapsRequest");
}

id objc_msgSend__ad_transformedMapsSuccessResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedMapsSuccessResponse");
}

id objc_msgSend__ad_transformedSendEmailRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedSendEmailRequest");
}

id objc_msgSend__ad_transformedShowActivityRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedShowActivityRequest");
}

id objc_msgSend__ad_transformedWorkoutRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedWorkoutRequest");
}

id objc_msgSend__ad_transformedWorkoutSuccessResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_transformedWorkoutSuccessResponse");
}

id objc_msgSend__ad_updateWithModification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_updateWithModification:");
}

id objc_msgSend__ad_voiceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_voiceInfo");
}

id objc_msgSend__ad_volumeAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ad_volumeAction");
}

id objc_msgSend__addAudioSessionAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAudioSessionAssertion:");
}

id objc_msgSend__addCompletion_forCommand_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCompletion:forCommand:forKey:");
}

id objc_msgSend__addCompletion_forPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCompletion:forPID:");
}

id objc_msgSend__addDeviceIDToKeepAliveList_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDeviceIDToKeepAliveList:reason:");
}

id objc_msgSend__addDeviceOwner_sharedUserId_loggableSharedUserId_iCloudAltDSID_audioAppSignals_enrollmentName_companionInfo_shareOwnerName_homeMemberSettings_loggingAllowed_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDeviceOwner:sharedUserId:loggableSharedUserId:iCloudAltDSID:audioAppSignals:enrollmentName:companionInfo:shareOwnerName:homeMemberSettings:loggingAllowed:completion:");
}

id objc_msgSend__addError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addError:");
}

id objc_msgSend__addExecutionDevice_forCommandExecutionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addExecutionDevice:forCommandExecutionContext:");
}

id objc_msgSend__addHandledCommandId_forRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addHandledCommandId:forRequestId:");
}

id objc_msgSend__addHomeMembershipsToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addHomeMembershipsToDictionary:");
}

id objc_msgSend__addLimboId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLimboId:");
}

id objc_msgSend__addLocalDeviceInfoToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLocalDeviceInfoToDictionary:");
}

id objc_msgSend__addMissingColumnsForTable_withDescription_inDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMissingColumnsForTable:withDescription:inDatabase:");
}

id objc_msgSend__addNetworkActivityTracingForLabel_start_withCompletionReason_andError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNetworkActivityTracingForLabel:start:withCompletionReason:andError:");
}

id objc_msgSend__addObjects_forRequestId_sessionRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addObjects:forRequestId:sessionRequestId:");
}

id objc_msgSend__addOutstandingAnchorsRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutstandingAnchorsRequestId:");
}

id objc_msgSend__addOutstandingRequestId_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutstandingRequestId:forReason:");
}

id objc_msgSend__addOutstandingSearchId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutstandingSearchId:");
}

id objc_msgSend__addOutstandingSyncChunkId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutstandingSyncChunkId:");
}

id objc_msgSend__addPendingCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPendingCommand:");
}

id objc_msgSend__addPostCommandHandlingBlock_forCommandId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPostCommandHandlingBlock:forCommandId:requestId:");
}

id objc_msgSend__addRecordStoppedCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRecordStoppedCompletion:");
}

id objc_msgSend__addService_precedence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addService:precedence:");
}

id objc_msgSend__addServiceWithRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addServiceWithRecord:");
}

id objc_msgSend__addSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSession:");
}

id objc_msgSend__addSpeechCapturingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSpeechCapturingContext:");
}

id objc_msgSend__addTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTimer:");
}

id objc_msgSend__addTimer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTimer:completion:");
}

id objc_msgSend__addUser_sharedUserId_loggableSharedUserId_iCloudAltDSID_enrollmentName_isPrimary_nonCloudSyncedUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUser:sharedUserId:loggableSharedUserId:iCloudAltDSID:enrollmentName:isPrimary:nonCloudSyncedUser:completion:");
}

id objc_msgSend__addWatchdogTimer_forUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addWatchdogTimer:forUUID:");
}

id objc_msgSend__adjustAceHeaderTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustAceHeaderTimeout:");
}

id objc_msgSend__adjustAnnouncementVolumeIfNeccessaryForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustAnnouncementVolumeIfNeccessaryForRequest:");
}

id objc_msgSend__adjustSiriVolumeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustSiriVolumeIfNeeded];
}

id objc_msgSend__adui_handleWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adui_handleWithCompletion:");
}

id objc_msgSend__adui_notifyOthersOfArrival(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adui_notifyOthersOfArrival");
}

id objc_msgSend__adui_presentsUIResponseInTranscript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adui_presentsUIResponseInTranscript");
}

id objc_msgSend__adui_shouldBeHandledByAssistantd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adui_shouldBeHandledByAssistantd");
}

id objc_msgSend__adui_shouldNotifyOthersOfArrival(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adui_shouldNotifyOthersOfArrival");
}

id objc_msgSend__af_age(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_age");
}

id objc_msgSend__af_analyticsContextDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_analyticsContextDescription");
}

id objc_msgSend__af_isOlderThanAge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_isOlderThanAge:");
}

id objc_msgSend__af_isValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_isValid");
}

id objc_msgSend__af_isWithinAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_isWithinAccuracy:");
}

id objc_msgSend__af_normalizedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_normalizedKey");
}

id objc_msgSend__af_normalizedKeyForKey_appBundleID_syncSlotName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_normalizedKeyForKey:appBundleID:syncSlotName:");
}

id objc_msgSend__af_preferredBundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_af_preferredBundleID");
}

id objc_msgSend__afbulletinForBBBulletin_forFeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afbulletinForBBBulletin:forFeed:");
}

id objc_msgSend__alarmAceObjectFromAlarm_withProximity_inDeviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alarmAceObjectFromAlarm:withProximity:inDeviceContext:");
}

id objc_msgSend__alignToRotationCadence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alignToRotationCadence:");
}

id objc_msgSend__allAnchorsFromRequest_andResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allAnchorsFromRequest:andResponse:");
}

id objc_msgSend__allUsersBySharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 _allUsersBySharedUserID];
}

id objc_msgSend__allowExplicitContentSettingForUser_forHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowExplicitContentSettingForUser:forHome:");
}

id objc_msgSend__allowVoiceIdentificationForThisUser_iCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowVoiceIdentificationForThisUser:iCloudAltDSID:completion:");
}

id objc_msgSend__allowWhitelistedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowWhitelistedCommands:");
}

id objc_msgSend__amosSADomainObjectCancel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectCancel:completion:");
}

id objc_msgSend__amosSADomainObjectCommit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectCommit:completion:");
}

id objc_msgSend__amosSADomainObjectCreate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectCreate:completion:");
}

id objc_msgSend__amosSADomainObjectDelete_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectDelete:completion:");
}

id objc_msgSend__amosSADomainObjectPunchOut_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectPunchOut:completion:");
}

id objc_msgSend__amosSADomainObjectRetrieve_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectRetrieve:completion:");
}

id objc_msgSend__amosSADomainObjectUpdate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_amosSADomainObjectUpdate:completion:");
}

id objc_msgSend__analyticsListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_analyticsListenerShouldAcceptNewConnection:");
}

id objc_msgSend__analyticsObservationListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_analyticsObservationListenerShouldAcceptNewConnection:");
}

id objc_msgSend__announceIncomingCallRequestInfoFromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_announceIncomingCallRequestInfoFromRequest:");
}

id objc_msgSend__announceNotificationRequestInfoFromNotificationRequest_previousRequest_synchronousBurstIndex_isMediaPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_announceNotificationRequestInfoFromNotificationRequest:previousRequest:synchronousBurstIndex:isMediaPlaying:");
}

id objc_msgSend__announceNotificationRequestTypeForNotification_appID_platform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_announceNotificationRequestTypeForNotification:appID:platform:");
}

id objc_msgSend__announceOnDeviceSpeakerAllowedForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_announceOnDeviceSpeakerAllowedForRequest:");
}

id objc_msgSend__announcementPlatform(void *a1, const char *a2, ...)
{
  return _[a1 _announcementPlatform];
}

id objc_msgSend__announcementRequestFromRemoteAnnouncementRequest_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_announcementRequestFromRemoteAnnouncementRequest:withCompletion:");
}

id objc_msgSend__answerAndHangUpIntentsSupportedByBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_answerAndHangUpIntentsSupportedByBundleID:");
}

id objc_msgSend__answerHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_answerHandler:completion:");
}

id objc_msgSend__appInfoWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appInfoWithBundleID:");
}

id objc_msgSend__appMetaDataForAppProxy_clientIdentifier_syncSlots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appMetaDataForAppProxy:clientIdentifier:syncSlots:");
}

id objc_msgSend__appMetaDataListFromVocabSources_appIdentifyingInfoList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appMetaDataListFromVocabSources:appIdentifyingInfoList:");
}

id objc_msgSend__appendExperimentsFromEnvironment_toExperimentInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendExperimentsFromEnvironment:toExperimentInfos:");
}

id objc_msgSend__approximatePreviousTTSInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_approximatePreviousTTSInterval:");
}

id objc_msgSend__areRequiredAssetsMissing(void *a1, const char *a2, ...)
{
  return _[a1 _areRequiredAssetsMissing];
}

id objc_msgSend__assetManager(void *a1, const char *a2, ...)
{
  return _[a1 _assetManager];
}

id objc_msgSend__assistantFailedForReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_assistantFailedForReason:error:");
}

id objc_msgSend__attachPersonaIdIfNeeded_aceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attachPersonaIdIfNeeded:aceCommand:");
}

id objc_msgSend__attachToSession(void *a1, const char *a2, ...)
{
  return _[a1 _attachToSession];
}

id objc_msgSend__attendingServiceClient(void *a1, const char *a2, ...)
{
  return _[a1 _attendingServiceClient];
}

id objc_msgSend__audioRouteDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioRouteDidChange:");
}

id objc_msgSend__audioSessionAssertionServiceListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioSessionAssertionServiceListenerShouldAcceptNewConnection:");
}

id objc_msgSend__augmentUserPropertiesWithHomeInfoForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_augmentUserPropertiesWithHomeInfoForUser:");
}

id objc_msgSend__authDataToSign(void *a1, const char *a2, ...)
{
  return _[a1 _authDataToSign];
}

id objc_msgSend__authenticationDisabled(void *a1, const char *a2, ...)
{
  return _[a1 _authenticationDisabled];
}

id objc_msgSend__authenticationFailed(void *a1, const char *a2, ...)
{
  return _[a1 _authenticationFailed];
}

id objc_msgSend__authenticator(void *a1, const char *a2, ...)
{
  return _[a1 _authenticator];
}

id objc_msgSend__awdRecordTimeToFirstWord(void *a1, const char *a2, ...)
{
  return _[a1 _awdRecordTimeToFirstWord];
}

id objc_msgSend__awdRequestEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_awdRequestEnd:");
}

id objc_msgSend__awdRequestStart(void *a1, const char *a2, ...)
{
  return _[a1 _awdRequestStart];
}

id objc_msgSend__awdSessionEnd(void *a1, const char *a2, ...)
{
  return _[a1 _awdSessionEnd];
}

id objc_msgSend__awdSessionStart(void *a1, const char *a2, ...)
{
  return _[a1 _awdSessionStart];
}

id objc_msgSend__backgroundContextWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundContextWithObjects:");
}

id objc_msgSend__badStateError(void *a1, const char *a2, ...)
{
  return _[a1 _badStateError];
}

id objc_msgSend__bargeInModes(void *a1, const char *a2, ...)
{
  return _[a1 _bargeInModes];
}

id objc_msgSend__bargeInTimeThresholdForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bargeInTimeThresholdForType:");
}

id objc_msgSend__beginAudioFileIOTransactionForReason_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginAudioFileIOTransactionForReason:session:");
}

id objc_msgSend__beginAudioSessionOnInRangeRemoteDevicesForReason_effectiveDate_expirationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginAudioSessionOnInRangeRemoteDevicesForReason:effectiveDate:expirationDuration:");
}

id objc_msgSend__beginRemoteExecutionContextForCommand_fromPeer_withRemoteExecutionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginRemoteExecutionContextForCommand:fromPeer:withRemoteExecutionInfo:");
}

id objc_msgSend__beginSpeechRecognitionTransactionForReason_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginSpeechRecognitionTransactionForReason:session:");
}

id objc_msgSend__broadcastCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastCommand:");
}

id objc_msgSend__broadcastInEarDetectionStateChangesFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastInEarDetectionStateChangesFrom:to:");
}

id objc_msgSend__broadcastRouteAndAuthenticationCapability(void *a1, const char *a2, ...)
{
  return _[a1 _broadcastRouteAndAuthenticationCapability];
}

id objc_msgSend__broadcastSiriInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastSiriInfo:");
}

id objc_msgSend__buildCacheOfWhaServiceSupportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 _buildCacheOfWhaServiceSupportedCommands];
}

id objc_msgSend__buildConfigurationsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _buildConfigurationsByIdentifier];
}

id objc_msgSend__buildContext(void *a1, const char *a2, ...)
{
  return _[a1 _buildContext];
}

id objc_msgSend__buildDailySelfTriggerSuppressionMetrics(void *a1, const char *a2, ...)
{
  return _[a1 _buildDailySelfTriggerSuppressionMetrics];
}

id objc_msgSend__buildDailyVoiceTriggerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildDailyVoiceTriggerMetrics:");
}

id objc_msgSend__buildFliteredInfoDictionaryFromBundleURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildFliteredInfoDictionaryFromBundleURL:");
}

id objc_msgSend__buildOfflineMetricsMap(void *a1, const char *a2, ...)
{
  return _[a1 _buildOfflineMetricsMap];
}

id objc_msgSend__buildRequestFromMessageType_andMessagePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildRequestFromMessageType:andMessagePayload:");
}

id objc_msgSend__buildResponse(void *a1, const char *a2, ...)
{
  return _[a1 _buildResponse];
}

id objc_msgSend__buildServerConfigurationInfosByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _buildServerConfigurationInfosByIdentifier];
}

id objc_msgSend__bulletinsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _bulletinsDidChange];
}

id objc_msgSend__bundle(void *a1, const char *a2, ...)
{
  return _[a1 _bundle];
}

id objc_msgSend__bundleClassForDomain_commandName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleClassForDomain:commandName:");
}

id objc_msgSend__bundleID_andPath_forXPCConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleID:andPath:forXPCConnection:");
}

id objc_msgSend__bundleServicesCache(void *a1, const char *a2, ...)
{
  return _[a1 _bundleServicesCache];
}

id objc_msgSend__bundleServicesCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleServicesCache:");
}

id objc_msgSend__cacheAndSetKeychainString_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheAndSetKeychainString:forKey:completion:");
}

id objc_msgSend__cacheDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _cacheDirectory];
}

id objc_msgSend__cachedAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _cachedAssistantData];
}

id objc_msgSend__cachedKeychainStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedKeychainStringForKey:");
}

id objc_msgSend__cachedRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 _cachedRestrictions];
}

id objc_msgSend__cachedServerCertificate(void *a1, const char *a2, ...)
{
  return _[a1 _cachedServerCertificate];
}

id objc_msgSend__cachedSharedDataForUniqueId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedSharedDataForUniqueId:");
}

id objc_msgSend__cachedValidationData(void *a1, const char *a2, ...)
{
  return _[a1 _cachedValidationData];
}

id objc_msgSend__calendarIDsForSyncHashes_inCalendars_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calendarIDsForSyncHashes:inCalendars:");
}

id objc_msgSend__callIsLikely(void *a1, const char *a2, ...)
{
  return _[a1 _callIsLikely];
}

id objc_msgSend__canAnnounceInCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 _canAnnounceInCarPlay];
}

id objc_msgSend__canRestartRequest(void *a1, const char *a2, ...)
{
  return _[a1 _canRestartRequest];
}

id objc_msgSend__cancelAWDLClientLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAWDLClientLinkTimer];
}

id objc_msgSend__cancelBestLocationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelBestLocationTimer];
}

id objc_msgSend__cancelCallKeepAlive(void *a1, const char *a2, ...)
{
  return _[a1 _cancelCallKeepAlive];
}

id objc_msgSend__cancelCallNotificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelCallNotificationTimer];
}

id objc_msgSend__cancelCrossDeviceRequestOperationsForLocalRequestWithId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCrossDeviceRequestOperationsForLocalRequestWithId:");
}

id objc_msgSend__cancelCrossDeviceRequestOperationsForRemoteRequest(void *a1, const char *a2, ...)
{
  return _[a1 _cancelCrossDeviceRequestOperationsForRemoteRequest];
}

id objc_msgSend__cancelCurrentRequestForReason_andError_successorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCurrentRequestForReason:andError:successorInfo:");
}

id objc_msgSend__cancelLocalRecognitionIfRequired(void *a1, const char *a2, ...)
{
  return _[a1 _cancelLocalRecognitionIfRequired];
}

id objc_msgSend__cancelLocationSLATimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelLocationSLATimer];
}

id objc_msgSend__cancelLocationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelLocationTimer];
}

id objc_msgSend__cancelNowPlayingCoalescingTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelNowPlayingCoalescingTimer];
}

id objc_msgSend__cancelOtherSessionRequests_forRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelOtherSessionRequests:forRefId:");
}

id objc_msgSend__cancelRecordingWithError_suppressAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelRecordingWithError:suppressAlert:");
}

id objc_msgSend__cancelSaveTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelSaveTimer];
}

id objc_msgSend__cancelSessionManager(void *a1, const char *a2, ...)
{
  return _[a1 _cancelSessionManager];
}

id objc_msgSend__cancelStaleNetworkTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelStaleNetworkTimer];
}

id objc_msgSend__cancelSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelSynchronously:");
}

id objc_msgSend__cancelTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTimer];
}

id objc_msgSend__cancelTimerForMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelTimerForMessage:");
}

id objc_msgSend__cancelVoiceTriggerSyncTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelVoiceTriggerSyncTimer];
}

id objc_msgSend__cancelWatchdogTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelWatchdogTimer];
}

id objc_msgSend__candidateAnnounceNotificationTypesFromApp_withIntentIDs_notificationContentType_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_candidateAnnounceNotificationTypesFromApp:withIntentIDs:notificationContentType:onPlatform:");
}

id objc_msgSend__changeCurrentStateToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeCurrentStateToState:");
}

id objc_msgSend__changeHeadphoneListeningMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeHeadphoneListeningMode:completion:");
}

id objc_msgSend__checkAndDisableVoiceIDIfRequired(void *a1, const char *a2, ...)
{
  return _[a1 _checkAndDisableVoiceIDIfRequired];
}

id objc_msgSend__checkAssetsStatusForIntervalRecording(void *a1, const char *a2, ...)
{
  return _[a1 _checkAssetsStatusForIntervalRecording];
}

id objc_msgSend__checkBuddyState(void *a1, const char *a2, ...)
{
  return _[a1 _checkBuddyState];
}

id objc_msgSend__checkCompanionIdentifierStatus(void *a1, const char *a2, ...)
{
  return _[a1 _checkCompanionIdentifierStatus];
}

id objc_msgSend__checkMeDevice(void *a1, const char *a2, ...)
{
  return _[a1 _checkMeDevice];
}

id objc_msgSend__classForPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classForPlatform:");
}

id objc_msgSend__cleanUpConnection(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpConnection];
}

id objc_msgSend__cleanUpDelegateInfo(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpDelegateInfo];
}

id objc_msgSend__cleanUpDeviceProxies(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpDeviceProxies];
}

id objc_msgSend__cleanUpForFailureCommandWithRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpForFailureCommandWithRefId:");
}

id objc_msgSend__cleanUpMessageWaitContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpMessageWaitContext:");
}

id objc_msgSend__cleanUpPostFileOperationErrors(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpPostFileOperationErrors];
}

id objc_msgSend__cleanUpRecordZoneSubscriptionsTimers(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpRecordZoneSubscriptionsTimers];
}

id objc_msgSend__cleanUpRecordZonesAndSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpRecordZonesAndSubscriptions];
}

id objc_msgSend__cleanUpWirelessSplitterProxy(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpWirelessSplitterProxy];
}

id objc_msgSend__cleanupAudioRouteOnMainThread(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupAudioRouteOnMainThread];
}

id objc_msgSend__cleanupCacheDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupCacheDirectory];
}

id objc_msgSend__cleanupOnDemandClientLinkToContextCollector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupOnDemandClientLinkToContextCollector:");
}

id objc_msgSend__clearAccount(void *a1, const char *a2, ...)
{
  return _[a1 _clearAccount];
}

id objc_msgSend__clearAllExecutionDevices(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllExecutionDevices];
}

id objc_msgSend__clearCompletionState(void *a1, const char *a2, ...)
{
  return _[a1 _clearCompletionState];
}

id objc_msgSend__clearContext(void *a1, const char *a2, ...)
{
  return _[a1 _clearContext];
}

id objc_msgSend__clearContextAndStartDictationSessionWithLanguageCode_dictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearContextAndStartDictationSessionWithLanguageCode:dictationOptions:");
}

id objc_msgSend__clearCurrentNotificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearCurrentNotificationTimer];
}

id objc_msgSend__clearLimbo(void *a1, const char *a2, ...)
{
  return _[a1 _clearLimbo];
}

id objc_msgSend__clearNotificationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearNotificationWithIdentifier:");
}

id objc_msgSend__clearOutstandingSearchIds(void *a1, const char *a2, ...)
{
  return _[a1 _clearOutstandingSearchIds];
}

id objc_msgSend__clearPropagationStatusFromLocalStorage(void *a1, const char *a2, ...)
{
  return _[a1 _clearPropagationStatusFromLocalStorage];
}

id objc_msgSend__clearProximityDiscoveryLink(void *a1, const char *a2, ...)
{
  return _[a1 _clearProximityDiscoveryLink];
}

id objc_msgSend__clearQueuedLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 _clearQueuedLanguageCode];
}

id objc_msgSend__clearQueuedOutputVoice(void *a1, const char *a2, ...)
{
  return _[a1 _clearQueuedOutputVoice];
}

id objc_msgSend__clearRequestCommands(void *a1, const char *a2, ...)
{
  return _[a1 _clearRequestCommands];
}

id objc_msgSend__clearRequestDelegateState(void *a1, const char *a2, ...)
{
  return _[a1 _clearRequestDelegateState];
}

id objc_msgSend__clearRequestState(void *a1, const char *a2, ...)
{
  return _[a1 _clearRequestState];
}

id objc_msgSend__clearSendBuffer(void *a1, const char *a2, ...)
{
  return _[a1 _clearSendBuffer];
}

id objc_msgSend__clearSpeechDelegateState(void *a1, const char *a2, ...)
{
  return _[a1 _clearSpeechDelegateState];
}

id objc_msgSend__clearSyncNeededFlagsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSyncNeededFlagsForKeys:");
}

id objc_msgSend__clearTriggerlessUserReplyTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearTriggerlessUserReplyTimer];
}

id objc_msgSend__clearXPCConnection(void *a1, const char *a2, ...)
{
  return _[a1 _clearXPCConnection];
}

id objc_msgSend__clientListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientListenerShouldAcceptNewConnection:");
}

id objc_msgSend__close(void *a1, const char *a2, ...)
{
  return _[a1 _close];
}

id objc_msgSend__closeNetworkConnection(void *a1, const char *a2, ...)
{
  return _[a1 _closeNetworkConnection];
}

id objc_msgSend__closePeerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _closePeerConnection];
}

id objc_msgSend__collectorDeviceIdentifiersWithFlags(void *a1, const char *a2, ...)
{
  return _[a1 _collectorDeviceIdentifiersWithFlags];
}

id objc_msgSend__combineUUIDsWithUuid1_uuid2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combineUUIDsWithUuid1:uuid2:");
}

id objc_msgSend__commandMap(void *a1, const char *a2, ...)
{
  return _[a1 _commandMap];
}

id objc_msgSend__commandRefsOrIsCurrentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandRefsOrIsCurrentRequest:");
}

id objc_msgSend__commandRequiresServerConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandRequiresServerConnection:");
}

id objc_msgSend__commandRequiresSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandRequiresSync:");
}

id objc_msgSend__commandTimes(void *a1, const char *a2, ...)
{
  return _[a1 _commandTimes];
}

id objc_msgSend__commandsForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandsForDomain:");
}

id objc_msgSend__companionDevice(void *a1, const char *a2, ...)
{
  return _[a1 _companionDevice];
}

id objc_msgSend__companionLinkDeviceForHkIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkDeviceForHkIdentifier:");
}

id objc_msgSend__companionLinkDeviceForPeer_allowsDeviceCircleLookup_allowsAWDLFallback_error_logDiscoveryContextFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkDeviceForPeer:allowsDeviceCircleLookup:allowsAWDLFallback:error:logDiscoveryContextFor:");
}

id objc_msgSend__companionLinkDeviceForPeer_allowsDeviceCircleLookup_logDiscoveryContextFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkDeviceForPeer:allowsDeviceCircleLookup:logDiscoveryContextFor:");
}

id objc_msgSend__companionLinkDeviceForUniqueIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkDeviceForUniqueIDSIdentifier:");
}

id objc_msgSend__companionLinkDeviceForUniqueIDSIdentifier_allowsAWDLFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkDeviceForUniqueIDSIdentifier:allowsAWDLFallback:");
}

id objc_msgSend__companionPeer(void *a1, const char *a2, ...)
{
  return _[a1 _companionPeer];
}

id objc_msgSend__completeNotificationSearch_bulletins_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeNotificationSearch:bulletins:completion:");
}

id objc_msgSend__completeNotificationsWithSuccess_forReason_shouldEmitInstrumentationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeNotificationsWithSuccess:forReason:shouldEmitInstrumentationEvent:");
}

id objc_msgSend__completeRequestForCurrentDelegate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeRequestForCurrentDelegate:error:");
}

id objc_msgSend__computeLeeway_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeLeeway:");
}

id objc_msgSend__computeMode(void *a1, const char *a2, ...)
{
  return _[a1 _computeMode];
}

id objc_msgSend__computeModeForiOS(void *a1, const char *a2, ...)
{
  return _[a1 _computeModeForiOS];
}

id objc_msgSend__computeSecondsSinceBirth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeSecondsSinceBirth:");
}

id objc_msgSend__computeSecondsSinceBirth_forTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeSecondsSinceBirth:forTimeInterval:");
}

id objc_msgSend__computeShouldSpeak(void *a1, const char *a2, ...)
{
  return _[a1 _computeShouldSpeak];
}

id objc_msgSend__confidenceScoreForSharedUserID_expectedSpeakerSharedUserID_expectedSpeakerConfidenceScore_confidenceScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_confidenceScoreForSharedUserID:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:confidenceScores:");
}

id objc_msgSend__configureRapportLinkAndReconnectNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureRapportLinkAndReconnectNow:");
}

id objc_msgSend__configureWithCurrentASBD(void *a1, const char *a2, ...)
{
  return _[a1 _configureWithCurrentASBD];
}

id objc_msgSend__configuredContextLink(void *a1, const char *a2, ...)
{
  return _[a1 _configuredContextLink];
}

id objc_msgSend__configuredLocalContextStoreWithInstanceContext_rapportLink_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configuredLocalContextStoreWithInstanceContext:rapportLink:queue:");
}

id objc_msgSend__configuredRemoteContextStoreWithRapportLink_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configuredRemoteContextStoreWithRapportLink:queue:");
}

id objc_msgSend__connectToPeripherals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToPeripherals:");
}

id objc_msgSend__connectedDeviceProxies(void *a1, const char *a2, ...)
{
  return _[a1 _connectedDeviceProxies];
}

id objc_msgSend__connection(void *a1, const char *a2, ...)
{
  return _[a1 _connection];
}

id objc_msgSend__connectionErrorIsRedirect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionErrorIsRedirect:");
}

id objc_msgSend__connectionErrorIsTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionErrorIsTimeout:");
}

id objc_msgSend__connectionErrorSuggestsConnectionPolicyReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionErrorSuggestsConnectionPolicyReset:");
}

id objc_msgSend__connectionInfoWithPreferWWAN_skipPeer_skipPeerError_useWiFiHint_forceReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionInfoWithPreferWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:");
}

id objc_msgSend__connectionInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 _connectionInterrupted];
}

id objc_msgSend__connectionInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 _connectionInvalidated];
}

id objc_msgSend__connectionIsWWAN(void *a1, const char *a2, ...)
{
  return _[a1 _connectionIsWWAN];
}

id objc_msgSend__connectionMetricsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionMetricsWithCompletion:");
}

id objc_msgSend__connectionOpened(void *a1, const char *a2, ...)
{
  return _[a1 _connectionOpened];
}

id objc_msgSend__connectionStartTime(void *a1, const char *a2, ...)
{
  return _[a1 _connectionStartTime];
}

id objc_msgSend__connectionToOSMService(void *a1, const char *a2, ...)
{
  return _[a1 _connectionToOSMService];
}

id objc_msgSend__connectionURL(void *a1, const char *a2, ...)
{
  return _[a1 _connectionURL];
}

id objc_msgSend__connectionURLHostname(void *a1, const char *a2, ...)
{
  return _[a1 _connectionURLHostname];
}

id objc_msgSend__contactForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contactForCall:");
}

id objc_msgSend__contextLinkMessageOptions(void *a1, const char *a2, ...)
{
  return _[a1 _contextLinkMessageOptions];
}

id objc_msgSend__contextManager(void *a1, const char *a2, ...)
{
  return _[a1 _contextManager];
}

id objc_msgSend__context_acknowledgeBulletinForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_acknowledgeBulletinForObject:");
}

id objc_msgSend__context_bundleIdHasSupportForCarPlayRequiredMessageIntents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_bundleIdHasSupportForCarPlayRequiredMessageIntents:");
}

id objc_msgSend__context_clearContextWithClearSiriKitContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_clearContextWithClearSiriKitContext:");
}

id objc_msgSend__context_deviceState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_deviceState");
}

id objc_msgSend__context_fetchApplicationContextForApplicationInfos_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_fetchApplicationContextForApplicationInfos:completion:");
}

id objc_msgSend__context_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_reset");
}

id objc_msgSend__context_setSTApplicationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_setSTApplicationContext:");
}

id objc_msgSend__context_updateContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_context_updateContext");
}

id objc_msgSend__continueAuthWithCertificateData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueAuthWithCertificateData:");
}

id objc_msgSend__continueAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 _continueAuthentication];
}

id objc_msgSend__continuePendingSpeechRequestFromTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continuePendingSpeechRequestFromTimestamp:");
}

id objc_msgSend__continueSessionInitWithValidationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueSessionInitWithValidationData:");
}

id objc_msgSend__continueSync(void *a1, const char *a2, ...)
{
  return _[a1 _continueSync];
}

id objc_msgSend__convertDataToScaledUInt32_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertDataToScaledUInt32:");
}

id objc_msgSend__convertEmbeddedRequestIds_originalCommand_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertEmbeddedRequestIds:originalCommand:session:");
}

id objc_msgSend__convertPCMDataForFingerprinting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertPCMDataForFingerprinting:");
}

id objc_msgSend__countQueuedEventRecordsWithCriteria_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countQueuedEventRecordsWithCriteria:withCompletion:");
}

id objc_msgSend__countVoiceProfiles(void *a1, const char *a2, ...)
{
  return _[a1 _countVoiceProfiles];
}

id objc_msgSend__createAndSaveFixedDeviceId(void *a1, const char *a2, ...)
{
  return _[a1 _createAndSaveFixedDeviceId];
}

id objc_msgSend__createAndTestAndSetDefaultUserEphemeralId_expectedValue_expectedValueWasCreatedBySyncPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndTestAndSetDefaultUserEphemeralId:expectedValue:expectedValueWasCreatedBySyncPath:");
}

id objc_msgSend__createAnnounceInHomeRequestFromSKIAnnouncePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAnnounceInHomeRequestFromSKIAnnouncePayload:");
}

id objc_msgSend__createAnnounceIncomingCallRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAnnounceIncomingCallRequest:");
}

id objc_msgSend__createAnnounceWorkoutReminderRequestFromSKIAnnouncePayload_announceNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAnnounceWorkoutReminderRequestFromSKIAnnouncePayload:announceNotificationRequest:");
}

id objc_msgSend__createAnnounceWorkoutVoiceFeedbackRequestFromSKIAnnouncePayload_skiAnnouncePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAnnounceWorkoutVoiceFeedbackRequestFromSKIAnnouncePayload:skiAnnouncePayload:");
}

id objc_msgSend__createAssistant(void *a1, const char *a2, ...)
{
  return _[a1 _createAssistant];
}

id objc_msgSend__createAssistantLocallyIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAssistantLocallyIfNeeded:");
}

id objc_msgSend__createBBObserverWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBBObserverWithQueue:");
}

id objc_msgSend__createCacheDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _createCacheDirectory];
}

id objc_msgSend__createDIMEphemeralIdentifiersEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDIMEphemeralIdentifiersEvent:");
}

id objc_msgSend__createDIMEphemeralToAggregationIdentifierMapEvent(void *a1, const char *a2, ...)
{
  return _[a1 _createDIMEphemeralToAggregationIdentifierMapEvent];
}

id objc_msgSend__createDefaultRequestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDefaultRequestContextData:");
}

id objc_msgSend__createDeviceAuthenticationSessionForVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDeviceAuthenticationSessionForVersion:");
}

id objc_msgSend__createDeviceContextUpdateOperationForParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDeviceContextUpdateOperationForParticipation:");
}

id objc_msgSend__createDeviceInfoOperationForParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDeviceInfoOperationForParticipation:");
}

id objc_msgSend__createDeviceWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDeviceWithAddress:");
}

id objc_msgSend__createDeviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDeviceWithUID:");
}

id objc_msgSend__createEmptyANCClientEventWithMetadataForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEmptyANCClientEventWithMetadataForRequest:");
}

id objc_msgSend__createExperimentForExperimentConfiguration_experimentIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createExperimentForExperimentConfiguration:experimentIdentifier:");
}

id objc_msgSend__createFileAssetRecordWithDictionary_zone_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createFileAssetRecordWithDictionary:zone:version:");
}

id objc_msgSend__createHomeEphemeralIdWithHomeSeed_withCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHomeEphemeralIdWithHomeSeed:withCreationTime:");
}

id objc_msgSend__createKeyValueRecordsWithDictionary_mirror_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createKeyValueRecordsWithDictionary:mirror:");
}

id objc_msgSend__createMockServerIfNeededAndSetActiveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMockServerIfNeededAndSetActiveWithCompletion:");
}

id objc_msgSend__createNewXPCWrapper(void *a1, const char *a2, ...)
{
  return _[a1 _createNewXPCWrapper];
}

id objc_msgSend__createPeerInfoUpdateOperationForParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPeerInfoUpdateOperationForParticipation:");
}

id objc_msgSend__createPerformRemoteAnnoucementRequestFromNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPerformRemoteAnnoucementRequestFromNotificationRequest:");
}

id objc_msgSend__createPublishOperationForParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPublishOperationForParticipation:");
}

id objc_msgSend__createRecordZone_shared_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRecordZone:shared:");
}

id objc_msgSend__createRecordZoneSubscriptionWithZoneID_name_recordTypes_container_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRecordZoneSubscriptionWithZoneID:name:recordTypes:container:completion:");
}

id objc_msgSend__createRecordZoneWithID_shared_onMirror_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRecordZoneWithID:shared:onMirror:completion:");
}

id objc_msgSend__createRecordsWithDictionary_forZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRecordsWithDictionary:forZoneInfo:");
}

id objc_msgSend__createRequestInfoUpdateOperationForParticipation_forTurnId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRequestInfoUpdateOperationForParticipation:forTurnId:");
}

id objc_msgSend__createRequestLinkInfoFromUUID_component_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRequestLinkInfoFromUUID:component:");
}

id objc_msgSend__createRootExecutionContextForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRootExecutionContextForRequestID:");
}

id objc_msgSend__createStartServerRequestWithStartRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStartServerRequestWithStartRequest:");
}

id objc_msgSend__createUnavailableError(void *a1, const char *a2, ...)
{
  return _[a1 _createUnavailableError];
}

id objc_msgSend__createUserEphemeralIdWithUserSeed_withCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createUserEphemeralIdWithUserSeed:withCreationTime:");
}

id objc_msgSend__crossDeviceCommandExecutionEndedEvent_actionResult_halId_contextProximityPairs_homeKitTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossDeviceCommandExecutionEndedEvent:actionResult:halId:contextProximityPairs:homeKitTarget:");
}

id objc_msgSend__crossDeviceCommandExecutionFailedEvent_action_halId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossDeviceCommandExecutionFailedEvent:action:halId:");
}

id objc_msgSend__crossDeviceCommandExecutionStartedEvent_halId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossDeviceCommandExecutionStartedEvent:halId:");
}

id objc_msgSend__crossPlatformUnifiedMeContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:");
}

id objc_msgSend__currentAccessory(void *a1, const char *a2, ...)
{
  return _[a1 _currentAccessory];
}

id objc_msgSend__currentAccessoryInfo(void *a1, const char *a2, ...)
{
  return _[a1 _currentAccessoryInfo];
}

id objc_msgSend__currentAnchor(void *a1, const char *a2, ...)
{
  return _[a1 _currentAnchor];
}

id objc_msgSend__currentClient(void *a1, const char *a2, ...)
{
  return _[a1 _currentClient];
}

id objc_msgSend__currentConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 _currentConnectionType];
}

id objc_msgSend__currentHome(void *a1, const char *a2, ...)
{
  return _[a1 _currentHome];
}

id objc_msgSend__currentHomeInfo(void *a1, const char *a2, ...)
{
  return _[a1 _currentHomeInfo];
}

id objc_msgSend__currentHour(void *a1, const char *a2, ...)
{
  return _[a1 _currentHour];
}

id objc_msgSend__currentRequest(void *a1, const char *a2, ...)
{
  return _[a1 _currentRequest];
}

id objc_msgSend__currentRouteIsHandsFree(void *a1, const char *a2, ...)
{
  return _[a1 _currentRouteIsHandsFree];
}

id objc_msgSend__currentSNConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 _currentSNConnectionType];
}

id objc_msgSend__currentSpeechCaptureSource(void *a1, const char *a2, ...)
{
  return _[a1 _currentSpeechCaptureSource];
}

id objc_msgSend__currentState(void *a1, const char *a2, ...)
{
  return _[a1 _currentState];
}

id objc_msgSend__currentTime(void *a1, const char *a2, ...)
{
  return _[a1 _currentTime];
}

id objc_msgSend__currentUserActivityUUIDWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentUserActivityUUIDWithOptions:completionHandler:");
}

id objc_msgSend__daemonDidLaunchWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_daemonDidLaunchWithContext:");
}

id objc_msgSend__daemonWillShutdown(void *a1, const char *a2, ...)
{
  return _[a1 _daemonWillShutdown];
}

id objc_msgSend__dataDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataDidUpdate:");
}

id objc_msgSend__dataSourceInfoWithProximity_deviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataSourceInfoWithProximity:deviceContext:");
}

id objc_msgSend__databasePath(void *a1, const char *a2, ...)
{
  return _[a1 _databasePath];
}

id objc_msgSend__datastoreManager(void *a1, const char *a2, ...)
{
  return _[a1 _datastoreManager];
}

id objc_msgSend__datastoreManagerFor_bundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_datastoreManagerFor:bundlePath:");
}

id objc_msgSend__dateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _dateFormatter];
}

id objc_msgSend__deactivateCarPlayNotificationAnnouncementRequestForReason_notification_sourceAppId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deactivateCarPlayNotificationAnnouncementRequestForReason:notification:sourceAppId:completion:");
}

id objc_msgSend__deactivateCurrentAnnouncementRequestForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deactivateCurrentAnnouncementRequestForReason:");
}

id objc_msgSend__deactivateForReason_source_event_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deactivateForReason:source:event:completion:");
}

id objc_msgSend__deactivateWorkoutReminderAnnouncementWithId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deactivateWorkoutReminderAnnouncementWithId:");
}

id objc_msgSend__decrementAndTestExecutionCount(void *a1, const char *a2, ...)
{
  return _[a1 _decrementAndTestExecutionCount];
}

id objc_msgSend__defaultATVUser(void *a1, const char *a2, ...)
{
  return _[a1 _defaultATVUser];
}

id objc_msgSend__defaultStoreSpecificKeyForName_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultStoreSpecificKeyForName:key:");
}

id objc_msgSend__defaultStoreSpecificKeyPrefixForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultStoreSpecificKeyPrefixForName:");
}

id objc_msgSend__delayedCommandHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _delayedCommandHandlers];
}

id objc_msgSend__delayedcontextCommandHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _delayedcontextCommandHandlers];
}

id objc_msgSend__delete(void *a1, const char *a2, ...)
{
  return _[a1 _delete];
}

id objc_msgSend__deleteEventRecordsBeforeOrEqualToTimestamp_deliveryStream_eventStreamUID_streamSpeechId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:streamSpeechId:error:");
}

id objc_msgSend__deleteEventRecordsFromStartTime_toEndTime_eventStreamUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEventRecordsFromStartTime:toEndTime:eventStreamUID:error:");
}

id objc_msgSend__deleteEventRecordsWithRecordIDs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEventRecordsWithRecordIDs:error:");
}

id objc_msgSend__deleteEverythingOnBehalfOf_withDataStorageManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEverythingOnBehalfOf:withDataStorageManager:");
}

id objc_msgSend__deleteHomeMemberShipsFromCloud_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteHomeMemberShipsFromCloud:");
}

id objc_msgSend__deleteLegacyOfflineMetricsFiles(void *a1, const char *a2, ...)
{
  return _[a1 _deleteLegacyOfflineMetricsFiles];
}

id objc_msgSend__deleteRecordZoneWithZoneID_qualityOfService_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteRecordZoneWithZoneID:qualityOfService:completion:");
}

id objc_msgSend__deleteRecordZoneWithZoneInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteRecordZoneWithZoneInfo:completion:");
}

id objc_msgSend__deleteSQLiteRecordsWithCriterion_inTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSQLiteRecordsWithCriterion:inTable:");
}

id objc_msgSend__deleteSiriAudioDataOnDevice(void *a1, const char *a2, ...)
{
  return _[a1 _deleteSiriAudioDataOnDevice];
}

id objc_msgSend__deleteSiriHistoryOnDeviceOnDestroyAssistant(void *a1, const char *a2, ...)
{
  return _[a1 _deleteSiriHistoryOnDeviceOnDestroyAssistant];
}

id objc_msgSend__deleteSiriHistoryWithContext_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSiriHistoryWithContext:withCompletion:");
}

id objc_msgSend__deleteUserData(void *a1, const char *a2, ...)
{
  return _[a1 _deleteUserData];
}

id objc_msgSend__deliverSerializedWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deliverSerializedWrapper:");
}

id objc_msgSend__describeSAMultiUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_describeSAMultiUserInfo:");
}

id objc_msgSend__destination(void *a1, const char *a2, ...)
{
  return _[a1 _destination];
}

id objc_msgSend__destinationIDForDeviceAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationIDForDeviceAssistantIdentifier:");
}

id objc_msgSend__destinationIDForDeviceHomeKitAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationIDForDeviceHomeKitAccessoryIdentifier:");
}

id objc_msgSend__destinationIDForDeviceIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationIDForDeviceIDSIdentifier:");
}

id objc_msgSend__destinationIDForPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationIDForPeerInfo:");
}

id objc_msgSend__destinationsForPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationsForPeers:");
}

id objc_msgSend__destroyRootExecutionContextForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destroyRootExecutionContextForRequestID:");
}

id objc_msgSend__detachFromSession(void *a1, const char *a2, ...)
{
  return _[a1 _detachFromSession];
}

id objc_msgSend__detector(void *a1, const char *a2, ...)
{
  return _[a1 _detector];
}

id objc_msgSend__deviceAggregationIdNamespace(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAggregationIdNamespace];
}

id objc_msgSend__deviceConnectionClosedErrorWithUnderlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceConnectionClosedErrorWithUnderlyingError:");
}

id objc_msgSend__deviceContextToVendForPrivacyClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceContextToVendForPrivacyClass:");
}

id objc_msgSend__deviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfo];
}

id objc_msgSend__deviceIsLocked(void *a1, const char *a2, ...)
{
  return _[a1 _deviceIsLocked];
}

id objc_msgSend__deviceProxies(void *a1, const char *a2, ...)
{
  return _[a1 _deviceProxies];
}

id objc_msgSend__deviceProxyWithAddress_createsIfAbsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceProxyWithAddress:createsIfAbsent:");
}

id objc_msgSend__deviceProxyWithUID_createsIfAbsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceProxyWithUID:createsIfAbsent:");
}

id objc_msgSend__deviceRouter(void *a1, const char *a2, ...)
{
  return _[a1 _deviceRouter];
}

id objc_msgSend__deviceSyncCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 _deviceSyncCoordinator];
}

id objc_msgSend__deviceUnlockSignalEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _deviceUnlockSignalEnabled];
}

id objc_msgSend__deviceWithAddress_createsIfAbsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceWithAddress:createsIfAbsent:");
}

id objc_msgSend__deviceWithUID_createsIfAbsent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceWithUID:createsIfAbsent:");
}

id objc_msgSend__devicesMatchingDescriptions_capabilitiesTuples_proximityMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_devicesMatchingDescriptions:capabilitiesTuples:proximityMap:");
}

id objc_msgSend__devicesWithAvailablePHSAssetsForLanguage_iCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_devicesWithAvailablePHSAssetsForLanguage:iCloudAltDSID:completion:");
}

id objc_msgSend__diagnosticsManager(void *a1, const char *a2, ...)
{
  return _[a1 _diagnosticsManager];
}

id objc_msgSend__dictationIsAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _dictationIsAllowed];
}

id objc_msgSend__dictationListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictationListenerShouldAcceptNewConnection:");
}

id objc_msgSend__dictationSessionDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 _dictationSessionDidComplete];
}

id objc_msgSend__dictationWillStartWithLanguageCode_options_speechOptions_xpcconnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictationWillStartWithLanguageCode:options:speechOptions:xpcconnection:");
}

id objc_msgSend__didAlreadyAcceptResultCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didAlreadyAcceptResultCandidate:");
}

id objc_msgSend__didEstablishNetworkConnectionForProvider_initialPayload_ofLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:");
}

id objc_msgSend__didReadRSSI_forPeripheral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReadRSSI:forPeripheral:");
}

id objc_msgSend__didStopListening(void *a1, const char *a2, ...)
{
  return _[a1 _didStopListening];
}

id objc_msgSend__didUpdateContext(void *a1, const char *a2, ...)
{
  return _[a1 _didUpdateContext];
}

id objc_msgSend__directInvocationContextForSpeechRequestOptions_textToSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_directInvocationContextForSpeechRequestOptions:textToSpeechEnabled:");
}

id objc_msgSend__dismissFiringItemsWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissFiringItemsWithOptions:");
}

id objc_msgSend__dismissTCCDialogIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _dismissTCCDialogIfNeeded];
}

id objc_msgSend__dispatchAndRemovePostCommandHandlingBlocksForCommandId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchAndRemovePostCommandHandlingBlocksForCommandId:requestId:");
}

id objc_msgSend__dispatchCallbackForProcessedData_error_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchCallbackForProcessedData:error:completion:");
}

id objc_msgSend__dispatchCallbackForProcessedDataMap_errorMap_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchCallbackForProcessedDataMap:errorMap:completion:");
}

id objc_msgSend__disqualifiedDevices(void *a1, const char *a2, ...)
{
  return _[a1 _disqualifiedDevices];
}

id objc_msgSend__doDelayedClientWorkIfAny_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doDelayedClientWorkIfAny:");
}

id objc_msgSend__doMetricsBookkeepingForNetworkStreamStart(void *a1, const char *a2, ...)
{
  return _[a1 _doMetricsBookkeepingForNetworkStreamStart];
}

id objc_msgSend__doMetricsBookkeepingForPeerStreamsStart(void *a1, const char *a2, ...)
{
  return _[a1 _doMetricsBookkeepingForPeerStreamsStart];
}

id objc_msgSend__doesHomeKitAccessorySupportMUX_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doesHomeKitAccessorySupportMUX:");
}

id objc_msgSend__domainObjectCache(void *a1, const char *a2, ...)
{
  return _[a1 _domainObjectCache];
}

id objc_msgSend__donateCallStateContextWithSnapshot_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_donateCallStateContextWithSnapshot:completion:");
}

id objc_msgSend__donateMediaPlaybackContextWithSnapshot_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_donateMediaPlaybackContextWithSnapshot:date:");
}

id objc_msgSend__donateSystemStateContextWithSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_donateSystemStateContextWithSnapshot:");
}

id objc_msgSend__downloadMorphunAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadMorphunAssets:");
}

id objc_msgSend__dumpAssistantState(void *a1, const char *a2, ...)
{
  return _[a1 _dumpAssistantState];
}

id objc_msgSend__dumpOnDeviceAnalyticsBiomeStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dumpOnDeviceAnalyticsBiomeStream:");
}

id objc_msgSend__dumpSiriOnDeviceAnalyticsBiomeStreams(void *a1, const char *a2, ...)
{
  return _[a1 _dumpSiriOnDeviceAnalyticsBiomeStreams];
}

id objc_msgSend__dumpStateForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dumpStateForReason:");
}

id objc_msgSend__durationInMillisecondsForDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_durationInMillisecondsForDuration:");
}

id objc_msgSend__durationInMillisecondsFromTime_toTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_durationInMillisecondsFromTime:toTime:");
}

id objc_msgSend__emitAnnounceEnablementEventFromSectionInfo_siriLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitAnnounceEnablementEventFromSectionInfo:siriLocale:");
}

id objc_msgSend__emitDeviceDynamicContextForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitDeviceDynamicContextForRequest:");
}

id objc_msgSend__emitDevicesDiscoveredEventForRequestId_deviceTypeCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitDevicesDiscoveredEventForRequestId:deviceTypeCount:");
}

id objc_msgSend__emitInstrumentationEventsForRequest_currentlyPlayingMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitInstrumentationEventsForRequest:currentlyPlayingMediaType:");
}

id objc_msgSend__emitUODAssetPreparedEventWithLanguage_elapsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitUODAssetPreparedEventWithLanguage:elapsed:");
}

id objc_msgSend__emptyVerificationSyncAnchorForKey_appBundleID_syncSlotName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emptyVerificationSyncAnchorForKey:appBundleID:syncSlotName:");
}

id objc_msgSend__endAudioFileIOTransactionForReason_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endAudioFileIOTransactionForReason:session:");
}

id objc_msgSend__endAudioSessionOnAllRemoteDevicesForReason_effectiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endAudioSessionOnAllRemoteDevicesForReason:effectiveDate:");
}

id objc_msgSend__endAudioSessionOnOutOfRangeRemoteDevicesForReason_effectiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endAudioSessionOnOutOfRangeRemoteDevicesForReason:effectiveDate:");
}

id objc_msgSend__endRemoteExecutionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endRemoteExecutionContext:");
}

id objc_msgSend__endSessionIfIdle(void *a1, const char *a2, ...)
{
  return _[a1 _endSessionIfIdle];
}

id objc_msgSend__endSessionTransactionForReason_session_isSpeechTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endSessionTransactionForReason:session:isSpeechTransaction:");
}

id objc_msgSend__endSpeechRecognitionTransactionForReason_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endSpeechRecognitionTransactionForReason:session:");
}

id objc_msgSend__endSpeechRequestForCommand_withError_suppressAlert_secureOfflineOnlyDictation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:");
}

id objc_msgSend__endUpdateLocalDeviceContext(void *a1, const char *a2, ...)
{
  return _[a1 _endUpdateLocalDeviceContext];
}

id objc_msgSend__ensureBackgroundContextSentToServer(void *a1, const char *a2, ...)
{
  return _[a1 _ensureBackgroundContextSentToServer];
}

id objc_msgSend__enumerateAlarmSnapshotsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateAlarmSnapshotsUsingBlock:");
}

id objc_msgSend__enumerateConnectionsAsServiceDelegates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateConnectionsAsServiceDelegates:completion:");
}

id objc_msgSend__enumerateDeviceContextConnectionsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateDeviceContextConnectionsUsingBlock:");
}

id objc_msgSend__enumerateDeviceContextsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateDeviceContextsUsingBlock:");
}

id objc_msgSend__enumerateKeepAliveListUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateKeepAliveListUsingBlock:");
}

id objc_msgSend__enumerateListenersUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateListenersUsingBlock:");
}

id objc_msgSend__enumerateObserversUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateObserversUsingBlock:");
}

id objc_msgSend__enumerateTimerSnapshotsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateTimerSnapshotsUsingBlock:");
}

id objc_msgSend__errorIsRecoverableForPrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsRecoverableForPrimary:");
}

id objc_msgSend__errorIsRecoverableForSecondary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsRecoverableForSecondary:");
}

id objc_msgSend__errorIsUserNotPresentOnTV_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsUserNotPresentOnTV:");
}

id objc_msgSend__establishConnectionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _establishConnectionIfNeeded];
}

id objc_msgSend__establishEagerStreamPair(void *a1, const char *a2, ...)
{
  return _[a1 _establishEagerStreamPair];
}

id objc_msgSend__establishNetworkConnectionToURL_connectionId_withPOP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_establishNetworkConnectionToURL:connectionId:withPOP:");
}

id objc_msgSend__establishNetworkConnectionToURL_connectionId_withPOP_countAgainstFallbacksAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:");
}

id objc_msgSend__establishPeerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _establishPeerConnection];
}

id objc_msgSend__evaluateResultObjects(void *a1, const char *a2, ...)
{
  return _[a1 _evaluateResultObjects];
}

id objc_msgSend__exchangeData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exchangeData:error:");
}

id objc_msgSend__executeBestLocationCompletionWithLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBestLocationCompletionWithLocation:");
}

id objc_msgSend__executeBestLocationCompletionWithLocation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBestLocationCompletionWithLocation:error:");
}

id objc_msgSend__executeBestLocationCompletionWithLocationErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBestLocationCompletionWithLocationErrorWithCode:");
}

id objc_msgSend__executeBlockWithCurrentlyRoutedDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBlockWithCurrentlyRoutedDevice:withCompletion:");
}

id objc_msgSend__executeCommand_onPeer_executionContext_throughOnDemandConnectionToContextCollector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeCommand:onPeer:executionContext:throughOnDemandConnectionToContextCollector:completion:");
}

id objc_msgSend__executeCommandThroughOnDemandClientLinkToContextCollector_onPeer_debugID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeCommandThroughOnDemandClientLinkToContextCollector:onPeer:debugID:completion:");
}

id objc_msgSend__executeDelegateBlockOnAllConnections_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeDelegateBlockOnAllConnections:completion:");
}

id objc_msgSend__executeRemoteRequest_onPeer_allowsRelay_allowFallbackOnAWDL_throughProxyDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeRemoteRequest:onPeer:allowsRelay:allowFallbackOnAWDL:throughProxyDevice:completion:");
}

id objc_msgSend__executeZoneFetchCompletionBlock_zoneInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeZoneFetchCompletionBlock:zoneInfo:completion:");
}

id objc_msgSend__executionContextMatchingExecutionInfo_fallbackRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executionContextMatchingExecutionInfo:fallbackRequestID:");
}

id objc_msgSend__executionDevicesForLocalRequestWithId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executionDevicesForLocalRequestWithId:");
}

id objc_msgSend__experimentForExperimentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_experimentForExperimentConfiguration:");
}

id objc_msgSend__experimentGroupHashForExperimentConfiguration_experimentIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_experimentGroupHashForExperimentConfiguration:experimentIdentifier:");
}

id objc_msgSend__experimentIdentifierForConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_experimentIdentifierForConfigurationIdentifier:");
}

id objc_msgSend__experimentInfoFromExperiment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_experimentInfoFromExperiment:");
}

id objc_msgSend__experimentOverrideForExperimentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_experimentOverrideForExperimentConfiguration:");
}

id objc_msgSend__experimentationAnalyticsManager(void *a1, const char *a2, ...)
{
  return _[a1 _experimentationAnalyticsManager];
}

id objc_msgSend__expirationDaysFrom_withCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expirationDaysFrom:withCalendar:");
}

id objc_msgSend__extractRecord_atPath_fileManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractRecord:atPath:fileManager:");
}

id objc_msgSend__failureMetricsContextDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _failureMetricsContextDictionary];
}

id objc_msgSend__fallbackConfigurationForEndedExperimentWithIdentifier_experimentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fallbackConfigurationForEndedExperimentWithIdentifier:experimentState:");
}

id objc_msgSend__fallbackWithSafetyNet(void *a1, const char *a2, ...)
{
  return _[a1 _fallbackWithSafetyNet];
}

id objc_msgSend__fetchAllAppSourcesForSyncingWithCustomVocabInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:");
}

id objc_msgSend__fetchAndSendApplicationContextForApplicationInfos_fetchedOrderedContextDictionaries_applicationContexts_refID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContextDictionaries:applicationContexts:refID:");
}

id objc_msgSend__fetchAssetStatusForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAssetStatusForLanguage:");
}

id objc_msgSend__fetchBluetoothState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchBluetoothState];
}

id objc_msgSend__fetchCachedServerConfigurationForConfigurationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCachedServerConfigurationForConfigurationInfo:");
}

id objc_msgSend__fetchChangesFromZone_serverChangeToken_useSharedDatabase_activity_container_mirror_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesFromZone:serverChangeToken:useSharedDatabase:activity:container:mirror:completion:");
}

id objc_msgSend__fetchChangesWithZoneInfo_retryCount_useSharedDatabase_activity_container_mirror_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesWithZoneInfo:retryCount:useSharedDatabase:activity:container:mirror:");
}

id objc_msgSend__fetchChangesWithZoneInfo_retryCount_useSharedDatabase_activity_container_mirror_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesWithZoneInfo:retryCount:useSharedDatabase:activity:container:mirror:completion:");
}

id objc_msgSend__fetchChangesWithZoneInfo_useSharedDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesWithZoneInfo:useSharedDatabase:");
}

id objc_msgSend__fetchChangesWithZoneInfo_useSharedDatabase_activity_mirror_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesWithZoneInfo:useSharedDatabase:activity:mirror:");
}

id objc_msgSend__fetchChangesWithZoneInfo_useSharedDatabase_mirror_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchChangesWithZoneInfo:useSharedDatabase:mirror:");
}

id objc_msgSend__fetchComputedModeAndUpdateRequestDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _fetchComputedModeAndUpdateRequestDelegate];
}

id objc_msgSend__fetchConnectedAudioAccessoryState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchConnectedAudioAccessoryState];
}

id objc_msgSend__fetchConnectedDeviceAddresses(void *a1, const char *a2, ...)
{
  return _[a1 _fetchConnectedDeviceAddresses];
}

id objc_msgSend__fetchContextFromCollectorAndForceFetchingFromDevicesWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchContextFromCollectorAndForceFetchingFromDevicesWithPeerInfo:completion:");
}

id objc_msgSend__fetchContextFromCollectorThroughOnDemandConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchContextFromCollectorThroughOnDemandConnection:");
}

id objc_msgSend__fetchContextFromDeviceWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchContextFromDeviceWithPeerInfo:completion:");
}

id objc_msgSend__fetchContextSnapshotForCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 _fetchContextSnapshotForCurrentRequest];
}

id objc_msgSend__fetchCurrentDeviceContextTuplesIfNecessaryWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCurrentDeviceContextTuplesIfNecessaryWithCompletion:");
}

id objc_msgSend__fetchCurrentUserIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCurrentUserIDWithCompletion:");
}

id objc_msgSend__fetchDeviceCapabilitiesForDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDeviceCapabilitiesForDevices:completion:");
}

id objc_msgSend__fetchDeviceCapabilitiesForDevices_fromCollectorWithIndex_existingCapabilities_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDeviceCapabilitiesForDevices:fromCollectorWithIndex:existingCapabilities:completion:");
}

id objc_msgSend__fetchDeviceInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDeviceInfoWithCompletion:");
}

id objc_msgSend__fetchDictationAllowedStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDictationAllowedStatus:");
}

id objc_msgSend__fetchDictationHIPAAMDMStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDictationHIPAAMDMStatus:");
}

id objc_msgSend__fetchDictionaryWithFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchDictionaryWithFileURL:");
}

id objc_msgSend__fetchEventRecords_afterTimestamp_eventStreamUID_streamSpeechId_deliveryStream_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchEventRecords:afterTimestamp:eventStreamUID:streamSpeechId:deliveryStream:error:");
}

id objc_msgSend__fetchEventRecordsCreatedAfterDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchEventRecordsCreatedAfterDate:error:");
}

id objc_msgSend__fetchEventStreamUIDsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchEventStreamUIDsWithError:");
}

id objc_msgSend__fetchFromDataSourceIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _fetchFromDataSourceIfNecessary];
}

id objc_msgSend__fetchHeadphoneInEarDetectionStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHeadphoneInEarDetectionStateWithCompletion:");
}

id objc_msgSend__fetchHeadphoneListeningModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHeadphoneListeningModeWithCompletion:");
}

id objc_msgSend__fetchIdsForHomeWithCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIdsForHomeWithCreationTime:");
}

id objc_msgSend__fetchIdsForUser_creationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIdsForUser:creationTime:");
}

id objc_msgSend__fetchInEarDetectionStateAndStartObservingFromSourceForBTAddress_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchInEarDetectionStateAndStartObservingFromSourceForBTAddress:withCompletion:");
}

id objc_msgSend__fetchInitialState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchInitialState];
}

id objc_msgSend__fetchKnownAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _fetchKnownAccounts];
}

id objc_msgSend__fetchKnownAccountsWithMultiUserService_userSeedStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchKnownAccountsWithMultiUserService:userSeedStream:");
}

id objc_msgSend__fetchLatestDaysWithTwoAssistantSpeechRequestsPerWeek(void *a1, const char *a2, ...)
{
  return _[a1 _fetchLatestDaysWithTwoAssistantSpeechRequestsPerWeek];
}

id objc_msgSend__fetchLostModeState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchLostModeState];
}

id objc_msgSend__fetchManifest_language_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchManifest:language:completion:");
}

id objc_msgSend__fetchManifest_legacy_language_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchManifest:legacy:language:completion:");
}

id objc_msgSend__fetchMappedMeCard(void *a1, const char *a2, ...)
{
  return _[a1 _fetchMappedMeCard];
}

id objc_msgSend__fetchOrCreateFixedDeviceId(void *a1, const char *a2, ...)
{
  return _[a1 _fetchOrCreateFixedDeviceId];
}

id objc_msgSend__fetchPairedBluetoothDevicesFromSourceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPairedBluetoothDevicesFromSourceWithCompletion:");
}

id objc_msgSend__fetchPairedDeviceAddresses(void *a1, const char *a2, ...)
{
  return _[a1 _fetchPairedDeviceAddresses];
}

id objc_msgSend__fetchProximityObservationsFromCollectorsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchProximityObservationsFromCollectorsWithCompletion:");
}

id objc_msgSend__fetchSmartSiriVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSmartSiriVolume:");
}

id objc_msgSend__fetchSmartSiriVolumeForType_forceFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSmartSiriVolumeForType:forceFetch:");
}

id objc_msgSend__fetchStateForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchStateForReason:");
}

id objc_msgSend__fetchSyncFlagsOnDisk(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSyncFlagsOnDisk];
}

id objc_msgSend__fetchSystemVolumeForCategory_andMode_audioRoute_withName_usingSystemController_volume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSystemVolumeForCategory:andMode:audioRoute:withName:usingSystemController:volume:");
}

id objc_msgSend__fetchSystemVolumes(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSystemVolumes];
}

id objc_msgSend__fetchTimerWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchTimerWithID:completion:");
}

id objc_msgSend__fetchTimersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchTimersWithCompletion:");
}

id objc_msgSend__fetchUODStatusForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUODStatusForLanguageCode:");
}

id objc_msgSend__fetchUserActivityWithUUID_intervalToWaitForDocumentSynchronizationToComplete_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUserActivityWithUUID:intervalToWaitForDocumentSynchronizationToComplete:completionHandler:");
}

id objc_msgSend__fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:");
}

id objc_msgSend__fetchWirelessSplitterSessionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchWirelessSplitterSessionInfoWithCompletion:");
}

id objc_msgSend__fillInSyncAndPrimeTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillInSyncAndPrimeTokens:");
}

id objc_msgSend__filterUnsupportedCommands_inGroup_onSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterUnsupportedCommands:inGroup:onSession:");
}

id objc_msgSend__filteredApplicationInfosForLockedStark_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filteredApplicationInfosForLockedStark:");
}

id objc_msgSend__finalizeWithContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeWithContext:error:");
}

id objc_msgSend__finalizeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeWithError:");
}

id objc_msgSend__finalizeWithResponseMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeWithResponseMessage:");
}

id objc_msgSend__findContextCollectorIn_withIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findContextCollectorIn:withIDSIdentifier:");
}

id objc_msgSend__findPairedPhoneIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findPairedPhoneIn:");
}

id objc_msgSend__findTargetDeviceInDeviceCircleLocalPeer_remotePeers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findTargetDeviceInDeviceCircleLocalPeer:remotePeers:completion:");
}

id objc_msgSend__finishRunningCurrentSpeakableWithResult_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishRunningCurrentSpeakableWithResult:error:");
}

id objc_msgSend__finishSync(void *a1, const char *a2, ...)
{
  return _[a1 _finishSync];
}

id objc_msgSend__finishVerificationWithKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishVerificationWithKeys:");
}

id objc_msgSend__firstChanceServiceForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstChanceServiceForCommand:");
}

id objc_msgSend__flowServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 _flowServiceListener];
}

id objc_msgSend__forceAudioSessionActiveWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceAudioSessionActiveWithContext:completion:");
}

id objc_msgSend__forceCloudSyncedUserDownload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceCloudSyncedUserDownload:");
}

id objc_msgSend__forceFastDormancy(void *a1, const char *a2, ...)
{
  return _[a1 _forceFastDormancy];
}

id objc_msgSend__forceMultiUserSync_download_retryCount_activity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceMultiUserSync:download:retryCount:activity:completion:");
}

id objc_msgSend__forwardExecuteCommandToDevice_message_from_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardExecuteCommandToDevice:message:from:completion:");
}

id objc_msgSend__forwardToContextCollectorMessage_From_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardToContextCollectorMessage:From:completion:");
}

id objc_msgSend__forwardToDevice_message_From_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardToDevice:message:From:completion:");
}

id objc_msgSend__framesPerSecondForOpportuneSpeakListeningType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_framesPerSecondForOpportuneSpeakListeningType:");
}

id objc_msgSend__gatherIdentifiersForMultiUser(void *a1, const char *a2, ...)
{
  return _[a1 _gatherIdentifiersForMultiUser];
}

id objc_msgSend__generalizeTimeIntervalsForPrivacy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generalizeTimeIntervalsForPrivacy:");
}

id objc_msgSend__generateAWDMetricsForConnectionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateAWDMetricsForConnectionError:");
}

id objc_msgSend__generateAnalyticsContextWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateAnalyticsContextWithError:");
}

id objc_msgSend__generateAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _generateAssistantData];
}

id objc_msgSend__generateDeviceUserWithHomeUserUUID_sharedUserId_loggableSharedUserId_adaccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateDeviceUserWithHomeUserUUID:sharedUserId:loggableSharedUserId:adaccount:");
}

id objc_msgSend__generateLocationDeniedResponseForGetRequestOriginCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLocationDeniedResponseForGetRequestOriginCommand:completion:");
}

id objc_msgSend__generateLocationDisabledResponseForGetRequestOriginCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLocationDisabledResponseForGetRequestOriginCommand:completion:");
}

id objc_msgSend__generateLocationTimedOutResponseForGetRequestOriginCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLocationTimedOutResponseForGetRequestOriginCommand:completion:");
}

id objc_msgSend__generateLocationUnknownResponseForGetRequestOriginCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLocationUnknownResponseForGetRequestOriginCommand:completion:");
}

id objc_msgSend__generateResponseForGetRequestOriginCommand_withUnshiftedLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:");
}

id objc_msgSend__generateTemporaryFileURL(void *a1, const char *a2, ...)
{
  return _[a1 _generateTemporaryFileURL];
}

id objc_msgSend__generateVersion1HomeMembershipRecordKeyFromHomeID_homeUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateVersion1HomeMembershipRecordKeyFromHomeID:homeUserID:");
}

id objc_msgSend__generateVersion2HomeMembershipRecordKeyFromHomeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateVersion2HomeMembershipRecordKeyFromHomeID:");
}

id objc_msgSend__generatedBundleServicesCache(void *a1, const char *a2, ...)
{
  return _[a1 _generatedBundleServicesCache];
}

id objc_msgSend__getAccessoryCategoryForExecutionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAccessoryCategoryForExecutionInfo:");
}

id objc_msgSend__getActivityDispatcher(void *a1, const char *a2, ...)
{
  return _[a1 _getActivityDispatcher];
}

id objc_msgSend__getAdaptiveVolumeUserIntent(void *a1, const char *a2, ...)
{
  return _[a1 _getAdaptiveVolumeUserIntent];
}

id objc_msgSend__getAdjustedSiriOutputVolumeLevelForAudioRoute_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAdjustedSiriOutputVolumeLevelForAudioRoute:withCompletion:");
}

id objc_msgSend__getAggregatedProximityObservationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAggregatedProximityObservationsWithCompletion:");
}

id objc_msgSend__getAnnounceCarPlayStatus(void *a1, const char *a2, ...)
{
  return _[a1 _getAnnounceCarPlayStatus];
}

id objc_msgSend__getAnnounceIsCarPlayMuted(void *a1, const char *a2, ...)
{
  return _[a1 _getAnnounceIsCarPlayMuted];
}

id objc_msgSend__getAnnounceIsProximityCardSeen(void *a1, const char *a2, ...)
{
  return _[a1 _getAnnounceIsProximityCardSeen];
}

id objc_msgSend__getAnnounceIsReplyWithoutConfirmationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getAnnounceIsReplyWithoutConfirmationEnabled];
}

id objc_msgSend__getAnnounceReceivedEventFromAnnouncementRequest_nowPlayingMediaType_shouldLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAnnounceReceivedEventFromAnnouncementRequest:nowPlayingMediaType:shouldLog:");
}

id objc_msgSend__getAnnounceReceivedTier1EventFromAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAnnounceReceivedTier1EventFromAnnouncementRequest:");
}

id objc_msgSend__getAnnouncementRequestFailureReasonFromError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAnnouncementRequestFailureReasonFromError:");
}

id objc_msgSend__getAppleIntelligenceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getAppleIntelligenceProperties];
}

id objc_msgSend__getBestLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getBestLocationWithCompletion:");
}

id objc_msgSend__getBooleanValueForFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getBooleanValueForFactor:");
}

id objc_msgSend__getCarDNDModeWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCarDNDModeWithReply:");
}

id objc_msgSend__getChatGPTAccountType(void *a1, const char *a2, ...)
{
  return _[a1 _getChatGPTAccountType];
}

id objc_msgSend__getConfigurationsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _getConfigurationsByIdentifier];
}

id objc_msgSend__getContext(void *a1, const char *a2, ...)
{
  return _[a1 _getContext];
}

id objc_msgSend__getContextForAppInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getContextForAppInfo:completion:");
}

id objc_msgSend__getCurrentAnnouncementRoute(void *a1, const char *a2, ...)
{
  return _[a1 _getCurrentAnnouncementRoute];
}

id objc_msgSend__getCurrentUserActivityOnQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCurrentUserActivityOnQueue:completion:");
}

id objc_msgSend__getCurrentlyConnectedHeadphonesANCAudioDevice(void *a1, const char *a2, ...)
{
  return _[a1 _getCurrentlyConnectedHeadphonesANCAudioDevice];
}

id objc_msgSend__getDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDataWithCompletion:");
}

id objc_msgSend__getDataWithPBCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDataWithPBCompletion:");
}

id objc_msgSend__getDefaultAssistantIdForAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDefaultAssistantIdForAssistantId:");
}

id objc_msgSend__getDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDeviceInfo:");
}

id objc_msgSend__getDeviceOS(void *a1, const char *a2, ...)
{
  return _[a1 _getDeviceOS];
}

id objc_msgSend__getDeviceType(void *a1, const char *a2, ...)
{
  return _[a1 _getDeviceType];
}

id objc_msgSend__getDevicesWithContexts_passingTest_capabilitesPassingTest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDevicesWithContexts:passingTest:capabilitesPassingTest:completion:");
}

id objc_msgSend__getDictationLanguages_options_speechOptions_delegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDictationLanguages:options:speechOptions:delegate:completion:");
}

id objc_msgSend__getEnabledDictationLocales(void *a1, const char *a2, ...)
{
  return _[a1 _getEnabledDictationLocales];
}

id objc_msgSend__getEventsDataForStream_numEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getEventsDataForStream:numEvents:");
}

id objc_msgSend__getExecutionIdFromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getExecutionIdFromRequest:");
}

id objc_msgSend__getExperimentStateForServerConfigurationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getExperimentStateForServerConfigurationInfo:");
}

id objc_msgSend__getGenerationsForDataTypes_andPushToDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getGenerationsForDataTypes:andPushToDeviceWithIdentifier:");
}

id objc_msgSend__getGradingOptInStateChanges(void *a1, const char *a2, ...)
{
  return _[a1 _getGradingOptInStateChanges];
}

id objc_msgSend__getHasHomekitHome(void *a1, const char *a2, ...)
{
  return _[a1 _getHasHomekitHome];
}

id objc_msgSend__getHasPairedAppleWatch(void *a1, const char *a2, ...)
{
  return _[a1 _getHasPairedAppleWatch];
}

id objc_msgSend__getHasTvOSDeviceInHome(void *a1, const char *a2, ...)
{
  return _[a1 _getHasTvOSDeviceInHome];
}

id objc_msgSend__getHeySiriHangupEnablementState(void *a1, const char *a2, ...)
{
  return _[a1 _getHeySiriHangupEnablementState];
}

id objc_msgSend__getInputLocale(void *a1, const char *a2, ...)
{
  return _[a1 _getInputLocale];
}

id objc_msgSend__getIntValueForFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getIntValueForFactor:");
}

id objc_msgSend__getIsAdaptiveVolumeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAdaptiveVolumeEnabled];
}

id objc_msgSend__getIsAllowSiriWhenLockedEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAllowSiriWhenLockedEnabled];
}

id objc_msgSend__getIsAlwaysListenForHeySiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAlwaysListenForHeySiriEnabled];
}

id objc_msgSend__getIsAlwaysShowSiriCaptionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAlwaysShowSiriCaptionsEnabled];
}

id objc_msgSend__getIsAlwaysShowSpeechEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAlwaysShowSpeechEnabled];
}

id objc_msgSend__getIsAnnounceCallsEnabledForAnnounceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAnnounceCallsEnabledForAnnounceProperties];
}

id objc_msgSend__getIsAnnounceNotificationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAnnounceNotificationsEnabled];
}

id objc_msgSend__getIsAppleIntelligenceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAppleIntelligenceAvailable];
}

id objc_msgSend__getIsAppleIntelligenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAppleIntelligenceEnabled];
}

id objc_msgSend__getIsAppleIntelligenceHardwareCapable(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAppleIntelligenceHardwareCapable];
}

id objc_msgSend__getIsAssistantEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAssistantEnabled];
}

id objc_msgSend__getIsAtypicalSpeechEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAtypicalSpeechEnabled];
}

id objc_msgSend__getIsAutoPunctuationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAutoPunctuationEnabled];
}

id objc_msgSend__getIsAutomaticallySendMessagesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAutomaticallySendMessagesEnabled];
}

id objc_msgSend__getIsAutomaticallySendMessagesEnabledForCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAutomaticallySendMessagesEnabledForCarPlay];
}

id objc_msgSend__getIsAutomaticallySendMessagesEnabledForHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 _getIsAutomaticallySendMessagesEnabledForHeadphones];
}

id objc_msgSend__getIsChatGPTConfirmationAlwaysRequired(void *a1, const char *a2, ...)
{
  return _[a1 _getIsChatGPTConfirmationAlwaysRequired];
}

id objc_msgSend__getIsChatGPTEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsChatGPTEnabled];
}

id objc_msgSend__getIsChatGPTSetUpPrompts(void *a1, const char *a2, ...)
{
  return _[a1 _getIsChatGPTSetUpPrompts];
}

id objc_msgSend__getIsDictationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsDictationEnabled];
}

id objc_msgSend__getIsEnabledForHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 _getIsEnabledForHeadphones];
}

id objc_msgSend__getIsExternalMicrophoneHSEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsExternalMicrophoneHSEnabled];
}

id objc_msgSend__getIsMteUploadEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsMteUploadEnabled];
}

id objc_msgSend__getIsPermanentOffsetEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsPermanentOffsetEnabled];
}

id objc_msgSend__getIsPersonalDomainsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsPersonalDomainsEnabled];
}

id objc_msgSend__getIsPreciseLocationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsPreciseLocationEnabled];
}

id objc_msgSend__getIsPressSideButtonForSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsPressSideButtonForSiriEnabled];
}

id objc_msgSend__getIsRaiseToSpeakEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsRaiseToSpeakEnabled];
}

id objc_msgSend__getIsServerUserDataSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsServerUserDataSyncEnabled];
}

id objc_msgSend__getIsShowAppsBehindSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsShowAppsBehindSiriEnabled];
}

id objc_msgSend__getIsShowAppsBehindSiriEnabledOnCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 _getIsShowAppsBehindSiriEnabledOnCarPlay];
}

id objc_msgSend__getIsSiriCapableDigitalCarKeyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _getIsSiriCapableDigitalCarKeyAvailable];
}

id objc_msgSend__getIsSiriTryItCompleted(void *a1, const char *a2, ...)
{
  return _[a1 _getIsSiriTryItCompleted];
}

id objc_msgSend__getIsSpokenNotificationsControlCenterModuleEnabledWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getIsSpokenNotificationsControlCenterModuleEnabledWithCompletion:");
}

id objc_msgSend__getIsStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 _getIsStoreDemoMode];
}

id objc_msgSend__getIsTypeToSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsTypeToSiriEnabled];
}

id objc_msgSend__getIsVoiceOverEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _getIsVoiceOverEnabled];
}

id objc_msgSend__getListenForSettings(void *a1, const char *a2, ...)
{
  return _[a1 _getListenForSettings];
}

id objc_msgSend__getLocalRequestWithType_bundle_languageCode_outputVoiceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getLocalRequestWithType:bundle:languageCode:outputVoiceInfo:completion:");
}

id objc_msgSend__getLocationAccessPermission(void *a1, const char *a2, ...)
{
  return _[a1 _getLocationAccessPermission];
}

id objc_msgSend__getLockStateWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getLockStateWithReply:");
}

id objc_msgSend__getModelNumber(void *a1, const char *a2, ...)
{
  return _[a1 _getModelNumber];
}

id objc_msgSend__getMultiUserSetupStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMultiUserSetupStatusWithCompletion:");
}

id objc_msgSend__getNotificationsFromBulletinBoard(void *a1, const char *a2, ...)
{
  return _[a1 _getNotificationsFromBulletinBoard];
}

id objc_msgSend__getODDAdaptiveVolumeProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDAdaptiveVolumeProperties];
}

id objc_msgSend__getODDAnnouncePropertiesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getODDAnnouncePropertiesWithCompletion:");
}

id objc_msgSend__getODDAutoSendMessageProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDAutoSendMessageProperties];
}

id objc_msgSend__getODDCarPlayProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDCarPlayProperties];
}

id objc_msgSend__getODDHeadGestureProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDHeadGestureProperties];
}

id objc_msgSend__getODDHomeKitProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDHomeKitProperties];
}

id objc_msgSend__getODDHomePodProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDHomePodProperties];
}

id objc_msgSend__getODDMultiUserStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getODDMultiUserStateWithCompletion:");
}

id objc_msgSend__getODDOptInProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDOptInProperties];
}

id objc_msgSend__getODDSiriInCallProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDSiriInCallProperties];
}

id objc_msgSend__getODDUserPersonalizationArrayWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getODDUserPersonalizationArrayWithCompletion:");
}

id objc_msgSend__getODDUserPersonalizationForSharedUser_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getODDUserPersonalizationForSharedUser:withCompletion:");
}

id objc_msgSend__getODDVoiceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDVoiceProperties];
}

id objc_msgSend__getODDiOSAccessibilityProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDiOSAccessibilityProperties];
}

id objc_msgSend__getODDiOSDevicePropertiesWithGeneral_assistant_dictation_iOSGeneral_iOSAssistant_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getODDiOSDevicePropertiesWithGeneral:assistant:dictation:iOSGeneral:iOSAssistant:completion:");
}

id objc_msgSend__getODDiOSResponseProperties(void *a1, const char *a2, ...)
{
  return _[a1 _getODDiOSResponseProperties];
}

id objc_msgSend__getOrderedContextDictionaryForTransformedAFApplicationContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getOrderedContextDictionaryForTransformedAFApplicationContext:completion:");
}

id objc_msgSend__getPeripheralStateDescriptionFromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPeripheralStateDescriptionFromState:");
}

id objc_msgSend__getPermanentOffsetFactor(void *a1, const char *a2, ...)
{
  return _[a1 _getPermanentOffsetFactor];
}

id objc_msgSend__getPreheatOptionsForHorseman(void *a1, const char *a2, ...)
{
  return _[a1 _getPreheatOptionsForHorseman];
}

id objc_msgSend__getRouteCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _getRouteCapabilities];
}

id objc_msgSend__getServerConfigurationInfosByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _getServerConfigurationInfosByIdentifier];
}

id objc_msgSend__getSharedDataFromCompanionLinkDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSharedDataFromCompanionLinkDevice:completion:");
}

id objc_msgSend__getSiriDataSharingOptInStatus(void *a1, const char *a2, ...)
{
  return _[a1 _getSiriDataSharingOptInStatus];
}

id objc_msgSend__getSiriInCallEnablementState(void *a1, const char *a2, ...)
{
  return _[a1 _getSiriInCallEnablementState];
}

id objc_msgSend__getSiriOutputVolumeForAudioRoute_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSiriOutputVolumeForAudioRoute:completion:");
}

id objc_msgSend__getSiriPauseTimeState(void *a1, const char *a2, ...)
{
  return _[a1 _getSiriPauseTimeState];
}

id objc_msgSend__getSiriSpeechRate(void *a1, const char *a2, ...)
{
  return _[a1 _getSiriSpeechRate];
}

id objc_msgSend__getSocketFromDevice(void *a1, const char *a2, ...)
{
  return _[a1 _getSocketFromDevice];
}

id objc_msgSend__getSocketFromDeviceForStreamIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSocketFromDeviceForStreamIdentifier:");
}

id objc_msgSend__getStarkModeWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getStarkModeWithReply:");
}

id objc_msgSend__getStoreFrontIdWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getStoreFrontIdWithCompletion:");
}

id objc_msgSend__getSystemLocale(void *a1, const char *a2, ...)
{
  return _[a1 _getSystemLocale];
}

id objc_msgSend__getTimeoutSuspendedWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTimeoutSuspendedWithReply:");
}

id objc_msgSend__getTransformedApplicationContextForContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTransformedApplicationContextForContext:completion:");
}

id objc_msgSend__getUTCOffset(void *a1, const char *a2, ...)
{
  return _[a1 _getUTCOffset];
}

id objc_msgSend__getUserAgentStringForSharedUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getUserAgentStringForSharedUserID:");
}

id objc_msgSend__getVoiceAccentWithVoiceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getVoiceAccentWithVoiceInfo:");
}

id objc_msgSend__getVoiceFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _getVoiceFeedback];
}

id objc_msgSend__getVoiceGenderWithVoiceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getVoiceGenderWithVoiceInfo:");
}

id objc_msgSend__getVoiceNameWithVoiceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getVoiceNameWithVoiceInfo:");
}

id objc_msgSend__getVoiceSettings(void *a1, const char *a2, ...)
{
  return _[a1 _getVoiceSettings];
}

id objc_msgSend__getVoiceTriggerSettings(void *a1, const char *a2, ...)
{
  return _[a1 _getVoiceTriggerSettings];
}

id objc_msgSend__getWatchAuthenticationWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getWatchAuthenticationWithReply:");
}

id objc_msgSend__groupKeyForSyncInfo_domainObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupKeyForSyncInfo:domainObject:");
}

id objc_msgSend__groupOverrideIdentifierForExperimentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupOverrideIdentifierForExperimentConfiguration:");
}

id objc_msgSend__halActionFromAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halActionFromAction:");
}

id objc_msgSend__halActionResultFromActionResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halActionResultFromActionResult:");
}

id objc_msgSend__halDeviceFamilyFromInterfaceIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halDeviceFamilyFromInterfaceIdiom:");
}

id objc_msgSend__halDeviceFromContext_proximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halDeviceFromContext:proximity:");
}

id objc_msgSend__halDevicePowerStateFromSystemStateSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halDevicePowerStateFromSystemStateSnapshot:");
}

id objc_msgSend__halDeviceProximityFromProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halDeviceProximityFromProximity:");
}

id objc_msgSend__halHomeKitTargetFromTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halHomeKitTargetFromTarget:");
}

id objc_msgSend__halMediaPlayerStateFromPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_halMediaPlayerStateFromPlaybackState:");
}

id objc_msgSend__handleAccountStatusChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAccountStatusChange:");
}

id objc_msgSend__handleAceCommandRequest_messageID_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAceCommandRequest:messageID:options:responseHandler:");
}

id objc_msgSend__handleAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAceObject:");
}

id objc_msgSend__handleAcquiredLocalAssertion_isFirst_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAcquiredLocalAssertion:isFirst:");
}

id objc_msgSend__handleAcquiredRemoteAssertion_isFirst_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAcquiredRemoteAssertion:isFirst:");
}

id objc_msgSend__handleAddedLocalAssertion_isFirst_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddedLocalAssertion:isFirst:");
}

id objc_msgSend__handleAggregateContextFetchWithMessage_fromDeviceWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAggregateContextFetchWithMessage:fromDeviceWithPeerInfo:completion:");
}

id objc_msgSend__handleAnnounceIncomingCallRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAnnounceIncomingCallRequest:");
}

id objc_msgSend__handleAnnounceNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAnnounceNotificationRequest:");
}

id objc_msgSend__handleArbitrationParticipationPush_from_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleArbitrationParticipationPush:from:completion:");
}

id objc_msgSend__handleBareRequestCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBareRequestCompleted:");
}

id objc_msgSend__handleBeginAudioSessionRequest_fromDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginAudioSessionRequest:fromDeviceWithID:responseHandler:");
}

id objc_msgSend__handleCallStateDidChangeTo_isDropInCallDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallStateDidChangeTo:isDropInCallDidChange:");
}

id objc_msgSend__handleCloudKitNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCloudKitNotification:");
}

id objc_msgSend__handleCommand_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommand:executionContext:completion:");
}

id objc_msgSend__handleCommand_executionInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommand:executionInfo:completion:");
}

id objc_msgSend__handleCommandAndClientReply_executionContext_commandCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommandAndClientReply:executionContext:commandCompletion:");
}

id objc_msgSend__handleCommandInAMOS_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommandInAMOS:completion:");
}

id objc_msgSend__handleCommandResponse_error_forCommand_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommandResponse:error:forCommand:executionContext:completion:");
}

id objc_msgSend__handleCompanionServiceActiveDevicesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleCompanionServiceActiveDevicesDidChange];
}

id objc_msgSend__handleCompanionServiceReadyStateDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleCompanionServiceReadyStateDidChange];
}

id objc_msgSend__handleConfidenceScores_classification_classifiedUser_unknownUserScore_duration_version_thresholdingType_assetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:");
}

id objc_msgSend__handleContextSnapshotPush_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContextSnapshotPush:completion:");
}

id objc_msgSend__handleDeviceCapabilitiesFetch_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceCapabilitiesFetch:fromPeer:");
}

id objc_msgSend__handleDeviceProblemsChangedWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceProblemsChangedWithToken:");
}

id objc_msgSend__handleDidFindDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDidFindDevice:");
}

id objc_msgSend__handleDidInterrupt(void *a1, const char *a2, ...)
{
  return _[a1 _handleDidInterrupt];
}

id objc_msgSend__handleDidInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _handleDidInvalidate];
}

id objc_msgSend__handleDidLoseDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDidLoseDevice:");
}

id objc_msgSend__handleDidUpdateDevice_changes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDidUpdateDevice:changes:");
}

id objc_msgSend__handleDidUpdateLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDidUpdateLocalDevice:");
}

id objc_msgSend__handleEndAudioSessionRequest_fromDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEndAudioSessionRequest:fromDeviceWithID:responseHandler:");
}

id objc_msgSend__handleExecuteCommand_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleExecuteCommand:fromPeer:completion:");
}

id objc_msgSend__handleExecuteRequestOnRemoteWatch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleExecuteRequestOnRemoteWatch:completion:");
}

id objc_msgSend__handleExtractSpeechDataCompleted_inResponseTo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleExtractSpeechDataCompleted:inResponseTo:completion:");
}

id objc_msgSend__handleFoundRemoteDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFoundRemoteDevice:");
}

id objc_msgSend__handleGenericAceCommand_withDelegate_interruptOutstandingRequest_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:");
}

id objc_msgSend__handleGenericConcreteAceCommand_withDelegate_interruptOutstandingRequest_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:");
}

id objc_msgSend__handleGenericIntentRequest_deliveryHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericIntentRequest:deliveryHandler:completionHandler:");
}

id objc_msgSend__handleGetMetricsMessage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetMetricsMessage:context:");
}

id objc_msgSend__handleHomeAnnouncementSnapshotUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleHomeAnnouncementSnapshotUpdate:");
}

id objc_msgSend__handleIgnoredCommand_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIgnoredCommand:executionContext:completion:");
}

id objc_msgSend__handleJSDiscoveryNotificationForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleJSDiscoveryNotificationForDevice:");
}

id objc_msgSend__handleKeepAudioSessionAliveRequest_fromDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKeepAudioSessionAliveRequest:fromDeviceWithID:responseHandler:");
}

id objc_msgSend__handleLastWinRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLastWinRequest:completion:");
}

id objc_msgSend__handleLocalSpeechRecognitionForOfflineSupport_logText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLocalSpeechRecognitionForOfflineSupport:logText:");
}

id objc_msgSend__handleMessage_fromDeviceWithID_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMessage:fromDeviceWithID:replyHandler:");
}

id objc_msgSend__handleMessageResponse_ofType_orError_fromID_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMessageResponse:ofType:orError:fromID:handler:");
}

id objc_msgSend__handleNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewConnection:");
}

id objc_msgSend__handleNextCallbacksForReply_forCommand_forRequestId_withExecutionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:");
}

id objc_msgSend__handleNotificationWithRequiresOpportuneTime_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNotificationWithRequiresOpportuneTime:completion:");
}

id objc_msgSend__handleOnSpeakerDidChangeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleOnSpeakerDidChangeTo:");
}

id objc_msgSend__handlePartialSpeechRecognitionForElapsedTime_WithDelegateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePartialSpeechRecognitionForElapsedTime:WithDelegateBlock:");
}

id objc_msgSend__handlePeersAndSVDCapabilitiesFetch_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePeersAndSVDCapabilitiesFetch:fromPeer:");
}

id objc_msgSend__handlePingWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePingWithCompletion:");
}

id objc_msgSend__handlePlaybackStateDidChangeToState_fromState_onDate_lastPlayingDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackStateDidChangeToState:fromState:onDate:lastPlayingDate:completion:");
}

id objc_msgSend__handleProxyGroupPlayerDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleProxyGroupPlayerDidChangeFrom:to:");
}

id objc_msgSend__handlePullDeltaForDataType_generation_limit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePullDeltaForDataType:generation:limit:completion:");
}

id objc_msgSend__handlePullGenerationsForDataTypes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePullGenerationsForDataTypes:completion:");
}

id objc_msgSend__handlePullSnapshotForDataType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePullSnapshotForDataType:completion:");
}

id objc_msgSend__handlePulledDeltaWithIncrementalChanges_forDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePulledDeltaWithIncrementalChanges:forDataType:");
}

id objc_msgSend__handlePulledSnapshot_forDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePulledSnapshot:forDataType:");
}

id objc_msgSend__handlePushContextMessage_fromDeviceWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePushContextMessage:fromDeviceWithPeerInfo:completion:");
}

id objc_msgSend__handlePushGenerationsByDataType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePushGenerationsByDataType:completion:");
}

id objc_msgSend__handlePushedOrPulledGeneration_forDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePushedOrPulledGeneration:forDataType:");
}

id objc_msgSend__handleQuickStopCommandRoutedFromRemote_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleQuickStopCommandRoutedFromRemote:completion:");
}

id objc_msgSend__handleReestablishMessage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReestablishMessage:context:");
}

id objc_msgSend__handleRelinquishedLocalAssertion_isLast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRelinquishedLocalAssertion:isLast:");
}

id objc_msgSend__handleRelinquishedRemoteAssertion_isLast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRelinquishedRemoteAssertion:isLast:");
}

id objc_msgSend__handleRemoteExecution_peer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteExecution:peer:completion:");
}

id objc_msgSend__handleRemovedLocalAssertion_isLast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemovedLocalAssertion:isLast:");
}

id objc_msgSend__handleRequest_fromDeviceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequest:fromDeviceWithIdentifier:completion:");
}

id objc_msgSend__handleRequestCompletedWithUUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestCompletedWithUUID:error:");
}

id objc_msgSend__handleResponseProtobuf_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResponseProtobuf:forIdentifier:");
}

id objc_msgSend__handleSADOCommandIfServiceDoesNotUseAMOS_allowInterposing_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:");
}

id objc_msgSend__handleSVDCapabilitiesFetch_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSVDCapabilitiesFetch:fromPeer:");
}

id objc_msgSend__handleSendCommands_forRequestDelegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommands:forRequestDelegate:completion:");
}

id objc_msgSend__handleServiceCommand_afterMyriadDecision_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServiceCommand:afterMyriadDecision:executionContext:completion:");
}

id objc_msgSend__handleServiceCommand_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServiceCommand:executionContext:completion:");
}

id objc_msgSend__handleSleepStateChangedToState_fromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSleepStateChangedToState:fromState:");
}

id objc_msgSend__handleSpeechRecognizedWithDelegateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSpeechRecognizedWithDelegateBlock:");
}

id objc_msgSend__handleSuspendClientEndpointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSuspendClientEndpointer:");
}

id objc_msgSend__handleSystemVolumeChangeForCategory_volume_audioCategory_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSystemVolumeChangeForCategory:volume:audioCategory:reason:");
}

id objc_msgSend__handleUpdatedCurrentOrUpNextDateIntervalForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedCurrentOrUpNextDateIntervalForReason:");
}

id objc_msgSend__handleUpdatedLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedLocalDevice:");
}

id objc_msgSend__handleUpdatedLocalSystemInfoForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedLocalSystemInfoForReason:");
}

id objc_msgSend__handleUpdatedSyncAndTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedSyncAndTokens:");
}

id objc_msgSend__handleValidatedSyncGetAnchorsResponse_forGetAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleValidatedSyncGetAnchorsResponse:forGetAnchors:");
}

id objc_msgSend__handleWakeUpMessage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWakeUpMessage:context:");
}

id objc_msgSend__handleWatchdogTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _handleWatchdogTimeout];
}

id objc_msgSend__handleXPCConnectionInterruption(void *a1, const char *a2, ...)
{
  return _[a1 _handleXPCConnectionInterruption];
}

id objc_msgSend__handleXPCConnectionInvalidation(void *a1, const char *a2, ...)
{
  return _[a1 _handleXPCConnectionInvalidation];
}

id objc_msgSend__handledCommandIdsForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handledCommandIdsForRequestId:");
}

id objc_msgSend__hangUpCurrentCall(void *a1, const char *a2, ...)
{
  return _[a1 _hangUpCurrentCall];
}

id objc_msgSend__hangUpHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hangUpHandler:completion:");
}

id objc_msgSend__hasActiveBestLocationRequest(void *a1, const char *a2, ...)
{
  return _[a1 _hasActiveBestLocationRequest];
}

id objc_msgSend__hasActiveClientOrSyncingOrInCall(void *a1, const char *a2, ...)
{
  return _[a1 _hasActiveClientOrSyncingOrInCall];
}

id objc_msgSend__hasAtleastOneActiveSessionBesides_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasAtleastOneActiveSessionBesides:");
}

id objc_msgSend__hasConnectedPeer(void *a1, const char *a2, ...)
{
  return _[a1 _hasConnectedPeer];
}

id objc_msgSend__hasIncomingCall(void *a1, const char *a2, ...)
{
  return _[a1 _hasIncomingCall];
}

id objc_msgSend__hasOrIsEstablishingNetworkConnection(void *a1, const char *a2, ...)
{
  return _[a1 _hasOrIsEstablishingNetworkConnection];
}

id objc_msgSend__hasOutstandingAnchorsRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasOutstandingAnchorsRequestId:");
}

id objc_msgSend__hasOutstandingRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasOutstandingRequestId:");
}

id objc_msgSend__hasOutstandingSyncChunkId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasOutstandingSyncChunkId:");
}

id objc_msgSend__hasPeerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _hasPeerConnection];
}

id objc_msgSend__hasRemoteExecutionContextForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasRemoteExecutionContextForRequestID:");
}

id objc_msgSend__hasRootExecutionContextForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasRootExecutionContextForRequestID:");
}

id objc_msgSend__hasSiriCapableDeviceInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasSiriCapableDeviceInHome:");
}

id objc_msgSend__haveUsefulness_usefulnessScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_haveUsefulness:usefulnessScore:");
}

id objc_msgSend__headGestureConfigurationForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headGestureConfigurationForRoute:");
}

id objc_msgSend__headGestureMappingFromGestureType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headGestureMappingFromGestureType:");
}

id objc_msgSend__headphoneListeningModeFromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headphoneListeningModeFromDevice:");
}

id objc_msgSend__headphonesAnnouncementRequestCapabilityManager(void *a1, const char *a2, ...)
{
  return _[a1 _headphonesAnnouncementRequestCapabilityManager];
}

id objc_msgSend__headphonesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 _headphonesMonitor];
}

id objc_msgSend__heartBeatFired(void *a1, const char *a2, ...)
{
  return _[a1 _heartBeatFired];
}

id objc_msgSend__hmConnection(void *a1, const char *a2, ...)
{
  return _[a1 _hmConnection];
}

id objc_msgSend__homeEphemeralIdNamespace(void *a1, const char *a2, ...)
{
  return _[a1 _homeEphemeralIdNamespace];
}

id objc_msgSend__homeKitSettingsDidChangeForDeviceOwner(void *a1, const char *a2, ...)
{
  return _[a1 _homeKitSettingsDidChangeForDeviceOwner];
}

id objc_msgSend__homeManager(void *a1, const char *a2, ...)
{
  return _[a1 _homeManager];
}

id objc_msgSend__homeManagerUpdatedHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homeManagerUpdatedHomes:");
}

id objc_msgSend__homeManagerUpdatedHomes_homesToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homeManagerUpdatedHomes:homesToDelete:");
}

id objc_msgSend__homeMembersForPlatform(void *a1, const char *a2, ...)
{
  return _[a1 _homeMembersForPlatform];
}

id objc_msgSend__homeMembershipsFromUnencryptedRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homeMembershipsFromUnencryptedRecords:");
}

id objc_msgSend__homeMembershipsToDelete(void *a1, const char *a2, ...)
{
  return _[a1 _homeMembershipsToDelete];
}

id objc_msgSend__homesWithMultiUserEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _homesWithMultiUserEnabled];
}

id objc_msgSend__homesWithSiriCapableDevices(void *a1, const char *a2, ...)
{
  return _[a1 _homesWithSiriCapableDevices];
}

id objc_msgSend__hostnameOverride(void *a1, const char *a2, ...)
{
  return _[a1 _hostnameOverride];
}

id objc_msgSend__hostnameQAOverride(void *a1, const char *a2, ...)
{
  return _[a1 _hostnameQAOverride];
}

id objc_msgSend__houseKeeperArrived(void *a1, const char *a2, ...)
{
  return _[a1 _houseKeeperArrived];
}

id objc_msgSend__identifierForNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForNotificationRequest:");
}

id objc_msgSend__inEarDetectionStateFromCBDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inEarDetectionStateFromCBDevice:");
}

id objc_msgSend__inEarStatusFromDevicePlacement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inEarStatusFromDevicePlacement:");
}

id objc_msgSend__inFlightVoiceProfilesByUUID(void *a1, const char *a2, ...)
{
  return _[a1 _inFlightVoiceProfilesByUUID];
}

id objc_msgSend__incomingCallSearchHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incomingCallSearchHandler:completion:");
}

id objc_msgSend__incomingCallTypeForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incomingCallTypeForService:");
}

id objc_msgSend__incrementAndTestExecutionCount(void *a1, const char *a2, ...)
{
  return _[a1 _incrementAndTestExecutionCount];
}

id objc_msgSend__infoDictionaryForPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _infoDictionaryForPreferences];
}

id objc_msgSend__informCommandCenter_willPerformLaunchApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_informCommandCenter:willPerformLaunchApp:");
}

id objc_msgSend__informDelegateCannotHandleRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_informDelegateCannotHandleRequest:error:");
}

id objc_msgSend__informDelegateOfError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_informDelegateOfError:");
}

id objc_msgSend__informDelegateWillRetryOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_informDelegateWillRetryOnError:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initConsistencyTimer(void *a1, const char *a2, ...)
{
  return _[a1 _initConsistencyTimer];
}

id objc_msgSend__initHomeDetailsWithProfileUserId_homeInfoManager_multiUserService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initHomeDetailsWithProfileUserId:homeInfoManager:multiUserService:");
}

id objc_msgSend__initWithAnnouncementRequestType_platform_announcementIdentifier_timeOfRequestArrival_startLocalRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithAnnouncementRequestType:platform:announcementIdentifier:timeOfRequestArrival:startLocalRequest:completion:");
}

id objc_msgSend__initWithChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithChannel:");
}

id objc_msgSend__initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithContext:");
}

id objc_msgSend__initWithDataType_view_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithDataType:view:");
}

id objc_msgSend__initWithDelegate_deviceCircleManager_deviceProximityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithDelegate:deviceCircleManager:deviceProximityManager:");
}

id objc_msgSend__initWithDraftMessageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithDraftMessageIdentifier:");
}

id objc_msgSend__initWithInstanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithInstanceContext:");
}

id objc_msgSend__initWithInstanceContext_rapportLink_queue_delegate_deviceCircleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithInstanceContext:rapportLink:queue:delegate:deviceCircleManager:");
}

id objc_msgSend__initWithLocation_extSessionGuid_extSessionGuidCreatedTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithLocation:extSessionGuid:extSessionGuidCreatedTimestamp:");
}

id objc_msgSend__initWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithMessage:");
}

id objc_msgSend__initWithPlaceData_extSessionGuid_extSessionGuidCreatedTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithPlaceData:extSessionGuid:extSessionGuidCreatedTimestamp:");
}

id objc_msgSend__initWithPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithPlatform:");
}

id objc_msgSend__initWithPreferences_ssrManager_homeInfoManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithPreferences:ssrManager:homeInfoManager:");
}

id objc_msgSend__initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithQueue:");
}

id objc_msgSend__initWithQueue_deviceProximityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithQueue:deviceProximityManager:");
}

id objc_msgSend__initWithQueue_donationService_deviceCircleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithQueue:donationService:deviceCircleManager:");
}

id objc_msgSend__initWithQueue_rapportLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithQueue:rapportLink:");
}

id objc_msgSend__initWithRapportLink_queue_deviceCircleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithRapportLink:queue:deviceCircleManager:");
}

id objc_msgSend__initWithServiceIdentifier_listener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithServiceIdentifier:listener:");
}

id objc_msgSend__initWithSettingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithSettingType:");
}

id objc_msgSend__initWithShowUIDuringListening_playAlertBeforeListening_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithShowUIDuringListening:playAlertBeforeListening:");
}

id objc_msgSend__initWithStartLocation_destinationLocation_directionsType_arrivalDate_departureDate_extSessionGuid_extSessionGuidCreatedTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithStartLocation:destinationLocation:directionsType:arrivalDate:departureDate:extSessionGuid:extSessionGuidCreatedTimestamp:");
}

id objc_msgSend__initWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithState:");
}

id objc_msgSend__initWithTriClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithTriClient:");
}

id objc_msgSend__initWithType_location_goal_goalType_userMode_isOpenGoal_skipActivitySetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithType:location:goal:goalType:userMode:isOpenGoal:skipActivitySetup:");
}

id objc_msgSend__initialize(void *a1, const char *a2, ...)
{
  return _[a1 _initialize];
}

id objc_msgSend__initializeInternalState(void *a1, const char *a2, ...)
{
  return _[a1 _initializeInternalState];
}

id objc_msgSend__initializeNewMessageWaitContext(void *a1, const char *a2, ...)
{
  return _[a1 _initializeNewMessageWaitContext];
}

id objc_msgSend__initializeVoiceThresholdsForOpportuneSpeakListeningType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeVoiceThresholdsForOpportuneSpeakListeningType:");
}

id objc_msgSend__initializeZones(void *a1, const char *a2, ...)
{
  return _[a1 _initializeZones];
}

id objc_msgSend__initiateOptimisticEagerStreamFetchRetry(void *a1, const char *a2, ...)
{
  return _[a1 _initiateOptimisticEagerStreamFetchRetry];
}

id objc_msgSend__inlineUpdateCurrentHomeKitHome(void *a1, const char *a2, ...)
{
  return _[a1 _inlineUpdateCurrentHomeKitHome];
}

id objc_msgSend__inlineUpdatePhoneState(void *a1, const char *a2, ...)
{
  return _[a1 _inlineUpdatePhoneState];
}

id objc_msgSend__insertCompanionSpecificDataIntoHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertCompanionSpecificDataIntoHeader:");
}

id objc_msgSend__insertEventRecords_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertEventRecords:error:");
}

id objc_msgSend__insertProximityForRemoteDeviceID_rpProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertProximityForRemoteDeviceID:rpProximity:");
}

id objc_msgSend__intentNeedsPreparation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intentNeedsPreparation:");
}

id objc_msgSend__intents_enumerateObjectsOfClass_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intents_enumerateObjectsOfClass:withBlock:");
}

id objc_msgSend__intents_findAppsWithAnIntentsServiceExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intents_findAppsWithAnIntentsServiceExtension:");
}

id objc_msgSend__interactiveLocalSpeechRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _interactiveLocalSpeechRecognizer];
}

id objc_msgSend__invalidate(void *a1, const char *a2, ...)
{
  return _[a1 _invalidate];
}

id objc_msgSend__invalidateConnection(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateConnection];
}

id objc_msgSend__invokeAllCompletionsWithError(void *a1, const char *a2, ...)
{
  return _[a1 _invokeAllCompletionsWithError];
}

id objc_msgSend__invokeAllCompletionsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeAllCompletionsWithError:");
}

id objc_msgSend__invokeCompletionForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeCompletionForCommand:");
}

id objc_msgSend__invokeCompletionForIdentifier_response_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeCompletionForIdentifier:response:error:");
}

id objc_msgSend__invokeContinueBlockWithKeepGoingArgument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeContinueBlockWithKeepGoingArgument:");
}

id objc_msgSend__invokeMetricsCompletionWithMetrics_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeMetricsCompletionWithMetrics:forIdentifier:");
}

id objc_msgSend__invokeRequestCompletion(void *a1, const char *a2, ...)
{
  return _[a1 _invokeRequestCompletion];
}

id objc_msgSend__invokeRingtoneTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _invokeRingtoneTimeout];
}

id objc_msgSend__invokeSocketCompletionWithCurrentSocketOrError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeSocketCompletionWithCurrentSocketOrError:");
}

id objc_msgSend__isAnnounceNotificationRequest_equalToRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAnnounceNotificationRequest:equalToRequest:");
}

id objc_msgSend__isAppRestrictedAndSiriRelated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAppRestrictedAndSiriRelated:");
}

id objc_msgSend__isAudioAccessoryConnected(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioAccessoryConnected];
}

id objc_msgSend__isBuiltInSpeakerRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isBuiltInSpeakerRoute];
}

id objc_msgSend__isClientBoundCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isClientBoundCommand:");
}

id objc_msgSend__isCloudSyncEnabledForZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCloudSyncEnabledForZone:");
}

id objc_msgSend__isCloudSyncEnabledForZone_accountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCloudSyncEnabledForZone:accountInfo:");
}

id objc_msgSend__isCollectingContext(void *a1, const char *a2, ...)
{
  return _[a1 _isCollectingContext];
}

id objc_msgSend__isCurrentLanguageMultiUserCompatible(void *a1, const char *a2, ...)
{
  return _[a1 _isCurrentLanguageMultiUserCompatible];
}

id objc_msgSend__isDefaultUserAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isDefaultUserAvailable];
}

id objc_msgSend__isDestructive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDestructive:");
}

id objc_msgSend__isDevicePartOfCurrentMediaSystem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDevicePartOfCurrentMediaSystem:");
}

id objc_msgSend__isDeviceSilent(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceSilent];
}

id objc_msgSend__isDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceUnlocked];
}

id objc_msgSend__isEligibleForUserActivityReminders(void *a1, const char *a2, ...)
{
  return _[a1 _isEligibleForUserActivityReminders];
}

id objc_msgSend__isEndingGroupIdentifier_validForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEndingGroupIdentifier:validForConfiguration:");
}

id objc_msgSend__isFauxPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isFauxPeer:");
}

id objc_msgSend__isHearingAidsRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isHearingAidsRoute];
}

id objc_msgSend__isHostingMultiUserLanguage(void *a1, const char *a2, ...)
{
  return _[a1 _isHostingMultiUserLanguage];
}

id objc_msgSend__isInCall(void *a1, const char *a2, ...)
{
  return _[a1 _isInCall];
}

id objc_msgSend__isInStarkMode(void *a1, const char *a2, ...)
{
  return _[a1 _isInStarkMode];
}

id objc_msgSend__isLocalDeviceCollectorCandidate(void *a1, const char *a2, ...)
{
  return _[a1 _isLocalDeviceCollectorCandidate];
}

id objc_msgSend__isMonitoringUnlockActivity(void *a1, const char *a2, ...)
{
  return _[a1 _isMonitoringUnlockActivity];
}

id objc_msgSend__isNavigationActive(void *a1, const char *a2, ...)
{
  return _[a1 _isNavigationActive];
}

id objc_msgSend__isRelevantCancellationCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRelevantCancellationCommand:");
}

id objc_msgSend__isRemoteDeviceCollectorCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRemoteDeviceCollectorCandidate:");
}

id objc_msgSend__isRequestDelaying(void *a1, const char *a2, ...)
{
  return _[a1 _isRequestDelaying];
}

id objc_msgSend__isResumableFirstPartyBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isResumableFirstPartyBundleID:");
}

id objc_msgSend__isResumableThirdPartyGenreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isResumableThirdPartyGenreID:");
}

id objc_msgSend__isScreenEngaged(void *a1, const char *a2, ...)
{
  return _[a1 _isScreenEngaged];
}

id objc_msgSend__isServerBoundCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isServerBoundCommand:");
}

id objc_msgSend__isSiriCapableDigitalCarKeyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _isSiriCapableDigitalCarKeyAvailable];
}

id objc_msgSend__isSteveNoteConnected(void *a1, const char *a2, ...)
{
  return _[a1 _isSteveNoteConnected];
}

id objc_msgSend__isSyncTokenAcceptingAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSyncTokenAcceptingAccessory:");
}

id objc_msgSend__isThirdPartyBTConnected(void *a1, const char *a2, ...)
{
  return _[a1 _isThirdPartyBTConnected];
}

id objc_msgSend__isTrackingUUIDForInFlightVoiceProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTrackingUUIDForInFlightVoiceProfile:");
}

id objc_msgSend__isValidRestrictionsDomainInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidRestrictionsDomainInfo:");
}

id objc_msgSend__isVoiceOverEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isVoiceOverEnabled];
}

id objc_msgSend__isWakeSystemSupportedOnPlatform(void *a1, const char *a2, ...)
{
  return _[a1 _isWakeSystemSupportedOnPlatform];
}

id objc_msgSend__keepAliveLinkToDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keepAliveLinkToDevice:");
}

id objc_msgSend__keepAudioSessionAliveOnRemoteDevicesForReason_expirationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keepAudioSessionAliveOnRemoteDevicesForReason:expirationDuration:");
}

id objc_msgSend__keyForRequestId_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyForRequestId:forSession:");
}

id objc_msgSend__keychainCache(void *a1, const char *a2, ...)
{
  return _[a1 _keychainCache];
}

id objc_msgSend__keychainStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keychainStringForKey:");
}

id objc_msgSend__keychainValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keychainValueForKey:");
}

id objc_msgSend__kickOffInitialPropagationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_kickOffInitialPropagationWithCompletion:");
}

id objc_msgSend__languageCode(void *a1, const char *a2, ...)
{
  return _[a1 _languageCode];
}

id objc_msgSend__languageCodeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _languageCodeDidChange];
}

id objc_msgSend__languageCodeWithFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_languageCodeWithFallback:");
}

id objc_msgSend__languageModelForSpeechRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_languageModelForSpeechRequest:");
}

id objc_msgSend__lastAudioBufferReceivedWithEndpointMode_totalPacketCount_endpointerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastAudioBufferReceivedWithEndpointMode:totalPacketCount:endpointerMetrics:");
}

id objc_msgSend__lastRequest(void *a1, const char *a2, ...)
{
  return _[a1 _lastRequest];
}

id objc_msgSend__lastRequestAnnouncementTypeInQueue(void *a1, const char *a2, ...)
{
  return _[a1 _lastRequestAnnouncementTypeInQueue];
}

id objc_msgSend__lastRequestIdentifierInQueue(void *a1, const char *a2, ...)
{
  return _[a1 _lastRequestIdentifierInQueue];
}

id objc_msgSend__linkStoreForSysdiagnose(void *a1, const char *a2, ...)
{
  return _[a1 _linkStoreForSysdiagnose];
}

id objc_msgSend__listInstalledServicesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_listInstalledServicesWithCompletion:");
}

id objc_msgSend__listenForAudioRouteChanges(void *a1, const char *a2, ...)
{
  return _[a1 _listenForAudioRouteChanges];
}

id objc_msgSend__listenForMuteStateChanges(void *a1, const char *a2, ...)
{
  return _[a1 _listenForMuteStateChanges];
}

id objc_msgSend__loadCloudSyncedUsersFromCache(void *a1, const char *a2, ...)
{
  return _[a1 _loadCloudSyncedUsersFromCache];
}

id objc_msgSend__loadContentsOfFileOnNotification(void *a1, const char *a2, ...)
{
  return _[a1 _loadContentsOfFileOnNotification];
}

id objc_msgSend__loadModelWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadModelWithType:completion:");
}

id objc_msgSend__loadServiceFromBundlePath_infoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadServiceFromBundlePath:infoDictionary:");
}

id objc_msgSend__loadServicesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadServicesIfNeeded];
}

id objc_msgSend__loadStoredPropagationStatus(void *a1, const char *a2, ...)
{
  return _[a1 _loadStoredPropagationStatus];
}

id objc_msgSend__localContextWithPrivacyClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localContextWithPrivacyClass:");
}

id objc_msgSend__localDeviceIsHomePod(void *a1, const char *a2, ...)
{
  return _[a1 _localDeviceIsHomePod];
}

id objc_msgSend__localDeviceIsSameAsLocationSharingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localDeviceIsSameAsLocationSharingDevice:");
}

id objc_msgSend__localPeerData(void *a1, const char *a2, ...)
{
  return _[a1 _localPeerData];
}

id objc_msgSend__localPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 _localPeerInfo];
}

id objc_msgSend__localSpeechRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _localSpeechRecognizer];
}

id objc_msgSend__localSpeechRecognizerSupportingBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localSpeechRecognizerSupportingBackground:");
}

id objc_msgSend__localizedBodyWithFormat_forTriggerPhrase_andName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedBodyWithFormat:forTriggerPhrase:andName:");
}

id objc_msgSend__locationAccessPermission(void *a1, const char *a2, ...)
{
  return _[a1 _locationAccessPermission];
}

id objc_msgSend__locationManager(void *a1, const char *a2, ...)
{
  return _[a1 _locationManager];
}

id objc_msgSend__locationServiceListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_locationServiceListenerShouldAcceptNewConnection:");
}

id objc_msgSend__locationShifter(void *a1, const char *a2, ...)
{
  return _[a1 _locationShifter];
}

id objc_msgSend__locationUpdateIsCapableOfSucceeding(void *a1, const char *a2, ...)
{
  return _[a1 _locationUpdateIsCapableOfSucceeding];
}

id objc_msgSend__logAFAnalyticsCrossDeviceCommandHandledEventWithResult_halActionResult_contextProximityPairs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAFAnalyticsCrossDeviceCommandHandledEventWithResult:halActionResult:contextProximityPairs:");
}

id objc_msgSend__logAudioTopologyForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAudioTopologyForRequestId:");
}

id objc_msgSend__logCommandToMetrics_forSession_outbound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logCommandToMetrics:forSession:outbound:");
}

id objc_msgSend__logCompanionDeviceCommunicationContextFor_executionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logCompanionDeviceCommunicationContextFor:executionId:");
}

id objc_msgSend__logCompanionDeviceDiscoveryContextFor_executionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logCompanionDeviceDiscoveryContextFor:executionId:");
}

id objc_msgSend__logContextCollectorFetchEnded_numDeviceContextsFetched_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logContextCollectorFetchEnded:numDeviceContextsFetched:");
}

id objc_msgSend__logContextCollectorFetchFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logContextCollectorFetchFailed:");
}

id objc_msgSend__logContextCollectorFetchStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logContextCollectorFetchStarted:");
}

id objc_msgSend__logContextForWinningSession_forReason_forRemoteSessionScore_forLocalSessionScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:");
}

id objc_msgSend__logCrossDeviceCommandEndedMetricsForCommand_targetProductType_targetDeviceID_targetDeviceContextIdentifier_targetProximity_coreAnalyticsEvent_response_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logCrossDeviceCommandEndedMetricsForCommand:targetProductType:targetDeviceID:targetDeviceContextIdentifier:targetProximity:coreAnalyticsEvent:response:error:");
}

id objc_msgSend__logDidVendExperiment_fetchDetails_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logDidVendExperiment:fetchDetails:error:");
}

id objc_msgSend__logExecuteOnRemoteRequestForRequestId_turnId_event_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logExecuteOnRemoteRequestForRequestId:turnId:event:");
}

id objc_msgSend__logFetchLocalContextEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logFetchLocalContextEnded:");
}

id objc_msgSend__logFetchLocalContextStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logFetchLocalContextStarted:");
}

id objc_msgSend__logForceFetchContextEndedWithHALMetricsId_contextId_forceFetchCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logForceFetchContextEndedWithHALMetricsId:contextId:forceFetchCount:");
}

id objc_msgSend__logForceFetchContextFailedWithHALMetricsId_contextId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logForceFetchContextFailedWithHALMetricsId:contextId:error:");
}

id objc_msgSend__logForceFetchContextStartedWithHALMetricsId_contextId_timestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logForceFetchContextStartedWithHALMetricsId:contextId:timestamp:");
}

id objc_msgSend__logForceFetchWithStartTime_forceFetchCount_forceFetchError_halMetricsId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logForceFetchWithStartTime:forceFetchCount:forceFetchError:halMetricsId:");
}

id objc_msgSend__logMetricsForSessionFailure_withError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logMetricsForSessionFailure:withError:completion:");
}

id objc_msgSend__logPersonalDevicesDiscoveredNearbyForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logPersonalDevicesDiscoveredNearbyForRequestId:");
}

id objc_msgSend__logPowerContextForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logPowerContextForRequest:");
}

id objc_msgSend__logRelevantAnalyticsOnHomeUserSettingsUpdateForCurrentSettings_allowVoiceIdSettingValue_isPrimaryUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRelevantAnalyticsOnHomeUserSettingsUpdateForCurrentSettings:allowVoiceIdSettingValue:isPrimaryUser:");
}

id objc_msgSend__logRelevantAnalyticsOnMultiUserVoiceProfileDownloadSuccessWithSharedUserID_isPrimary_isNewUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRelevantAnalyticsOnMultiUserVoiceProfileDownloadSuccessWithSharedUserID:isPrimary:isNewUser:");
}

id objc_msgSend__logRelevantAnalyticsOnUserAddedWithSharedUserID_isPrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRelevantAnalyticsOnUserAddedWithSharedUserID:isPrimary:");
}

id objc_msgSend__logShouldSpeakState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logShouldSpeakState:");
}

id objc_msgSend__logTVOSMacroError(void *a1, const char *a2, ...)
{
  return _[a1 _logTVOSMacroError];
}

id objc_msgSend__logUUFRConditionally_executionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logUUFRConditionally:executionContext:");
}

id objc_msgSend__makeUserTokenStatusWithICTokenStatus_icError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeUserTokenStatusWithICTokenStatus:icError:");
}

id objc_msgSend__managedPeerInfoForAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedPeerInfoForAssistantIdentifier:");
}

id objc_msgSend__managedPeerInfoForHomeKitAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedPeerInfoForHomeKitAccessoryIdentifier:");
}

id objc_msgSend__managedPeerInfoForIDSDeviceUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedPeerInfoForIDSDeviceUniqueIdentifier:");
}

id objc_msgSend__managedPeerInfoForRapportEffectiveIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedPeerInfoForRapportEffectiveIdentifier:");
}

id objc_msgSend__managedPeerInfoMatchingPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedPeerInfoMatchingPeerInfo:");
}

id objc_msgSend__managedStorageListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedStorageListenerShouldAcceptNewConnection:");
}

id objc_msgSend__managedStoreObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedStoreObjectForKey:");
}

id objc_msgSend__manateeRecordZoneInfoForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manateeRecordZoneInfoForName:");
}

id objc_msgSend__mapADRequestIdToSessionRequestId_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapADRequestIdToSessionRequestId:forSession:");
}

id objc_msgSend__mapPeerToAccessoryWithEnabledPersonalRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapPeerToAccessoryWithEnabledPersonalRequests:");
}

id objc_msgSend__markKeychainValuesAsDirty(void *a1, const char *a2, ...)
{
  return _[a1 _markKeychainValuesAsDirty];
}

id objc_msgSend__markThreadCancellationForCurrentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markThreadCancellationForCurrentRequest:");
}

id objc_msgSend__mcQueue(void *a1, const char *a2, ...)
{
  return _[a1 _mcQueue];
}

id objc_msgSend__meCard(void *a1, const char *a2, ...)
{
  return _[a1 _meCard];
}

id objc_msgSend__meCardWithCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_meCardWithCache:");
}

id objc_msgSend__mediaPlaybackVolume(void *a1, const char *a2, ...)
{
  return _[a1 _mediaPlaybackVolume];
}

id objc_msgSend__mediaStateFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaStateFrom:");
}

id objc_msgSend__merge_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_merge:with:");
}

id objc_msgSend__mergeDataWithModifiedRecords_deletedRecordIDs_containsAllChanges_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:");
}

id objc_msgSend__mergeRemotes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeRemotes:");
}

id objc_msgSend__mergedClockAlarmSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 _mergedClockAlarmSnapshot];
}

id objc_msgSend__mergedClockTimerSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 _mergedClockTimerSnapshot];
}

id objc_msgSend__messageLink(void *a1, const char *a2, ...)
{
  return _[a1 _messageLink];
}

id objc_msgSend__metrics_awdRequestEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_awdRequestEnd");
}

id objc_msgSend__metrics_destroyAllMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_destroyAllMetrics");
}

id objc_msgSend__metrics_destroyAllMetricsIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_destroyAllMetricsIfNeeded");
}

id objc_msgSend__metrics_isAssistantOrDictationEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_isAssistantOrDictationEnabled");
}

id objc_msgSend__metrics_isSystemIdle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_isSystemIdle");
}

id objc_msgSend__metrics_logSpeechRecognized_resultId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_logSpeechRecognized:resultId:");
}

id objc_msgSend__metrics_markLocalEagerRecognitionCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_markLocalEagerRecognitionCandidate:");
}

id objc_msgSend__metrics_markLocalPartialSpeechRecognition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_markLocalPartialSpeechRecognition");
}

id objc_msgSend__metrics_markLocalSpeechCompletedWithStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_markLocalSpeechCompletedWithStatistics:");
}

id objc_msgSend__metrics_markLocalSpeechPackage_interactionId_optedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_markLocalSpeechPackage:interactionId:optedIn:");
}

id objc_msgSend__metrics_markLocalSpeechStartedWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_markLocalSpeechStartedWithContext:");
}

id objc_msgSend__metrics_processEventRecordsFromStore_batch_deliveryStream_eventStreamUID_streamSpeechId_untilLimit_uploadRecords_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:streamSpeechId:untilLimit:uploadRecords:completion:");
}

id objc_msgSend__metrics_recordCancellationMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_recordCancellationMetrics");
}

id objc_msgSend__metrics_recordFailureMetricsForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_recordFailureMetricsForError:");
}

id objc_msgSend__metrics_recordNetworkSnapshotForEvent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_recordNetworkSnapshotForEvent:completion:");
}

id objc_msgSend__metrics_recordSNNetworkSnapshotForEvent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_recordSNNetworkSnapshotForEvent:completion:");
}

id objc_msgSend__metrics_sendNextAnalyticsEventStreamToServerUntilLimit_requiresUnlimitedPower_requiresActiveSession_prioritizedEventStreamUID_deliveryStreamContinuations_scheduledActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:");
}

id objc_msgSend__metrics_sendNextOfflineMetricsToServerUntilLimit_requiresUnlimitedPower_requiresActiveSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:");
}

id objc_msgSend__missingReferenceFulfillmentContexts(void *a1, const char *a2, ...)
{
  return _[a1 _missingReferenceFulfillmentContexts];
}

id objc_msgSend__missingReferenceFulfillmentContextsByRequestId(void *a1, const char *a2, ...)
{
  return _[a1 _missingReferenceFulfillmentContextsByRequestId];
}

id objc_msgSend__motionManager(void *a1, const char *a2, ...)
{
  return _[a1 _motionManager];
}

id objc_msgSend__musicPersonalizationTokenChanged(void *a1, const char *a2, ...)
{
  return _[a1 _musicPersonalizationTokenChanged];
}

id objc_msgSend__mutableResolvedIds(void *a1, const char *a2, ...)
{
  return _[a1 _mutableResolvedIds];
}

id objc_msgSend__mutateMergedClockTimerSnapshotUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutateMergedClockTimerSnapshotUsingBlock:");
}

id objc_msgSend__nearByDevicesFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nearByDevicesFrom:");
}

id objc_msgSend__needsConversion(void *a1, const char *a2, ...)
{
  return _[a1 _needsConversion];
}

id objc_msgSend__networkConnectionDidOpen(void *a1, const char *a2, ...)
{
  return _[a1 _networkConnectionDidOpen];
}

id objc_msgSend__networkConnectionErrorOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_networkConnectionErrorOccurred:");
}

id objc_msgSend__networkConnectionFailure(void *a1, const char *a2, ...)
{
  return _[a1 _networkConnectionFailure];
}

id objc_msgSend__networkConnectionProvider(void *a1, const char *a2, ...)
{
  return _[a1 _networkConnectionProvider];
}

id objc_msgSend__networkConnectionReceivedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_networkConnectionReceivedData:");
}

id objc_msgSend__networkManager(void *a1, const char *a2, ...)
{
  return _[a1 _networkManager];
}

id objc_msgSend__newRequestDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _newRequestDictionary];
}

id objc_msgSend__newRequestDictionaryWithRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newRequestDictionaryWithRequestInfo:");
}

id objc_msgSend__newRequestInfoWithRequestDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newRequestInfoWithRequestDictionary:");
}

id objc_msgSend__nextEventFromFilteredEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextEventFromFilteredEvents:");
}

id objc_msgSend__nextRequestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _nextRequestIdentifier];
}

id objc_msgSend__noDeviceError(void *a1, const char *a2, ...)
{
  return _[a1 _noDeviceError];
}

id objc_msgSend__noNearbyPeerError(void *a1, const char *a2, ...)
{
  return _[a1 _noNearbyPeerError];
}

id objc_msgSend__notificationIdentifiersForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notificationIdentifiersForObject:");
}

id objc_msgSend__notificationServiceListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notificationServiceListenerShouldAcceptNewConnection:");
}

id objc_msgSend__notifyDelegatesDidAddBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegatesDidAddBulletin:");
}

id objc_msgSend__notifyDelegatesDidRemoveBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegatesDidRemoveBulletin:");
}

id objc_msgSend__notifyFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyFailure:");
}

id objc_msgSend__notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObservers:");
}

id objc_msgSend__notifyObserversOfDictationHIPAAMDMStatus(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversOfDictationHIPAAMDMStatus];
}

id objc_msgSend__notifyObserversOfEligibleAnnouncementRequestTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversOfEligibleAnnouncementRequestTypes:");
}

id objc_msgSend__notifyObserversOfRequestInfo_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversOfRequestInfo:fromPeer:completion:");
}

id objc_msgSend__notifyObserversOfSAD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversOfSAD:");
}

id objc_msgSend__notifyObserversOfSharedData_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversOfSharedData:fromPeer:");
}

id objc_msgSend__notifyObserversOfSharedDataRequestFromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversOfSharedDataRequestFromPeer:completion:");
}

id objc_msgSend__notifyUSTForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyUSTForAceCommand:");
}

id objc_msgSend__notifyUSTForRequestCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyUSTForRequestCompleted:");
}

id objc_msgSend__notifyUSTForRequestStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyUSTForRequestStarted:");
}

id objc_msgSend__nowString(void *a1, const char *a2, ...)
{
  return _[a1 _nowString];
}

id objc_msgSend__objectsToRemapFromRefId_toRefId_retryFullRequest_commandsToRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:");
}

id objc_msgSend__observeConnectionDisrupted_observer_referenceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeConnectionDisrupted:observer:referenceId:");
}

id objc_msgSend__observerID(void *a1, const char *a2, ...)
{
  return _[a1 _observerID];
}

id objc_msgSend__offlineDictationStatusStringToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offlineDictationStatusStringToDictionary:");
}

id objc_msgSend__offlineIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _offlineIdentifiers];
}

id objc_msgSend__offlineMetricsManager(void *a1, const char *a2, ...)
{
  return _[a1 _offlineMetricsManager];
}

id objc_msgSend__onMainThreadUpdateCountryCodeWithCountryConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:");
}

id objc_msgSend__onQueueSetKeychainValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueueSetKeychainValue:forKey:");
}

id objc_msgSend__onceSiriDataSharingAdjustment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onceSiriDataSharingAdjustment:");
}

id objc_msgSend__openFileAtPath_withFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openFileAtPath:withFlags:");
}

id objc_msgSend__openURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURL:completion:");
}

id objc_msgSend__orchBluetoothStateEnumFromBluetoothState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_orchBluetoothStateEnumFromBluetoothState:");
}

id objc_msgSend__osmedDetector(void *a1, const char *a2, ...)
{
  return _[a1 _osmedDetector];
}

id objc_msgSend__outputLanguageDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _outputLanguageDidChange];
}

id objc_msgSend__outputVoiceWithFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_outputVoiceWithFallback:");
}

id objc_msgSend__outputVoice_setOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_outputVoice_setOutputVoice:");
}

id objc_msgSend__overrideModeWhenInAmbient(void *a1, const char *a2, ...)
{
  return _[a1 _overrideModeWhenInAmbient];
}

id objc_msgSend__pairedCompanionDeviceFromSharedDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pairedCompanionDeviceFromSharedDataWithCompletion:");
}

id objc_msgSend__pairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 _pairedDevice];
}

id objc_msgSend__pairedDeviceProxies(void *a1, const char *a2, ...)
{
  return _[a1 _pairedDeviceProxies];
}

id objc_msgSend__parseInfoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseInfoDictionary:");
}

id objc_msgSend__passObjectToDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passObjectToDelegate:");
}

id objc_msgSend__peerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _peerConnection];
}

id objc_msgSend__peerConnectionFailure(void *a1, const char *a2, ...)
{
  return _[a1 _peerConnectionFailure];
}

id objc_msgSend__peerConnectionReceivedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerConnectionReceivedData:");
}

id objc_msgSend__peerInfoForAssistantId_allowNonPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerInfoForAssistantId:allowNonPeers:");
}

id objc_msgSend__peerInfoForIDSDeviceUniqueIdentifier_allowNonPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:");
}

id objc_msgSend__peerIsPairedPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerIsPairedPhone:");
}

id objc_msgSend__peerIsPairedWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerIsPairedWatch:");
}

id objc_msgSend__peerLocationConnection(void *a1, const char *a2, ...)
{
  return _[a1 _peerLocationConnection];
}

id objc_msgSend__peerLocationService(void *a1, const char *a2, ...)
{
  return _[a1 _peerLocationService];
}

id objc_msgSend__peerReadStreamErrorOccurred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_peerReadStreamErrorOccurred:");
}

id objc_msgSend__peers(void *a1, const char *a2, ...)
{
  return _[a1 _peers];
}

id objc_msgSend__pendDormantCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pendDormantCommand:");
}

id objc_msgSend__pendingCommands(void *a1, const char *a2, ...)
{
  return _[a1 _pendingCommands];
}

id objc_msgSend__pendingServiceReloadNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _pendingServiceReloadNotifications];
}

id objc_msgSend__performActionWithIdentifier_forAFBulletin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionWithIdentifier:forAFBulletin:completion:");
}

id objc_msgSend__performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBlock:");
}

id objc_msgSend__performCallbacksForCommand_reply_executionContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performCallbacksForCommand:reply:executionContext:error:");
}

id objc_msgSend__performingInternalAuth(void *a1, const char *a2, ...)
{
  return _[a1 _performingInternalAuth];
}

id objc_msgSend__persistValidationData_withExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistValidationData:withExpiration:");
}

id objc_msgSend__personAttributeForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_personAttributeForCall:");
}

id objc_msgSend__personForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_personForCall:");
}

id objc_msgSend__personsForRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_personsForRecipients:");
}

id objc_msgSend__pickDefaultWinnerWithDroppingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickDefaultWinnerWithDroppingSession:");
}

id objc_msgSend__pointerToBlockMap(void *a1, const char *a2, ...)
{
  return _[a1 _pointerToBlockMap];
}

id objc_msgSend__populateCachesForRequest_toRemoteAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateCachesForRequest:toRemoteAssistantId:");
}

id objc_msgSend__populateConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _populateConfiguration];
}

id objc_msgSend__populateDevicePropertiesForClientEvent_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateDevicePropertiesForClientEvent:withCompletion:");
}

id objc_msgSend__populateEventMetadataForClientEvent_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateEventMetadataForClientEvent:withCompletion:");
}

id objc_msgSend__populateInternalAuthProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateInternalAuthProperties:");
}

id objc_msgSend__populateNullAggregationIdsWithCreationTime_today_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateNullAggregationIdsWithCreationTime:today:");
}

id objc_msgSend__populateNullEphemeralSeedsWithCreationTime_today_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateNullEphemeralSeedsWithCreationTime:today:");
}

id objc_msgSend__populateNullsWithCreationTime_today_minValidityDays_maxValidityDays_currentOption_nextOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateNullsWithCreationTime:today:minValidityDays:maxValidityDays:currentOption:nextOption:");
}

id objc_msgSend__postConfigurationChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _postConfigurationChangedNotification];
}

id objc_msgSend__postJSDiscoveryNotificationForBTDeviceWithInfo_scheduled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postJSDiscoveryNotificationForBTDeviceWithInfo:scheduled:");
}

id objc_msgSend__postPersonalDomainActivityNotificationWithBody_command_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postPersonalDomainActivityNotificationWithBody:command:executionContext:completion:");
}

id objc_msgSend__postRemovalStateCleanup(void *a1, const char *a2, ...)
{
  return _[a1 _postRemovalStateCleanup];
}

id objc_msgSend__postSyncFinishedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _postSyncFinishedNotification];
}

id objc_msgSend__postUpdatePersonalRequestSettingsNotification_forLocalizationKey_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postUpdatePersonalRequestSettingsNotification:forLocalizationKey:executionContext:completion:");
}

id objc_msgSend__postWatchNotificationWithContext_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postWatchNotificationWithContext:withError:");
}

id objc_msgSend__powerAssertionManager(void *a1, const char *a2, ...)
{
  return _[a1 _powerAssertionManager];
}

id objc_msgSend__powerChangedMessageType_notificationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_powerChangedMessageType:notificationID:");
}

id objc_msgSend__preciseLocationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _preciseLocationEnabled];
}

id objc_msgSend__preferences(void *a1, const char *a2, ...)
{
  return _[a1 _preferences];
}

id objc_msgSend__preferencesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _preferencesDidChange];
}

id objc_msgSend__preferredSyncKeyOrder(void *a1, const char *a2, ...)
{
  return _[a1 _preferredSyncKeyOrder];
}

id objc_msgSend__preheat(void *a1, const char *a2, ...)
{
  return _[a1 _preheat];
}

id objc_msgSend__preheatAllServices(void *a1, const char *a2, ...)
{
  return _[a1 _preheatAllServices];
}

id objc_msgSend__preheatCallbacksForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preheatCallbacksForCommand:");
}

id objc_msgSend__prepAWDLClientLinkIfMessageReceivedOverAWDL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepAWDLClientLinkIfMessageReceivedOverAWDL:");
}

id objc_msgSend__prepareAudioSystemWithContext_audioSessionAssertion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareAudioSystemWithContext:audioSessionAssertion:completion:");
}

id objc_msgSend__prepareForAppLaunchForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareForAppLaunchForRequest:");
}

id objc_msgSend__prepareForSleep(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForSleep];
}

id objc_msgSend__prepareNameComponents_meCardCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareNameComponents:meCardCache:");
}

id objc_msgSend__preparePerson_meCardCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preparePerson:meCardCache:");
}

id objc_msgSend__prepareZoneForResetWithZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareZoneForResetWithZoneInfo:");
}

id objc_msgSend__preparedDatabaseWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preparedDatabaseWithError:");
}

id objc_msgSend__prependHeader_toOutputBuffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prependHeader:toOutputBuffer:");
}

id objc_msgSend__probeSessionIfIdle(void *a1, const char *a2, ...)
{
  return _[a1 _probeSessionIfIdle];
}

id objc_msgSend__processAndEvaluateSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processAndEvaluateSnapshot:");
}

id objc_msgSend__processAndSendUserFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _processAndSendUserFeedback];
}

id objc_msgSend__processEnqueuedSpeakables(void *a1, const char *a2, ...)
{
  return _[a1 _processEnqueuedSpeakables];
}

id objc_msgSend__processPendingCallResultBlocks(void *a1, const char *a2, ...)
{
  return _[a1 _processPendingCallResultBlocks];
}

id objc_msgSend__processPerDeviceEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processPerDeviceEvents:");
}

id objc_msgSend__processQueuedLanguageCodeAndOutputVoice(void *a1, const char *a2, ...)
{
  return _[a1 _processQueuedLanguageCodeAndOutputVoice];
}

id objc_msgSend__processStagedEvents(void *a1, const char *a2, ...)
{
  return _[a1 _processStagedEvents];
}

id objc_msgSend__processUpdatedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processUpdatedLocation:");
}

id objc_msgSend__profileLimitReached(void *a1, const char *a2, ...)
{
  return _[a1 _profileLimitReached];
}

id objc_msgSend__profileUserId(void *a1, const char *a2, ...)
{
  return _[a1 _profileUserId];
}

id objc_msgSend__propagateDataSharingStatusToAccessoriesWithPropagationEvent_propagationReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propagateDataSharingStatusToAccessoriesWithPropagationEvent:propagationReason:completion:");
}

id objc_msgSend__propagateSiriDataSharingOptInStatus_toAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propagateSiriDataSharingOptInStatus:toAccessory:");
}

id objc_msgSend__propagateSiriDataSharingToAccessory_home_homeManager_propagationEvent_propagationReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propagateSiriDataSharingToAccessory:home:homeManager:propagationEvent:propagationReason:completion:");
}

id objc_msgSend__providerService(void *a1, const char *a2, ...)
{
  return _[a1 _providerService];
}

id objc_msgSend__providerServiceDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _providerServiceDelegate];
}

id objc_msgSend__providerServiceWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providerServiceWithErrorHandler:");
}

id objc_msgSend__proximityDiscoveryLink(void *a1, const char *a2, ...)
{
  return _[a1 _proximityDiscoveryLink];
}

id objc_msgSend__proxyService(void *a1, const char *a2, ...)
{
  return _[a1 _proxyService];
}

id objc_msgSend__pruneAppsCacheWithTruth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneAppsCacheWithTruth:");
}

id objc_msgSend__publishCancelAndRemoveAllObjectsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishCancelAndRemoveAllObjectsForReason:");
}

id objc_msgSend__publishEventsToObserver_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishEventsToObserver:completion:");
}

id objc_msgSend__publishFinishedAndRemoveAllObjectsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishFinishedAndRemoveAllObjectsForReason:");
}

id objc_msgSend__publishHomeSeed_forAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishHomeSeed:forAccounts:");
}

id objc_msgSend__publishHomeSeedToAllMembers(void *a1, const char *a2, ...)
{
  return _[a1 _publishHomeSeedToAllMembers];
}

id objc_msgSend__publishStateChanged_forIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_publishStateChanged:forIdentifiers:");
}

id objc_msgSend__pullDeltaForDataType_generation_limit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pullDeltaForDataType:generation:limit:completion:");
}

id objc_msgSend__pullSnapshotForDataType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pullSnapshotForDataType:completion:");
}

id objc_msgSend__purgeDeletedEventRecordsBeforeOrEqualToDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_purgeDeletedEventRecordsBeforeOrEqualToDate:error:");
}

id objc_msgSend__pushContextToCollector_forReason_includingKeys_excludingMandatoryKeys_includingKeysInResponse_excludingMandatoryKeysInResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushContextToCollector:forReason:includingKeys:excludingMandatoryKeys:includingKeysInResponse:excludingMandatoryKeysInResponse:completion:");
}

id objc_msgSend__pushContextToCollectorsForReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushContextToCollectorsForReason:completion:");
}

id objc_msgSend__pushProximityObservationToCollector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushProximityObservationToCollector:");
}

id objc_msgSend__pushSharedDataToPeerFromNotification_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushSharedDataToPeerFromNotification:completion:");
}

id objc_msgSend__qualifiedDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedDeviceIDs];
}

id objc_msgSend__qualifiedDevices(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedDevices];
}

id objc_msgSend__qualifiedInRangeDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedInRangeDeviceIDs];
}

id objc_msgSend__qualifiedInRangeDevices(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedInRangeDevices];
}

id objc_msgSend__qualifiedOutOfRangeDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedOutOfRangeDeviceIDs];
}

id objc_msgSend__qualifiedOutOfRangeDevices(void *a1, const char *a2, ...)
{
  return _[a1 _qualifiedOutOfRangeDevices];
}

id objc_msgSend__queue(void *a1, const char *a2, ...)
{
  return _[a1 _queue];
}

id objc_msgSend__queueResultObject_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queueResultObject:forSession:");
}

id objc_msgSend__randomlySampleWithoutReplacementNumSamples_fromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_randomlySampleWithoutReplacementNumSamples:fromArray:");
}

id objc_msgSend__rapportEffectiveIdForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rapportEffectiveIdForPeer:");
}

id objc_msgSend__rapportLinkMessageOptions(void *a1, const char *a2, ...)
{
  return _[a1 _rapportLinkMessageOptions];
}

id objc_msgSend__rapportLinkWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rapportLinkWithQueue:");
}

id objc_msgSend__readCheckpoint(void *a1, const char *a2, ...)
{
  return _[a1 _readCheckpoint];
}

id objc_msgSend__readDictationSampledPlist(void *a1, const char *a2, ...)
{
  return _[a1 _readDictationSampledPlist];
}

id objc_msgSend__reallyCommitOrSaveMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyCommitOrSaveMetrics:");
}

id objc_msgSend__reallyEndSessionForDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyEndSessionForDelegate:");
}

id objc_msgSend__reallyHandleNewStartLocalRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyHandleNewStartLocalRequest:");
}

id objc_msgSend__reallyHandleNewStartRequest_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyHandleNewStartRequest:info:");
}

id objc_msgSend__reallyRetryPreferringWWAN_skipPeer_skipPeerError_useWiFiHint_causedByError_forceReconnect_useSecondary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:");
}

id objc_msgSend__reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:");
}

id objc_msgSend__recheckForWiFiTransition(void *a1, const char *a2, ...)
{
  return _[a1 _recheckForWiFiTransition];
}

id objc_msgSend__recomputePrivateSessionStateAndBroadcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recomputePrivateSessionStateAndBroadcast:");
}

id objc_msgSend__recordAssetsNeededForLanguage_resetPrevious_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordAssetsNeededForLanguage:resetPrevious:");
}

id objc_msgSend__recordImmediateNotificationInteractionAfterRecommendation_forSpeakable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordImmediateNotificationInteractionAfterRecommendation:forSpeakable:");
}

id objc_msgSend__recordIntermediateMessageID_forPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordIntermediateMessageID:forPeer:");
}

id objc_msgSend__recordProximityObservation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordProximityObservation:");
}

id objc_msgSend__recordVocabulary_forIntentSlot_onBehalfOf_withDataStorageManager_withValidationCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordVocabulary:forIntentSlot:onBehalfOf:withDataStorageManager:withValidationCompletion:");
}

id objc_msgSend__recordingInfo(void *a1, const char *a2, ...)
{
  return _[a1 _recordingInfo];
}

id objc_msgSend__recordingStoppedWithError_totalPacketCount_endpointMode_endpointerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingStoppedWithError:totalPacketCount:endpointMode:endpointerMetrics:");
}

id objc_msgSend__redactedCopyMeCards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_redactedCopyMeCards:");
}

id objc_msgSend__reelectCollectorDeviceForReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reelectCollectorDeviceForReason:completion:");
}

id objc_msgSend__reelectCollectorIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _reelectCollectorIfNecessary];
}

id objc_msgSend__refId(void *a1, const char *a2, ...)
{
  return _[a1 _refId];
}

id objc_msgSend__refIdIsLimboId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refIdIsLimboId:");
}

id objc_msgSend__refIdIsSpeechStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refIdIsSpeechStart:");
}

id objc_msgSend__refreshEphemeralIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshEphemeralIdentifiers:");
}

id objc_msgSend__refreshHomeAndUserDetailsWithHomeInfoManager_multiUserService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshHomeAndUserDetailsWithHomeInfoManager:multiUserService:");
}

id objc_msgSend__refreshUsersAndVoiceProfiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshUsersAndVoiceProfiles:");
}

id objc_msgSend__registerAssetStatusTrackers(void *a1, const char *a2, ...)
{
  return _[a1 _registerAssetStatusTrackers];
}

id objc_msgSend__registerCDMStatusTracker(void *a1, const char *a2, ...)
{
  return _[a1 _registerCDMStatusTracker];
}

id objc_msgSend__registerCommandClass_forDomain_withSelector_forRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerCommandClass:forDomain:withSelector:forRegistry:");
}

id objc_msgSend__registerCommandHandlersWithRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerCommandHandlersWithRegistry:");
}

id objc_msgSend__registerDomainSignalServiceWithServiceManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerDomainSignalServiceWithServiceManager:");
}

id objc_msgSend__registerForBGUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _registerForBGUpdates];
}

id objc_msgSend__registerForDropInCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 _registerForDropInCallbacks];
}

id objc_msgSend__registerForPossibleSessionDestroyingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForPossibleSessionDestroyingNotifications];
}

id objc_msgSend__registerForRingerMuteStateNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForRingerMuteStateNotifications];
}

id objc_msgSend__registerForSleepNotification(void *a1, const char *a2, ...)
{
  return _[a1 _registerForSleepNotification];
}

id objc_msgSend__registerForSyncNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForSyncNotifications];
}

id objc_msgSend__registerNanoServicesWithServiceManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerNanoServicesWithServiceManager:");
}

id objc_msgSend__registerRequestHandlerForRequestId_messageType_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerRequestHandlerForRequestId:messageType:handler:");
}

id objc_msgSend__registerRequestID_options_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerRequestID:options:handler:");
}

id objc_msgSend__registerRequestID_requestHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerRequestID:requestHandler:");
}

id objc_msgSend__registerSyncCoalescedJob(void *a1, const char *a2, ...)
{
  return _[a1 _registerSyncCoalescedJob];
}

id objc_msgSend__registerUpdateHandler(void *a1, const char *a2, ...)
{
  return _[a1 _registerUpdateHandler];
}

id objc_msgSend__releaseDormancySuspension(void *a1, const char *a2, ...)
{
  return _[a1 _releaseDormancySuspension];
}

id objc_msgSend__releaseSession(void *a1, const char *a2, ...)
{
  return _[a1 _releaseSession];
}

id objc_msgSend__relinquishAssertionWithContext_error_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relinquishAssertionWithContext:error:options:");
}

id objc_msgSend__relinquishRemoteAssertionForSenderID_reason_effectiveDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relinquishRemoteAssertionForSenderID:reason:effectiveDate:error:");
}

id objc_msgSend__reloadForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadForDevice:");
}

id objc_msgSend__reloadServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadServices:");
}

id objc_msgSend__remoteDeviceForPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteDeviceForPeerInfo:");
}

id objc_msgSend__remoteExecute_primaryUserDevicesWithTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_primaryUserDevicesWithTypes:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteCommand_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteCommand:executionContext:completion:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteCommand_onDeviceForAssistantId_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteCommand:onDeviceForAssistantId:executionContext:completion:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteCommand_onPeer_allowsRelay_throughProxyDevice_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteSerializedCommand_onDeviceForAssistantId_allowFallbackOnAWDL_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:allowFallbackOnAWDL:executionContext:completion:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteSerializedCommand_onPeer_allowsRelay_allowFallbackOnAWDL_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:allowFallbackOnAWDL:executionContext:completion:");
}

id objc_msgSend__remoteExecute_remoteDeviceExecuteSerializedCommand_onSpecifiedDeviceTypes_preferredMessagingOption_allowFallbackOnAWDL_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:allowFallbackOnAWDL:executionContext:completion:");
}

id objc_msgSend__remoteExecute_shouldSendCommandToPrimaryUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecute_shouldSendCommandToPrimaryUser:");
}

id objc_msgSend__remoteExecutionContextForExecutionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteExecutionContextForExecutionID:");
}

id objc_msgSend__remoteFetchConfigMetadataWithServerConfigurationInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteFetchConfigMetadataWithServerConfigurationInfo:completion:");
}

id objc_msgSend__remoteOSMService(void *a1, const char *a2, ...)
{
  return _[a1 _remoteOSMService];
}

id objc_msgSend__remotePeerInfoForAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remotePeerInfoForAssistantIdentifier:");
}

id objc_msgSend__remotePeerInfoForHomeKitAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remotePeerInfoForHomeKitAccessoryIdentifier:");
}

id objc_msgSend__remotePeerInfoForIDSDeviceUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remotePeerInfoForIDSDeviceUniqueIdentifier:");
}

id objc_msgSend__remotePeerInfoForRapportEffectiveIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remotePeerInfoForRapportEffectiveIdentifier:");
}

id objc_msgSend__remotePlaybackDeviceForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remotePlaybackDeviceForDevice:");
}

id objc_msgSend__remoteRequestHelper(void *a1, const char *a2, ...)
{
  return _[a1 _remoteRequestHelper];
}

id objc_msgSend__remoteServiceDelegateWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteServiceDelegateWithErrorHandler:");
}

id objc_msgSend__remoteSpeechRequestHelper(void *a1, const char *a2, ...)
{
  return _[a1 _remoteSpeechRequestHelper];
}

id objc_msgSend__removeAllAudioSessionAssertionsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAllAudioSessionAssertionsForReason:");
}

id objc_msgSend__removeAllHandledCommandIds(void *a1, const char *a2, ...)
{
  return _[a1 _removeAllHandledCommandIds];
}

id objc_msgSend__removeAllPostCommandHandlingBlocks(void *a1, const char *a2, ...)
{
  return _[a1 _removeAllPostCommandHandlingBlocks];
}

id objc_msgSend__removeAllSpeechCapturingContexts(void *a1, const char *a2, ...)
{
  return _[a1 _removeAllSpeechCapturingContexts];
}

id objc_msgSend__removeAllSpeechCapturingContextsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAllSpeechCapturingContextsForReason:");
}

id objc_msgSend__removeConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeConnection:");
}

id objc_msgSend__removeDeviceIDFromKeepAliveList_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDeviceIDFromKeepAliveList:reason:");
}

id objc_msgSend__removeExecutionDevicesForLocalRequestWithId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeExecutionDevicesForLocalRequestWithId:");
}

id objc_msgSend__removeFirstChanceServiceForAceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeFirstChanceServiceForAceId:");
}

id objc_msgSend__removeGhostVoiceProfiles(void *a1, const char *a2, ...)
{
  return _[a1 _removeGhostVoiceProfiles];
}

id objc_msgSend__removeHandledCommandIdsForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeHandledCommandIdsForRequestId:");
}

id objc_msgSend__removeKeychainValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeKeychainValueForKey:");
}

id objc_msgSend__removeLimboId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeLimboId:");
}

id objc_msgSend__removeMissingRefContextsForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeMissingRefContextsForRequestId:");
}

id objc_msgSend__removeMissingReferenceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeMissingReferenceContext:");
}

id objc_msgSend__removeOutstandingAnchorsRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeOutstandingAnchorsRequestId:");
}

id objc_msgSend__removeOutstandingRequestId_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeOutstandingRequestId:forReason:");
}

id objc_msgSend__removeOutstandingSearchForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeOutstandingSearchForRefId:");
}

id objc_msgSend__removeOutstandingSyncChunkId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeOutstandingSyncChunkId:");
}

id objc_msgSend__removePostCommandHandlingBlocksForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removePostCommandHandlingBlocksForRequestId:");
}

id objc_msgSend__removeQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeQueue:");
}

id objc_msgSend__removeRemotePeerInfoWithRapportEffectiveIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRemotePeerInfoWithRapportEffectiveIdentifier:");
}

id objc_msgSend__removeRequestForAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _removeRequestForAssistantData];
}

id objc_msgSend__removeSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSession:");
}

id objc_msgSend__removeTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTimer:");
}

id objc_msgSend__removeTimer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTimer:completion:");
}

id objc_msgSend__removeTimerForUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTimerForUUID:");
}

id objc_msgSend__removeTimerWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTimerWithID:completion:");
}

id objc_msgSend__removeUser_homeUserID_sharedUserID_iCloudAltDSID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUser:homeUserID:sharedUserID:iCloudAltDSID:error:");
}

id objc_msgSend__replaceRequestDelegate_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceRequestDelegate:reason:");
}

id objc_msgSend__replaceRequestDelegate_withInfo_reason_andCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceRequestDelegate:withInfo:reason:andCompletion:");
}

id objc_msgSend__replaceSpeechDelegateWhenReady_suppressAlert_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceSpeechDelegateWhenReady:suppressAlert:withCompletion:");
}

id objc_msgSend__replaceSpeechDelegateWhenReady_waitForRecordingToFinish_suppressAlert_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:");
}

id objc_msgSend__replacement_forString_meCardCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replacement:forString:meCardCache:");
}

id objc_msgSend__requestAnchorsForKeys_appSources_watchAppSources_forceReset_includeAllKnownAnchors_reasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:");
}

id objc_msgSend__requestBarrier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestBarrier:");
}

id objc_msgSend__requestDelayManager(void *a1, const char *a2, ...)
{
  return _[a1 _requestDelayManager];
}

id objc_msgSend__requestDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _requestDelegate];
}

id objc_msgSend__requestDidEnd(void *a1, const char *a2, ...)
{
  return _[a1 _requestDidEnd];
}

id objc_msgSend__requestDispatcherService(void *a1, const char *a2, ...)
{
  return _[a1 _requestDispatcherService];
}

id objc_msgSend__requestDispatcherSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _requestDispatcherSessionConfiguration];
}

id objc_msgSend__requestForAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _requestForAssistantData];
}

id objc_msgSend__requestId(void *a1, const char *a2, ...)
{
  return _[a1 _requestId];
}

id objc_msgSend__requestLocationForGetRequestOrigin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestLocationForGetRequestOrigin:completion:");
}

id objc_msgSend__requestLocationWithBestAccuracy(void *a1, const char *a2, ...)
{
  return _[a1 _requestLocationWithBestAccuracy];
}

id objc_msgSend__requestMap(void *a1, const char *a2, ...)
{
  return _[a1 _requestMap];
}

id objc_msgSend__requestQueue(void *a1, const char *a2, ...)
{
  return _[a1 _requestQueue];
}

id objc_msgSend__requestSiriAuthorization_auditToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestSiriAuthorization:auditToken:");
}

id objc_msgSend__requestStreamEstablishment(void *a1, const char *a2, ...)
{
  return _[a1 _requestStreamEstablishment];
}

id objc_msgSend__requestToExecuteCommand_onRemoteWithAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestToExecuteCommand:onRemoteWithAssistantId:");
}

id objc_msgSend__requestTypesForCarPlayAvailableOrConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestTypesForCarPlayAvailableOrConnected:");
}

id objc_msgSend__requestWillStartWithInfo_showNetworkActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestWillStartWithInfo:showNetworkActivityIndicator:");
}

id objc_msgSend__requiredBundleIDsForNotificationAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiredBundleIDsForNotificationAnnouncementType:");
}

id objc_msgSend__requiredPlatformsForNotificationAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiredPlatformsForNotificationAnnouncementType:");
}

id objc_msgSend__resetAllUsers(void *a1, const char *a2, ...)
{
  return _[a1 _resetAllUsers];
}

id objc_msgSend__resetCallNotificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _resetCallNotificationTimer];
}

id objc_msgSend__resetConnectionPolicyBlacklisting(void *a1, const char *a2, ...)
{
  return _[a1 _resetConnectionPolicyBlacklisting];
}

id objc_msgSend__resetConnectionToOSMService(void *a1, const char *a2, ...)
{
  return _[a1 _resetConnectionToOSMService];
}

id objc_msgSend__resetContextLinkAndReconnectNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetContextLinkAndReconnectNow:");
}

id objc_msgSend__resetForReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetForReason:error:");
}

id objc_msgSend__resetKeepAliveListForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetKeepAliveListForReason:");
}

id objc_msgSend__resetMessageLinkAndReconnectNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetMessageLinkAndReconnectNow:");
}

id objc_msgSend__resetPeerAccountSettingsWithSharedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetPeerAccountSettingsWithSharedData:");
}

id objc_msgSend__resetPrimaryUser(void *a1, const char *a2, ...)
{
  return _[a1 _resetPrimaryUser];
}

id objc_msgSend__resetRapportLinkAndReconnectNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetRapportLinkAndReconnectNow:");
}

id objc_msgSend__resetResultObjectsTimer(void *a1, const char *a2, ...)
{
  return _[a1 _resetResultObjectsTimer];
}

id objc_msgSend__resetServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _resetServerConnection];
}

id objc_msgSend__resetServerConnectionSynchronously_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetServerConnectionSynchronously:completion:");
}

id objc_msgSend__resetServices(void *a1, const char *a2, ...)
{
  return _[a1 _resetServices];
}

id objc_msgSend__resetSessionOnRequestBoundaryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _resetSessionOnRequestBoundaryIfNeeded];
}

id objc_msgSend__resetSessionRequiresServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _resetSessionRequiresServerConnection];
}

id objc_msgSend__resetSessionRequiresSync(void *a1, const char *a2, ...)
{
  return _[a1 _resetSessionRequiresSync];
}

id objc_msgSend__resetSessionsAndMakeQuiet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSessionsAndMakeQuiet:");
}

id objc_msgSend__resetStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetStateWithCompletion:");
}

id objc_msgSend__resetSyncVerification(void *a1, const char *a2, ...)
{
  return _[a1 _resetSyncVerification];
}

id objc_msgSend__resetWinningState(void *a1, const char *a2, ...)
{
  return _[a1 _resetWinningState];
}

id objc_msgSend__resetWinningStateAndPurgeRequestMaps(void *a1, const char *a2, ...)
{
  return _[a1 _resetWinningStateAndPurgeRequestMaps];
}

id objc_msgSend__resetZoneFetchCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetZoneFetchCompletionBlock:");
}

id objc_msgSend__resetZoneWithZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetZoneWithZoneInfo:");
}

id objc_msgSend__resolveDataTaskForURLSession_URL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveDataTaskForURLSession:URL:completion:");
}

id objc_msgSend__resolveDeviceFixedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveDeviceFixedContext:");
}

id objc_msgSend__resolveSiriAccountInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveSiriAccountInformation:");
}

id objc_msgSend__resolveSiriDataSharingStatusMismatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveSiriDataSharingStatusMismatch:");
}

id objc_msgSend__responseModeProvider(void *a1, const char *a2, ...)
{
  return _[a1 _responseModeProvider];
}

id objc_msgSend__restartAndExtendListening(void *a1, const char *a2, ...)
{
  return _[a1 _restartAndExtendListening];
}

id objc_msgSend__restartConnectionProviders(void *a1, const char *a2, ...)
{
  return _[a1 _restartConnectionProviders];
}

id objc_msgSend__restrictedCommands(void *a1, const char *a2, ...)
{
  return _[a1 _restrictedCommands];
}

id objc_msgSend__resultObjectCache(void *a1, const char *a2, ...)
{
  return _[a1 _resultObjectCache];
}

id objc_msgSend__resultObjectsHoldTime(void *a1, const char *a2, ...)
{
  return _[a1 _resultObjectsHoldTime];
}

id objc_msgSend__resultObjectsTimerFired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultObjectsTimerFired:");
}

id objc_msgSend__resultStringFromHALAction_actionResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultStringFromHALAction:actionResult:");
}

id objc_msgSend__retrieveAndSendHomeContext(void *a1, const char *a2, ...)
{
  return _[a1 _retrieveAndSendHomeContext];
}

id objc_msgSend__retrieveConnectedDevicesInfoOnServices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retrieveConnectedDevicesInfoOnServices:completion:");
}

id objc_msgSend__retrieveKeyAndSaltWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retrieveKeyAndSaltWithCompletion:");
}

id objc_msgSend__retryForFailedConnection_withType_onError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retryForFailedConnection:withType:onError:");
}

id objc_msgSend__retryManager(void *a1, const char *a2, ...)
{
  return _[a1 _retryManager];
}

id objc_msgSend__retrySiriNetworkForFailedConnection_siriNetworkAnalysisInfo_onError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retrySiriNetworkForFailedConnection:siriNetworkAnalysisInfo:onError:");
}

id objc_msgSend__retryWithParameters_skipPeer_skipPeerError_causedByError_useSecondary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retryWithParameters:skipPeer:skipPeerError:causedByError:useSecondary:");
}

id objc_msgSend__reverseMapSessionRequestIdToADRequestId_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reverseMapSessionRequestIdToADRequestId:forSession:");
}

id objc_msgSend__ringerStateToken(void *a1, const char *a2, ...)
{
  return _[a1 _ringerStateToken];
}

id objc_msgSend__rootExecutionContextForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rootExecutionContextForRequestID:");
}

id objc_msgSend__rpDeviceMatchingPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rpDeviceMatchingPeerInfo:");
}

id objc_msgSend__runMaintenanceForServices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runMaintenanceForServices:completion:");
}

id objc_msgSend__saAddResultObjects_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saAddResultObjects:completion:");
}

id objc_msgSend__saConnectionMode(void *a1, const char *a2, ...)
{
  return _[a1 _saConnectionMode];
}

id objc_msgSend__saConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 _saConnectionType];
}

id objc_msgSend__saSNConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 _saSNConnectionType];
}

id objc_msgSend__saSetMultilingualDictationConfig_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saSetMultilingualDictationConfig:completion:");
}

id objc_msgSend__saSyncClientVerify_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saSyncClientVerify:completion:");
}

id objc_msgSend__saUnhandledObject_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saUnhandledObject:completion:");
}

id objc_msgSend__sameItem_other_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sameItem:other:");
}

id objc_msgSend__samplesPerInterval(void *a1, const char *a2, ...)
{
  return _[a1 _samplesPerInterval];
}

id objc_msgSend__sasSpeechRecognized_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sasSpeechRecognized:executionContext:completion:");
}

id objc_msgSend__save(void *a1, const char *a2, ...)
{
  return _[a1 _save];
}

id objc_msgSend__saveAccount_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveAccount:setActive:");
}

id objc_msgSend__saveBackupIdentifiersAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveBackupIdentifiersAnchor:");
}

id objc_msgSend__saveCachedAssistantDataAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveCachedAssistantDataAnchor:");
}

id objc_msgSend__saveCloudSyncEnabledRecord_mirror_qualityOfService_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveCloudSyncEnabledRecord:mirror:qualityOfService:completion:");
}

id objc_msgSend__saveDeviceOwnerToKeychainCache(void *a1, const char *a2, ...)
{
  return _[a1 _saveDeviceOwnerToKeychainCache];
}

id objc_msgSend__saveIdentifiersAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveIdentifiersAnchor:");
}

id objc_msgSend__savePrimaryAndDeviceOwner(void *a1, const char *a2, ...)
{
  return _[a1 _savePrimaryAndDeviceOwner];
}

id objc_msgSend__saveSharedUsers(void *a1, const char *a2, ...)
{
  return _[a1 _saveSharedUsers];
}

id objc_msgSend__saveStats(void *a1, const char *a2, ...)
{
  return _[a1 _saveStats];
}

id objc_msgSend__saveTimeouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveTimeouts:");
}

id objc_msgSend__savedAudioFilesDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _savedAudioFilesDirectory];
}

id objc_msgSend__scheduleCallKeepAlive(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleCallKeepAlive];
}

id objc_msgSend__scheduleLocationSLATimer(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleLocationSLATimer];
}

id objc_msgSend__scheduleLocationTimerWithTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleLocationTimerWithTimeout:");
}

id objc_msgSend__scheduleMirrorSynchronizationAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleMirrorSynchronizationAfterDelay:");
}

id objc_msgSend__scheduleNowPlayingRefreshForReason_isPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleNowPlayingRefreshForReason:isPlaying:");
}

id objc_msgSend__scheduleOrExtendAWDLClientLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleOrExtendAWDLClientLinkTimer];
}

id objc_msgSend__scheduleSave(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleSave];
}

id objc_msgSend__scheduleTimerForMaxDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleTimerForMaxDelay:");
}

id objc_msgSend__securityListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_securityListenerShouldAcceptNewConnection:");
}

id objc_msgSend__selectedCalendarsForEventStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectedCalendarsForEventStore:");
}

id objc_msgSend__selectedSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 _selectedSharedUserID];
}

id objc_msgSend__selectorForCommandClass_andDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectorForCommandClass:andDomain:");
}

id objc_msgSend__sendAMOSCommand_domain_toBundleWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendAMOSCommand:domain:toBundleWithIdentifier:completion:");
}

id objc_msgSend__sendAMOSCommandToService_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendAMOSCommandToService:responseHandler:");
}

id objc_msgSend__sendAssistantDataAndPendingCommandsIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendAssistantDataAndPendingCommandsIfNeeded:");
}

id objc_msgSend__sendAssistantDataChangedSinceAnchor_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendAssistantDataChangedSinceAnchor:refId:");
}

id objc_msgSend__sendBeginAudioSessionRequest_toDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendBeginAudioSessionRequest:toDeviceWithID:responseHandler:");
}

id objc_msgSend__sendBuffer(void *a1, const char *a2, ...)
{
  return _[a1 _sendBuffer];
}

id objc_msgSend__sendCancelSpeechForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCancelSpeechForCommand:");
}

id objc_msgSend__sendCommandFailedForCommand_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandFailedForCommand:error:");
}

id objc_msgSend__sendCommandFailedForCommand_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandFailedForCommand:reason:");
}

id objc_msgSend__sendCommandToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandToServer:");
}

id objc_msgSend__sendCommandToServer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandToServer:completion:");
}

id objc_msgSend__sendCommandToServer_opportunistically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandToServer:opportunistically:");
}

id objc_msgSend__sendCommandToServer_opportunistically_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandToServer:opportunistically:completion:");
}

id objc_msgSend__sendContextAndRestrictionsForSpeechRequestWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendContextAndRestrictionsForSpeechRequestWithInfo:");
}

id objc_msgSend__sendContextPromiseForTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendContextPromiseForTypes:");
}

id objc_msgSend__sendContextPromiseForTypes_withAceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendContextPromiseForTypes:withAceId:");
}

id objc_msgSend__sendCreateSessionInfoRequestWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCreateSessionInfoRequestWithData:");
}

id objc_msgSend__sendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendData:");
}

id objc_msgSend__sendDestroyAssistant(void *a1, const char *a2, ...)
{
  return _[a1 _sendDestroyAssistant];
}

id objc_msgSend__sendEnableServerEndpointerCommandWithRefID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendEnableServerEndpointerCommandWithRefID:");
}

id objc_msgSend__sendEndAudioSessionRequest_toDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendEndAudioSessionRequest:toDeviceWithID:responseHandler:");
}

id objc_msgSend__sendGetSessionCertificateData(void *a1, const char *a2, ...)
{
  return _[a1 _sendGetSessionCertificateData];
}

id objc_msgSend__sendGizmoSharedDataIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _sendGizmoSharedDataIfNeeded];
}

id objc_msgSend__sendHeartbeatMessage_targetDeviceIdentifier_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendHeartbeatMessage:targetDeviceIdentifier:timeout:completion:");
}

id objc_msgSend__sendHomeContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendHomeContext:");
}

id objc_msgSend__sendKeepAudioSessionAliveRequest_toDeviceWithID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendKeepAudioSessionAliveRequest:toDeviceWithID:responseHandler:");
}

id objc_msgSend__sendLimboCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendLimboCommand:");
}

id objc_msgSend__sendLoadAssistantWithAccount_validationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendLoadAssistantWithAccount:validationData:");
}

id objc_msgSend__sendLocationIfNeededForRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendLocationIfNeededForRequest];
}

id objc_msgSend__sendMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:completion:");
}

id objc_msgSend__sendMessage_messageType_toTargetDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:messageType:toTargetDevice:completion:");
}

id objc_msgSend__sendMessage_toDeviceWithID_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:toDeviceWithID:replyHandler:");
}

id objc_msgSend__sendMetrics_requiresActiveSession_batch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMetrics:requiresActiveSession:batch:completion:");
}

id objc_msgSend__sendMultiUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 _sendMultiUserInfo];
}

id objc_msgSend__sendPendingCommands(void *a1, const char *a2, ...)
{
  return _[a1 _sendPendingCommands];
}

id objc_msgSend__sendPendingDormantCommands(void *a1, const char *a2, ...)
{
  return _[a1 _sendPendingDormantCommands];
}

id objc_msgSend__sendProto_ofType_originalRequestId_toPeers_responseType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendProto:ofType:originalRequestId:toPeers:responseType:completion:");
}

id objc_msgSend__sendProto_ofType_toPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendProto:ofType:toPeers:");
}

id objc_msgSend__sendProto_ofType_toPeers_responseType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendProto:ofType:toPeers:responseType:completion:");
}

id objc_msgSend__sendRequest_responseClass_fireAndForget_timeout_overrideRequireConnectedPeer_to_allowCloud_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:");
}

id objc_msgSend__sendRequestID_messageType_messagePayload_destinationID_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRequestID:messageType:messagePayload:destinationID:options:completion:");
}

id objc_msgSend__sendRequestID_request_destinationID_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRequestID:request:destinationID:options:responseHandler:");
}

id objc_msgSend__sendRequestID_request_recipientID_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRequestID:request:recipientID:responseHandler:");
}

id objc_msgSend__sendRequestToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRequestToServer:");
}

id objc_msgSend__sendResponse_forRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendResponse:forRequestId:");
}

id objc_msgSend__sendRestrictionsInPreparationForRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendRestrictionsInPreparationForRequest];
}

id objc_msgSend__sendRetryableRequestToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRetryableRequestToServer:");
}

id objc_msgSend__sendRollbackCommandForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRollbackCommandForCommand:");
}

id objc_msgSend__sendServerCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendServerCommand:");
}

id objc_msgSend__sendServerCommandLogErrorForCommand_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendServerCommandLogErrorForCommand:withContext:");
}

id objc_msgSend__sendServerCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendServerCommands:");
}

id objc_msgSend__sendServiceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendServiceCommand:completion:");
}

id objc_msgSend__sendSessionObject_opportunistically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSessionObject:opportunistically:");
}

id objc_msgSend__sendSetRemoteDevicesWithAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSetRemoteDevicesWithAccount:");
}

id objc_msgSend__sendSetRemoteDevicesWithAccount_multiUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSetRemoteDevicesWithAccount:multiUserInfo:");
}

id objc_msgSend__sendStartSpeechCommandWithSpeechManager_info_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStartSpeechCommandWithSpeechManager:info:context:");
}

id objc_msgSend__sendStereoPartnerAction_timerID_changes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStereoPartnerAction:timerID:changes:completion:");
}

id objc_msgSend__sendSyncFinishedAndReferenceCurrentSyncPromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSyncFinishedAndReferenceCurrentSyncPromise:");
}

id objc_msgSend__sendSyncTokenToAccessories_transferReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSyncTokenToAccessories:transferReason:");
}

id objc_msgSend__sendSyncTokenToAccessoryWithHomeKitIdentifier_aceHost_clientLink_transferReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSyncTokenToAccessoryWithHomeKitIdentifier:aceHost:clientLink:transferReason:");
}

id objc_msgSend__sendSyncTokenToUpdatedPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendSyncTokenToUpdatedPeer:");
}

id objc_msgSend__sendWillStopRecordingForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendWillStopRecordingForCommand:");
}

id objc_msgSend__serializedData(void *a1, const char *a2, ...)
{
  return _[a1 _serializedData];
}

id objc_msgSend__serverConfigurationForServerConfigurationInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serverConfigurationForServerConfigurationInfo:completion:");
}

id objc_msgSend__serverConnection(void *a1, const char *a2, ...)
{
  return _[a1 _serverConnection];
}

id objc_msgSend__serverOverrideFromPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _serverOverrideFromPreferences];
}

id objc_msgSend__service(void *a1, const char *a2, ...)
{
  return _[a1 _service];
}

id objc_msgSend__service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_service:");
}

id objc_msgSend__serviceBundleIDFromServiceReloadNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceBundleIDFromServiceReloadNotification:");
}

id objc_msgSend__serviceDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _serviceDelegate];
}

id objc_msgSend__serviceDelegateWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceDelegateWithErrorHandler:");
}

id objc_msgSend__serviceManager(void *a1, const char *a2, ...)
{
  return _[a1 _serviceManager];
}

id objc_msgSend__serviceMap(void *a1, const char *a2, ...)
{
  return _[a1 _serviceMap];
}

id objc_msgSend__serviceStatsPath(void *a1, const char *a2, ...)
{
  return _[a1 _serviceStatsPath];
}

id objc_msgSend__serviceWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceWithErrorHandler:");
}

id objc_msgSend__sessionAttached_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionAttached:result:");
}

id objc_msgSend__sessionDetached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionDetached:");
}

id objc_msgSend__sessionDidFailWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionDidFailWithError:");
}

id objc_msgSend__sessionManager(void *a1, const char *a2, ...)
{
  return _[a1 _sessionManager];
}

id objc_msgSend__sessionRequiresConnection(void *a1, const char *a2, ...)
{
  return _[a1 _sessionRequiresConnection];
}

id objc_msgSend__sessionTerminated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionTerminated:");
}

id objc_msgSend__sessionWithDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionWithDeviceIdentifier:");
}

id objc_msgSend__sessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionWithUUID:");
}

id objc_msgSend__setADShouldSpeak_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setADShouldSpeak:");
}

id objc_msgSend__setAVSystemController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAVSystemController:");
}

id objc_msgSend__setAirPlayRouteIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAirPlayRouteIdentifiers:");
}

id objc_msgSend__setAlertContext(void *a1, const char *a2, ...)
{
  return _[a1 _setAlertContext];
}

id objc_msgSend__setAllowExplicitContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAllowExplicitContent:");
}

id objc_msgSend__setAnchorsToSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAnchorsToSync:");
}

id objc_msgSend__setAppleAccountSiriStateEnabled_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAppleAccountSiriStateEnabled:withCompletion:");
}

id objc_msgSend__setApplyChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setApplyChanges:");
}

id objc_msgSend__setAssistantDataAnchorIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAssistantDataAnchorIfNeeded:");
}

id objc_msgSend__setAssistantId_forDeviceWithIdsDeviceUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAssistantId:forDeviceWithIdsDeviceUniqueIdentifier:");
}

id objc_msgSend__setAssistantIsEnabledLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAssistantIsEnabledLocal:");
}

id objc_msgSend__setAudioFileIOTransactionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAudioFileIOTransactionState:");
}

id objc_msgSend__setAudioSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAudioSessionID:");
}

id objc_msgSend__setBackgroundContext(void *a1, const char *a2, ...)
{
  return _[a1 _setBackgroundContext];
}

id objc_msgSend__setBluetoothDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBluetoothDevice:");
}

id objc_msgSend__setBoolSetting_currentValueBlock_setValueBlock_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBoolSetting:currentValueBlock:setValueBlock:completion:");
}

id objc_msgSend__setCachedServerCertificate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCachedServerCertificate:");
}

id objc_msgSend__setCachedSharedData_forUniqueId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCachedSharedData:forUniqueId:");
}

id objc_msgSend__setCachedValidationData_withDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCachedValidationData:withDuration:");
}

id objc_msgSend__setCallIsLikely_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCallIsLikely:");
}

id objc_msgSend__setCarDNDRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCarDNDRestriction:");
}

id objc_msgSend__setCollectingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCollectingContext:");
}

id objc_msgSend__setConnectionStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setConnectionStartTime:");
}

id objc_msgSend__setContext_forPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContext:forPID:");
}

id objc_msgSend__setContextCollectionAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContextCollectionAllowed:");
}

id objc_msgSend__setContinueBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContinueBlock:");
}

id objc_msgSend__setCurrentAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentAnchor:");
}

id objc_msgSend__setCurrentAnchorToNext(void *a1, const char *a2, ...)
{
  return _[a1 _setCurrentAnchorToNext];
}

id objc_msgSend__setCurrentConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentConnectionType:");
}

id objc_msgSend__setCurrentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentRequest:");
}

id objc_msgSend__setCurrentRequestWithCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentRequestWithCommand:");
}

id objc_msgSend__setCurrentRequestWithRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentRequestWithRequestId:");
}

id objc_msgSend__setDataFromSharedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDataFromSharedData:");
}

id objc_msgSend__setDefaultToken_inDynamiteClientState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDefaultToken:inDynamiteClientState:");
}

id objc_msgSend__setDefaultiCloudEnabledState(void *a1, const char *a2, ...)
{
  return _[a1 _setDefaultiCloudEnabledState];
}

id objc_msgSend__setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDelegate:");
}

id objc_msgSend__setDeviceIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDeviceIdentifiers:");
}

id objc_msgSend__setDictationAutoPunctuationEnabledLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationAutoPunctuationEnabledLocal:");
}

id objc_msgSend__setDictationIsAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationIsAllowed:");
}

id objc_msgSend__setDictationIsEnabledLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationIsEnabledLocal:");
}

id objc_msgSend__setDormantWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDormantWithStyle:");
}

id objc_msgSend__setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEnabledTopics:");
}

id objc_msgSend__setExperimentIdentifier_forConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setExperimentIdentifier:forConfigurationIdentifier:");
}

id objc_msgSend__setFirstChanceService_forAceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFirstChanceService:forAceId:");
}

id objc_msgSend__setForceResetOnNextSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setForceResetOnNextSync:");
}

id objc_msgSend__setHasIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHasIncomingCall:");
}

id objc_msgSend__setHeadphonesAuthenticated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHeadphonesAuthenticated:");
}

id objc_msgSend__setHomeMembershipsDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHomeMembershipsDeletion:");
}

id objc_msgSend__setIsInCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsInCall:");
}

id objc_msgSend__setIsReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsReady:");
}

id objc_msgSend__setIsStereoPairConfigured_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsStereoPairConfigured:");
}

id objc_msgSend__setIsTimeoutSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsTimeoutSuspended:");
}

id objc_msgSend__setKeychainValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setKeychainValue:forKey:");
}

id objc_msgSend__setKeychainValueSync_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setKeychainValueSync:forKey:");
}

id objc_msgSend__setLanguageCode_outputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLanguageCode:outputVoice:");
}

id objc_msgSend__setLanguageCode_outputVoice_isDefaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLanguageCode:outputVoice:isDefaultValue:");
}

id objc_msgSend__setLanguageCode_outputVoice_isDefaultValue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLanguageCode:outputVoice:isDefaultValue:withCompletion:");
}

id objc_msgSend__setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers:");
}

id objc_msgSend__setLastMyriadWin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastMyriadWin:");
}

id objc_msgSend__setLastRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastRequest:");
}

id objc_msgSend__setLastTimeStereoPartnerWon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastTimeStereoPartnerWon:");
}

id objc_msgSend__setLaunchToForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLaunchToForeground:");
}

id objc_msgSend__setMotionActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMotionActivity:");
}

id objc_msgSend__setOnDeviceDictationAvailableAlertPresentedLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOnDeviceDictationAvailableAlertPresentedLocal:");
}

id objc_msgSend__setOriginatingAceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOriginatingAceID:");
}

id objc_msgSend__setPreferBTClassic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPreferBTClassic:");
}

id objc_msgSend__setPreferredMediaUserForAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPreferredMediaUserForAccessory:");
}

id objc_msgSend__setPrimaryUserMeDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPrimaryUserMeDevice:");
}

id objc_msgSend__setPrimaryUserSiriLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPrimaryUserSiriLanguage:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setReadyState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setReadyState:");
}

id objc_msgSend__setRecordDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecordDeviceIdentifier:");
}

id objc_msgSend__setRecordDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecordDeviceUID:");
}

id objc_msgSend__setRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecordRoute:");
}

id objc_msgSend__setRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRefId:");
}

id objc_msgSend__setRequestCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestCompletion:");
}

id objc_msgSend__setRequestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestData:");
}

id objc_msgSend__setRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestId:");
}

id objc_msgSend__setRequestOptionsRequireTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestOptionsRequireTTS:");
}

id objc_msgSend__setRestrictedAppContext(void *a1, const char *a2, ...)
{
  return _[a1 _setRestrictedAppContext];
}

id objc_msgSend__setSNCurrentConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSNCurrentConnectionType:");
}

id objc_msgSend__setServerForcedTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setServerForcedTTS:");
}

id objc_msgSend__setSessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSessionId:");
}

id objc_msgSend__setSessionOpened(void *a1, const char *a2, ...)
{
  return _[a1 _setSessionOpened];
}

id objc_msgSend__setSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSettings:");
}

id objc_msgSend__setSharedUserMeDevice_forSharedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSharedUserMeDevice:forSharedUser:");
}

id objc_msgSend__setSharedUserSiriLanguage_forSharedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSharedUserSiriLanguage:forSharedUser:");
}

id objc_msgSend__setSiriInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSiriInfo:");
}

id objc_msgSend__setSiriOutputVolume_forAudioRoute_operationType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSiriOutputVolume:forAudioRoute:operationType:completion:");
}

id objc_msgSend__setSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSnapshot:");
}

id objc_msgSend__setSpeechCapturingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSpeechCapturingContext:");
}

id objc_msgSend__setSpeechRecognitionTransactionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSpeechRecognitionTransactionState:");
}

id objc_msgSend__setSpeechRecognizedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSpeechRecognizedContext:");
}

id objc_msgSend__setStandardFieldsOnNotificationObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setStandardFieldsOnNotificationObject:");
}

id objc_msgSend__setStarkRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setStarkRestriction:");
}

id objc_msgSend__setSupportsCarPlayVehicleDataRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSupportsCarPlayVehicleDataRestriction:");
}

id objc_msgSend__setSyncContext(void *a1, const char *a2, ...)
{
  return _[a1 _setSyncContext];
}

id objc_msgSend__setTurnId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTurnId:");
}

id objc_msgSend__setUIService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUIService:");
}

id objc_msgSend__setUpAccessoryManager(void *a1, const char *a2, ...)
{
  return _[a1 _setUpAccessoryManager];
}

id objc_msgSend__setUpBBObserver(void *a1, const char *a2, ...)
{
  return _[a1 _setUpBBObserver];
}

id objc_msgSend__setUpLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 _setUpLocalDevice];
}

id objc_msgSend__setUpMirroredZoneWithZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpMirroredZoneWithZoneInfo:");
}

id objc_msgSend__setUpNewIntermediateIDsSetForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpNewIntermediateIDsSetForPeer:");
}

id objc_msgSend__setUpOnDemandClientLinkToContextCollector(void *a1, const char *a2, ...)
{
  return _[a1 _setUpOnDemandClientLinkToContextCollector];
}

id objc_msgSend__setUpRapportLink(void *a1, const char *a2, ...)
{
  return _[a1 _setUpRapportLink];
}

id objc_msgSend__setUpRequestHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setUpRequestHandlers];
}

id objc_msgSend__setUpZoneWithZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpZoneWithZoneInfo:");
}

id objc_msgSend__setVoiceRecordingEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setVoiceRecordingEndTime:");
}

id objc_msgSend__setVoiceRecordingStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setVoiceRecordingStartTime:");
}

id objc_msgSend__setVoiceSendEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setVoiceSendEndTime:");
}

id objc_msgSend__setVoiceSendStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setVoiceSendStartTime:");
}

id objc_msgSend__setWatchAuthenticated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWatchAuthenticated:");
}

id objc_msgSend__settingsConnection(void *a1, const char *a2, ...)
{
  return _[a1 _settingsConnection];
}

id objc_msgSend__settingsForHomeUser_forHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_settingsForHomeUser:forHome:");
}

id objc_msgSend__settingsListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_settingsListenerShouldAcceptNewConnection:");
}

id objc_msgSend__setupAccessibility(void *a1, const char *a2, ...)
{
  return _[a1 _setupAccessibility];
}

id objc_msgSend__setupAccount(void *a1, const char *a2, ...)
{
  return _[a1 _setupAccount];
}

id objc_msgSend__setupAccountState(void *a1, const char *a2, ...)
{
  return _[a1 _setupAccountState];
}

id objc_msgSend__setupAccountStatusRecordZone(void *a1, const char *a2, ...)
{
  return _[a1 _setupAccountStatusRecordZone];
}

id objc_msgSend__setupAnalyticsListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupAnalyticsListener];
}

id objc_msgSend__setupAnalyticsObservationListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupAnalyticsObservationListener];
}

id objc_msgSend__setupAnnouncementSpeakingStatePublisher(void *a1, const char *a2, ...)
{
  return _[a1 _setupAnnouncementSpeakingStatePublisher];
}

id objc_msgSend__setupAudioSessionAssertionAcquisitionService(void *a1, const char *a2, ...)
{
  return _[a1 _setupAudioSessionAssertionAcquisitionService];
}

id objc_msgSend__setupAudioSessionAssertionServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupAudioSessionAssertionServiceListener];
}

id objc_msgSend__setupBGSystemTasksForASRSubscriptionFromVoice(void *a1, const char *a2, ...)
{
  return _[a1 _setupBGSystemTasksForASRSubscriptionFromVoice];
}

id objc_msgSend__setupClientAWDLTransportLinkForDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupClientAWDLTransportLinkForDestination:");
}

id objc_msgSend__setupClientLink(void *a1, const char *a2, ...)
{
  return _[a1 _setupClientLink];
}

id objc_msgSend__setupClientListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupClientListener];
}

id objc_msgSend__setupClientLiteListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupClientLiteListener];
}

id objc_msgSend__setupCloudKit(void *a1, const char *a2, ...)
{
  return _[a1 _setupCloudKit];
}

id objc_msgSend__setupContextListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupContextListener];
}

id objc_msgSend__setupDictationListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupDictationListener];
}

id objc_msgSend__setupDiscoveryWithRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupDiscoveryWithRetry:");
}

id objc_msgSend__setupDistributedNotificationHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupDistributedNotificationHandlers];
}

id objc_msgSend__setupExternalRequestListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupExternalRequestListener];
}

id objc_msgSend__setupHomeKit(void *a1, const char *a2, ...)
{
  return _[a1 _setupHomeKit];
}

id objc_msgSend__setupIDSServices(void *a1, const char *a2, ...)
{
  return _[a1 _setupIDSServices];
}

id objc_msgSend__setupIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _setupIfNecessary];
}

id objc_msgSend__setupInternal(void *a1, const char *a2, ...)
{
  return _[a1 _setupInternal];
}

id objc_msgSend__setupKeyValueRecordZone(void *a1, const char *a2, ...)
{
  return _[a1 _setupKeyValueRecordZone];
}

id objc_msgSend__setupLocationService(void *a1, const char *a2, ...)
{
  return _[a1 _setupLocationService];
}

id objc_msgSend__setupLocationServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupLocationServiceListener];
}

id objc_msgSend__setupMUXSupport(void *a1, const char *a2, ...)
{
  return _[a1 _setupMUXSupport];
}

id objc_msgSend__setupManagedStorageListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupManagedStorageListener];
}

id objc_msgSend__setupMeDeviceFetch(void *a1, const char *a2, ...)
{
  return _[a1 _setupMeDeviceFetch];
}

id objc_msgSend__setupMemoryPressureObservation(void *a1, const char *a2, ...)
{
  return _[a1 _setupMemoryPressureObservation];
}

id objc_msgSend__setupMobileGestaltNotificationHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupMobileGestaltNotificationHandlers];
}

id objc_msgSend__setupMultiUserCloudSyncer(void *a1, const char *a2, ...)
{
  return _[a1 _setupMultiUserCloudSyncer];
}

id objc_msgSend__setupMultiUserListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupMultiUserListener];
}

id objc_msgSend__setupMultiUserSharedRecordZone(void *a1, const char *a2, ...)
{
  return _[a1 _setupMultiUserSharedRecordZone];
}

id objc_msgSend__setupMultiUserSharedRecordZoneIfHomeIsReady(void *a1, const char *a2, ...)
{
  return _[a1 _setupMultiUserSharedRecordZoneIfHomeIsReady];
}

id objc_msgSend__setupNanoPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _setupNanoPreferences];
}

id objc_msgSend__setupNotificationServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotificationServiceListener];
}

id objc_msgSend__setupNotifyHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotifyHandlers];
}

id objc_msgSend__setupOfflineDictationStatusObserver(void *a1, const char *a2, ...)
{
  return _[a1 _setupOfflineDictationStatusObserver];
}

id objc_msgSend__setupPairedSync(void *a1, const char *a2, ...)
{
  return _[a1 _setupPairedSync];
}

id objc_msgSend__setupPommesSearchService(void *a1, const char *a2, ...)
{
  return _[a1 _setupPommesSearchService];
}

id objc_msgSend__setupPrimaryContainer(void *a1, const char *a2, ...)
{
  return _[a1 _setupPrimaryContainer];
}

id objc_msgSend__setupRapportServices(void *a1, const char *a2, ...)
{
  return _[a1 _setupRapportServices];
}

id objc_msgSend__setupRecordZoneSubscriptionWithZoneInfo_retryInterval_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupRecordZoneSubscriptionWithZoneInfo:retryInterval:container:");
}

id objc_msgSend__setupRecordZoneWithZoneInfo_retryInterval_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupRecordZoneWithZoneInfo:retryInterval:completion:");
}

id objc_msgSend__setupSecondaryAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _setupSecondaryAccounts];
}

id objc_msgSend__setupSecurityListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupSecurityListener];
}

id objc_msgSend__setupSessionLanguage(void *a1, const char *a2, ...)
{
  return _[a1 _setupSessionLanguage];
}

id objc_msgSend__setupSettingsListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupSettingsListener];
}

id objc_msgSend__setupSharedDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _setupSharedDatabase];
}

id objc_msgSend__setupSharedDatabaseView(void *a1, const char *a2, ...)
{
  return _[a1 _setupSharedDatabaseView];
}

id objc_msgSend__setupSharedZoneUpdaterForOwner(void *a1, const char *a2, ...)
{
  return _[a1 _setupSharedZoneUpdaterForOwner];
}

id objc_msgSend__setupSharedZoneView(void *a1, const char *a2, ...)
{
  return _[a1 _setupSharedZoneView];
}

id objc_msgSend__setupSiriAnalyticsListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupSiriAnalyticsListener];
}

id objc_msgSend__setupStaleNetworkTimerForProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupStaleNetworkTimerForProvider:");
}

id objc_msgSend__setupSynapseSyncListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupSynapseSyncListener];
}

id objc_msgSend__setupSyncListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupSyncListener];
}

id objc_msgSend__setupTetherListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupTetherListener];
}

id objc_msgSend__setupTrialRefresh(void *a1, const char *a2, ...)
{
  return _[a1 _setupTrialRefresh];
}

id objc_msgSend__setupUIBridgeServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupUIBridgeServiceListener];
}

id objc_msgSend__setupVoiceTriggerSyncTimer(void *a1, const char *a2, ...)
{
  return _[a1 _setupVoiceTriggerSyncTimer];
}

id objc_msgSend__setupWirelessCoexManagerSubscription(void *a1, const char *a2, ...)
{
  return _[a1 _setupWirelessCoexManagerSubscription];
}

id objc_msgSend__setupZoneSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupZoneSharing:");
}

id objc_msgSend__setupZoneSubscriptionsForSecondaryAccount_zoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupZoneSubscriptionsForSecondaryAccount:zoneInfo:");
}

id objc_msgSend__setupZonesForSecondaryAccount_container_acctInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupZonesForSecondaryAccount:container:acctInfo:");
}

id objc_msgSend__sharedCommandCenter(void *a1, const char *a2, ...)
{
  return _[a1 _sharedCommandCenter];
}

id objc_msgSend__sharedDataService(void *a1, const char *a2, ...)
{
  return _[a1 _sharedDataService];
}

id objc_msgSend__sharedLinkForSiriInfo(void *a1, const char *a2, ...)
{
  return _[a1 _sharedLinkForSiriInfo];
}

id objc_msgSend__sharedMultiUserService(void *a1, const char *a2, ...)
{
  return _[a1 _sharedMultiUserService];
}

id objc_msgSend__sharedVoiceAudioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 _sharedVoiceAudioSessionID];
}

id objc_msgSend__shouldAnnounceGivenCurrentClientConditionsForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAnnounceGivenCurrentClientConditionsForRequest:completion:");
}

id objc_msgSend__shouldDisableServerFallbackABForDomainDirected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldDisableServerFallbackABForDomainDirected:");
}

id objc_msgSend__shouldDumpSiriOnDeviceAnalyticsBiomeStreams(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDumpSiriOnDeviceAnalyticsBiomeStreams];
}

id objc_msgSend__shouldExcludeEvent_allowAllDayEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldExcludeEvent:allowAllDayEvents:");
}

id objc_msgSend__shouldGetLinkRecommendation(void *a1, const char *a2, ...)
{
  return _[a1 _shouldGetLinkRecommendation];
}

id objc_msgSend__shouldHandleAnnouncementLocallyForRoute_notificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleAnnouncementLocallyForRoute:notificationRequest:");
}

id objc_msgSend__shouldIgnoreCommand_executionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnoreCommand:executionContext:");
}

id objc_msgSend__shouldImmediatelyDismissSiriDueToMissingRequiredAssets(void *a1, const char *a2, ...)
{
  return _[a1 _shouldImmediatelyDismissSiriDueToMissingRequiredAssets];
}

id objc_msgSend__shouldLogAFAnalyticsCrossDeviceEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldLogAFAnalyticsCrossDeviceEvent:");
}

id objc_msgSend__shouldLogAssetsPreparedEvent(void *a1, const char *a2, ...)
{
  return _[a1 _shouldLogAssetsPreparedEvent];
}

id objc_msgSend__shouldLogDiscoveryContextForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldLogDiscoveryContextForRequestId:");
}

id objc_msgSend__shouldRetry(void *a1, const char *a2, ...)
{
  return _[a1 _shouldRetry];
}

id objc_msgSend__shouldRetryForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRetryForError:");
}

id objc_msgSend__shouldRouteThroughPairedPhone(void *a1, const char *a2, ...)
{
  return _[a1 _shouldRouteThroughPairedPhone];
}

id objc_msgSend__shouldSendAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSendAssistantData];
}

id objc_msgSend__shouldSpeak(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSpeak];
}

id objc_msgSend__shouldStopPlaybackWhenRequestBegins(void *a1, const char *a2, ...)
{
  return _[a1 _shouldStopPlaybackWhenRequestBegins];
}

id objc_msgSend__shouldUseOneshotLocationRequest(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseOneshotLocationRequest];
}

id objc_msgSend__shouldWakeSystemForHandlingCommand_executionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldWakeSystemForHandlingCommand:executionContext:");
}

id objc_msgSend__shutdownAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shutdownAfterDelay:");
}

id objc_msgSend__shutdownSessionWhenIdle(void *a1, const char *a2, ...)
{
  return _[a1 _shutdownSessionWhenIdle];
}

id objc_msgSend__signalUSTTestRequestWithStartRequest_requestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signalUSTTestRequestWithStartRequest:requestInfo:");
}

id objc_msgSend__siriAuthorizationStatusForAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriAuthorizationStatusForAppID:");
}

id objc_msgSend__siriAuthorizationStatusForAppID_intentSlot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriAuthorizationStatusForAppID:intentSlot:");
}

id objc_msgSend__siriConnection_didEncounterError_analysisInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriConnection:didEncounterError:analysisInfo:");
}

id objc_msgSend__siriConnection_siriNetworkConnection_didEncounterError_siriCoreAnalysisInfo_siriNetworkAnalysisInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriConnection:siriNetworkConnection:didEncounterError:siriCoreAnalysisInfo:siriNetworkAnalysisInfo:");
}

id objc_msgSend__siriDataSharingAdjustment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriDataSharingAdjustment:");
}

id objc_msgSend__siriNetworkManager(void *a1, const char *a2, ...)
{
  return _[a1 _siriNetworkManager];
}

id objc_msgSend__siriNetworkServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 _siriNetworkServerConnection];
}

id objc_msgSend__siriOrDictationIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _siriOrDictationIsEnabled];
}

id objc_msgSend__siriRelatedRestrictedAppsForApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriRelatedRestrictedAppsForApps:");
}

id objc_msgSend__sortedAnchorsFromAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortedAnchorsFromAnchors:");
}

id objc_msgSend__soundIDForAnnouncePlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_soundIDForAnnouncePlatform:");
}

id objc_msgSend__soundURLForAnnouncePlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_soundURLForAnnouncePlatform:");
}

id objc_msgSend__source(void *a1, const char *a2, ...)
{
  return _[a1 _source];
}

id objc_msgSend__speechCaptureCompleted(void *a1, const char *a2, ...)
{
  return _[a1 _speechCaptureCompleted];
}

id objc_msgSend__speechCapturingContext(void *a1, const char *a2, ...)
{
  return _[a1 _speechCapturingContext];
}

id objc_msgSend__speechCapturingContextForSessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speechCapturingContextForSessionUUID:");
}

id objc_msgSend__speechCodecError(void *a1, const char *a2, ...)
{
  return _[a1 _speechCodecError];
}

id objc_msgSend__speechCompressor(void *a1, const char *a2, ...)
{
  return _[a1 _speechCompressor];
}

id objc_msgSend__speechDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _speechDelegate];
}

id objc_msgSend__speechDelegateHasReceivedPartialResult(void *a1, const char *a2, ...)
{
  return _[a1 _speechDelegateHasReceivedPartialResult];
}

id objc_msgSend__speechFileDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _speechFileDelegate];
}

id objc_msgSend__speechLogDecodingError(void *a1, const char *a2, ...)
{
  return _[a1 _speechLogDecodingError];
}

id objc_msgSend__speechManager(void *a1, const char *a2, ...)
{
  return _[a1 _speechManager];
}

id objc_msgSend__speechRecorder(void *a1, const char *a2, ...)
{
  return _[a1 _speechRecorder];
}

id objc_msgSend__speechRecordingDidFinish(void *a1, const char *a2, ...)
{
  return _[a1 _speechRecordingDidFinish];
}

id objc_msgSend__stageEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stageEvent:");
}

id objc_msgSend__stageEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stageEvents:");
}

id objc_msgSend__startAcousticIDRequestWithDelegate_withOptions_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAcousticIDRequestWithDelegate:withOptions:context:");
}

id objc_msgSend__startAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAnnouncementRequest:");
}

id objc_msgSend__startAnnouncementRequestIfOpportune_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAnnouncementRequestIfOpportune:");
}

id objc_msgSend__startAnnouncementRequestWithRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAnnouncementRequestWithRequestInfo:");
}

id objc_msgSend__startAttendingForSpeechIfNeededForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAttendingForSpeechIfNeededForRequest:completion:");
}

id objc_msgSend__startAttendingForSpeechPauseWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAttendingForSpeechPauseWithType:completion:");
}

id objc_msgSend__startAttendingForSpeechWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAttendingForSpeechWithType:completion:");
}

id objc_msgSend__startBestLocationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startBestLocationTimer];
}

id objc_msgSend__startCaptureForMode_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startCaptureForMode:options:context:");
}

id objc_msgSend__startCloudKitActivityForHomes_homesToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startCloudKitActivityForHomes:homesToDelete:");
}

id objc_msgSend__startCloudSharingForMultiUserService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startCloudSharingForMultiUserService:");
}

id objc_msgSend__startConnection(void *a1, const char *a2, ...)
{
  return _[a1 _startConnection];
}

id objc_msgSend__startConnectionPreferringWWAN_skipPeer_skipPeerError_useWiFiHint_forceReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:");
}

id objc_msgSend__startDictationWithLanguageCode_options_speechOptions_sessionUUID_delegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:");
}

id objc_msgSend__startDictationWithLanguageCode_options_speechOptions_xpcconnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDictationWithLanguageCode:options:speechOptions:xpcconnection:");
}

id objc_msgSend__startFixedPriorityCaptureForMode_options_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startFixedPriorityCaptureForMode:options:sessionUUID:");
}

id objc_msgSend__startHeartBeatWithEffectiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startHeartBeatWithEffectiveDate:");
}

id objc_msgSend__startLanguageDetectionWaitTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startLanguageDetectionWaitTimer];
}

id objc_msgSend__startLocalRequest_withRequestInfo_forDelegate_suppressCancelationAlertIfCapturingSpeech_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startLocalRequest:withRequestInfo:forDelegate:suppressCancelationAlertIfCapturingSpeech:completion:");
}

id objc_msgSend__startMonitoringLocationForGetRequestOrigin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startMonitoringLocationForGetRequestOrigin:completion:");
}

id objc_msgSend__startMonitoringLocationWithDesiredAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startMonitoringLocationWithDesiredAccuracy:");
}

id objc_msgSend__startMonitoringUnlockActivity(void *a1, const char *a2, ...)
{
  return _[a1 _startMonitoringUnlockActivity];
}

id objc_msgSend__startNonSpeechRequest_forDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startNonSpeechRequest:forDelegate:");
}

id objc_msgSend__startNonSpeechRequest_forDelegate_withInfo_options_suppressAlert_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:");
}

id objc_msgSend__startObservingCallState(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingCallState];
}

id objc_msgSend__startObservingDataChangedNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingDataChangedNotifications];
}

id objc_msgSend__startObservingRouteChanges(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingRouteChanges];
}

id objc_msgSend__startObservingSystemVolumes(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingSystemVolumes];
}

id objc_msgSend__startPeriodicContextFetchFromNearbyDevices(void *a1, const char *a2, ...)
{
  return _[a1 _startPeriodicContextFetchFromNearbyDevices];
}

id objc_msgSend__startRecordingForPendingSpeechRequestForDelegate_withOptions_sessionUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:");
}

id objc_msgSend__startRemoteRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRemoteRequest:completion:");
}

id objc_msgSend__startRemoteRequest_onPeer_withContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRemoteRequest:onPeer:withContext:completion:");
}

id objc_msgSend__startRemoteRequest_onPeers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRemoteRequest:onPeers:completion:");
}

id objc_msgSend__startResultObjectsTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startResultObjectsTimer];
}

id objc_msgSend__startRetryTimer(void *a1, const char *a2, ...)
{
  return _[a1 _startRetryTimer];
}

id objc_msgSend__startServerRequestWithSpeechRequest_recordingContext_recordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startServerRequestWithSpeechRequest:recordingContext:recordingInfo:");
}

id objc_msgSend__startServerRequestWithStartRequest_requestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startServerRequestWithStartRequest:requestInfo:");
}

id objc_msgSend__startSession(void *a1, const char *a2, ...)
{
  return _[a1 _startSession];
}

id objc_msgSend__startSession_makeQuiet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSession:makeQuiet:");
}

id objc_msgSend__startSessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSessions:");
}

id objc_msgSend__startSpeechRequestWithDelegate_withOptions_sessionUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:");
}

id objc_msgSend__startSpeechRequestWithURL_isNarrowBand_withDelegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:");
}

id objc_msgSend__startTimerForMessage_targetDevice_heartbeat_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTimerForMessage:targetDevice:heartbeat:completion:");
}

id objc_msgSend__startTimerForMessage_targetDevice_timeout_heartbeat_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTimerForMessage:targetDevice:timeout:heartbeat:completion:");
}

id objc_msgSend__startTimerToResetStateFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTimerToResetStateFrom:");
}

id objc_msgSend__startUpdatingLocation(void *a1, const char *a2, ...)
{
  return _[a1 _startUpdatingLocation];
}

id objc_msgSend__startUpdatingMotionActivity(void *a1, const char *a2, ...)
{
  return _[a1 _startUpdatingMotionActivity];
}

id objc_msgSend__startVoiceTriggerSyncTimerWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startVoiceTriggerSyncTimerWithInterval:");
}

id objc_msgSend__startedOrStartingSession(void *a1, const char *a2, ...)
{
  return _[a1 _startedOrStartingSession];
}

id objc_msgSend__statsDict(void *a1, const char *a2, ...)
{
  return _[a1 _statsDict];
}

id objc_msgSend__statsDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _statsDirectory];
}

id objc_msgSend__statsForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statsForCommand:");
}

id objc_msgSend__stopCurrentRequestWithReason_shouldCancelRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopCurrentRequestWithReason:shouldCancelRequest:");
}

id objc_msgSend__stopHeartBeat(void *a1, const char *a2, ...)
{
  return _[a1 _stopHeartBeat];
}

id objc_msgSend__stopHouseKeepingTimer(void *a1, const char *a2, ...)
{
  return _[a1 _stopHouseKeepingTimer];
}

id objc_msgSend__stopLanguageDetectionWaitTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _stopLanguageDetectionWaitTimerIfNeeded];
}

id objc_msgSend__stopListeningForMuteStateChanges(void *a1, const char *a2, ...)
{
  return _[a1 _stopListeningForMuteStateChanges];
}

id objc_msgSend__stopListeningWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopListeningWithCompletion:");
}

id objc_msgSend__stopMonitoringUnlockActivity(void *a1, const char *a2, ...)
{
  return _[a1 _stopMonitoringUnlockActivity];
}

id objc_msgSend__stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 _stopObserving];
}

id objc_msgSend__stopObservingCallStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopObservingCallStateWithCompletion:");
}

id objc_msgSend__stopObservingDataChangedNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingDataChangedNotifications];
}

id objc_msgSend__stopObservingRouteChanges(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingRouteChanges];
}

id objc_msgSend__stopObservingSystemControllerLifecycle(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingSystemControllerLifecycle];
}

id objc_msgSend__stopObservingSystemVolumes(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingSystemVolumes];
}

id objc_msgSend__stopPeriodicContextFetchFromNearbyDevices(void *a1, const char *a2, ...)
{
  return _[a1 _stopPeriodicContextFetchFromNearbyDevices];
}

id objc_msgSend__stopPlayback(void *a1, const char *a2, ...)
{
  return _[a1 _stopPlayback];
}

id objc_msgSend__stopScanning(void *a1, const char *a2, ...)
{
  return _[a1 _stopScanning];
}

id objc_msgSend__stopStationaryScoreTimer(void *a1, const char *a2, ...)
{
  return _[a1 _stopStationaryScoreTimer];
}

id objc_msgSend__stopTimersWithContinuation(void *a1, const char *a2, ...)
{
  return _[a1 _stopTimersWithContinuation];
}

id objc_msgSend__stopUpdatingMotionActivity(void *a1, const char *a2, ...)
{
  return _[a1 _stopUpdatingMotionActivity];
}

id objc_msgSend__storageForDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storageForDeviceWithIdentifier:");
}

id objc_msgSend__store(void *a1, const char *a2, ...)
{
  return _[a1 _store];
}

id objc_msgSend__storeExtractedSpeechLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeExtractedSpeechLocally:");
}

id objc_msgSend__storePath(void *a1, const char *a2, ...)
{
  return _[a1 _storePath];
}

id objc_msgSend__storeServerConfig_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeServerConfig:completion:");
}

id objc_msgSend__storeWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeWithName:");
}

id objc_msgSend__streamPairInterruptedError(void *a1, const char *a2, ...)
{
  return _[a1 _streamPairInterruptedError];
}

id objc_msgSend__stripFZIDPrefix(void *a1, const char *a2, ...)
{
  return _[a1 _stripFZIDPrefix];
}

id objc_msgSend__submitMetricWithIdentifier_generation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitMetricWithIdentifier:generation:");
}

id objc_msgSend__submitMetricWithIdentifier_hotShipIdentifier_hotShipTimestamp_generation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:");
}

id objc_msgSend__subscribeToMorphunAssetStatusForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subscribeToMorphunAssetStatusForLanguage:");
}

id objc_msgSend__supportsAnnouncementType_forSupportedIntents_forBundleId_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsAnnouncementType:forSupportedIntents:forBundleId:onPlatform:");
}

id objc_msgSend__supportsBargeInForAnnounceNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsBargeInForAnnounceNotificationType:");
}

id objc_msgSend__supportsVolumeService(void *a1, const char *a2, ...)
{
  return _[a1 _supportsVolumeService];
}

id objc_msgSend__suppressLowStorageNotificationForLanguage_suppress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suppressLowStorageNotificationForLanguage:suppress:");
}

id objc_msgSend__synapseAppBundleIDFromPossibleDeamonBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synapseAppBundleIDFromPossibleDeamonBundleID:");
}

id objc_msgSend__synapseSyncListenerShouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synapseSyncListenerShouldAcceptNewConnection:");
}

id objc_msgSend__syncChunkWindowFull(void *a1, const char *a2, ...)
{
  return _[a1 _syncChunkWindowFull];
}

id objc_msgSend__syncClassForAnchorKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncClassForAnchorKey:");
}

id objc_msgSend__syncCompanionLinkDeviceLocalPeerData(void *a1, const char *a2, ...)
{
  return _[a1 _syncCompanionLinkDeviceLocalPeerData];
}

id objc_msgSend__syncController_hasCommandForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncController_hasCommandForRefId:");
}

id objc_msgSend__syncForReason_withCoalescing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncForReason:withCoalescing:");
}

id objc_msgSend__syncIdentifiersToCloud_forceUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncIdentifiersToCloud:forceUpdate:");
}

id objc_msgSend__syncIdentifiersToCloud_forceUpdate_voiceIDChangedToEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncIdentifiersToCloud:forceUpdate:voiceIDChangedToEnabled:");
}

id objc_msgSend__syncKeyMap(void *a1, const char *a2, ...)
{
  return _[a1 _syncKeyMap];
}

id objc_msgSend__syncLastWinWithStereoPartner(void *a1, const char *a2, ...)
{
  return _[a1 _syncLastWinWithStereoPartner];
}

id objc_msgSend__syncManager(void *a1, const char *a2, ...)
{
  return _[a1 _syncManager];
}

id objc_msgSend__syncMeCard_anchorToSave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncMeCard:anchorToSave:");
}

id objc_msgSend__syncMetadata(void *a1, const char *a2, ...)
{
  return _[a1 _syncMetadata];
}

id objc_msgSend__syncRecordForKey_fromDomainObject_appMeta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncRecordForKey:fromDomainObject:appMeta:");
}

id objc_msgSend__sync_commandFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_commandFailed:");
}

id objc_msgSend__sync_commandIgnored_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_commandIgnored:");
}

id objc_msgSend__sync_continueIfConditionsMet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_continueIfConditionsMet");
}

id objc_msgSend__sync_continueVerificationIfConditionsMet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_continueVerificationIfConditionsMet");
}

id objc_msgSend__sync_hasCommandForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_hasCommandForRefId:");
}

id objc_msgSend__sync_isRequestBlockingSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_isRequestBlockingSync");
}

id objc_msgSend__sync_isRequestBlockingSyncVerification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_isRequestBlockingSyncVerification");
}

id objc_msgSend__sync_isSyncing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_isSyncing");
}

id objc_msgSend__sync_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_reset");
}

id objc_msgSend__sync_syncAnchorKeys_forceReset_reasons_forSyncPromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:");
}

id objc_msgSend__sync_syncIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sync_syncIfNeeded");
}

id objc_msgSend__synchronizeMirroredContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronizeMirroredContainer:");
}

id objc_msgSend__synchronizeUsingActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronizeUsingActivity:completion:");
}

id objc_msgSend__synchronizeVoiceIDWithActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronizeVoiceIDWithActivity:completion:");
}

id objc_msgSend__systemDomains(void *a1, const char *a2, ...)
{
  return _[a1 _systemDomains];
}

id objc_msgSend__tccAccessInfoForAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tccAccessInfoForAppID:");
}

id objc_msgSend__tearDownAccessoryManager(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownAccessoryManager];
}

id objc_msgSend__tearDownIntermediateMessageIDs_forPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tearDownIntermediateMessageIDs:forPeer:");
}

id objc_msgSend__tearDownLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownLocalDevice];
}

id objc_msgSend__tearDownRequestHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownRequestHandlers];
}

id objc_msgSend__tellDelegateAboutSpeechPackets_atTimestamp_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateAboutSpeechPackets:atTimestamp:count:");
}

id objc_msgSend__tellDelegateAudioFileDidFinish_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateAudioFileDidFinish:error:");
}

id objc_msgSend__tellDelegateDidSetAudioSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateDidSetAudioSessionActive:");
}

id objc_msgSend__tellDelegateQuickStopWasRequested(void *a1, const char *a2, ...)
{
  return _[a1 _tellDelegateQuickStopWasRequested];
}

id objc_msgSend__tellDelegateShutdownUIWasRequested(void *a1, const char *a2, ...)
{
  return _[a1 _tellDelegateShutdownUIWasRequested];
}

id objc_msgSend__tellDelegateSpeechCanceled(void *a1, const char *a2, ...)
{
  return _[a1 _tellDelegateSpeechCanceled];
}

id objc_msgSend__tellDelegateSpeechFailedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateSpeechFailedWithError:");
}

id objc_msgSend__tellDelegateSpeechFinished(void *a1, const char *a2, ...)
{
  return _[a1 _tellDelegateSpeechFinished];
}

id objc_msgSend__tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode_totalPacketCount_endpointerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:");
}

id objc_msgSend__tellDelegateSpeechRecognitionUpdateWillBegin(void *a1, const char *a2, ...)
{
  return _[a1 _tellDelegateSpeechRecognitionUpdateWillBegin];
}

id objc_msgSend__tellDelegateSpeechShouldPreheatWithRecordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateSpeechShouldPreheatWithRecordingInfo:");
}

id objc_msgSend__tellDelegateSpeechStartedWithRecordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateSpeechStartedWithRecordingInfo:");
}

id objc_msgSend__tellDelegateSpeechWillBeginWithTimestamp_isFromFile_isAudioPowerUpdateDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:");
}

id objc_msgSend__tellDelegateUpdateAudioInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateUpdateAudioInfo:");
}

id objc_msgSend__tellDelegateWillSetAudioSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tellDelegateWillSetAudioSessionActive:");
}

id objc_msgSend__testAgent(void *a1, const char *a2, ...)
{
  return _[a1 _testAgent];
}

id objc_msgSend__testAndSetDefaultUserEphemeralId_creationTime_syncPath_expectedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testAndSetDefaultUserEphemeralId:creationTime:syncPath:expectedValue:");
}

id objc_msgSend__thresholdDetected(void *a1, const char *a2, ...)
{
  return _[a1 _thresholdDetected];
}

id objc_msgSend__timedOutError(void *a1, const char *a2, ...)
{
  return _[a1 _timedOutError];
}

id objc_msgSend__timeoutForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timeoutForCommand:");
}

id objc_msgSend__timeouts_expiringAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timeouts:expiringAfter:");
}

id objc_msgSend__timeoutsExpiringAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timeoutsExpiringAfter:");
}

id objc_msgSend__timerAceObjectFromTimer_withProximity_inDeviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timerAceObjectFromTimer:withProximity:inDeviceContext:");
}

id objc_msgSend__timerIntervalNanosec(void *a1, const char *a2, ...)
{
  return _[a1 _timerIntervalNanosec];
}

id objc_msgSend__timerStartNanosec(void *a1, const char *a2, ...)
{
  return _[a1 _timerStartNanosec];
}

id objc_msgSend__timestampToNSString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timestampToNSString:");
}

id objc_msgSend__trackCKContainer_accountInfo_foriCloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackCKContainer:accountInfo:foriCloudAltDSID:");
}

id objc_msgSend__trackGhostVoiceProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackGhostVoiceProfile:");
}

id objc_msgSend__trackHomeUserUUIDForInFlightVoiceProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackHomeUserUUIDForInFlightVoiceProfile:");
}

id objc_msgSend__trackedCKAccountInfoForiCloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackedCKAccountInfoForiCloudAltDSID:");
}

id objc_msgSend__trackedCKContainerForiCloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackedCKContainerForiCloudAltDSID:");
}

id objc_msgSend__transformedRequestDictionaryToForward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformedRequestDictionaryToForward:");
}

id objc_msgSend__triggerABCForEmptyLocale(void *a1, const char *a2, ...)
{
  return _[a1 _triggerABCForEmptyLocale];
}

id objc_msgSend__triggerABCForNullAssistantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _triggerABCForNullAssistantIdentifier];
}

id objc_msgSend__triggerLocationABCForSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerLocationABCForSubtype:");
}

id objc_msgSend__triggerMultiUserSharingPostBuddyOrCloudSyncChange(void *a1, const char *a2, ...)
{
  return _[a1 _triggerMultiUserSharingPostBuddyOrCloudSyncChange];
}

id objc_msgSend__triggerReportingForNullDeviceAggregationId(void *a1, const char *a2, ...)
{
  return _[a1 _triggerReportingForNullDeviceAggregationId];
}

id objc_msgSend__triggerVoiceProfileUploadPostBuddyOrCloudSyncChange(void *a1, const char *a2, ...)
{
  return _[a1 _triggerVoiceProfileUploadPostBuddyOrCloudSyncChange];
}

id objc_msgSend__triggerlessListeningTimerEnded(void *a1, const char *a2, ...)
{
  return _[a1 _triggerlessListeningTimerEnded];
}

id objc_msgSend__trimRecordedAudioWithIdentifier_offset_duration_outputFileType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:");
}

id objc_msgSend__truncatedGradingOptInStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_truncatedGradingOptInStateChanges:");
}

id objc_msgSend__trySendingShowRequestHandlingStatusForAsrOnDevice_startSpeechRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trySendingShowRequestHandlingStatusForAsrOnDevice:startSpeechRequestId:");
}

id objc_msgSend__tryToReadHTTPHeaderIntoMessage_fromData_isComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tryToReadHTTPHeaderIntoMessage:fromData:isComplete:");
}

id objc_msgSend__tryToReadPeerStreamHeaderFromData_needsReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tryToReadPeerStreamHeaderFromData:needsReconnect:");
}

id objc_msgSend__tryToWriteToNetworkConnection(void *a1, const char *a2, ...)
{
  return _[a1 _tryToWriteToNetworkConnection];
}

id objc_msgSend__turnId(void *a1, const char *a2, ...)
{
  return _[a1 _turnId];
}

id objc_msgSend__unblockWaitContext_forMessageID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unblockWaitContext:forMessageID:");
}

id objc_msgSend__unblockWaitingForMessageIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unblockWaitingForMessageIDs:");
}

id objc_msgSend__unexpectedMessageError(void *a1, const char *a2, ...)
{
  return _[a1 _unexpectedMessageError];
}

id objc_msgSend__unhandledCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhandledCommand:completion:");
}

id objc_msgSend__unhandledCommand_error_forDomain_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhandledCommand:error:forDomain:completion:");
}

id objc_msgSend__unhandledCommand_forDomain_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhandledCommand:forDomain:completion:");
}

id objc_msgSend__uniqueIdentifierForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uniqueIdentifierForPeer:");
}

id objc_msgSend__unlinkStoreForSysdiagnose(void *a1, const char *a2, ...)
{
  return _[a1 _unlinkStoreForSysdiagnose];
}

id objc_msgSend__unredactedMeCards(void *a1, const char *a2, ...)
{
  return _[a1 _unredactedMeCards];
}

id objc_msgSend__unregisterForBGUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForBGUpdates];
}

id objc_msgSend__unregisterForPossibleSessionDestroyingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForPossibleSessionDestroyingNotifications];
}

id objc_msgSend__unregisterForRingerMuteStateNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForRingerMuteStateNotifications];
}

id objc_msgSend__unregisterForRingerStateNotification(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForRingerStateNotification];
}

id objc_msgSend__unregisterForSleepNotification(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForSleepNotification];
}

id objc_msgSend__unregisterRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unregisterRequestID:");
}

id objc_msgSend__unstageEvents(void *a1, const char *a2, ...)
{
  return _[a1 _unstageEvents];
}

id objc_msgSend__untrackAllHomeUserUUIDsForInFlightVoiceProfile(void *a1, const char *a2, ...)
{
  return _[a1 _untrackAllHomeUserUUIDsForInFlightVoiceProfile];
}

id objc_msgSend__untrackHomeUserUUIDForInFlightVoiceProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_untrackHomeUserUUIDForInFlightVoiceProfile:");
}

id objc_msgSend__untrackUUIDsForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_untrackUUIDsForUser:");
}

id objc_msgSend__updateActiveAccountState(void *a1, const char *a2, ...)
{
  return _[a1 _updateActiveAccountState];
}

id objc_msgSend__updateAirPlayRouteIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAirPlayRouteIdentifierWithCompletion:");
}

id objc_msgSend__updateAssistantIDMapForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssistantIDMapForDevice:");
}

id objc_msgSend__updateAudioDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAudioDeviceInfo:");
}

id objc_msgSend__updateAudioRouteAvailabilityAndBroadcast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAudioRouteAvailabilityAndBroadcast:");
}

id objc_msgSend__updateAudioRouteOnMainThread(void *a1, const char *a2, ...)
{
  return _[a1 _updateAudioRouteOnMainThread];
}

id objc_msgSend__updateAutoDownloadedVoiceAssetsForOutputVoice(void *a1, const char *a2, ...)
{
  return _[a1 _updateAutoDownloadedVoiceAssetsForOutputVoice];
}

id objc_msgSend__updateBackgroundContextIfMusicPersonalizationTokenChanged(void *a1, const char *a2, ...)
{
  return _[a1 _updateBackgroundContextIfMusicPersonalizationTokenChanged];
}

id objc_msgSend__updateBuddyState(void *a1, const char *a2, ...)
{
  return _[a1 _updateBuddyState];
}

id objc_msgSend__updateCallCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCallCapability:");
}

id objc_msgSend__updateCapturingStateWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCapturingStateWithOptions:");
}

id objc_msgSend__updateClientLinkSiriInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateClientLinkSiriInfo];
}

id objc_msgSend__updateCollectorElectionVersion(void *a1, const char *a2, ...)
{
  return _[a1 _updateCollectorElectionVersion];
}

id objc_msgSend__updateCommunalDeviceUser_withSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCommunalDeviceUser:withSettings:");
}

id objc_msgSend__updateCompanionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _updateCompanionIdentifier];
}

id objc_msgSend__updateConnectionPolicyFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateConnectionPolicyFailureCount:");
}

id objc_msgSend__updateContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContext:");
}

id objc_msgSend__updateContextCollectorStatusToRapport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContextCollectorStatusToRapport:");
}

id objc_msgSend__updateCurrentAccessoryInfoWithAccessory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentAccessoryInfoWithAccessory:");
}

id objc_msgSend__updateCurrentOrUpNextDateInterval_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentOrUpNextDateInterval:reason:");
}

id objc_msgSend__updateDefaultTokenInDynamiteClientState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDefaultTokenInDynamiteClientState:");
}

id objc_msgSend__updateDeviceCountTrend(void *a1, const char *a2, ...)
{
  return _[a1 _updateDeviceCountTrend];
}

id objc_msgSend__updateDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDeviceInfo:");
}

id objc_msgSend__updateDeviceOwner_sharedUserId_enrollmentName_companionInfo_shareOwnerName_homeMemberSettings_loggingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDeviceOwner:sharedUserId:enrollmentName:companionInfo:shareOwnerName:homeMemberSettings:loggingAllowed:");
}

id objc_msgSend__updateDeviceProblemsWithContext_token_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDeviceProblemsWithContext:token:completion:");
}

id objc_msgSend__updateDictationAllowedStatus(void *a1, const char *a2, ...)
{
  return _[a1 _updateDictationAllowedStatus];
}

id objc_msgSend__updateDictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDictationOptions:");
}

id objc_msgSend__updateDictationOptionsForOnDeviceDictation_language_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDictationOptionsForOnDeviceDictation:language:");
}

id objc_msgSend__updateExpirationDateForMediaPlaybackSnapshotBasedOnDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateExpirationDateForMediaPlaybackSnapshotBasedOnDate:");
}

id objc_msgSend__updateFlowContext(void *a1, const char *a2, ...)
{
  return _[a1 _updateFlowContext];
}

id objc_msgSend__updateHashedRouteIDForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHashedRouteIDForDevice:");
}

id objc_msgSend__updateHeadphoneInEarDetectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHeadphoneInEarDetectionState:");
}

id objc_msgSend__updateHeadphoneListeningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHeadphoneListeningMode:");
}

id objc_msgSend__updateHomeAnnouncementWithContext_supplementalSnapshot_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHomeAnnouncementWithContext:supplementalSnapshot:completion:");
}

id objc_msgSend__updateHomeContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHomeContext:");
}

id objc_msgSend__updateHomeKitMediaSystemIdentifier_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHomeKitMediaSystemIdentifier:reason:");
}

id objc_msgSend__updateHomeKitRoomName_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHomeKitRoomName:reason:");
}

id objc_msgSend__updateHomeKitSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHomeKitSettings:");
}

id objc_msgSend__updateHomeKitSettingsForDeviceOwner(void *a1, const char *a2, ...)
{
  return _[a1 _updateHomeKitSettingsForDeviceOwner];
}

id objc_msgSend__updateHomeUserSettings(void *a1, const char *a2, ...)
{
  return _[a1 _updateHomeUserSettings];
}

id objc_msgSend__updateInEarDetectionStateAndObserve(void *a1, const char *a2, ...)
{
  return _[a1 _updateInEarDetectionStateAndObserve];
}

id objc_msgSend__updateItunesStoreIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateItunesStoreIdentifier:");
}

id objc_msgSend__updateLocalPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLocalPeerInfo:");
}

id objc_msgSend__updateMappingsForSharedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMappingsForSharedUser:");
}

id objc_msgSend__updateMediaRemoteGroupIdentifier_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMediaRemoteGroupIdentifier:reason:");
}

id objc_msgSend__updateMediaRemoteRouteIdentifier_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMediaRemoteRouteIdentifier:reason:");
}

id objc_msgSend__updateMediaSystemState(void *a1, const char *a2, ...)
{
  return _[a1 _updateMediaSystemState];
}

id objc_msgSend__updateMultiUserPersonalizationTokensWithSingleUserTokenChanged_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMultiUserPersonalizationTokensWithSingleUserTokenChanged:completion:");
}

id objc_msgSend__updateMusicPersonalizationTokenWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMusicPersonalizationTokenWithContext:completion:");
}

id objc_msgSend__updateNavStatusWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNavStatusWithContext:completion:");
}

id objc_msgSend__updateNonHomeUserSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNonHomeUserSettings:");
}

id objc_msgSend__updateNowPlayingInfoWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNowPlayingInfoWithContext:completion:");
}

id objc_msgSend__updateObjectFromService_sadIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateObjectFromService:sadIdentifier:completion:");
}

id objc_msgSend__updateOfflineDictationStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOfflineDictationStatus:error:");
}

id objc_msgSend__updatePairedDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updatePairedDeviceInfo];
}

id objc_msgSend__updatePlaybackDevicesWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePlaybackDevicesWithContext:completion:");
}

id objc_msgSend__updateProximityForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProximityForDevice:");
}

id objc_msgSend__updateProximityObservationsForPlayState_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProximityObservationsForPlayState:afterDelay:");
}

id objc_msgSend__updateRecordRoute_andDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordRoute:andDeviceIdentifier:");
}

id objc_msgSend__updateRecordsWithSpeechId_toUpdatedSpeechId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordsWithSpeechId:toUpdatedSpeechId:error:");
}

id objc_msgSend__updateRemotePeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRemotePeerInfo:");
}

id objc_msgSend__updateRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRestrictions:");
}

id objc_msgSend__updateRingerMuteState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRingerMuteState:");
}

id objc_msgSend__updateSAMultiUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateSAMultiUserInfo];
}

id objc_msgSend__updateSharedData_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedData:forDevice:");
}

id objc_msgSend__updateSharedDataForCompanionDeviceWithRemoteFetchAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedDataForCompanionDeviceWithRemoteFetchAllowed:");
}

id objc_msgSend__updateSharedDataForDevice_allowIDSFetch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedDataForDevice:allowIDSFetch:completion:");
}

id objc_msgSend__updateSharedDataFromIDSWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedDataFromIDSWithIdentifier:");
}

id objc_msgSend__updateSharedDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedDataWithCompletion:");
}

id objc_msgSend__updateSharedDataWithPairedPeerData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSharedDataWithPairedPeerData:");
}

id objc_msgSend__updateSharedUserIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _updateSharedUserIdentifiers];
}

id objc_msgSend__updateShouldSpeak(void *a1, const char *a2, ...)
{
  return _[a1 _updateShouldSpeak];
}

id objc_msgSend__updateSimpleThingsWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSimpleThingsWithContext:completion:");
}

id objc_msgSend__updateSiriInfoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _updateSiriInfoDictionary];
}

id objc_msgSend__updateSiriInfoWithDeviceCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _updateSiriInfoWithDeviceCapabilities];
}

id objc_msgSend__updateSiriInfoWithLocalPeerData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSiriInfoWithLocalPeerData:");
}

id objc_msgSend__updateSiriOutputVolume_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSiriOutputVolume:completion:");
}

id objc_msgSend__updateSiriVolume_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSiriVolume:completion:");
}

id objc_msgSend__updateSpeechOptions_forDelegate_allowUpdateInSpeechCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:");
}

id objc_msgSend__updateSpeechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpeechRequestOptions:");
}

id objc_msgSend__updateSpeechState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpeechState:");
}

id objc_msgSend__updateStartLocalRequest_withNewAnnouncePayload_forAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStartLocalRequest:withNewAnnouncePayload:forAnnouncementType:");
}

id objc_msgSend__updateStationaryScore(void *a1, const char *a2, ...)
{
  return _[a1 _updateStationaryScore];
}

id objc_msgSend__updateStationaryScoreAndResetTimer(void *a1, const char *a2, ...)
{
  return _[a1 _updateStationaryScoreAndResetTimer];
}

id objc_msgSend__updateStationaryScoreBroadcasting(void *a1, const char *a2, ...)
{
  return _[a1 _updateStationaryScoreBroadcasting];
}

id objc_msgSend__updateStickiness(void *a1, const char *a2, ...)
{
  return _[a1 _updateStickiness];
}

id objc_msgSend__updateStoreFrontIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStoreFrontIdentifierWithCompletion:");
}

id objc_msgSend__updateSystemVolumeForCategory_andMode_audioRoute_withName_usingSystemController_volume_operationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSystemVolumeForCategory:andMode:audioRoute:withName:usingSystemController:volume:operationType:");
}

id objc_msgSend__updateTimer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimer:completion:");
}

id objc_msgSend__updateTimerWithID_changes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimerWithID:changes:completion:");
}

id objc_msgSend__updateUODAssetStatusForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateUODAssetStatusForLanguage:");
}

id objc_msgSend__updateVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVoice:");
}

id objc_msgSend__updateVoiceCommandContextWithPrefixText_postfixText_selectedText_disambiguationActive_cursorInVisibleText_favorCommandSuppression_abortCommandSuppression_undoEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVoiceCommandContextWithPrefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:undoEvent:");
}

id objc_msgSend__updateVoiceIDProfilesForSharedUser_iCloudAltDSID_records_isPrimary_isNewUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVoiceIDProfilesForSharedUser:iCloudAltDSID:records:isPrimary:isNewUser:completion:");
}

id objc_msgSend__updateVoiceOverStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVoiceOverStatus:");
}

id objc_msgSend__updateVoiceProfileInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateVoiceProfileInfo];
}

id objc_msgSend__updateWirelessSplitterSessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWirelessSplitterSessionInfo:");
}

id objc_msgSend__updateWirelessSplitterSessionInfoAndObserve(void *a1, const char *a2, ...)
{
  return _[a1 _updateWirelessSplitterSessionInfoAndObserve];
}

id objc_msgSend__url(void *a1, const char *a2, ...)
{
  return _[a1 _url];
}

id objc_msgSend__userEphemeralIdNamespace(void *a1, const char *a2, ...)
{
  return _[a1 _userEphemeralIdNamespace];
}

id objc_msgSend__validateIncomingRequest_options_error_assistantId_idsDeviceId_homeKitId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateIncomingRequest:options:error:assistantId:idsDeviceId:homeKitId:");
}

id objc_msgSend__validateIncomingRequest_options_error_messageID_messageType_messagePayload_senderPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateIncomingRequest:options:error:messageID:messageType:messagePayload:senderPeerInfo:");
}

id objc_msgSend__validatePhsManifestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validatePhsManifestData:");
}

id objc_msgSend__verifyAccountWithManateeRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyAccountWithManateeRequired:");
}

id objc_msgSend__versionForCachedValidationDataMatchesCurrentVersion(void *a1, const char *a2, ...)
{
  return _[a1 _versionForCachedValidationDataMatchesCurrentVersion];
}

id objc_msgSend__voiceFeedbackSetting(void *a1, const char *a2, ...)
{
  return _[a1 _voiceFeedbackSetting];
}

id objc_msgSend__voiceRecordingEndTime(void *a1, const char *a2, ...)
{
  return _[a1 _voiceRecordingEndTime];
}

id objc_msgSend__voiceRecordingStartTime(void *a1, const char *a2, ...)
{
  return _[a1 _voiceRecordingStartTime];
}

id objc_msgSend__voiceSendEndTime(void *a1, const char *a2, ...)
{
  return _[a1 _voiceSendEndTime];
}

id objc_msgSend__voiceSendStartTime(void *a1, const char *a2, ...)
{
  return _[a1 _voiceSendStartTime];
}

id objc_msgSend__volumeService(void *a1, const char *a2, ...)
{
  return _[a1 _volumeService];
}

id objc_msgSend__waitForMessageIDs_withContext_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitForMessageIDs:withContext:timeout:completion:");
}

id objc_msgSend__waitForNetworkData(void *a1, const char *a2, ...)
{
  return _[a1 _waitForNetworkData];
}

id objc_msgSend__waitForPeerData(void *a1, const char *a2, ...)
{
  return _[a1 _waitForPeerData];
}

id objc_msgSend__waitUntilSafeToContinue(void *a1, const char *a2, ...)
{
  return _[a1 _waitUntilSafeToContinue];
}

id objc_msgSend__waitingForAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 _waitingForAssistantData];
}

id objc_msgSend__wakeSystemForHandlingCommand(void *a1, const char *a2, ...)
{
  return _[a1 _wakeSystemForHandlingCommand];
}

id objc_msgSend__withAllModelsExecute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_withAllModelsExecute:");
}

id objc_msgSend__wrapBoolSettingValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wrapBoolSettingValue:");
}

id objc_msgSend__wrappedSendFailureError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wrappedSendFailureError:");
}

id objc_msgSend__writeBundleServicesCache_toPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeBundleServicesCache:toPath:");
}

id objc_msgSend__writeCheckpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeCheckpoint:");
}

id objc_msgSend__writeDataToDisk_withFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDataToDisk:withFileName:");
}

id objc_msgSend__writeDataToNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDataToNetwork:");
}

id objc_msgSend__writeDataToPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDataToPeer:");
}

id objc_msgSend__writeDictationSamplingVariablesToFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDictationSamplingVariablesToFile:");
}

id objc_msgSend__writePropagationStatusToLocalStorage(void *a1, const char *a2, ...)
{
  return _[a1 _writePropagationStatusToLocalStorage];
}

id objc_msgSend__writeSQLiteRecords_toTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeSQLiteRecords:toTable:");
}

id objc_msgSend__writeTextToDisk_withFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeTextToDisk:withFileName:");
}

id objc_msgSend__zoneIsShareable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_zoneIsShareable:");
}

id objc_msgSend__zoneShouldUpdateMirroredZone(void *a1, const char *a2, ...)
{
  return _[a1 _zoneShouldUpdateMirroredZone];
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_aa_primaryAppleAccountWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccountWithCompletion:");
}

id objc_msgSend_aadActivatingWithRetry_andError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aadActivatingWithRetry:andError:");
}

id objc_msgSend_abExperimentFromExperimentAllocationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abExperimentFromExperimentAllocationStatus:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptGesture(void *a1, const char *a2, ...)
{
  return _[a1 acceptGesture];
}

id objc_msgSend_acceptReplyPlayPauseConfig(void *a1, const char *a2, ...)
{
  return _[a1 acceptReplyPlayPauseConfig];
}

id objc_msgSend_acceptShare_token_containerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptShare:token:containerID:");
}

id objc_msgSend_acceptShare_token_containerID_retryCount_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptShare:token:containerID:retryCount:object:");
}

id objc_msgSend_accessRecordedAudioWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessRecordedAudioWithIdentifier:completion:");
}

id objc_msgSend_accessStorageForDeviceWithIdentifier_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessStorageForDeviceWithIdentifier:usingBlock:");
}

id objc_msgSend_accessStoreUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessStoreUsingBlock:");
}

id objc_msgSend_accessibleEndpointerThreshold(void *a1, const char *a2, ...)
{
  return _[a1 accessibleEndpointerThreshold];
}

id objc_msgSend_accessories(void *a1, const char *a2, ...)
{
  return _[a1 accessories];
}

id objc_msgSend_accessoriesInHome(void *a1, const char *a2, ...)
{
  return _[a1 accessoriesInHome];
}

id objc_msgSend_accessoriesWithPersonalRequestsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 accessoriesWithPersonalRequestsEnabled];
}

id objc_msgSend_accessoryWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryWithUniqueIdentifier:");
}

id objc_msgSend_accountForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountForIdentifier:");
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _[a1 accountID];
}

id objc_msgSend_accountIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 accountIdentifiers];
}

id objc_msgSend_accountInfoForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountInfoForIdentifier:");
}

id objc_msgSend_accountInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountInfoWithCompletionHandler:");
}

id objc_msgSend_accountOverrideInfo(void *a1, const char *a2, ...)
{
  return _[a1 accountOverrideInfo];
}

id objc_msgSend_accountStatus(void *a1, const char *a2, ...)
{
  return _[a1 accountStatus];
}

id objc_msgSend_accountStatusRecordZoneInfo(void *a1, const char *a2, ...)
{
  return _[a1 accountStatusRecordZoneInfo];
}

id objc_msgSend_accountStatusServerChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 accountStatusServerChangeToken];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_accuracyAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 accuracyAuthorization];
}

id objc_msgSend_aceCommandForSiriResponse_responseError_forRequestCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceCommandForSiriResponse:responseError:forRequestCommand:");
}

id objc_msgSend_aceConnectionWillRetryOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceConnectionWillRetryOnError:");
}

id objc_msgSend_aceContext(void *a1, const char *a2, ...)
{
  return _[a1 aceContext];
}

id objc_msgSend_aceContexts(void *a1, const char *a2, ...)
{
  return _[a1 aceContexts];
}

id objc_msgSend_aceDictionary(void *a1, const char *a2, ...)
{
  return _[a1 aceDictionary];
}

id objc_msgSend_aceHost(void *a1, const char *a2, ...)
{
  return _[a1 aceHost];
}

id objc_msgSend_aceHostCluster(void *a1, const char *a2, ...)
{
  return _[a1 aceHostCluster];
}

id objc_msgSend_aceHostHeader(void *a1, const char *a2, ...)
{
  return _[a1 aceHostHeader];
}

id objc_msgSend_aceHostPrimeTokens(void *a1, const char *a2, ...)
{
  return _[a1 aceHostPrimeTokens];
}

id objc_msgSend_aceHostSyncTokens(void *a1, const char *a2, ...)
{
  return _[a1 aceHostSyncTokens];
}

id objc_msgSend_aceId(void *a1, const char *a2, ...)
{
  return _[a1 aceId];
}

id objc_msgSend_aceObjectArrayWithDictionaryArray_baseClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObjectArrayWithDictionaryArray:baseClass:");
}

id objc_msgSend_aceObjectWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObjectWithDictionary:");
}

id objc_msgSend_aceObjectWithGenericCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObjectWithGenericCommand:");
}

id objc_msgSend_aceObjectWithPlistData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObjectWithPlistData:");
}

id objc_msgSend_aceRecognition(void *a1, const char *a2, ...)
{
  return _[a1 aceRecognition];
}

id objc_msgSend_aceVersion(void *a1, const char *a2, ...)
{
  return _[a1 aceVersion];
}

id objc_msgSend_ace_setRequestOrigin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ace_setRequestOrigin");
}

id objc_msgSend_acknowledgedExceedingVolumeLimit(void *a1, const char *a2, ...)
{
  return _[a1 acknowledgedExceedingVolumeLimit];
}

id objc_msgSend_acousticFingerprinter_hasFingerprint_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticFingerprinter:hasFingerprint:duration:");
}

id objc_msgSend_acousticIDHelper_didCompleteSessionSuccessfully_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIDHelper:didCompleteSessionSuccessfully:");
}

id objc_msgSend_acousticIDHelperDidStartSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIDHelperDidStartSession:");
}

id objc_msgSend_acousticIDRequestDidFinishWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIDRequestDidFinishWithSuccess:");
}

id objc_msgSend_acousticIDRequestWillStart(void *a1, const char *a2, ...)
{
  return _[a1 acousticIDRequestWillStart];
}

id objc_msgSend_acousticIdEnabled(void *a1, const char *a2, ...)
{
  return _[a1 acousticIdEnabled];
}

id objc_msgSend_acousticIdSearchSessionId(void *a1, const char *a2, ...)
{
  return _[a1 acousticIdSearchSessionId];
}

id objc_msgSend_acquireAssertionForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireAssertionForReason:");
}

id objc_msgSend_acquireAudioSessionAssertionWithContext_relinquishmentHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireAudioSessionAssertionWithContext:relinquishmentHandler:");
}

id objc_msgSend_acquireDormancySuspendAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireDormancySuspendAssertion:");
}

id objc_msgSend_acquireRecordedAudioWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRecordedAudioWithHandler:");
}

id objc_msgSend_acquireRelinquishableAssertionWithContext_relinquishmentHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRelinquishableAssertionWithContext:relinquishmentHandler:");
}

id objc_msgSend_acquireShutdownAssertion(void *a1, const char *a2, ...)
{
  return _[a1 acquireShutdownAssertion];
}

id objc_msgSend_acquireWiFiAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWiFiAssertion:");
}

id objc_msgSend_actionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionForIdentifier:");
}

id objc_msgSend_actionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 actionIdentifier];
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _[a1 actionType];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activateWithRequestInfo_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithRequestInfo:context:completion:");
}

id objc_msgSend_activationAlertStartTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 activationAlertStartTimestamp];
}

id objc_msgSend_activationDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activationDeviceIdentifier];
}

id objc_msgSend_activationEvent(void *a1, const char *a2, ...)
{
  return _[a1 activationEvent];
}

id objc_msgSend_activationEventMachAbsoluteTime(void *a1, const char *a2, ...)
{
  return _[a1 activationEventMachAbsoluteTime];
}

id objc_msgSend_activationEventTime(void *a1, const char *a2, ...)
{
  return _[a1 activationEventTime];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeAccountIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activeAccountIdentifier];
}

id objc_msgSend_activeCallRemaining(void *a1, const char *a2, ...)
{
  return _[a1 activeCallRemaining];
}

id objc_msgSend_activeConversationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationForCall:");
}

id objc_msgSend_activeDevices(void *a1, const char *a2, ...)
{
  return _[a1 activeDevices];
}

id objc_msgSend_activeDictationLanguages(void *a1, const char *a2, ...)
{
  return _[a1 activeDictationLanguages];
}

id objc_msgSend_activityDataType(void *a1, const char *a2, ...)
{
  return _[a1 activityDataType];
}

id objc_msgSend_activityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifier];
}

id objc_msgSend_activityNotificationsEnabledForPersonalRequests(void *a1, const char *a2, ...)
{
  return _[a1 activityNotificationsEnabledForPersonalRequests];
}

id objc_msgSend_activityView(void *a1, const char *a2, ...)
{
  return _[a1 activityView];
}

id objc_msgSend_adAVSystemControllerDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adAVSystemControllerDidChange:");
}

id objc_msgSend_adAcousticIDRequestDidFinishSuccessfully_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adAcousticIDRequestDidFinishSuccessfully:");
}

id objc_msgSend_adAcousticIDRequestWillStart(void *a1, const char *a2, ...)
{
  return _[a1 adAcousticIDRequestWillStart];
}

id objc_msgSend_adAudioFileFinishedWriting_error_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adAudioFileFinishedWriting:error:context:");
}

id objc_msgSend_adAudioSessionDidBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adAudioSessionDidBecomeActive:");
}

id objc_msgSend_adAudioSessionWillBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adAudioSessionWillBecomeActive:");
}

id objc_msgSend_adCallStateChangedCallInProcess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adCallStateChangedCallInProcess:");
}

id objc_msgSend_adCallStateChangedCallIncoming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adCallStateChangedCallIncoming:");
}

id objc_msgSend_adClientConnectionAuditToken(void *a1, const char *a2, ...)
{
  return _[a1 adClientConnectionAuditToken];
}

id objc_msgSend_adCloudKitSharedZoneUpdater_didEncounterError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adCloudKitSharedZoneUpdater:didEncounterError:");
}

id objc_msgSend_adExtensionRequestFinishedForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adExtensionRequestFinishedForApplication:error:");
}

id objc_msgSend_adExtensionRequestWillStartForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adExtensionRequestWillStartForApplication:");
}

id objc_msgSend_adGetBulletinContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adGetBulletinContext:");
}

id objc_msgSend_adInvalidateCurrentUserActivity(void *a1, const char *a2, ...)
{
  return _[a1 adInvalidateCurrentUserActivity];
}

id objc_msgSend_adMusicWasDetected(void *a1, const char *a2, ...)
{
  return _[a1 adMusicWasDetected];
}

id objc_msgSend_adRequestDidCompleteWithSuccess_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestDidCompleteWithSuccess:error:");
}

id objc_msgSend_adRequestDidHandleFailedStartPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestDidHandleFailedStartPlayback:");
}

id objc_msgSend_adRequestDidReceiveCommand_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestDidReceiveCommand:reply:");
}

id objc_msgSend_adRequestDidUpdateResponseMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestDidUpdateResponseMode:");
}

id objc_msgSend_adRequestEncounteredIntermediateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestEncounteredIntermediateError:");
}

id objc_msgSend_adRequestRequestedOpenURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestRequestedOpenURL:completion:");
}

id objc_msgSend_adRequestWillProcessStartPlayback_intent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestWillProcessStartPlayback:intent:completion:");
}

id objc_msgSend_adRequestWillReceiveCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adRequestWillReceiveCommand:");
}

id objc_msgSend_adServerRequestsTTSStateUnmuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adServerRequestsTTSStateUnmuted:");
}

id objc_msgSend_adSetUserActivityInfo_webpageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSetUserActivityInfo:webpageURL:");
}

id objc_msgSend_adSpeechDidBeginLocalRecognitionWithModelInfo_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechDidBeginLocalRecognitionWithModelInfo:sessionUUID:");
}

id objc_msgSend_adSpeechDidFindVoiceSearchFinalResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechDidFindVoiceSearchFinalResult:");
}

id objc_msgSend_adSpeechDidFindVoiceSearchPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechDidFindVoiceSearchPartialResult:");
}

id objc_msgSend_adSpeechDidPauseRecognition(void *a1, const char *a2, ...)
{
  return _[a1 adSpeechDidPauseRecognition];
}

id objc_msgSend_adSpeechLanguageDetectorFailedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechLanguageDetectorFailedWithError:");
}

id objc_msgSend_adSpeechLocalRecognitionDidSucceedWithSessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechLocalRecognitionDidSucceedWithSessionUUID:");
}

id objc_msgSend_adSpeechRecognitionDidFail_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecognitionDidFail:sessionUUID:");
}

id objc_msgSend_adSpeechRecognizedPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecognizedPartialResult:");
}

id objc_msgSend_adSpeechRecognizedStructuredResult_usingSpeechModel_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecognizedStructuredResult:usingSpeechModel:sessionUUID:");
}

id objc_msgSend_adSpeechRecordingDidBeginOnAVRecordRoute_audioSessionID_bluetoothDevice_sessionRequestUUID_dictationOptions_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionRequestUUID:dictationOptions:context:");
}

id objc_msgSend_adSpeechRecordingDidChangeAVRecordRoute_bluetoothDevice_isDucking_isTwoShot_speechEndHostTime_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostTime:context:");
}

id objc_msgSend_adSpeechRecordingDidDetectLanguage_confidenceScores_isConfident_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidDetectLanguage:confidenceScores:isConfident:");
}

id objc_msgSend_adSpeechRecordingDidEndWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidEndWithContext:");
}

id objc_msgSend_adSpeechRecordingDidFail_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidFail:context:");
}

id objc_msgSend_adSpeechRecordingDidRecognizeFinalResultCandidatePackage_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidRecognizeFinalResultCandidatePackage:sessionUUID:");
}

id objc_msgSend_adSpeechRecordingDidRecognizePhrases_rawPhrases_utterances_rawUtterances_nluResult_sessionUUID_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidRecognizePhrases:rawPhrases:utterances:rawUtterances:nluResult:sessionUUID:refId:");
}

id objc_msgSend_adSpeechRecordingDidRecognizeVoiceCommandCandidatePackage_nluResult_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingDidRecognizeVoiceCommandCandidatePackage:nluResult:sessionUUID:");
}

id objc_msgSend_adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:context:");
}

id objc_msgSend_adSpeechSessionEnded(void *a1, const char *a2, ...)
{
  return _[a1 adSpeechSessionEnded];
}

id objc_msgSend_adStartUIRequestWithText_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adStartUIRequestWithText:completion:");
}

id objc_msgSend_adSyncVerificationPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSyncVerificationPartialResult:");
}

id objc_msgSend_adSyncVerificationServerReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adSyncVerificationServerReport:");
}

id objc_msgSend_adTextToSpeechIsMuted(void *a1, const char *a2, ...)
{
  return _[a1 adTextToSpeechIsMuted];
}

id objc_msgSend_adWaitingForAudioFile(void *a1, const char *a2, ...)
{
  return _[a1 adWaitingForAudioFile];
}

id objc_msgSend_adWantsToCacheImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adWantsToCacheImage:");
}

id objc_msgSend_ad_OTTModelRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_OTTModelRepresentation");
}

id objc_msgSend_ad_OTTRequestRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_OTTRequestRepresentation");
}

id objc_msgSend_ad_aceResponseCommandGenericErrorRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_aceResponseCommandGenericErrorRepresentation");
}

id objc_msgSend_ad_aceResponseCommandRepresentationWithErrorCode_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_aceResponseCommandRepresentationWithErrorCode:reason:");
}

id objc_msgSend_ad_afErrorCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_afErrorCode");
}

id objc_msgSend_ad_archiveTokenToDataWithExceptionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_archiveTokenToDataWithExceptionBlock:");
}

id objc_msgSend_ad_calendarErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_calendarErrorWithCode:");
}

id objc_msgSend_ad_callbacks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_callbacks");
}

id objc_msgSend_ad_createV5UUIDWithNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_createV5UUIDWithNamespace:");
}

id objc_msgSend_ad_csASRFeatures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_csASRFeatures");
}

id objc_msgSend_ad_deferredMetricsContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_deferredMetricsContext");
}

id objc_msgSend_ad_endTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_endTime");
}

id objc_msgSend_ad_error(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_error");
}

id objc_msgSend_ad_executionDeviceForDeviceContextTuples_executionContext_proximityMap_sharedUserID_localDeviceIsFollower_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_executionDeviceForDeviceContextTuples:executionContext:proximityMap:sharedUserID:localDeviceIsFollower:");
}

id objc_msgSend_ad_filteredDictionaryWithAppID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_filteredDictionaryWithAppID:");
}

id objc_msgSend_ad_getNetworkActivityTracingLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_getNetworkActivityTracingLabel");
}

id objc_msgSend_ad_hasCallbacks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_hasCallbacks");
}

id objc_msgSend_ad_isAssistantNotReadyError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isAssistantNotReadyError");
}

id objc_msgSend_ad_isDifferentFromStartSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isDifferentFromStartSpeech:");
}

id objc_msgSend_ad_isInAssistantErrorDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isInAssistantErrorDomain");
}

id objc_msgSend_ad_isNetworkDownError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isNetworkDownError");
}

id objc_msgSend_ad_isNewerThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isNewerThan:");
}

id objc_msgSend_ad_isRetryableConnectionError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isRetryableConnectionError");
}

id objc_msgSend_ad_isRetryableSessionError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isRetryableSessionError");
}

id objc_msgSend_ad_isStricterRetryableConnectionError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isStricterRetryableConnectionError");
}

id objc_msgSend_ad_isStricterUnreachableError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isStricterUnreachableError");
}

id objc_msgSend_ad_isUnreachableError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isUnreachableError");
}

id objc_msgSend_ad_isUnrecoverablePeerError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_isUnrecoverablePeerError");
}

id objc_msgSend_ad_languageModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_languageModel");
}

id objc_msgSend_ad_leadingSilence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_leadingSilence");
}

id objc_msgSend_ad_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_location");
}

id objc_msgSend_ad_parentRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_parentRequest");
}

id objc_msgSend_ad_preferredMessagingOption(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_preferredMessagingOption");
}

id objc_msgSend_ad_recipientDevicesType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_recipientDevicesType");
}

id objc_msgSend_ad_requiresDampedRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_requiresDampedRetry:");
}

id objc_msgSend_ad_requiresDeviceContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_requiresDeviceContext");
}

id objc_msgSend_ad_requiresProximityInformationForDeviceContextTuples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_requiresProximityInformationForDeviceContextTuples:");
}

id objc_msgSend_ad_requiresResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_requiresResponse");
}

id objc_msgSend_ad_sendReplyEvenIfCallbacksExist(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_sendReplyEvenIfCallbacksExist");
}

id objc_msgSend_ad_setAFCorrectionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setAFCorrectionContext:");
}

id objc_msgSend_ad_setAFEndpointMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setAFEndpointMode:");
}

id objc_msgSend_ad_setAFSpeechCorrectionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setAFSpeechCorrectionInfo:");
}

id objc_msgSend_ad_setAFSpeechEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setAFSpeechEvent:");
}

id objc_msgSend_ad_setAFSpeechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setAFSpeechRequestOptions:");
}

id objc_msgSend_ad_setCSEndpointerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setCSEndpointerMetrics:");
}

id objc_msgSend_ad_setCSSiriRecordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setCSSiriRecordingInfo:");
}

id objc_msgSend_ad_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setLocation:");
}

id objc_msgSend_ad_setParentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_setParentRequest:");
}

id objc_msgSend_ad_shouldBeHandledByClientAsResponseToCommand_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_shouldBeHandledByClientAsResponseToCommand:fromPeer:");
}

id objc_msgSend_ad_shouldIgnoreCallbacksOnReply(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_shouldIgnoreCallbacksOnReply");
}

id objc_msgSend_ad_shouldLogToMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_shouldLogToMetrics");
}

id objc_msgSend_ad_shouldRetry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_shouldRetry");
}

id objc_msgSend_ad_shouldUseExtendedFlowTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_shouldUseExtendedFlowTimeout");
}

id objc_msgSend_ad_siriTaskHandlerAceTranslationFailureError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_siriTaskHandlerAceTranslationFailureError");
}

id objc_msgSend_ad_speechEndTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_speechEndTime");
}

id objc_msgSend_ad_startSpeechDictationWithAFDictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_startSpeechDictationWithAFDictationOptions:");
}

id objc_msgSend_ad_trailingSilence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_trailingSilence");
}

id objc_msgSend_ad_transcriptionResultRequiresAddressBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_transcriptionResultRequiresAddressBook");
}

id objc_msgSend_ad_transcriptionResultWithAddressBookManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_transcriptionResultWithAddressBookManager:");
}

id objc_msgSend_ad_transcriptionResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_transcriptionResults");
}

id objc_msgSend_ad_unarchiveTokenFromData_withExceptionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_unarchiveTokenFromData:withExceptionBlock:");
}

id objc_msgSend_ad_updateWithRecordingInfo_speechRequestOptions_clientConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:");
}

id objc_msgSend_ad_willHaveReply(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ad_willHaveReply");
}

id objc_msgSend_adaptiveSiriVolumePermanentOffset(void *a1, const char *a2, ...)
{
  return _[a1 adaptiveSiriVolumePermanentOffset];
}

id objc_msgSend_adaptiveSiriVolumeRecentIntent(void *a1, const char *a2, ...)
{
  return _[a1 adaptiveSiriVolumeRecentIntent];
}

id objc_msgSend_adaptiveVolumeCapability(void *a1, const char *a2, ...)
{
  return _[a1 adaptiveVolumeCapability];
}

id objc_msgSend_adaptiveVolumeConfig(void *a1, const char *a2, ...)
{
  return _[a1 adaptiveVolumeConfig];
}

id objc_msgSend_add_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "add:");
}

id objc_msgSend_addAggregationIdForUser_aggregationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAggregationIdForUser:aggregationId:");
}

id objc_msgSend_addAlarm_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAlarm:completionHandler:");
}

id objc_msgSend_addAudioPacket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAudioPacket:");
}

id objc_msgSend_addAudioSampleData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAudioSampleData:");
}

id objc_msgSend_addAudioSamplesOnQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAudioSamplesOnQueue:");
}

id objc_msgSend_addAvailabilityObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAvailabilityObserver:");
}

id objc_msgSend_addBarrierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBarrierBlock:");
}

id objc_msgSend_addCoreAnalyticsDeviceTargetedWithContextIdentifier_commandResultDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:");
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addDeviceOwner_sharedUserId_loggableSharedUserId_iCloudAltDSID_audioAppSignals_enrollmentName_companionInfo_shareOwnerName_homeMemberSettings_loggingAllowed_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDeviceOwner:sharedUserId:loggableSharedUserId:iCloudAltDSID:audioAppSignals:enrollmentName:companionInfo:shareOwnerName:homeMemberSettings:loggingAllowed:completion:");
}

id objc_msgSend_addDictionaryToSharedStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDictionaryToSharedStore:completion:");
}

id objc_msgSend_addDictionaryToSharedStore_recordKeysForDeletion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDictionaryToSharedStore:recordKeysForDeletion:completion:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFailureBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFailureBlock:");
}

id objc_msgSend_addFields(void *a1, const char *a2, ...)
{
  return _[a1 addFields];
}

id objc_msgSend_addFirstPassStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFirstPassStatistics:");
}

id objc_msgSend_addHandsFreeStateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandsFreeStateObserver:");
}

id objc_msgSend_addIfSiriCloudSyncEnabledForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIfSiriCloudSyncEnabledForUser:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListener:");
}

id objc_msgSend_addMeCardObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMeCardObserver:");
}

id objc_msgSend_addMissingAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMissingAsset:");
}

id objc_msgSend_addMissingReferencesContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMissingReferencesContext:");
}

id objc_msgSend_addNotificationPreviewRestrictedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationPreviewRestrictedApps:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addPairs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPairs:");
}

id objc_msgSend_addParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addParticipant:");
}

id objc_msgSend_addQueue_heartBeatInterval_timeoutInterval_timeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addQueue:heartBeatInterval:timeoutInterval:timeoutHandler:");
}

id objc_msgSend_addQueuedAnchors_forReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addQueuedAnchors:forReasons:");
}

id objc_msgSend_addRecordedDictationAudioSampleData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecordedDictationAudioSampleData:");
}

id objc_msgSend_addRecordedSpeechSampleData_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecordedSpeechSampleData:delegate:");
}

id objc_msgSend_addResultObjects_sessionRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addResultObjects:sessionRequestId:");
}

id objc_msgSend_addSeedForHome_seed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSeedForHome:seed:");
}

id objc_msgSend_addSeedForUser_seed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSeedForUser:seed:");
}

id objc_msgSend_addSelfTriggerSuppressionSessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSelfTriggerSuppressionSessions:");
}

id objc_msgSend_addService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addService:");
}

id objc_msgSend_addSessionObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSessionObserver:");
}

id objc_msgSend_addStatusUpdateHandlerForEnvironment_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStatusUpdateHandlerForEnvironment:queue:block:");
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSuccessBlock:");
}

id objc_msgSend_addTcpInfoMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTcpInfoMetrics:");
}

id objc_msgSend_addTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:");
}

id objc_msgSend_addUpdateHandlerForNamespaceName_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUpdateHandlerForNamespaceName:queue:usingBlock:");
}

id objc_msgSend_addUser_sharedUserId_loggableSharedUserId_iCloudAltDSID_enrollmentName_isPrimary_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUser:sharedUserId:loggableSharedUserId:iCloudAltDSID:enrollmentName:isPrimary:completion:");
}

id objc_msgSend_addUser_sharedUserId_loggableSharedUserId_iCloudAltDSID_enrollmentName_isPrimary_nonCloudSyncedUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUser:sharedUserId:loggableSharedUserId:iCloudAltDSID:enrollmentName:isPrimary:nonCloudSyncedUser:completion:");
}

id objc_msgSend_addedFrequency(void *a1, const char *a2, ...)
{
  return _[a1 addedFrequency];
}

id objc_msgSend_addiTunesObserver(void *a1, const char *a2, ...)
{
  return _[a1 addiTunesObserver];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_addressBookManagerDidUpdateData_meCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addressBookManagerDidUpdateData:meCard:");
}

id objc_msgSend_addressLabel(void *a1, const char *a2, ...)
{
  return _[a1 addressLabel];
}

id objc_msgSend_adjustSiriOutputVolumeForRouteIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustSiriOutputVolumeForRouteIfNeeded:");
}

id objc_msgSend_adjustmentInMilliseconds(void *a1, const char *a2, ...)
{
  return _[a1 adjustmentInMilliseconds];
}

id objc_msgSend_adoptRemoteIfEarly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adoptRemoteIfEarly:");
}

id objc_msgSend_adoptedOn(void *a1, const char *a2, ...)
{
  return _[a1 adoptedOn];
}

id objc_msgSend_adpm_sortedKeyString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adpm_sortedKeyString");
}

id objc_msgSend_advertisement(void *a1, const char *a2, ...)
{
  return _[a1 advertisement];
}

id objc_msgSend_adviseSessionArbiterToContinueWithPreviousWinner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adviseSessionArbiterToContinueWithPreviousWinner:");
}

id objc_msgSend_afPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 afPeerInfo];
}

id objc_msgSend_afSharedSession(void *a1, const char *a2, ...)
{
  return _[a1 afSharedSession];
}

id objc_msgSend_af_aceTemperatureUnit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_aceTemperatureUnit");
}

id objc_msgSend_af_audioAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_audioAnalytics");
}

id objc_msgSend_af_bestTextInterpretation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_bestTextInterpretation");
}

id objc_msgSend_af_correctionContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_correctionContext");
}

id objc_msgSend_af_didHearVoiceTrigger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_didHearVoiceTrigger");
}

id objc_msgSend_af_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_firstObjectPassingTest:");
}

id objc_msgSend_af_lenientMappedArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_lenientMappedArray:");
}

id objc_msgSend_af_lenientMappedDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_lenientMappedDictionary:");
}

id objc_msgSend_af_mappedArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_mappedArray:");
}

id objc_msgSend_af_messageValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_messageValue");
}

id objc_msgSend_af_serviceDeviceContextForKeys_excludeContextExpiredBefore_proximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:");
}

id objc_msgSend_af_setAceTemperatureUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_setAceTemperatureUnit:");
}

id objc_msgSend_af_speechPhrases(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_speechPhrases");
}

id objc_msgSend_af_speechUtterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_speechUtterances");
}

id objc_msgSend_af_validFlowContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_validFlowContext");
}

id objc_msgSend_afterNotificationId(void *a1, const char *a2, ...)
{
  return _[a1 afterNotificationId];
}

id objc_msgSend_aggregationId(void *a1, const char *a2, ...)
{
  return _[a1 aggregationId];
}

id objc_msgSend_aggregationIds(void *a1, const char *a2, ...)
{
  return _[a1 aggregationIds];
}

id objc_msgSend_aggregator(void *a1, const char *a2, ...)
{
  return _[a1 aggregator];
}

id objc_msgSend_aggregatorConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 aggregatorConnectionType];
}

id objc_msgSend_airPlayRouteIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 airPlayRouteIdentifiers];
}

id objc_msgSend_airplaneMode(void *a1, const char *a2, ...)
{
  return _[a1 airplaneMode];
}

id objc_msgSend_airplayRouteId(void *a1, const char *a2, ...)
{
  return _[a1 airplayRouteId];
}

id objc_msgSend_alarm(void *a1, const char *a2, ...)
{
  return _[a1 alarm];
}

id objc_msgSend_alarmID(void *a1, const char *a2, ...)
{
  return _[a1 alarmID];
}

id objc_msgSend_alarmId(void *a1, const char *a2, ...)
{
  return _[a1 alarmId];
}

id objc_msgSend_alarmIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 alarmIdentifier];
}

id objc_msgSend_alarmIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 alarmIdentifiers];
}

id objc_msgSend_alarmIds(void *a1, const char *a2, ...)
{
  return _[a1 alarmIds];
}

id objc_msgSend_alarmSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 alarmSnapshot];
}

id objc_msgSend_alarmToCreate(void *a1, const char *a2, ...)
{
  return _[a1 alarmToCreate];
}

id objc_msgSend_alarmURL(void *a1, const char *a2, ...)
{
  return _[a1 alarmURL];
}

id objc_msgSend_alarmURLs(void *a1, const char *a2, ...)
{
  return _[a1 alarmURLs];
}

id objc_msgSend_alarms(void *a1, const char *a2, ...)
{
  return _[a1 alarms];
}

id objc_msgSend_alarmsByID(void *a1, const char *a2, ...)
{
  return _[a1 alarmsByID];
}

id objc_msgSend_alertContextIsDirty(void *a1, const char *a2, ...)
{
  return _[a1 alertContextIsDirty];
}

id objc_msgSend_alertType(void *a1, const char *a2, ...)
{
  return _[a1 alertType];
}

id objc_msgSend_alertWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithConfiguration:");
}

id objc_msgSend_alignToMidnight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignToMidnight:");
}

id objc_msgSend_allBulletins(void *a1, const char *a2, ...)
{
  return _[a1 allBulletins];
}

id objc_msgSend_allContextKeys(void *a1, const char *a2, ...)
{
  return _[a1 allContextKeys];
}

id objc_msgSend_allGroups(void *a1, const char *a2, ...)
{
  return _[a1 allGroups];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeysForObject:");
}

id objc_msgSend_allMusicPersonalizationTokenStatuses(void *a1, const char *a2, ...)
{
  return _[a1 allMusicPersonalizationTokenStatuses];
}

id objc_msgSend_allMusicPersonalizationTokens(void *a1, const char *a2, ...)
{
  return _[a1 allMusicPersonalizationTokens];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allOutputVoiceIdentifiersForSiriLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allOutputVoiceIdentifiersForSiriLanguage:");
}

id objc_msgSend_allServices(void *a1, const char *a2, ...)
{
  return _[a1 allServices];
}

id objc_msgSend_allSyncAnchorKeys(void *a1, const char *a2, ...)
{
  return _[a1 allSyncAnchorKeys];
}

id objc_msgSend_allUsersBySharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 allUsersBySharedUserID];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allVocabSyncInfo(void *a1, const char *a2, ...)
{
  return _[a1 allVocabSyncInfo];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allocation(void *a1, const char *a2, ...)
{
  return _[a1 allocation];
}

id objc_msgSend_allocationStatus(void *a1, const char *a2, ...)
{
  return _[a1 allocationStatus];
}

id objc_msgSend_allowAdHocSendingLocationToServer(void *a1, const char *a2, ...)
{
  return _[a1 allowAdHocSendingLocationToServer];
}

id objc_msgSend_allowAssistantOnDemandAssetSubscription(void *a1, const char *a2, ...)
{
  return _[a1 allowAssistantOnDemandAssetSubscription];
}

id objc_msgSend_allowExplicitContent(void *a1, const char *a2, ...)
{
  return _[a1 allowExplicitContent];
}

id objc_msgSend_allowUnauthenticatedRequests(void *a1, const char *a2, ...)
{
  return _[a1 allowUnauthenticatedRequests];
}

id objc_msgSend_allowsAWDL(void *a1, const char *a2, ...)
{
  return _[a1 allowsAWDL];
}

id objc_msgSend_allowsBLE(void *a1, const char *a2, ...)
{
  return _[a1 allowsBLE];
}

id objc_msgSend_allowsBTPipe(void *a1, const char *a2, ...)
{
  return _[a1 allowsBTPipe];
}

id objc_msgSend_allowsForceAWDL(void *a1, const char *a2, ...)
{
  return _[a1 allowsForceAWDL];
}

id objc_msgSend_allowsForceBLE(void *a1, const char *a2, ...)
{
  return _[a1 allowsForceBLE];
}

id objc_msgSend_allowsInfraWiFi(void *a1, const char *a2, ...)
{
  return _[a1 allowsInfraWiFi];
}

id objc_msgSend_allowsNotifications(void *a1, const char *a2, ...)
{
  return _[a1 allowsNotifications];
}

id objc_msgSend_alterTableWithName_addColumn_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alterTableWithName:addColumn:error:");
}

id objc_msgSend_alternativeSelectionCount(void *a1, const char *a2, ...)
{
  return _[a1 alternativeSelectionCount];
}

id objc_msgSend_altitude(void *a1, const char *a2, ...)
{
  return _[a1 altitude];
}

id objc_msgSend_alwaysAllowVoiceActivation(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAllowVoiceActivation];
}

id objc_msgSend_alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _[a1 alwaysObscureBackgroundContentWhenActive];
}

id objc_msgSend_alwaysShowRecognizedSpeech(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowRecognizedSpeech];
}

id objc_msgSend_ams_activeiTunesAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_activeiTunesAccount");
}

id objc_msgSend_ams_localiTunesAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_localiTunesAccount");
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_sharedAccountStore");
}

id objc_msgSend_ams_storefront(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_storefront");
}

id objc_msgSend_analyticsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 analyticsDictionary];
}

id objc_msgSend_analyzedSuccessfulRetry(void *a1, const char *a2, ...)
{
  return _[a1 analyzedSuccessfulRetry];
}

id objc_msgSend_anchor(void *a1, const char *a2, ...)
{
  return _[a1 anchor];
}

id objc_msgSend_anchorWithKey_appID_syncType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorWithKey:appID:syncType:");
}

id objc_msgSend_anchors(void *a1, const char *a2, ...)
{
  return _[a1 anchors];
}

id objc_msgSend_andQueryCriterionWithSubcriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andQueryCriterionWithSubcriteria:");
}

id objc_msgSend_announceCalls(void *a1, const char *a2, ...)
{
  return _[a1 announceCalls];
}

id objc_msgSend_announceDropInCallForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceDropInCallForType:");
}

id objc_msgSend_announceGroupFaceTimeRequestForAnnounceDirectInvocationPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceGroupFaceTimeRequestForAnnounceDirectInvocationPayload:");
}

id objc_msgSend_announceHomeAnnouncementRequestFromApp_withAnnouncementIdentifier_withUserNotificationType_synchronousBurstIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceHomeAnnouncementRequestFromApp:withAnnouncementIdentifier:withUserNotificationType:synchronousBurstIndex:");
}

id objc_msgSend_announceIdToRemoteAssistantIdMap(void *a1, const char *a2, ...)
{
  return _[a1 announceIdToRemoteAssistantIdMap];
}

id objc_msgSend_announceIncomingCallNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceIncomingCallNotificationRequest:");
}

id objc_msgSend_announceIncomingCallerRequestForCallUUID_callProviderIdentifier_callProviderBundleId_callerContactIdentifiers_handle_isVideo_isCallerIDBlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceIncomingCallerRequestForCallUUID:callProviderIdentifier:callProviderBundleId:callerContactIdentifiers:handle:isVideo:isCallerIDBlocked:");
}

id objc_msgSend_announceMessagesRequestFromAnnounceDirectInvocationPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceMessagesRequestFromAnnounceDirectInvocationPayload:");
}

id objc_msgSend_announceNotificationHandlingStateUpdatedToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceNotificationHandlingStateUpdatedToState:");
}

id objc_msgSend_announceNotificationHandlingStateUpdatedWithAssistantId_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceNotificationHandlingStateUpdatedWithAssistantId:toState:");
}

id objc_msgSend_announceNotificationsRequestFromAnnounceDirectInvocationPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceNotificationsRequestFromAnnounceDirectInvocationPayload:");
}

id objc_msgSend_announcePlatformForCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 announcePlatformForCurrentRequest];
}

id objc_msgSend_announcePlatformForRoute(void *a1, const char *a2, ...)
{
  return _[a1 announcePlatformForRoute];
}

id objc_msgSend_announceRemindersRequestFromAnnounceDirectInvocationPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceRemindersRequestFromAnnounceDirectInvocationPayload:");
}

id objc_msgSend_announceSetting(void *a1, const char *a2, ...)
{
  return _[a1 announceSetting];
}

id objc_msgSend_announceVoicemailRequestForAnnounceDirectInvocationPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceVoicemailRequestForAnnounceDirectInvocationPayload:");
}

id objc_msgSend_announceWorkoutReminder_announcePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceWorkoutReminder:announcePayload:");
}

id objc_msgSend_announceWorkoutVoiceFeedback_announcePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceWorkoutVoiceFeedback:announcePayload:");
}

id objc_msgSend_announceableIntentIdentifiersForUserNotificationAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceableIntentIdentifiersForUserNotificationAnnouncementType:");
}

id objc_msgSend_announcementCategory(void *a1, const char *a2, ...)
{
  return _[a1 announcementCategory];
}

id objc_msgSend_announcementHeadphonesSetting(void *a1, const char *a2, ...)
{
  return _[a1 announcementHeadphonesSetting];
}

id objc_msgSend_announcementIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 announcementIdentifier];
}

id objc_msgSend_announcementNotificationType(void *a1, const char *a2, ...)
{
  return _[a1 announcementNotificationType];
}

id objc_msgSend_announcementPlatform(void *a1, const char *a2, ...)
{
  return _[a1 announcementPlatform];
}

id objc_msgSend_announcementRequestReadyToBeAnnounced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementRequestReadyToBeAnnounced:");
}

id objc_msgSend_announcementSetting(void *a1, const char *a2, ...)
{
  return _[a1 announcementSetting];
}

id objc_msgSend_announcementTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 announcementTimestamp];
}

id objc_msgSend_announcementType(void *a1, const char *a2, ...)
{
  return _[a1 announcementType];
}

id objc_msgSend_anonymousListener(void *a1, const char *a2, ...)
{
  return _[a1 anonymousListener];
}

id objc_msgSend_answerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appBundleID(void *a1, const char *a2, ...)
{
  return _[a1 appBundleID];
}

id objc_msgSend_appBundleId(void *a1, const char *a2, ...)
{
  return _[a1 appBundleId];
}

id objc_msgSend_appDomain(void *a1, const char *a2, ...)
{
  return _[a1 appDomain];
}

id objc_msgSend_appID(void *a1, const char *a2, ...)
{
  return _[a1 appID];
}

id objc_msgSend_appId(void *a1, const char *a2, ...)
{
  return _[a1 appId];
}

id objc_msgSend_appIdHints(void *a1, const char *a2, ...)
{
  return _[a1 appIdHints];
}

id objc_msgSend_appIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifier];
}

id objc_msgSend_appIdentifyingInfo(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifyingInfo];
}

id objc_msgSend_appIds(void *a1, const char *a2, ...)
{
  return _[a1 appIds];
}

id objc_msgSend_appInfoWithAppProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appInfoWithAppProxy:");
}

id objc_msgSend_appInfoWithApplicationRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appInfoWithApplicationRecord:");
}

id objc_msgSend_appLaunchFailedWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appLaunchFailedWithBundleIdentifier:");
}

id objc_msgSend_appLaunchHandler_didLaunchAppForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appLaunchHandler:didLaunchAppForRequestId:");
}

id objc_msgSend_appMetaData(void *a1, const char *a2, ...)
{
  return _[a1 appMetaData];
}

id objc_msgSend_appMetadata(void *a1, const char *a2, ...)
{
  return _[a1 appMetadata];
}

id objc_msgSend_appRestriction(void *a1, const char *a2, ...)
{
  return _[a1 appRestriction];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appTags(void *a1, const char *a2, ...)
{
  return _[a1 appTags];
}

id objc_msgSend_appendAcousticData_sampleCount_sampleRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAcousticData:sampleCount:sampleRate:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendHomeAccessorySiriDataSharingChangeLogEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendHomeAccessorySiriDataSharingChangeLogEvent:");
}

id objc_msgSend_appendItemWithBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendItemWithBulletin:");
}

id objc_msgSend_appendSessionObjectToRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSessionObjectToRequest:");
}

id objc_msgSend_appendSpeechPacket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSpeechPacket:");
}

id objc_msgSend_appendSpeechPackets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSpeechPackets:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleConnectSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 appleConnectSessionToken];
}

id objc_msgSend_applicationDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 applicationDisplayName];
}

id objc_msgSend_applicationId(void *a1, const char *a2, ...)
{
  return _[a1 applicationId];
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifier];
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return _[a1 applicationName];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationStateForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationStateForApplication:");
}

id objc_msgSend_applicationType(void *a1, const char *a2, ...)
{
  return _[a1 applicationType];
}

id objc_msgSend_applicationUUID(void *a1, const char *a2, ...)
{
  return _[a1 applicationUUID];
}

id objc_msgSend_applicationVersion(void *a1, const char *a2, ...)
{
  return _[a1 applicationVersion];
}

id objc_msgSend_applicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationWithBundleIdentifier:");
}

id objc_msgSend_applyChanges(void *a1, const char *a2, ...)
{
  return _[a1 applyChanges];
}

id objc_msgSend_applyIncrementalChanges_fromDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyIncrementalChanges:fromDeviceWithIdentifier:");
}

id objc_msgSend_applySnapshot_fromDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshot:fromDeviceWithIdentifier:");
}

id objc_msgSend_archive(void *a1, const char *a2, ...)
{
  return _[a1 archive];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_areActivityNotificationsEnabledForPersonalRequests(void *a1, const char *a2, ...)
{
  return _[a1 areActivityNotificationsEnabledForPersonalRequests];
}

id objc_msgSend_areActivityNotificationsOffForAllHomes(void *a1, const char *a2, ...)
{
  return _[a1 areActivityNotificationsOffForAllHomes];
}

id objc_msgSend_areAnnouncementRequestsPermittedByPresentationWhileActive(void *a1, const char *a2, ...)
{
  return _[a1 areAnnouncementRequestsPermittedByPresentationWhileActive];
}

id objc_msgSend_areAnnouncementRequestsPermittedByPresentationWhileActiveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areAnnouncementRequestsPermittedByPresentationWhileActiveWithCompletion:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_arrivalDate(void *a1, const char *a2, ...)
{
  return _[a1 arrivalDate];
}

id objc_msgSend_asrFeatureLatencyDistribution(void *a1, const char *a2, ...)
{
  return _[a1 asrFeatureLatencyDistribution];
}

id objc_msgSend_assetManager_didChangeLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetManager:didChangeLanguageCode:");
}

id objc_msgSend_assetManagerDidChangeAssetAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetManagerDidChangeAssetAvailability:");
}

id objc_msgSend_assetSets(void *a1, const char *a2, ...)
{
  return _[a1 assetSets];
}

id objc_msgSend_assetsAvailableStatusForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetsAvailableStatusForLanguage:");
}

id objc_msgSend_assistantAccessControlForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantAccessControlForHome:");
}

id objc_msgSend_assistantDataManager_didUpdateAssistantData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantDataManager:didUpdateAssistantData:");
}

id objc_msgSend_assistantDataManager_didUpdateAssistantData_meCards_unredactedAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantDataManager:didUpdateAssistantData:meCards:unredactedAnchor:");
}

id objc_msgSend_assistantDataManagerDictationHIPAAMDMStatusDidChange(void *a1, const char *a2, ...)
{
  return _[a1 assistantDataManagerDictationHIPAAMDMStatusDidChange];
}

id objc_msgSend_assistantDismissed(void *a1, const char *a2, ...)
{
  return _[a1 assistantDismissed];
}

id objc_msgSend_assistantEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantEnabled];
}

id objc_msgSend_assistantID(void *a1, const char *a2, ...)
{
  return _[a1 assistantID];
}

id objc_msgSend_assistantId(void *a1, const char *a2, ...)
{
  return _[a1 assistantId];
}

id objc_msgSend_assistantIdForDeviceWithIdsDeviceUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantIdForDeviceWithIdsDeviceUniqueIdentifier:");
}

id objc_msgSend_assistantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 assistantIdentifier];
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantIsEnabled];
}

id objc_msgSend_assistantOnDemandAssetSubscriptionAllowed(void *a1, const char *a2, ...)
{
  return _[a1 assistantOnDemandAssetSubscriptionAllowed];
}

id objc_msgSend_assistantSession_beginSessionRetryPreferringWWAN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:beginSessionRetryPreferringWWAN:");
}

id objc_msgSend_assistantSession_cannotHandleRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:cannotHandleRequest:error:");
}

id objc_msgSend_assistantSession_didChangeRequestIdFrom_toId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:didChangeRequestIdFrom:toId:");
}

id objc_msgSend_assistantSession_didLoadAssistantSyncRequested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:didLoadAssistantSyncRequested:");
}

id objc_msgSend_assistantSession_didOpenConnectionWithPolicyId_routeId_connectionDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:");
}

id objc_msgSend_assistantSession_receivedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:receivedCommand:");
}

id objc_msgSend_assistantSession_receivedError_isRetryableError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:receivedError:isRetryableError:");
}

id objc_msgSend_assistantSession_receivedIntermediateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:receivedIntermediateError:");
}

id objc_msgSend_assistantSession_willRetryOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSession:willRetryOnError:");
}

id objc_msgSend_assistantSessionCommandsToRestoreStateOnNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionCommandsToRestoreStateOnNewConnection:");
}

id objc_msgSend_assistantSessionConnectionDidClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionConnectionDidClose:");
}

id objc_msgSend_assistantSessionConnectionDidReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionConnectionDidReset:");
}

id objc_msgSend_assistantSessionDictationHIPAAMDMStatusDidChange(void *a1, const char *a2, ...)
{
  return _[a1 assistantSessionDictationHIPAAMDMStatusDidChange];
}

id objc_msgSend_assistantSessionDidCreateAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionDidCreateAssistant:");
}

id objc_msgSend_assistantSessionDidDestroyAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionDidDestroyAssistant:");
}

id objc_msgSend_assistantSessionManager_didLoadAssistantSyncRequested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:didLoadAssistantSyncRequested:");
}

id objc_msgSend_assistantSessionManager_didObserverIntermediateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:didObserverIntermediateError:");
}

id objc_msgSend_assistantSessionManager_receivedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:receivedCommand:");
}

id objc_msgSend_assistantSessionManager_receivedError_isRetryableError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:receivedError:isRetryableError:");
}

id objc_msgSend_assistantSessionManager_shouldLogVisibleRequestFailureForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:shouldLogVisibleRequestFailureForError:");
}

id objc_msgSend_assistantSessionManager_willRetryOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManager:willRetryOnError:");
}

id objc_msgSend_assistantSessionManagerCommandsToRestoreStateOnNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerCommandsToRestoreStateOnNewConnection:");
}

id objc_msgSend_assistantSessionManagerConnectionDidBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerConnectionDidBecomeActive:");
}

id objc_msgSend_assistantSessionManagerDidCreateAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerDidCreateAssistant:");
}

id objc_msgSend_assistantSessionManagerDidDestroyAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerDidDestroyAssistant:");
}

id objc_msgSend_assistantSessionManagerRequestsObservingCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerRequestsObservingCallState:");
}

id objc_msgSend_assistantSessionManagerRetryingRequestOnRemoteSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerRetryingRequestOnRemoteSession:");
}

id objc_msgSend_assistantSessionManagerSessionConnectionDidReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerSessionConnectionDidReset:");
}

id objc_msgSend_assistantSessionManagerSessionRemoteConnectionDidReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerSessionRemoteConnectionDidReset:");
}

id objc_msgSend_assistantSessionManagerShouldAttemptRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionManagerShouldAttemptRetry:");
}

id objc_msgSend_assistantSessionRetryingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionRetryingRequest:");
}

id objc_msgSend_assistantSessionShouldAttemptRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionShouldAttemptRetry:");
}

id objc_msgSend_assistantSessionShouldPrewarmConnetion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionShouldPrewarmConnetion:");
}

id objc_msgSend_assistantSessionShouldRestartConnectionOnWiFi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionShouldRestartConnectionOnWiFi:");
}

id objc_msgSend_assistantSessionWillStartConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantSessionWillStartConnection:");
}

id objc_msgSend_assistantSyncDisabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantSyncDisabled];
}

id objc_msgSend_associatedBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 associatedBundleIdentifier];
}

id objc_msgSend_asyncLogAnalyticsIdentifiersDIMEvents(void *a1, const char *a2, ...)
{
  return _[a1 asyncLogAnalyticsIdentifiersDIMEvents];
}

id objc_msgSend_attemptCount(void *a1, const char *a2, ...)
{
  return _[a1 attemptCount];
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _[a1 attributes];
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioAlertStyle(void *a1, const char *a2, ...)
{
  return _[a1 audioAlertStyle];
}

id objc_msgSend_audioAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 audioAnalytics];
}

id objc_msgSend_audioAndVideoCallsWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioAndVideoCallsWithStatus:");
}

id objc_msgSend_audioAppSignals(void *a1, const char *a2, ...)
{
  return _[a1 audioAppSignals];
}

id objc_msgSend_audioCategory(void *a1, const char *a2, ...)
{
  return _[a1 audioCategory];
}

id objc_msgSend_audioDestination(void *a1, const char *a2, ...)
{
  return _[a1 audioDestination];
}

id objc_msgSend_audioFileHandle(void *a1, const char *a2, ...)
{
  return _[a1 audioFileHandle];
}

id objc_msgSend_audioFileIOTransactionState(void *a1, const char *a2, ...)
{
  return _[a1 audioFileIOTransactionState];
}

id objc_msgSend_audioFileType(void *a1, const char *a2, ...)
{
  return _[a1 audioFileType];
}

id objc_msgSend_audioFileURL(void *a1, const char *a2, ...)
{
  return _[a1 audioFileURL];
}

id objc_msgSend_audioOrVideoCallWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioOrVideoCallWithStatus:");
}

id objc_msgSend_audioOutputType(void *a1, const char *a2, ...)
{
  return _[a1 audioOutputType];
}

id objc_msgSend_audioPlaybackRequestDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioPlaybackRequestDidStart:");
}

id objc_msgSend_audioPlaybackRequestDidStop_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioPlaybackRequestDidStop:error:");
}

id objc_msgSend_audioPlaybackRequestWillStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioPlaybackRequestWillStart:");
}

id objc_msgSend_audioPlaybackService(void *a1, const char *a2, ...)
{
  return _[a1 audioPlaybackService];
}

id objc_msgSend_audioProcessedMs(void *a1, const char *a2, ...)
{
  return _[a1 audioProcessedMs];
}

id objc_msgSend_audioSessionActivationDelay(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionActivationDelay];
}

id objc_msgSend_audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold];
}

id objc_msgSend_audioSessionAssertionAcquisitionService(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionAssertionAcquisitionService];
}

id objc_msgSend_audioSessionController(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionController];
}

id objc_msgSend_audioSessionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionCoordinator];
}

id objc_msgSend_audioSessionCoordinator_prepareAudioSessionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionCoordinator:prepareAudioSessionWithContext:");
}

id objc_msgSend_audioSessionCoordinator_releaseAudioSessionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionCoordinator:releaseAudioSessionWithContext:");
}

id objc_msgSend_audioSessionDidBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionDidBecomeActive:");
}

id objc_msgSend_audioSessionDidBeginInterruptionWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionDidBeginInterruptionWithUserInfo:");
}

id objc_msgSend_audioSessionDidEnd(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionDidEnd];
}

id objc_msgSend_audioSessionDidEndInterruption_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionDidEndInterruption:userInfo:");
}

id objc_msgSend_audioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionID];
}

id objc_msgSend_audioSessionIDChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionIDChanged:");
}

id objc_msgSend_audioSessionSetActiveEndHostTime(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionSetActiveEndHostTime];
}

id objc_msgSend_audioSessionWillBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioSessionWillBecomeActive:");
}

id objc_msgSend_audioSource(void *a1, const char *a2, ...)
{
  return _[a1 audioSource];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_authToken(void *a1, const char *a2, ...)
{
  return _[a1 authToken];
}

id objc_msgSend_authenticationAvailable(void *a1, const char *a2, ...)
{
  return _[a1 authenticationAvailable];
}

id objc_msgSend_authenticationCapabilityDidChange_forBTAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticationCapabilityDidChange:forBTAddress:");
}

id objc_msgSend_authenticationStrategyVersion(void *a1, const char *a2, ...)
{
  return _[a1 authenticationStrategyVersion];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_authorizationStatusForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForBundleIdentifier:");
}

id objc_msgSend_authorizationStatusForBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatusForBundlePath:");
}

id objc_msgSend_autoAncCapability(void *a1, const char *a2, ...)
{
  return _[a1 autoAncCapability];
}

id objc_msgSend_autoPunctuation(void *a1, const char *a2, ...)
{
  return _[a1 autoPunctuation];
}

id objc_msgSend_autoPunctuationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoPunctuationEnabled];
}

id objc_msgSend_automotive(void *a1, const char *a2, ...)
{
  return _[a1 automotive];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availableAnnouncementRequestTypes(void *a1, const char *a2, ...)
{
  return _[a1 availableAnnouncementRequestTypes];
}

id objc_msgSend_availableAnnouncementRequestTypesChanged_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableAnnouncementRequestTypesChanged:onPlatform:");
}

id objc_msgSend_availableData(void *a1, const char *a2, ...)
{
  return _[a1 availableData];
}

id objc_msgSend_availableLanguages(void *a1, const char *a2, ...)
{
  return _[a1 availableLanguages];
}

id objc_msgSend_availableLanguagesInTheHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableLanguagesInTheHome:");
}

id objc_msgSend_availableOnLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 availableOnLockScreen];
}

id objc_msgSend_averageLocalRTT(void *a1, const char *a2, ...)
{
  return _[a1 averageLocalRTT];
}

id objc_msgSend_averagePowerForChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "averagePowerForChannel:");
}

id objc_msgSend_avscRouteDescription(void *a1, const char *a2, ...)
{
  return _[a1 avscRouteDescription];
}

id objc_msgSend_backgroundContextIsDirty(void *a1, const char *a2, ...)
{
  return _[a1 backgroundContextIsDirty];
}

id objc_msgSend_backgroundContextWithCachedObjects(void *a1, const char *a2, ...)
{
  return _[a1 backgroundContextWithCachedObjects];
}

id objc_msgSend_backgroundLaunch(void *a1, const char *a2, ...)
{
  return _[a1 backgroundLaunch];
}

id objc_msgSend_backingStore(void *a1, const char *a2, ...)
{
  return _[a1 backingStore];
}

id objc_msgSend_bargeInModes(void *a1, const char *a2, ...)
{
  return _[a1 bargeInModes];
}

id objc_msgSend_bargeInOptions(void *a1, const char *a2, ...)
{
  return _[a1 bargeInOptions];
}

id objc_msgSend_barrier(void *a1, const char *a2, ...)
{
  return _[a1 barrier];
}

id objc_msgSend_barrier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "barrier:");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_bbAction(void *a1, const char *a2, ...)
{
  return _[a1 bbAction];
}

id objc_msgSend_bbBulletin(void *a1, const char *a2, ...)
{
  return _[a1 bbBulletin];
}

id objc_msgSend_becomeCurrent(void *a1, const char *a2, ...)
{
  return _[a1 becomeCurrent];
}

id objc_msgSend_bedtimeHour(void *a1, const char *a2, ...)
{
  return _[a1 bedtimeHour];
}

id objc_msgSend_bedtimeMinute(void *a1, const char *a2, ...)
{
  return _[a1 bedtimeMinute];
}

id objc_msgSend_beginEventsGrouping(void *a1, const char *a2, ...)
{
  return _[a1 beginEventsGrouping];
}

id objc_msgSend_beginGrouping(void *a1, const char *a2, ...)
{
  return _[a1 beginGrouping];
}

id objc_msgSend_beginMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 beginMonitoring];
}

id objc_msgSend_beginNewSpeechLogWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginNewSpeechLogWithFormat:");
}

id objc_msgSend_beginRetryableRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginRetryableRequest:");
}

id objc_msgSend_beginSendingWithMessageSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSendingWithMessageSender:");
}

id objc_msgSend_beginSessionForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSessionForClient:");
}

id objc_msgSend_beginSessionRetryPreferringWWAN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSessionRetryPreferringWWAN:");
}

id objc_msgSend_beginSyncForInfo_chunkHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSyncForInfo:chunkHandler:");
}

id objc_msgSend_beginSyncForServicePath_className_requestUUID_info_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSyncForServicePath:className:requestUUID:info:reply:");
}

id objc_msgSend_beginTimerForContextCommands(void *a1, const char *a2, ...)
{
  return _[a1 beginTimerForContextCommands];
}

id objc_msgSend_beginTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 beginTimestamp];
}

id objc_msgSend_beginTransactionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransactionWithError:");
}

id objc_msgSend_beginUpdate(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdate];
}

id objc_msgSend_beginUpdatingAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdatingAssistantData];
}

id objc_msgSend_bestSupportedLanguageCodeForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestSupportedLanguageCodeForLanguageCode:");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bluetoothDevice_deviceInfoDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothDevice:deviceInfoDidChangeFrom:to:");
}

id objc_msgSend_bluetoothDevice_headphoneInEarDetectionStateDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:");
}

id objc_msgSend_bluetoothDevice_headphoneListeningModeDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothDevice:headphoneListeningModeDidChangeFrom:to:");
}

id objc_msgSend_bluetoothDeviceDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothDeviceDidInvalidate:");
}

id objc_msgSend_bluetoothState(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothState];
}

id objc_msgSend_bluetoothWirelessSplitterSession_sessionInfoDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothWirelessSplitterSession:sessionInfoDidChangeFrom:to:");
}

id objc_msgSend_bluetoothWirelessSplitterSessionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothWirelessSplitterSessionDidInvalidate:");
}

id objc_msgSend_bobbleCapability(void *a1, const char *a2, ...)
{
  return _[a1 bobbleCapability];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLeanValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLeanValue];
}

id objc_msgSend_boostQueuedEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boostQueuedEvents:");
}

id objc_msgSend_btAddress(void *a1, const char *a2, ...)
{
  return _[a1 btAddress];
}

id objc_msgSend_btPreference(void *a1, const char *a2, ...)
{
  return _[a1 btPreference];
}

id objc_msgSend_buffersFromSpeechLogAtURL_isNarrowBand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buffersFromSpeechLogAtURL:isNarrowBand:");
}

id objc_msgSend_buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled_onLockscreen_dictationEnabled_voiceTriggerEnabled_starkHasBeenActiveWithin24Hours_raiseToSpeakEnabled_activeAppleAudioDevices_spokenNotificationsEnabled_announceNotificationsEnabledOnHeadphones_carplayAnnounceEnablementType_isAnnounceNotificationsMutedForCarPlay_shouldSkipTriggerlessReplyConfirmation_spokenNotificationsProxCardSeen_spokenNotificationsControlCenterModuleEnabled_spokenNotificationsWhitelistSettings_announceCallsEnabled_preciseLocationEnabled_locationAccessPermission_adaptiveSiriVolumeEnabled_adaptiveSiriVolumePermanentOffsetEnabled_adaptiveSiriVolumePermanentOffsetFactor_adaptiveSiriVolumeMostRecentIntent_isRemoteDarwinVoiceTriggerEnabled_autoSendSettings_siriInCallEnablementState_hangUpEnablementState_heartbeatQueuedTime_siriVoiceTriggerSettings_isShowAppsBehindSiriEnabledOnCarPlay_isSiriCapableDigitalCarKeyAvailable_connectedBTCarHeadunits_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:locationAccessPermission:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:isRemoteDarwinVoiceTriggerEnabled:autoSendSettings:siriInCallEnablementState:hangUpEnablementState:heartbeatQueuedTime:siriVoiceTriggerSettings:isShowAppsBehindSiriEnabledOnCarPlay:isSiriCapableDigitalCarKeyAvailable:connectedBTCarHeadunits:withCompletion:");
}

id objc_msgSend_buildDeviceDynamicContextRelativeToTimestamp_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildDeviceDynamicContextRelativeToTimestamp:withCompletion:");
}

id objc_msgSend_buildDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 buildDictionaryRepresentation];
}

id objc_msgSend_buildNumber(void *a1, const char *a2, ...)
{
  return _[a1 buildNumber];
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _[a1 buildVersion];
}

id objc_msgSend_bulletin(void *a1, const char *a2, ...)
{
  return _[a1 bulletin];
}

id objc_msgSend_bulletinForInternalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bulletinForInternalID:");
}

id objc_msgSend_bulletinID(void *a1, const char *a2, ...)
{
  return _[a1 bulletinID];
}

id objc_msgSend_bulletinWithNotificationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bulletinWithNotificationID:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleId(void *a1, const char *a2, ...)
{
  return _[a1 bundleId];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _[a1 bundlePath];
}

id objc_msgSend_bundleProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleProxyForIdentifier:");
}

id objc_msgSend_bundleRecordWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleVersion(void *a1, const char *a2, ...)
{
  return _[a1 bundleVersion];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_bytesReceived(void *a1, const char *a2, ...)
{
  return _[a1 bytesReceived];
}

id objc_msgSend_bytesRetransmitted(void *a1, const char *a2, ...)
{
  return _[a1 bytesRetransmitted];
}

id objc_msgSend_bytesSent(void *a1, const char *a2, ...)
{
  return _[a1 bytesSent];
}

id objc_msgSend_bytesUnacked(void *a1, const char *a2, ...)
{
  return _[a1 bytesUnacked];
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cacheImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheImage:");
}

id objc_msgSend_cacheTrialExperimentsIdentifiersForCodePathID_namespaces_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheTrialExperimentsIdentifiersForCodePathID:namespaces:completionHandler:");
}

id objc_msgSend_cacheableObjectForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheableObjectForIdentifier:");
}

id objc_msgSend_cachedSharedDataForUniqueId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedSharedDataForUniqueId:");
}

id objc_msgSend_calculateFileNameAgeInDays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculateFileNameAgeInDays:");
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _[a1 calendar];
}

id objc_msgSend_calendarIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 calendarIdentifier];
}

id objc_msgSend_calendarsForEntityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendarsForEntityType:");
}

id objc_msgSend_call(void *a1, const char *a2, ...)
{
  return _[a1 call];
}

id objc_msgSend_callCenterWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCenterWithQueue:");
}

id objc_msgSend_callIsPossibleForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callIsPossibleForRequestId:");
}

id objc_msgSend_callObserver_callStateDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callObserver:callStateDidChangeFrom:to:");
}

id objc_msgSend_callObserver_callStateDidChangeFrom_to_isDropInCallDidChangeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callObserver:callStateDidChangeFrom:to:isDropInCallDidChangeTo:");
}

id objc_msgSend_callObserver_onSpeakerDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callObserver:onSpeakerDidChange:");
}

id objc_msgSend_callProviderBundleID(void *a1, const char *a2, ...)
{
  return _[a1 callProviderBundleID];
}

id objc_msgSend_callProviderIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 callProviderIdentifier];
}

id objc_msgSend_callState(void *a1, const char *a2, ...)
{
  return _[a1 callState];
}

id objc_msgSend_callUUID(void *a1, const char *a2, ...)
{
  return _[a1 callUUID];
}

id objc_msgSend_callbacks(void *a1, const char *a2, ...)
{
  return _[a1 callbacks];
}

id objc_msgSend_callerContactIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 callerContactIdentifiers];
}

id objc_msgSend_callsWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsWithStatus:");
}

id objc_msgSend_canHandleRequest(void *a1, const char *a2, ...)
{
  return _[a1 canHandleRequest];
}

id objc_msgSend_canLogWithSpeechManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canLogWithSpeechManager:");
}

id objc_msgSend_canOpenApplication_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOpenApplication:reason:");
}

id objc_msgSend_canReachPersonalDevices(void *a1, const char *a2, ...)
{
  return _[a1 canReachPersonalDevices];
}

id objc_msgSend_canUseVoiceTriggerDuringPhoneCallWithState(void *a1, const char *a2, ...)
{
  return _[a1 canUseVoiceTriggerDuringPhoneCallWithState];
}

id objc_msgSend_canUseWiFiDirectly(void *a1, const char *a2, ...)
{
  return _[a1 canUseWiFiDirectly];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAssociatedRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelAssociatedRequests];
}

id objc_msgSend_cancelCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 cancelCurrentRequest];
}

id objc_msgSend_cancelCurrentRequestForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCurrentRequestForReason:");
}

id objc_msgSend_cancelCurrentSpeechLog(void *a1, const char *a2, ...)
{
  return _[a1 cancelCurrentSpeechLog];
}

id objc_msgSend_cancelIfNotAlreadyCanceled(void *a1, const char *a2, ...)
{
  return _[a1 cancelIfNotAlreadyCanceled];
}

id objc_msgSend_cancelLocalRecognitionIfActive(void *a1, const char *a2, ...)
{
  return _[a1 cancelLocalRecognitionIfActive];
}

id objc_msgSend_cancelLocationUpdateSessionTeardown(void *a1, const char *a2, ...)
{
  return _[a1 cancelLocationUpdateSessionTeardown];
}

id objc_msgSend_cancelOperationsForRequest_forAssistantID_fromRemote_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOperationsForRequest:forAssistantID:fromRemote:reason:");
}

id objc_msgSend_cancelOperationsForRequestID_forAssistantID_fromRemote_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOperationsForRequestID:forAssistantID:fromRemote:reason:");
}

id objc_msgSend_cancelPeripheralConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPeripheralConnection:");
}

id objc_msgSend_cancelRateLimitTimerForZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRateLimitTimerForZoneInfo:");
}

id objc_msgSend_cancelRecordZoneSetupTimerForZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRecordZoneSetupTimerForZoneInfo:");
}

id objc_msgSend_cancelRequestForDelegate_reason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequestForDelegate:reason:error:");
}

id objc_msgSend_cancelRequestWithAssistantId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequestWithAssistantId:requestId:");
}

id objc_msgSend_cancelRequestWithAssistantId_requestId_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequestWithAssistantId:requestId:reason:");
}

id objc_msgSend_cancelSessionCommand(void *a1, const char *a2, ...)
{
  return _[a1 cancelSessionCommand];
}

id objc_msgSend_cancelSessionRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSessionRequest:");
}

id objc_msgSend_cancelSessions(void *a1, const char *a2, ...)
{
  return _[a1 cancelSessions];
}

id objc_msgSend_cancelShareCreationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelShareCreationTimer:");
}

id objc_msgSend_cancelSpeech(void *a1, const char *a2, ...)
{
  return _[a1 cancelSpeech];
}

id objc_msgSend_cancelSpeechCaptureSuppressingAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSpeechCaptureSuppressingAlert:");
}

id objc_msgSend_cancelSpeechForDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSpeechForDelegate:");
}

id objc_msgSend_cancelSubscriptionSetupTimerForZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSubscriptionSetupTimerForZoneInfo:");
}

id objc_msgSend_cancelSyncForAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSyncForAnchor:");
}

id objc_msgSend_cancelSyncRetryTimerForZoneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSyncRetryTimerForZoneInfo:");
}

id objc_msgSend_cancelSynchronously(void *a1, const char *a2, ...)
{
  return _[a1 cancelSynchronously];
}

id objc_msgSend_cancelSynchronously_isOnConnectionQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSynchronously:isOnConnectionQueue:completion:");
}

id objc_msgSend_cancelSynchronously_onQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSynchronously:onQueue:completion:");
}

id objc_msgSend_carPlayStream(void *a1, const char *a2, ...)
{
  return _[a1 carPlayStream];
}

id objc_msgSend_carrierName(void *a1, const char *a2, ...)
{
  return _[a1 carrierName];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_categoryType(void *a1, const char *a2, ...)
{
  return _[a1 categoryType];
}

id objc_msgSend_cbuuid(void *a1, const char *a2, ...)
{
  return _[a1 cbuuid];
}

id objc_msgSend_cellularHistorical(void *a1, const char *a2, ...)
{
  return _[a1 cellularHistorical];
}

id objc_msgSend_cellularInstant(void *a1, const char *a2, ...)
{
  return _[a1 cellularInstant];
}

id objc_msgSend_certificate(void *a1, const char *a2, ...)
{
  return _[a1 certificate];
}

id objc_msgSend_changeVolumeForRoute_forCategory_mode_route_deviceIdentifier_andRouteSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeVolumeForRoute:forCategory:mode:route:deviceIdentifier:andRouteSubtype:");
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return _[a1 channel];
}

id objc_msgSend_characterModificationCount(void *a1, const char *a2, ...)
{
  return _[a1 characterModificationCount];
}

id objc_msgSend_checkForATVRMVSettingUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkForATVRMVSettingUpdate:");
}

id objc_msgSend_checkForMetricsUploadProblem(void *a1, const char *a2, ...)
{
  return _[a1 checkForMetricsUploadProblem];
}

id objc_msgSend_checkIfAnyUserVocabularyIsBlacklistedForApp_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIfAnyUserVocabularyIsBlacklistedForApp:completion:");
}

id objc_msgSend_checkIfHomeHubDeviceIsLookingForItsHubWithLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIfHomeHubDeviceIsLookingForItsHubWithLocalDevice:");
}

id objc_msgSend_checkIfHubIsLookingForAHomeHubDeviceItIsHostingWithLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIfHubIsLookingForAHomeHubDeviceItIsHostingWithLocalDevice:");
}

id objc_msgSend_checkIfSyncSlot_isAllowedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkIfSyncSlot:isAllowedWithCompletion:");
}

id objc_msgSend_checkIn(void *a1, const char *a2, ...)
{
  return _[a1 checkIn];
}

id objc_msgSend_checkPermissionToSyncSlot_forApp_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkPermissionToSyncSlot:forApp:completion:");
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_checkpointWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkpointWithCompletion:");
}

id objc_msgSend_checkpointWriteAheadLogWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkpointWriteAheadLogWithError:");
}

id objc_msgSend_checksums(void *a1, const char *a2, ...)
{
  return _[a1 checksums];
}

id objc_msgSend_ckAcctInfo(void *a1, const char *a2, ...)
{
  return _[a1 ckAcctInfo];
}

id objc_msgSend_className(void *a1, const char *a2, ...)
{
  return _[a1 className];
}

id objc_msgSend_cleanupCacheDirectory(void *a1, const char *a2, ...)
{
  return _[a1 cleanupCacheDirectory];
}

id objc_msgSend_clearAlertContextDirtyState(void *a1, const char *a2, ...)
{
  return _[a1 clearAlertContextDirtyState];
}

id objc_msgSend_clearAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 clearAssistantData];
}

id objc_msgSend_clearBackgroundContextDirtyState(void *a1, const char *a2, ...)
{
  return _[a1 clearBackgroundContextDirtyState];
}

id objc_msgSend_clearBulletins_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearBulletins:inSection:");
}

id objc_msgSend_clearContext(void *a1, const char *a2, ...)
{
  return _[a1 clearContext];
}

id objc_msgSend_clearDomainObjectsForServicePath_className_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDomainObjectsForServicePath:className:");
}

id objc_msgSend_clearFlagsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearFlagsForKeys:");
}

id objc_msgSend_clearLegacyKeyValueServerChangeTokens(void *a1, const char *a2, ...)
{
  return _[a1 clearLegacyKeyValueServerChangeTokens];
}

id objc_msgSend_clearNakedObjects(void *a1, const char *a2, ...)
{
  return _[a1 clearNakedObjects];
}

id objc_msgSend_clearNotificationPreviewRestrictedApps(void *a1, const char *a2, ...)
{
  return _[a1 clearNotificationPreviewRestrictedApps];
}

id objc_msgSend_clearPairs(void *a1, const char *a2, ...)
{
  return _[a1 clearPairs];
}

id objc_msgSend_clearQueuedAnchorsAndReasons(void *a1, const char *a2, ...)
{
  return _[a1 clearQueuedAnchorsAndReasons];
}

id objc_msgSend_clearRequestQueue(void *a1, const char *a2, ...)
{
  return _[a1 clearRequestQueue];
}

id objc_msgSend_clearResultObjectsForAllRequestIdsExcept_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearResultObjectsForAllRequestIdsExcept:");
}

id objc_msgSend_clearResultObjectsForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearResultObjectsForRequestId:");
}

id objc_msgSend_clearSyncRequestWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSyncRequestWithUUID:");
}

id objc_msgSend_clearTcpInfoMetrics(void *a1, const char *a2, ...)
{
  return _[a1 clearTcpInfoMetrics];
}

id objc_msgSend_clearUnsavedRecords(void *a1, const char *a2, ...)
{
  return _[a1 clearUnsavedRecords];
}

id objc_msgSend_clientBoundCommand(void *a1, const char *a2, ...)
{
  return _[a1 clientBoundCommand];
}

id objc_msgSend_clientBoundCommands(void *a1, const char *a2, ...)
{
  return _[a1 clientBoundCommands];
}

id objc_msgSend_clientConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientConnected:");
}

id objc_msgSend_clientDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDisconnected:");
}

id objc_msgSend_clientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentifier];
}

id objc_msgSend_clientModelVersion(void *a1, const char *a2, ...)
{
  return _[a1 clientModelVersion];
}

id objc_msgSend_clientWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientWithIdentifier:");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return _[a1 closeFile];
}

id objc_msgSend_closeForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeForConnection:");
}

id objc_msgSend_closeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithError:");
}

id objc_msgSend_cloudKitSharedDatabaseChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 cloudKitSharedDatabaseChangeToken];
}

id objc_msgSend_cloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncEnabled];
}

id objc_msgSend_cloudSyncEnabledModificationDate(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncEnabledModificationDate];
}

id objc_msgSend_cname(void *a1, const char *a2, ...)
{
  return _[a1 cname];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_codec(void *a1, const char *a2, ...)
{
  return _[a1 codec];
}

id objc_msgSend_codecIsNarrowband(void *a1, const char *a2, ...)
{
  return _[a1 codecIsNarrowband];
}

id objc_msgSend_codedLocation(void *a1, const char *a2, ...)
{
  return _[a1 codedLocation];
}

id objc_msgSend_columns(void *a1, const char *a2, ...)
{
  return _[a1 columns];
}

id objc_msgSend_combinedRank(void *a1, const char *a2, ...)
{
  return _[a1 combinedRank];
}

id objc_msgSend_combinedScore(void *a1, const char *a2, ...)
{
  return _[a1 combinedScore];
}

id objc_msgSend_commandAceIds(void *a1, const char *a2, ...)
{
  return _[a1 commandAceIds];
}

id objc_msgSend_commandCenterClient(void *a1, const char *a2, ...)
{
  return _[a1 commandCenterClient];
}

id objc_msgSend_commandIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 commandIdentifiers];
}

id objc_msgSend_commandOutcome(void *a1, const char *a2, ...)
{
  return _[a1 commandOutcome];
}

id objc_msgSend_commandPullDeltaRequest(void *a1, const char *a2, ...)
{
  return _[a1 commandPullDeltaRequest];
}

id objc_msgSend_commandPullDeltaResponse(void *a1, const char *a2, ...)
{
  return _[a1 commandPullDeltaResponse];
}

id objc_msgSend_commandPullGenerationsRequest(void *a1, const char *a2, ...)
{
  return _[a1 commandPullGenerationsRequest];
}

id objc_msgSend_commandPullGenerationsResponse(void *a1, const char *a2, ...)
{
  return _[a1 commandPullGenerationsResponse];
}

id objc_msgSend_commandPullSnapshotRequest(void *a1, const char *a2, ...)
{
  return _[a1 commandPullSnapshotRequest];
}

id objc_msgSend_commandPullSnapshotResponse(void *a1, const char *a2, ...)
{
  return _[a1 commandPullSnapshotResponse];
}

id objc_msgSend_commandPushGenerationsRequest(void *a1, const char *a2, ...)
{
  return _[a1 commandPushGenerationsRequest];
}

id objc_msgSend_commandPushGenerationsResponse(void *a1, const char *a2, ...)
{
  return _[a1 commandPushGenerationsResponse];
}

id objc_msgSend_commandReferences(void *a1, const char *a2, ...)
{
  return _[a1 commandReferences];
}

id objc_msgSend_commandRefsRestartCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandRefsRestartCommand:");
}

id objc_msgSend_commandRelayProxyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 commandRelayProxyIdentifier];
}

id objc_msgSend_commands(void *a1, const char *a2, ...)
{
  return _[a1 commands];
}

id objc_msgSend_commandsForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandsForDomain:");
}

id objc_msgSend_commandsForReply_toCommand_missingReferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandsForReply:toCommand:missingReferences:");
}

id objc_msgSend_commitTransactionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitTransactionWithError:");
}

id objc_msgSend_companionAssistantID(void *a1, const char *a2, ...)
{
  return _[a1 companionAssistantID];
}

id objc_msgSend_companionAssistantId(void *a1, const char *a2, ...)
{
  return _[a1 companionAssistantId];
}

id objc_msgSend_companionIDSIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 companionIDSIdentifier];
}

id objc_msgSend_companionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 companionIdentifier];
}

id objc_msgSend_companionPeer(void *a1, const char *a2, ...)
{
  return _[a1 companionPeer];
}

id objc_msgSend_companionPeerToPeerHandoffCapable(void *a1, const char *a2, ...)
{
  return _[a1 companionPeerToPeerHandoffCapable];
}

id objc_msgSend_companionSpeechID(void *a1, const char *a2, ...)
{
  return _[a1 companionSpeechID];
}

id objc_msgSend_companionSyncMetadata(void *a1, const char *a2, ...)
{
  return _[a1 companionSyncMetadata];
}

id objc_msgSend_companionSyncMetadataCapable(void *a1, const char *a2, ...)
{
  return _[a1 companionSyncMetadataCapable];
}

id objc_msgSend_companyName(void *a1, const char *a2, ...)
{
  return _[a1 companyName];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compatibilityVersion(void *a1, const char *a2, ...)
{
  return _[a1 compatibilityVersion];
}

id objc_msgSend_completeCurrentRequestWithSuccess_forReason_shouldEmitInstrumentationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeCurrentRequestWithSuccess:forReason:shouldEmitInstrumentationEvent:");
}

id objc_msgSend_completeRequestWithSuccess_forReason_shouldEmitInstrumentationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeRequestWithSuccess:forReason:shouldEmitInstrumentationEvent:");
}

id objc_msgSend_completeWithHandshakeResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeWithHandshakeResponse:error:");
}

id objc_msgSend_completedTurnId(void *a1, const char *a2, ...)
{
  return _[a1 completedTurnId];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 completionDialogPhase];
}

id objc_msgSend_component(void *a1, const char *a2, ...)
{
  return _[a1 component];
}

id objc_msgSend_componentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 componentIdentifier];
}

id objc_msgSend_componentName(void *a1, const char *a2, ...)
{
  return _[a1 componentName];
}

id objc_msgSend_componentVersion(void *a1, const char *a2, ...)
{
  return _[a1 componentVersion];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_conditionType(void *a1, const char *a2, ...)
{
  return _[a1 conditionType];
}

id objc_msgSend_confidence(void *a1, const char *a2, ...)
{
  return _[a1 confidence];
}

id objc_msgSend_confidenceScore(void *a1, const char *a2, ...)
{
  return _[a1 confidenceScore];
}

id objc_msgSend_confidenceScores(void *a1, const char *a2, ...)
{
  return _[a1 confidenceScores];
}

id objc_msgSend_confidenceScoresForMultiUserTestingExpectedSpeakerSharedUserID_expectedSpeakerConfidenceScore_nonspeakerConfidenceScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confidenceScoresForMultiUserTestingExpectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:");
}

id objc_msgSend_configOverrides(void *a1, const char *a2, ...)
{
  return _[a1 configOverrides];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_configurationForInvocationFeedback(void *a1, const char *a2, ...)
{
  return _[a1 configurationForInvocationFeedback];
}

id objc_msgSend_configurationForSiriVOXSounds(void *a1, const char *a2, ...)
{
  return _[a1 configurationForSiriVOXSounds];
}

id objc_msgSend_configurationForSiriVOXTapToSiriBehavior(void *a1, const char *a2, ...)
{
  return _[a1 configurationForSiriVOXTapToSiriBehavior];
}

id objc_msgSend_configurationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 configurationIdentifier];
}

id objc_msgSend_configurationURL(void *a1, const char *a2, ...)
{
  return _[a1 configurationURL];
}

id objc_msgSend_configurationVersion(void *a1, const char *a2, ...)
{
  return _[a1 configurationVersion];
}

id objc_msgSend_configureForDaemon(void *a1, const char *a2, ...)
{
  return _[a1 configureForDaemon];
}

id objc_msgSend_configuredName(void *a1, const char *a2, ...)
{
  return _[a1 configuredName];
}

id objc_msgSend_confirmed(void *a1, const char *a2, ...)
{
  return _[a1 confirmed];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectPeripheral_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectPeripheral:options:");
}

id objc_msgSend_connectedAudioDevice(void *a1, const char *a2, ...)
{
  return _[a1 connectedAudioDevice];
}

id objc_msgSend_connectedBTProductID(void *a1, const char *a2, ...)
{
  return _[a1 connectedBTProductID];
}

id objc_msgSend_connectedSubflowCount(void *a1, const char *a2, ...)
{
  return _[a1 connectedSubflowCount];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connectionConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionConnected:");
}

id objc_msgSend_connectionDelay(void *a1, const char *a2, ...)
{
  return _[a1 connectionDelay];
}

id objc_msgSend_connectionDidDrop(void *a1, const char *a2, ...)
{
  return _[a1 connectionDidDrop];
}

id objc_msgSend_connectionDidFail(void *a1, const char *a2, ...)
{
  return _[a1 connectionDidFail];
}

id objc_msgSend_connectionDisconnected(void *a1, const char *a2, ...)
{
  return _[a1 connectionDisconnected];
}

id objc_msgSend_connectionDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDisconnected:");
}

id objc_msgSend_connectionEdgeID(void *a1, const char *a2, ...)
{
  return _[a1 connectionEdgeID];
}

id objc_msgSend_connectionEdgeIDName(void *a1, const char *a2, ...)
{
  return _[a1 connectionEdgeIDName];
}

id objc_msgSend_connectionEdgeType(void *a1, const char *a2, ...)
{
  return _[a1 connectionEdgeType];
}

id objc_msgSend_connectionEstablishmentTimeMsec(void *a1, const char *a2, ...)
{
  return _[a1 connectionEstablishmentTimeMsec];
}

id objc_msgSend_connectionFallbackReason(void *a1, const char *a2, ...)
{
  return _[a1 connectionFallbackReason];
}

id objc_msgSend_connectionId(void *a1, const char *a2, ...)
{
  return _[a1 connectionId];
}

id objc_msgSend_connectionInfo(void *a1, const char *a2, ...)
{
  return _[a1 connectionInfo];
}

id objc_msgSend_connectionInterface(void *a1, const char *a2, ...)
{
  return _[a1 connectionInterface];
}

id objc_msgSend_connectionInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 connectionInterrupted];
}

id objc_msgSend_connectionInterrupted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionInterrupted:");
}

id objc_msgSend_connectionInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 connectionInvalidated];
}

id objc_msgSend_connectionMethod(void *a1, const char *a2, ...)
{
  return _[a1 connectionMethod];
}

id objc_msgSend_connectionMethodHistory(void *a1, const char *a2, ...)
{
  return _[a1 connectionMethodHistory];
}

id objc_msgSend_connectionMethodName(void *a1, const char *a2, ...)
{
  return _[a1 connectionMethodName];
}

id objc_msgSend_connectionMode(void *a1, const char *a2, ...)
{
  return _[a1 connectionMode];
}

id objc_msgSend_connectionOptions(void *a1, const char *a2, ...)
{
  return _[a1 connectionOptions];
}

id objc_msgSend_connectionPolicy(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicy];
}

id objc_msgSend_connectionPolicyDate(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyDate];
}

id objc_msgSend_connectionPolicyExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyExpirationDate];
}

id objc_msgSend_connectionPolicyFailureCount(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyFailureCount];
}

id objc_msgSend_connectionPolicyFirstFailureDate(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyFirstFailureDate];
}

id objc_msgSend_connectionPolicyHostname(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyHostname];
}

id objc_msgSend_connectionPolicyStatus(void *a1, const char *a2, ...)
{
  return _[a1 connectionPolicyStatus];
}

id objc_msgSend_connectionProvider_receivedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionProvider:receivedError:");
}

id objc_msgSend_connectionProxy(void *a1, const char *a2, ...)
{
  return _[a1 connectionProxy];
}

id objc_msgSend_connectionSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 connectionSnapshot];
}

id objc_msgSend_connectionStartTimeToConnectionEstablishmentTimeMsec(void *a1, const char *a2, ...)
{
  return _[a1 connectionStartTimeToConnectionEstablishmentTimeMsec];
}

id objc_msgSend_connectionStartTimeToDNSResolutionTimeMsec(void *a1, const char *a2, ...)
{
  return _[a1 connectionStartTimeToDNSResolutionTimeMsec];
}

id objc_msgSend_connectionStartTimeToTLSHandshakeTimeMsec(void *a1, const char *a2, ...)
{
  return _[a1 connectionStartTimeToTLSHandshakeTimeMsec];
}

id objc_msgSend_connectionType(void *a1, const char *a2, ...)
{
  return _[a1 connectionType];
}

id objc_msgSend_connectionURL(void *a1, const char *a2, ...)
{
  return _[a1 connectionURL];
}

id objc_msgSend_contactHandlesForPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactHandlesForPerson:");
}

id objc_msgSend_contactId(void *a1, const char *a2, ...)
{
  return _[a1 contactId];
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifier];
}

id objc_msgSend_contactName(void *a1, const char *a2, ...)
{
  return _[a1 contactName];
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _[a1 contactStore];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _[a1 container];
}

id objc_msgSend_containerID(void *a1, const char *a2, ...)
{
  return _[a1 containerID];
}

id objc_msgSend_containerIDs(void *a1, const char *a2, ...)
{
  return _[a1 containerIDs];
}

id objc_msgSend_containerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 containerIdentifier];
}

id objc_msgSend_containerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerWithIdentifier:");
}

id objc_msgSend_containsIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsIndex:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentAttributeSet(void *a1, const char *a2, ...)
{
  return _[a1 contentAttributeSet];
}

id objc_msgSend_contentPreviewSetting(void *a1, const char *a2, ...)
{
  return _[a1 contentPreviewSetting];
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _[a1 contentType];
}

id objc_msgSend_contentTypeMatchesNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentTypeMatchesNotificationType:");
}

id objc_msgSend_contentVersion(void *a1, const char *a2, ...)
{
  return _[a1 contentVersion];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextCollectorChangedToDevicesWithIdentifiers_localDeviceIsCollector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:");
}

id objc_msgSend_contextCollectorSource(void *a1, const char *a2, ...)
{
  return _[a1 contextCollectorSource];
}

id objc_msgSend_contextData(void *a1, const char *a2, ...)
{
  return _[a1 contextData];
}

id objc_msgSend_contextDataType(void *a1, const char *a2, ...)
{
  return _[a1 contextDataType];
}

id objc_msgSend_contextDictionary(void *a1, const char *a2, ...)
{
  return _[a1 contextDictionary];
}

id objc_msgSend_contextFetchDelay(void *a1, const char *a2, ...)
{
  return _[a1 contextFetchDelay];
}

id objc_msgSend_contextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contextIdentifier];
}

id objc_msgSend_contextManagerDidUpdateBackgroundContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextManagerDidUpdateBackgroundContext:");
}

id objc_msgSend_contextMetadataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextMetadataForKey:");
}

id objc_msgSend_continueShareAcceptanceOperations(void *a1, const char *a2, ...)
{
  return _[a1 continueShareAcceptanceOperations];
}

id objc_msgSend_continueSync(void *a1, const char *a2, ...)
{
  return _[a1 continueSync];
}

id objc_msgSend_continuousListening(void *a1, const char *a2, ...)
{
  return _[a1 continuousListening];
}

id objc_msgSend_controlCenterLockRestrictedCommands(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterLockRestrictedCommands];
}

id objc_msgSend_controlFlags(void *a1, const char *a2, ...)
{
  return _[a1 controlFlags];
}

id objc_msgSend_controlGroup(void *a1, const char *a2, ...)
{
  return _[a1 controlGroup];
}

id objc_msgSend_controllerInfoAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerInfoAndReturnError:");
}

id objc_msgSend_conversationDetectCapability(void *a1, const char *a2, ...)
{
  return _[a1 conversationDetectCapability];
}

id objc_msgSend_conversationDetectConfig(void *a1, const char *a2, ...)
{
  return _[a1 conversationDetectConfig];
}

id objc_msgSend_convertCountryCodeToSchemaCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertCountryCodeToSchemaCountryCode:");
}

id objc_msgSend_convertLanguageCodeToSchemaLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertLanguageCodeToSchemaLocale:");
}

id objc_msgSend_convertToALACWithPath_withSamplingRateOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertToALACWithPath:withSamplingRateOf:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _[a1 coordinate];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_coreBluetoothDevice(void *a1, const char *a2, ...)
{
  return _[a1 coreBluetoothDevice];
}

id objc_msgSend_correctedSpeech(void *a1, const char *a2, ...)
{
  return _[a1 correctedSpeech];
}

id objc_msgSend_correctedSpeechContext(void *a1, const char *a2, ...)
{
  return _[a1 correctedSpeechContext];
}

id objc_msgSend_correctedText(void *a1, const char *a2, ...)
{
  return _[a1 correctedText];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_countQueuedEventRecordsForDeliveryStream_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countQueuedEventRecordsForDeliveryStream:withCompletion:");
}

id objc_msgSend_countQueuedEventRecordsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countQueuedEventRecordsWithCompletion:");
}

id objc_msgSend_countUsersWithLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 countUsersWithLocationServicesEnabled];
}

id objc_msgSend_countUsersWithMatchingSiriLanguage(void *a1, const char *a2, ...)
{
  return _[a1 countUsersWithMatchingSiriLanguage];
}

id objc_msgSend_countUsersWithPersonalRequestsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 countUsersWithPersonalRequestsEnabled];
}

id objc_msgSend_countUsersWithSiriCloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 countUsersWithSiriCloudSyncEnabled];
}

id objc_msgSend_countValuesInTableWithName_columnName_behavior_indexedBy_criterion_range_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countValuesInTableWithName:columnName:behavior:indexedBy:criterion:range:error:");
}

id objc_msgSend_countVoiceProfiles(void *a1, const char *a2, ...)
{
  return _[a1 countVoiceProfiles];
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _[a1 countryCode];
}

id objc_msgSend_course(void *a1, const char *a2, ...)
{
  return _[a1 course];
}

id objc_msgSend_createAccessorySettingsController(void *a1, const char *a2, ...)
{
  return _[a1 createAccessorySettingsController];
}

id objc_msgSend_createCurrentLocationSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 createCurrentLocationSnapshot];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDraft_forProcessNamed_withDisplayReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDraft:forProcessNamed:withDisplayReason:completionHandler:");
}

id objc_msgSend_createDraft_withDisplayReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDraft:withDisplayReason:completionHandler:");
}

id objc_msgSend_createExperimentContextEventWithBucketId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createExperimentContextEventWithBucketId:");
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileAtPath:contents:attributes:");
}

id objc_msgSend_createIndex_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIndex:error:");
}

id objc_msgSend_createIndicesForTableInDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createIndicesForTableInDatabase:");
}

id objc_msgSend_createLocationInUseAssertion(void *a1, const char *a2, ...)
{
  return _[a1 createLocationInUseAssertion];
}

id objc_msgSend_createMirroredZonesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createMirroredZonesWithCompletion:");
}

id objc_msgSend_createModelWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createModelWithType:completion:");
}

id objc_msgSend_createMultiuserSettingsMessenger(void *a1, const char *a2, ...)
{
  return _[a1 createMultiuserSettingsMessenger];
}

id objc_msgSend_createOnDeviceDigestEvent(void *a1, const char *a2, ...)
{
  return _[a1 createOnDeviceDigestEvent];
}

id objc_msgSend_createResponse(void *a1, const char *a2, ...)
{
  return _[a1 createResponse];
}

id objc_msgSend_createResponseWithReplyCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createResponseWithReplyCommand:");
}

id objc_msgSend_createResponseWithSettingChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createResponseWithSettingChanges:");
}

id objc_msgSend_createResponseWithTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createResponseWithTimer:");
}

id objc_msgSend_createSamplingDirectory(void *a1, const char *a2, ...)
{
  return _[a1 createSamplingDirectory];
}

id objc_msgSend_createSetRequestOrigin(void *a1, const char *a2, ...)
{
  return _[a1 createSetRequestOrigin];
}

id objc_msgSend_createSpeechProfileWithLanguage_modelOverridePath_JSONData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:");
}

id objc_msgSend_createSymbolicLinkAtPath_withDestinationPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSymbolicLinkAtPath:withDestinationPath:error:");
}

id objc_msgSend_createTable_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTable:error:");
}

id objc_msgSend_createXPCConnectionWithMachServiceName_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createXPCConnectionWithMachServiceName:options:");
}

id objc_msgSend_createXPCListenerForMachService_targetQueue_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createXPCListenerForMachService:targetQueue:flags:");
}

id objc_msgSend_createXPCListenerWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createXPCListenerWithMachServiceName:");
}

id objc_msgSend_createdOn(void *a1, const char *a2, ...)
{
  return _[a1 createdOn];
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return _[a1 creationDate];
}

id objc_msgSend_criteria(void *a1, const char *a2, ...)
{
  return _[a1 criteria];
}

id objc_msgSend_current(void *a1, const char *a2, ...)
{
  return _[a1 current];
}

id objc_msgSend_currentAnnouncementRoute(void *a1, const char *a2, ...)
{
  return _[a1 currentAnnouncementRoute];
}

id objc_msgSend_currentAudioAndVideoCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentAudioAndVideoCalls];
}

id objc_msgSend_currentAudioRoute(void *a1, const char *a2, ...)
{
  return _[a1 currentAudioRoute];
}

id objc_msgSend_currentAudioRouteDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAudioRouteDidChange:");
}

id objc_msgSend_currentAuthorizationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAuthorizationStyle:");
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentConnectionPreCachedMetrics(void *a1, const char *a2, ...)
{
  return _[a1 currentConnectionPreCachedMetrics];
}

id objc_msgSend_currentContext(void *a1, const char *a2, ...)
{
  return _[a1 currentContext];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentEphemeralSeed(void *a1, const char *a2, ...)
{
  return _[a1 currentEphemeralSeed];
}

id objc_msgSend_currentEventStreamUID(void *a1, const char *a2, ...)
{
  return _[a1 currentEventStreamUID];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentHome(void *a1, const char *a2, ...)
{
  return _[a1 currentHome];
}

id objc_msgSend_currentHomeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentHomeIdentifier];
}

id objc_msgSend_currentHomeInfo(void *a1, const char *a2, ...)
{
  return _[a1 currentHomeInfo];
}

id objc_msgSend_currentHomes(void *a1, const char *a2, ...)
{
  return _[a1 currentHomes];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentLocationWithAccuracy_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocationWithAccuracy:timeout:completion:");
}

id objc_msgSend_currentLocationWithFetchRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocationWithFetchRequest:completion:");
}

id objc_msgSend_currentNavigationState(void *a1, const char *a2, ...)
{
  return _[a1 currentNavigationState];
}

id objc_msgSend_currentNetworkActivityTokenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNetworkActivityTokenWithCompletion:");
}

id objc_msgSend_currentNotificationSettingsCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationSettingsCenter];
}

id objc_msgSend_currentOwnerSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 currentOwnerSharedUserID];
}

id objc_msgSend_currentPowerPolicyWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPowerPolicyWithError:");
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _[a1 currentRequest];
}

id objc_msgSend_currentRequestCommand(void *a1, const char *a2, ...)
{
  return _[a1 currentRequestCommand];
}

id objc_msgSend_currentRequestId(void *a1, const char *a2, ...)
{
  return _[a1 currentRequestId];
}

id objc_msgSend_currentRetryInterval(void *a1, const char *a2, ...)
{
  return _[a1 currentRetryInterval];
}

id objc_msgSend_currentRoute(void *a1, const char *a2, ...)
{
  return _[a1 currentRoute];
}

id objc_msgSend_currentSNConnectionPreCachedMetrics(void *a1, const char *a2, ...)
{
  return _[a1 currentSNConnectionPreCachedMetrics];
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _[a1 currentSession];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentSyncDatabase(void *a1, const char *a2, ...)
{
  return _[a1 currentSyncDatabase];
}

id objc_msgSend_currentToken(void *a1, const char *a2, ...)
{
  return _[a1 currentToken];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_currentUserSeed(void *a1, const char *a2, ...)
{
  return _[a1 currentUserSeed];
}

id objc_msgSend_currentUserSeedExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 currentUserSeedExpirationDate];
}

id objc_msgSend_currentVTSatScore(void *a1, const char *a2, ...)
{
  return _[a1 currentVTSatScore];
}

id objc_msgSend_currentlyRoutedHeadphonesBTAddress(void *a1, const char *a2, ...)
{
  return _[a1 currentlyRoutedHeadphonesBTAddress];
}

id objc_msgSend_currentlyRoutedHeadphonesProductID(void *a1, const char *a2, ...)
{
  return _[a1 currentlyRoutedHeadphonesProductID];
}

id objc_msgSend_customVocabSyncInfo(void *a1, const char *a2, ...)
{
  return _[a1 customVocabSyncInfo];
}

id objc_msgSend_cycling(void *a1, const char *a2, ...)
{
  return _[a1 cycling];
}

id objc_msgSend_daemonType(void *a1, const char *a2, ...)
{
  return _[a1 daemonType];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataAnchor(void *a1, const char *a2, ...)
{
  return _[a1 dataAnchor];
}

id objc_msgSend_dataDetectorWithTypes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataDetectorWithTypes:error:");
}

id objc_msgSend_dataSharingOptInStatus(void *a1, const char *a2, ...)
{
  return _[a1 dataSharingOptInStatus];
}

id objc_msgSend_dataStore(void *a1, const char *a2, ...)
{
  return _[a1 dataStore];
}

id objc_msgSend_dataStoreIsOnSharedDatabase(void *a1, const char *a2, ...)
{
  return _[a1 dataStoreIsOnSharedDatabase];
}

id objc_msgSend_dataStoreShouldMirrorData(void *a1, const char *a2, ...)
{
  return _[a1 dataStoreShouldMirrorData];
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataTaskWithURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithURL:completionHandler:");
}

id objc_msgSend_dataType(void *a1, const char *a2, ...)
{
  return _[a1 dataType];
}

id objc_msgSend_dataTypes(void *a1, const char *a2, ...)
{
  return _[a1 dataTypes];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithCapacity:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_databaseScope(void *a1, const char *a2, ...)
{
  return _[a1 databaseScope];
}

id objc_msgSend_databaseSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 databaseSyncEnabled];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_date_matchesComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date:matchesComponents:");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingUnit:value:toDate:options:");
}

id objc_msgSend_dateByAddingWeeks_inCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingWeeks:inCalendar:");
}

id objc_msgSend_dateWhenVoiceTriggerRePrompted(void *a1, const char *a2, ...)
{
  return _[a1 dateWhenVoiceTriggerRePrompted];
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_daysOfWeek(void *a1, const char *a2, ...)
{
  return _[a1 daysOfWeek];
}

id objc_msgSend_daysWithTwoAssistantSpeechRequestsPerWeek(void *a1, const char *a2, ...)
{
  return _[a1 daysWithTwoAssistantSpeechRequestsPerWeek];
}

id objc_msgSend_deRegisterWithWirelessCoexManager(void *a1, const char *a2, ...)
{
  return _[a1 deRegisterWithWirelessCoexManager];
}

id objc_msgSend_deactivateAudioSessionIfNoActiveAssertions(void *a1, const char *a2, ...)
{
  return _[a1 deactivateAudioSessionIfNoActiveAssertions];
}

id objc_msgSend_deactivateCurrentAnnouncementRequestForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateCurrentAnnouncementRequestForReason:");
}

id objc_msgSend_deactivateForReason_options_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateForReason:options:context:completion:");
}

id objc_msgSend_deactivateNotificationAnnouncementRequestForReason_notification_sourceAppId_platform_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateNotificationAnnouncementRequestForReason:notification:sourceAppId:platform:completion:");
}

id objc_msgSend_deactivateWorkoutReminderAnnouncementWithId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateWorkoutReminderAnnouncementWithId:completion:");
}

id objc_msgSend_deactivateWorkoutReminderAnnouncementWithPredictionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateWorkoutReminderAnnouncementWithPredictionId:completion:");
}

id objc_msgSend_debugConnectionSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 debugConnectionSnapshot];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_debugNetworkInterfacesFromSiriCoreConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugNetworkInterfacesFromSiriCoreConnectionMetrics:");
}

id objc_msgSend_debugSessionConnectionNetworkFromSiriCoreConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugSessionConnectionNetworkFromSiriCoreConnectionMetrics:");
}

id objc_msgSend_declineDismissSkipConfig(void *a1, const char *a2, ...)
{
  return _[a1 declineDismissSkipConfig];
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeFromNotifyState_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeFromNotifyState:withCompletion:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_defaultCStringEncoding(void *a1, const char *a2, ...)
{
  return _[a1 defaultCStringEncoding];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultColumnConstraintWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultColumnConstraintWithName:value:");
}

id objc_msgSend_defaultContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultContext];
}

id objc_msgSend_defaultGenderForOutputVoiceLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultGenderForOutputVoiceLanguageCode:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMessageStream(void *a1, const char *a2, ...)
{
  return _[a1 defaultMessageStream];
}

id objc_msgSend_defaultObserver(void *a1, const char *a2, ...)
{
  return _[a1 defaultObserver];
}

id objc_msgSend_defaultProvider(void *a1, const char *a2, ...)
{
  return _[a1 defaultProvider];
}

id objc_msgSend_defaultService(void *a1, const char *a2, ...)
{
  return _[a1 defaultService];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultSynchedKnowledgeStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultSynchedKnowledgeStore];
}

id objc_msgSend_defaultUserId(void *a1, const char *a2, ...)
{
  return _[a1 defaultUserId];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_deferAudioSessionDeactivationForAnnouncementRequest(void *a1, const char *a2, ...)
{
  return _[a1 deferAudioSessionDeactivationForAnnouncementRequest];
}

id objc_msgSend_defrost(void *a1, const char *a2, ...)
{
  return _[a1 defrost];
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return _[a1 delay];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateDidHandleCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegateDidHandleCommand:");
}

id objc_msgSend_delegateDidHandleCommand_didRecognizeSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegateDidHandleCommand:didRecognizeSpeech:");
}

id objc_msgSend_deleteAccountWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAccountWithIdentifier:");
}

id objc_msgSend_deleteAlarmsWithIdentifiers_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAlarmsWithIdentifiers:completionHandler:");
}

id objc_msgSend_deleteAll(void *a1, const char *a2, ...)
{
  return _[a1 deleteAll];
}

id objc_msgSend_deleteAllDESRecordsForDictationPersonalization(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllDESRecordsForDictationPersonalization];
}

id objc_msgSend_deleteAllMetrics(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllMetrics];
}

id objc_msgSend_deleteAllRPISampledData(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllRPISampledData];
}

id objc_msgSend_deleteAllSamplingData(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllSamplingData];
}

id objc_msgSend_deleteAllUserVocabularyFromAllAppsAsync(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllUserVocabularyFromAllAppsAsync];
}

id objc_msgSend_deleteEventRecordsFromStartTime_toEndTime_eventStreamUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEventRecordsFromStartTime:toEndTime:eventStreamUID:completion:");
}

id objc_msgSend_deleteEventRecordsWithRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEventRecordsWithRecordIDs:completion:");
}

id objc_msgSend_deleteEverything(void *a1, const char *a2, ...)
{
  return _[a1 deleteEverything];
}

id objc_msgSend_deleteFromTableWithName_indexedBy_criterion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteFromTableWithName:indexedBy:criterion:error:");
}

id objc_msgSend_deleteItemAtFilePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItemAtFilePath:");
}

id objc_msgSend_deleteLegacyMetricsAffectedBySensitiveConditionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteLegacyMetricsAffectedBySensitiveConditionsWithCompletion:");
}

id objc_msgSend_deleteMetricsWithOfflineIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteMetricsWithOfflineIdentifier:");
}

id objc_msgSend_deleteRecordFromSharedStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRecordFromSharedStore:completion:");
}

id objc_msgSend_deleteSavedSnapshots(void *a1, const char *a2, ...)
{
  return _[a1 deleteSavedSnapshots];
}

id objc_msgSend_deleteShareForUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteShareForUser:completion:");
}

id objc_msgSend_deleteShareForUser_markForReinvitation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteShareForUser:markForReinvitation:completion:");
}

id objc_msgSend_deleteUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteUserData:");
}

id objc_msgSend_deleteZoneShare_markForReinvitation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteZoneShare:markForReinvitation:completion:");
}

id objc_msgSend_deleteZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteZones:");
}

id objc_msgSend_deletedItemUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 deletedItemUUIDs];
}

id objc_msgSend_deletionCriterionForCKRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletionCriterionForCKRecordIDs:");
}

id objc_msgSend_deliverLogViewerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverLogViewerIdentifier:");
}

id objc_msgSend_deliverSummary_forNotification_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverSummary:forNotification:completion:");
}

id objc_msgSend_deliverSummary_forNotificationWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverSummary:forNotificationWithIdentifier:completion:");
}

id objc_msgSend_deliverWrappedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverWrappedEvent:");
}

id objc_msgSend_deliverWrappedEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverWrappedEvents:");
}

id objc_msgSend_deliveryDate(void *a1, const char *a2, ...)
{
  return _[a1 deliveryDate];
}

id objc_msgSend_deliveryStream(void *a1, const char *a2, ...)
{
  return _[a1 deliveryStream];
}

id objc_msgSend_departureDate(void *a1, const char *a2, ...)
{
  return _[a1 departureDate];
}

id objc_msgSend_deploymentGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deploymentGroupIdentifier];
}

id objc_msgSend_deploymentId(void *a1, const char *a2, ...)
{
  return _[a1 deploymentId];
}

id objc_msgSend_dequeueBlocksWaitingForMyriadDecision(void *a1, const char *a2, ...)
{
  return _[a1 dequeueBlocksWaitingForMyriadDecision];
}

id objc_msgSend_dequeueDelayedCommandsAndSend_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueDelayedCommandsAndSend:completion:");
}

id objc_msgSend_dequeueObject(void *a1, const char *a2, ...)
{
  return _[a1 dequeueObject];
}

id objc_msgSend_dequeueResultObjects(void *a1, const char *a2, ...)
{
  return _[a1 dequeueResultObjects];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptorsForRequiredKeysForConversionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorsForRequiredKeysForConversionType:");
}

id objc_msgSend_deselectedCalendarSyncHashes(void *a1, const char *a2, ...)
{
  return _[a1 deselectedCalendarSyncHashes];
}

id objc_msgSend_desiredAccuracy(void *a1, const char *a2, ...)
{
  return _[a1 desiredAccuracy];
}

id objc_msgSend_desiredCLAccuracy(void *a1, const char *a2, ...)
{
  return _[a1 desiredCLAccuracy];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationURIs(void *a1, const char *a2, ...)
{
  return _[a1 destinationURIs];
}

id objc_msgSend_destroyActiveAccount(void *a1, const char *a2, ...)
{
  return _[a1 destroyActiveAccount];
}

id objc_msgSend_detailType(void *a1, const char *a2, ...)
{
  return _[a1 detailType];
}

id objc_msgSend_detailedInstallationStatusForLanguagesWithAssetType_subscriberId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailedInstallationStatusForLanguagesWithAssetType:subscriberId:");
}

id objc_msgSend_detectUtterances(void *a1, const char *a2, ...)
{
  return _[a1 detectUtterances];
}

id objc_msgSend_detectionTargets(void *a1, const char *a2, ...)
{
  return _[a1 detectionTargets];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 deviceAdjustment];
}

id objc_msgSend_deviceAggregationId(void *a1, const char *a2, ...)
{
  return _[a1 deviceAggregationId];
}

id objc_msgSend_deviceAggregationIdWithDeviceId_forUserAggregationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceAggregationIdWithDeviceId:forUserAggregationId:");
}

id objc_msgSend_deviceAuthSession(void *a1, const char *a2, ...)
{
  return _[a1 deviceAuthSession];
}

id objc_msgSend_deviceBlackedOut(void *a1, const char *a2, ...)
{
  return _[a1 deviceBlackedOut];
}

id objc_msgSend_deviceCircleManager(void *a1, const char *a2, ...)
{
  return _[a1 deviceCircleManager];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _[a1 deviceClass];
}

id objc_msgSend_deviceClassFromProductTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceClassFromProductTypeString:");
}

id objc_msgSend_deviceContextConnection_donateSerializedContextMapByPrivacyClass_withMetadataMap_forType_pushToRemote_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceContextConnection:donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:");
}

id objc_msgSend_deviceContextConnection_getLocalDeviceContextWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceContextConnection:getLocalDeviceContextWithCompletion:");
}

id objc_msgSend_deviceContextConnectionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceContextConnectionDidInvalidate:");
}

id objc_msgSend_deviceContextForDeviceContextKeys_excludingMandatoryKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceContextForDeviceContextKeys:excludingMandatoryKeys:");
}

id objc_msgSend_deviceCount(void *a1, const char *a2, ...)
{
  return _[a1 deviceCount];
}

id objc_msgSend_deviceDelay(void *a1, const char *a2, ...)
{
  return _[a1 deviceDelay];
}

id objc_msgSend_deviceFixedContext(void *a1, const char *a2, ...)
{
  return _[a1 deviceFixedContext];
}

id objc_msgSend_deviceFlags(void *a1, const char *a2, ...)
{
  return _[a1 deviceFlags];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForFromID:");
}

id objc_msgSend_deviceHasAtvOrHomepodInHome(void *a1, const char *a2, ...)
{
  return _[a1 deviceHasAtvOrHomepodInHome];
}

id objc_msgSend_deviceHasPairedWatches(void *a1, const char *a2, ...)
{
  return _[a1 deviceHasPairedWatches];
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceIDPair(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDPair];
}

id objc_msgSend_deviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDs];
}

id objc_msgSend_deviceId(void *a1, const char *a2, ...)
{
  return _[a1 deviceId];
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deviceIdentifier];
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfo];
}

id objc_msgSend_deviceIsNearby(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsNearby];
}

id objc_msgSend_deviceIsNearby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsNearby:");
}

id objc_msgSend_deviceMotion(void *a1, const char *a2, ...)
{
  return _[a1 deviceMotion];
}

id objc_msgSend_deviceOwner(void *a1, const char *a2, ...)
{
  return _[a1 deviceOwner];
}

id objc_msgSend_deviceRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 deviceRestrictions];
}

id objc_msgSend_deviceRingerSwitchState(void *a1, const char *a2, ...)
{
  return _[a1 deviceRingerSwitchState];
}

id objc_msgSend_deviceSegmentsReported(void *a1, const char *a2, ...)
{
  return _[a1 deviceSegmentsReported];
}

id objc_msgSend_deviceSetupFlowBeginDate(void *a1, const char *a2, ...)
{
  return _[a1 deviceSetupFlowBeginDate];
}

id objc_msgSend_deviceSetupFlowEndDate(void *a1, const char *a2, ...)
{
  return _[a1 deviceSetupFlowEndDate];
}

id objc_msgSend_deviceSupportsOnDeviceDictation(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsOnDeviceDictation];
}

id objc_msgSend_deviceSupportsSiriUOD(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsSiriUOD];
}

id objc_msgSend_deviceSyncDataProviderDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSyncDataProviderDidUpdate:");
}

id objc_msgSend_deviceSyncMessageService_didFoundDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSyncMessageService:didFoundDeviceWithIdentifier:");
}

id objc_msgSend_deviceSyncMessageService_didLostDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSyncMessageService:didLostDeviceWithIdentifier:");
}

id objc_msgSend_deviceSyncMessageService_didReceiveMessage_fromDeviceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:");
}

id objc_msgSend_deviceTrumpDelay(void *a1, const char *a2, ...)
{
  return _[a1 deviceTrumpDelay];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceType:");
}

id objc_msgSend_deviceUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceUID];
}

id objc_msgSend_deviceUnlockSignalEnabled(void *a1, const char *a2, ...)
{
  return _[a1 deviceUnlockSignalEnabled];
}

id objc_msgSend_deviceUsesCompactVoiceTrigger(void *a1, const char *a2, ...)
{
  return _[a1 deviceUsesCompactVoiceTrigger];
}

id objc_msgSend_deviceVTEndtimeDistanceThreshold(void *a1, const char *a2, ...)
{
  return _[a1 deviceVTEndtimeDistanceThreshold];
}

id objc_msgSend_deviceWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithAddress:");
}

id objc_msgSend_deviceWithRecordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithRecordingInfo:");
}

id objc_msgSend_deviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithUID:");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_diagnosticActions(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticActions];
}

id objc_msgSend_diagnosticConnectionType(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticConnectionType];
}

id objc_msgSend_dialogIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 dialogIdentifier];
}

id objc_msgSend_dictationAutoPunctuationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 dictationAutoPunctuationEnabled];
}

id objc_msgSend_dictationAutoPunctuationSupportedLocales(void *a1, const char *a2, ...)
{
  return _[a1 dictationAutoPunctuationSupportedLocales];
}

id objc_msgSend_dictationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 dictationEnabled];
}

id objc_msgSend_dictationInputOrigin(void *a1, const char *a2, ...)
{
  return _[a1 dictationInputOrigin];
}

id objc_msgSend_dictationIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 dictationIsEnabled];
}

id objc_msgSend_dictationLanguages(void *a1, const char *a2, ...)
{
  return _[a1 dictationLanguages];
}

id objc_msgSend_dictationOptions(void *a1, const char *a2, ...)
{
  return _[a1 dictationOptions];
}

id objc_msgSend_dictationRequestDidCompleteRecognitionWithError_secureOfflineOnlyRecognition_sessionUUID_statistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidCompleteRecognitionWithError:secureOfflineOnlyRecognition:sessionUUID:statistics:");
}

id objc_msgSend_dictationRequestDidRecognizeFinalResultCandidatePackage_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidRecognizeFinalResultCandidatePackage:sessionUUID:");
}

id objc_msgSend_dictationRequestDidRecognizePackage_nluResult_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidRecognizePackage:nluResult:sessionUUID:");
}

id objc_msgSend_dictationRequestDidRecognizePartialPackage_nluResult_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidRecognizePartialPackage:nluResult:sessionUUID:");
}

id objc_msgSend_dictationRequestDidRecognizeTokens_nluResult_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidRecognizeTokens:nluResult:sessionUUID:");
}

id objc_msgSend_dictationRequestDidRecognizeVoiceCommandCandidatePackage_nluResult_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationRequestDidRecognizeVoiceCommandCandidatePackage:nluResult:sessionUUID:");
}

id objc_msgSend_dictationSessionDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 dictationSessionDidComplete];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryArrayWithAceObjectArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryArrayWithAceObjectArray:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:error:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_dictionaryWithPlistData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithPlistData:");
}

id objc_msgSend_dictionaryWithValuesForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithValuesForKeys:");
}

id objc_msgSend_didEnd(void *a1, const char *a2, ...)
{
  return _[a1 didEnd];
}

id objc_msgSend_didObserveEvents_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didObserveEvents:completion:");
}

id objc_msgSend_directAction(void *a1, const char *a2, ...)
{
  return _[a1 directAction];
}

id objc_msgSend_directionsType(void *a1, const char *a2, ...)
{
  return _[a1 directionsType];
}

id objc_msgSend_disableAndDeleteCloudSyncWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableAndDeleteCloudSyncWithCompletion:");
}

id objc_msgSend_disableAssistantWhilePasscodeLocked(void *a1, const char *a2, ...)
{
  return _[a1 disableAssistantWhilePasscodeLocked];
}

id objc_msgSend_disableDESWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableDESWithCompletion:");
}

id objc_msgSend_disableInputAudioPowerUpdate(void *a1, const char *a2, ...)
{
  return _[a1 disableInputAudioPowerUpdate];
}

id objc_msgSend_disableSpeechPacketGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableSpeechPacketGeneration:");
}

id objc_msgSend_disableSyncAndDeleteCloudDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableSyncAndDeleteCloudDataWithCompletionHandler:");
}

id objc_msgSend_discardSiriEnrollmentForProfileId_forLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discardSiriEnrollmentForProfileId:forLanguageCode:");
}

id objc_msgSend_disconnectCall_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:withReason:");
}

id objc_msgSend_disconnectCurrentCallAndActivateHeld(void *a1, const char *a2, ...)
{
  return _[a1 disconnectCurrentCallAndActivateHeld];
}

id objc_msgSend_discoveredDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredDevices];
}

id objc_msgSend_discoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 discoveryMode];
}

id objc_msgSend_discoveryOptions(void *a1, const char *a2, ...)
{
  return _[a1 discoveryOptions];
}

id objc_msgSend_discoveryTypeForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryTypeForPeer:");
}

id objc_msgSend_dismissAlarmWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAlarmWithIdentifier:");
}

id objc_msgSend_dismissAlarmsWithURLs_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAlarmsWithURLs:completionHandler:");
}

id objc_msgSend_dismissAssistant(void *a1, const char *a2, ...)
{
  return _[a1 dismissAssistant];
}

id objc_msgSend_dismissAssistantWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAssistantWithReason:");
}

id objc_msgSend_dismissTCCDialogIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 dismissTCCDialogIfNeeded];
}

id objc_msgSend_dismissTCCDialogIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissTCCDialogIfNeeded:");
}

id objc_msgSend_dismissTimerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissTimerWithIdentifier:");
}

id objc_msgSend_dismissTimersWithURLs_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissTimersWithURLs:completionHandler:");
}

id objc_msgSend_dismissedAllVisibleAssistantUIForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissedAllVisibleAssistantUIForReason:");
}

id objc_msgSend_dismissedDate(void *a1, const char *a2, ...)
{
  return _[a1 dismissedDate];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 dispatchQueue];
}

id objc_msgSend_displayContext(void *a1, const char *a2, ...)
{
  return _[a1 displayContext];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _[a1 displayScale];
}

id objc_msgSend_displayText(void *a1, const char *a2, ...)
{
  return _[a1 displayText];
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceFromLocation:");
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_dnsResolutionTime(void *a1, const char *a2, ...)
{
  return _[a1 dnsResolutionTime];
}

id objc_msgSend_doClientWork_withTimeoutBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doClientWork:withTimeoutBlock:");
}

id objc_msgSend_doCommandForServicePath_className_infoDictionary_executionInfo_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doCommandForServicePath:className:infoDictionary:executionInfo:reply:");
}

id objc_msgSend_doDelayedClientWorkIfAny(void *a1, const char *a2, ...)
{
  return _[a1 doDelayedClientWorkIfAny];
}

id objc_msgSend_doSendPostProcessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doSendPostProcessing:");
}

id objc_msgSend_doSendPreProcessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doSendPreProcessing:");
}

id objc_msgSend_doesCompanionLinkHaveOtheriOSActiveDevicesApartFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesCompanionLinkHaveOtheriOSActiveDevicesApartFrom:");
}

id objc_msgSend_doesServerExist(void *a1, const char *a2, ...)
{
  return _[a1 doesServerExist];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainFromSADObject(void *a1, const char *a2, ...)
{
  return _[a1 domainFromSADObject];
}

id objc_msgSend_domainItem(void *a1, const char *a2, ...)
{
  return _[a1 domainItem];
}

id objc_msgSend_domainName(void *a1, const char *a2, ...)
{
  return _[a1 domainName];
}

id objc_msgSend_domainObjectCommitTypeForDomainNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainObjectCommitTypeForDomainNamed:");
}

id objc_msgSend_domainObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainObjectForKey:");
}

id objc_msgSend_domains(void *a1, const char *a2, ...)
{
  return _[a1 domains];
}

id objc_msgSend_donate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donate:error:");
}

id objc_msgSend_donateAnnounceNotificationsInCarPlaySettingsChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateAnnounceNotificationsInCarPlaySettingsChange:");
}

id objc_msgSend_donateCallHangUpAvailabilityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateCallHangUpAvailabilityChanged:");
}

id objc_msgSend_donateContext_withMetadata_pushToRemote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateContext:withMetadata:pushToRemote:");
}

id objc_msgSend_dormant(void *a1, const char *a2, ...)
{
  return _[a1 dormant];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadedVoicesMatching_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadedVoicesMatching:reply:");
}

id objc_msgSend_drainAuthorizationRequestCompletionsWithPossibleError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainAuthorizationRequestCompletionsWithPossibleError:");
}

id objc_msgSend_drainLocationFetchRequestsWithPossibleError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainLocationFetchRequestsWithPossibleError:");
}

id objc_msgSend_drainRequestsWithErrorCode_clearLocationCache_dismissDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drainRequestsWithErrorCode:clearLocationCache:dismissDialog:");
}

id objc_msgSend_dropIndexWithName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dropIndexWithName:error:");
}

id objc_msgSend_dryRun(void *a1, const char *a2, ...)
{
  return _[a1 dryRun];
}

id objc_msgSend_dspStatus(void *a1, const char *a2, ...)
{
  return _[a1 dspStatus];
}

id objc_msgSend_dumpAssistantState(void *a1, const char *a2, ...)
{
  return _[a1 dumpAssistantState];
}

id objc_msgSend_dumpAssistantStateChunk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dumpAssistantStateChunk:");
}

id objc_msgSend_duplicateBytesReceived(void *a1, const char *a2, ...)
{
  return _[a1 duplicateBytesReceived];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationSincePreviousTTSFinish(void *a1, const char *a2, ...)
{
  return _[a1 durationSincePreviousTTSFinish];
}

id objc_msgSend_durationSincePreviousTTSStart(void *a1, const char *a2, ...)
{
  return _[a1 durationSincePreviousTTSStart];
}

id objc_msgSend_eager(void *a1, const char *a2, ...)
{
  return _[a1 eager];
}

id objc_msgSend_eagerlyFetchAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 eagerlyFetchAssistantData];
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_effectiveDate(void *a1, const char *a2, ...)
{
  return _[a1 effectiveDate];
}

id objc_msgSend_effectiveFrom(void *a1, const char *a2, ...)
{
  return _[a1 effectiveFrom];
}

id objc_msgSend_effectiveGlobalAnnounceHeadphonesSetting(void *a1, const char *a2, ...)
{
  return _[a1 effectiveGlobalAnnounceHeadphonesSetting];
}

id objc_msgSend_effectiveGlobalAnnounceSetting(void *a1, const char *a2, ...)
{
  return _[a1 effectiveGlobalAnnounceSetting];
}

id objc_msgSend_effectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 effectiveIdentifier];
}

id objc_msgSend_effectiveRestrictedBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveRestrictedBoolValueForSetting:");
}

id objc_msgSend_effectiveSettingsChanged(void *a1, const char *a2, ...)
{
  return _[a1 effectiveSettingsChanged];
}

id objc_msgSend_effectiveValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveValueForSetting:");
}

id objc_msgSend_ekToken(void *a1, const char *a2, ...)
{
  return _[a1 ekToken];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _[a1 elements];
}

id objc_msgSend_eligibleAnnouncementRequestTypesChanged_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleAnnouncementRequestTypesChanged:onPlatform:");
}

id objc_msgSend_email(void *a1, const char *a2, ...)
{
  return _[a1 email];
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 emailAddresses];
}

id objc_msgSend_emails(void *a1, const char *a2, ...)
{
  return _[a1 emails];
}

id objc_msgSend_emitAnnouncementReceivedForAnnouncementRequest_nowPlayingMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitAnnouncementReceivedForAnnouncementRequest:nowPlayingMediaType:");
}

id objc_msgSend_emitCoreAnalyticsAnnounceNotificationApplicationEnablementEvents(void *a1, const char *a2, ...)
{
  return _[a1 emitCoreAnalyticsAnnounceNotificationApplicationEnablementEvents];
}

id objc_msgSend_emitCoreAnalyticsEventForAnnouncementRequest_completionReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitCoreAnalyticsEventForAnnouncementRequest:completionReason:");
}

id objc_msgSend_emitHomeMetricInvocationEvent(void *a1, const char *a2, ...)
{
  return _[a1 emitHomeMetricInvocationEvent];
}

id objc_msgSend_emitInstrumentationEventsForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitInstrumentationEventsForRequest:");
}

id objc_msgSend_emitMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitMessage:");
}

id objc_msgSend_emitMessage_isolatedStreamUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitMessage:isolatedStreamUUID:");
}

id objc_msgSend_emitMessage_timestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitMessage:timestamp:");
}

id objc_msgSend_emitRequestLinkForAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitRequestLinkForAnnouncementRequest:");
}

id objc_msgSend_emitTriggerFromCacheForCodePathID_requestID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitTriggerFromCacheForCodePathID:requestID:completionHandler:");
}

id objc_msgSend_emitUpdatedExperiments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUpdatedExperiments:");
}

id objc_msgSend_emitUserResponseSilenceForAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUserResponseSilenceForAnnouncementRequest:");
}

id objc_msgSend_emojiRecognition(void *a1, const char *a2, ...)
{
  return _[a1 emojiRecognition];
}

id objc_msgSend_enableOptimisticDNS(void *a1, const char *a2, ...)
{
  return _[a1 enableOptimisticDNS];
}

id objc_msgSend_enablePushNotifications(void *a1, const char *a2, ...)
{
  return _[a1 enablePushNotifications];
}

id objc_msgSend_enableTLS13(void *a1, const char *a2, ...)
{
  return _[a1 enableTLS13];
}

id objc_msgSend_enableTcpFastOpen(void *a1, const char *a2, ...)
{
  return _[a1 enableTcpFastOpen];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_enabledDictationLocales(void *a1, const char *a2, ...)
{
  return _[a1 enabledDictationLocales];
}

id objc_msgSend_enablesProximityTracking(void *a1, const char *a2, ...)
{
  return _[a1 enablesProximityTracking];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeForBTAddress_headphoneInEarDetectionStateDidChangeFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeForBTAddress:headphoneInEarDetectionStateDidChangeFrom:to:");
}

id objc_msgSend_encodeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedClassName(void *a1, const char *a2, ...)
{
  return _[a1 encodedClassName];
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_encryptedValuesByKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptedValuesByKey];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endDictationSessionWithAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endDictationSessionWithAssistantId:");
}

id objc_msgSend_endEventsGrouping(void *a1, const char *a2, ...)
{
  return _[a1 endEventsGrouping];
}

id objc_msgSend_endGroupingWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endGroupingWithOptions:");
}

id objc_msgSend_endLocationUpdateSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 endLocationUpdateSessionIfNeeded];
}

id objc_msgSend_endMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 endMonitoring];
}

id objc_msgSend_endRetryableRequestForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRetryableRequestForCommand:");
}

id objc_msgSend_endRetryableRequestForCommandAceId_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRetryableRequestForCommandAceId:refId:");
}

id objc_msgSend_endSession(void *a1, const char *a2, ...)
{
  return _[a1 endSession];
}

id objc_msgSend_endSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSession:completion:");
}

id objc_msgSend_endSessionForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSessionForClient:");
}

id objc_msgSend_endSessionForDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSessionForDelegate:");
}

id objc_msgSend_endSessionWithAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSessionWithAssistantId:");
}

id objc_msgSend_endSpeechLog(void *a1, const char *a2, ...)
{
  return _[a1 endSpeechLog];
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return _[a1 endTime];
}

id objc_msgSend_endTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 endTimestamp];
}

id objc_msgSend_endUpdate(void *a1, const char *a2, ...)
{
  return _[a1 endUpdate];
}

id objc_msgSend_endedAt(void *a1, const char *a2, ...)
{
  return _[a1 endedAt];
}

id objc_msgSend_endingGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 endingGroupIdentifier];
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _[a1 endpoint];
}

id objc_msgSend_endpointConfirmationTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 endpointConfirmationTimestamp];
}

id objc_msgSend_endpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 endpointInfo];
}

id objc_msgSend_endpointerModelVersion(void *a1, const char *a2, ...)
{
  return _[a1 endpointerModelVersion];
}

id objc_msgSend_endpointerOperationMode(void *a1, const char *a2, ...)
{
  return _[a1 endpointerOperationMode];
}

id objc_msgSend_enforcePreviousEndpointHint(void *a1, const char *a2, ...)
{
  return _[a1 enforcePreviousEndpointHint];
}

id objc_msgSend_enqueueAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueAnnouncementRequest:");
}

id objc_msgSend_enqueueAudioDataWithAudioFileName_audioMetadataDict_folderPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueAudioDataWithAudioFileName:audioMetadataDict:folderPath:");
}

id objc_msgSend_enqueueLargeMessageObjectFromPath_assetIdentifier_messageMetadata_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueLargeMessageObjectFromPath:assetIdentifier:messageMetadata:completion:");
}

id objc_msgSend_enqueueObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueObject:");
}

id objc_msgSend_enrollmentName(void *a1, const char *a2, ...)
{
  return _[a1 enrollmentName];
}

id objc_msgSend_entities(void *a1, const char *a2, ...)
{
  return _[a1 entities];
}

id objc_msgSend_entitlement(void *a1, const char *a2, ...)
{
  return _[a1 entitlement];
}

id objc_msgSend_enumerateActiveExperimentsForEnvironment_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateActiveExperimentsForEnvironment:error:block:");
}

id objc_msgSend_enumerateBulletinsAfterBulletinWithNotificationID_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateBulletinsAfterBulletinWithNotificationID:usingBlock:");
}

id objc_msgSend_enumerateExperimentStatusesForEnvironment_startingFromCursor_error_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateExperimentStatusesForEnvironment:startingFromCursor:error:block:");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateMatchesInString_options_range_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateMatchesInString:options:range:usingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_eosLikelihood(void *a1, const char *a2, ...)
{
  return _[a1 eosLikelihood];
}

id objc_msgSend_ephemeralIdForDefaultUser(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralIdForDefaultUser];
}

id objc_msgSend_ephemeralSeeds(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSeeds];
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSessionConfiguration];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorBody(void *a1, const char *a2, ...)
{
  return _[a1 errorBody];
}

id objc_msgSend_errorButtonText(void *a1, const char *a2, ...)
{
  return _[a1 errorButtonText];
}

id objc_msgSend_errorCode(void *a1, const char *a2, ...)
{
  return _[a1 errorCode];
}

id objc_msgSend_errorIndicatorStatus(void *a1, const char *a2, ...)
{
  return _[a1 errorIndicatorStatus];
}

id objc_msgSend_errorTitle(void *a1, const char *a2, ...)
{
  return _[a1 errorTitle];
}

id objc_msgSend_errorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithCode:");
}

id objc_msgSend_errorWithCode_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithCode:description:");
}

id objc_msgSend_errorWithCode_description_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithCode:description:underlyingError:");
}

id objc_msgSend_errorWithCode_description_underlyingErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithCode:description:underlyingErrors:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_establishShareWithHomeOwner_container_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "establishShareWithHomeOwner:container:completionHandler:");
}

id objc_msgSend_estimatedSpeechEndHostTime(void *a1, const char *a2, ...)
{
  return _[a1 estimatedSpeechEndHostTime];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return _[a1 event];
}

id objc_msgSend_eventBody(void *a1, const char *a2, ...)
{
  return _[a1 eventBody];
}

id objc_msgSend_eventData(void *a1, const char *a2, ...)
{
  return _[a1 eventData];
}

id objc_msgSend_eventMetadata(void *a1, const char *a2, ...)
{
  return _[a1 eventMetadata];
}

id objc_msgSend_eventName(void *a1, const char *a2, ...)
{
  return _[a1 eventName];
}

id objc_msgSend_eventOperation(void *a1, const char *a2, ...)
{
  return _[a1 eventOperation];
}

id objc_msgSend_eventTimestampInMSSince1970(void *a1, const char *a2, ...)
{
  return _[a1 eventTimestampInMSSince1970];
}

id objc_msgSend_eventType(void *a1, const char *a2, ...)
{
  return _[a1 eventType];
}

id objc_msgSend_eventValue(void *a1, const char *a2, ...)
{
  return _[a1 eventValue];
}

id objc_msgSend_eventsMatchingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventsMatchingPredicate:");
}

id objc_msgSend_executeCommand_fromPeer_remoteExecutionInfo_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeCommand:fromPeer:remoteExecutionInfo:reply:");
}

id objc_msgSend_executeCommand_onPeer_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeCommand:onPeer:executionContext:completion:");
}

id objc_msgSend_executeCommand_onPeer_executionContext_throughOnDemandRapportConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeCommand:onPeer:executionContext:throughOnDemandRapportConnection:");
}

id objc_msgSend_executeQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeQuery:");
}

id objc_msgSend_executeRemoteCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRemoteCommand:completion:");
}

id objc_msgSend_executionContexts(void *a1, const char *a2, ...)
{
  return _[a1 executionContexts];
}

id objc_msgSend_executionID(void *a1, const char *a2, ...)
{
  return _[a1 executionID];
}

id objc_msgSend_expExperimentFromExperimentAllocationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expExperimentFromExperimentAllocationStatus:");
}

id objc_msgSend_expExperimentWithExperimentIdentifiers_status_trialNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expExperimentWithExperimentIdentifiers:status:trialNamespace:");
}

id objc_msgSend_expectedActivationEventTime(void *a1, const char *a2, ...)
{
  return _[a1 expectedActivationEventTime];
}

id objc_msgSend_expectedResponseClassName(void *a1, const char *a2, ...)
{
  return _[a1 expectedResponseClassName];
}

id objc_msgSend_expectedSpeakerConfidenceScore(void *a1, const char *a2, ...)
{
  return _[a1 expectedSpeakerConfidenceScore];
}

id objc_msgSend_expectedSpeakerSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 expectedSpeakerSharedUserID];
}

id objc_msgSend_expectsPeerResponse(void *a1, const char *a2, ...)
{
  return _[a1 expectsPeerResponse];
}

id objc_msgSend_experimentGroups(void *a1, const char *a2, ...)
{
  return _[a1 experimentGroups];
}

id objc_msgSend_experimentId(void *a1, const char *a2, ...)
{
  return _[a1 experimentId];
}

id objc_msgSend_experimentIdentifierForConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experimentIdentifierForConfigurationIdentifier:");
}

id objc_msgSend_experimentIdentifiersTrialProject_trialNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experimentIdentifiersTrialProject:trialNamespace:");
}

id objc_msgSend_experimentIdentifiersWithNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experimentIdentifiersWithNamespaceName:");
}

id objc_msgSend_experimentNamespace(void *a1, const char *a2, ...)
{
  return _[a1 experimentNamespace];
}

id objc_msgSend_experimentsByConfigurationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 experimentsByConfigurationIdentifier];
}

id objc_msgSend_experimentsUAFEmitted(void *a1, const char *a2, ...)
{
  return _[a1 experimentsUAFEmitted];
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_expirationDaysFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expirationDaysFrom:");
}

id objc_msgSend_expirationDuration(void *a1, const char *a2, ...)
{
  return _[a1 expirationDuration];
}

id objc_msgSend_exportedObject(void *a1, const char *a2, ...)
{
  return _[a1 exportedObject];
}

id objc_msgSend_extSessionGuid(void *a1, const char *a2, ...)
{
  return _[a1 extSessionGuid];
}

id objc_msgSend_extSessionGuidCreatedTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 extSessionGuidCreatedTimestamp];
}

id objc_msgSend_extendRequestTimeoutBy_forRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extendRequestTimeoutBy:forRequestID:");
}

id objc_msgSend_extensionContext(void *a1, const char *a2, ...)
{
  return _[a1 extensionContext];
}

id objc_msgSend_extensionRequestFinishedForApplication_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionRequestFinishedForApplication:error:");
}

id objc_msgSend_extensionRequestWillStartForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionRequestWillStartForApplication:");
}

id objc_msgSend_externalMediaContentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 externalMediaContentIdentifier];
}

id objc_msgSend_externalNotificationRequestHandler(void *a1, const char *a2, ...)
{
  return _[a1 externalNotificationRequestHandler];
}

id objc_msgSend_eyesFree(void *a1, const char *a2, ...)
{
  return _[a1 eyesFree];
}

id objc_msgSend_factorLevelsWithNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "factorLevelsWithNamespaceName:");
}

id objc_msgSend_failOnSiriDisconnectWarnings(void *a1, const char *a2, ...)
{
  return _[a1 failOnSiriDisconnectWarnings];
}

id objc_msgSend_failedToLaunchAppWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedToLaunchAppWithBundleIdentifier:");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_farField(void *a1, const char *a2, ...)
{
  return _[a1 farField];
}

id objc_msgSend_featuresAtEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 featuresAtEndpoint];
}

id objc_msgSend_feed(void *a1, const char *a2, ...)
{
  return _[a1 feed];
}

id objc_msgSend_feedbackService(void *a1, const char *a2, ...)
{
  return _[a1 feedbackService];
}

id objc_msgSend_fetchAVSystemControllerInBackground(void *a1, const char *a2, ...)
{
  return _[a1 fetchAVSystemControllerInBackground];
}

id objc_msgSend_fetchAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAccounts:");
}

id objc_msgSend_fetchActiveAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveAccount:");
}

id objc_msgSend_fetchActiveAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveAccountIdentifier:");
}

id objc_msgSend_fetchActiveSubscriptionsWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveSubscriptionsWithQueue:completion:");
}

id objc_msgSend_fetchAddressForDeviceWithCBUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAddressForDeviceWithCBUUID:completion:");
}

id objc_msgSend_fetchAlarmsMeetingCriteria_searchOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAlarmsMeetingCriteria:searchOptions:completionHandler:");
}

id objc_msgSend_fetchAlarmsWithIdentifiers_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAlarmsWithIdentifiers:completionHandler:");
}

id objc_msgSend_fetchAllBulletinsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAllBulletinsWithCompletion:");
}

id objc_msgSend_fetchAndUpdateMediaRemoteGroupIdentifierForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAndUpdateMediaRemoteGroupIdentifierForReason:");
}

id objc_msgSend_fetchAndUpdateMediaRemoteRouteIdentifierForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAndUpdateMediaRemoteRouteIdentifierForReason:");
}

id objc_msgSend_fetchAppicationContextForApplicationInfo_supplementalContext_refID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAppicationContextForApplicationInfo:supplementalContext:refID:");
}

id objc_msgSend_fetchAppleMusicSubscriptionForSharedUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAppleMusicSubscriptionForSharedUser:completion:");
}

id objc_msgSend_fetchAssetsAvailabilityForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetsAvailabilityForLanguage:completion:");
}

id objc_msgSend_fetchAudioAccessoryDeviceForBTAddress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAudioAccessoryDeviceForBTAddress:completion:");
}

id objc_msgSend_fetchAudioAccessoryDeviceForCBUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAudioAccessoryDeviceForCBUUID:completion:");
}

id objc_msgSend_fetchAudioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 fetchAudioSessionID];
}

id objc_msgSend_fetchAvailableAnnouncementRequestTypesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAvailableAnnouncementRequestTypesWithCompletion:");
}

id objc_msgSend_fetchBulletinWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBulletinWithID:completion:");
}

id objc_msgSend_fetchBulletinsAfterBulletinWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBulletinsAfterBulletinWithID:completion:");
}

id objc_msgSend_fetchBulletinsOnLockScreenForNotificationManager_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBulletinsOnLockScreenForNotificationManager:completion:");
}

id objc_msgSend_fetchBulletinsOnLockScreenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBulletinsOnLockScreenWithCompletion:");
}

id objc_msgSend_fetchCBUUIDForConnectedDeviceWithAddress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCBUUIDForConnectedDeviceWithAddress:completion:");
}

id objc_msgSend_fetchCBUUIDForDeviceWithAddress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCBUUIDForDeviceWithAddress:completion:");
}

id objc_msgSend_fetchChangesWithZoneInfo_useSharedDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchChangesWithZoneInfo:useSharedDatabase:");
}

id objc_msgSend_fetchContextForApplicationInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchContextForApplicationInfo:completion:");
}

id objc_msgSend_fetchContextSnapshotFromAllDevicesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchContextSnapshotFromAllDevicesWithCompletion:");
}

id objc_msgSend_fetchContextSnapshotFromDevicesWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchContextSnapshotFromDevicesWithPeerInfo:completion:");
}

id objc_msgSend_fetchCurrentMode(void *a1, const char *a2, ...)
{
  return _[a1 fetchCurrentMode];
}

id objc_msgSend_fetchCurrentSyncSnapshotForServicePath_className_key_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCurrentSyncSnapshotForServicePath:className:key:completion:");
}

id objc_msgSend_fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion:");
}

id objc_msgSend_fetchDeviceAggregationIdWithCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceAggregationIdWithCallback:");
}

id objc_msgSend_fetchDeviceAndUserIdsForSharedUserId_withCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceAndUserIdsForSharedUserId:withCallback:");
}

id objc_msgSend_fetchDeviceAndUserIdsForiCloudAltDSId_withCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceAndUserIdsForiCloudAltDSId:withCallback:");
}

id objc_msgSend_fetchDeviceTypesForAllLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceTypesForAllLanguages:");
}

id objc_msgSend_fetchDeviceTypesForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeviceTypesForLanguage:completion:");
}

id objc_msgSend_fetchEligibleAnnouncementRequestTypesAndNotifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEligibleAnnouncementRequestTypesAndNotifyObservers:");
}

id objc_msgSend_fetchEligibleAnnouncementRequestTypesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEligibleAnnouncementRequestTypesWithCompletion:");
}

id objc_msgSend_fetchEligibleSetupStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEligibleSetupStateWithCompletion:");
}

id objc_msgSend_fetchEnrolledUsersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEnrolledUsersWithCompletion:");
}

id objc_msgSend_fetchEventRecords_eventStreamUID_streamSpeechId_deliveryStream_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEventRecords:eventStreamUID:streamSpeechId:deliveryStream:completion:");
}

id objc_msgSend_fetchEventStreamUIDsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEventStreamUIDsWithCompletion:");
}

id objc_msgSend_fetchICUserIdentityForSharedUser_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchICUserIdentityForSharedUser:completion:");
}

id objc_msgSend_fetchIdItemPair(void *a1, const char *a2, ...)
{
  return _[a1 fetchIdItemPair];
}

id objc_msgSend_fetchInProgress(void *a1, const char *a2, ...)
{
  return _[a1 fetchInProgress];
}

id objc_msgSend_fetchInstalledApplicationsForPairedDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchInstalledApplicationsForPairedDevice:completion:");
}

id objc_msgSend_fetchKeysThatNeedToSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKeysThatNeedToSync:");
}

id objc_msgSend_fetchLastLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLastLocationWithCompletion:");
}

id objc_msgSend_fetchLocalIdItemPair(void *a1, const char *a2, ...)
{
  return _[a1 fetchLocalIdItemPair];
}

id objc_msgSend_fetchLocalVoiceAssetAvailabilityWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLocalVoiceAssetAvailabilityWithCompletion:");
}

id objc_msgSend_fetchLocationAuthorization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLocationAuthorization:");
}

id objc_msgSend_fetchManagedStoreObjectForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchManagedStoreObjectForKey:completion:");
}

id objc_msgSend_fetchNextMetricsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchNextMetricsUsingBlock:");
}

id objc_msgSend_fetchOfflineDictationStatusIgnoringCache_asynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchOfflineDictationStatusIgnoringCache:asynchronously:");
}

id objc_msgSend_fetchPrivateSessionStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchPrivateSessionStateWithCompletion:");
}

id objc_msgSend_fetchRecordingInfo(void *a1, const char *a2, ...)
{
  return _[a1 fetchRecordingInfo];
}

id objc_msgSend_fetchRequestCanBeHandledStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestCanBeHandledStateWithCompletion:");
}

id objc_msgSend_fetchSentAnchorsOnQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSentAnchorsOnQueue:completion:");
}

id objc_msgSend_fetchSharedUserIdForiCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSharedUserIdForiCloudAltDSID:completion:");
}

id objc_msgSend_fetchSharedZones(void *a1, const char *a2, ...)
{
  return _[a1 fetchSharedZones];
}

id objc_msgSend_fetchSiriAuthorization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSiriAuthorization:");
}

id objc_msgSend_fetchSiriRelatedNotificationPreviewRestrictedAppsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSiriRelatedNotificationPreviewRestrictedAppsWithCompletion:");
}

id objc_msgSend_fetchSmartSiriVolumeForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSmartSiriVolumeForType:");
}

id objc_msgSend_fetchSupportedLanguagesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSupportedLanguagesWithCompletion:");
}

id objc_msgSend_fetchSyncSnapshotForInfo_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSyncSnapshotForInfo:handler:");
}

id objc_msgSend_fetchSynchronizedAnalyticsIdsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSynchronizedAnalyticsIdsForHome:");
}

id objc_msgSend_fetchSynchronizedAnalyticsIdsForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSynchronizedAnalyticsIdsForUser:");
}

id objc_msgSend_fetchTableWithName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTableWithName:error:");
}

id objc_msgSend_fetchUnreadNotificationsFromThreadAfterNotificationWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUnreadNotificationsFromThreadAfterNotificationWithID:completion:");
}

id objc_msgSend_fetchUserRecordIDWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserRecordIDWithCompletionHandler:");
}

id objc_msgSend_fetchValueForKeyFromSharedStore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchValueForKeyFromSharedStore:completion:");
}

id objc_msgSend_fetchValueForKeyFromSharedStore_container_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchValueForKeyFromSharedStore:container:completion:");
}

id objc_msgSend_fetchValueForKeyFromSharedStore_withQOS_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchValueForKeyFromSharedStore:withQOS:completion:");
}

id objc_msgSend_fetchValuesForKeysFromSharedStore_withQOS_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchValuesForKeysFromSharedStore:withQOS:completion:");
}

id objc_msgSend_fetchVoiceTriggerHeartBeatMetrics(void *a1, const char *a2, ...)
{
  return _[a1 fetchVoiceTriggerHeartBeatMetrics];
}

id objc_msgSend_fetchVoiceTriggerSettings(void *a1, const char *a2, ...)
{
  return _[a1 fetchVoiceTriggerSettings];
}

id objc_msgSend_fetchZoneShare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchZoneShare:");
}

id objc_msgSend_fetchZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchZones:");
}

id objc_msgSend_fieldIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 fieldIdentifier];
}

id objc_msgSend_fieldLabel(void *a1, const char *a2, ...)
{
  return _[a1 fieldLabel];
}

id objc_msgSend_fileDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fileDescriptor];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileHandleForReadingAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForReadingAtPath:");
}

id objc_msgSend_fileHandleForUpdatingAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForUpdatingAtPath:");
}

id objc_msgSend_fileLoggingIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 fileLoggingIsEnabled];
}

id objc_msgSend_fileModificationDate(void *a1, const char *a2, ...)
{
  return _[a1 fileModificationDate];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return _[a1 fileURL];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fileValue(void *a1, const char *a2, ...)
{
  return _[a1 fileValue];
}

id objc_msgSend_filterBlacklistedAnchorsFrom_includingNewRestrictionsFromResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:");
}

id objc_msgSend_filterBlacklistedKeys_appSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterBlacklistedKeys:appSources:");
}

id objc_msgSend_filterBlacklistedKeys_vocabSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterBlacklistedKeys:vocabSources:");
}

id objc_msgSend_filterExperiments_experimentsEmitted_namespaceAssetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterExperiments:experimentsEmitted:namespaceAssetSet:");
}

id objc_msgSend_filterUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterUsingPredicate:");
}

id objc_msgSend_filterWithIsIncluded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithIsIncluded:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finalizeStorageForDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalizeStorageForDeviceWithIdentifier:");
}

id objc_msgSend_findAlternativesForString_maxResults_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findAlternativesForString:maxResults:completion:");
}

id objc_msgSend_finishAudio(void *a1, const char *a2, ...)
{
  return _[a1 finishAudio];
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _[a1 finishDecoding];
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return _[a1 finishEncoding];
}

id objc_msgSend_finishStreamWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishStreamWithCompletionBlock:");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishWithNoResult(void *a1, const char *a2, ...)
{
  return _[a1 finishWithNoResult];
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithResult:");
}

id objc_msgSend_finishedDate(void *a1, const char *a2, ...)
{
  return _[a1 finishedDate];
}

id objc_msgSend_fireDate(void *a1, const char *a2, ...)
{
  return _[a1 fireDate];
}

id objc_msgSend_fireTimeInterval(void *a1, const char *a2, ...)
{
  return _[a1 fireTimeInterval];
}

id objc_msgSend_firedDate(void *a1, const char *a2, ...)
{
  return _[a1 firedDate];
}

id objc_msgSend_firstBufferHostTime(void *a1, const char *a2, ...)
{
  return _[a1 firstBufferHostTime];
}

id objc_msgSend_firstBufferTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 firstBufferTimestamp];
}

id objc_msgSend_firstByteReadInterval(void *a1, const char *a2, ...)
{
  return _[a1 firstByteReadInterval];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstRoutableInternetDestinationForSelf(void *a1, const char *a2, ...)
{
  return _[a1 firstRoutableInternetDestinationForSelf];
}

id objc_msgSend_firstTxByteDelay(void *a1, const char *a2, ...)
{
  return _[a1 firstTxByteDelay];
}

id objc_msgSend_firstUnlockRestrictedCommands(void *a1, const char *a2, ...)
{
  return _[a1 firstUnlockRestrictedCommands];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flowNetworkInterfaceType(void *a1, const char *a2, ...)
{
  return _[a1 flowNetworkInterfaceType];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _[a1 flush];
}

id objc_msgSend_flushStagedEventsWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushStagedEventsWithReply:");
}

id objc_msgSend_flushWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushWithCompletion:");
}

id objc_msgSend_footUnit(void *a1, const char *a2, ...)
{
  return _[a1 footUnit];
}

id objc_msgSend_footprint(void *a1, const char *a2, ...)
{
  return _[a1 footprint];
}

id objc_msgSend_forceAudioSessionActiveWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAudioSessionActiveWithContext:completion:");
}

id objc_msgSend_forceAudioSessionInactiveWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAudioSessionInactiveWithOptions:completion:");
}

id objc_msgSend_forceEagerDeserialization(void *a1, const char *a2, ...)
{
  return _[a1 forceEagerDeserialization];
}

id objc_msgSend_forceFastDormancy(void *a1, const char *a2, ...)
{
  return _[a1 forceFastDormancy];
}

id objc_msgSend_forceLocationUpdateFromCoreLocation(void *a1, const char *a2, ...)
{
  return _[a1 forceLocationUpdateFromCoreLocation];
}

id objc_msgSend_forceMultiUserSync_download_activity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceMultiUserSync:download:activity:completion:");
}

id objc_msgSend_forceOfflineRecognition(void *a1, const char *a2, ...)
{
  return _[a1 forceOfflineRecognition];
}

id objc_msgSend_forceOfflineRecognitionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 forceOfflineRecognitionEnabled];
}

id objc_msgSend_forceSuccessAudioAlertOnStop(void *a1, const char *a2, ...)
{
  return _[a1 forceSuccessAudioAlertOnStop];
}

id objc_msgSend_forwardGeoProtobuf(void *a1, const char *a2, ...)
{
  return _[a1 forwardGeoProtobuf];
}

id objc_msgSend_frequency(void *a1, const char *a2, ...)
{
  return _[a1 frequency];
}

id objc_msgSend_fromEmail(void *a1, const char *a2, ...)
{
  return _[a1 fromEmail];
}

id objc_msgSend_fromLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 fromLocalDevice];
}

id objc_msgSend_frontObject(void *a1, const char *a2, ...)
{
  return _[a1 frontObject];
}

id objc_msgSend_fulfillmentBlock(void *a1, const char *a2, ...)
{
  return _[a1 fulfillmentBlock];
}

id objc_msgSend_fullDescription(void *a1, const char *a2, ...)
{
  return _[a1 fullDescription];
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _[a1 fullName];
}

id objc_msgSend_futureWithBlock_scheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureWithBlock:scheduler:");
}

id objc_msgSend_gatewayPingDuration(void *a1, const char *a2, ...)
{
  return _[a1 gatewayPingDuration];
}

id objc_msgSend_gatewayPingsDropped(void *a1, const char *a2, ...)
{
  return _[a1 gatewayPingsDropped];
}

id objc_msgSend_gatewayPingsSent(void *a1, const char *a2, ...)
{
  return _[a1 gatewayPingsSent];
}

id objc_msgSend_gatewayStatus(void *a1, const char *a2, ...)
{
  return _[a1 gatewayStatus];
}

id objc_msgSend_gender(void *a1, const char *a2, ...)
{
  return _[a1 gender];
}

id objc_msgSend_genderString(void *a1, const char *a2, ...)
{
  return _[a1 genderString];
}

id objc_msgSend_generateAsyncDialogResponse_reportingDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAsyncDialogResponse:reportingDomain:");
}

id objc_msgSend_generation(void *a1, const char *a2, ...)
{
  return _[a1 generation];
}

id objc_msgSend_generationsByDataType(void *a1, const char *a2, ...)
{
  return _[a1 generationsByDataType];
}

id objc_msgSend_genreID(void *a1, const char *a2, ...)
{
  return _[a1 genreID];
}

id objc_msgSend_get(void *a1, const char *a2, ...)
{
  return _[a1 get];
}

id objc_msgSend_getAACPCapabilityInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAACPCapabilityInteger:");
}

id objc_msgSend_getAVSystemControllerWithTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAVSystemControllerWithTimeout:completion:");
}

id objc_msgSend_getAWDMetrics_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAWDMetrics:completion:");
}

id objc_msgSend_getAWDTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 getAWDTimestamp];
}

id objc_msgSend_getAccessoryCategoryForExecutionInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAccessoryCategoryForExecutionInfo:completion:");
}

id objc_msgSend_getAccessoryInfoForAccessoryWithUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAccessoryInfoForAccessoryWithUUID:completionHandler:");
}

id objc_msgSend_getAceDiscoveryType(void *a1, const char *a2, ...)
{
  return _[a1 getAceDiscoveryType];
}

id objc_msgSend_getAceVersion(void *a1, const char *a2, ...)
{
  return _[a1 getAceVersion];
}

id objc_msgSend_getActiveABExperimentsFromProvider_environment_retries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getActiveABExperimentsFromProvider:environment:retries:");
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_getAdaptiveVolumeUserIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAdaptiveVolumeUserIntent:");
}

id objc_msgSend_getAlertContextWithBulletins_externalAlarmSnapshot_timerSnapshot_nlAlertContextCompletion_fullAlertContextCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:");
}

id objc_msgSend_getAllEXPExperimentsFromProvider_cursor_environment_fromDate_retries_experimentsEmitted_namespaceAssetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllEXPExperimentsFromProvider:cursor:environment:fromDate:retries:experimentsEmitted:namespaceAssetSet:");
}

id objc_msgSend_getAllTokenStatusForAssistantForcingRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllTokenStatusForAssistantForcingRefresh:completion:");
}

id objc_msgSend_getAllTokensForAssistantForcingRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllTokensForAssistantForcingRefresh:completion:");
}

id objc_msgSend_getAllowsAWDL(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsAWDL];
}

id objc_msgSend_getAllowsBLE(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsBLE];
}

id objc_msgSend_getAllowsBTPipe(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsBTPipe];
}

id objc_msgSend_getAllowsForceAWDL(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsForceAWDL];
}

id objc_msgSend_getAllowsForceBLE(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsForceBLE];
}

id objc_msgSend_getAllowsInfraWiFi(void *a1, const char *a2, ...)
{
  return _[a1 getAllowsInfraWiFi];
}

id objc_msgSend_getAnchorsRequest(void *a1, const char *a2, ...)
{
  return _[a1 getAnchorsRequest];
}

id objc_msgSend_getAppContextForDeviceState_applicationInfos_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAppContextForDeviceState:applicationInfos:completion:");
}

id objc_msgSend_getApplicationIdentifierFromEntitlements(void *a1, const char *a2, ...)
{
  return _[a1 getApplicationIdentifierFromEntitlements];
}

id objc_msgSend_getAssistantDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssistantDataWithCompletion:");
}

id objc_msgSend_getAssistantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 getAssistantIdentifier];
}

id objc_msgSend_getAssistantIdentifierForIDS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssistantIdentifierForIDS:");
}

id objc_msgSend_getAudioAppSignalsPayload(void *a1, const char *a2, ...)
{
  return _[a1 getAudioAppSignalsPayload];
}

id objc_msgSend_getAudioRecordRouteAndDeviceIdentificationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAudioRecordRouteAndDeviceIdentificationWithCompletion:");
}

id objc_msgSend_getAudioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 getAudioSessionID];
}

id objc_msgSend_getAudioSessionIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAudioSessionIDWithCompletion:");
}

id objc_msgSend_getBTDeviceWithAddress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBTDeviceWithAddress:completion:");
}

id objc_msgSend_getBTDeviceWithDeviceUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBTDeviceWithDeviceUID:completion:");
}

id objc_msgSend_getBTLocalDeviceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBTLocalDeviceWithCompletion:");
}

id objc_msgSend_getBackgroundContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBackgroundContext:");
}

id objc_msgSend_getBestLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBestLocationWithCompletion:");
}

id objc_msgSend_getBluetoothWirelessSplitterSessionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBluetoothWirelessSplitterSessionInfoWithCompletion:");
}

id objc_msgSend_getBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 getBuildVersion];
}

id objc_msgSend_getBulletinContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBulletinContext:");
}

id objc_msgSend_getCapabilitiesAndPeersFromContextCollectorThroughOnDemandRapportConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCapabilitiesAndPeersFromContextCollectorThroughOnDemandRapportConnection:");
}

id objc_msgSend_getCapabilitiesForDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCapabilitiesForDevice:completion:");
}

id objc_msgSend_getCapabilitiesForReachableDevicesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCapabilitiesForReachableDevicesWithCompletion:");
}

id objc_msgSend_getClassifiedUser(void *a1, const char *a2, ...)
{
  return _[a1 getClassifiedUser];
}

id objc_msgSend_getCloudKitManager(void *a1, const char *a2, ...)
{
  return _[a1 getCloudKitManager];
}

id objc_msgSend_getCommandPullDeltaRequest(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullDeltaRequest];
}

id objc_msgSend_getCommandPullDeltaResponse(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullDeltaResponse];
}

id objc_msgSend_getCommandPullGenerationsRequest(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullGenerationsRequest];
}

id objc_msgSend_getCommandPullGenerationsResponse(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullGenerationsResponse];
}

id objc_msgSend_getCommandPullSnapshotRequest(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullSnapshotRequest];
}

id objc_msgSend_getCommandPullSnapshotResponse(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPullSnapshotResponse];
}

id objc_msgSend_getCommandPushGenerationsRequest(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPushGenerationsRequest];
}

id objc_msgSend_getCommandPushGenerationsResponse(void *a1, const char *a2, ...)
{
  return _[a1 getCommandPushGenerationsResponse];
}

id objc_msgSend_getCommandRelayProxyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 getCommandRelayProxyIdentifier];
}

id objc_msgSend_getCompanionAssistantIdForRecognizedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCompanionAssistantIdForRecognizedUser:");
}

id objc_msgSend_getConfigurationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConfigurationsWithCompletion:");
}

id objc_msgSend_getConnectedDevicesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConnectedDevicesWithCompletion:");
}

id objc_msgSend_getConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConnectionMetrics:");
}

id objc_msgSend_getConnectionMetricsSynchronously_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConnectionMetricsSynchronously:completion:");
}

id objc_msgSend_getConnectionOptions(void *a1, const char *a2, ...)
{
  return _[a1 getConnectionOptions];
}

id objc_msgSend_getContainerIDForThisDevice(void *a1, const char *a2, ...)
{
  return _[a1 getContainerIDForThisDevice];
}

id objc_msgSend_getContextCollectorDeviceIdentifiersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextCollectorDeviceIdentifiersWithCompletion:");
}

id objc_msgSend_getContextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 getContextIdentifier];
}

id objc_msgSend_getContextIncludingKeys_excludingMandatoryKeys_timeOut_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:");
}

id objc_msgSend_getContextIncludingKeys_excludingMandatoryKeys_timeOut_localContextCompletion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextIncludingKeys:excludingMandatoryKeys:timeOut:localContextCompletion:completion:");
}

id objc_msgSend_getContextSnapshotForCurrentRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextSnapshotForCurrentRequestWithCompletion:");
}

id objc_msgSend_getContextSnapshotForForeignRequestID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextSnapshotForForeignRequestID:completion:");
}

id objc_msgSend_getContextSnapshotIncludingKeys_excludingMandatoryKeys_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:");
}

id objc_msgSend_getContextWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContextWithCompletion:");
}

id objc_msgSend_getCrossDeviceContextWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCrossDeviceContextWithCompletion:");
}

id objc_msgSend_getCurrentASRLanguages(void *a1, const char *a2, ...)
{
  return _[a1 getCurrentASRLanguages];
}

id objc_msgSend_getCurrentAccessoryInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentAccessoryInfoWithCompletion:");
}

id objc_msgSend_getCurrentContextSnapshotWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentContextSnapshotWithCompletion:");
}

id objc_msgSend_getCurrentHomeMemberIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCurrentHomeMemberIds:");
}

id objc_msgSend_getDataType(void *a1, const char *a2, ...)
{
  return _[a1 getDataType];
}

id objc_msgSend_getDataTypes(void *a1, const char *a2, ...)
{
  return _[a1 getDataTypes];
}

id objc_msgSend_getDate(void *a1, const char *a2, ...)
{
  return _[a1 getDate];
}

id objc_msgSend_getDebugVoiceIdScores(void *a1, const char *a2, ...)
{
  return _[a1 getDebugVoiceIdScores];
}

id objc_msgSend_getDeferredObjectsWithIdentifiers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeferredObjectsWithIdentifiers:completion:");
}

id objc_msgSend_getDeletedItemUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 getDeletedItemUUIDs];
}

id objc_msgSend_getDeviceContextAndProximityMapIncludingAllReachableDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceContextAndProximityMapIncludingAllReachableDevice:completion:");
}

id objc_msgSend_getDeviceContextsForKeys_forForeignRequestID_includesNearbyDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:");
}

id objc_msgSend_getDeviceContextsForKeys_forRequestID_includesNearbyDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceContextsForKeys:forRequestID:includesNearbyDevices:completion:");
}

id objc_msgSend_getDeviceIDPair(void *a1, const char *a2, ...)
{
  return _[a1 getDeviceIDPair];
}

id objc_msgSend_getDeviceIdentifiersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceIdentifiersWithCompletion:");
}

id objc_msgSend_getDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceInfo:");
}

id objc_msgSend_getDeviceOwnerSharedUserId(void *a1, const char *a2, ...)
{
  return _[a1 getDeviceOwnerSharedUserId];
}

id objc_msgSend_getDeviceProximityRelativeToLocalDeviceWithDeviceContexts_includesAllReachableDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:includesAllReachableDevices:completion:");
}

id objc_msgSend_getDevicesDiscoveredNearbyForUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesDiscoveredNearbyForUserID:");
}

id objc_msgSend_getDevicesDiscoveredTypeCountForUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesDiscoveredTypeCountForUserID:");
}

id objc_msgSend_getDevicesWithAvailablePHSAssetsForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesWithAvailablePHSAssetsForLanguage:completion:");
}

id objc_msgSend_getDevicesWithAvailablePHSAssetsOnDeviceCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesWithAvailablePHSAssetsOnDeviceCheck:");
}

id objc_msgSend_getDictationLanguagesForSupportedLocales_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDictationLanguagesForSupportedLocales:error:");
}

id objc_msgSend_getDiscoveryOptions(void *a1, const char *a2, ...)
{
  return _[a1 getDiscoveryOptions];
}

id objc_msgSend_getDomainObjectFromMessageContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDomainObjectFromMessageContext:completion:");
}

id objc_msgSend_getEffectiveDate(void *a1, const char *a2, ...)
{
  return _[a1 getEffectiveDate];
}

id objc_msgSend_getEnabledStateOfModuleWithIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEnabledStateOfModuleWithIdentifier:completionHandler:");
}

id objc_msgSend_getEnablesProximityTracking(void *a1, const char *a2, ...)
{
  return _[a1 getEnablesProximityTracking];
}

id objc_msgSend_getError(void *a1, const char *a2, ...)
{
  return _[a1 getError];
}

id objc_msgSend_getExperimentForConfigurationIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getExperimentForConfigurationIdentifier:completion:");
}

id objc_msgSend_getExperimentStateForConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getExperimentStateForConfigurationIdentifier:");
}

id objc_msgSend_getExpirationDuration(void *a1, const char *a2, ...)
{
  return _[a1 getExpirationDuration];
}

id objc_msgSend_getGeneration(void *a1, const char *a2, ...)
{
  return _[a1 getGeneration];
}

id objc_msgSend_getGenerationForDeviceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getGenerationForDeviceWithIdentifier:completion:");
}

id objc_msgSend_getGenerationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getGenerationWithCompletion:");
}

id objc_msgSend_getGenerationsByDataType(void *a1, const char *a2, ...)
{
  return _[a1 getGenerationsByDataType];
}

id objc_msgSend_getGroupIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getGroupIdentifierWithCompletion:");
}

id objc_msgSend_getHALDiscoveryType(void *a1, const char *a2, ...)
{
  return _[a1 getHALDiscoveryType];
}

id objc_msgSend_getHeadphoneInEarDetectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHeadphoneInEarDetectionState:");
}

id objc_msgSend_getHeadphoneListeningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHeadphoneListeningMode:");
}

id objc_msgSend_getHomeAccessoriesRepromptStatus(void *a1, const char *a2, ...)
{
  return _[a1 getHomeAccessoriesRepromptStatus];
}

id objc_msgSend_getHomeAccessoryInfo(void *a1, const char *a2, ...)
{
  return _[a1 getHomeAccessoryInfo];
}

id objc_msgSend_getHomeContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHomeContext:");
}

id objc_msgSend_getHomeDevicesAudioTopology(void *a1, const char *a2, ...)
{
  return _[a1 getHomeDevicesAudioTopology];
}

id objc_msgSend_getHomeIdForAccessoryId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHomeIdForAccessoryId:completion:");
}

id objc_msgSend_getHomeManagerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHomeManagerWithCompletion:");
}

id objc_msgSend_getHomeUniqueIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 getHomeUniqueIdentifiers];
}

id objc_msgSend_getHomeUserIdForSharedUserId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHomeUserIdForSharedUserId:completion:");
}

id objc_msgSend_getHostTime(void *a1, const char *a2, ...)
{
  return _[a1 getHostTime];
}

id objc_msgSend_getIDSIdentifierForAssistantId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIDSIdentifierForAssistantId:completion:");
}

id objc_msgSend_getInEarDetectionStateForBTAddress_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInEarDetectionStateForBTAddress:withCompletion:");
}

id objc_msgSend_getIncludesFamily(void *a1, const char *a2, ...)
{
  return _[a1 getIncludesFamily];
}

id objc_msgSend_getIncludesHome(void *a1, const char *a2, ...)
{
  return _[a1 getIncludesHome];
}

id objc_msgSend_getIncludesRemoraDevices(void *a1, const char *a2, ...)
{
  return _[a1 getIncludesRemoraDevices];
}

id objc_msgSend_getIncrementalChanges(void *a1, const char *a2, ...)
{
  return _[a1 getIncrementalChanges];
}

id objc_msgSend_getIncrementalChangesAfterGeneration_limit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIncrementalChangesAfterGeneration:limit:completion:");
}

id objc_msgSend_getInfoForHandoffPayload_userInfo_wepageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInfoForHandoffPayload:userInfo:wepageURL:");
}

id objc_msgSend_getInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInfoWithCompletion:");
}

id objc_msgSend_getInsertedOrUpdatedItems(void *a1, const char *a2, ...)
{
  return _[a1 getInsertedOrUpdatedItems];
}

id objc_msgSend_getIsLocationSharingDevice(void *a1, const char *a2, ...)
{
  return _[a1 getIsLocationSharingDevice];
}

id objc_msgSend_getIsSiriCloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 getIsSiriCloudSyncEnabled];
}

id objc_msgSend_getItems(void *a1, const char *a2, ...)
{
  return _[a1 getItems];
}

id objc_msgSend_getLastStartpointTimestampAndCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLastStartpointTimestampAndCurrentTime:");
}

id objc_msgSend_getLimit(void *a1, const char *a2, ...)
{
  return _[a1 getLimit];
}

id objc_msgSend_getLinkRecommendation_recommendation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLinkRecommendation:recommendation:");
}

id objc_msgSend_getLocalContextWithPrivacyClass_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalContextWithPrivacyClass:completion:");
}

id objc_msgSend_getLocalMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalMetrics:");
}

id objc_msgSend_getLocalRequestWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalRequestWithType:completion:");
}

id objc_msgSend_getLocalizedAccessoryCategoryForExecutionInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLocalizedAccessoryCategoryForExecutionInfo:completion:");
}

id objc_msgSend_getManagedLocalAndRemotePeerInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getManagedLocalAndRemotePeerInfoWithCompletion:");
}

id objc_msgSend_getMaximumOutputVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMaximumOutputVolume:");
}

id objc_msgSend_getMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMeCard:");
}

id objc_msgSend_getMeCardsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMeCardsWithCompletion:");
}

id objc_msgSend_getMetricsContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMetricsContext:");
}

id objc_msgSend_getMinimumOutputVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMinimumOutputVolume:");
}

id objc_msgSend_getMultiUserCompanionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMultiUserCompanionInfoWithCompletion:");
}

id objc_msgSend_getMultiUserSettingsForSharedUserID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMultiUserSettingsForSharedUserID:completion:");
}

id objc_msgSend_getMusicOutputVolumeForAudioRoute_withName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getMusicOutputVolumeForAudioRoute:withName:completion:");
}

id objc_msgSend_getMyriadTrialTreatment(void *a1, const char *a2, ...)
{
  return _[a1 getMyriadTrialTreatment];
}

id objc_msgSend_getNoL2Cap(void *a1, const char *a2, ...)
{
  return _[a1 getNoL2Cap];
}

id objc_msgSend_getNowPlayingInfoForCurrentItemWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNowPlayingInfoForCurrentItemWithCompletion:");
}

id objc_msgSend_getNowPlayingMediaIsResumable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNowPlayingMediaIsResumable:");
}

id objc_msgSend_getODDAssistantProperties(void *a1, const char *a2, ...)
{
  return _[a1 getODDAssistantProperties];
}

id objc_msgSend_getODDDevicePropertiesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getODDDevicePropertiesWithCompletion:");
}

id objc_msgSend_getODDDictationProperties(void *a1, const char *a2, ...)
{
  return _[a1 getODDDictationProperties];
}

id objc_msgSend_getODDGeneralPropertiesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getODDGeneralPropertiesWithCompletion:");
}

id objc_msgSend_getODDiOSAssistantPropertiesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getODDiOSAssistantPropertiesWithCompletion:");
}

id objc_msgSend_getODDiOSGeneralProperties(void *a1, const char *a2, ...)
{
  return _[a1 getODDiOSGeneralProperties];
}

id objc_msgSend_getODDmacOSAssistantProperties(void *a1, const char *a2, ...)
{
  return _[a1 getODDmacOSAssistantProperties];
}

id objc_msgSend_getODDtvOSAssistantPropertiesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getODDtvOSAssistantPropertiesWithCompletion:");
}

id objc_msgSend_getODDwatchOSAssistantProperties(void *a1, const char *a2, ...)
{
  return _[a1 getODDwatchOSAssistantProperties];
}

id objc_msgSend_getObservationDate(void *a1, const char *a2, ...)
{
  return _[a1 getObservationDate];
}

id objc_msgSend_getOfflineDictationStatusIgnoringCache_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOfflineDictationStatusIgnoringCache:completion:");
}

id objc_msgSend_getOfflineDictationStatusWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOfflineDictationStatusWithCompletion:");
}

id objc_msgSend_getOriginDeviceInfoForContextIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOriginDeviceInfoForContextIdentifier:completion:");
}

id objc_msgSend_getPairedBluetoothDeviceInfoArrayWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPairedBluetoothDeviceInfoArrayWithCompletion:");
}

id objc_msgSend_getPairedDevicesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPairedDevicesWithCompletion:");
}

id objc_msgSend_getPayloadBeginAudioSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadBeginAudioSessionRequest];
}

id objc_msgSend_getPayloadBeginAudioSessionResponse(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadBeginAudioSessionResponse];
}

id objc_msgSend_getPayloadEndAudioSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadEndAudioSessionRequest];
}

id objc_msgSend_getPayloadEndAudioSessionResponse(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadEndAudioSessionResponse];
}

id objc_msgSend_getPayloadKeepAudioSessionAliveRequest(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadKeepAudioSessionAliveRequest];
}

id objc_msgSend_getPayloadKeepAudioSessionAliveResponse(void *a1, const char *a2, ...)
{
  return _[a1 getPayloadKeepAudioSessionAliveResponse];
}

id objc_msgSend_getPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 getPeerInfo];
}

id objc_msgSend_getPendingAndActiveAssertionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPendingAndActiveAssertionsWithCompletion:");
}

id objc_msgSend_getPlaybackDeviceListWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPlaybackDeviceListWithCompletion:");
}

id objc_msgSend_getPlaybackStateAndLastPlayingDateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPlaybackStateAndLastPlayingDateWithCompletion:");
}

id objc_msgSend_getPlaybackStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPlaybackStateWithCompletion:");
}

id objc_msgSend_getPreferredDeviceToHandleCommand_logNearbyDeviceMetrics_executionContext_sharedUserID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPreferredDeviceToHandleCommand:logNearbyDeviceMetrics:executionContext:sharedUserID:completion:");
}

id objc_msgSend_getProductType(void *a1, const char *a2, ...)
{
  return _[a1 getProductType];
}

id objc_msgSend_getProperties(void *a1, const char *a2, ...)
{
  return _[a1 getProperties];
}

id objc_msgSend_getProximity(void *a1, const char *a2, ...)
{
  return _[a1 getProximity];
}

id objc_msgSend_getProxyGroupPlayerStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getProxyGroupPlayerStateWithCompletion:");
}

id objc_msgSend_getQualityReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getQualityReport:");
}

id objc_msgSend_getReason(void *a1, const char *a2, ...)
{
  return _[a1 getReason];
}

id objc_msgSend_getRecordedAudioDirectoryPathsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRecordedAudioDirectoryPathsWithCompletion:");
}

id objc_msgSend_getRedactedContextForContextSnapshot_metadata_privacyPolicy_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:");
}

id objc_msgSend_getRemoteMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRemoteMetrics:");
}

id objc_msgSend_getRouteIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRouteIdentifierWithCompletion:");
}

id objc_msgSend_getSNConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSNConnectionMetrics:");
}

id objc_msgSend_getSNConnectionMetrics_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSNConnectionMetrics:completion:");
}

id objc_msgSend_getSectionInfoForActiveSectionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSectionInfoForActiveSectionsWithCompletion:");
}

id objc_msgSend_getSectionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSectionInfoWithCompletion:");
}

id objc_msgSend_getSequence(void *a1, const char *a2, ...)
{
  return _[a1 getSequence];
}

id objc_msgSend_getSequenceNumber(void *a1, const char *a2, ...)
{
  return _[a1 getSequenceNumber];
}

id objc_msgSend_getSerializedDeviceContextSnapshotIncludingKeys_excludingMandatoryKeys_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSerializedDeviceContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:");
}

id objc_msgSend_getSessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSessionInfo:");
}

id objc_msgSend_getSharedCompanionInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedCompanionInfoWithCompletion:");
}

id objc_msgSend_getSharedDataForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedDataForPeer:");
}

id objc_msgSend_getSharedDataFromPeerUseCache_allowCloudMessaging_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedDataFromPeerUseCache:allowCloudMessaging:completion:");
}

id objc_msgSend_getSharedDataFromPeerUseCache_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedDataFromPeerUseCache:completion:");
}

id objc_msgSend_getSharedDataFromPeers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedDataFromPeers:completion:");
}

id objc_msgSend_getSharedUserIdForHomeUserId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedUserIdForHomeUserId:completion:");
}

id objc_msgSend_getSharedUserIdForShareOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedUserIdForShareOwnerName:");
}

id objc_msgSend_getSharedUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 getSharedUserIdentifier];
}

id objc_msgSend_getSharedUserInfoForiCloudAltDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSharedUserInfoForiCloudAltDSID:completion:");
}

id objc_msgSend_getSidekickBoostsFileWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSidekickBoostsFileWithCompletion:");
}

id objc_msgSend_getSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSignature:");
}

id objc_msgSend_getSiriDataSharingOptInStatus(void *a1, const char *a2, ...)
{
  return _[a1 getSiriDataSharingOptInStatus];
}

id objc_msgSend_getSiriOutputVolumeForAudioRoute_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSiriOutputVolumeForAudioRoute:completion:");
}

id objc_msgSend_getSiriOutputVolumeForAudioRoute_withName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSiriOutputVolumeForAudioRoute:withName:completion:");
}

id objc_msgSend_getSiriRequestForClientBoundAceCommand_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSiriRequestForClientBoundAceCommand:completionHandler:");
}

id objc_msgSend_getSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 getSnapshot];
}

id objc_msgSend_getSnapshotWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSnapshotWithCompletion:");
}

id objc_msgSend_getSnapshotsByDeviceIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSnapshotsByDeviceIdentifierWithCompletion:");
}

id objc_msgSend_getSnapshotsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSnapshotsWithCompletion:");
}

id objc_msgSend_getSocket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSocket:");
}

id objc_msgSend_getSocketForConnection_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSocketForConnection:completion:");
}

id objc_msgSend_getSpeakerCapabilityForAccessoryWithUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSpeakerCapabilityForAccessoryWithUUID:completionHandler:");
}

id objc_msgSend_getSpeechRecorderVTSatScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSpeechRecorderVTSatScore:");
}

id objc_msgSend_getStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStateWithCompletion:");
}

id objc_msgSend_getStereoPartnerIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStereoPartnerIdentifierWithCompletion:");
}

id objc_msgSend_getSubscriptionStatusForUserIdentity_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusForUserIdentity:withCompletionHandler:");
}

id objc_msgSend_getSubscriptionStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusWithCompletionHandler:");
}

id objc_msgSend_getSyncTokenForAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSyncTokenForAceHost:");
}

id objc_msgSend_getSyncTokenForAssistantId_aceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSyncTokenForAssistantId:aceHost:");
}

id objc_msgSend_getSyncableSharedUserIdsForSharedUserIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSyncableSharedUserIdsForSharedUserIds:");
}

id objc_msgSend_getSynthesisVoiceMatching_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSynthesisVoiceMatching:reply:");
}

id objc_msgSend_getTimerSnapshotWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTimerSnapshotWithCompletion:");
}

id objc_msgSend_getTimerWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTimerWithCompletionHandler:");
}

id objc_msgSend_getTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 getTimestamp];
}

id objc_msgSend_getTokenForcingRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTokenForcingRefresh:completion:");
}

id objc_msgSend_getTokenStatusForcingRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTokenStatusForcingRefresh:completion:");
}

id objc_msgSend_getTransportOptions(void *a1, const char *a2, ...)
{
  return _[a1 getTransportOptions];
}

id objc_msgSend_getTrialEnables_doubleFactors_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTrialEnables:doubleFactors:withCompletion:");
}

id objc_msgSend_getType(void *a1, const char *a2, ...)
{
  return _[a1 getType];
}

id objc_msgSend_getUUID(void *a1, const char *a2, ...)
{
  return _[a1 getUUID];
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_getUserAssignedDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 getUserAssignedDeviceName];
}

id objc_msgSend_getUserIDForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUserIDForDevice:");
}

id objc_msgSend_getUserIdentityClassification(void *a1, const char *a2, ...)
{
  return _[a1 getUserIdentityClassification];
}

id objc_msgSend_getUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 getUserInfo];
}

id objc_msgSend_getUserInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 getUserInterfaceIdiom];
}

id objc_msgSend_getUserPreferredVoiceTriggerPhraseTypeForDeviceType_endpointId_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUserPreferredVoiceTriggerPhraseTypeForDeviceType:endpointId:error:");
}

id objc_msgSend_getUsesOnDemandConnection(void *a1, const char *a2, ...)
{
  return _[a1 getUsesOnDemandConnection];
}

id objc_msgSend_getValidOutputVoiceWithDialects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValidOutputVoiceWithDialects:");
}

id objc_msgSend_getVoiceSettingsForHomeMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVoiceSettingsForHomeMembers:");
}

id objc_msgSend_getVolume_category_mode_route_deviceIdentifier_routeSubtype_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolume:category:mode:route:deviceIdentifier:routeSubtype:");
}

id objc_msgSend_getVolumeCapacity(void *a1, const char *a2, ...)
{
  return _[a1 getVolumeCapacity];
}

id objc_msgSend_getVolumeForTTSType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolumeForTTSType:");
}

id objc_msgSend_getVolumeServiceUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolumeServiceUsingBlock:");
}

id objc_msgSend_getiTunesStoreFrontIdentifierWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getiTunesStoreFrontIdentifierWithCompletion:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_globalTimeout(void *a1, const char *a2, ...)
{
  return _[a1 globalTimeout];
}

id objc_msgSend_goalValue(void *a1, const char *a2, ...)
{
  return _[a1 goalValue];
}

id objc_msgSend_greaterThanOrEqualToQueryCriterionWithColumnName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greaterThanOrEqualToQueryCriterionWithColumnName:value:");
}

id objc_msgSend_greaterThanQueryCriterionWithColumnName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greaterThanQueryCriterionWithColumnName:value:");
}

id objc_msgSend_groupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 groupIdentifier];
}

id objc_msgSend_groups(void *a1, const char *a2, ...)
{
  return _[a1 groups];
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handle_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handle:fromPeer:completion:");
}

id objc_msgSend_handleAceCommand_afterCurrentRequest_waitForResponse_withDelegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:");
}

id objc_msgSend_handleAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAnnouncementRequest:");
}

id objc_msgSend_handleAssistantDismissed(void *a1, const char *a2, ...)
{
  return _[a1 handleAssistantDismissed];
}

id objc_msgSend_handleCloudKitError_forZone_mirror_operationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCloudKitError:forZone:mirror:operationType:");
}

id objc_msgSend_handleCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:");
}

id objc_msgSend_handleCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:completion:");
}

id objc_msgSend_handleCommand_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:completionHandler:");
}

id objc_msgSend_handleCommand_executionContextInfo_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:executionContextInfo:reply:");
}

id objc_msgSend_handleCommand_forDomain_executionContext_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:forDomain:executionContext:reply:");
}

id objc_msgSend_handleCommand_withExecutionContextMatchingInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommand:withExecutionContextMatchingInfo:completion:");
}

id objc_msgSend_handleCommandFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCommandFailed:");
}

id objc_msgSend_handleDeviceFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceFound:");
}

id objc_msgSend_handleDeviceLost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceLost:");
}

id objc_msgSend_handleDidSetAudioSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDidSetAudioSessionActive:");
}

id objc_msgSend_handleExternalActivationRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleExternalActivationRequest:completion:");
}

id objc_msgSend_handleFailedStartPlaybackWithDestination_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailedStartPlaybackWithDestination:completion:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleGenericAceCommand_withDelegate_interruptOutstandingRequest_targetReplyQueue_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGenericAceCommand:withDelegate:interruptOutstandingRequest:targetReplyQueue:reply:");
}

id objc_msgSend_handleHomeAnnouncementSnapshotUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHomeAnnouncementSnapshotUpdate:");
}

id objc_msgSend_handleIntent_inBackgroundAppWithBundleId_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIntent:inBackgroundAppWithBundleId:reply:");
}

id objc_msgSend_handleIntentForwardingAction_inBackgroundApplicationWithBundleIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:");
}

id objc_msgSend_handleMessage_messageType_fromDeviceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMessage:messageType:fromDeviceWithIdentifier:completion:");
}

id objc_msgSend_handleMuxTokenExchangeMessage_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMuxTokenExchangeMessage:fromPeer:completion:");
}

id objc_msgSend_handleRateLimitedError_forZoneInfo_operationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRateLimitedError:forZoneInfo:operationType:");
}

id objc_msgSend_handleReceivedArbitrationParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedArbitrationParticipation:");
}

id objc_msgSend_handleRemoteAnnounceRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteAnnounceRequest:completion:");
}

id objc_msgSend_handleRemoteDismissRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteDismissRequest:completion:");
}

id objc_msgSend_handleRemoteSpeechRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteSpeechRequest:completion:");
}

id objc_msgSend_handleResponse_toCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResponse:toCommand:completion:");
}

id objc_msgSend_handleRetrySearch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRetrySearch:");
}

id objc_msgSend_handleSearchCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSearchCompleted:");
}

id objc_msgSend_handleSharedDBCloudKitError_operationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSharedDBCloudKitError:operationType:");
}

id objc_msgSend_handleSharingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSharingError:");
}

id objc_msgSend_handleSiriRequest_deliveryHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSiriRequest:deliveryHandler:completionHandler:");
}

id objc_msgSend_handleSpeechRecognized_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSpeechRecognized:completion:");
}

id objc_msgSend_handleSpeechServerEndpointIdentified_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSpeechServerEndpointIdentified:completion:");
}

id objc_msgSend_handleSyncChunkInfo_withSyncInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSyncChunkInfo:withSyncInfo:completion:");
}

id objc_msgSend_handleWillSetAudioSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWillSetAudioSessionActive:");
}

id objc_msgSend_handoffData(void *a1, const char *a2, ...)
{
  return _[a1 handoffData];
}

id objc_msgSend_handoffNotification(void *a1, const char *a2, ...)
{
  return _[a1 handoffNotification];
}

id objc_msgSend_handoffOriginDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 handoffOriginDeviceName];
}

id objc_msgSend_handoffPayload(void *a1, const char *a2, ...)
{
  return _[a1 handoffPayload];
}

id objc_msgSend_handoffRequestData(void *a1, const char *a2, ...)
{
  return _[a1 handoffRequestData];
}

id objc_msgSend_handoffRequiresUserInteraction(void *a1, const char *a2, ...)
{
  return _[a1 handoffRequiresUserInteraction];
}

id objc_msgSend_handoffURLString(void *a1, const char *a2, ...)
{
  return _[a1 handoffURLString];
}

id objc_msgSend_handoffUrlString(void *a1, const char *a2, ...)
{
  return _[a1 handoffUrlString];
}

id objc_msgSend_handshakeRequestWithCertificateData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handshakeRequestWithCertificateData:error:");
}

id objc_msgSend_hasActiveAudioSessionAssertions(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveAudioSessionAssertions];
}

id objc_msgSend_hasActiveSessionForSendingMetrics(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveSessionForSendingMetrics];
}

id objc_msgSend_hasAnyDiscoveryFlags(void *a1, const char *a2, ...)
{
  return _[a1 hasAnyDiscoveryFlags];
}

id objc_msgSend_hasAssociatedNetworkWithRSSI_andSNR_andCCA_andPhyMode_andChannelInfo_isCaptive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAssociatedNetworkWithRSSI:andSNR:andCCA:andPhyMode:andChannelInfo:isCaptive:");
}

id objc_msgSend_hasAttemptCount(void *a1, const char *a2, ...)
{
  return _[a1 hasAttemptCount];
}

id objc_msgSend_hasAttendees(void *a1, const char *a2, ...)
{
  return _[a1 hasAttendees];
}

id objc_msgSend_hasAudioSessionActivationDelay(void *a1, const char *a2, ...)
{
  return _[a1 hasAudioSessionActivationDelay];
}

id objc_msgSend_hasAuthenticationCapability(void *a1, const char *a2, ...)
{
  return _[a1 hasAuthenticationCapability];
}

id objc_msgSend_hasBeenFulfilled(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenFulfilled];
}

id objc_msgSend_hasConnectedSubflowCount(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectedSubflowCount];
}

id objc_msgSend_hasConnectionEdgeIDName(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectionEdgeIDName];
}

id objc_msgSend_hasConnectionEdgeType(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectionEdgeType];
}

id objc_msgSend_hasConnectionFallbackReason(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectionFallbackReason];
}

id objc_msgSend_hasConnectionMethodName(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectionMethodName];
}

id objc_msgSend_hasConnectionPolicyFailed(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectionPolicyFailed];
}

id objc_msgSend_hasContent(void *a1, const char *a2, ...)
{
  return _[a1 hasContent];
}

id objc_msgSend_hasDaysWithTwoAssistantSpeechRequestsPerWeek(void *a1, const char *a2, ...)
{
  return _[a1 hasDaysWithTwoAssistantSpeechRequestsPerWeek];
}

id objc_msgSend_hasEligibleSetup(void *a1, const char *a2, ...)
{
  return _[a1 hasEligibleSetup];
}

id objc_msgSend_hasEligibleSetupChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEligibleSetupChanged:");
}

id objc_msgSend_hasEligibleSetupChanged_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEligibleSetupChanged:onPlatform:");
}

id objc_msgSend_hasEqualOrHigherPrecedenceThanServiceRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEqualOrHigherPrecedenceThanServiceRecord:");
}

id objc_msgSend_hasEverSetLanguageCodeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEverSetLanguageCodeWithCompletion:");
}

id objc_msgSend_hasFailureType(void *a1, const char *a2, ...)
{
  return _[a1 hasFailureType];
}

id objc_msgSend_hasFiringAlarms(void *a1, const char *a2, ...)
{
  return _[a1 hasFiringAlarms];
}

id objc_msgSend_hasFiringTimers(void *a1, const char *a2, ...)
{
  return _[a1 hasFiringTimers];
}

id objc_msgSend_hasFirstByteReadInterval(void *a1, const char *a2, ...)
{
  return _[a1 hasFirstByteReadInterval];
}

id objc_msgSend_hasIOS(void *a1, const char *a2, ...)
{
  return _[a1 hasIOS];
}

id objc_msgSend_hasIncomingCallNotification(void *a1, const char *a2, ...)
{
  return _[a1 hasIncomingCallNotification];
}

id objc_msgSend_hasInterfaceName(void *a1, const char *a2, ...)
{
  return _[a1 hasInterfaceName];
}

id objc_msgSend_hasLocationData(void *a1, const char *a2, ...)
{
  return _[a1 hasLocationData];
}

id objc_msgSend_hasMetricsCount(void *a1, const char *a2, ...)
{
  return _[a1 hasMetricsCount];
}

id objc_msgSend_hasMissingRefContextsForId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMissingRefContextsForId:");
}

id objc_msgSend_hasNearbyPeer(void *a1, const char *a2, ...)
{
  return _[a1 hasNearbyPeer];
}

id objc_msgSend_hasOpenInterval(void *a1, const char *a2, ...)
{
  return _[a1 hasOpenInterval];
}

id objc_msgSend_hasOptedInHH2(void *a1, const char *a2, ...)
{
  return _[a1 hasOptedInHH2];
}

id objc_msgSend_hasOptedToHH2(void *a1, const char *a2, ...)
{
  return _[a1 hasOptedToHH2];
}

id objc_msgSend_hasPath(void *a1, const char *a2, ...)
{
  return _[a1 hasPath];
}

id objc_msgSend_hasPeer(void *a1, const char *a2, ...)
{
  return _[a1 hasPeer];
}

id objc_msgSend_hasPhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 hasPhoneNumber];
}

id objc_msgSend_hasPingCount(void *a1, const char *a2, ...)
{
  return _[a1 hasPingCount];
}

id objc_msgSend_hasPingMean(void *a1, const char *a2, ...)
{
  return _[a1 hasPingMean];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPresentedCompactVoiceTriggerDisclosure(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentedCompactVoiceTriggerDisclosure];
}

id objc_msgSend_hasPresentedCompactVoiceTriggerDiscoveryNotificationForBTDeviceWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPresentedCompactVoiceTriggerDiscoveryNotificationForBTDeviceWithAddress:");
}

id objc_msgSend_hasPrimarySubflowIface(void *a1, const char *a2, ...)
{
  return _[a1 hasPrimarySubflowIface];
}

id objc_msgSend_hasPrimarySubflowSwitchCount(void *a1, const char *a2, ...)
{
  return _[a1 hasPrimarySubflowSwitchCount];
}

id objc_msgSend_hasRelatedCommandForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRelatedCommandForRefId:");
}

id objc_msgSend_hasResultObjects(void *a1, const char *a2, ...)
{
  return _[a1 hasResultObjects];
}

id objc_msgSend_hasResultObjectsForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasResultObjectsForRequestId:");
}

id objc_msgSend_hasRttBest(void *a1, const char *a2, ...)
{
  return _[a1 hasRttBest];
}

id objc_msgSend_hasRttCurrent(void *a1, const char *a2, ...)
{
  return _[a1 hasRttCurrent];
}

id objc_msgSend_hasRttSmoothed(void *a1, const char *a2, ...)
{
  return _[a1 hasRttSmoothed];
}

id objc_msgSend_hasRttVariance(void *a1, const char *a2, ...)
{
  return _[a1 hasRttVariance];
}

id objc_msgSend_hasRxBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasRxBytes];
}

id objc_msgSend_hasRxDuplicateBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasRxDuplicateBytes];
}

id objc_msgSend_hasRxOooBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasRxOooBytes];
}

id objc_msgSend_hasRxPackets(void *a1, const char *a2, ...)
{
  return _[a1 hasRxPackets];
}

id objc_msgSend_hasSessionRequiringServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 hasSessionRequiringServerConnection];
}

id objc_msgSend_hasSetUpAccountStatusRecordZoneSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasSetUpAccountStatusRecordZoneSubscription];
}

id objc_msgSend_hasSetUpKeyValueRecordZoneSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasSetUpKeyValueRecordZoneSubscription];
}

id objc_msgSend_hasSetUpMultiUserSharedRecordZoneSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasSetUpMultiUserSharedRecordZoneSubscription];
}

id objc_msgSend_hasSetUpRecordZoneSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasSetUpRecordZoneSubscription];
}

id objc_msgSend_hasSndBandwidth(void *a1, const char *a2, ...)
{
  return _[a1 hasSndBandwidth];
}

id objc_msgSend_hasSubflowCount(void *a1, const char *a2, ...)
{
  return _[a1 hasSubflowCount];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasSynRetransmits(void *a1, const char *a2, ...)
{
  return _[a1 hasSynRetransmits];
}

id objc_msgSend_hasTestUserSelectionScores(void *a1, const char *a2, ...)
{
  return _[a1 hasTestUserSelectionScores];
}

id objc_msgSend_hasTfoSynDataAcked(void *a1, const char *a2, ...)
{
  return _[a1 hasTfoSynDataAcked];
}

id objc_msgSend_hasTimeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 hasTimeIntervalSince1970];
}

id objc_msgSend_hasTuscanyConnectionDelay(void *a1, const char *a2, ...)
{
  return _[a1 hasTuscanyConnectionDelay];
}

id objc_msgSend_hasTxBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasTxBytes];
}

id objc_msgSend_hasTxPackets(void *a1, const char *a2, ...)
{
  return _[a1 hasTxPackets];
}

id objc_msgSend_hasTxRetransmitBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasTxRetransmitBytes];
}

id objc_msgSend_hasTxUnacked(void *a1, const char *a2, ...)
{
  return _[a1 hasTxUnacked];
}

id objc_msgSend_hasUnacknowledgedPingCount(void *a1, const char *a2, ...)
{
  return _[a1 hasUnacknowledgedPingCount];
}

id objc_msgSend_hasUsefulnessScore(void *a1, const char *a2, ...)
{
  return _[a1 hasUsefulnessScore];
}

id objc_msgSend_hasValidCurrentUserSeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValidCurrentUserSeed:");
}

id objc_msgSend_hasValidDiscoveryTypeForLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValidDiscoveryTypeForLocalDevice:");
}

id objc_msgSend_hasValidNextUserSeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValidNextUserSeed:");
}

id objc_msgSend_hasWatchOS(void *a1, const char *a2, ...)
{
  return _[a1 hasWatchOS];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashedRouteUID(void *a1, const char *a2, ...)
{
  return _[a1 hashedRouteUID];
}

id objc_msgSend_hashedRouteUIDs(void *a1, const char *a2, ...)
{
  return _[a1 hashedRouteUIDs];
}

id objc_msgSend_headGestureConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 headGestureConfiguration];
}

id objc_msgSend_headGestureConfigurationForBTAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headGestureConfigurationForBTAddress:");
}

id objc_msgSend_headGestureToggle(void *a1, const char *a2, ...)
{
  return _[a1 headGestureToggle];
}

id objc_msgSend_headphonesManager(void *a1, const char *a2, ...)
{
  return _[a1 headphonesManager];
}

id objc_msgSend_headsetAddress(void *a1, const char *a2, ...)
{
  return _[a1 headsetAddress];
}

id objc_msgSend_headsetId(void *a1, const char *a2, ...)
{
  return _[a1 headsetId];
}

id objc_msgSend_headsetName(void *a1, const char *a2, ...)
{
  return _[a1 headsetName];
}

id objc_msgSend_heardVoiceTrigger(void *a1, const char *a2, ...)
{
  return _[a1 heardVoiceTrigger];
}

id objc_msgSend_heardVoiceTriggerMetadata(void *a1, const char *a2, ...)
{
  return _[a1 heardVoiceTriggerMetadata];
}

id objc_msgSend_heartBeatFiredWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heartBeatFiredWithQueue:");
}

id objc_msgSend_heartbeatTimer(void *a1, const char *a2, ...)
{
  return _[a1 heartbeatTimer];
}

id objc_msgSend_hexStringFromBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hexStringFromBytes:length:");
}

id objc_msgSend_hexStringFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hexStringFromData:");
}

id objc_msgSend_historicalContextMetadataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historicalContextMetadataForKey:");
}

id objc_msgSend_historyBufferSize(void *a1, const char *a2, ...)
{
  return _[a1 historyBufferSize];
}

id objc_msgSend_historyConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 historyConfiguration];
}

id objc_msgSend_hmf_UUIDWithNamespace_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hmf_UUIDWithNamespace:data:");
}

id objc_msgSend_hmf_isEqualToUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hmf_isEqualToUUID:");
}

id objc_msgSend_holdToTalkThresholdInMilliseconds(void *a1, const char *a2, ...)
{
  return _[a1 holdToTalkThresholdInMilliseconds];
}

id objc_msgSend_home(void *a1, const char *a2, ...)
{
  return _[a1 home];
}

id objc_msgSend_homeAccessoryInfo(void *a1, const char *a2, ...)
{
  return _[a1 homeAccessoryInfo];
}

id objc_msgSend_homeAnnouncement(void *a1, const char *a2, ...)
{
  return _[a1 homeAnnouncement];
}

id objc_msgSend_homeAnnouncementSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 homeAnnouncementSnapshot];
}

id objc_msgSend_homeAutomationServerFlowBypassed(void *a1, const char *a2, ...)
{
  return _[a1 homeAutomationServerFlowBypassed];
}

id objc_msgSend_homeButtonDownEventTime(void *a1, const char *a2, ...)
{
  return _[a1 homeButtonDownEventTime];
}

id objc_msgSend_homeId(void *a1, const char *a2, ...)
{
  return _[a1 homeId];
}

id objc_msgSend_homeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeIdentifier];
}

id objc_msgSend_homeInfoManager_didUpdateCurrentAccessoryInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homeInfoManager:didUpdateCurrentAccessoryInfo:");
}

id objc_msgSend_homeKitAccessoryIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeKitAccessoryIdentifier];
}

id objc_msgSend_homeKitIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeKitIdentifier];
}

id objc_msgSend_homeKitMediaSystemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 homeKitMediaSystemIdentifier];
}

id objc_msgSend_homeKitRoomName(void *a1, const char *a2, ...)
{
  return _[a1 homeKitRoomName];
}

id objc_msgSend_homeMemberSettings(void *a1, const char *a2, ...)
{
  return _[a1 homeMemberSettings];
}

id objc_msgSend_homeMembers(void *a1, const char *a2, ...)
{
  return _[a1 homeMembers];
}

id objc_msgSend_homeUserIdToNames(void *a1, const char *a2, ...)
{
  return _[a1 homeUserIdToNames];
}

id objc_msgSend_homeUserUUID(void *a1, const char *a2, ...)
{
  return _[a1 homeUserUUID];
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _[a1 homes];
}

id objc_msgSend_horizontalAccuracy(void *a1, const char *a2, ...)
{
  return _[a1 horizontalAccuracy];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostTime(void *a1, const char *a2, ...)
{
  return _[a1 hostTime];
}

id objc_msgSend_hostname(void *a1, const char *a2, ...)
{
  return _[a1 hostname];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_hourOfDay(void *a1, const char *a2, ...)
{
  return _[a1 hourOfDay];
}

id objc_msgSend_hourUnit(void *a1, const char *a2, ...)
{
  return _[a1 hourUnit];
}

id objc_msgSend_iCloudAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 iCloudAltDSID];
}

id objc_msgSend_ic_DSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_DSID");
}

id objc_msgSend_ic_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_sharedAccountStore");
}

id objc_msgSend_ic_storeAccountForHomeUserIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_storeAccountForHomeUserIdentifier:completion:");
}

id objc_msgSend_idWhenNotPartOfHome(void *a1, const char *a2, ...)
{
  return _[a1 idWhenNotPartOfHome];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifiers(void *a1, const char *a2, ...)
{
  return _[a1 identifiers];
}

id objc_msgSend_idsDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIdentifier];
}

id objc_msgSend_idsDeviceUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceUniqueIdentifier];
}

id objc_msgSend_idsDeviceUniqueIdentifierForDeviceWithAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceUniqueIdentifierForDeviceWithAssistantId:");
}

id objc_msgSend_idsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsIdentifier];
}

id objc_msgSend_idsPersonalDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsPersonalDeviceIdentifier];
}

id objc_msgSend_ignoreLocationWiFiStatus(void *a1, const char *a2, ...)
{
  return _[a1 ignoreLocationWiFiStatus];
}

id objc_msgSend_ignoreMyriadEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreMyriadEvents:");
}

id objc_msgSend_ignoreNextNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreNextNotification:");
}

id objc_msgSend_ignoreServerManualEndpointingThreshold(void *a1, const char *a2, ...)
{
  return _[a1 ignoreServerManualEndpointingThreshold];
}

id objc_msgSend_immediateScheduler(void *a1, const char *a2, ...)
{
  return _[a1 immediateScheduler];
}

id objc_msgSend_implementsCommand_forDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "implementsCommand:forDomain:");
}

id objc_msgSend_inEarDetectionStateDidChangeForBTAddress_fromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inEarDetectionStateDidChangeForBTAddress:fromState:toState:");
}

id objc_msgSend_inEarDetectionStateDidChangeForBTAddress_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inEarDetectionStateDidChangeForBTAddress:toState:");
}

id objc_msgSend_inProgressOutputVoice(void *a1, const char *a2, ...)
{
  return _[a1 inProgressOutputVoice];
}

id objc_msgSend_inTransaction(void *a1, const char *a2, ...)
{
  return _[a1 inTransaction];
}

id objc_msgSend_inactiveDeviceThreshold(void *a1, const char *a2, ...)
{
  return _[a1 inactiveDeviceThreshold];
}

id objc_msgSend_inchUnit(void *a1, const char *a2, ...)
{
  return _[a1 inchUnit];
}

id objc_msgSend_includesFamily(void *a1, const char *a2, ...)
{
  return _[a1 includesFamily];
}

id objc_msgSend_includesHome(void *a1, const char *a2, ...)
{
  return _[a1 includesHome];
}

id objc_msgSend_includesRemoraDevices(void *a1, const char *a2, ...)
{
  return _[a1 includesRemoraDevices];
}

id objc_msgSend_includesSleepAlarms(void *a1, const char *a2, ...)
{
  return _[a1 includesSleepAlarms];
}

id objc_msgSend_incomingCall(void *a1, const char *a2, ...)
{
  return _[a1 incomingCall];
}

id objc_msgSend_incomingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 incomingResponseIdentifier];
}

id objc_msgSend_incomingVideoCall(void *a1, const char *a2, ...)
{
  return _[a1 incomingVideoCall];
}

id objc_msgSend_increaseSequenceNumber(void *a1, const char *a2, ...)
{
  return _[a1 increaseSequenceNumber];
}

id objc_msgSend_incrementalChanges(void *a1, const char *a2, ...)
{
  return _[a1 incrementalChanges];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return _[a1 info];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoForThisDevice(void *a1, const char *a2, ...)
{
  return _[a1 infoForThisDevice];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_init_sharedUserId_loggableSharedUserId_iCloudAltDSID_attribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:sharedUserId:loggableSharedUserId:iCloudAltDSID:attribute:");
}

id objc_msgSend_init_timeStamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:timeStamp:");
}

id objc_msgSend_initAndAdopt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAndAdopt:");
}

id objc_msgSend_initAndAdopt_andSwitchedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAndAdopt:andSwitchedCount:");
}

id objc_msgSend_initFileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:");
}

id objc_msgSend_initFileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:isDirectory:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initOnQueue_account_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOnQueue:account:instanceContext:");
}

id objc_msgSend_initOnQueue_withAccount_languageCode_connectionMode_sharedUserIdentifier_loggingSharedUserIdentifier_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOnQueue:withAccount:languageCode:connectionMode:sharedUserIdentifier:loggingSharedUserIdentifier:instanceContext:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initSocketWithDevice_options_completionHandler_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initSocketWithDevice:options:completionHandler:queue:");
}

id objc_msgSend_initWithAFPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAFPeerInfo:");
}

id objc_msgSend_initWithAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountIdentifier:");
}

id objc_msgSend_initWithAceVersion_assistantIdentifier_buildVersion_productType_sharedUserIdentifier_userAssignedDeviceName_userInterfaceIdiom_isLocationSharingDevice_homeAccessoryInfo_isSiriCloudSyncEnabled_myriadTrialTreatment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAceVersion:assistantIdentifier:buildVersion:productType:sharedUserIdentifier:userAssignedDeviceName:userInterfaceIdiom:isLocationSharingDevice:homeAccessoryInfo:isSiriCloudSyncEnabled:myriadTrialTreatment:");
}

id objc_msgSend_initWithActivationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivationEvent:");
}

id objc_msgSend_initWithAddress_cbuuid_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAddress:cbuuid:dataSource:");
}

id objc_msgSend_initWithAddress_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAddress:dataSource:");
}

id objc_msgSend_initWithAddress_dataSource_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAddress:dataSource:queue:");
}

id objc_msgSend_initWithAggregationId_effectiveFrom_validityDays_createdOn_adoptedOn_switchedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAggregationId:effectiveFrom:validityDays:createdOn:adoptedOn:switchedCount:");
}

id objc_msgSend_initWithAllowsAWDL_allowsBLE_allowsInfraWiFi_allowsBTPipe_allowsForceBLE_allowsForceAWDL_noL2Cap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAllowsAWDL:allowsBLE:allowsInfraWiFi:allowsBTPipe:allowsForceBLE:allowsForceAWDL:noL2Cap:");
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:");
}

id objc_msgSend_initWithAnchor_forcingReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnchor:forcingReset:");
}

id objc_msgSend_initWithAppIdentifier_intentString_utterance_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppIdentifier:intentString:utterance:info:");
}

id objc_msgSend_initWithApplicationContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationContexts:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssistantID_speechID_idsIdentifier_productPrefix_aceHost_syncMetadata_syncMetadataCapability_peerToPeerHandoffCapability_muxSupportCapability_meDevice_siriLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssistantID:speechID:idsIdentifier:productPrefix:aceHost:syncMetadata:syncMetadataCapability:peerToPeerHandoffCapability:muxSupportCapability:meDevice:siriLanguage:");
}

id objc_msgSend_initWithAssociatedBundleIdentifier_bulletin_aceContext_contextDictionary_aceContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:aceContexts:");
}

id objc_msgSend_initWithAttendingType_startAttendingHostTime_useVAD_useOwnVoiceVAD_useBoron_startOfSpeechThresholdInMs_prependAudioDuration_timeoutThresholdInSec_triggerType_audioStreamHoldingDurationInSec_audioRecordType_deviceId_attendingListeningType_pauseDurationThreshold_maxPauseDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttendingType:startAttendingHostTime:useVAD:useOwnVoiceVAD:useBoron:startOfSpeechThresholdInMs:prependAudioDuration:timeoutThresholdInSec:triggerType:audioStreamHoldingDurationInSec:audioRecordType:deviceId:attendingListeningType:pauseDurationThreshold:maxPauseDelay:");
}

id objc_msgSend_initWithAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttribute:");
}

id objc_msgSend_initWithAudioDataFolders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAudioDataFolders:");
}

id objc_msgSend_initWithAudioDataFolders_samplingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAudioDataFolders:samplingType:");
}

id objc_msgSend_initWithAudioDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAudioDeviceID:");
}

id objc_msgSend_initWithAudioSessionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAudioSessionController:");
}

id objc_msgSend_initWithBMHomeSeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBMHomeSeed:");
}

id objc_msgSend_initWithBMUserAggregationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBMUserAggregationId:");
}

id objc_msgSend_initWithBMUserSeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBMUserSeed:");
}

id objc_msgSend_initWithBase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase:");
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:");
}

id objc_msgSend_initWithBlock_defaultValue1_defaultValue2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:defaultValue1:defaultValue2:");
}

id objc_msgSend_initWithBlock_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:defaultValue:");
}

id objc_msgSend_initWithBoolValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBoolValue:");
}

id objc_msgSend_initWithBridgeConnectionListeners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBridgeConnectionListeners:");
}

id objc_msgSend_initWithBridgeName_machService_withServiceInterface_withDelegateInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBridgeName:machService:withServiceInterface:withDelegateInterface:");
}

id objc_msgSend_initWithBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBuilder:");
}

id objc_msgSend_initWithBundleID_path_canDonateOnBehalfOfApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleID:path:canDonateOnBehalfOfApps:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundlePath_infoDictionary_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundlePath:infoDictionary:instanceContext:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCall_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:completion:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChannel_speechController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChannel:speechController:");
}

id objc_msgSend_initWithClientBoundCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientBoundCommand:");
}

id objc_msgSend_initWithClientFetchRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientFetchRequest:completion:");
}

id objc_msgSend_initWithColumnNames_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithColumnNames:mode:");
}

id objc_msgSend_initWithCommandType_requestTransformer_responseTransformer_requestHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandType:requestTransformer:responseTransformer:requestHandler:");
}

id objc_msgSend_initWithComponentId_andBlockOnConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithComponentId:andBlockOnConfiguration:");
}

id objc_msgSend_initWithConfigurationIdentifier_configurationURL_maxTimeToSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfigurationIdentifier:configurationURL:maxTimeToSync:");
}

id objc_msgSend_initWithConfigurationIdentifier_configurationVersion_deploymentGroupIdentifier_deploymentGroupProperties_deploymentReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:");
}

id objc_msgSend_initWithConnection_bundleIdentifier_notificationCategories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:bundleIdentifier:notificationCategories:");
}

id objc_msgSend_initWithConnectionInfo_connectionQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionInfo:connectionQueue:");
}

id objc_msgSend_initWithContainer_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainer:queue:");
}

id objc_msgSend_initWithContainerID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:options:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:referenceFrame:");
}

id objc_msgSend_initWithCurrent_andNext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCurrent:andNext:");
}

id objc_msgSend_initWithCurrentUserSeed_currentUserSeedExpirationDate_nextUserSeed_nextUserSeedEffectiveFromDate_nextUserSeedExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCurrentUserSeed:currentUserSeedExpirationDate:nextUserSeed:nextUserSeedEffectiveFromDate:nextUserSeedExpirationDate:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDataSource_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:queue:");
}

id objc_msgSend_initWithDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataType:");
}

id objc_msgSend_initWithDataType_generation_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataType:generation:limit:");
}

id objc_msgSend_initWithDataTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataTypes:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_instanceUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:instanceUUID:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDelegate_queue_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:options:");
}

id objc_msgSend_initWithDeliveryStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeliveryStream:");
}

id objc_msgSend_initWithDeliveryStream_type_timestamp_contextDataType_contextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeliveryStream:type:timestamp:contextDataType:contextData:");
}

id objc_msgSend_initWithDeviceIDPair_proximity_observationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceIDPair:proximity:observationDate:");
}

id objc_msgSend_initWithDeviceIdentifier_messagingService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceIdentifier:messagingService:");
}

id objc_msgSend_initWithDeviceUID_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:dataSource:");
}

id objc_msgSend_initWithDeviceUID_dataSource_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:dataSource:queue:");
}

id objc_msgSend_initWithDictation_codec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictation:codec:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionary_attribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:attribute:");
}

id objc_msgSend_initWithDictionary_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:copyItems:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDiscoveryOptions_transportOptions_connectionOptions_enablesProximityTracking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDiscoveryOptions:transportOptions:connectionOptions:enablesProximityTracking:");
}

id objc_msgSend_initWithDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchQueue:");
}

id objc_msgSend_initWithDispatchQueue_locationManager_isSiriLocationServicesPromptingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchQueue:locationManager:isSiriLocationServicesPromptingEnabled:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDomainName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomainName:");
}

id objc_msgSend_initWithDomainName_className_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomainName:className:");
}

id objc_msgSend_initWithDonationService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDonationService:");
}

id objc_msgSend_initWithDonationService_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDonationService:instanceContext:");
}

id objc_msgSend_initWithDonationService_instanceContext_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDonationService:instanceContext:queue:");
}

id objc_msgSend_initWithEffectiveBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveBundle:");
}

id objc_msgSend_initWithEffectiveBundle_delegate_onQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveBundle:delegate:onQueue:");
}

id objc_msgSend_initWithEffectiveBundlePath_delegate_onQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveBundlePath:delegate:onQueue:");
}

id objc_msgSend_initWithEffectiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveDate:");
}

id objc_msgSend_initWithEffectiveDate_expirationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffectiveDate:expirationDuration:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithErrorCode:");
}

id objc_msgSend_initWithEvent_streamUID_dateCreated_speechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEvent:streamUID:dateCreated:speechId:");
}

id objc_msgSend_initWithEvent_streamUID_dateCreated_speechId_recordId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEvent:streamUID:dateCreated:speechId:recordId:");
}

id objc_msgSend_initWithExecutionID_requestID_turnId_originPeerInfo_currentHomeInfo_endpointInfo_instanceInfo_speechInfo_requestHandlingContextSnapshot_deviceRestrictions_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExecutionID:requestID:turnId:originPeerInfo:currentHomeInfo:endpointInfo:instanceInfo:speechInfo:requestHandlingContextSnapshot:deviceRestrictions:userInfo:");
}

id objc_msgSend_initWithExperimentsByConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExperimentsByConfigurationIdentifier:");
}

id objc_msgSend_initWithExpirationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExpirationDuration:");
}

id objc_msgSend_initWithFileDescriptor_closeOnDealloc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileDescriptor:closeOnDealloc:");
}

id objc_msgSend_initWithFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileURL:");
}

id objc_msgSend_initWithFixedDeviceId_withUserEphemeralId_withUserAggregationId_withUserAggregationIdEffectiveFrom_withUserAggregationIdExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFixedDeviceId:withUserEphemeralId:withUserAggregationId:withUserAggregationIdEffectiveFrom:withUserAggregationIdExpiration:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithGMAvailabilityWrapperClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGMAvailabilityWrapperClass:");
}

id objc_msgSend_initWithGeneration_date_alarmsByID_notifiedFiringAlarmIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:");
}

id objc_msgSend_initWithGeneration_date_insertedOrUpdatedItems_deletedItemUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGeneration:date:insertedOrUpdatedItems:deletedItemUUIDs:");
}

id objc_msgSend_initWithGeneration_date_items_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGeneration:date:items:");
}

id objc_msgSend_initWithGeneration_date_timersByID_notifiedFiringTimerIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGeneration:date:timersByID:notifiedFiringTimerIDs:");
}

id objc_msgSend_initWithGenerationsByDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGenerationsByDataType:");
}

id objc_msgSend_initWithHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHelper:");
}

id objc_msgSend_initWithHomeEphemeralSeeds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeEphemeralSeeds:");
}

id objc_msgSend_initWithHomeIdentifier_activityNotificationsEnabledForPersonalRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeIdentifier:activityNotificationsEnabledForPersonalRequests:");
}

id objc_msgSend_initWithHomeIdentifier_seed_effectiveFrom_validityDays_createdOn_adoptedOn_switchedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomeIdentifier:seed:effectiveFrom:validityDays:createdOn:adoptedOn:switchedCount:");
}

id objc_msgSend_initWithHostTime_type_payloadBeginAudioSessionRequest_payloadBeginAudioSessionResponse_payloadKeepAudioSessionAliveRequest_payloadKeepAudioSessionAliveResponse_payloadEndAudioSessionRequest_payloadEndAudioSessionResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHostTime:type:payloadBeginAudioSessionRequest:payloadBeginAudioSessionResponse:payloadKeepAudioSessionAliveRequest:payloadKeepAudioSessionAliveResponse:payloadEndAudioSessionRequest:payloadEndAudioSessionResponse:");
}

id objc_msgSend_initWithIDSIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSIdentifer:");
}

id objc_msgSend_initWithIDSIdentifer_productType_buildVersion_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSIdentifer:productType:buildVersion:name:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_allocation_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:allocation:properties:");
}

id objc_msgSend_initWithIdentifier_assistantId_builder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:assistantId:builder:");
}

id objc_msgSend_initWithIdentifier_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:delegate:");
}

id objc_msgSend_initWithIdentifier_name_RSSI_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:name:RSSI:state:");
}

id objc_msgSend_initWithIdentifier_path_commandMap_anchorMap_clearingClass_maintenanceClass_instanceContext_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:path:commandMap:anchorMap:clearingClass:maintenanceClass:instanceContext:queue:");
}

id objc_msgSend_initWithIdentifier_queue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:queue:delegate:");
}

id objc_msgSend_initWithIdentifier_queue_effectiveDate_expirationDuration_heartBeatInterval_heartBeatHandler_invalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:");
}

id objc_msgSend_initWithIncrementalChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIncrementalChanges:");
}

id objc_msgSend_initWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInfo:");
}

id objc_msgSend_initWithInfo_content_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInfo:content:");
}

id objc_msgSend_initWithInstanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInstanceContext:");
}

id objc_msgSend_initWithInstanceContext_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInstanceContext:delegate:");
}

id objc_msgSend_initWithInstanceContext_deviceCircleManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInstanceContext:deviceCircleManager:");
}

id objc_msgSend_initWithInstanceContext_rapportLink_queue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInstanceContext:rapportLink:queue:delegate:");
}

id objc_msgSend_initWithInterfaceName_rttCurrent_rttSmoothed_rttVariance_rttBest_packetsSent_bytesSent_bytesRetransmitted_bytesUnacked_packetsReceived_bytesReceived_duplicateBytesReceived_outOfOrderBytesReceived_sendBufferBytes_sendBandwidth_synRetransmits_tfoSynDataAcked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBufferBytes:sendBandwidth:synRetransmits:tfoSynDataAcked:");
}

id objc_msgSend_initWithKeepsHistory_historyBufferSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeepsHistory:historyBufferSize:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithLanguage_assetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:assetType:");
}

id objc_msgSend_initWithLanguage_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:name:");
}

id objc_msgSend_initWithLanguage_requestIdentifier_dictationUIInteractionIdentifier_task_loggingContext_applicationName_profile_overrides_modelOverrideURL_originalAudioFileURL_codec_narrowband_detectUtterances_censorSpeech_farField_secureOfflineOnly_shouldStoreAudioOnDevice_continuousListening_shouldHandleCapitalization_isSpeechAPIRequest_maximumRecognitionDuration_endpointStart_inputOrigin_location_jitGrammar_deliverEagerPackage_disableDeliveringAsrFeatures_sharedUserIds_enableEmojiRecognition_enableAutoPunctuation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:requestIdentifier:dictationUIInteractionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:codec:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:continuousListening:shouldHandleCapitalization:isSpeechAPIRequest:maximumRecognitionDuration:endpointStart:inputOrigin:location:jitGrammar:deliverEagerPackage:disableDeliveringAsrFeatures:sharedUserIds:enableEmojiRecognition:enableAutoPunctuation:");
}

id objc_msgSend_initWithLanguageCode_gender_isCustom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguageCode:gender:isCustom:");
}

id objc_msgSend_initWithLanguageCode_gender_isCustom_name_footprint_contentVersion_masteredVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:");
}

id objc_msgSend_initWithLanguageCode_speechAssetManager_cdmClient_morphunAssetManager_supportsSiriUoD_supportsSiriHybridUoD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguageCode:speechAssetManager:cdmClient:morphunAssetManager:supportsSiriUoD:supportsSiriHybridUoD:");
}

id objc_msgSend_initWithLatitude_longitude_altitude_direction_speed_verticalAccuracy_horizontalAccuracy_preciseLocationEnabled_accessState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatitude:longitude:altitude:direction:speed:verticalAccuracy:horizontalAccuracy:preciseLocationEnabled:accessState:");
}

id objc_msgSend_initWithLaunchArguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLaunchArguments:");
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLength:");
}

id objc_msgSend_initWithLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLimit:");
}

id objc_msgSend_initWithListener_connection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListener:connection:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithLocaleIdentifier_clientID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:clientID:");
}

id objc_msgSend_initWithLocation_locationManagerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocation:locationManagerState:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithMatchType_value_negated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMatchType:value:negated:");
}

id objc_msgSend_initWithMissingReferences_forRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMissingReferences:forRequestId:");
}

id objc_msgSend_initWithMode_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:delegate:");
}

id objc_msgSend_initWithNSUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNSUUID:");
}

id objc_msgSend_initWithName_columns_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:columns:constraints:");
}

id objc_msgSend_initWithName_options_queue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:options:queue:delegate:");
}

id objc_msgSend_initWithName_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:queue:");
}

id objc_msgSend_initWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:reason:userInfo:");
}

id objc_msgSend_initWithName_tableName_columnNames_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:tableName:columnNames:options:");
}

id objc_msgSend_initWithName_type_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:type:constraints:");
}

id objc_msgSend_initWithName_version_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:version:identifier:");
}

id objc_msgSend_initWithNotification_appBundleId_appBundleIdOfLastAnnouncement_synchronousBurstIndex_isSameTypeAsLastAnnouncement_timeSinceLastAnnouncement_announcementPlatform_isMediaPlaying_isBobbleCapableAnnouncement_summaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotification:appBundleId:appBundleIdOfLastAnnouncement:synchronousBurstIndex:isSameTypeAsLastAnnouncement:timeSinceLastAnnouncement:announcementPlatform:isMediaPlaying:isBobbleCapableAnnouncement:summaries:");
}

id objc_msgSend_initWithNotification_appID_platform_summaryDecision_summary_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotification:appID:platform:summaryDecision:summary:completion:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:capacity:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPath_dataProtectionClass_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:dataProtectionClass:options:");
}

id objc_msgSend_initWithPath_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:options:");
}

id objc_msgSend_initWithPeerInfo_contextIdentifier_proximity_commandRelayProxyIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPeerInfo:contextIdentifier:proximity:commandRelayProxyIdentifier:error:");
}

id objc_msgSend_initWithPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlatform:");
}

id objc_msgSend_initWithPlaybackState_nowPlayingTimestamp_mediaType_groupIdentifier_isProxyGroupPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:isProxyGroupPlayer:");
}

id objc_msgSend_initWithPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPreviousServerChangeToken:");
}

id objc_msgSend_initWithProfileUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProfileUserId:");
}

id objc_msgSend_initWithProfileUserId_homeInfoManager_multiUserService_disableTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProfileUserId:homeInfoManager:multiUserService:disableTimer:");
}

id objc_msgSend_initWithPropagationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPropagationDelay:");
}

id objc_msgSend_initWithProtobufData_type_isResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobufData:type:isResponse:");
}

id objc_msgSend_initWithProvider_queue_frequency_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProvider:queue:frequency:delegate:");
}

id objc_msgSend_initWithPublishers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPublishers:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithQueue_calloutQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:calloutQueue:");
}

id objc_msgSend_initWithQueue_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:configuration:");
}

id objc_msgSend_initWithQueue_container_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:container:instanceContext:");
}

id objc_msgSend_initWithQueue_container_sharedZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:container:sharedZone:");
}

id objc_msgSend_initWithQueue_container_sharedZone_zoneOwner_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:container:sharedZone:zoneOwner:delegate:");
}

id objc_msgSend_initWithQueue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:delegate:");
}

id objc_msgSend_initWithQueue_deviceIdentifier_dataConsumersByType_dataProvidersByType_messageSenders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:deviceIdentifier:dataConsumersByType:dataProvidersByType:messageSenders:");
}

id objc_msgSend_initWithQueue_deviceIdentifier_timeoutDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:deviceIdentifier:timeoutDuration:completion:");
}

id objc_msgSend_initWithQueue_heartBeatInterval_timeoutInterval_timeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:heartBeatInterval:timeoutInterval:timeoutHandler:");
}

id objc_msgSend_initWithQueue_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:instanceContext:");
}

id objc_msgSend_initWithQueue_instanceContext_speechController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:instanceContext:speechController:");
}

id objc_msgSend_initWithQueue_speechController_audioSessionController_audioPlaybackService_experimentContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:speechController:audioSessionController:audioPlaybackService:experimentContext:");
}

id objc_msgSend_initWithQueue_stateManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:stateManager:");
}

id objc_msgSend_initWithQueue_volumeTracker_whaService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:volumeTracker:whaService:");
}

id objc_msgSend_initWithQueue_xpcConnection_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:xpcConnection:delegate:");
}

id objc_msgSend_initWithRapportLink_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRapportLink:queue:");
}

id objc_msgSend_initWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReason:");
}

id objc_msgSend_initWithRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordIDs:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithRecordType_recordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:recordID:");
}

id objc_msgSend_initWithRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneID:");
}

id objc_msgSend_initWithRecordZoneIDs_configurationsByRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:configurationsByRecordZoneID:");
}

id objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZonesToSave:recordZoneIDsToDelete:");
}

id objc_msgSend_initWithRecordingInfoProvider_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordingInfoProvider:instanceContext:");
}

id objc_msgSend_initWithRecordsToSave_recordIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordsToSave:recordIDsToDelete:");
}

id objc_msgSend_initWithRemote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRemote:");
}

id objc_msgSend_initWithRemoteAnnouncement_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRemoteAnnouncement:completion:");
}

id objc_msgSend_initWithRequest_replyCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:replyCommand:");
}

id objc_msgSend_initWithRequestDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDelegate:");
}

id objc_msgSend_initWithRequestDispatcher_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDispatcher:");
}

id objc_msgSend_initWithRequestDispatcherServiceHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDispatcherServiceHelper:");
}

id objc_msgSend_initWithRequestDispatcherServiceHelper_bridgeConnectionListeners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDispatcherServiceHelper:bridgeConnectionListeners:");
}

id objc_msgSend_initWithRequestID_inputDeviceID_inputAssistantID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestID:inputDeviceID:inputAssistantID:");
}

id objc_msgSend_initWithRouteDescription_hearingAidsAnnounceEnabled_builtInSpeakerAnnounceEnabled_ringerSwitchState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteDescription:hearingAidsAnnounceEnabled:builtInSpeakerAnnounceEnabled:ringerSwitchState:");
}

id objc_msgSend_initWithSeed_effectiveFrom_validityDays_createdOn_adoptedOn_switchedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSeed:effectiveFrom:validityDays:createdOn:adoptedOn:switchedCount:");
}

id objc_msgSend_initWithSequence_type_commandPushGenerationsRequest_commandPushGenerationsResponse_commandPullGenerationsRequest_commandPullGenerationsResponse_commandPullDeltaRequest_commandPullDeltaResponse_commandPullSnapshotRequest_commandPullSnapshotResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSequence:type:commandPushGenerationsRequest:commandPushGenerationsResponse:commandPullGenerationsRequest:commandPullGenerationsResponse:commandPullDeltaRequest:commandPullDeltaResponse:commandPullSnapshotRequest:commandPullSnapshotResponse:");
}

id objc_msgSend_initWithSerialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerialQueue:");
}

id objc_msgSend_initWithSerializedBackingStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerializedBackingStore:");
}

id objc_msgSend_initWithSerializedBackingStore_fromLocalDevice_contextCollectorSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithService_precedence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:precedence:");
}

id objc_msgSend_initWithServiceConnection_syncQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceConnection:syncQueue:");
}

id objc_msgSend_initWithServiceDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceDelegate:");
}

id objc_msgSend_initWithServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceIdentifier:");
}

id objc_msgSend_initWithServiceIdentifier_delegate_listener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceIdentifier:delegate:listener:");
}

id objc_msgSend_initWithServiceIdentifier_forRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceIdentifier:forRequests:");
}

id objc_msgSend_initWithServiceIdentifier_forRequests_requireConnectedPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceIdentifier:forRequests:requireConnectedPeer:");
}

id objc_msgSend_initWithServiceManager_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceManager:queue:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithServicePort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServicePort:");
}

id objc_msgSend_initWithSessionUUID_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionUUID:turnIdentifier:");
}

id objc_msgSend_initWithSettingType_valueBeforeUpdate_valueAfterUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettingType:valueBeforeUpdate:valueAfterUpdate:");
}

id objc_msgSend_initWithShareMetadatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareMetadatas:");
}

id objc_msgSend_initWithShareURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareURLs:");
}

id objc_msgSend_initWithShareURLs_invitationTokensByShareURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShareURLs:invitationTokensByShareURL:");
}

id objc_msgSend_initWithSharedUserId_loggableSharedUserId_companionDeviceInfo_personalRequestsEnabled_companionLinkReady_homeUserId_iCloudAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSharedUserId:loggableSharedUserId:companionDeviceInfo:personalRequestsEnabled:companionLinkReady:homeUserId:iCloudAltDSID:");
}

id objc_msgSend_initWithSiriVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSiriVoice:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithSleepState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSleepState:");
}

id objc_msgSend_initWithSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSnapshot:");
}

id objc_msgSend_initWithStartDate_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:duration:");
}

id objc_msgSend_initWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:");
}

id objc_msgSend_initWithStartDate_endDate_maxEvents_lastN_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:maxEvents:lastN:reversed:");
}

id objc_msgSend_initWithStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartTime:");
}

id objc_msgSend_initWithState_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithState:duration:");
}

id objc_msgSend_initWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatus:");
}

id objc_msgSend_initWithStream_fromBM_toBM_time_account_homeId_remoteDeviceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:fromBM:toBM:time:account:homeId:remoteDeviceTypes:");
}

id objc_msgSend_initWithStream_fromBM_toBM_time_userId_homeId_remoteDeviceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:fromBM:toBM:time:userId:homeId:remoteDeviceTypes:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSubscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionID:");
}

id objc_msgSend_initWithSubscriptionsToSave_subscriptionIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionsToSave:subscriptionIDsToDelete:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTargetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetQueue:");
}

id objc_msgSend_initWithTargetQueue_authenticationStrategyVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetQueue:authenticationStrategyVersion:");
}

id objc_msgSend_initWithTechnology_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTechnology:");
}

id objc_msgSend_initWithThunk_barrier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithThunk:barrier:");
}

id objc_msgSend_initWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSince1970:");
}

id objc_msgSend_initWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceNow:");
}

id objc_msgSend_initWithTimeoutInterval_onQueue_timeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeoutInterval:onQueue:timeoutHandler:");
}

id objc_msgSend_initWithTimerID_state_duration_remainingTime_lastModifiedDate_title_siriContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimerID:state:duration:remainingTime:lastModifiedDate:title:siriContext:");
}

id objc_msgSend_initWithTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimestamp:");
}

id objc_msgSend_initWithTimestamp_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimestamp:reason:");
}

id objc_msgSend_initWithTimestamp_reason_effectiveDate_expirationDuration_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimestamp:reason:effectiveDate:expirationDuration:userInfo:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_deliveryDate_expirationDate_redactedKeyPaths_historyConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:deliveryDate:expirationDate:redactedKeyPaths:historyConfiguration:");
}

id objc_msgSend_initWithType_identifier_version_controlGroup_experimentGroups_salt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:identifier:version:controlGroup:experimentGroups:salt:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_token_container_retryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:token:container:retryCount:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUUID_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:properties:");
}

id objc_msgSend_initWithUUID_timestamp_languageCode_options_speechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:timestamp:languageCode:options:speechRequestOptions:");
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDBytes:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUniqueIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueIdentifer:");
}

id objc_msgSend_initWithUserEphemeralSeeds_andUserAggregationIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserEphemeralSeeds:andUserAggregationIds:");
}

id objc_msgSend_initWithValue_andEffectiveFrom_andValidityDays_andCreatedOn_andAdoptedOn_andSwitchedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValue:andEffectiveFrom:andValidityDays:andCreatedOn:andAdoptedOn:andSwitchedCount:");
}

id objc_msgSend_initWithValue_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValue:status:");
}

id objc_msgSend_initWithVoiceFeedbackData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVoiceFeedbackData:completion:");
}

id objc_msgSend_initWithVtSatScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVtSatScore:");
}

id objc_msgSend_initWithWordCount_trailingSilenceDuration_eosLikelihood_pauseCounts_silencePosterior_taskName_processedAudioDurationInMilliseconds_acousticEndpointerScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:acousticEndpointerScore:");
}

id objc_msgSend_initWithWork_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWork:timeout:");
}

id objc_msgSend_initWithWorkoutReminder_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkoutReminder:completion:");
}

id objc_msgSend_initWithXPCConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithXPCConnection:");
}

id objc_msgSend_initWithZone_dataStore_subscriptionNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZone:dataStore:subscriptionNames:");
}

id objc_msgSend_initWithZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneID:");
}

id objc_msgSend_initWithZoneID_subscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneID:subscriptionID:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_initWithZoneName_subscriptionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:subscriptionName:");
}

id objc_msgSend_initWithZoneName_subscriptionNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:subscriptionNames:");
}

id objc_msgSend_initWithZoneName_subscriptionNames_ckAccountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:subscriptionNames:ckAccountInfo:");
}

id objc_msgSend_initialInterstitialDelay(void *a1, const char *a2, ...)
{
  return _[a1 initialInterstitialDelay];
}

id objc_msgSend_initialInterstitialDelayForCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 initialInterstitialDelayForCarPlay];
}

id objc_msgSend_initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking(void *a1, const char *a2, ...)
{
  return _[a1 initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking];
}

id objc_msgSend_initializeHomeSiriPhraseOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeHomeSiriPhraseOptions:completion:");
}

id objc_msgSend_inlineItemList(void *a1, const char *a2, ...)
{
  return _[a1 inlineItemList];
}

id objc_msgSend_inputAssistantID(void *a1, const char *a2, ...)
{
  return _[a1 inputAssistantID];
}

id objc_msgSend_inputDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 inputDeviceID];
}

id objc_msgSend_inputOrigin(void *a1, const char *a2, ...)
{
  return _[a1 inputOrigin];
}

id objc_msgSend_insertAfterItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertAfterItem:");
}

id objc_msgSend_insertBeforeItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertBeforeItem:");
}

id objc_msgSend_insertEventRecords_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertEventRecords:completion:");
}

id objc_msgSend_insertHomeAccessorySiriDataSharingPropagationLogEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertHomeAccessorySiriDataSharingPropagationLogEvent:");
}

id objc_msgSend_insertIntoTableWithName_record_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertIntoTableWithName:record:error:");
}

id objc_msgSend_insertMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertMetrics:");
}

id objc_msgSend_insertMetrics_withOfflineIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertMetrics:withOfflineIdentifier:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertString:atIndex:");
}

id objc_msgSend_insertedOrUpdatedItems(void *a1, const char *a2, ...)
{
  return _[a1 insertedOrUpdatedItems];
}

id objc_msgSend_installedAssetWithConfig_regionId_shouldSubscribe_subscriberId_expiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedAssetWithConfig:regionId:shouldSubscribe:subscriberId:expiration:");
}

id objc_msgSend_instanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 instanceInfo];
}

id objc_msgSend_instanceUUID(void *a1, const char *a2, ...)
{
  return _[a1 instanceUUID];
}

id objc_msgSend_instrumentationQueue(void *a1, const char *a2, ...)
{
  return _[a1 instrumentationQueue];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_intentIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 intentIdentifiers];
}

id objc_msgSend_interactionId(void *a1, const char *a2, ...)
{
  return _[a1 interactionId];
}

id objc_msgSend_interactionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 interactionIdentifier];
}

id objc_msgSend_interceptCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interceptCommand:completion:");
}

id objc_msgSend_interfaceIndex(void *a1, const char *a2, ...)
{
  return _[a1 interfaceIndex];
}

id objc_msgSend_interfaceName(void *a1, const char *a2, ...)
{
  return _[a1 interfaceName];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internalAuthAppleConnectServiceTicket(void *a1, const char *a2, ...)
{
  return _[a1 internalAuthAppleConnectServiceTicket];
}

id objc_msgSend_internalAuthSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 internalAuthSessionToken];
}

id objc_msgSend_internalGUID(void *a1, const char *a2, ...)
{
  return _[a1 internalGUID];
}

id objc_msgSend_internalID(void *a1, const char *a2, ...)
{
  return _[a1 internalID];
}

id objc_msgSend_internalIDForBBBulletinID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalIDForBBBulletinID:");
}

id objc_msgSend_internalModeOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalModeOverride:");
}

id objc_msgSend_interpretationIndices(void *a1, const char *a2, ...)
{
  return _[a1 interpretationIndices];
}

id objc_msgSend_interpretations(void *a1, const char *a2, ...)
{
  return _[a1 interpretations];
}

id objc_msgSend_interruptionLevel(void *a1, const char *a2, ...)
{
  return _[a1 interruptionLevel];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAndCancel];
}

id objc_msgSend_invalidateClientAWDLTransportLink(void *a1, const char *a2, ...)
{
  return _[a1 invalidateClientAWDLTransportLink];
}

id objc_msgSend_invalidateCurrentUserActivity(void *a1, const char *a2, ...)
{
  return _[a1 invalidateCurrentUserActivity];
}

id objc_msgSend_invalidateDeviceWithAddress_cbuuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateDeviceWithAddress:cbuuid:");
}

id objc_msgSend_invalidatePersonalizedLM(void *a1, const char *a2, ...)
{
  return _[a1 invalidatePersonalizedLM];
}

id objc_msgSend_invalidateTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTimer];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_invokeWithSignal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithSignal:");
}

id objc_msgSend_invokeWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithValue:");
}

id objc_msgSend_invokeWithValue_andValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithValue:andValue:");
}

id objc_msgSend_invokeWithValue_andValue_andValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithValue:andValue:andValue:");
}

id objc_msgSend_isAMOSIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 isAMOSIdentifier];
}

id objc_msgSend_isATVHandoff(void *a1, const char *a2, ...)
{
  return _[a1 isATVHandoff];
}

id objc_msgSend_isAWDLFallbackForPersonalRequestsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAWDLFallbackForPersonalRequestsEnabled];
}

id objc_msgSend_isAccessibleAnnounceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAccessibleAnnounceEnabled];
}

id objc_msgSend_isAccessibleEndpointerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAccessibleEndpointerEnabled];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActivityAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isActivityAvailable];
}

id objc_msgSend_isAdaptiveSiriVolumePermanentOffsetEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAdaptiveSiriVolumePermanentOffsetEnabled];
}

id objc_msgSend_isAdvancedAppleAudioDevice(void *a1, const char *a2, ...)
{
  return _[a1 isAdvancedAppleAudioDevice];
}

id objc_msgSend_isAllDay(void *a1, const char *a2, ...)
{
  return _[a1 isAllDay];
}

id objc_msgSend_isAnnounceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceEnabled];
}

id objc_msgSend_isAnnounceGroupFaceTimeInviteEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceGroupFaceTimeInviteEnabled];
}

id objc_msgSend_isAnnouncePolicyEnhancementsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAnnouncePolicyEnhancementsEnabled];
}

id objc_msgSend_isAssetReadyForLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAssetReadyForLocale:");
}

id objc_msgSend_isAttending(void *a1, const char *a2, ...)
{
  return _[a1 isAttending];
}

id objc_msgSend_isAudioAccessoryButtonActivation(void *a1, const char *a2, ...)
{
  return _[a1 isAudioAccessoryButtonActivation];
}

id objc_msgSend_isAudioAppPredictionOnHomePodEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAudioAppPredictionOnHomePodEnabled];
}

id objc_msgSend_isBlushingPhantomEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBlushingPhantomEnabled];
}

id objc_msgSend_isBuiltInVoice(void *a1, const char *a2, ...)
{
  return _[a1 isBuiltInVoice];
}

id objc_msgSend_isCallerIDBlocked(void *a1, const char *a2, ...)
{
  return _[a1 isCallerIDBlocked];
}

id objc_msgSend_isCanceled(void *a1, const char *a2, ...)
{
  return _[a1 isCanceled];
}

id objc_msgSend_isCaptive(void *a1, const char *a2, ...)
{
  return _[a1 isCaptive];
}

id objc_msgSend_isCarPlayConnectedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCarPlayConnectedWithCompletion:");
}

id objc_msgSend_isCloudConnected(void *a1, const char *a2, ...)
{
  return _[a1 isCloudConnected];
}

id objc_msgSend_isCommunalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isCommunalDevice];
}

id objc_msgSend_isCompanionLinkDeviceAProxyHost(void *a1, const char *a2, ...)
{
  return _[a1 isCompanionLinkDeviceAProxyHost];
}

id objc_msgSend_isCompanionLinkDeviceAnAudioAccessory(void *a1, const char *a2, ...)
{
  return _[a1 isCompanionLinkDeviceAnAudioAccessory];
}

id objc_msgSend_isCompanionLinkHomeHubDevice(void *a1, const char *a2, ...)
{
  return _[a1 isCompanionLinkHomeHubDevice];
}

id objc_msgSend_isCompatibleWithUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompatibleWithUnit:");
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isConnectedToCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 isConnectedToCarPlay];
}

id objc_msgSend_isCrossDeviceArbitrationFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isCrossDeviceArbitrationFeedbackEnabled];
}

id objc_msgSend_isCrossDeviceTVControlFromWatchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isCrossDeviceTVControlFromWatchEnabled];
}

id objc_msgSend_isCurrent(void *a1, const char *a2, ...)
{
  return _[a1 isCurrent];
}

id objc_msgSend_isCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentUser];
}

id objc_msgSend_isCustom(void *a1, const char *a2, ...)
{
  return _[a1 isCustom];
}

id objc_msgSend_isDataSyncInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isDataSyncInProgress];
}

id objc_msgSend_isDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDevice];
}

id objc_msgSend_isDelaying(void *a1, const char *a2, ...)
{
  return _[a1 isDelaying];
}

id objc_msgSend_isDeviceInCarDNDMode(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceInCarDNDMode];
}

id objc_msgSend_isDeviceInStarkMode(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceInStarkMode];
}

id objc_msgSend_isDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceLocked];
}

id objc_msgSend_isDeviceOwnedByCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceOwnedByCurrentUser];
}

id objc_msgSend_isDeviceScreenON(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceScreenON];
}

id objc_msgSend_isDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceUnlocked];
}

id objc_msgSend_isDeviceWatchAuthenticated(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceWatchAuthenticated];
}

id objc_msgSend_isDictation(void *a1, const char *a2, ...)
{
  return _[a1 isDictation];
}

id objc_msgSend_isDictationHIPAACompliant(void *a1, const char *a2, ...)
{
  return _[a1 isDictationHIPAACompliant];
}

id objc_msgSend_isDictationOnDeviceSamplingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isDictationOnDeviceSamplingDisabled];
}

id objc_msgSend_isDictationVoiceCommandsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isDictationVoiceCommandsEnabled];
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _[a1 isDirty];
}

id objc_msgSend_isDiscoveredOverBLE(void *a1, const char *a2, ...)
{
  return _[a1 isDiscoveredOverBLE];
}

id objc_msgSend_isDiscoveredOverInfraWifi(void *a1, const char *a2, ...)
{
  return _[a1 isDiscoveredOverInfraWifi];
}

id objc_msgSend_isDiscoveredOverWifiP2P(void *a1, const char *a2, ...)
{
  return _[a1 isDiscoveredOverWifiP2P];
}

id objc_msgSend_isDriving(void *a1, const char *a2, ...)
{
  return _[a1 isDriving];
}

id objc_msgSend_isDropInCall(void *a1, const char *a2, ...)
{
  return _[a1 isDropInCall];
}

id objc_msgSend_isDucking(void *a1, const char *a2, ...)
{
  return _[a1 isDucking];
}

id objc_msgSend_isEdge(void *a1, const char *a2, ...)
{
  return _[a1 isEdge];
}

id objc_msgSend_isEligibleForReminders(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForReminders];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEndAlertInfo(void *a1, const char *a2, ...)
{
  return _[a1 isEndAlertInfo];
}

id objc_msgSend_isEndpointOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isEndpointOnCurrentDevice];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDateInterval:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToRoute:");
}

id objc_msgSend_isEqualToServiceCommandType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToServiceCommandType:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEstablishing(void *a1, const char *a2, ...)
{
  return _[a1 isEstablishing];
}

id objc_msgSend_isEyesFree(void *a1, const char *a2, ...)
{
  return _[a1 isEyesFree];
}

id objc_msgSend_isFileNameValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFileNameValid:");
}

id objc_msgSend_isFileOlderThanAgeInSeconds_filePath_samplingComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFileOlderThanAgeInSeconds:filePath:samplingComponent:");
}

id objc_msgSend_isFingerprintOnly(void *a1, const char *a2, ...)
{
  return _[a1 isFingerprintOnly];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isFiring(void *a1, const char *a2, ...)
{
  return _[a1 isFiring];
}

id objc_msgSend_isFirstPartyApplicationWithBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstPartyApplicationWithBundleId:");
}

id objc_msgSend_isFlexibleFollowup(void *a1, const char *a2, ...)
{
  return _[a1 isFlexibleFollowup];
}

id objc_msgSend_isForCarDND(void *a1, const char *a2, ...)
{
  return _[a1 isForCarDND];
}

id objc_msgSend_isForUserRequest(void *a1, const char *a2, ...)
{
  return _[a1 isForUserRequest];
}

id objc_msgSend_isForceBLEDiscoveryForCompanionLinkEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isForceBLEDiscoveryForCompanionLinkEnabled];
}

id objc_msgSend_isFromRemote(void *a1, const char *a2, ...)
{
  return _[a1 isFromRemote];
}

id objc_msgSend_isHSAnswerCallNotificationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isHSAnswerCallNotificationEnabled];
}

id objc_msgSend_isHeadphonesAuthenticated(void *a1, const char *a2, ...)
{
  return _[a1 isHeadphonesAuthenticated];
}

id objc_msgSend_isHeySiriTriggerPhraseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isHeySiriTriggerPhraseEnabled];
}

id objc_msgSend_isHighlight(void *a1, const char *a2, ...)
{
  return _[a1 isHighlight];
}

id objc_msgSend_isHomeAutomationBackgroundRequestEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isHomeAutomationBackgroundRequestEnabled];
}

id objc_msgSend_isHostedOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isHostedOnCurrentDevice];
}

id objc_msgSend_isHybridUODEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isHybridUODEnabled];
}

id objc_msgSend_isInAmbient(void *a1, const char *a2, ...)
{
  return _[a1 isInAmbient];
}

id objc_msgSend_isInCarDNDMode(void *a1, const char *a2, ...)
{
  return _[a1 isInCarDNDMode];
}

id objc_msgSend_isInCarDNDModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInCarDNDModeWithCompletion:");
}

id objc_msgSend_isInStarkMode(void *a1, const char *a2, ...)
{
  return _[a1 isInStarkMode];
}

id objc_msgSend_isInactiveDeviceSyncDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isInactiveDeviceSyncDisabled];
}

id objc_msgSend_isInitialBringUp(void *a1, const char *a2, ...)
{
  return _[a1 isInitialBringUp];
}

id objc_msgSend_isInterceptingCommands(void *a1, const char *a2, ...)
{
  return _[a1 isInterceptingCommands];
}

id objc_msgSend_isInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 isInvalidated];
}

id objc_msgSend_isJustSiriEnabledInTheHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isJustSiriEnabledInTheHome:");
}

id objc_msgSend_isJustSiriTriggerPhraseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isJustSiriTriggerPhraseEnabled];
}

id objc_msgSend_isLanguageDetectorEnabledByServer(void *a1, const char *a2, ...)
{
  return _[a1 isLanguageDetectorEnabledByServer];
}

id objc_msgSend_isLassoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLassoEnabled];
}

id objc_msgSend_isLaunchProhibited(void *a1, const char *a2, ...)
{
  return _[a1 isLaunchProhibited];
}

id objc_msgSend_isListening(void *a1, const char *a2, ...)
{
  return _[a1 isListening];
}

id objc_msgSend_isLiveActivitiesSupported(void *a1, const char *a2, ...)
{
  return _[a1 isLiveActivitiesSupported];
}

id objc_msgSend_isLocallyRecognizing(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyRecognizing];
}

id objc_msgSend_isLocallyRecognizingInDictationMode(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyRecognizingInDictationMode];
}

id objc_msgSend_isLocationSharingDevice(void *a1, const char *a2, ...)
{
  return _[a1 isLocationSharingDevice];
}

id objc_msgSend_isLocationShiftRequiredForCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationShiftRequiredForCoordinate:");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _[a1 isLocked];
}

id objc_msgSend_isLostModeActive(void *a1, const char *a2, ...)
{
  return _[a1 isLostModeActive];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isMatchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isMatchEnabled];
}

id objc_msgSend_isMeDevice(void *a1, const char *a2, ...)
{
  return _[a1 isMeDevice];
}

id objc_msgSend_isMediaEntitySyncDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isMediaEntitySyncDisabled];
}

id objc_msgSend_isMediaPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isMediaPlaying];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMirroredDataStore(void *a1, const char *a2, ...)
{
  return _[a1 isMirroredDataStore];
}

id objc_msgSend_isMultiUserEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUserEnabled];
}

id objc_msgSend_isMultiUserSyncerMeDevice(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUserSyncerMeDevice];
}

id objc_msgSend_isNLServerFallbackDisabledWithExperiment(void *a1, const char *a2, ...)
{
  return _[a1 isNLServerFallbackDisabledWithExperiment];
}

id objc_msgSend_isNavigating(void *a1, const char *a2, ...)
{
  return _[a1 isNavigating];
}

id objc_msgSend_isNearby(void *a1, const char *a2, ...)
{
  return _[a1 isNearby];
}

id objc_msgSend_isNetIdAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isNetIdAvailable];
}

id objc_msgSend_isNullQueryCriterionWithColumnName_negation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNullQueryCriterionWithColumnName:negation:");
}

id objc_msgSend_isOnDeviceDictationForced(void *a1, const char *a2, ...)
{
  return _[a1 isOnDeviceDictationForced];
}

id objc_msgSend_isOnDeviceHistoryDeletionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOnDeviceHistoryDeletionEnabled];
}

id objc_msgSend_isOnDeviceSearch(void *a1, const char *a2, ...)
{
  return _[a1 isOnDeviceSearch];
}

id objc_msgSend_isOpenGoal(void *a1, const char *a2, ...)
{
  return _[a1 isOpenGoal];
}

id objc_msgSend_isOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isOptedIn];
}

id objc_msgSend_isOptedOutOfMTE(void *a1, const char *a2, ...)
{
  return _[a1 isOptedOutOfMTE];
}

id objc_msgSend_isOverrideAlarm(void *a1, const char *a2, ...)
{
  return _[a1 isOverrideAlarm];
}

id objc_msgSend_isOwner(void *a1, const char *a2, ...)
{
  return _[a1 isOwner];
}

id objc_msgSend_isPHSSupported(void *a1, const char *a2, ...)
{
  return _[a1 isPHSSupported];
}

id objc_msgSend_isPartOfHome(void *a1, const char *a2, ...)
{
  return _[a1 isPartOfHome];
}

id objc_msgSend_isPartOfHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPartOfHome:");
}

id objc_msgSend_isPastBuddy(void *a1, const char *a2, ...)
{
  return _[a1 isPastBuddy];
}

id objc_msgSend_isPersonal(void *a1, const char *a2, ...)
{
  return _[a1 isPersonal];
}

id objc_msgSend_isPersonalRequestDefinedErrorDialogsServerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalRequestDefinedErrorDialogsServerEnabled];
}

id objc_msgSend_isProxyGroupPlayer(void *a1, const char *a2, ...)
{
  return _[a1 isProxyGroupPlayer];
}

id objc_msgSend_isQueryCriterionWithColumnName_value_negation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isQueryCriterionWithColumnName:value:negation:");
}

id objc_msgSend_isReadableFileAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReadableFileAtPath:");
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isReloadServiceNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReloadServiceNotification:");
}

id objc_msgSend_isRemoraEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRemoraEnabled];
}

id objc_msgSend_isRemotePlaybackDevice(void *a1, const char *a2, ...)
{
  return _[a1 isRemotePlaybackDevice];
}

id objc_msgSend_isRequestMadeWithPhysicalDeviceInteraction(void *a1, const char *a2, ...)
{
  return _[a1 isRequestMadeWithPhysicalDeviceInteraction];
}

id objc_msgSend_isResponse(void *a1, const char *a2, ...)
{
  return _[a1 isResponse];
}

id objc_msgSend_isRingtoneOverA2DPEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRingtoneOverA2DPEnabled];
}

id objc_msgSend_isRouteCurrentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 isRouteCurrentlyPicked];
}

id objc_msgSend_isSAEEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSAEEnabled];
}

id objc_msgSend_isSATEnrolledForSiriProfileId_forLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSATEnrolledForSiriProfileId:forLanguageCode:");
}

id objc_msgSend_isSCDATrialEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSCDATrialEnabled];
}

id objc_msgSend_isSamplingDateCurrent(void *a1, const char *a2, ...)
{
  return _[a1 isSamplingDateCurrent];
}

id objc_msgSend_isSearchDataSharingStatusForced(void *a1, const char *a2, ...)
{
  return _[a1 isSearchDataSharingStatusForced];
}

id objc_msgSend_isSecureOfflineOnly(void *a1, const char *a2, ...)
{
  return _[a1 isSecureOfflineOnly];
}

id objc_msgSend_isSiriAutoPrompt(void *a1, const char *a2, ...)
{
  return _[a1 isSiriAutoPrompt];
}

id objc_msgSend_isSiriCloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriCloudSyncEnabled];
}

id objc_msgSend_isSiriDataSharingRepromptEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriDataSharingRepromptEnabled];
}

id objc_msgSend_isSiriLocationServicesPromptingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriLocationServicesPromptingEnabled];
}

id objc_msgSend_isSiriNetworkActivated(void *a1, const char *a2, ...)
{
  return _[a1 isSiriNetworkActivated];
}

id objc_msgSend_isSiriRequestDispatcherEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriRequestDispatcherEnabled];
}

id objc_msgSend_isSiriXRequest(void *a1, const char *a2, ...)
{
  return _[a1 isSiriXRequest];
}

id objc_msgSend_isSleepAlarm(void *a1, const char *a2, ...)
{
  return _[a1 isSleepAlarm];
}

id objc_msgSend_isSpeaker(void *a1, const char *a2, ...)
{
  return _[a1 isSpeaker];
}

id objc_msgSend_isStart(void *a1, const char *a2, ...)
{
  return _[a1 isStart];
}

id objc_msgSend_isStateFeedbackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isStateFeedbackEnabled];
}

id objc_msgSend_isStereoPairConfigured(void *a1, const char *a2, ...)
{
  return _[a1 isStereoPairConfigured];
}

id objc_msgSend_isStereoPairLeader(void *a1, const char *a2, ...)
{
  return _[a1 isStereoPairLeader];
}

id objc_msgSend_isStopped(void *a1, const char *a2, ...)
{
  return _[a1 isStopped];
}

id objc_msgSend_isSubsetOfSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubsetOfSet:");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isSupportedAndEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSupportedAndEnabled];
}

id objc_msgSend_isSyncing(void *a1, const char *a2, ...)
{
  return _[a1 isSyncing];
}

id objc_msgSend_isSystemApertureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSystemApertureEnabled];
}

id objc_msgSend_isSystemService(void *a1, const char *a2, ...)
{
  return _[a1 isSystemService];
}

id objc_msgSend_isTest(void *a1, const char *a2, ...)
{
  return _[a1 isTest];
}

id objc_msgSend_isThirdPartyBluetoothHeadset(void *a1, const char *a2, ...)
{
  return _[a1 isThirdPartyBluetoothHeadset];
}

id objc_msgSend_isTimeSensitiveAnnouncement(void *a1, const char *a2, ...)
{
  return _[a1 isTimeSensitiveAnnouncement];
}

id objc_msgSend_isTimeoutSuspended(void *a1, const char *a2, ...)
{
  return _[a1 isTimeoutSuspended];
}

id objc_msgSend_isUIFree(void *a1, const char *a2, ...)
{
  return _[a1 isUIFree];
}

id objc_msgSend_isUserInitiated(void *a1, const char *a2, ...)
{
  return _[a1 isUserInitiated];
}

id objc_msgSend_isUsingDefaultLanguageSettings(void *a1, const char *a2, ...)
{
  return _[a1 isUsingDefaultLanguageSettings];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidForSiriSessionLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidForSiriSessionLanguage:");
}

id objc_msgSend_isVerifying(void *a1, const char *a2, ...)
{
  return _[a1 isVerifying];
}

id objc_msgSend_isVideo(void *a1, const char *a2, ...)
{
  return _[a1 isVideo];
}

id objc_msgSend_isVoiceOverTouchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceOverTouchEnabled];
}

id objc_msgSend_isVoiceTrigger(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceTrigger];
}

id objc_msgSend_isVoiceTriggerRequest(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceTriggerRequest];
}

id objc_msgSend_isWWAN(void *a1, const char *a2, ...)
{
  return _[a1 isWWAN];
}

id objc_msgSend_isWatchAuthenticatedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWatchAuthenticatedWithCompletion:");
}

id objc_msgSend_isWifiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isWifiEnabled];
}

id objc_msgSend_itemDestination(void *a1, const char *a2, ...)
{
  return _[a1 itemDestination];
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _[a1 itemID];
}

id objc_msgSend_itemSource(void *a1, const char *a2, ...)
{
  return _[a1 itemSource];
}

id objc_msgSend_itemURL(void *a1, const char *a2, ...)
{
  return _[a1 itemURL];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itemsByID(void *a1, const char *a2, ...)
{
  return _[a1 itemsByID];
}

id objc_msgSend_jitContext(void *a1, const char *a2, ...)
{
  return _[a1 jitContext];
}

id objc_msgSend_jouleUnit(void *a1, const char *a2, ...)
{
  return _[a1 jouleUnit];
}

id objc_msgSend_json(void *a1, const char *a2, ...)
{
  return _[a1 json];
}

id objc_msgSend_keepAlive(void *a1, const char *a2, ...)
{
  return _[a1 keepAlive];
}

id objc_msgSend_keepReportingNowPlayingTimingEventsHeuristically(void *a1, const char *a2, ...)
{
  return _[a1 keepReportingNowPlayingTimingEventsHeuristically];
}

id objc_msgSend_keepsHistory(void *a1, const char *a2, ...)
{
  return _[a1 keepsHistory];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 keyEnumerator];
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _[a1 keyPath];
}

id objc_msgSend_keyValueRecordZoneInfo(void *a1, const char *a2, ...)
{
  return _[a1 keyValueRecordZoneInfo];
}

id objc_msgSend_keyValueServerChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 keyValueServerChangeToken];
}

id objc_msgSend_keyboardIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 keyboardIdentifier];
}

id objc_msgSend_keyboardType(void *a1, const char *a2, ...)
{
  return _[a1 keyboardType];
}

id objc_msgSend_keysOfEntriesPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keysOfEntriesPassingTest:");
}

id objc_msgSend_keysSortedByValueUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keysSortedByValueUsingComparator:");
}

id objc_msgSend_kilocalorieUnit(void *a1, const char *a2, ...)
{
  return _[a1 kilocalorieUnit];
}

id objc_msgSend_knownLocation(void *a1, const char *a2, ...)
{
  return _[a1 knownLocation];
}

id objc_msgSend_knownURLLoadDuration(void *a1, const char *a2, ...)
{
  return _[a1 knownURLLoadDuration];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _[a1 language];
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _[a1 languageCode];
}

id objc_msgSend_languageCodeOverride(void *a1, const char *a2, ...)
{
  return _[a1 languageCodeOverride];
}

id objc_msgSend_languageCodeWasChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCodeWasChangedTo:");
}

id objc_msgSend_languageCodeWithFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCodeWithFallback:");
}

id objc_msgSend_languageDetectionUserContext(void *a1, const char *a2, ...)
{
  return _[a1 languageDetectionUserContext];
}

id objc_msgSend_languageDetectorSetMostRecentRecognitionLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageDetectorSetMostRecentRecognitionLanguage:");
}

id objc_msgSend_languageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 languageIdentifier];
}

id objc_msgSend_languageStringForLocaleString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageStringForLocaleString:");
}

id objc_msgSend_languages(void *a1, const char *a2, ...)
{
  return _[a1 languages];
}

id objc_msgSend_lastActivationStoppedNowPlayingApp(void *a1, const char *a2, ...)
{
  return _[a1 lastActivationStoppedNowPlayingApp];
}

id objc_msgSend_lastAssistantDataAnchor(void *a1, const char *a2, ...)
{
  return _[a1 lastAssistantDataAnchor];
}

id objc_msgSend_lastCompanionRemoteDataFetchDate(void *a1, const char *a2, ...)
{
  return _[a1 lastCompanionRemoteDataFetchDate];
}

id objc_msgSend_lastDeviceExperimentCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 lastDeviceExperimentCheckDate];
}

id objc_msgSend_lastError(void *a1, const char *a2, ...)
{
  return _[a1 lastError];
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return _[a1 lastIndex];
}

id objc_msgSend_lastKnownAnalyticsStoreState(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownAnalyticsStoreState];
}

id objc_msgSend_lastKnownEligibleAnnouncementRequestTypes(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownEligibleAnnouncementRequestTypes];
}

id objc_msgSend_lastKnownProxyStreamId(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownProxyStreamId];
}

id objc_msgSend_lastKnownStreamId(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownStreamId];
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return _[a1 lastLocation];
}

id objc_msgSend_lastMetricsUploadDate(void *a1, const char *a2, ...)
{
  return _[a1 lastMetricsUploadDate];
}

id objc_msgSend_lastMetricsUploadFailureReportedOnDate(void *a1, const char *a2, ...)
{
  return _[a1 lastMetricsUploadFailureReportedOnDate];
}

id objc_msgSend_lastModifiedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastModifiedDate];
}

id objc_msgSend_lastMyriadWinForStereoPartner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastMyriadWinForStereoPartner:");
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlayedAnnouncement(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayedAnnouncement];
}

id objc_msgSend_lastPrimeTokenTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 lastPrimeTokenTimestamp];
}

id objc_msgSend_lastResponseId(void *a1, const char *a2, ...)
{
  return _[a1 lastResponseId];
}

id objc_msgSend_lastServerExperimentCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 lastServerExperimentCheckDate];
}

id objc_msgSend_lastShiftedLocation(void *a1, const char *a2, ...)
{
  return _[a1 lastShiftedLocation];
}

id objc_msgSend_lastSyncDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncDate];
}

id objc_msgSend_lastSyncVerificationDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncVerificationDate];
}

id objc_msgSend_lastTimestampForFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastTimestampForFileName:");
}

id objc_msgSend_lastUpdateAttemptTime(void *a1, const char *a2, ...)
{
  return _[a1 lastUpdateAttemptTime];
}

id objc_msgSend_lastUpdatedAtInMs(void *a1, const char *a2, ...)
{
  return _[a1 lastUpdatedAtInMs];
}

id objc_msgSend_lastVisitedAceHost(void *a1, const char *a2, ...)
{
  return _[a1 lastVisitedAceHost];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_latestMappedRequestId(void *a1, const char *a2, ...)
{
  return _[a1 latestMappedRequestId];
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return _[a1 latitude];
}

id objc_msgSend_launchId(void *a1, const char *a2, ...)
{
  return _[a1 launchId];
}

id objc_msgSend_legacyDirectActionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 legacyDirectActionIdentifier];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthOfBytesUsingEncoding:");
}

id objc_msgSend_lessThanOrEqualToQueryCriterionWithColumnName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lessThanOrEqualToQueryCriterionWithColumnName:value:");
}

id objc_msgSend_levelForFactor_withNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "levelForFactor:withNamespaceName:");
}

id objc_msgSend_levelOneOfCase(void *a1, const char *a2, ...)
{
  return _[a1 levelOneOfCase];
}

id objc_msgSend_liftToWakeDetected(void *a1, const char *a2, ...)
{
  return _[a1 liftToWakeDetected];
}

id objc_msgSend_limit(void *a1, const char *a2, ...)
{
  return _[a1 limit];
}

id objc_msgSend_limitedAudioLoggingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 limitedAudioLoggingEnabled];
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return _[a1 link];
}

id objc_msgSend_listen(void *a1, const char *a2, ...)
{
  return _[a1 listen];
}

id objc_msgSend_listenForPauseWithOptions_forPause_maxDelay_stopOnDetection_executeOnSuccess_onFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenForPauseWithOptions:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:");
}

id objc_msgSend_listenForSharedDataFromCloud(void *a1, const char *a2, ...)
{
  return _[a1 listenForSharedDataFromCloud];
}

id objc_msgSend_listenForUserSpeechWithOptions_forVoice_maxDelay_stopOnDetection_executeOnSuccess_onFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenForUserSpeechWithOptions:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:");
}

id objc_msgSend_listeningMode(void *a1, const char *a2, ...)
{
  return _[a1 listeningMode];
}

id objc_msgSend_listeningToItem(void *a1, const char *a2, ...)
{
  return _[a1 listeningToItem];
}

id objc_msgSend_localContextStore(void *a1, const char *a2, ...)
{
  return _[a1 localContextStore];
}

id objc_msgSend_localContextStore_didUpdateDeviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localContextStore:didUpdateDeviceContext:");
}

id objc_msgSend_localContextWithPrivacyClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localContextWithPrivacyClass:");
}

id objc_msgSend_localCryptoKeyData(void *a1, const char *a2, ...)
{
  return _[a1 localCryptoKeyData];
}

id objc_msgSend_localDevice(void *a1, const char *a2, ...)
{
  return _[a1 localDevice];
}

id objc_msgSend_localMeCardDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localMeCardDidUpdate:");
}

id objc_msgSend_localMessageState(void *a1, const char *a2, ...)
{
  return _[a1 localMessageState];
}

id objc_msgSend_localPeerIDSDeviceUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localPeerIDSDeviceUniqueIdentifier];
}

id objc_msgSend_localPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 localPeerInfo];
}

id objc_msgSend_localPeerInfoUpdatedFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localPeerInfoUpdatedFrom:to:");
}

id objc_msgSend_localSearchGetNavigationStatusCompleted(void *a1, const char *a2, ...)
{
  return _[a1 localSearchGetNavigationStatusCompleted];
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 localTimeZone];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localeIdentifier];
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_locales(void *a1, const char *a2, ...)
{
  return _[a1 locales];
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return _[a1 localizations];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedNameForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedNameForContext:");
}

id objc_msgSend_localizedStandardContainsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStandardContainsString:");
}

id objc_msgSend_localizedStringForKey_gender_table_bundle_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:gender:table:bundle:languageCode:");
}

id objc_msgSend_localizedStringForKey_table_bundle_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:table:bundle:languageCode:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringForKey_value_table_localization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:localization:");
}

id objc_msgSend_localizedStringForStatusCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForStatusCode:");
}

id objc_msgSend_localizedStringFromDate_dateStyle_timeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromDate:dateStyle:timeStyle:");
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerPhraseForLanguageCode:");
}

id objc_msgSend_locallyPairedPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 locallyPairedPeerInfo];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationDataWasRecievedFromPeer(void *a1, const char *a2, ...)
{
  return _[a1 locationDataWasRecievedFromPeer];
}

id objc_msgSend_locationForSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 locationForSnapshot];
}

id objc_msgSend_locationManager(void *a1, const char *a2, ...)
{
  return _[a1 locationManager];
}

id objc_msgSend_locationManager_wantsToSetRequestOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationManager:wantsToSetRequestOrigin:");
}

id objc_msgSend_locationMetadata(void *a1, const char *a2, ...)
{
  return _[a1 locationMetadata];
}

id objc_msgSend_locationSentToServer(void *a1, const char *a2, ...)
{
  return _[a1 locationSentToServer];
}

id objc_msgSend_locationServicesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 locationServicesEnabled];
}

id objc_msgSend_locationSharingDevice(void *a1, const char *a2, ...)
{
  return _[a1 locationSharingDevice];
}

id objc_msgSend_locationSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 locationSnapshot];
}

id objc_msgSend_lockRestrictedCommands(void *a1, const char *a2, ...)
{
  return _[a1 lockRestrictedCommands];
}

id objc_msgSend_lockScreenSetting(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenSetting];
}

id objc_msgSend_logAceEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAceEvent:");
}

id objc_msgSend_logAnalyticsBatchUploadedWithBatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAnalyticsBatchUploadedWithBatch:");
}

id objc_msgSend_logAnalyticsLocalStoragePurgedWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAnalyticsLocalStoragePurgedWithSize:");
}

id objc_msgSend_logAnalyticsLocalStorageSnapshotWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAnalyticsLocalStorageSnapshotWithSize:");
}

id objc_msgSend_logAssetSetExperiment_trialData_experimentsEmitted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAssetSetExperiment:trialData:experimentsEmitted:");
}

id objc_msgSend_logConnectionOpenWithConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logConnectionOpenWithConnectionType:");
}

id objc_msgSend_logConnectionStart(void *a1, const char *a2, ...)
{
  return _[a1 logConnectionStart];
}

id objc_msgSend_logDebugSessionConnectionSnapshotCaptured_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDebugSessionConnectionSnapshotCaptured:");
}

id objc_msgSend_logEnabledState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEnabledState:");
}

id objc_msgSend_logEventWithType_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:context:");
}

id objc_msgSend_logEventWithType_context_contextNoCopy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:context:contextNoCopy:");
}

id objc_msgSend_logEventWithType_contextProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:contextProvider:");
}

id objc_msgSend_logEventWithType_contextProvider_contextProvidingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:contextProvider:contextProvidingQueue:");
}

id objc_msgSend_logEventWithType_machAbsoluteTime_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:machAbsoluteTime:context:");
}

id objc_msgSend_logEventWithType_machAbsoluteTime_context_contextNoCopy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:machAbsoluteTime:context:contextNoCopy:");
}

id objc_msgSend_logEventWithType_machAbsoluteTime_contextProvider_contextProvidingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:");
}

id objc_msgSend_logEventWithType_machAbsoluteTime_contextResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:machAbsoluteTime:contextResolver:");
}

id objc_msgSend_logInstrumentation_machAbsoluteTime_turnContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logInstrumentation:machAbsoluteTime:turnContext:");
}

id objc_msgSend_logInstrumentation_machAbsoluteTime_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logInstrumentation:machAbsoluteTime:turnIdentifier:");
}

id objc_msgSend_logInstrumentationOfType_machAbsoluteTime_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logInstrumentationOfType:machAbsoluteTime:turnIdentifier:");
}

id objc_msgSend_logLocalRecognitionWonForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logLocalRecognitionWonForLanguage:");
}

id objc_msgSend_logLocationSend(void *a1, const char *a2, ...)
{
  return _[a1 logLocationSend];
}

id objc_msgSend_logRequestCancelAfterSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logRequestCancelAfterSeconds:");
}

id objc_msgSend_logRequestLaunchedApp(void *a1, const char *a2, ...)
{
  return _[a1 logRequestLaunchedApp];
}

id objc_msgSend_logRequestLinkBetweenOrchestratorAndNetworkComponent(void *a1, const char *a2, ...)
{
  return _[a1 logRequestLinkBetweenOrchestratorAndNetworkComponent];
}

id objc_msgSend_logSessionConnectionFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSessionConnectionFailed:");
}

id objc_msgSend_logSessionConnectionSnapshotCaptured_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSessionConnectionSnapshotCaptured:");
}

id objc_msgSend_logSiriDataSharingPropagationAccessoryIdentifier_propagationEvent_propagationReason_associatedLogEventIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSiriDataSharingPropagationAccessoryIdentifier:propagationEvent:propagationReason:associatedLogEventIdentifier:");
}

id objc_msgSend_logSiriDataSharingRepromptOptInStatus_source_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSiriDataSharingRepromptOptInStatus:source:reason:");
}

id objc_msgSend_logSiriMediaVolumeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSiriMediaVolumeAction:");
}

id objc_msgSend_logSiriPausedMedia(void *a1, const char *a2, ...)
{
  return _[a1 logSiriPausedMedia];
}

id objc_msgSend_logSpeechRecognized(void *a1, const char *a2, ...)
{
  return _[a1 logSpeechRecognized];
}

id objc_msgSend_logSyncTokenFetchRequestReceivedRequestCreatedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logSyncTokenFetchRequestReceivedRequestCreatedAt:");
}

id objc_msgSend_logTimeToBeepWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logTimeToBeepWithDuration:");
}

id objc_msgSend_logToCoreAnalyticsCrossDeviceRequestEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logToCoreAnalyticsCrossDeviceRequestEvent:");
}

id objc_msgSend_logVoiceRecordingEnd(void *a1, const char *a2, ...)
{
  return _[a1 logVoiceRecordingEnd];
}

id objc_msgSend_logVoiceSendEnd(void *a1, const char *a2, ...)
{
  return _[a1 logVoiceSendEnd];
}

id objc_msgSend_logVoiceSendStart(void *a1, const char *a2, ...)
{
  return _[a1 logVoiceSendStart];
}

id objc_msgSend_loggableCompanionAssistantID(void *a1, const char *a2, ...)
{
  return _[a1 loggableCompanionAssistantID];
}

id objc_msgSend_loggableMultiUserSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 loggableMultiUserSharedUserID];
}

id objc_msgSend_loggableMusicSyncSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 loggableMusicSyncSharedUserID];
}

id objc_msgSend_loggableSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 loggableSharedUserID];
}

id objc_msgSend_logger(void *a1, const char *a2, ...)
{
  return _[a1 logger];
}

id objc_msgSend_loggingAssistantId(void *a1, const char *a2, ...)
{
  return _[a1 loggingAssistantId];
}

id objc_msgSend_loggingAssistantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 loggingAssistantIdentifier];
}

id objc_msgSend_loggingIsAllowed(void *a1, const char *a2, ...)
{
  return _[a1 loggingIsAllowed];
}

id objc_msgSend_loggingSharedId(void *a1, const char *a2, ...)
{
  return _[a1 loggingSharedId];
}

id objc_msgSend_loggingSharedUserId(void *a1, const char *a2, ...)
{
  return _[a1 loggingSharedUserId];
}

id objc_msgSend_loggingSharedUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 loggingSharedUserIdentifier];
}

id objc_msgSend_longLivedIdentifierUploadingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 longLivedIdentifierUploadingEnabled];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return _[a1 longitude];
}

id objc_msgSend_lookbackTimeForSpeechObservingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lookbackTimeForSpeechObservingType:");
}

id objc_msgSend_lostModeIsActive(void *a1, const char *a2, ...)
{
  return _[a1 lostModeIsActive];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_makeObjectsPerformSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:withObject:");
}

id objc_msgSend_makeValidWAVFile_withSamplingRateOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeValidWAVFile:withSamplingRateOf:");
}

id objc_msgSend_managedConfigurationEffectiveSettingsChanged(void *a1, const char *a2, ...)
{
  return _[a1 managedConfigurationEffectiveSettingsChanged];
}

id objc_msgSend_managedPeerInfoMatchingPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedPeerInfoMatchingPeerInfo:");
}

id objc_msgSend_managerForBundleID_bundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managerForBundleID:bundlePath:");
}

id objc_msgSend_manualEndpointingThreshold(void *a1, const char *a2, ...)
{
  return _[a1 manualEndpointingThreshold];
}

id objc_msgSend_manufacturer(void *a1, const char *a2, ...)
{
  return _[a1 manufacturer];
}

id objc_msgSend_mapWithTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapWithTransform:");
}

id objc_msgSend_markBulletinAsAcknolwedgedForDomainObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markBulletinAsAcknolwedgedForDomainObject:");
}

id objc_msgSend_markEndTime(void *a1, const char *a2, ...)
{
  return _[a1 markEndTime];
}

id objc_msgSend_markFailedWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markFailedWithType:");
}

id objc_msgSend_markHomeMembershipsForDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markHomeMembershipsForDeletion:");
}

id objc_msgSend_markIncomingCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markIncomingCommand:");
}

id objc_msgSend_markLastAnnouncementInThreadAsCancelledForApp_threadID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markLastAnnouncementInThreadAsCancelledForApp:threadID:");
}

id objc_msgSend_markNotificationAsReadWithIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markNotificationAsReadWithIdentifer:");
}

id objc_msgSend_markResponseForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markResponseForCommand:");
}

id objc_msgSend_markStartTime(void *a1, const char *a2, ...)
{
  return _[a1 markStartTime];
}

id objc_msgSend_markSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 markSucceeded];
}

id objc_msgSend_markVoicemailAsRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markVoicemailAsRead:");
}

id objc_msgSend_masteredVersion(void *a1, const char *a2, ...)
{
  return _[a1 masteredVersion];
}

id objc_msgSend_matchesCapabilityDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesCapabilityDescriptions:");
}

id objc_msgSend_maxAge(void *a1, const char *a2, ...)
{
  return _[a1 maxAge];
}

id objc_msgSend_maxTimeToSync(void *a1, const char *a2, ...)
{
  return _[a1 maxTimeToSync];
}

id objc_msgSend_maximumRecognitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 maximumRecognitionDuration];
}

id objc_msgSend_meCard(void *a1, const char *a2, ...)
{
  return _[a1 meCard];
}

id objc_msgSend_meCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meCard:");
}

id objc_msgSend_meDevice(void *a1, const char *a2, ...)
{
  return _[a1 meDevice];
}

id objc_msgSend_meDeviceIDSDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIDSDeviceID];
}

id objc_msgSend_meDeviceIDSIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIDSIdentifier];
}

id objc_msgSend_meDeviceIsMe(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIsMe];
}

id objc_msgSend_meanPing(void *a1, const char *a2, ...)
{
  return _[a1 meanPing];
}

id objc_msgSend_mediaPlaybackVolumeThresholdForAudioSessionActivationDelay(void *a1, const char *a2, ...)
{
  return _[a1 mediaPlaybackVolumeThresholdForAudioSessionActivationDelay];
}

id objc_msgSend_mediaPlayerExplicitContentDisallowed(void *a1, const char *a2, ...)
{
  return _[a1 mediaPlayerExplicitContentDisallowed];
}

id objc_msgSend_mediaRemoteGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemoteGroupIdentifier];
}

id objc_msgSend_mediaRemoteRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemoteRouteIdentifier];
}

id objc_msgSend_mediaRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteIdentifier];
}

id objc_msgSend_mediaSystemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaSystemIdentifier];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_member_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "member:");
}

id objc_msgSend_merge(void *a1, const char *a2, ...)
{
  return _[a1 merge];
}

id objc_msgSend_mergeDataWithModifiedRecords_deletedRecordIDs_containsAllChanges_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeDataWithModifiedRecords:deletedRecordIDs:containsAllChanges:completion:");
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageDictionary(void *a1, const char *a2, ...)
{
  return _[a1 messageDictionary];
}

id objc_msgSend_messageReceiver(void *a1, const char *a2, ...)
{
  return _[a1 messageReceiver];
}

id objc_msgSend_meterUnit(void *a1, const char *a2, ...)
{
  return _[a1 meterUnit];
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _[a1 metrics];
}

id objc_msgSend_metricsContext(void *a1, const char *a2, ...)
{
  return _[a1 metricsContext];
}

id objc_msgSend_metricsCount(void *a1, const char *a2, ...)
{
  return _[a1 metricsCount];
}

id objc_msgSend_metricsSenderDisabled(void *a1, const char *a2, ...)
{
  return _[a1 metricsSenderDisabled];
}

id objc_msgSend_metrics_publishDailyDeviceStatus_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metrics_publishDailyDeviceStatus:completion:");
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _[a1 middleName];
}

id objc_msgSend_midpoint(void *a1, const char *a2, ...)
{
  return _[a1 midpoint];
}

id objc_msgSend_mileUnit(void *a1, const char *a2, ...)
{
  return _[a1 mileUnit];
}

id objc_msgSend_minimumDurationForRetry(void *a1, const char *a2, ...)
{
  return _[a1 minimumDurationForRetry];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_minuteOfHour(void *a1, const char *a2, ...)
{
  return _[a1 minuteOfHour];
}

id objc_msgSend_minuteUnit(void *a1, const char *a2, ...)
{
  return _[a1 minuteUnit];
}

id objc_msgSend_mirroredMultiUserSharedDataNeedsSync(void *a1, const char *a2, ...)
{
  return _[a1 mirroredMultiUserSharedDataNeedsSync];
}

id objc_msgSend_missingReferences(void *a1, const char *a2, ...)
{
  return _[a1 missingReferences];
}

id objc_msgSend_modeOverrideValue(void *a1, const char *a2, ...)
{
  return _[a1 modeOverrideValue];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_modelName(void *a1, const char *a2, ...)
{
  return _[a1 modelName];
}

id objc_msgSend_modelOverrideURL(void *a1, const char *a2, ...)
{
  return _[a1 modelOverrideURL];
}

id objc_msgSend_modelTasksForLocaleWithInstallationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelTasksForLocaleWithInstallationStatus:");
}

id objc_msgSend_modelWithIdentifier_didUpdateScore_forSpeakable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelWithIdentifier:didUpdateScore:forSpeakable:");
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return _[a1 modificationDate];
}

id objc_msgSend_modifications(void *a1, const char *a2, ...)
{
  return _[a1 modifications];
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_mostElevatedApplicationStateForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mostElevatedApplicationStateForPID:");
}

id objc_msgSend_motionActivity(void *a1, const char *a2, ...)
{
  return _[a1 motionActivity];
}

id objc_msgSend_motionConfidence(void *a1, const char *a2, ...)
{
  return _[a1 motionConfidence];
}

id objc_msgSend_movieRestriction(void *a1, const char *a2, ...)
{
  return _[a1 movieRestriction];
}

id objc_msgSend_movingAverage(void *a1, const char *a2, ...)
{
  return _[a1 movingAverage];
}

id objc_msgSend_multiUserDevice(void *a1, const char *a2, ...)
{
  return _[a1 multiUserDevice];
}

id objc_msgSend_multiUserHomeUUIDsForDeletion(void *a1, const char *a2, ...)
{
  return _[a1 multiUserHomeUUIDsForDeletion];
}

id objc_msgSend_multiUserIsOnboardingDevice(void *a1, const char *a2, ...)
{
  return _[a1 multiUserIsOnboardingDevice];
}

id objc_msgSend_multiUserPrimaryUser(void *a1, const char *a2, ...)
{
  return _[a1 multiUserPrimaryUser];
}

id objc_msgSend_multiUserRecordZoneInfo(void *a1, const char *a2, ...)
{
  return _[a1 multiUserRecordZoneInfo];
}

id objc_msgSend_multiUserSAObject(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSAObject];
}

id objc_msgSend_multiUserSetupCompleteTimes(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSetupCompleteTimes];
}

id objc_msgSend_multiUserSetupStartTimes(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSetupStartTimes];
}

id objc_msgSend_multiUserSharedDataNeedsSync(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSharedDataNeedsSync];
}

id objc_msgSend_multiUserSharedDataServerChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSharedDataServerChangeToken];
}

id objc_msgSend_multiUserSharedDataServerChangeTokenForOwner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiUserSharedDataServerChangeTokenForOwner:");
}

id objc_msgSend_multiUserSharedUsers(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSharedUsers];
}

id objc_msgSend_multiUserStateSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 multiUserStateSnapshot];
}

id objc_msgSend_multiUserSyncerBackupIdentifiersAnchor(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSyncerBackupIdentifiersAnchor];
}

id objc_msgSend_multiUserSyncerIdentifiersAnchor(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSyncerIdentifiersAnchor];
}

id objc_msgSend_multiUserSyncerSADAnchor(void *a1, const char *a2, ...)
{
  return _[a1 multiUserSyncerSADAnchor];
}

id objc_msgSend_multiUserVoiceIdentification(void *a1, const char *a2, ...)
{
  return _[a1 multiUserVoiceIdentification];
}

id objc_msgSend_multilingualDisabled(void *a1, const char *a2, ...)
{
  return _[a1 multilingualDisabled];
}

id objc_msgSend_multilingualTimeoutInMillis(void *a1, const char *a2, ...)
{
  return _[a1 multilingualTimeoutInMillis];
}

id objc_msgSend_musicPersonalizationToken(void *a1, const char *a2, ...)
{
  return _[a1 musicPersonalizationToken];
}

id objc_msgSend_musicWasDetected(void *a1, const char *a2, ...)
{
  return _[a1 musicWasDetected];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_mutatedCopyWithMutator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutatedCopyWithMutator:");
}

id objc_msgSend_mutatingCommand(void *a1, const char *a2, ...)
{
  return _[a1 mutatingCommand];
}

id objc_msgSend_muteMode(void *a1, const char *a2, ...)
{
  return _[a1 muteMode];
}

id objc_msgSend_myriadDeviceVTEndTimeDistanceThreshold(void *a1, const char *a2, ...)
{
  return _[a1 myriadDeviceVTEndTimeDistanceThreshold];
}

id objc_msgSend_myriadMonitorTimeOutInterval(void *a1, const char *a2, ...)
{
  return _[a1 myriadMonitorTimeOutInterval];
}

id objc_msgSend_myriadServerProvisioning(void *a1, const char *a2, ...)
{
  return _[a1 myriadServerProvisioning];
}

id objc_msgSend_myriadTrialTreatment(void *a1, const char *a2, ...)
{
  return _[a1 myriadTrialTreatment];
}

id objc_msgSend_nakedObjectsToRetry(void *a1, const char *a2, ...)
{
  return _[a1 nakedObjectsToRetry];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameComponents(void *a1, const char *a2, ...)
{
  return _[a1 nameComponents];
}

id objc_msgSend_namePrefix(void *a1, const char *a2, ...)
{
  return _[a1 namePrefix];
}

id objc_msgSend_nameSuffix(void *a1, const char *a2, ...)
{
  return _[a1 nameSuffix];
}

id objc_msgSend_namespaceAssetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "namespaceAssetSet:");
}

id objc_msgSend_namespaceNameFromId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "namespaceNameFromId:");
}

id objc_msgSend_namespaces(void *a1, const char *a2, ...)
{
  return _[a1 namespaces];
}

id objc_msgSend_nanoCalendarLaunchURLForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nanoCalendarLaunchURLForEvent:");
}

id objc_msgSend_navStatus(void *a1, const char *a2, ...)
{
  return _[a1 navStatus];
}

id objc_msgSend_navigationState(void *a1, const char *a2, ...)
{
  return _[a1 navigationState];
}

id objc_msgSend_needsCreation(void *a1, const char *a2, ...)
{
  return _[a1 needsCreation];
}

id objc_msgSend_needsDestruction(void *a1, const char *a2, ...)
{
  return _[a1 needsDestruction];
}

id objc_msgSend_needsToSendLocation(void *a1, const char *a2, ...)
{
  return _[a1 needsToSendLocation];
}

id objc_msgSend_networkActivityStart_activate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkActivityStart:activate:");
}

id objc_msgSend_networkActivityStart_activate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkActivityStart:activate:completion:");
}

id objc_msgSend_networkActivityStop_withReason_andError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkActivityStop:withReason:andError:");
}

id objc_msgSend_networkActivityStop_withReason_andError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkActivityStop:withReason:andError:completion:");
}

id objc_msgSend_networkActivityTracingCancel(void *a1, const char *a2, ...)
{
  return _[a1 networkActivityTracingCancel];
}

id objc_msgSend_networkActivityTracingCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkActivityTracingCancel:");
}

id objc_msgSend_networkDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 networkDidBecomeActive];
}

id objc_msgSend_networkInterfacesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkInterfacesFromDictionary:");
}

id objc_msgSend_newAssertionForBundle_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newAssertionForBundle:withReason:");
}

id objc_msgSend_newMetricContainerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newMetricContainerWithIdentifier:");
}

id objc_msgSend_newWithBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newWithBuilder:");
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return _[a1 next];
}

id objc_msgSend_nextAnnouncementRequest(void *a1, const char *a2, ...)
{
  return _[a1 nextAnnouncementRequest];
}

id objc_msgSend_nextItem(void *a1, const char *a2, ...)
{
  return _[a1 nextItem];
}

id objc_msgSend_nextUserSeed(void *a1, const char *a2, ...)
{
  return _[a1 nextUserSeed];
}

id objc_msgSend_nextUserSeedEffectiveFromDate(void *a1, const char *a2, ...)
{
  return _[a1 nextUserSeedEffectiveFromDate];
}

id objc_msgSend_nextUserSeedExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 nextUserSeedExpirationDate];
}

id objc_msgSend_nickName(void *a1, const char *a2, ...)
{
  return _[a1 nickName];
}

id objc_msgSend_nickname(void *a1, const char *a2, ...)
{
  return _[a1 nickname];
}

id objc_msgSend_noL2Cap(void *a1, const char *a2, ...)
{
  return _[a1 noL2Cap];
}

id objc_msgSend_noiseManagementOption(void *a1, const char *a2, ...)
{
  return _[a1 noiseManagementOption];
}

id objc_msgSend_nonCloudSyncedUser(void *a1, const char *a2, ...)
{
  return _[a1 nonCloudSyncedUser];
}

id objc_msgSend_nonspeakerConfidenceScores(void *a1, const char *a2, ...)
{
  return _[a1 nonspeakerConfidenceScores];
}

id objc_msgSend_noteSendingChunk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteSendingChunk:");
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationAnnouncementTypeForNotificationFromApp_withIntentIDs_notificationContent_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationAnnouncementTypeForNotificationFromApp:withIntentIDs:notificationContent:onPlatform:");
}

id objc_msgSend_notificationBody(void *a1, const char *a2, ...)
{
  return _[a1 notificationBody];
}

id objc_msgSend_notificationFromRemoteNotificationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationFromRemoteNotificationDictionary:");
}

id objc_msgSend_notificationId(void *a1, const char *a2, ...)
{
  return _[a1 notificationId];
}

id objc_msgSend_notificationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 notificationIdentifier];
}

id objc_msgSend_notificationManager_didAddBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationManager:didAddBulletin:");
}

id objc_msgSend_notificationManager_didRemoveBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationManager:didRemoveBulletin:");
}

id objc_msgSend_notificationManagerDidChangeBulletins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationManagerDidChangeBulletins:");
}

id objc_msgSend_notificationPreviewRestrictedApps(void *a1, const char *a2, ...)
{
  return _[a1 notificationPreviewRestrictedApps];
}

id objc_msgSend_notificationPreviewRestrictedAppsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationPreviewRestrictedAppsAtIndex:");
}

id objc_msgSend_notificationPreviewRestrictedAppsCount(void *a1, const char *a2, ...)
{
  return _[a1 notificationPreviewRestrictedAppsCount];
}

id objc_msgSend_notificationRequest(void *a1, const char *a2, ...)
{
  return _[a1 notificationRequest];
}

id objc_msgSend_notificationRequestForNotificationIdentifierInAnnouncementQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationRequestForNotificationIdentifierInAnnouncementQueue:");
}

id objc_msgSend_notificationSettings(void *a1, const char *a2, ...)
{
  return _[a1 notificationSettings];
}

id objc_msgSend_notificationSourceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationSourceWithIdentifier:");
}

id objc_msgSend_notificationSystemSettings(void *a1, const char *a2, ...)
{
  return _[a1 notificationSystemSettings];
}

id objc_msgSend_notificationText(void *a1, const char *a2, ...)
{
  return _[a1 notificationText];
}

id objc_msgSend_notificationType(void *a1, const char *a2, ...)
{
  return _[a1 notificationType];
}

id objc_msgSend_notificationWithName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationWithName:object:");
}

id objc_msgSend_notifiedFiringAlarmIDs(void *a1, const char *a2, ...)
{
  return _[a1 notifiedFiringAlarmIDs];
}

id objc_msgSend_notifiedFiringTimerIDs(void *a1, const char *a2, ...)
{
  return _[a1 notifiedFiringTimerIDs];
}

id objc_msgSend_notifyAudioFileIOTransactionStoppedForReason_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyAudioFileIOTransactionStoppedForReason:sessionUUID:");
}

id objc_msgSend_notifyDelegates(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegates];
}

id objc_msgSend_notifyObserversAssetAvailabilityChanged(void *a1, const char *a2, ...)
{
  return _[a1 notifyObserversAssetAvailabilityChanged];
}

id objc_msgSend_notifyObserversLanguageCodeChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversLanguageCodeChanged:");
}

id objc_msgSend_notifyObserversOfAvailableAnnouncementRequestTypes(void *a1, const char *a2, ...)
{
  return _[a1 notifyObserversOfAvailableAnnouncementRequestTypes];
}

id objc_msgSend_notifyObserversOfCurrentEligibleSetupState_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversOfCurrentEligibleSetupState:onPlatform:");
}

id objc_msgSend_notifySpeechDetectedIsUndirected(void *a1, const char *a2, ...)
{
  return _[a1 notifySpeechDetectedIsUndirected];
}

id objc_msgSend_notifySpeechRecognitionTransactionStoppedForReason_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:");
}

id objc_msgSend_notifyState(void *a1, const char *a2, ...)
{
  return _[a1 notifyState];
}

id objc_msgSend_notifyUserVoiceProfileDownloadReadyForUser_getData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyUserVoiceProfileDownloadReadyForUser:getData:completion:");
}

id objc_msgSend_notifyUserVoiceProfileUploadCompleteForSiriProfileId_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyUserVoiceProfileUploadCompleteForSiriProfileId:withError:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nowPlayingTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingTimestamp];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numGuestsAccepted(void *a1, const char *a2, ...)
{
  return _[a1 numGuestsAccepted];
}

id objc_msgSend_numOfWords(void *a1, const char *a2, ...)
{
  return _[a1 numOfWords];
}

id objc_msgSend_numParticipantsWithTrust(void *a1, const char *a2, ...)
{
  return _[a1 numParticipantsWithTrust];
}

id objc_msgSend_numSharedUsers(void *a1, const char *a2, ...)
{
  return _[a1 numSharedUsers];
}

id objc_msgSend_numUsersCloudShareTrustNotConfigured(void *a1, const char *a2, ...)
{
  return _[a1 numUsersCloudShareTrustNotConfigured];
}

id objc_msgSend_numUsersWhoSyncedRecognizeMyVoice(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWhoSyncedRecognizeMyVoice];
}

id objc_msgSend_numUsersWithLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWithLocationServicesEnabled];
}

id objc_msgSend_numUsersWithMatchingSiriLanguage(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWithMatchingSiriLanguage];
}

id objc_msgSend_numUsersWithPersonalRequestsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWithPersonalRequestsEnabled];
}

id objc_msgSend_numUsersWithRecognizeMyVoiceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWithRecognizeMyVoiceEnabled];
}

id objc_msgSend_numUsersWithSiriCloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 numUsersWithSiriCloudSyncEnabled];
}

id objc_msgSend_numVoiceProfilesAvailable(void *a1, const char *a2, ...)
{
  return _[a1 numVoiceProfilesAvailable];
}

id objc_msgSend_number(void *a1, const char *a2, ...)
{
  return _[a1 number];
}

id objc_msgSend_numberOfActiveAssertions(void *a1, const char *a2, ...)
{
  return _[a1 numberOfActiveAssertions];
}

id objc_msgSend_numberOfPendingAndActiveAssertions(void *a1, const char *a2, ...)
{
  return _[a1 numberOfPendingAndActiveAssertions];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectForPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForPeerInfo:");
}

id objc_msgSend_objects(void *a1, const char *a2, ...)
{
  return _[a1 objects];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_objectsForIds_missingReferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsForIds:missingReferences:");
}

id objc_msgSend_objectsForKeys_notFoundMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsForKeys:notFoundMarker:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_objectsToRetry(void *a1, const char *a2, ...)
{
  return _[a1 objectsToRetry];
}

id objc_msgSend_observationDate(void *a1, const char *a2, ...)
{
  return _[a1 observationDate];
}

id objc_msgSend_observeAssetSet_queue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeAssetSet:queue:handler:");
}

id objc_msgSend_observer_purgeReferencesToBulletinID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observer:purgeReferencesToBulletinID:");
}

id objc_msgSend_offlineDictationCapable(void *a1, const char *a2, ...)
{
  return _[a1 offlineDictationCapable];
}

id objc_msgSend_offlineDictationStatus(void *a1, const char *a2, ...)
{
  return _[a1 offlineDictationStatus];
}

id objc_msgSend_offlineIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 offlineIdentifier];
}

id objc_msgSend_offlineLanguage(void *a1, const char *a2, ...)
{
  return _[a1 offlineLanguage];
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return _[a1 offset];
}

id objc_msgSend_oldId(void *a1, const char *a2, ...)
{
  return _[a1 oldId];
}

id objc_msgSend_oldIdForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldIdForKey:");
}

id objc_msgSend_onDemandDownloadForLocale_withProgress_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onDemandDownloadForLocale:withProgress:withCompletion:");
}

id objc_msgSend_onDeviceDictationLocales(void *a1, const char *a2, ...)
{
  return _[a1 onDeviceDictationLocales];
}

id objc_msgSend_onDeviceUtterancesPresent(void *a1, const char *a2, ...)
{
  return _[a1 onDeviceUtterancesPresent];
}

id objc_msgSend_onSpeaker(void *a1, const char *a2, ...)
{
  return _[a1 onSpeaker];
}

id objc_msgSend_oneBestTokenList(void *a1, const char *a2, ...)
{
  return _[a1 oneBestTokenList];
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openApplicationWithBundleID_URL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplicationWithBundleID:URL:completion:");
}

id objc_msgSend_openConnectionForURL_withConnectionId_initialPayload_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openConnectionForURL:withConnectionId:initialPayload:completion:");
}

id objc_msgSend_openInterval(void *a1, const char *a2, ...)
{
  return _[a1 openInterval];
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:completion:");
}

id objc_msgSend_openWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openWithError:");
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _[a1 operatingSystemVersion];
}

id objc_msgSend_opportuneSpeakListeningType(void *a1, const char *a2, ...)
{
  return _[a1 opportuneSpeakListeningType];
}

id objc_msgSend_opportuneSpeakingPauseInterval(void *a1, const char *a2, ...)
{
  return _[a1 opportuneSpeakingPauseInterval];
}

id objc_msgSend_opportuneSpeakingTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 opportuneSpeakingTimeoutInterval];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithDictionary:");
}

id objc_msgSend_orQueryCriterionWithSubcriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orQueryCriterionWithSubcriteria:");
}

id objc_msgSend_orderedContext(void *a1, const char *a2, ...)
{
  return _[a1 orderedContext];
}

id objc_msgSend_organizer(void *a1, const char *a2, ...)
{
  return _[a1 organizer];
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _[a1 origin];
}

id objc_msgSend_originPeerInfo(void *a1, const char *a2, ...)
{
  return _[a1 originPeerInfo];
}

id objc_msgSend_originalAudioFileURL(void *a1, const char *a2, ...)
{
  return _[a1 originalAudioFileURL];
}

id objc_msgSend_originalRank(void *a1, const char *a2, ...)
{
  return _[a1 originalRank];
}

id objc_msgSend_originalRequestId(void *a1, const char *a2, ...)
{
  return _[a1 originalRequestId];
}

id objc_msgSend_originalScore(void *a1, const char *a2, ...)
{
  return _[a1 originalScore];
}

id objc_msgSend_originatingDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 originatingDeviceName];
}

id objc_msgSend_orthography(void *a1, const char *a2, ...)
{
  return _[a1 orthography];
}

id objc_msgSend_outOfOrderBytesReceived(void *a1, const char *a2, ...)
{
  return _[a1 outOfOrderBytesReceived];
}

id objc_msgSend_outgoingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 outgoingResponseIdentifier];
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _[a1 outputDevices];
}

id objc_msgSend_outputVoice(void *a1, const char *a2, ...)
{
  return _[a1 outputVoice];
}

id objc_msgSend_outputVoiceWithFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputVoiceWithFallback:");
}

id objc_msgSend_outputVolume(void *a1, const char *a2, ...)
{
  return _[a1 outputVolume];
}

id objc_msgSend_outputs(void *a1, const char *a2, ...)
{
  return _[a1 outputs];
}

id objc_msgSend_outstandingResponses(void *a1, const char *a2, ...)
{
  return _[a1 outstandingResponses];
}

id objc_msgSend_overrideModeWhileInAmbient(void *a1, const char *a2, ...)
{
  return _[a1 overrideModeWhileInAmbient];
}

id objc_msgSend_overrideModelPath(void *a1, const char *a2, ...)
{
  return _[a1 overrideModelPath];
}

id objc_msgSend_owner(void *a1, const char *a2, ...)
{
  return _[a1 owner];
}

id objc_msgSend_ownerName(void *a1, const char *a2, ...)
{
  return _[a1 ownerName];
}

id objc_msgSend_ownerUser(void *a1, const char *a2, ...)
{
  return _[a1 ownerUser];
}

id objc_msgSend_packetCount(void *a1, const char *a2, ...)
{
  return _[a1 packetCount];
}

id objc_msgSend_packetNumber(void *a1, const char *a2, ...)
{
  return _[a1 packetNumber];
}

id objc_msgSend_packets(void *a1, const char *a2, ...)
{
  return _[a1 packets];
}

id objc_msgSend_packetsReceived(void *a1, const char *a2, ...)
{
  return _[a1 packetsReceived];
}

id objc_msgSend_packetsSent(void *a1, const char *a2, ...)
{
  return _[a1 packetsSent];
}

id objc_msgSend_pairedPhone(void *a1, const char *a2, ...)
{
  return _[a1 pairedPhone];
}

id objc_msgSend_pairedWatches(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatches];
}

id objc_msgSend_pairs(void *a1, const char *a2, ...)
{
  return _[a1 pairs];
}

id objc_msgSend_pairsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairsAtIndex:");
}

id objc_msgSend_pairsCount(void *a1, const char *a2, ...)
{
  return _[a1 pairsCount];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return _[a1 parameters];
}

id objc_msgSend_parentalRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 parentalRestrictions];
}

id objc_msgSend_partialSerializedBackingStoreIncludingKeys_excludingMandatoryKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:");
}

id objc_msgSend_partiallyUpdatedContextForDeviceContextKeys_excludingMandatoryKeys_fromDeviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:");
}

id objc_msgSend_participant(void *a1, const char *a2, ...)
{
  return _[a1 participant];
}

id objc_msgSend_participantID(void *a1, const char *a2, ...)
{
  return _[a1 participantID];
}

id objc_msgSend_participants(void *a1, const char *a2, ...)
{
  return _[a1 participants];
}

id objc_msgSend_passActivationState(void *a1, const char *a2, ...)
{
  return _[a1 passActivationState];
}

id objc_msgSend_passesOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passesOfType:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_patternId(void *a1, const char *a2, ...)
{
  return _[a1 patternId];
}

id objc_msgSend_pauseCounts(void *a1, const char *a2, ...)
{
  return _[a1 pauseCounts];
}

id objc_msgSend_pauseDictationRecognitionWithAssistantId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseDictationRecognitionWithAssistantId:requestId:");
}

id objc_msgSend_pauseRecognition(void *a1, const char *a2, ...)
{
  return _[a1 pauseRecognition];
}

id objc_msgSend_payloadBeginAudioSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 payloadBeginAudioSessionRequest];
}

id objc_msgSend_payloadBeginAudioSessionResponse(void *a1, const char *a2, ...)
{
  return _[a1 payloadBeginAudioSessionResponse];
}

id objc_msgSend_payloadEndAudioSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 payloadEndAudioSessionRequest];
}

id objc_msgSend_payloadEndAudioSessionResponse(void *a1, const char *a2, ...)
{
  return _[a1 payloadEndAudioSessionResponse];
}

id objc_msgSend_payloadKeepAudioSessionAliveRequest(void *a1, const char *a2, ...)
{
  return _[a1 payloadKeepAudioSessionAliveRequest];
}

id objc_msgSend_payloadKeepAudioSessionAliveResponse(void *a1, const char *a2, ...)
{
  return _[a1 payloadKeepAudioSessionAliveResponse];
}

id objc_msgSend_peakPowerForChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peakPowerForChannel:");
}

id objc_msgSend_peer(void *a1, const char *a2, ...)
{
  return _[a1 peer];
}

id objc_msgSend_peerAssistantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerAssistantIdentifier];
}

id objc_msgSend_peerBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 peerBuildVersion];
}

id objc_msgSend_peerConnection_handlePBSubclass_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerConnection:handlePBSubclass:completion:");
}

id objc_msgSend_peerExportsSharedData(void *a1, const char *a2, ...)
{
  return _[a1 peerExportsSharedData];
}

id objc_msgSend_peerHostname(void *a1, const char *a2, ...)
{
  return _[a1 peerHostname];
}

id objc_msgSend_peerInfo(void *a1, const char *a2, ...)
{
  return _[a1 peerInfo];
}

id objc_msgSend_peerInfoForAssistantId_allowNonPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerInfoForAssistantId:allowNonPeers:");
}

id objc_msgSend_peerInfoForIDSDeviceUniqueIdentifier_allowNonPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:");
}

id objc_msgSend_peerLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 peerLanguageCode];
}

id objc_msgSend_peerLocationConnection_didReceiveUnsolicitedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerLocationConnection:didReceiveUnsolicitedLocation:");
}

id objc_msgSend_peerLocationConnectionSuggestsClearingCachedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerLocationConnectionSuggestsClearingCachedLocation:");
}

id objc_msgSend_peerLocationPolicySuggestsClearingCachedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerLocationPolicySuggestsClearingCachedLocation:");
}

id objc_msgSend_peerName(void *a1, const char *a2, ...)
{
  return _[a1 peerName];
}

id objc_msgSend_peerSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 peerSiriEnabled];
}

id objc_msgSend_peerSpeechIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerSpeechIdentifier];
}

id objc_msgSend_peerStreamConnection_failedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerStreamConnection:failedWithError:");
}

id objc_msgSend_peerStreamConnection_requestMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerStreamConnection:requestMetrics:");
}

id objc_msgSend_peerStreamConnectionHasIncomingPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerStreamConnectionHasIncomingPeer:");
}

id objc_msgSend_peerToPeerHandoffCapability(void *a1, const char *a2, ...)
{
  return _[a1 peerToPeerHandoffCapability];
}

id objc_msgSend_peerType(void *a1, const char *a2, ...)
{
  return _[a1 peerType];
}

id objc_msgSend_peerUserAgentString(void *a1, const char *a2, ...)
{
  return _[a1 peerUserAgentString];
}

id objc_msgSend_peerVersion(void *a1, const char *a2, ...)
{
  return _[a1 peerVersion];
}

id objc_msgSend_peers(void *a1, const char *a2, ...)
{
  return _[a1 peers];
}

id objc_msgSend_pendServiceReloadNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendServiceReloadNotification:");
}

id objc_msgSend_perceptionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 perceptionIdentifier];
}

id objc_msgSend_performActionWithIdentifier_forUNNotificationWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performActionWithIdentifier:forUNNotificationWithIdentifier:completion:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAfterAlerts_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAfterAlerts:timeout:");
}

id objc_msgSend_performDeviceRequest_device_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDeviceRequest:device:completion:");
}

id objc_msgSend_performIntegrityCheckWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performIntegrityCheckWithError:");
}

id objc_msgSend_performProximityScan(void *a1, const char *a2, ...)
{
  return _[a1 performProximityScan];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:");
}

id objc_msgSend_personFromMeContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personFromMeContact:");
}

id objc_msgSend_personNameComponents(void *a1, const char *a2, ...)
{
  return _[a1 personNameComponents];
}

id objc_msgSend_personaID(void *a1, const char *a2, ...)
{
  return _[a1 personaID];
}

id objc_msgSend_personaId(void *a1, const char *a2, ...)
{
  return _[a1 personaId];
}

id objc_msgSend_personalDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceState];
}

id objc_msgSend_personalDomainNotificationProvider(void *a1, const char *a2, ...)
{
  return _[a1 personalDomainNotificationProvider];
}

id objc_msgSend_personalDomainSettingsDidChange_newUserSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personalDomainSettingsDidChange:newUserSettings:");
}

id objc_msgSend_personalDomainsIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 personalDomainsIsEnabled];
}

id objc_msgSend_personalRequestsEnabledAccessories(void *a1, const char *a2, ...)
{
  return _[a1 personalRequestsEnabledAccessories];
}

id objc_msgSend_personalRequestsState(void *a1, const char *a2, ...)
{
  return _[a1 personalRequestsState];
}

id objc_msgSend_phoneCallState(void *a1, const char *a2, ...)
{
  return _[a1 phoneCallState];
}

id objc_msgSend_phoneHangUpCallType(void *a1, const char *a2, ...)
{
  return _[a1 phoneHangUpCallType];
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumbers];
}

id objc_msgSend_phoneSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 phoneSearchResults];
}

id objc_msgSend_phones(void *a1, const char *a2, ...)
{
  return _[a1 phones];
}

id objc_msgSend_phoneticRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 phoneticRepresentation];
}

id objc_msgSend_phrases(void *a1, const char *a2, ...)
{
  return _[a1 phrases];
}

id objc_msgSend_phsAssetManifest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phsAssetManifest:");
}

id objc_msgSend_pickableRoutesForCategory_andMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:andMode:");
}

id objc_msgSend_pickedRoute(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoute];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pidRestrictedCenterNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pidRestrictedCenterNamed:");
}

id objc_msgSend_pineBoardSystemState(void *a1, const char *a2, ...)
{
  return _[a1 pineBoardSystemState];
}

id objc_msgSend_pingCount(void *a1, const char *a2, ...)
{
  return _[a1 pingCount];
}

id objc_msgSend_pingInfoFromSiriCoreConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pingInfoFromSiriCoreConnectionMetrics:");
}

id objc_msgSend_pingMean(void *a1, const char *a2, ...)
{
  return _[a1 pingMean];
}

id objc_msgSend_pk_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pk_objectsPassingTest:");
}

id objc_msgSend_placeData2(void *a1, const char *a2, ...)
{
  return _[a1 placeData2];
}

id objc_msgSend_placeResultType(void *a1, const char *a2, ...)
{
  return _[a1 placeResultType];
}

id objc_msgSend_platform(void *a1, const char *a2, ...)
{
  return _[a1 platform];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _[a1 play];
}

id objc_msgSend_playAlertForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playAlertForType:");
}

id objc_msgSend_playRecordingStartAlert(void *a1, const char *a2, ...)
{
  return _[a1 playRecordingStartAlert];
}

id objc_msgSend_playbackDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 playbackDeviceIDs];
}

id objc_msgSend_playbackDeviceList(void *a1, const char *a2, ...)
{
  return _[a1 playbackDeviceList];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return _[a1 playbackState];
}

id objc_msgSend_playbackStateSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 playbackStateSnapshot];
}

id objc_msgSend_plistData(void *a1, const char *a2, ...)
{
  return _[a1 plistData];
}

id objc_msgSend_pointerValue(void *a1, const char *a2, ...)
{
  return _[a1 pointerValue];
}

id objc_msgSend_policyId(void *a1, const char *a2, ...)
{
  return _[a1 policyId];
}

id objc_msgSend_populateNullsWithCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateNullsWithCreationTime:");
}

id objc_msgSend_portType(void *a1, const char *a2, ...)
{
  return _[a1 portType];
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return _[a1 position];
}

id objc_msgSend_positionInMilliseconds(void *a1, const char *a2, ...)
{
  return _[a1 positionInMilliseconds];
}

id objc_msgSend_post(void *a1, const char *a2, ...)
{
  return _[a1 post];
}

id objc_msgSend_postGen(void *a1, const char *a2, ...)
{
  return _[a1 postGen];
}

id objc_msgSend_postJSDiscoveryNotificationForBTDeviceWithInfo_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postJSDiscoveryNotificationForBTDeviceWithInfo:withCompletion:");
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postNotificationRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationRequest:completion:");
}

id objc_msgSend_postNotificationRequest_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationRequest:options:responseHandler:");
}

id objc_msgSend_postTestResultCandidateWithAssistantId_requestId_rcId_recognitionSausage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postTestResultCandidateWithAssistantId:requestId:rcId:recognitionSausage:");
}

id objc_msgSend_postTestResultCandidateWithRcId_recognitionSausage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postTestResultCandidateWithRcId:recognitionSausage:");
}

id objc_msgSend_postTestResultSelectedWithAssistantId_requestId_rcId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postTestResultSelectedWithAssistantId:requestId:rcId:");
}

id objc_msgSend_postTestResultSelectedWithRcId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postTestResultSelectedWithRcId:");
}

id objc_msgSend_pre(void *a1, const char *a2, ...)
{
  return _[a1 pre];
}

id objc_msgSend_precedence(void *a1, const char *a2, ...)
{
  return _[a1 precedence];
}

id objc_msgSend_predefinedServer(void *a1, const char *a2, ...)
{
  return _[a1 predefinedServer];
}

id objc_msgSend_predicateForEventsWithStartDate_endDate_calendars_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForEventsWithStartDate:endDate:calendars:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_predictionIdToAnnounceIdMap(void *a1, const char *a2, ...)
{
  return _[a1 predictionIdToAnnounceIdMap];
}

id objc_msgSend_predictionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 predictionIdentifier];
}

id objc_msgSend_preferOnDeviceRecognition(void *a1, const char *a2, ...)
{
  return _[a1 preferOnDeviceRecognition];
}

id objc_msgSend_preferOnlineRecognition(void *a1, const char *a2, ...)
{
  return _[a1 preferOnlineRecognition];
}

id objc_msgSend_preferOnlineRecognitionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 preferOnlineRecognitionEnabled];
}

id objc_msgSend_preferencesHaveBeenSynchronized(void *a1, const char *a2, ...)
{
  return _[a1 preferencesHaveBeenSynchronized];
}

id objc_msgSend_preferredLanguage(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguage];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_preferredLocalizationsFromArray_forPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLocalizationsFromArray:forPreferences:");
}

id objc_msgSend_preferredMediaUser(void *a1, const char *a2, ...)
{
  return _[a1 preferredMediaUser];
}

id objc_msgSend_preferredMediaUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 preferredMediaUserInfo];
}

id objc_msgSend_preferredMediaUserSharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 preferredMediaUserSharedUserID];
}

id objc_msgSend_preferredMessagingOptionsForCommands(void *a1, const char *a2, ...)
{
  return _[a1 preferredMessagingOptionsForCommands];
}

id objc_msgSend_preferredPullingModeForDeviceWithIdentifier_fromGeneration_toGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:");
}

id objc_msgSend_prefersWWAN(void *a1, const char *a2, ...)
{
  return _[a1 prefersWWAN];
}

id objc_msgSend_prefetchCurrentLocation(void *a1, const char *a2, ...)
{
  return _[a1 prefetchCurrentLocation];
}

id objc_msgSend_preheat(void *a1, const char *a2, ...)
{
  return _[a1 preheat];
}

id objc_msgSend_preheatAndMakeQuiet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatAndMakeQuiet:");
}

id objc_msgSend_preheatBackgroundContext(void *a1, const char *a2, ...)
{
  return _[a1 preheatBackgroundContext];
}

id objc_msgSend_preheatBundleForServicePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatBundleForServicePath:");
}

id objc_msgSend_preheatDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatDomain:");
}

id objc_msgSend_preheatEuclidModelWithLanguageCode_clientID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatEuclidModelWithLanguageCode:clientID:");
}

id objc_msgSend_preheatForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatForLanguageCode:");
}

id objc_msgSend_preheatRecognizerWithOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatRecognizerWithOption:");
}

id objc_msgSend_preheatRecognizerWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatRecognizerWithOptions:");
}

id objc_msgSend_preheatServiceBundle(void *a1, const char *a2, ...)
{
  return _[a1 preheatServiceBundle];
}

id objc_msgSend_preheatServicesForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatServicesForDomain:");
}

id objc_msgSend_preheatSessions(void *a1, const char *a2, ...)
{
  return _[a1 preheatSessions];
}

id objc_msgSend_preheatWithOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatWithOption:");
}

id objc_msgSend_preheatWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatWithOptions:");
}

id objc_msgSend_preheatWithRecordDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatWithRecordDeviceIdentifier:");
}

id objc_msgSend_preheatWithStyle_forOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preheatWithStyle:forOptions:completion:");
}

id objc_msgSend_prepareAudioSystemWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareAudioSystemWithContext:completion:");
}

id objc_msgSend_prepareForAssistantEnablementInBackground(void *a1, const char *a2, ...)
{
  return _[a1 prepareForAssistantEnablementInBackground];
}

id objc_msgSend_prepareForExtraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForExtraction:");
}

id objc_msgSend_prepareForMode_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForMode:withOptions:");
}

id objc_msgSend_prepareForPhoneCall(void *a1, const char *a2, ...)
{
  return _[a1 prepareForPhoneCall];
}

id objc_msgSend_prepareForRetry(void *a1, const char *a2, ...)
{
  return _[a1 prepareForRetry];
}

id objc_msgSend_prepareForShutdown(void *a1, const char *a2, ...)
{
  return _[a1 prepareForShutdown];
}

id objc_msgSend_prepareForStartPlaybackWithDestination_intent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForStartPlaybackWithDestination:intent:completion:");
}

id objc_msgSend_prepareSpeechCaptureWithOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSpeechCaptureWithOptions:error:");
}

id objc_msgSend_prepareStorageForDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareStorageForDeviceWithIdentifier:");
}

id objc_msgSend_prepareSyncWithAnchors_forReasons_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSyncWithAnchors:forReasons:delegate:");
}

id objc_msgSend_prepareWithCertificateData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareWithCertificateData:completion:");
}

id objc_msgSend_previewRestricted(void *a1, const char *a2, ...)
{
  return _[a1 previewRestricted];
}

id objc_msgSend_previousItem(void *a1, const char *a2, ...)
{
  return _[a1 previousItem];
}

id objc_msgSend_previousLangaugeCode(void *a1, const char *a2, ...)
{
  return _[a1 previousLangaugeCode];
}

id objc_msgSend_previousLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 previousLanguageCode];
}

id objc_msgSend_previousOutputVoice(void *a1, const char *a2, ...)
{
  return _[a1 previousOutputVoice];
}

id objc_msgSend_previousUtterance(void *a1, const char *a2, ...)
{
  return _[a1 previousUtterance];
}

id objc_msgSend_prewarm(void *a1, const char *a2, ...)
{
  return _[a1 prewarm];
}

id objc_msgSend_prewarmDeviceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmDeviceWithIdentifier:");
}

id objc_msgSend_prewarmWithAssistantId_languageCode_prewarmOptions_sharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmWithAssistantId:languageCode:prewarmOptions:sharedUserId:");
}

id objc_msgSend_primaryBudSide(void *a1, const char *a2, ...)
{
  return _[a1 primaryBudSide];
}

id objc_msgSend_primaryEarbudSide(void *a1, const char *a2, ...)
{
  return _[a1 primaryEarbudSide];
}

id objc_msgSend_primaryHome(void *a1, const char *a2, ...)
{
  return _[a1 primaryHome];
}

id objc_msgSend_primaryInEarStatus(void *a1, const char *a2, ...)
{
  return _[a1 primaryInEarStatus];
}

id objc_msgSend_primaryPlacement(void *a1, const char *a2, ...)
{
  return _[a1 primaryPlacement];
}

id objc_msgSend_primarySubflowIface(void *a1, const char *a2, ...)
{
  return _[a1 primarySubflowIface];
}

id objc_msgSend_primarySubflowInterfaceName(void *a1, const char *a2, ...)
{
  return _[a1 primarySubflowInterfaceName];
}

id objc_msgSend_primarySubflowSwitchCount(void *a1, const char *a2, ...)
{
  return _[a1 primarySubflowSwitchCount];
}

id objc_msgSend_primaryUser(void *a1, const char *a2, ...)
{
  return _[a1 primaryUser];
}

id objc_msgSend_primeToken(void *a1, const char *a2, ...)
{
  return _[a1 primeToken];
}

id objc_msgSend_primeTokenWrapperForAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primeTokenWrapperForAceHost:");
}

id objc_msgSend_privacyCategory(void *a1, const char *a2, ...)
{
  return _[a1 privacyCategory];
}

id objc_msgSend_privacyPolicy(void *a1, const char *a2, ...)
{
  return _[a1 privacyPolicy];
}

id objc_msgSend_privateAudioSessionStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateAudioSessionStateDidChange:");
}

id objc_msgSend_privateCloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 privateCloudDatabase];
}

id objc_msgSend_probeConnection(void *a1, const char *a2, ...)
{
  return _[a1 probeConnection];
}

id objc_msgSend_problemDescription(void *a1, const char *a2, ...)
{
  return _[a1 problemDescription];
}

id objc_msgSend_processData_usingProcedure_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:usingProcedure:completion:");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processLaunchMachTime(void *a1, const char *a2, ...)
{
  return _[a1 processLaunchMachTime];
}

id objc_msgSend_processLoadedMachTime(void *a1, const char *a2, ...)
{
  return _[a1 processLoadedMachTime];
}

id objc_msgSend_processRemoteCommandWithPayload_fromPeer_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processRemoteCommandWithPayload:fromPeer:withReply:");
}

id objc_msgSend_processedAudioDuration(void *a1, const char *a2, ...)
{
  return _[a1 processedAudioDuration];
}

id objc_msgSend_processedAudioDurationMs(void *a1, const char *a2, ...)
{
  return _[a1 processedAudioDurationMs];
}

id objc_msgSend_processorForBMSiriHomeSeed_homeId_account_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processorForBMSiriHomeSeed:homeId:account:");
}

id objc_msgSend_processorForBMSiriHomeSeed_homeId_userId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processorForBMSiriHomeSeed:homeId:userId:");
}

id objc_msgSend_processorForBMSiriUserAggregationId_userId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processorForBMSiriUserAggregationId:userId:");
}

id objc_msgSend_processorForBMSiriUserSeed_userId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processorForBMSiriUserSeed:userId:");
}

id objc_msgSend_productBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 productBuildVersion];
}

id objc_msgSend_productCategory(void *a1, const char *a2, ...)
{
  return _[a1 productCategory];
}

id objc_msgSend_productID(void *a1, const char *a2, ...)
{
  return _[a1 productID];
}

id objc_msgSend_productId(void *a1, const char *a2, ...)
{
  return _[a1 productId];
}

id objc_msgSend_productIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 productIdentifier];
}

id objc_msgSend_productInfoWithProductID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "productInfoWithProductID:");
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return _[a1 productName];
}

id objc_msgSend_productPrefix(void *a1, const char *a2, ...)
{
  return _[a1 productPrefix];
}

id objc_msgSend_productType(void *a1, const char *a2, ...)
{
  return _[a1 productType];
}

id objc_msgSend_productTypePrefix(void *a1, const char *a2, ...)
{
  return _[a1 productTypePrefix];
}

id objc_msgSend_productVersion(void *a1, const char *a2, ...)
{
  return _[a1 productVersion];
}

id objc_msgSend_projectIdFromName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "projectIdFromName:");
}

id objc_msgSend_promptContextProto(void *a1, const char *a2, ...)
{
  return _[a1 promptContextProto];
}

id objc_msgSend_pronunciationData(void *a1, const char *a2, ...)
{
  return _[a1 pronunciationData];
}

id objc_msgSend_propagateDataSharingStatusToAccessoriesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propagateDataSharingStatusToAccessoriesWithCompletion:");
}

id objc_msgSend_propagateToAllHomeAccessoriesAfterReprompt_source_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propagateToAllHomeAccessoriesAfterReprompt:source:reason:completion:");
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_proto(void *a1, const char *a2, ...)
{
  return _[a1 proto];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_provider_availableAnnouncementRequestTypesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:availableAnnouncementRequestTypesChanged:");
}

id objc_msgSend_provider_eligibleAnnouncementRequestTypesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:eligibleAnnouncementRequestTypesChanged:");
}

id objc_msgSend_providerFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerFromString:");
}

id objc_msgSend_providerStyle(void *a1, const char *a2, ...)
{
  return _[a1 providerStyle];
}

id objc_msgSend_provisionedVoiceProfilesForAppDomain_withLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provisionedVoiceProfilesForAppDomain:withLocale:");
}

id objc_msgSend_provisionedVoiceProfilesForLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provisionedVoiceProfilesForLocale:");
}

id objc_msgSend_proximity(void *a1, const char *a2, ...)
{
  return _[a1 proximity];
}

id objc_msgSend_pruneCacheWithCurrentSynapseInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneCacheWithCurrentSynapseInfo:");
}

id objc_msgSend_publicationDate(void *a1, const char *a2, ...)
{
  return _[a1 publicationDate];
}

id objc_msgSend_publishObjectHasArrived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishObjectHasArrived:");
}

id objc_msgSend_publishParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishParticipation:");
}

id objc_msgSend_publishState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishState:");
}

id objc_msgSend_publishStateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishStateWithBlock:");
}

id objc_msgSend_publisherBulletinID(void *a1, const char *a2, ...)
{
  return _[a1 publisherBulletinID];
}

id objc_msgSend_publisherFromStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherFromStartTime:");
}

id objc_msgSend_publisherWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithOptions:");
}

id objc_msgSend_publisherWithUseCase_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithUseCase:options:");
}

id objc_msgSend_publishers(void *a1, const char *a2, ...)
{
  return _[a1 publishers];
}

id objc_msgSend_publishersForAccounts_deviceTypes_includeLocal_options_useCase_pipeline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishersForAccounts:deviceTypes:includeLocal:options:useCase:pipeline:");
}

id objc_msgSend_publishersForDevices_withUseCase_startTime_endTime_maxEvents_lastN_reversed_includeLocal_pipeline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishersForDevices:withUseCase:startTime:endTime:maxEvents:lastN:reversed:includeLocal:pipeline:");
}

id objc_msgSend_punchOutUri(void *a1, const char *a2, ...)
{
  return _[a1 punchOutUri];
}

id objc_msgSend_purgeDeletedEventRecordsBeforeOrEqualToDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeDeletedEventRecordsBeforeOrEqualToDate:completion:");
}

id objc_msgSend_purgeOldAudioData(void *a1, const char *a2, ...)
{
  return _[a1 purgeOldAudioData];
}

id objc_msgSend_purgeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeWithCompletion:");
}

id objc_msgSend_pushConnection(void *a1, const char *a2, ...)
{
  return _[a1 pushConnection];
}

id objc_msgSend_pushContextSnapshotForCurrentRequestWithID_toDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushContextSnapshotForCurrentRequestWithID:toDevice:");
}

id objc_msgSend_pushContextToContextCollectorIncludingKeys_excludingMandatoryKeys_expectingResponseIncludingKeys_excludingMandatoryKeys_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushContextToContextCollectorIncludingKeys:excludingMandatoryKeys:expectingResponseIncludingKeys:excludingMandatoryKeys:completion:");
}

id objc_msgSend_pushGenerationsByDataTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushGenerationsByDataTypes:");
}

id objc_msgSend_pushMyriadAdvertisementContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushMyriadAdvertisementContext:completionHandler:");
}

id objc_msgSend_pushMyriadAdvertisementContextToContextCollector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushMyriadAdvertisementContextToContextCollector:completion:");
}

id objc_msgSend_pushSCDAAdvertisementContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushSCDAAdvertisementContext:completionHandler:");
}

id objc_msgSend_pushSCDAAdvertisementContextToContextCollector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushSCDAAdvertisementContextToContextCollector:completion:");
}

id objc_msgSend_pushSharedDataToPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushSharedDataToPeer:");
}

id objc_msgSend_putSyncToken_forAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "putSyncToken:forAceHost:");
}

id objc_msgSend_qualifiedCommandName(void *a1, const char *a2, ...)
{
  return _[a1 qualifiedCommandName];
}

id objc_msgSend_quantityWithUnit_doubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quantityWithUnit:doubleValue:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueResultObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queueResultObjects:");
}

id objc_msgSend_queueState(void *a1, const char *a2, ...)
{
  return _[a1 queueState];
}

id objc_msgSend_queuedAnchors(void *a1, const char *a2, ...)
{
  return _[a1 queuedAnchors];
}

id objc_msgSend_queuedReasons(void *a1, const char *a2, ...)
{
  return _[a1 queuedReasons];
}

id objc_msgSend_quickStopDirectInvocationPayload(void *a1, const char *a2, ...)
{
  return _[a1 quickStopDirectInvocationPayload];
}

id objc_msgSend_quickStopWasHandledWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quickStopWasHandledWithActions:");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeWithStartDate:endDate:");
}

id objc_msgSend_rapportEffectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rapportEffectiveIdentifier];
}

id objc_msgSend_rapportLink_didFindDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLink:didFindDevice:");
}

id objc_msgSend_rapportLink_didLoseDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLink:didLoseDevice:");
}

id objc_msgSend_rapportLink_didReceiveMessage_ofType_fromPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLink:didReceiveMessage:ofType:fromPeer:completion:");
}

id objc_msgSend_rapportLink_didUpdateDevice_changes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLink:didUpdateDevice:changes:");
}

id objc_msgSend_rapportLink_didUpdateLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLink:didUpdateLocalDevice:");
}

id objc_msgSend_rapportLinkDidInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLinkDidInterrupt:");
}

id objc_msgSend_rapportLinkDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportLinkDidInvalidate:");
}

id objc_msgSend_rateLimitTimer(void *a1, const char *a2, ...)
{
  return _[a1 rateLimitTimer];
}

id objc_msgSend_rawData(void *a1, const char *a2, ...)
{
  return _[a1 rawData];
}

id objc_msgSend_rawRecognition(void *a1, const char *a2, ...)
{
  return _[a1 rawRecognition];
}

id objc_msgSend_readData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readData:");
}

id objc_msgSend_readDataUpToLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDataUpToLength:error:");
}

id objc_msgSend_readRSSI(void *a1, const char *a2, ...)
{
  return _[a1 readRSSI];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonDescription(void *a1, const char *a2, ...)
{
  return _[a1 reasonDescription];
}

id objc_msgSend_receiveMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receiveMessage:completion:");
}

id objc_msgSend_receivedNotificationResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedNotificationResponse:");
}

id objc_msgSend_receivingAddresses(void *a1, const char *a2, ...)
{
  return _[a1 receivingAddresses];
}

id objc_msgSend_recencyDate(void *a1, const char *a2, ...)
{
  return _[a1 recencyDate];
}

id objc_msgSend_recipientsBcc(void *a1, const char *a2, ...)
{
  return _[a1 recipientsBcc];
}

id objc_msgSend_recipientsCc(void *a1, const char *a2, ...)
{
  return _[a1 recipientsCc];
}

id objc_msgSend_recipientsTo(void *a1, const char *a2, ...)
{
  return _[a1 recipientsTo];
}

id objc_msgSend_recognition(void *a1, const char *a2, ...)
{
  return _[a1 recognition];
}

id objc_msgSend_recognitionOverrides(void *a1, const char *a2, ...)
{
  return _[a1 recognitionOverrides];
}

id objc_msgSend_recognitionPaused(void *a1, const char *a2, ...)
{
  return _[a1 recognitionPaused];
}

id objc_msgSend_recognitionText(void *a1, const char *a2, ...)
{
  return _[a1 recognitionText];
}

id objc_msgSend_reconnectNow(void *a1, const char *a2, ...)
{
  return _[a1 reconnectNow];
}

id objc_msgSend_recordBuilder(void *a1, const char *a2, ...)
{
  return _[a1 recordBuilder];
}

id objc_msgSend_recordDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 recordDeviceInfo];
}

id objc_msgSend_recordFeedbackOfType_forSpeakable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordFeedbackOfType:forSpeakable:");
}

id objc_msgSend_recordFeedbackOfType_forSpeakableId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordFeedbackOfType:forSpeakableId:");
}

id objc_msgSend_recordID(void *a1, const char *a2, ...)
{
  return _[a1 recordID];
}

id objc_msgSend_recordId(void *a1, const char *a2, ...)
{
  return _[a1 recordId];
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return _[a1 recordName];
}

id objc_msgSend_recordNotificationUsageForSpeakableId_withStartDate_withEndDate_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:");
}

id objc_msgSend_recordRecommendedAction_forSpeakableId_withModelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordRecommendedAction:forSpeakableId:withModelIdentifier:");
}

id objc_msgSend_recordType(void *a1, const char *a2, ...)
{
  return _[a1 recordType];
}

id objc_msgSend_recordUserAudio(void *a1, const char *a2, ...)
{
  return _[a1 recordUserAudio];
}

id objc_msgSend_recordZoneID(void *a1, const char *a2, ...)
{
  return _[a1 recordZoneID];
}

id objc_msgSend_recordZoneName(void *a1, const char *a2, ...)
{
  return _[a1 recordZoneName];
}

id objc_msgSend_recordingInfo(void *a1, const char *a2, ...)
{
  return _[a1 recordingInfo];
}

id objc_msgSend_recordingInfoForPreheatWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordingInfoForPreheatWithEvent:");
}

id objc_msgSend_recordingInfoProvider(void *a1, const char *a2, ...)
{
  return _[a1 recordingInfoProvider];
}

id objc_msgSend_redactionTarget(void *a1, const char *a2, ...)
{
  return _[a1 redactionTarget];
}

id objc_msgSend_redirectForServerURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redirectForServerURLString:");
}

id objc_msgSend_reduceWithInitial_nextPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceWithInitial:nextPartialResult:");
}

id objc_msgSend_reelectContextCollectorWithBestScore(void *a1, const char *a2, ...)
{
  return _[a1 reelectContextCollectorWithBestScore];
}

id objc_msgSend_refId(void *a1, const char *a2, ...)
{
  return _[a1 refId];
}

id objc_msgSend_referenceFrame(void *a1, const char *a2, ...)
{
  return _[a1 referenceFrame];
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _[a1 refresh];
}

id objc_msgSend_refreshAssistantValidation(void *a1, const char *a2, ...)
{
  return _[a1 refreshAssistantValidation];
}

id objc_msgSend_refreshHomeAndUserDetails(void *a1, const char *a2, ...)
{
  return _[a1 refreshHomeAndUserDetails];
}

id objc_msgSend_refreshHomeKitOnboardedUsers(void *a1, const char *a2, ...)
{
  return _[a1 refreshHomeKitOnboardedUsers];
}

id objc_msgSend_refreshTrial(void *a1, const char *a2, ...)
{
  return _[a1 refreshTrial];
}

id objc_msgSend_refreshValidationData(void *a1, const char *a2, ...)
{
  return _[a1 refreshValidationData];
}

id objc_msgSend_region(void *a1, const char *a2, ...)
{
  return _[a1 region];
}

id objc_msgSend_registerAsLocationClient(void *a1, const char *a2, ...)
{
  return _[a1 registerAsLocationClient];
}

id objc_msgSend_registerAssetDelegate_assetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerAssetDelegate:assetType:");
}

id objc_msgSend_registerClient(void *a1, const char *a2, ...)
{
  return _[a1 registerClient];
}

id objc_msgSend_registerContextTransformer_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerContextTransformer:forType:");
}

id objc_msgSend_registerForCallbacksForProvider_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForCallbacksForProvider:completionHandler:");
}

id objc_msgSend_registerForContainerIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForContainerIDs:completion:");
}

id objc_msgSend_registerForSubscriptionWithID_inDatabase_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForSubscriptionWithID:inDatabase:handler:");
}

id objc_msgSend_registerMessageResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerMessageResolver:");
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:");
}

id objc_msgSend_registerRequestID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerRequestID:options:");
}

id objc_msgSend_registerRequestID_options_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerRequestID:options:handler:");
}

id objc_msgSend_registerSensitiveConditionsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerSensitiveConditionsObserver:");
}

id objc_msgSend_registerSnapshotUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerSnapshotUpdater:");
}

id objc_msgSend_registerWithAssetsDelegate_withType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithAssetsDelegate:withType:");
}

id objc_msgSend_registerWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithCompletionHandler:");
}

id objc_msgSend_registerWithWirelessCoexManager(void *a1, const char *a2, ...)
{
  return _[a1 registerWithWirelessCoexManager];
}

id objc_msgSend_rejectGesture(void *a1, const char *a2, ...)
{
  return _[a1 rejectGesture];
}

id objc_msgSend_releaseAudioSession(void *a1, const char *a2, ...)
{
  return _[a1 releaseAudioSession];
}

id objc_msgSend_releaseAudioSessionOnRecordingCompletion(void *a1, const char *a2, ...)
{
  return _[a1 releaseAudioSessionOnRecordingCompletion];
}

id objc_msgSend_releaseDormancySuspendAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseDormancySuspendAssertion:");
}

id objc_msgSend_releasePowerAssertionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releasePowerAssertionWithName:");
}

id objc_msgSend_releaseShutdownAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseShutdownAssertion:");
}

id objc_msgSend_releaseStoredContextCommandsAndSendCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseStoredContextCommandsAndSendCommands:");
}

id objc_msgSend_releaseWiFiAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseWiFiAssertion];
}

id objc_msgSend_relinquishAsertionsPassingTest_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquishAsertionsPassingTest:context:");
}

id objc_msgSend_relinquishAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquishAssertion:");
}

id objc_msgSend_relinquishAudioSessionAssertionsWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquishAudioSessionAssertionsWithContext:");
}

id objc_msgSend_relinquishLocalAssertions(void *a1, const char *a2, ...)
{
  return _[a1 relinquishLocalAssertions];
}

id objc_msgSend_relinquishWithContext_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquishWithContext:options:");
}

id objc_msgSend_relinquishWithError_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relinquishWithError:options:");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _[a1 reload];
}

id objc_msgSend_reloadServiceBundleAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadServiceBundleAtPath:");
}

id objc_msgSend_reloadServiceForNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadServiceForNotification:");
}

id objc_msgSend_reloadServicesForAllPendingServiceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 reloadServicesForAllPendingServiceNotifications];
}

id objc_msgSend_reloadSmartSiriVolume(void *a1, const char *a2, ...)
{
  return _[a1 reloadSmartSiriVolume];
}

id objc_msgSend_remainingTime(void *a1, const char *a2, ...)
{
  return _[a1 remainingTime];
}

id objc_msgSend_remoteContextStore(void *a1, const char *a2, ...)
{
  return _[a1 remoteContextStore];
}

id objc_msgSend_remoteDevice(void *a1, const char *a2, ...)
{
  return _[a1 remoteDevice];
}

id objc_msgSend_remoteDeviceForPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteDeviceForPeerInfo:");
}

id objc_msgSend_remoteDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceUID];
}

id objc_msgSend_remoteDevicesWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteDevicesWithError:");
}

id objc_msgSend_remoteMetrics(void *a1, const char *a2, ...)
{
  return _[a1 remoteMetrics];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remoteRequestInfo(void *a1, const char *a2, ...)
{
  return _[a1 remoteRequestInfo];
}

id objc_msgSend_remoteTimerManager(void *a1, const char *a2, ...)
{
  return _[a1 remoteTimerManager];
}

id objc_msgSend_remove_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remove:error:");
}

id objc_msgSend_removeAccessoryFromPropagationList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAccessoryFromPropagationList:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAndSave(void *a1, const char *a2, ...)
{
  return _[a1 removeAndSave];
}

id objc_msgSend_removeAnnouncementRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnnouncementRequest:");
}

id objc_msgSend_removeBulletinItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBulletinItem:");
}

id objc_msgSend_removeBulletinWithInternalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBulletinWithInternalID:");
}

id objc_msgSend_removeContextSnapshotForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeContextSnapshotForType:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeDeliveredNotificationsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDeliveredNotificationsWithIdentifiers:");
}

id objc_msgSend_removeDeviceOwner(void *a1, const char *a2, ...)
{
  return _[a1 removeDeviceOwner];
}

id objc_msgSend_removeFields(void *a1, const char *a2, ...)
{
  return _[a1 removeFields];
}

id objc_msgSend_removeFromList(void *a1, const char *a2, ...)
{
  return _[a1 removeFromList];
}

id objc_msgSend_removeHandsFreeStateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHandsFreeStateObserver:");
}

id objc_msgSend_removeHomeOwnerCKParticipantAssociation_participants_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHomeOwnerCKParticipantAssociation:participants:completion:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeListener:");
}

id objc_msgSend_removeLocalDeviceAsContextCollectorWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLocalDeviceAsContextCollectorWithCompletion:");
}

id objc_msgSend_removeMessageHandler_forMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMessageHandler:forMessageType:");
}

id objc_msgSend_removeMultiUserHomeUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMultiUserHomeUUID:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectForPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForPeerInfo:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipant:");
}

id objc_msgSend_removePersonalizedLMForFidesOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersonalizedLMForFidesOnly:");
}

id objc_msgSend_removeService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeService:");
}

id objc_msgSend_removeSpaceAfter(void *a1, const char *a2, ...)
{
  return _[a1 removeSpaceAfter];
}

id objc_msgSend_removeSpaceBefore(void *a1, const char *a2, ...)
{
  return _[a1 removeSpaceBefore];
}

id objc_msgSend_removeTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTimer:");
}

id objc_msgSend_removeTimerWithID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTimerWithID:completion:");
}

id objc_msgSend_removeUserWithHomeUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserWithHomeUUID:completion:");
}

id objc_msgSend_removeUserWithShareOwnerNames_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserWithShareOwnerNames:completion:");
}

id objc_msgSend_removeUserWithSharedUserID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserWithSharedUserID:completion:");
}

id objc_msgSend_removeValueForKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeValueForKey:error:");
}

id objc_msgSend_removeValuesMatching_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeValuesMatching:completionHandler:");
}

id objc_msgSend_removedFrequency(void *a1, const char *a2, ...)
{
  return _[a1 removedFrequency];
}

id objc_msgSend_removeiTunesObserver(void *a1, const char *a2, ...)
{
  return _[a1 removeiTunesObserver];
}

id objc_msgSend_repeatMode(void *a1, const char *a2, ...)
{
  return _[a1 repeatMode];
}

id objc_msgSend_repeatOptions(void *a1, const char *a2, ...)
{
  return _[a1 repeatOptions];
}

id objc_msgSend_replaceBytesInRange_withBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceBytesInRange:withBytes:length:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replayWithFileURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replayWithFileURL:completion:");
}

id objc_msgSend_replyCommand(void *a1, const char *a2, ...)
{
  return _[a1 replyCommand];
}

id objc_msgSend_report_application_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "report:application:");
}

id objc_msgSend_reportIssueForError_type_context_processIdentifier_walkboutStatus_triggerForIDSIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportIssueForError:type:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:");
}

id objc_msgSend_reportIssueForError_type_subtype_context_processIdentifier_walkboutStatus_triggerForIDSIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportIssueForError:type:subtype:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:");
}

id objc_msgSend_reportIssueForType_subType_context_processIdentifier_walkboutStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportIssueForType:subType:context:processIdentifier:walkboutStatus:");
}

id objc_msgSend_reportIssueWithBackOffTimerForType_subType_context_processIdentifier_walkboutStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportIssueWithBackOffTimerForType:subType:context:processIdentifier:walkboutStatus:");
}

id objc_msgSend_reprioritizeService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reprioritizeService:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestAlwaysAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestAlwaysAuthorization];
}

id objc_msgSend_requestAssistantDataUpdateHighPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAssistantDataUpdateHighPriority:");
}

id objc_msgSend_requestAuthorizationWithStyle_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationWithStyle:timeout:completion:");
}

id objc_msgSend_requestBarrier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestBarrier:");
}

id objc_msgSend_requestBarrierIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestBarrierIfNecessary:");
}

id objc_msgSend_requestCanBeHandled(void *a1, const char *a2, ...)
{
  return _[a1 requestCanBeHandled];
}

id objc_msgSend_requestCanBeHandledChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCanBeHandledChanged:");
}

id objc_msgSend_requestCanBeHandledChanged_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCanBeHandledChanged:onPlatform:");
}

id objc_msgSend_requestCompletedWithAssistantId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCompletedWithAssistantId:requestId:");
}

id objc_msgSend_requestData(void *a1, const char *a2, ...)
{
  return _[a1 requestData];
}

id objc_msgSend_requestDelayManager(void *a1, const char *a2, ...)
{
  return _[a1 requestDelayManager];
}

id objc_msgSend_requestDidAskForTimeoutExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDidAskForTimeoutExtension:");
}

id objc_msgSend_requestDidEndWithInfo_fromOrigin_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDidEndWithInfo:fromOrigin:client:");
}

id objc_msgSend_requestDidUpdateResponseMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDidUpdateResponseMode:");
}

id objc_msgSend_requestExecutionParameters(void *a1, const char *a2, ...)
{
  return _[a1 requestExecutionParameters];
}

id objc_msgSend_requestFailedWithAssistantId_requestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFailedWithAssistantId:requestId:");
}

id objc_msgSend_requestHandleCommand_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestHandleCommand:reply:");
}

id objc_msgSend_requestHandlingContextSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 requestHandlingContextSnapshot];
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _[a1 requestID];
}

id objc_msgSend_requestId(void *a1, const char *a2, ...)
{
  return _[a1 requestId];
}

id objc_msgSend_requestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestIdentifier];
}

id objc_msgSend_requestInfo(void *a1, const char *a2, ...)
{
  return _[a1 requestInfo];
}

id objc_msgSend_requestInfoFromAnnouncementRequest_previousRequest_synchronousBurstIndex_isMediaPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestInfoFromAnnouncementRequest:previousRequest:synchronousBurstIndex:isMediaPlaying:");
}

id objc_msgSend_requestLifecycleObserver_requestDidEndWithInfo_origin_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLifecycleObserver:requestDidEndWithInfo:origin:client:");
}

id objc_msgSend_requestLifecycleObserver_requestWasCancelledWithInfo_forReason_origin_client_successorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLifecycleObserver:requestWasCancelledWithInfo:forReason:origin:client:successorInfo:");
}

id objc_msgSend_requestLifecycleObserver_requestWillBeginWithInfo_origin_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLifecycleObserver:requestWillBeginWithInfo:origin:client:");
}

id objc_msgSend_requestLocation(void *a1, const char *a2, ...)
{
  return _[a1 requestLocation];
}

id objc_msgSend_requestNoticesBulletinsForAllSections(void *a1, const char *a2, ...)
{
  return _[a1 requestNoticesBulletinsForAllSections];
}

id objc_msgSend_requestOfflineDictationSupportForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestOfflineDictationSupportForLanguage:completion:");
}

id objc_msgSend_requestPath(void *a1, const char *a2, ...)
{
  return _[a1 requestPath];
}

id objc_msgSend_requestRequestedDismissAssistant(void *a1, const char *a2, ...)
{
  return _[a1 requestRequestedDismissAssistant];
}

id objc_msgSend_requestRequestedDismissAssistantWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestRequestedDismissAssistantWithReason:");
}

id objc_msgSend_requestRequestedOpenApplicationWithBundleID_URL_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestRequestedOpenApplicationWithBundleID:URL:reply:");
}

id objc_msgSend_requestRequestedOpenURL_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestRequestedOpenURL:reply:");
}

id objc_msgSend_requestSync(void *a1, const char *a2, ...)
{
  return _[a1 requestSync];
}

id objc_msgSend_requestTemporaryAccuracyAuthorizationWithStyle_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTemporaryAccuracyAuthorizationWithStyle:timeout:completion:");
}

id objc_msgSend_requestTemporaryFullAccuracyAuthorizationWithPurposeKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:");
}

id objc_msgSend_requestTimer(void *a1, const char *a2, ...)
{
  return _[a1 requestTimer];
}

id objc_msgSend_requestType(void *a1, const char *a2, ...)
{
  return _[a1 requestType];
}

id objc_msgSend_requestWasCancelledWithInfo_forReason_origin_client_successorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWasCancelledWithInfo:forReason:origin:client:successorInfo:");
}

id objc_msgSend_requestWasInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 requestWasInterrupted];
}

id objc_msgSend_requestWhenInUseAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestWhenInUseAuthorization];
}

id objc_msgSend_requestWillBeginWithInfo_fromOrigin_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWillBeginWithInfo:fromOrigin:client:");
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithIdentifier:content:trigger:");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requiredInfoDictionaryKeys(void *a1, const char *a2, ...)
{
  return _[a1 requiredInfoDictionaryKeys];
}

id objc_msgSend_requiredIntentIdentifiersForUserNotificationAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredIntentIdentifiersForUserNotificationAnnouncementType:");
}

id objc_msgSend_requiresOpportuneTime(void *a1, const char *a2, ...)
{
  return _[a1 requiresOpportuneTime];
}

id objc_msgSend_requiresResponseFromRemote(void *a1, const char *a2, ...)
{
  return _[a1 requiresResponseFromRemote];
}

id objc_msgSend_requiresUserInteraction(void *a1, const char *a2, ...)
{
  return _[a1 requiresUserInteraction];
}

id objc_msgSend_rescheduleValidationRefresh(void *a1, const char *a2, ...)
{
  return _[a1 rescheduleValidationRefresh];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAllUsers(void *a1, const char *a2, ...)
{
  return _[a1 resetAllUsers];
}

id objc_msgSend_resetCachedHostname(void *a1, const char *a2, ...)
{
  return _[a1 resetCachedHostname];
}

id objc_msgSend_resetConnection(void *a1, const char *a2, ...)
{
  return _[a1 resetConnection];
}

id objc_msgSend_resetDESWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetDESWithCompletion:");
}

id objc_msgSend_resetExperimentForConfigurationIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetExperimentForConfigurationIdentifier:completion:");
}

id objc_msgSend_resetExternalResources(void *a1, const char *a2, ...)
{
  return _[a1 resetExternalResources];
}

id objc_msgSend_resetLinkMetrics(void *a1, const char *a2, ...)
{
  return _[a1 resetLinkMetrics];
}

id objc_msgSend_resetLinkRecommendationInfo(void *a1, const char *a2, ...)
{
  return _[a1 resetLinkRecommendationInfo];
}

id objc_msgSend_resetLocalRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 resetLocalRecognizer];
}

id objc_msgSend_resetNetId(void *a1, const char *a2, ...)
{
  return _[a1 resetNetId];
}

id objc_msgSend_resetRequestCount(void *a1, const char *a2, ...)
{
  return _[a1 resetRequestCount];
}

id objc_msgSend_resetRetryManager(void *a1, const char *a2, ...)
{
  return _[a1 resetRetryManager];
}

id objc_msgSend_resetSessionsAndMakeQuiet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetSessionsAndMakeQuiet:");
}

id objc_msgSend_resetSessionsAtNextRequestBoundary(void *a1, const char *a2, ...)
{
  return _[a1 resetSessionsAtNextRequestBoundary];
}

id objc_msgSend_resetSessionsIfRequiredBasedOnOrchestrationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetSessionsIfRequiredBasedOnOrchestrationMode:");
}

id objc_msgSend_resetSystemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 resetSystemTimeZone];
}

id objc_msgSend_resetWinningState(void *a1, const char *a2, ...)
{
  return _[a1 resetWinningState];
}

id objc_msgSend_resetWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWithCompletion:");
}

id objc_msgSend_resignCurrent(void *a1, const char *a2, ...)
{
  return _[a1 resignCurrent];
}

id objc_msgSend_resolvedReferences(void *a1, const char *a2, ...)
{
  return _[a1 resolvedReferences];
}

id objc_msgSend_resourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceValuesForKeys:error:");
}

id objc_msgSend_responseCode(void *a1, const char *a2, ...)
{
  return _[a1 responseCode];
}

id objc_msgSend_responseForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseForAction:");
}

id objc_msgSend_responseMode(void *a1, const char *a2, ...)
{
  return _[a1 responseMode];
}

id objc_msgSend_responseType(void *a1, const char *a2, ...)
{
  return _[a1 responseType];
}

id objc_msgSend_responses(void *a1, const char *a2, ...)
{
  return _[a1 responses];
}

id objc_msgSend_restartShareDeletion(void *a1, const char *a2, ...)
{
  return _[a1 restartShareDeletion];
}

id objc_msgSend_restartSharing(void *a1, const char *a2, ...)
{
  return _[a1 restartSharing];
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_resultCallbackCode(void *a1, const char *a2, ...)
{
  return _[a1 resultCallbackCode];
}

id objc_msgSend_resultCandidateId(void *a1, const char *a2, ...)
{
  return _[a1 resultCandidateId];
}

id objc_msgSend_resultData(void *a1, const char *a2, ...)
{
  return _[a1 resultData];
}

id objc_msgSend_resultId(void *a1, const char *a2, ...)
{
  return _[a1 resultId];
}

id objc_msgSend_resultObjects(void *a1, const char *a2, ...)
{
  return _[a1 resultObjects];
}

id objc_msgSend_resultOptions(void *a1, const char *a2, ...)
{
  return _[a1 resultOptions];
}

id objc_msgSend_resultType(void *a1, const char *a2, ...)
{
  return _[a1 resultType];
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeDictationRecognitionWithAssistantId_requestId_prefixText_postfixText_selectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeDictationRecognitionWithAssistantId:requestId:prefixText:postfixText:selectedText:");
}

id objc_msgSend_resumeEventsStaging(void *a1, const char *a2, ...)
{
  return _[a1 resumeEventsStaging];
}

id objc_msgSend_resumeInterruptedAudioPlaybackIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 resumeInterruptedAudioPlaybackIfNeeded];
}

id objc_msgSend_resumeRecognitionWithPrefixText_postfixText_selectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeRecognitionWithPrefixText:postfixText:selectedText:");
}

id objc_msgSend_resynchronizeMirroredZone_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resynchronizeMirroredZone:completion:");
}

id objc_msgSend_retrieveAssetSet_usages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveAssetSet:usages:");
}

id objc_msgSend_retrieveAudioAppSignals(void *a1, const char *a2, ...)
{
  return _[a1 retrieveAudioAppSignals];
}

id objc_msgSend_retrieveConnectedDevicesInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveConnectedDevicesInfoWithCompletion:");
}

id objc_msgSend_retrieveConnectedPeripheralsWithServices_allowAll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveConnectedPeripheralsWithServices:allowAll:");
}

id objc_msgSend_retrieveSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSessionWithID:");
}

id objc_msgSend_retryCount(void *a1, const char *a2, ...)
{
  return _[a1 retryCount];
}

id objc_msgSend_retryForType_zoneInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryForType:zoneInfo:error:");
}

id objc_msgSend_retryForTypeOnRetryManagerQueue_zoneInfo_error_retryAfterInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryForTypeOnRetryManagerQueue:zoneInfo:error:retryAfterInterval:");
}

id objc_msgSend_retryNakedCommandsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 retryNakedCommandsIfNeeded];
}

id objc_msgSend_retryRequestId(void *a1, const char *a2, ...)
{
  return _[a1 retryRequestId];
}

id objc_msgSend_retryShareDeletionOperation(void *a1, const char *a2, ...)
{
  return _[a1 retryShareDeletionOperation];
}

id objc_msgSend_retryState(void *a1, const char *a2, ...)
{
  return _[a1 retryState];
}

id objc_msgSend_returnKeyType(void *a1, const char *a2, ...)
{
  return _[a1 returnKeyType];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_rollbackClearContext(void *a1, const char *a2, ...)
{
  return _[a1 rollbackClearContext];
}

id objc_msgSend_rollbackRequestForDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollbackRequestForDelegate:");
}

id objc_msgSend_rollbackTransactionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollbackTransactionWithError:");
}

id objc_msgSend_room(void *a1, const char *a2, ...)
{
  return _[a1 room];
}

id objc_msgSend_roomName(void *a1, const char *a2, ...)
{
  return _[a1 roomName];
}

id objc_msgSend_rooms(void *a1, const char *a2, ...)
{
  return _[a1 rooms];
}

id objc_msgSend_rootAfHomeInfoForThisDevice(void *a1, const char *a2, ...)
{
  return _[a1 rootAfHomeInfoForThisDevice];
}

id objc_msgSend_rootExecutionContexts(void *a1, const char *a2, ...)
{
  return _[a1 rootExecutionContexts];
}

id objc_msgSend_rootGroup(void *a1, const char *a2, ...)
{
  return _[a1 rootGroup];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_routeController(void *a1, const char *a2, ...)
{
  return _[a1 routeController];
}

id objc_msgSend_routeForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeForCategory:");
}

id objc_msgSend_routeName(void *a1, const char *a2, ...)
{
  return _[a1 routeName];
}

id objc_msgSend_routeResponse(void *a1, const char *a2, ...)
{
  return _[a1 routeResponse];
}

id objc_msgSend_routes(void *a1, const char *a2, ...)
{
  return _[a1 routes];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rssi(void *a1, const char *a2, ...)
{
  return _[a1 rssi];
}

id objc_msgSend_rttBest(void *a1, const char *a2, ...)
{
  return _[a1 rttBest];
}

id objc_msgSend_rttCurrent(void *a1, const char *a2, ...)
{
  return _[a1 rttCurrent];
}

id objc_msgSend_rttSmoothed(void *a1, const char *a2, ...)
{
  return _[a1 rttSmoothed];
}

id objc_msgSend_rttVariance(void *a1, const char *a2, ...)
{
  return _[a1 rttVariance];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runBootTimeServiceMaintenanceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBootTimeServiceMaintenanceWithCompletion:");
}

id objc_msgSend_runCollectorsDefinedInParameters_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runCollectorsDefinedInParameters:completion:");
}

id objc_msgSend_runMaintenanceWorkForServicePath_className_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runMaintenanceWorkForServicePath:className:completion:");
}

id objc_msgSend_runMaintenanceWorkWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runMaintenanceWorkWithCompletion:");
}

id objc_msgSend_runServiceMaintenanceWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runServiceMaintenanceWithCompletion:");
}

id objc_msgSend_runSiriKitExecutorCommandWithContext_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runSiriKitExecutorCommandWithContext:payload:");
}

id objc_msgSend_runWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithCompletion:");
}

id objc_msgSend_runWithLaunchContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithLaunchContext:");
}

id objc_msgSend_running(void *a1, const char *a2, ...)
{
  return _[a1 running];
}

id objc_msgSend_rxBytes(void *a1, const char *a2, ...)
{
  return _[a1 rxBytes];
}

id objc_msgSend_rxDuplicateBytes(void *a1, const char *a2, ...)
{
  return _[a1 rxDuplicateBytes];
}

id objc_msgSend_rxOooBytes(void *a1, const char *a2, ...)
{
  return _[a1 rxOooBytes];
}

id objc_msgSend_rxPackets(void *a1, const char *a2, ...)
{
  return _[a1 rxPackets];
}

id objc_msgSend_saConnectionPolicy(void *a1, const char *a2, ...)
{
  return _[a1 saConnectionPolicy];
}

id objc_msgSend_saCopy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saCopy:");
}

id objc_msgSend_saHomeMemberInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saHomeMemberInfo:");
}

id objc_msgSend_saMultiUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saMultiUserInfo:");
}

id objc_msgSend_saNotificationObject(void *a1, const char *a2, ...)
{
  return _[a1 saNotificationObject];
}

id objc_msgSend_saOnDeviceNotificationObject(void *a1, const char *a2, ...)
{
  return _[a1 saOnDeviceNotificationObject];
}

id objc_msgSend_saRemoteDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saRemoteDevice:");
}

id objc_msgSend_saRemoteDeviceForHomeMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saRemoteDeviceForHomeMember:");
}

id objc_msgSend_saeAssetsForCurrentLocaleAvailable(void *a1, const char *a2, ...)
{
  return _[a1 saeAssetsForCurrentLocaleAvailable];
}

id objc_msgSend_salt(void *a1, const char *a2, ...)
{
  return _[a1 salt];
}

id objc_msgSend_sampledCurrentSamplingDateKey(void *a1, const char *a2, ...)
{
  return _[a1 sampledCurrentSamplingDateKey];
}

id objc_msgSend_sampledLibraryDirectoryPath(void *a1, const char *a2, ...)
{
  return _[a1 sampledLibraryDirectoryPath];
}

id objc_msgSend_sampledPlistFileName(void *a1, const char *a2, ...)
{
  return _[a1 sampledPlistFileName];
}

id objc_msgSend_samplingInfo(void *a1, const char *a2, ...)
{
  return _[a1 samplingInfo];
}

id objc_msgSend_sanityCheckAutodownloadedAssetsForced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanityCheckAutodownloadedAssetsForced:");
}

id objc_msgSend_save(void *a1, const char *a2, ...)
{
  return _[a1 save];
}

id objc_msgSend_saveAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAccount:withCompletionHandler:");
}

id objc_msgSend_saveCloudSyncEnabledRecord_mirror_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveCloudSyncEnabledRecord:mirror:completion:");
}

id objc_msgSend_saveFileAssetRecordsWithDictionary_mirror_onZone_activity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveFileAssetRecordsWithDictionary:mirror:onZone:activity:completion:");
}

id objc_msgSend_saveKeyValueRecordsWithDictionary_mirror_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveKeyValueRecordsWithDictionary:mirror:completion:");
}

id objc_msgSend_saveParticipantsOnShare_forOwner_participants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveParticipantsOnShare:forOwner:participants:");
}

id objc_msgSend_saveRecordsWithDictionary_inZone_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveRecordsWithDictionary:inZone:completion:");
}

id objc_msgSend_saveTimeouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveTimeouts:");
}

id objc_msgSend_saveZoneShare_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveZoneShare:completion:");
}

id objc_msgSend_savedCustomVocabularyOverviewDictionary(void *a1, const char *a2, ...)
{
  return _[a1 savedCustomVocabularyOverviewDictionary];
}

id objc_msgSend_scalingFactor(void *a1, const char *a2, ...)
{
  return _[a1 scalingFactor];
}

id objc_msgSend_scanHexLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanHexLongLong:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scheduleAuthorizationRequestTimeoutForCompletionBlock_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleAuthorizationRequestTimeoutForCompletionBlock:timeout:");
}

id objc_msgSend_scheduleDestroyJob(void *a1, const char *a2, ...)
{
  return _[a1 scheduleDestroyJob];
}

id objc_msgSend_scheduleLocationFetchRequestTimeoutForRequest_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleLocationFetchRequestTimeoutForRequest:timeout:");
}

id objc_msgSend_scheduleLocationUpdateSessionTeardown(void *a1, const char *a2, ...)
{
  return _[a1 scheduleLocationUpdateSessionTeardown];
}

id objc_msgSend_scheduleUnlockedWork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleUnlockedWork:");
}

id objc_msgSend_scheduleValidationRefreshForInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleValidationRefreshForInterval:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_scores(void *a1, const char *a2, ...)
{
  return _[a1 scores];
}

id objc_msgSend_searchCommandForFingerprintData_withDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchCommandForFingerprintData:withDuration:");
}

id objc_msgSend_searchOptions(void *a1, const char *a2, ...)
{
  return _[a1 searchOptions];
}

id objc_msgSend_searchQueriesDataSharingStatus(void *a1, const char *a2, ...)
{
  return _[a1 searchQueriesDataSharingStatus];
}

id objc_msgSend_searchTimeout(void *a1, const char *a2, ...)
{
  return _[a1 searchTimeout];
}

id objc_msgSend_secondUnit(void *a1, const char *a2, ...)
{
  return _[a1 secondUnit];
}

id objc_msgSend_secondaryInEarStatus(void *a1, const char *a2, ...)
{
  return _[a1 secondaryInEarStatus];
}

id objc_msgSend_secondaryPlacement(void *a1, const char *a2, ...)
{
  return _[a1 secondaryPlacement];
}

id objc_msgSend_sectionDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 sectionDisplayName];
}

id objc_msgSend_sectionID(void *a1, const char *a2, ...)
{
  return _[a1 sectionID];
}

id objc_msgSend_sectionSubtype(void *a1, const char *a2, ...)
{
  return _[a1 sectionSubtype];
}

id objc_msgSend_secureOfflineOnly(void *a1, const char *a2, ...)
{
  return _[a1 secureOfflineOnly];
}

id objc_msgSend_securePersonalDomainsRequireAuth(void *a1, const char *a2, ...)
{
  return _[a1 securePersonalDomainsRequireAuth];
}

id objc_msgSend_seed(void *a1, const char *a2, ...)
{
  return _[a1 seed];
}

id objc_msgSend_seekToEndOfFile(void *a1, const char *a2, ...)
{
  return _[a1 seekToEndOfFile];
}

id objc_msgSend_seekToFileOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToFileOffset:");
}

id objc_msgSend_seenMessageIDs(void *a1, const char *a2, ...)
{
  return _[a1 seenMessageIDs];
}

id objc_msgSend_selectEarliest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectEarliest:");
}

id objc_msgSend_selectRecordsFromTableWithName_columnNames_behavior_indexedBy_criterion_order_range_recordBuilder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectRecordsFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:recordBuilder:error:");
}

id objc_msgSend_selectResultWithResultCandidate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectResultWithResultCandidate:completionHandler:");
}

id objc_msgSend_selectValueTuplesFromTableWithName_columnNames_behavior_indexedBy_criterion_order_range_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectValueTuplesFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:error:");
}

id objc_msgSend_selectedSharedUserId(void *a1, const char *a2, ...)
{
  return _[a1 selectedSharedUserId];
}

id objc_msgSend_selectionSyncIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 selectionSyncIdentifier];
}

id objc_msgSend_selfParticipantStatus(void *a1, const char *a2, ...)
{
  return _[a1 selfParticipantStatus];
}

id objc_msgSend_sendAudioDataToServer(void *a1, const char *a2, ...)
{
  return _[a1 sendAudioDataToServer];
}

id objc_msgSend_sendBandwidth(void *a1, const char *a2, ...)
{
  return _[a1 sendBandwidth];
}

id objc_msgSend_sendBeginSyncWithInfo_chunkHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendBeginSyncWithInfo:chunkHandler:completion:");
}

id objc_msgSend_sendBufferBytesRemaining(void *a1, const char *a2, ...)
{
  return _[a1 sendBufferBytesRemaining];
}

id objc_msgSend_sendBufferSize(void *a1, const char *a2, ...)
{
  return _[a1 sendBufferSize];
}

id objc_msgSend_sendClearDomainObjects(void *a1, const char *a2, ...)
{
  return _[a1 sendClearDomainObjects];
}

id objc_msgSend_sendClientBoundCommand_domain_executionContext_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendClientBoundCommand:domain:executionContext:reply:");
}

id objc_msgSend_sendCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:completion:");
}

id objc_msgSend_sendCommand_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:errorHandler:");
}

id objc_msgSend_sendCommand_opportunistically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:opportunistically:");
}

id objc_msgSend_sendCommand_opportunistically_logEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:opportunistically:logEvent:");
}

id objc_msgSend_sendCommands_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommands:completion:");
}

id objc_msgSend_sendCommands_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommands:errorHandler:");
}

id objc_msgSend_sendCommands_opportunistically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommands:opportunistically:");
}

id objc_msgSend_sendDeviceConfig_device_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDeviceConfig:device:completion:");
}

id objc_msgSend_sendDictationRequestStartedEventWithBundleIdentifier_context_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDictationRequestStartedEventWithBundleIdentifier:context:userInfo:");
}

id objc_msgSend_sendEngagementFeedback_voiceQueryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEngagementFeedback:voiceQueryIdentifier:");
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendFetchMultiuserSettingsRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFetchMultiuserSettingsRequest:");
}

id objc_msgSend_sendFetchSyncSnapshotForInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFetchSyncSnapshotForInfo:completion:");
}

id objc_msgSend_sendMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:completion:");
}

id objc_msgSend_sendMessage_messageType_toDeviceWithIDSIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:messageType:toDeviceWithIDSIdentifier:completion:");
}

id objc_msgSend_sendMessage_toDeviceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:toDeviceWithIdentifier:completion:");
}

id objc_msgSend_sendMessageAndReceiveReplyName_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageAndReceiveReplyName:userInfo:");
}

id objc_msgSend_sendMetricsToServerWithTimeout_requiresUnlimitedPower_requiresActiveSession_purgesOversizedStorage_ignoresMetricsSenderDisabledSetting_scheduledActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:scheduledActivity:completion:");
}

id objc_msgSend_sendPowerLogs_peerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPowerLogs:peerInfo:");
}

id objc_msgSend_sendProtobuf_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendProtobuf:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendRawCommand_opportunistically_logEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRawCommand:opportunistically:logEvent:");
}

id objc_msgSend_sendRemoteAnnouncementRequest_toAssistantId_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteAnnouncementRequest:toAssistantId:withCompletion:");
}

id objc_msgSend_sendRemoteGizmoDeviceToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteGizmoDeviceToServer:");
}

id objc_msgSend_sendRequest_fireAndForget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:fireAndForget:");
}

id objc_msgSend_sendRequest_responseClass_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:responseClass:completion:");
}

id objc_msgSend_sendRequest_responseClass_overrideRequireConnectedPeer_allowCloud_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:responseClass:overrideRequireConnectedPeer:allowCloud:completion:");
}

id objc_msgSend_sendRequestID_messageType_messagePayload_toDeviceWithAssistantIdentifier_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:messageType:messagePayload:toDeviceWithAssistantIdentifier:options:completion:");
}

id objc_msgSend_sendRequestID_messageType_messagePayload_toDeviceWithHomeKitAccessoryIdentifier_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:messageType:messagePayload:toDeviceWithHomeKitAccessoryIdentifier:options:completion:");
}

id objc_msgSend_sendRequestID_messageType_messagePayload_toDeviceWithIDSDeviceID_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:messageType:messagePayload:toDeviceWithIDSDeviceID:options:completion:");
}

id objc_msgSend_sendRequestID_messageType_messagePayload_toPeer_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:messageType:messagePayload:toPeer:options:completion:");
}

id objc_msgSend_sendRequestID_request_destinationID_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:request:destinationID:options:responseHandler:");
}

id objc_msgSend_sendRequestID_request_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:request:options:responseHandler:");
}

id objc_msgSend_sendRequestToContextCollectorThroughOnDemandConnection_messageType_messagePayload_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestToContextCollectorThroughOnDemandConnection:messageType:messagePayload:options:completion:");
}

id objc_msgSend_sendRequestType_data_toDeviceWithAssistantIdentifier_onQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestType:data:toDeviceWithAssistantIdentifier:onQueue:completion:");
}

id objc_msgSend_sendResponse_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResponse:withCompletion:");
}

id objc_msgSend_sendSharedData_toPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSharedData:toPeers:");
}

id objc_msgSend_sendSiriCommand_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSiriCommand:completionHandler:");
}

id objc_msgSend_sendSiriRequestStartedEventWithBundleIdentifier_context_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSiriRequestStartedEventWithBundleIdentifier:context:userInfo:");
}

id objc_msgSend_sendSpeechCorrectionInfo_forCorrectionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSpeechCorrectionInfo:forCorrectionContext:");
}

id objc_msgSend_sendSpeechCorrectionInfo_interactionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSpeechCorrectionInfo:interactionIdentifier:");
}

id objc_msgSend_sendStereoPartnerMessage_messageType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendStereoPartnerMessage:messageType:completion:");
}

id objc_msgSend_sendSyncTokenToPersonalRequestsEnabledAccessories(void *a1, const char *a2, ...)
{
  return _[a1 sendSyncTokenToPersonalRequestsEnabledAccessories];
}

id objc_msgSend_sendTemporaryAccuracyAuthorizationRequestWithTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendTemporaryAccuracyAuthorizationRequestWithTimeout:completion:");
}

id objc_msgSend_sensitiveCondition_endedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sensitiveCondition:endedAt:");
}

id objc_msgSend_sensitiveCondition_startedAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sensitiveCondition:startedAt:");
}

id objc_msgSend_sensitiveConditionRangesForBootSessionUUIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sensitiveConditionRangesForBootSessionUUIDs:completion:");
}

id objc_msgSend_sequence(void *a1, const char *a2, ...)
{
  return _[a1 sequence];
}

id objc_msgSend_serializeCacheableObjects_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeCacheableObjects:completion:");
}

id objc_msgSend_serializedBackingStore(void *a1, const char *a2, ...)
{
  return _[a1 serializedBackingStore];
}

id objc_msgSend_serializedCommand(void *a1, const char *a2, ...)
{
  return _[a1 serializedCommand];
}

id objc_msgSend_serializedContextForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedContextForKey:");
}

id objc_msgSend_serializedHistoricalContextForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializedHistoricalContextForKey:");
}

id objc_msgSend_serverCertificateData(void *a1, const char *a2, ...)
{
  return _[a1 serverCertificateData];
}

id objc_msgSend_serverChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 serverChangeToken];
}

id objc_msgSend_serverCommandId(void *a1, const char *a2, ...)
{
  return _[a1 serverCommandId];
}

id objc_msgSend_serverOverride(void *a1, const char *a2, ...)
{
  return _[a1 serverOverride];
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_serviceConnectionTimedoutForSync(void *a1, const char *a2, ...)
{
  return _[a1 serviceConnectionTimedoutForSync];
}

id objc_msgSend_serviceForDomain_command_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceForDomain:command:");
}

id objc_msgSend_serviceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceForIdentifier:");
}

id objc_msgSend_serviceForSyncAnchorKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceForSyncAnchorKey:");
}

id objc_msgSend_serviceIdentifierForRequestDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceIdentifierForRequestDelegate:");
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return _[a1 serviceName];
}

id objc_msgSend_serviceTimedoutForSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceTimedoutForSync:");
}

id objc_msgSend_serviceWithDefaultShellEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceWithDefaultShellEndpoint];
}

id objc_msgSend_servicesThatRequireBootMaintenance(void *a1, const char *a2, ...)
{
  return _[a1 servicesThatRequireBootMaintenance];
}

id objc_msgSend_sessionClassForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionClassForType:");
}

id objc_msgSend_sessionConnectionFailedError_connectionMode_sessionType_sessionState_dormant_analysisInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionConnectionFailedError:connectionMode:sessionType:sessionState:dormant:analysisInfo:");
}

id objc_msgSend_sessionConnectionFailedError_connectionMode_sessionType_sessionState_dormant_connectionAnalysisInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionConnectionFailedError:connectionMode:sessionType:sessionState:dormant:connectionAnalysisInfo:");
}

id objc_msgSend_sessionConnectionNetworkFromSiriCoreConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionConnectionNetworkFromSiriCoreConnectionMetrics:");
}

id objc_msgSend_sessionConnectionQualityFromSiriCoreConnectionMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionConnectionQualityFromSiriCoreConnectionMetrics:");
}

id objc_msgSend_sessionExistsForAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionExistsForAssistantId:");
}

id objc_msgSend_sessionHandoffData(void *a1, const char *a2, ...)
{
  return _[a1 sessionHandoffData];
}

id objc_msgSend_sessionId(void *a1, const char *a2, ...)
{
  return _[a1 sessionId];
}

id objc_msgSend_sessionInfo(void *a1, const char *a2, ...)
{
  return _[a1 sessionInfo];
}

id objc_msgSend_sessionInfoDuration(void *a1, const char *a2, ...)
{
  return _[a1 sessionInfoDuration];
}

id objc_msgSend_sessionIsActive(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsActive];
}

id objc_msgSend_sessionIsAttemptingTryOrRetry(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsAttemptingTryOrRetry];
}

id objc_msgSend_sessionIsComplete(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsComplete];
}

id objc_msgSend_sessionIsWaitingForAssistantData(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsWaitingForAssistantData];
}

id objc_msgSend_sessionRequestIdForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionRequestIdForRefId:");
}

id objc_msgSend_sessionRequiresServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 sessionRequiresServerConnection];
}

id objc_msgSend_sessionRequiresSync(void *a1, const char *a2, ...)
{
  return _[a1 sessionRequiresSync];
}

id objc_msgSend_sessionState(void *a1, const char *a2, ...)
{
  return _[a1 sessionState];
}

id objc_msgSend_sessionType(void *a1, const char *a2, ...)
{
  return _[a1 sessionType];
}

id objc_msgSend_sessionUUID(void *a1, const char *a2, ...)
{
  return _[a1 sessionUUID];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAVVCLoggingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAVVCLoggingEnabled:");
}

id objc_msgSend_setAWDRequestRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAWDRequestRecord:");
}

id objc_msgSend_setAWDRequestRecordMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAWDRequestRecordMetrics:");
}

id objc_msgSend_setAccent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccent:");
}

id objc_msgSend_setAcceptGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptGesture:");
}

id objc_msgSend_setAcceptProceedGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptProceedGesture:");
}

id objc_msgSend_setAcceptSharesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptSharesCompletionBlock:");
}

id objc_msgSend_setAccessibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibility:");
}

id objc_msgSend_setAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryIdentifier:");
}

id objc_msgSend_setAccountInfo_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountInfo:forIdentifier:");
}

id objc_msgSend_setAccountStatusServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountStatusServerChangeToken:");
}

id objc_msgSend_setAceCommandClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceCommandClass:");
}

id objc_msgSend_setAceCommandContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceCommandContext:");
}

id objc_msgSend_setAceCommandId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceCommandId:");
}

id objc_msgSend_setAceCommandName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceCommandName:");
}

id objc_msgSend_setAceCommandType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceCommandType:");
}

id objc_msgSend_setAceContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceContexts:");
}

id objc_msgSend_setAceDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceDictionary:");
}

id objc_msgSend_setAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceHost:");
}

id objc_msgSend_setAceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceId:");
}

id objc_msgSend_setAceVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceVersion:");
}

id objc_msgSend_setAcousticIdSessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcousticIdSessionId:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionResult:");
}

id objc_msgSend_setActivationAudioAlertStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationAudioAlertStartTime:");
}

id objc_msgSend_setActivationDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationDeviceIdentifier:");
}

id objc_msgSend_setActivationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationEvent:");
}

id objc_msgSend_setActivationHapticAlertStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationHapticAlertStartTime:");
}

id objc_msgSend_setActivationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationTime:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveAccountIdentifier:");
}

id objc_msgSend_setActiveCallRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveCallRemaining:");
}

id objc_msgSend_setActiveStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveStatus:");
}

id objc_msgSend_setActiveSubscriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSubscriptions:");
}

id objc_msgSend_setAdCompanionServiceProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdCompanionServiceProvider:");
}

id objc_msgSend_setAdSpeechSessionEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdSpeechSessionEnded:");
}

id objc_msgSend_setAdaptiveVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdaptiveVolume:");
}

id objc_msgSend_setAdaptiveVolumeConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdaptiveVolumeConfig:");
}

id objc_msgSend_setAdaptiveVolumeUserPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdaptiveVolumeUserPreferences:");
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddress:");
}

id objc_msgSend_setAddressBookID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddressBookID:");
}

id objc_msgSend_setAddressLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddressLabel:");
}

id objc_msgSend_setAge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAge:");
}

id objc_msgSend_setAggregatedMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAggregatedMetrics:");
}

id objc_msgSend_setAirPlayRouteIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayRouteIdentifiers:");
}

id objc_msgSend_setAirplaneMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplaneMode:");
}

id objc_msgSend_setAirplayRouteId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplayRouteId:");
}

id objc_msgSend_setAlarm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarm:");
}

id objc_msgSend_setAlarmContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmContext:");
}

id objc_msgSend_setAlarmId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmId:");
}

id objc_msgSend_setAlarmIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmIdentifier:");
}

id objc_msgSend_setAlarmIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmIdentifiers:");
}

id objc_msgSend_setAlarmIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmIds:");
}

id objc_msgSend_setAlarmState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmState:");
}

id objc_msgSend_setAlarmURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmURLs:");
}

id objc_msgSend_setAlarms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarms:");
}

id objc_msgSend_setAlarmsByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlarmsByID:");
}

id objc_msgSend_setAlertContextDirty(void *a1, const char *a2, ...)
{
  return _[a1 setAlertContextDirty];
}

id objc_msgSend_setAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertType:");
}

id objc_msgSend_setAllMusicPersonalizationTokenStatuses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllMusicPersonalizationTokenStatuses:");
}

id objc_msgSend_setAllMusicPersonalizationTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllMusicPersonalizationTokens:");
}

id objc_msgSend_setAllocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllocation:");
}

id objc_msgSend_setAllocationChangelogSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllocationChangelogSnapshot:");
}

id objc_msgSend_setAllocationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllocationStatus:");
}

id objc_msgSend_setAllocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllocations:");
}

id objc_msgSend_setAllowAdHocSendingLocationToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowAdHocSendingLocationToServer:");
}

id objc_msgSend_setAllowExplicitContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowExplicitContent:");
}

id objc_msgSend_setAllowJustSiriHomeKitSetting_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowJustSiriHomeKitSetting:withCompletion:");
}

id objc_msgSend_setAllowUserGeneratedContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowUserGeneratedContent:");
}

id objc_msgSend_setAllowsAWDL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsAWDL:");
}

id objc_msgSend_setAllowsBLE_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsBLE:");
}

id objc_msgSend_setAllowsBTPipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsBTPipe:");
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCellularAccess:");
}

id objc_msgSend_setAllowsForceAWDL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsForceAWDL:");
}

id objc_msgSend_setAllowsForceBLE_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsForceBLE:");
}

id objc_msgSend_setAllowsInfraWiFi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsInfraWiFi:");
}

id objc_msgSend_setAlternativeSelectCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternativeSelectCount:");
}

id objc_msgSend_setAltitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAltitude:");
}

id objc_msgSend_setAnalyzingSuccessfulRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalyzingSuccessfulRetry:");
}

id objc_msgSend_setAncId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAncId:");
}

id objc_msgSend_setAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchor:");
}

id objc_msgSend_setAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchors:");
}

id objc_msgSend_setAnnounce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounce:");
}

id objc_msgSend_setAnnounceCallsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceCallsEnabled:");
}

id objc_msgSend_setAnnounceEnabledStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceEnabledStatus:");
}

id objc_msgSend_setAnnounceMessagesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceMessagesEnabled:");
}

id objc_msgSend_setAnnounceNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceNotifications:");
}

id objc_msgSend_setAnnouncementCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementCategory:");
}

id objc_msgSend_setAnnouncementIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementIdentifier:");
}

id objc_msgSend_setAnnouncementNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementNotificationType:");
}

id objc_msgSend_setAnnouncementPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementPlatform:");
}

id objc_msgSend_setAnnouncementTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementTimestamp:");
}

id objc_msgSend_setAnnouncementType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementType:");
}

id objc_msgSend_setAppBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppBundleId:");
}

id objc_msgSend_setAppCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppCategory:");
}

id objc_msgSend_setAppIdentifyingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIdentifyingInfo:");
}

id objc_msgSend_setAppMetaData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppMetaData:");
}

id objc_msgSend_setAppMetaDataList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppMetaDataList:");
}

id objc_msgSend_setAppRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppRestriction:");
}

id objc_msgSend_setAppToItsRestrictionsMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppToItsRestrictionsMap:");
}

id objc_msgSend_setAppleConnectServiceTicket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleConnectServiceTicket:");
}

id objc_msgSend_setAppleConnectSessionToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleConnectSessionToken:");
}

id objc_msgSend_setAppleIntelligence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleIntelligence:");
}

id objc_msgSend_setAppleMusicSubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleMusicSubscriber:");
}

id objc_msgSend_setApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBundleIdentifier:");
}

id objc_msgSend_setApplicationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationContext:");
}

id objc_msgSend_setApplicationDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationDisplayName:");
}

id objc_msgSend_setApplicationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationId:");
}

id objc_msgSend_setApplicationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationName:");
}

id objc_msgSend_setApplicationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationVersion:");
}

id objc_msgSend_setApproximatePreviousTTSInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApproximatePreviousTTSInterval:");
}

id objc_msgSend_setAsrId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsrId:");
}

id objc_msgSend_setAsrStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsrStatus:");
}

id objc_msgSend_setAssetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetVersion:");
}

id objc_msgSend_setAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistant:");
}

id objc_msgSend_setAssistantDaemonLoadedTimestampInNs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantDaemonLoadedTimestampInNs:");
}

id objc_msgSend_setAssistantDaemonSpawnTimestampInNs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantDaemonSpawnTimestampInNs:");
}

id objc_msgSend_setAssistantEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantEnabled:");
}

id objc_msgSend_setAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantId:");
}

id objc_msgSend_setAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantIdentifier:");
}

id objc_msgSend_setAssistantInfoReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantInfoReported:");
}

id objc_msgSend_setAssistantOnLockscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantOnLockscreen:");
}

id objc_msgSend_setAssistantdLaunchMetadataReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantdLaunchMetadataReported:");
}

id objc_msgSend_setAssociatedBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssociatedBundleIdentifier:");
}

id objc_msgSend_setAssociatedChangeLogEventIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssociatedChangeLogEventIdentifier:");
}

id objc_msgSend_setAtomic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAtomic:");
}

id objc_msgSend_setAttemptCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptCount:");
}

id objc_msgSend_setAttribute_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttribute:forKey:error:");
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:");
}

id objc_msgSend_setAttributes_ofItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:ofItemAtPath:error:");
}

id objc_msgSend_setAudioAppSignals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioAppSignals:");
}

id objc_msgSend_setAudioCodec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioCodec:");
}

id objc_msgSend_setAudioCreatedTimestampMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioCreatedTimestampMs:");
}

id objc_msgSend_setAudioDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioDestination:");
}

id objc_msgSend_setAudioDevicesActiveWithin24Hours_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioDevicesActiveWithin24Hours:");
}

id objc_msgSend_setAudioFileHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioFileHandle:");
}

id objc_msgSend_setAudioFileType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioFileType:");
}

id objc_msgSend_setAudioFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioFileURL:");
}

id objc_msgSend_setAudioRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRoute:");
}

id objc_msgSend_setAudioRouteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRouteType:");
}

id objc_msgSend_setAudioSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSessionID:");
}

id objc_msgSend_setAudioSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSource:");
}

id objc_msgSend_setAudioTopology_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioTopology:");
}

id objc_msgSend_setAudioTopologyReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioTopologyReported:");
}

id objc_msgSend_setAuthToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthToken:");
}

id objc_msgSend_setAuthorizationStatus_forBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorizationStatus:forBundle:");
}

id objc_msgSend_setAuthorizationStatusByType_forBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorizationStatusByType:forBundle:");
}

id objc_msgSend_setAuthorizationStatusByType_forBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorizationStatusByType:forBundlePath:");
}

id objc_msgSend_setAutoPunctuation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoPunctuation:");
}

id objc_msgSend_setAutoPunctuationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoPunctuationEnabled:");
}

id objc_msgSend_setAutoSendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoSendMessage:");
}

id objc_msgSend_setAutomaticallyRetryNetworkFailures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyRetryNetworkFailures:");
}

id objc_msgSend_setAvailableDeviceStorageInMB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableDeviceStorageInMB:");
}

id objc_msgSend_setAvailableDictationKeyboards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableDictationKeyboards:");
}

id objc_msgSend_setAvailableOnLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableOnLockScreen:");
}

id objc_msgSend_setBackgroundContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundContent:");
}

id objc_msgSend_setBackgroundContextDirty(void *a1, const char *a2, ...)
{
  return _[a1 setBackgroundContextDirty];
}

id objc_msgSend_setBargeInModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBargeInModes:");
}

id objc_msgSend_setBargeInOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBargeInOptions:");
}

id objc_msgSend_setBccRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBccRecipients:");
}

id objc_msgSend_setBedtimeHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBedtimeHour:");
}

id objc_msgSend_setBedtimeMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBedtimeMinute:");
}

id objc_msgSend_setBluetoothState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothState:");
}

id objc_msgSend_setBobbleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBobbleEnabled:");
}

id objc_msgSend_setBobbleSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBobbleSupported:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBrandName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrandName:");
}

id objc_msgSend_setBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuild:");
}

id objc_msgSend_setBuildNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuildNumber:");
}

id objc_msgSend_setBuildVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuildVersion:");
}

id objc_msgSend_setBulletin_forFeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBulletin:forFeed:");
}

id objc_msgSend_setBulletin_forInternalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBulletin:forInternalID:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleId:");
}

id objc_msgSend_setButtonDowntime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonDowntime:");
}

id objc_msgSend_setByPassServerFlow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByPassServerFlow:");
}

id objc_msgSend_setCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallState:");
}

id objc_msgSend_setCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallbacks:");
}

id objc_msgSend_setCaller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCaller:");
}

id objc_msgSend_setCanHandleRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanHandleRequest:");
}

id objc_msgSend_setCancelAssociatedRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelAssociatedRequests:");
}

id objc_msgSend_setCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCapabilities:");
}

id objc_msgSend_setCarBluetoothHeadUnitsActiveWithinLast24Hours_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarBluetoothHeadUnitsActiveWithinLast24Hours:");
}

id objc_msgSend_setCarDNDActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarDNDActive:");
}

id objc_msgSend_setCarPlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarPlay:");
}

id objc_msgSend_setCarPlayActiveWithin24Hours_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarPlayActiveWithin24Hours:");
}

id objc_msgSend_setCarPlayStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarPlayStatus:");
}

id objc_msgSend_setCardLoggingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardLoggingEnabled:");
}

id objc_msgSend_setCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setCategoryStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryStopped:");
}

id objc_msgSend_setCategoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryType:");
}

id objc_msgSend_setCcRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCcRecipients:");
}

id objc_msgSend_setCensorSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCensorSpeech:");
}

id objc_msgSend_setChangeReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeReason:");
}

id objc_msgSend_setChangeSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeSource:");
}

id objc_msgSend_setChangeTokenUpdatedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeTokenUpdatedBlock:");
}

id objc_msgSend_setCharacterChangeCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharacterChangeCount:");
}

id objc_msgSend_setChatGPTAccountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChatGPTAccountType:");
}

id objc_msgSend_setChecksums_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChecksums:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClassification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassification:");
}

id objc_msgSend_setClassifiedUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassifiedUser:");
}

id objc_msgSend_setClientAuditToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientAuditToken:");
}

id objc_msgSend_setClientBoundCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBoundCommands:");
}

id objc_msgSend_setClientCancellationCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientCancellationCode:");
}

id objc_msgSend_setClientConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientConfiguration:");
}

id objc_msgSend_setClientDeviceSamplingTimestampMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientDeviceSamplingTimestampMs:");
}

id objc_msgSend_setClientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientIdentifier:");
}

id objc_msgSend_setClientModelVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientModelVersion:");
}

id objc_msgSend_setCloudKitSharedDatabaseChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitSharedDatabaseChangeToken:");
}

id objc_msgSend_setCloudSyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudSyncEnabled:");
}

id objc_msgSend_setCodec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCodec:");
}

id objc_msgSend_setCodedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCodedLocation:");
}

id objc_msgSend_setCombinedRank_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCombinedRank:");
}

id objc_msgSend_setCombinedScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCombinedScore:");
}

id objc_msgSend_setCommandCenterClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandCenterClient:");
}

id objc_msgSend_setCommandLoggingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandLoggingEnabled:");
}

id objc_msgSend_setCommandPullDeltaRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullDeltaRequest:");
}

id objc_msgSend_setCommandPullDeltaResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullDeltaResponse:");
}

id objc_msgSend_setCommandPullGenerationsRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullGenerationsRequest:");
}

id objc_msgSend_setCommandPullGenerationsResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullGenerationsResponse:");
}

id objc_msgSend_setCommandPullSnapshotRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullSnapshotRequest:");
}

id objc_msgSend_setCommandPullSnapshotResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPullSnapshotResponse:");
}

id objc_msgSend_setCommandPushGenerationsRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPushGenerationsRequest:");
}

id objc_msgSend_setCommandPushGenerationsResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandPushGenerationsResponse:");
}

id objc_msgSend_setCommandRelayProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandRelayProxyIdentifier:");
}

id objc_msgSend_setCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommands:");
}

id objc_msgSend_setCommsNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommsNotificationType:");
}

id objc_msgSend_setCompactVoiceTriggerDiscoveryNotificationPresented_forBTDeviceWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompactVoiceTriggerDiscoveryNotificationPresented:forBTDeviceWithAddress:");
}

id objc_msgSend_setCompanionAssistantID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionAssistantID:");
}

id objc_msgSend_setCompanionAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionAssistantId:");
}

id objc_msgSend_setCompanionDeviceCommunicationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionDeviceCommunicationContext:");
}

id objc_msgSend_setCompanionDeviceDiscoveryContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionDeviceDiscoveryContext:");
}

id objc_msgSend_setCompanionIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionIDSIdentifier:");
}

id objc_msgSend_setCompanionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionIdentifier:");
}

id objc_msgSend_setCompanionOfMUDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionOfMUDevice:");
}

id objc_msgSend_setCompanionPeerToPeerHandoffCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionPeerToPeerHandoffCapable:");
}

id objc_msgSend_setCompanionSpeechID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionSpeechID:");
}

id objc_msgSend_setCompanionSpeechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionSpeechId:");
}

id objc_msgSend_setCompanionSyncMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionSyncMetadata:");
}

id objc_msgSend_setCompanionSyncMetadataCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionSyncMetadataCapable:");
}

id objc_msgSend_setCompany_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompany:");
}

id objc_msgSend_setCompatibilityVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompatibilityVersion:");
}

id objc_msgSend_setCompletedTurnId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedTurnId:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComponent:");
}

id objc_msgSend_setConfidenceScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfidenceScore:");
}

id objc_msgSend_setConfidenceScoresByLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfidenceScoresByLanguage:");
}

id objc_msgSend_setConfigOverrides_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigOverrides:");
}

id objc_msgSend_setConfigVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigVersion:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfiguration_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:forClient:");
}

id objc_msgSend_setConfirmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmed:");
}

id objc_msgSend_setConnectByPOPMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectByPOPMethod:");
}

id objc_msgSend_setConnectedAudioDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedAudioDevice:");
}

id objc_msgSend_setConnectedSubflowCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedSubflowCount:");
}

id objc_msgSend_setConnectionDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionDelay:");
}

id objc_msgSend_setConnectionEdgeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionEdgeID:");
}

id objc_msgSend_setConnectionEdgeIDName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionEdgeIDName:");
}

id objc_msgSend_setConnectionEdgeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionEdgeType:");
}

id objc_msgSend_setConnectionFallbackReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionFallbackReason:");
}

id objc_msgSend_setConnectionMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionMethod:");
}

id objc_msgSend_setConnectionMethodName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionMethodName:");
}

id objc_msgSend_setConnectionMetricsForIDS_messageDelay_openErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionMetricsForIDS:messageDelay:openErrorCode:");
}

id objc_msgSend_setConnectionMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionMode:");
}

id objc_msgSend_setConnectionOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionOptions:");
}

id objc_msgSend_setConnectionPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicy:");
}

id objc_msgSend_setConnectionPolicyDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicyDate:");
}

id objc_msgSend_setConnectionPolicyFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicyFailureCount:");
}

id objc_msgSend_setConnectionPolicyFirstFailureDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicyFirstFailureDate:");
}

id objc_msgSend_setConnectionPolicyHostname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicyHostname:");
}

id objc_msgSend_setConnectionPolicyRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionPolicyRoute:");
}

id objc_msgSend_setConnectionProtocolTechnology_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionProtocolTechnology:");
}

id objc_msgSend_setConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionType:");
}

id objc_msgSend_setContactHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactHandles:");
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactIdentifier:");
}

id objc_msgSend_setContactName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactName:");
}

id objc_msgSend_setContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContent:");
}

id objc_msgSend_setContentVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentVersion:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextCollectorFetchContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextCollectorFetchContext:");
}

id objc_msgSend_setContextId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextId:");
}

id objc_msgSend_setContextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextIdentifier:");
}

id objc_msgSend_setContextSnapshot_withMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextSnapshot:withMetadata:");
}

id objc_msgSend_setContinuousListening_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousListening:");
}

id objc_msgSend_setControlCenterLockRestrictedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlCenterLockRestrictedCommands:");
}

id objc_msgSend_setControlFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlFlags:");
}

id objc_msgSend_setControlGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlGroup:");
}

id objc_msgSend_setConversationDetectConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationDetectConfig:");
}

id objc_msgSend_setCorrectionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCorrectionText:");
}

id objc_msgSend_setCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCount:");
}

id objc_msgSend_setCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountryCode:");
}

id objc_msgSend_setCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCriteria:");
}

id objc_msgSend_setCrossDeviceCommandContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCrossDeviceCommandContext:");
}

id objc_msgSend_setCurrentAnnouncementRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentAnnouncementRoute:");
}

id objc_msgSend_setCurrentAudioRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentAudioRoute:");
}

id objc_msgSend_setCurrentEphemeralSeedIfNil_andCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentEphemeralSeedIfNil:andCreationTime:");
}

id objc_msgSend_setCurrentHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHome:");
}

id objc_msgSend_setCurrentHomeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHomeIdentifier:");
}

id objc_msgSend_setCurrentHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHomes:");
}

id objc_msgSend_setCurrentIfNil_andCreationTime_andValidityDays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentIfNil:andCreationTime:andValidityDays:");
}

id objc_msgSend_setCurrentOrUpNextDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentOrUpNextDateInterval:");
}

id objc_msgSend_setCurrentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentRequest:");
}

id objc_msgSend_setCurrentRequestCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentRequestCommand:");
}

id objc_msgSend_setCurrentRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentRequestId:");
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:");
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setData:");
}

id objc_msgSend_setDataCollectionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataCollectionId:");
}

id objc_msgSend_setDataDetectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataDetectionType:");
}

id objc_msgSend_setDataSharingOptInState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSharingOptInState:");
}

id objc_msgSend_setDataSharingOptInStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSharingOptInStatus:");
}

id objc_msgSend_setDataSharingSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSharingSettings:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDataSourceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSourceInfo:");
}

id objc_msgSend_setDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStore:");
}

id objc_msgSend_setDataStoreIsOnSharedDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStoreIsOnSharedDatabase:");
}

id objc_msgSend_setDataStoreShouldMirrorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStoreShouldMirrorData:");
}

id objc_msgSend_setDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataType:");
}

id objc_msgSend_setDataValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataValue:");
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDate:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateIsAllDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateIsAllDay:");
}

id objc_msgSend_setDatePlaybackFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatePlaybackFinished:");
}

id objc_msgSend_setDatePlaybackStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatePlaybackStarted:");
}

id objc_msgSend_setDaysOfWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaysOfWeek:");
}

id objc_msgSend_setDaysWithTwoAssistantSpeechRequestsPerWeek_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaysWithTwoAssistantSpeechRequestsPerWeek:");
}

id objc_msgSend_setDebugFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugFlags:");
}

id objc_msgSend_setDebugValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugValue:");
}

id objc_msgSend_setDeclineDismissGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclineDismissGesture:");
}

id objc_msgSend_setDefaultActionURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultActionURL:");
}

id objc_msgSend_setDefaultUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultUserState:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegate_forRequestTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:forRequestTypes:");
}

id objc_msgSend_setDeletedItemUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeletedItemUUIDs:");
}

id objc_msgSend_setDelgate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelgate:");
}

id objc_msgSend_setDeploymentId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeploymentId:");
}

id objc_msgSend_setDesiredAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredAccuracy:");
}

id objc_msgSend_setDesiredKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredKeys:");
}

id objc_msgSend_setDestinationDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationDevice:");
}

id objc_msgSend_setDetectUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetectUtterances:");
}

id objc_msgSend_setDetectionTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetectionTarget:");
}

id objc_msgSend_setDeveloperMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeveloperMode:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceAddresses:");
}

id objc_msgSend_setDeviceAggregationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceAggregationId:");
}

id objc_msgSend_setDeviceAuthVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceAuthVersion:");
}

id objc_msgSend_setDeviceBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceBuild:");
}

id objc_msgSend_setDeviceCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceCapabilities:");
}

id objc_msgSend_setDeviceCapacityInGB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceCapacityInGB:");
}

id objc_msgSend_setDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceChangedHandler:");
}

id objc_msgSend_setDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceClass:");
}

id objc_msgSend_setDeviceColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceColor:");
}

id objc_msgSend_setDeviceContext_includedKeys_excludedKeys_forDeviceWithPeerInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceContext:includedKeys:excludedKeys:forDeviceWithPeerInfo:completion:");
}

id objc_msgSend_setDeviceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceCount:");
}

id objc_msgSend_setDeviceEnclosure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceEnclosure:");
}

id objc_msgSend_setDeviceFamily_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFamily:");
}

id objc_msgSend_setDeviceFixedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFixedContext:");
}

id objc_msgSend_setDeviceFixingProblems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFixingProblems:");
}

id objc_msgSend_setDeviceFoundHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFoundHandler:");
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceID:");
}

id objc_msgSend_setDeviceIDPair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIDPair:");
}

id objc_msgSend_setDeviceIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIDs:");
}

id objc_msgSend_setDeviceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceId:");
}

id objc_msgSend_setDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIdentifier:");
}

id objc_msgSend_setDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfo:");
}

id objc_msgSend_setDeviceIsInWalkaboutExperimentGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIsInWalkaboutExperimentGroup:");
}

id objc_msgSend_setDeviceLostHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceLostHandler:");
}

id objc_msgSend_setDeviceModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceModel:");
}

id objc_msgSend_setDeviceMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceMotion:");
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceName:");
}

id objc_msgSend_setDeviceOS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceOS:");
}

id objc_msgSend_setDeviceOs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceOs:");
}

id objc_msgSend_setDeviceOwnedByCurrentUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceOwnedByCurrentUser:");
}

id objc_msgSend_setDeviceOwner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceOwner:");
}

id objc_msgSend_setDeviceProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceProximity:");
}

id objc_msgSend_setDeviceRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceRestrictions:");
}

id objc_msgSend_setDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceType:");
}

id objc_msgSend_setDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUID:");
}

id objc_msgSend_setDeviceWasRedirectedToProduction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWasRedirectedToProduction:");
}

id objc_msgSend_setDiagnosticReports_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiagnosticReports:");
}

id objc_msgSend_setDialogPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialogPhase:");
}

id objc_msgSend_setDictation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictation:");
}

id objc_msgSend_setDictationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationEnabled:");
}

id objc_msgSend_setDictationInputOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationInputOrigin:");
}

id objc_msgSend_setDictationLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationLanguages:");
}

id objc_msgSend_setDictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationOptions:");
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictionary:");
}

id objc_msgSend_setDidConnectionTimeOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidConnectionTimeOut:");
}

id objc_msgSend_setDirectAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectAction:");
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirection:");
}

id objc_msgSend_setDirtySiriOutputVolumeHostTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirtySiriOutputVolumeHostTime:");
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:");
}

id objc_msgSend_setDiscoveryOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryOptions:");
}

id objc_msgSend_setDiscoveryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryType:");
}

id objc_msgSend_setDiscretionaryNetworkBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionaryNetworkBehavior:");
}

id objc_msgSend_setDismissedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissedDate:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplayText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayText:");
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomain:");
}

id objc_msgSend_setDomainObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObject:forKey:");
}

id objc_msgSend_setDomainObject_withOldId_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObject:withOldId:forKey:");
}

id objc_msgSend_setDomainObjectClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObjectClass:");
}

id objc_msgSend_setDomainObjectPropertyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObjectPropertyIdentifier:");
}

id objc_msgSend_setDonationService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDonationService:");
}

id objc_msgSend_setDormant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDormant:");
}

id objc_msgSend_setDspStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDspStatus:");
}

id objc_msgSend_setDuckingEventSyncDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuckingEventSyncDelay:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setDurationFromVoiceRecordingEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationFromVoiceRecordingEnd:");
}

id objc_msgSend_setDurationFromVoiceSendEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationFromVoiceSendEnd:");
}

id objc_msgSend_setDurationSelfTriggerSuppressionWasActiveInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationSelfTriggerSuppressionWasActiveInSeconds:");
}

id objc_msgSend_setDurationSincePreviousTTSFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationSincePreviousTTSFinish:");
}

id objc_msgSend_setDurationSincePreviousTTSStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationSincePreviousTTSStart:");
}

id objc_msgSend_setEARLanguageDetectorSpeechRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEARLanguageDetectorSpeechRequestId:");
}

id objc_msgSend_setEffectiveDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffectiveDate:");
}

id objc_msgSend_setEffectiveSystemLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffectiveSystemLanguage:");
}

id objc_msgSend_setEkToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEkToken:");
}

id objc_msgSend_setElapsedSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElapsedSeconds:");
}

id objc_msgSend_setEligibileFunctions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEligibileFunctions:");
}

id objc_msgSend_setEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmailAddress:");
}

id objc_msgSend_setEmails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmails:");
}

id objc_msgSend_setEnableOptimisticDNS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableOptimisticDNS:");
}

id objc_msgSend_setEnablePartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablePartialResults:");
}

id objc_msgSend_setEnableTLS13_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableTLS13:");
}

id objc_msgSend_setEnableTcpFastOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableTcpFastOpen:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnabled_forDataclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:forDataclass:");
}

id objc_msgSend_setEnabledDictationLocales_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledDictationLocales:");
}

id objc_msgSend_setEnabledStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledStatus:");
}

id objc_msgSend_setEnablesProximityTracking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesProximityTracking:");
}

id objc_msgSend_setEnclosureColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnclosureColor:");
}

id objc_msgSend_setEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnd:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndTime:");
}

id objc_msgSend_setEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnded:");
}

id objc_msgSend_setEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpoint:");
}

id objc_msgSend_setEndpointConfirmationTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointConfirmationTimestamp:");
}

id objc_msgSend_setEndpointTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointTimestamp:");
}

id objc_msgSend_setEndpointerDelayedTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointerDelayedTrigger:");
}

id objc_msgSend_setEndpointerOperationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointerOperationMode:");
}

id objc_msgSend_setEndpointerThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointerThreshold:");
}

id objc_msgSend_setEnrolledUsers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnrolledUsers:");
}

id objc_msgSend_setEnrollmentName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnrollmentName:");
}

id objc_msgSend_setEntities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntities:");
}

id objc_msgSend_setEntitySyncSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntitySyncSettings:");
}

id objc_msgSend_setEntityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntityType:");
}

id objc_msgSend_setEphemeralIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEphemeralIdentifiers:");
}

id objc_msgSend_setEphemeralToAggregationIdentifierMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEphemeralToAggregationIdentifierMap:");
}

id objc_msgSend_setEphemeralUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEphemeralUserId:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorCode:");
}

id objc_msgSend_setErrorDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorDomain:");
}

id objc_msgSend_setErrorIndicatorStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorIndicatorStatus:");
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvent:");
}

id objc_msgSend_setEventGeneratedRelativeToBootTimeTimestampNs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventGeneratedRelativeToBootTimeTimestampNs:");
}

id objc_msgSend_setEventGeneratedTimestampRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventGeneratedTimestampRefId:");
}

id objc_msgSend_setEventInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventInformation:");
}

id objc_msgSend_setEventMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventMetadata:");
}

id objc_msgSend_setEventTransmittedRelativeToBootTimeTimestampNs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventTransmittedRelativeToBootTimeTimestampNs:");
}

id objc_msgSend_setEventTransmittedTimestampRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventTransmittedTimestampRefId:");
}

id objc_msgSend_setEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventType:");
}

id objc_msgSend_setExecuteOnRemoteRequestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExecuteOnRemoteRequestContext:");
}

id objc_msgSend_setExecutionContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExecutionContexts:");
}

id objc_msgSend_setExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExists:");
}

id objc_msgSend_setExpectedSelectedSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedSelectedSharedUserId:");
}

id objc_msgSend_setExpectedSpeakerConfidenceScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedSpeakerConfidenceScore:");
}

id objc_msgSend_setExpectedSpeakerSharedUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedSpeakerSharedUserID:");
}

id objc_msgSend_setExperimentContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentContext:");
}

id objc_msgSend_setExperimentGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentGroups:");
}

id objc_msgSend_setExperimentId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentId:");
}

id objc_msgSend_setExperimentIdentifier_forConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentIdentifier:forConfigurationIdentifier:");
}

id objc_msgSend_setExperimentInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentInfos:");
}

id objc_msgSend_setExperimentNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentNamespace:");
}

id objc_msgSend_setExperimentState_forConfigurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentState:forConfigurationIdentifier:");
}

id objc_msgSend_setExperimentalBucketId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentalBucketId:");
}

id objc_msgSend_setExperiments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperiments:");
}

id objc_msgSend_setExperimentsUAFEmitted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperimentsUAFEmitted:");
}

id objc_msgSend_setExpirationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationDuration:");
}

id objc_msgSend_setExplicitUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExplicitUtterances:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExternalToneFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalToneFileURL:");
}

id objc_msgSend_setEyesFree_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEyesFree:");
}

id objc_msgSend_setFadeInDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFadeInDuration:");
}

id objc_msgSend_setFadeOutDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFadeOutDuration:");
}

id objc_msgSend_setFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailed:");
}

id objc_msgSend_setFailureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureReason:");
}

id objc_msgSend_setFallbackReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFallbackReason:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFeaturesAtEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeaturesAtEndpoint:");
}

id objc_msgSend_setFetchAllChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchAllChanges:");
}

id objc_msgSend_setFetchDatabaseChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchDatabaseChangesCompletionBlock:");
}

id objc_msgSend_setFetchInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchInProgress:");
}

id objc_msgSend_setFetchRecordZoneChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZoneChangesCompletionBlock:");
}

id objc_msgSend_setFetchRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordsCompletionBlock:");
}

id objc_msgSend_setFetchShareMetadataCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchShareMetadataCompletionBlock:");
}

id objc_msgSend_setFetchSyncDebugInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchSyncDebugInfo:");
}

id objc_msgSend_setFieldId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFieldId:");
}

id objc_msgSend_setFieldLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFieldLabel:");
}

id objc_msgSend_setFields(void *a1, const char *a2, ...)
{
  return _[a1 setFields];
}

id objc_msgSend_setFileLoggingIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFileLoggingIsEnabled:");
}

id objc_msgSend_setFingerprint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFingerprint:");
}

id objc_msgSend_setFingerprintWasRecognized(void *a1, const char *a2, ...)
{
  return _[a1 setFingerprintWasRecognized];
}

id objc_msgSend_setFingerprintingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFingerprintingEnabled:");
}

id objc_msgSend_setFireDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFireDate:");
}

id objc_msgSend_setFireTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFireTimeInterval:");
}

id objc_msgSend_setFiredDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFiredDate:");
}

id objc_msgSend_setFiring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFiring:");
}

id objc_msgSend_setFirstByteReadInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstByteReadInterval:");
}

id objc_msgSend_setFirstName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstName:");
}

id objc_msgSend_setFirstNamePhonetic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstNamePhonetic:");
}

id objc_msgSend_setFirstPassMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstPassMetadata:");
}

id objc_msgSend_setFirstPassPeakScoreHS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstPassPeakScoreHS:");
}

id objc_msgSend_setFirstPassPeakScoreJS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstPassPeakScoreJS:");
}

id objc_msgSend_setFirstPassTriggerSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstPassTriggerSource:");
}

id objc_msgSend_setFirstPassTriggers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstPassTriggers:");
}

id objc_msgSend_setFirstUnlockRestrictedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstUnlockRestrictedCommands:");
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlags:");
}

id objc_msgSend_setFootprint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFootprint:");
}

id objc_msgSend_setForVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForVerification:");
}

id objc_msgSend_setForceFetchContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceFetchContext:");
}

id objc_msgSend_setForceOfflineRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceOfflineRecognition:");
}

id objc_msgSend_setForceReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceReconnect:");
}

id objc_msgSend_setFoundApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFoundApps:");
}

id objc_msgSend_setFrequency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrequency:");
}

id objc_msgSend_setFromLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromLocalDevice:");
}

id objc_msgSend_setFulfillmentBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFulfillmentBlock:");
}

id objc_msgSend_setFullName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullName:");
}

id objc_msgSend_setFullStorefrontId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullStorefrontId:");
}

id objc_msgSend_setGatewayPingDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGatewayPingDuration:");
}

id objc_msgSend_setGatewayPingsDropped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGatewayPingsDropped:");
}

id objc_msgSend_setGatewayPingsSent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGatewayPingsSent:");
}

id objc_msgSend_setGatewayStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGatewayStatus:");
}

id objc_msgSend_setGender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGender:");
}

id objc_msgSend_setGeneral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeneral:");
}

id objc_msgSend_setGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeneration:");
}

id objc_msgSend_setGeoResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeoResult:");
}

id objc_msgSend_setGetAnchorsRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetAnchorsRequest:");
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGivenName:");
}

id objc_msgSend_setGlobalTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalTimeout:");
}

id objc_msgSend_setGmDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGmDevice:");
}

id objc_msgSend_setGradingOptInStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGradingOptInStateChanges:");
}

id objc_msgSend_setGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroup:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHalId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHalId:");
}

id objc_msgSend_setHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandle:");
}

id objc_msgSend_setHandoffData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffData:");
}

id objc_msgSend_setHandoffNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffNotification:");
}

id objc_msgSend_setHandoffOriginDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffOriginDeviceName:");
}

id objc_msgSend_setHandoffRequestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffRequestData:");
}

id objc_msgSend_setHandoffRequiresUserInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffRequiresUserInteraction:");
}

id objc_msgSend_setHandoffURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffURLString:");
}

id objc_msgSend_setHandoffUrlString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandoffUrlString:");
}

id objc_msgSend_setHardwareButtonEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHardwareButtonEnabled:");
}

id objc_msgSend_setHardwareSampleRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHardwareSampleRate:");
}

id objc_msgSend_setHasATVOrHomePodInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasATVOrHomePodInHome:");
}

id objc_msgSend_setHasActiveRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasActiveRequest:");
}

id objc_msgSend_setHasActiveThirdPartyMusicSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasActiveThirdPartyMusicSubscription:");
}

id objc_msgSend_setHasAudioTopology_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAudioTopology:");
}

id objc_msgSend_setHasBeenFulfilled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasBeenFulfilled:");
}

id objc_msgSend_setHasClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasClient:");
}

id objc_msgSend_setHasConnectionFallbackReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasConnectionFallbackReason:");
}

id objc_msgSend_setHasDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasDefaultAction:");
}

id objc_msgSend_setHasEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasEnded:");
}

id objc_msgSend_setHasFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasFailed:");
}

id objc_msgSend_setHasHomekitHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasHomekitHome:");
}

id objc_msgSend_setHasIMacCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIMacCount:");
}

id objc_msgSend_setHasIPadCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIPadCount:");
}

id objc_msgSend_setHasIPhoneCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIPhoneCount:");
}

id objc_msgSend_setHasInconsistentStateDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasInconsistentStateDetected:");
}

id objc_msgSend_setHasIsLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIsLeader:");
}

id objc_msgSend_setHasMacBookCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasMacBookCount:");
}

id objc_msgSend_setHasMacStudioCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasMacStudioCount:");
}

id objc_msgSend_setHasNearbyPersonalDevicesReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasNearbyPersonalDevicesReported:");
}

id objc_msgSend_setHasNullPeerIdentityServicesId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasNullPeerIdentityServicesId:");
}

id objc_msgSend_setHasOtheriOSActiveDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasOtheriOSActiveDevices:");
}

id objc_msgSend_setHasPairedAppleWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPairedAppleWatch:");
}

id objc_msgSend_setHasPairedWatches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPairedWatches:");
}

id objc_msgSend_setHasSetUpAccountStatusRecordZoneSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetUpAccountStatusRecordZoneSubscription:");
}

id objc_msgSend_setHasSetUpKeyValueRecordZoneSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetUpKeyValueRecordZoneSubscription:");
}

id objc_msgSend_setHasSetUpRecordZoneSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetUpRecordZoneSubscription:");
}

id objc_msgSend_setHasSetUpVoiceTriggerRecordZoneSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetUpVoiceTriggerRecordZoneSubscription:");
}

id objc_msgSend_setHasSetupMultiUserSharedRecordZoneSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSetupMultiUserSharedRecordZoneSubscription:");
}

id objc_msgSend_setHasStartedOrChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasStartedOrChanged:");
}

id objc_msgSend_setHasTvOSDeviceInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTvOSDeviceInHome:");
}

id objc_msgSend_setHasWatchCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasWatchCount:");
}

id objc_msgSend_setHashedGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHashedGroupID:");
}

id objc_msgSend_setHashedHomeId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHashedHomeId:");
}

id objc_msgSend_setHashedRouteId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHashedRouteId:");
}

id objc_msgSend_setHeadGestureConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadGestureConfiguration:");
}

id objc_msgSend_setHeadGestureToggle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadGestureToggle:");
}

id objc_msgSend_setHeadGestures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadGestures:");
}

id objc_msgSend_setHeadGesturesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadGesturesEnabled:");
}

id objc_msgSend_setHeadGesturesSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadGesturesSupported:");
}

id objc_msgSend_setHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaders:");
}

id objc_msgSend_setHeadphoneListeningMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadphoneListeningMode:completion:");
}

id objc_msgSend_setHeadsetAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadsetAddress:");
}

id objc_msgSend_setHeadsetName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeadsetName:");
}

id objc_msgSend_setHeartbeatTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeartbeatTimer:");
}

id objc_msgSend_setHeySiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeySiriEnabled:");
}

id objc_msgSend_setHeySiriHangupEnablementState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeySiriHangupEnablementState:");
}

id objc_msgSend_setHkId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHkId:");
}

id objc_msgSend_setHoldToTalkThresholdInMilliseconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHoldToTalkThresholdInMilliseconds:");
}

id objc_msgSend_setHomeAccessoriesRepromptStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeAccessoriesRepromptStatus:");
}

id objc_msgSend_setHomeAccessoryInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeAccessoryInfo:");
}

id objc_msgSend_setHomeAnnouncement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeAnnouncement:");
}

id objc_msgSend_setHomeAutomationServerFlowBypassed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeAutomationServerFlowBypassed:");
}

id objc_msgSend_setHomeComponentId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeComponentId:");
}

id objc_msgSend_setHomeEphemeralId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeEphemeralId:");
}

id objc_msgSend_setHomeKit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKit:");
}

id objc_msgSend_setHomeKitAccessoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKitAccessoryIdentifier:");
}

id objc_msgSend_setHomeKitConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKitConfiguration:");
}

id objc_msgSend_setHomeKitMediaSystemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKitMediaSystemIdentifier:");
}

id objc_msgSend_setHomeKitRoomName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKitRoomName:");
}

id objc_msgSend_setHomeKitTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeKitTarget:");
}

id objc_msgSend_setHomeMemberSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeMemberSettings:");
}

id objc_msgSend_setHomeMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeMembers:");
}

id objc_msgSend_setHomeMemberships_homeMembershipsToDelete_voiceIDSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeMemberships:homeMembershipsToDelete:voiceIDSetting:");
}

id objc_msgSend_setHomePodProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomePodProperties:");
}

id objc_msgSend_setHorizontalAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalAccuracy:");
}

id objc_msgSend_setHorizontalAccuracyInMeters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalAccuracyInMeters:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHostTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostTime:");
}

id objc_msgSend_setHostname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostname:");
}

id objc_msgSend_setHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHour:");
}

id objc_msgSend_setHourOfDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHourOfDay:");
}

id objc_msgSend_setHsHangupEnablementState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHsHangupEnablementState:");
}

id objc_msgSend_setHybridUODEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHybridUODEnabled:");
}

id objc_msgSend_setIMacCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIMacCount:");
}

id objc_msgSend_setIOSAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIOSAssistant:");
}

id objc_msgSend_setIOSDevicePropertiesReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIOSDevicePropertiesReported:");
}

id objc_msgSend_setIOSGeneral_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIOSGeneral:");
}

id objc_msgSend_setIPadCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIPadCount:");
}

id objc_msgSend_setIPhoneCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIPhoneCount:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentifierChecksum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifierChecksum:");
}

id objc_msgSend_setIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifiers:");
}

id objc_msgSend_setIdsDeviceUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDeviceUniqueIdentifier:");
}

id objc_msgSend_setIdsFirstRoutableDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsFirstRoutableDestination:");
}

id objc_msgSend_setIdsIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsIdentifier:");
}

id objc_msgSend_setImplicitUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImplicitUtterances:");
}

id objc_msgSend_setImposePolicyBan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImposePolicyBan:");
}

id objc_msgSend_setInContextUsersStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInContextUsersStates:");
}

id objc_msgSend_setInProgressOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInProgressOutputVoice:");
}

id objc_msgSend_setInRetailStoreDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInRetailStoreDemoMode:");
}

id objc_msgSend_setIncludeAllKnownAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeAllKnownAnchors:");
}

id objc_msgSend_setIncludesFamily_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesFamily:");
}

id objc_msgSend_setIncludesHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesHome:");
}

id objc_msgSend_setIncludesRemoraDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesRemoraDevices:");
}

id objc_msgSend_setIncoming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncoming:");
}

id objc_msgSend_setIncomingCallSearchResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncomingCallSearchResults:");
}

id objc_msgSend_setIncomingCallType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncomingCallType:");
}

id objc_msgSend_setInconsistencyCondition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInconsistencyCondition:");
}

id objc_msgSend_setInconsistencyTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInconsistencyTrigger:");
}

id objc_msgSend_setInconsistentStateDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInconsistentStateDetected:");
}

id objc_msgSend_setIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndex:");
}

id objc_msgSend_setInitialDictationLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialDictationLanguage:");
}

id objc_msgSend_setInlineItemList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInlineItemList:");
}

id objc_msgSend_setInputLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInputLocale:");
}

id objc_msgSend_setInputOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInputOrigin:");
}

id objc_msgSend_setInsertedOrUpdatedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInsertedOrUpdatedItems:");
}

id objc_msgSend_setInstalledVoices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstalledVoices:");
}

id objc_msgSend_setInstanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstanceContext:");
}

id objc_msgSend_setInstrumentationBatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInstrumentationBatch:");
}

id objc_msgSend_setInteractionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionId:");
}

id objc_msgSend_setInteractionIdToBeCorrected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionIdToBeCorrected:");
}

id objc_msgSend_setInteractionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionType:");
}

id objc_msgSend_setInterceptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterceptor:");
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:");
}

id objc_msgSend_setInterfaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceName:");
}

id objc_msgSend_setInternalAuthAppleConnectServiceTicket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInternalAuthAppleConnectServiceTicket:");
}

id objc_msgSend_setInternalAuthSessionToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInternalAuthSessionToken:");
}

id objc_msgSend_setInternalGUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInternalGUID:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setInvocationTypeId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvocationTypeId:");
}

id objc_msgSend_setIsATVHandoff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsATVHandoff:");
}

id objc_msgSend_setIsAdaptiveVolumeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAdaptiveVolumeEnabled:");
}

id objc_msgSend_setIsAdvancedAppleAudioDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAdvancedAppleAudioDevice:");
}

id objc_msgSend_setIsAllowSiriWhenLockedEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAllowSiriWhenLockedEnabled:");
}

id objc_msgSend_setIsAlwaysListenForHeySiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAlwaysListenForHeySiriEnabled:");
}

id objc_msgSend_setIsAlwaysShowSiriCaptionsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAlwaysShowSiriCaptionsEnabled:");
}

id objc_msgSend_setIsAlwaysShowSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAlwaysShowSpeechEnabled:");
}

id objc_msgSend_setIsAnnounceCallsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAnnounceCallsEnabled:");
}

id objc_msgSend_setIsAnnounceNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAnnounceNotificationsEnabled:");
}

id objc_msgSend_setIsAppAnalyticsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAppAnalyticsEnabled:");
}

id objc_msgSend_setIsAppleIntelligenceAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAppleIntelligenceAvailable:");
}

id objc_msgSend_setIsAppleIntelligenceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAppleIntelligenceEnabled:");
}

id objc_msgSend_setIsAppleIntelligenceHardwareCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAppleIntelligenceHardwareCapable:");
}

id objc_msgSend_setIsAskWithSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAskWithSiriEnabled:");
}

id objc_msgSend_setIsAssistantEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAssistantEnabled:");
}

id objc_msgSend_setIsAtypicalSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAtypicalSpeechEnabled:");
}

id objc_msgSend_setIsAudioSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAudioSessionActive:");
}

id objc_msgSend_setIsAutoPunctuationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAutoPunctuationEnabled:");
}

id objc_msgSend_setIsAutomaticallySendMessagesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAutomaticallySendMessagesEnabled:");
}

id objc_msgSend_setIsBluetoothSpeakerActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBluetoothSpeakerActive:");
}

id objc_msgSend_setIsBuiltInSpeakerActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBuiltInSpeakerActive:");
}

id objc_msgSend_setIsBuiltInVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBuiltInVoice:");
}

id objc_msgSend_setIsCarPlayMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCarPlayMuted:");
}

id objc_msgSend_setIsCarryDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCarryDevice:");
}

id objc_msgSend_setIsChatGPTConfirmationAlwaysRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsChatGPTConfirmationAlwaysRequired:");
}

id objc_msgSend_setIsChatGPTEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsChatGPTEnabled:");
}

id objc_msgSend_setIsChatGPTSetUpPrompts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsChatGPTSetUpPrompts:");
}

id objc_msgSend_setIsCommunalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCommunalDevice:");
}

id objc_msgSend_setIsCurrentLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCurrentLocation:");
}

id objc_msgSend_setIsDelaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDelaying:");
}

id objc_msgSend_setIsDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDeviceLocked:");
}

id objc_msgSend_setIsDeviceOwnedByCurrentUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDeviceOwnedByCurrentUser:");
}

id objc_msgSend_setIsDeviceShowingLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDeviceShowingLockScreen:");
}

id objc_msgSend_setIsDiagnosticsAndUsageEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDiagnosticsAndUsageEnabled:");
}

id objc_msgSend_setIsDictationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDictationEnabled:");
}

id objc_msgSend_setIsDriving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDriving:");
}

id objc_msgSend_setIsDropInCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDropInCall:");
}

id objc_msgSend_setIsEligibleForAppPunchout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForAppPunchout:");
}

id objc_msgSend_setIsEligibleForDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForDirections:");
}

id objc_msgSend_setIsEligibleForReminders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForReminders:");
}

id objc_msgSend_setIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEnabled:");
}

id objc_msgSend_setIsEnabledForCarPlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEnabledForCarPlay:");
}

id objc_msgSend_setIsEnabledForHeadphones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEnabledForHeadphones:");
}

id objc_msgSend_setIsEnrollmentReprompted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEnrollmentReprompted:");
}

id objc_msgSend_setIsExternalMicrophoneHSEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsExternalMicrophoneHSEnabled:");
}

id objc_msgSend_setIsEyesFree_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEyesFree:");
}

id objc_msgSend_setIsFiring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFiring:");
}

id objc_msgSend_setIsFirstRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFirstRequest:");
}

id objc_msgSend_setIsHeySiriTriggerPhraseEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHeySiriTriggerPhraseEnabled:");
}

id objc_msgSend_setIsHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHighlight:");
}

id objc_msgSend_setIsInAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInAmbient:");
}

id objc_msgSend_setIsJSEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsJSEnabled:");
}

id objc_msgSend_setIsJustSiriTriggerPhraseEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsJustSiriTriggerPhraseEnabled:");
}

id objc_msgSend_setIsLiveActivitiesSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLiveActivitiesSupported:");
}

id objc_msgSend_setIsLocationSharingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocationSharingDevice:");
}

id objc_msgSend_setIsMeDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMeDevice:");
}

id objc_msgSend_setIsMediaEntitySyncDisabledSyncConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMediaEntitySyncDisabledSyncConfig:");
}

id objc_msgSend_setIsMediaEntitySyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMediaEntitySyncEnabled:");
}

id objc_msgSend_setIsMediaPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMediaPlaying:");
}

id objc_msgSend_setIsMirroredDataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMirroredDataStore:");
}

id objc_msgSend_setIsMitigated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMitigated:");
}

id objc_msgSend_setIsMteUploadEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMteUploadEnabled:");
}

id objc_msgSend_setIsMultiUserSyncerMeDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMultiUserSyncerMeDevice:");
}

id objc_msgSend_setIsNew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsNew:");
}

id objc_msgSend_setIsOnPhoneCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOnPhoneCall:");
}

id objc_msgSend_setIsOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOverride:");
}

id objc_msgSend_setIsPermanentOffsetEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPermanentOffsetEnabled:");
}

id objc_msgSend_setIsPersonalDomainRequestsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPersonalDomainRequestsEnabled:");
}

id objc_msgSend_setIsPersonalDomainsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPersonalDomainsEnabled:");
}

id objc_msgSend_setIsPreciseLocationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPreciseLocationEnabled:");
}

id objc_msgSend_setIsPressSideButtonForSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPressSideButtonForSiriEnabled:");
}

id objc_msgSend_setIsProximityCardSeen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsProximityCardSeen:");
}

id objc_msgSend_setIsRaiseToSpeakEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRaiseToSpeakEnabled:");
}

id objc_msgSend_setIsReadOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsReadOnly:");
}

id objc_msgSend_setIsRedactedDueToOptOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRedactedDueToOptOut:");
}

id objc_msgSend_setIsRemoteDarwinHeySiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRemoteDarwinHeySiriEnabled:");
}

id objc_msgSend_setIsRemotePlaybackDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRemotePlaybackDevice:");
}

id objc_msgSend_setIsReplyWithoutConfirmationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsReplyWithoutConfirmationEnabled:");
}

id objc_msgSend_setIsServerUserDataSyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsServerUserDataSyncEnabled:");
}

id objc_msgSend_setIsShowAppsBehindSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsShowAppsBehindSiriEnabled:");
}

id objc_msgSend_setIsShowAppsBehindSiriEnabledOnCarPlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsShowAppsBehindSiriEnabledOnCarPlay:");
}

id objc_msgSend_setIsSiriCapableDigitalCarKeyAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSiriCapableDigitalCarKeyAvailable:");
}

id objc_msgSend_setIsSiriCloudSyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSiriCloudSyncEnabled:");
}

id objc_msgSend_setIsSiriFullUODSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSiriFullUODSupported:");
}

id objc_msgSend_setIsSiriTryItCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSiriTryItCompleted:");
}

id objc_msgSend_setIsSiriXRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSiriXRequest:");
}

id objc_msgSend_setIsSmsEligible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSmsEligible:");
}

id objc_msgSend_setIsSpeaker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSpeaker:");
}

id objc_msgSend_setIsSpokenNotificationsControlCenterModuleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSpokenNotificationsControlCenterModuleEnabled:");
}

id objc_msgSend_setIsStoreDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsStoreDemoMode:");
}

id objc_msgSend_setIsSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSupported:");
}

id objc_msgSend_setIsSupportedAndEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSupportedAndEnabled:");
}

id objc_msgSend_setIsSyncDisabledForFullUoDDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSyncDisabledForFullUoDDevices:");
}

id objc_msgSend_setIsSystemApertureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSystemApertureEnabled:");
}

id objc_msgSend_setIsTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTest:");
}

id objc_msgSend_setIsTextToSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTextToSpeechEnabled:");
}

id objc_msgSend_setIsTimeSensitiveAnnouncement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTimeSensitiveAnnouncement:");
}

id objc_msgSend_setIsTriggerlessFollowup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTriggerlessFollowup:");
}

id objc_msgSend_setIsTypeToSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTypeToSiriEnabled:");
}

id objc_msgSend_setIsUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUserInitiated:");
}

id objc_msgSend_setIsUserRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUserRequest:");
}

id objc_msgSend_setIsUsingDefaultLanguageSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUsingDefaultLanguageSettings:");
}

id objc_msgSend_setIsVerifying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVerifying:");
}

id objc_msgSend_setIsVoiceOverEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVoiceOverEnabled:");
}

id objc_msgSend_setIsVoiceTriggerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVoiceTriggerEnabled:");
}

id objc_msgSend_setIsWifiEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsWifiEnabled:");
}

id objc_msgSend_setItemURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemURL:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setItemsByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemsByID:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyValueRecordsAndVoiceProfile_records_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyValueRecordsAndVoiceProfile:records:completion:");
}

id objc_msgSend_setKeyValueServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyValueServerChangeToken:");
}

id objc_msgSend_setKeyboardIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardIdentifier:");
}

id objc_msgSend_setKeyboardReturnKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardReturnKey:");
}

id objc_msgSend_setKeyboardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardType:");
}

id objc_msgSend_setKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeys:");
}

id objc_msgSend_setKeywordThresholdHS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeywordThresholdHS:");
}

id objc_msgSend_setKeywordThresholdJS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeywordThresholdJS:");
}

id objc_msgSend_setKnownURLLoadDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKnownURLLoadDuration:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguage:");
}

id objc_msgSend_setLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageCode:");
}

id objc_msgSend_setLanguageCode_outputVoice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageCode:outputVoice:withCompletion:");
}

id objc_msgSend_setLanguageCode_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageCode:withCompletion:");
}

id objc_msgSend_setLanguageCodeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setLanguageCodeIfNeeded];
}

id objc_msgSend_setLanguageDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageDetected:");
}

id objc_msgSend_setLanguageDetectionUserContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageDetectionUserContext:");
}

id objc_msgSend_setLanguageString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageString:");
}

id objc_msgSend_setLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguages:");
}

id objc_msgSend_setLastAssistantDataAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastAssistantDataAnchor:");
}

id objc_msgSend_setLastCompanionRemoteDataFetchDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastCompanionRemoteDataFetchDate:");
}

id objc_msgSend_setLastDeviceExperimentCheckDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDeviceExperimentCheckDate:");
}

id objc_msgSend_setLastKnownAceHostOfCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownAceHostOfCompanion:");
}

id objc_msgSend_setLastKnownAnalyticsStoreState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownAnalyticsStoreState:");
}

id objc_msgSend_setLastKnownProxyStreamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownProxyStreamId:");
}

id objc_msgSend_setLastKnownStreamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownStreamId:");
}

id objc_msgSend_setLastLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastLocation:");
}

id objc_msgSend_setLastMetricsUploadDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastMetricsUploadDate:");
}

id objc_msgSend_setLastMetricsUploadFailureReportedOnDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastMetricsUploadFailureReportedOnDate:");
}

id objc_msgSend_setLastModifiedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastModifiedDate:");
}

id objc_msgSend_setLastName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastName:");
}

id objc_msgSend_setLastNamePhonetic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastNamePhonetic:");
}

id objc_msgSend_setLastReceivedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastReceivedCommand:");
}

id objc_msgSend_setLastResponseId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastResponseId:");
}

id objc_msgSend_setLastServerExperimentCheckDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastServerExperimentCheckDate:");
}

id objc_msgSend_setLastShiftedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastShiftedLocation:");
}

id objc_msgSend_setLastSyncDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSyncDate:");
}

id objc_msgSend_setLastSyncVerificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSyncVerificationDate:");
}

id objc_msgSend_setLastUpdateAttemptTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUpdateAttemptTime:");
}

id objc_msgSend_setLastUpdatedAtInMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUpdatedAtInMs:");
}

id objc_msgSend_setLastVisitedAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastVisitedAceHost:");
}

id objc_msgSend_setLatency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatency:");
}

id objc_msgSend_setLatestMappedRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatestMappedRequestId:");
}

id objc_msgSend_setLatitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatitude:");
}

id objc_msgSend_setLaunchId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchId:");
}

id objc_msgSend_setLegacyDirectActionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyDirectActionIdentifier:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLimit:");
}

id objc_msgSend_setLinkId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkId:");
}

id objc_msgSend_setLinkPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkPreferences:");
}

id objc_msgSend_setLinkedAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkedAssistantId:");
}

id objc_msgSend_setLinkedSpeechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkedSpeechId:");
}

id objc_msgSend_setListenFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListenFor:");
}

id objc_msgSend_setListeningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningMode:");
}

id objc_msgSend_setListeningToItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningToItem:");
}

id objc_msgSend_setListeningToMusicApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningToMusicApplication:");
}

id objc_msgSend_setLocalActiveAssertionContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalActiveAssertionContexts:");
}

id objc_msgSend_setLocalCryptoKeyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalCryptoKeyData:");
}

id objc_msgSend_setLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDevice:");
}

id objc_msgSend_setLocalDeviceAsContextCollectorWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceAsContextCollectorWithCompletion:");
}

id objc_msgSend_setLocalDeviceAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceAssistantIdentifier:");
}

id objc_msgSend_setLocalDeviceUpdatedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceUpdatedHandler:");
}

id objc_msgSend_setLocalFetchContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalFetchContext:");
}

id objc_msgSend_setLocalPendingAssertionContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalPendingAssertionContexts:");
}

id objc_msgSend_setLocalSearchGetNavigationStatusCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSearchGetNavigationStatusCompleted:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocaleIdentifier:");
}

id objc_msgSend_setLocalizedBundleDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedBundleDisplayName:");
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedDateFormatFromTemplate:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocationAccessPermission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationAccessPermission:");
}

id objc_msgSend_setLocationSentToServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationSentToServer:");
}

id objc_msgSend_setLockState_showingLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockState:showingLockScreen:");
}

id objc_msgSend_setLogEventIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLogEventIdentifier:");
}

id objc_msgSend_setLoggableAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableAssistantId:");
}

id objc_msgSend_setLoggableCompanionAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableCompanionAssistantId:");
}

id objc_msgSend_setLoggableMultiUserSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableMultiUserSharedUserId:");
}

id objc_msgSend_setLoggableSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggableSharedUserId:");
}

id objc_msgSend_setLoggingAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingAssistantId:");
}

id objc_msgSend_setLoggingAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingAssistantIdentifier:");
}

id objc_msgSend_setLoggingSharedId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingSharedId:");
}

id objc_msgSend_setLoggingSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingSharedUserId:");
}

id objc_msgSend_setLoggingSharedUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingSharedUserIdentifier:");
}

id objc_msgSend_setLoggingUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoggingUniqueIdentifier:");
}

id objc_msgSend_setLongitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongitude:");
}

id objc_msgSend_setMacBookCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacBookCount:");
}

id objc_msgSend_setMacOSAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacOSAssistant:");
}

id objc_msgSend_setMacStudioCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacStudioCount:");
}

id objc_msgSend_setManagedStorageDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedStorageDomains:");
}

id objc_msgSend_setManagedStoreObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedStoreObject:forKey:");
}

id objc_msgSend_setManualEndpointingThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualEndpointingThreshold:");
}

id objc_msgSend_setManufacturer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManufacturer:");
}

id objc_msgSend_setMarkAsParticipantNeedsNewInvitationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMarkAsParticipantNeedsNewInvitationToken:");
}

id objc_msgSend_setMasteredVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasteredVersion:");
}

id objc_msgSend_setMatches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMatches:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeCard:");
}

id objc_msgSend_setMeCards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeCards:");
}

id objc_msgSend_setMeDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeDeviceChangedHandler:");
}

id objc_msgSend_setMeanPing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeanPing:");
}

id objc_msgSend_setMediaContentRatingRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaContentRatingRestrictions:");
}

id objc_msgSend_setMediaPlaybackVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaPlaybackVolume:");
}

id objc_msgSend_setMediaPlayerContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaPlayerContext:");
}

id objc_msgSend_setMediaPlayerExplicitContentDisallowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaPlayerExplicitContentDisallowed:");
}

id objc_msgSend_setMediaRouteIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaRouteIdentifier:");
}

id objc_msgSend_setMediaState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaState:");
}

id objc_msgSend_setMediaSystemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaSystemIdentifier:");
}

id objc_msgSend_setMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaType:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMessageBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageBody:");
}

id objc_msgSend_setMessageHandler_forMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:forMessageType:");
}

id objc_msgSend_setMessageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageIdentifier:");
}

id objc_msgSend_setMetaValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetaValue:");
}

id objc_msgSend_setMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetric:");
}

id objc_msgSend_setMetricsContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricsContext:");
}

id objc_msgSend_setMetricsCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricsCount:");
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleName:");
}

id objc_msgSend_setMinute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinute:");
}

id objc_msgSend_setMinuteOfHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinuteOfHour:");
}

id objc_msgSend_setMirroredMultiUserSharedDataNeedsSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMirroredMultiUserSharedDataNeedsSync:");
}

id objc_msgSend_setMitigationScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMitigationScore:");
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModel:");
}

id objc_msgSend_setModelNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelNumber:");
}

id objc_msgSend_setModesConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModesConfiguration:");
}

id objc_msgSend_setModifyRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordZonesCompletionBlock:");
}

id objc_msgSend_setModifyRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordsCompletionBlock:");
}

id objc_msgSend_setModifySubscriptionsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifySubscriptionsCompletionBlock:");
}

id objc_msgSend_setMostRecentIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMostRecentIntent:");
}

id objc_msgSend_setMotionActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMotionActivity:");
}

id objc_msgSend_setMotionConfidence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMotionConfidence:");
}

id objc_msgSend_setMovieRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMovieRestriction:");
}

id objc_msgSend_setMptcp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMptcp:");
}

id objc_msgSend_setMultiUserHomeUUIDsForDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserHomeUUIDsForDeletion:");
}

id objc_msgSend_setMultiUserIsOnboardingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserIsOnboardingDevice:");
}

id objc_msgSend_setMultiUserPitchComposition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserPitchComposition:");
}

id objc_msgSend_setMultiUserPrimaryUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserPrimaryUser:");
}

id objc_msgSend_setMultiUserSetUpCompleteTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSetUpCompleteTimes:");
}

id objc_msgSend_setMultiUserSetUpStartTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSetUpStartTimes:");
}

id objc_msgSend_setMultiUserSetupStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSetupStatus:");
}

id objc_msgSend_setMultiUserSharedDataNeedsSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSharedDataNeedsSync:");
}

id objc_msgSend_setMultiUserSharedDataServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSharedDataServerChangeToken:");
}

id objc_msgSend_setMultiUserSharedDataServerChangeToken_forOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSharedDataServerChangeToken:forOwnerName:");
}

id objc_msgSend_setMultiUserSharedUsers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSharedUsers:");
}

id objc_msgSend_setMultiUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserState:");
}

id objc_msgSend_setMultiUserSyncerBackupIdentifiersAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSyncerBackupIdentifiersAnchor:");
}

id objc_msgSend_setMultiUserSyncerIdentifiersAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSyncerIdentifiersAnchor:");
}

id objc_msgSend_setMultiUserSyncerSADAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserSyncerSADAnchor:");
}

id objc_msgSend_setMultiUserVoiceIdentification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiUserVoiceIdentification:");
}

id objc_msgSend_setMultilingualDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultilingualDisabled:");
}

id objc_msgSend_setMultilingualTimeoutInMillis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultilingualTimeoutInMillis:");
}

id objc_msgSend_setMusicPersonalizationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMusicPersonalizationToken:");
}

id objc_msgSend_setMusicPersonalizationTokenStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMusicPersonalizationTokenStatus:");
}

id objc_msgSend_setMyriadAdvertisementContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadAdvertisementContext:completion:");
}

id objc_msgSend_setMyriadDeviceAdjust_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadDeviceAdjust:");
}

id objc_msgSend_setMyriadDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadDeviceClass:");
}

id objc_msgSend_setMyriadDeviceDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadDeviceDelay:");
}

id objc_msgSend_setMyriadDeviceTrumpDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadDeviceTrumpDelay:");
}

id objc_msgSend_setMyriadDeviceVTEndTimeDistanceThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadDeviceVTEndTimeDistanceThreshold:");
}

id objc_msgSend_setMyriadServerHasProvisioned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadServerHasProvisioned:");
}

id objc_msgSend_setMyriadTrialTreatment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMyriadTrialTreatment:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNamePrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamePrefix:");
}

id objc_msgSend_setNameSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameSuffix:");
}

id objc_msgSend_setNavStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavStatus:");
}

id objc_msgSend_setNearbyDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNearbyDevices:");
}

id objc_msgSend_setNearbyPersonalDevicesReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNearbyPersonalDevicesReported:");
}

id objc_msgSend_setNeedsCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsCreation:");
}

id objc_msgSend_setNeedsDestruction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDestruction:");
}

id objc_msgSend_setNeedsToRetryNakedObjects(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsToRetryNakedObjects];
}

id objc_msgSend_setNeedsToSendLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsToSendLocation:");
}

id objc_msgSend_setNeedsUserInteractivePriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUserInteractivePriority:");
}

id objc_msgSend_setNetId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetId:");
}

id objc_msgSend_setNetIdAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetIdAvailable:");
}

id objc_msgSend_setNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetwork:");
}

id objc_msgSend_setNetworkInterfaces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkInterfaces:");
}

id objc_msgSend_setNewOptInStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNewOptInStatus:");
}

id objc_msgSend_setNickName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNickName:");
}

id objc_msgSend_setNickname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNickname:");
}

id objc_msgSend_setNoL2Cap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNoL2Cap:");
}

id objc_msgSend_setNonCloudSyncedUserAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonCloudSyncedUserAttribute:");
}

id objc_msgSend_setNonspeakerConfidenceScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonspeakerConfidenceScores:");
}

id objc_msgSend_setNotification_fromSourceApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotification:fromSourceApp:");
}

id objc_msgSend_setNotificationCategories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationCategories:");
}

id objc_msgSend_setNotificationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationId:");
}

id objc_msgSend_setNotificationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationInfo:");
}

id objc_msgSend_setNotificationMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationMetadata:");
}

id objc_msgSend_setNotificationPreviewRestrictedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationPreviewRestrictedApps:");
}

id objc_msgSend_setNotificationReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationReceived:");
}

id objc_msgSend_setNotificationReceivedTier1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationReceivedTier1:");
}

id objc_msgSend_setNotificationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationRequest:");
}

id objc_msgSend_setNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifications:");
}

id objc_msgSend_setNotifyState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifyState:");
}

id objc_msgSend_setNumDeviceContextsFetched_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumDeviceContextsFetched:");
}

id objc_msgSend_setNumGuestsAccepted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumGuestsAccepted:");
}

id objc_msgSend_setNumParticipantsWithTrust_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumParticipantsWithTrust:");
}

id objc_msgSend_setNumSelfTriggersDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumSelfTriggersDetected:");
}

id objc_msgSend_setNumSelfTriggersDetectedInSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumSelfTriggersDetectedInSession:");
}

id objc_msgSend_setNumUsersWhoSyncedRecognizeMyVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWhoSyncedRecognizeMyVoice:");
}

id objc_msgSend_setNumUsersWithLocationServicesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWithLocationServicesEnabled:");
}

id objc_msgSend_setNumUsersWithMatchingSiriLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWithMatchingSiriLanguage:");
}

id objc_msgSend_setNumUsersWithPersonalRequestsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWithPersonalRequestsEnabled:");
}

id objc_msgSend_setNumUsersWithRecognizeMyVoiceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWithRecognizeMyVoiceEnabled:");
}

id objc_msgSend_setNumUsersWithSiriCloudSyncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumUsersWithSiriCloudSyncEnabled:");
}

id objc_msgSend_setNumVoiceProfilesAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumVoiceProfilesAvailable:");
}

id objc_msgSend_setNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumber:");
}

id objc_msgSend_setNumberOfLoops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLoops:");
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObject_forPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forPeerInfo:");
}

id objc_msgSend_setObjectIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObjectIdentifiers:");
}

id objc_msgSend_setObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObjects:");
}

id objc_msgSend_setObservationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservationDate:");
}

id objc_msgSend_setObserverConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserverConnection:");
}

id objc_msgSend_setOfflineDictationProfileOverridePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfflineDictationProfileOverridePath:");
}

id objc_msgSend_setOfflineDictationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfflineDictationStatus:");
}

id objc_msgSend_setOfflineIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOfflineIdentifier:");
}

id objc_msgSend_setOldId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldId:");
}

id objc_msgSend_setOnDeviceDigest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnDeviceDigest:");
}

id objc_msgSend_setOnDeviceUtterancesPresent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnDeviceUtterancesPresent:");
}

id objc_msgSend_setOnSpeaker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnSpeaker:");
}

id objc_msgSend_setOpenInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpenInterval:");
}

id objc_msgSend_setOpportuneSpeakListeningType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpportuneSpeakListeningType:");
}

id objc_msgSend_setOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptIn:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOrUpdateUsefulnessScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrUpdateUsefulnessScore:");
}

id objc_msgSend_setOrchDeviceDynamicContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrchDeviceDynamicContext:");
}

id objc_msgSend_setOrchestratorRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrchestratorRequestId:");
}

id objc_msgSend_setOrderedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrderedContext:");
}

id objc_msgSend_setOrganizationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrganizationName:");
}

id objc_msgSend_setOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrigin:");
}

id objc_msgSend_setOriginPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginPeerInfo:");
}

id objc_msgSend_setOriginalAsrId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalAsrId:");
}

id objc_msgSend_setOriginalCommandId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalCommandId:");
}

id objc_msgSend_setOriginalRank_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalRank:");
}

id objc_msgSend_setOriginalScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalScore:");
}

id objc_msgSend_setOrthography_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrthography:");
}

id objc_msgSend_setOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputVoice:");
}

id objc_msgSend_setOutstandingCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutstandingCount:");
}

id objc_msgSend_setOutstandingResponses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutstandingResponses:");
}

id objc_msgSend_setOverriddenApplicationContext_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverriddenApplicationContext:withContext:");
}

id objc_msgSend_setPacketCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPacketCount:");
}

id objc_msgSend_setPacketNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPacketNumber:");
}

id objc_msgSend_setPackets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPackets:");
}

id objc_msgSend_setPairedWatches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedWatches:");
}

id objc_msgSend_setParentalRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentalRestrictions:");
}

id objc_msgSend_setParticipantVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantVisibility:");
}

id objc_msgSend_setParticipation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipation:");
}

id objc_msgSend_setPayloadBeginAudioSessionRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadBeginAudioSessionRequest:");
}

id objc_msgSend_setPayloadBeginAudioSessionResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadBeginAudioSessionResponse:");
}

id objc_msgSend_setPayloadEndAudioSessionRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadEndAudioSessionRequest:");
}

id objc_msgSend_setPayloadEndAudioSessionResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadEndAudioSessionResponse:");
}

id objc_msgSend_setPayloadKeepAudioSessionAliveRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadKeepAudioSessionAliveRequest:");
}

id objc_msgSend_setPayloadKeepAudioSessionAliveResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadKeepAudioSessionAliveResponse:");
}

id objc_msgSend_setPayloadSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadSize:");
}

id objc_msgSend_setPayloadVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadVersion:");
}

id objc_msgSend_setPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeer:");
}

id objc_msgSend_setPeerAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerAssistantIdentifier:");
}

id objc_msgSend_setPeerHostname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerHostname:");
}

id objc_msgSend_setPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerInfo:");
}

id objc_msgSend_setPeerLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerLanguageCode:");
}

id objc_msgSend_setPeerLoggingAssistantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerLoggingAssistantIdentifier:");
}

id objc_msgSend_setPeerProviderClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerProviderClass:");
}

id objc_msgSend_setPeerSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerSiriEnabled:");
}

id objc_msgSend_setPeerSpeechIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerSpeechIdentifier:");
}

id objc_msgSend_setPeerStreamConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerStreamConnection:");
}

id objc_msgSend_setPeerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerType:");
}

id objc_msgSend_setPeerUserAgentString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerUserAgentString:");
}

id objc_msgSend_setPeerVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerVersion:");
}

id objc_msgSend_setPerShareCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerShareCompletionBlock:");
}

id objc_msgSend_setPerShareMetadataBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerShareMetadataBlock:");
}

id objc_msgSend_setPerformInternalVerification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformInternalVerification:");
}

id objc_msgSend_setPermanentOffsetFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermanentOffsetFactor:");
}

id objc_msgSend_setPermanentVolumeOffsetWithDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermanentVolumeOffsetWithDirection:");
}

id objc_msgSend_setPermission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermission:");
}

id objc_msgSend_setPersonaId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonaId:");
}

id objc_msgSend_setPersonaIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonaIdentifier:");
}

id objc_msgSend_setPersonalData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalData:");
}

id objc_msgSend_setPersonalDomainsAuthenticationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDomainsAuthenticationMode:");
}

id objc_msgSend_setPersonalDomainsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDomainsEnabled:");
}

id objc_msgSend_setPersonalDomainsIsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDomainsIsEnabled:");
}

id objc_msgSend_setPersonalDomainsSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDomainsSetup:");
}

id objc_msgSend_setPersonalRequestsEnabledAccessories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalRequestsEnabledAccessories:");
}

id objc_msgSend_setPersonalization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalization:");
}

id objc_msgSend_setPhoneCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneCallState:");
}

id objc_msgSend_setPhoneHangUpCallType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneHangUpCallType:");
}

id objc_msgSend_setPhonemeSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhonemeSuggestions:");
}

id objc_msgSend_setPhones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhones:");
}

id objc_msgSend_setPhoneticFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneticFamilyName:");
}

id objc_msgSend_setPhoneticGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneticGivenName:");
}

id objc_msgSend_setPhoneticMiddleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneticMiddleName:");
}

id objc_msgSend_setPhsAssetManifest_onSharedZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhsAssetManifest:onSharedZone:");
}

id objc_msgSend_setPingCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPingCount:");
}

id objc_msgSend_setPingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPingInfo:");
}

id objc_msgSend_setPingMean_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPingMean:");
}

id objc_msgSend_setPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlatform:");
}

id objc_msgSend_setPlaybackDeviceList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackDeviceList:");
}

id objc_msgSend_setPolicyId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPolicyId:");
}

id objc_msgSend_setPost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPost:");
}

id objc_msgSend_setPostGen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostGen:");
}

id objc_msgSend_setPostfixText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostfixText:");
}

id objc_msgSend_setPowerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerState:");
}

id objc_msgSend_setPre_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPre:");
}

id objc_msgSend_setPreGen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreGen:");
}

id objc_msgSend_setPreTriggerToDuckingEndDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreTriggerToDuckingEndDuration:");
}

id objc_msgSend_setPreciseLocationEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreciseLocationEnabled:");
}

id objc_msgSend_setPredefinedServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredefinedServer:");
}

id objc_msgSend_setPreferredLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLanguage:");
}

id objc_msgSend_setPreferredLanguages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredLanguages:");
}

id objc_msgSend_setPreferredMediaUserHomeUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMediaUserHomeUserID:");
}

id objc_msgSend_setPreferredMediaUserSharedUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMediaUserSharedUserID:");
}

id objc_msgSend_setPreferredMessagingOptionsForCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMessagingOptionsForCommands:");
}

id objc_msgSend_setPrefersWWAN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersWWAN:");
}

id objc_msgSend_setPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefix:");
}

id objc_msgSend_setPrefixText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefixText:");
}

id objc_msgSend_setPreheatLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreheatLanguage:");
}

id objc_msgSend_setPreheatTestModelPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreheatTestModelPath:");
}

id objc_msgSend_setPresentedUIResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedUIResponse:");
}

id objc_msgSend_setPreviewRestricted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewRestricted:");
}

id objc_msgSend_setPreviewRestrictedApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewRestrictedApps:");
}

id objc_msgSend_setPreviousLangaugeCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousLangaugeCode:");
}

id objc_msgSend_setPreviousLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousLanguageCode:");
}

id objc_msgSend_setPreviousOptInStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousOptInStatus:");
}

id objc_msgSend_setPreviousOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousOutputVoice:");
}

id objc_msgSend_setPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousServerChangeToken:");
}

id objc_msgSend_setPreviousUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousUtterance:");
}

id objc_msgSend_setPreviousValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousValue:");
}

id objc_msgSend_setPrimaryDictationLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryDictationLanguage:");
}

id objc_msgSend_setPrimaryEarbudSide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryEarbudSide:");
}

id objc_msgSend_setPrimaryInEarStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryInEarStatus:");
}

id objc_msgSend_setPrimarySubflowIface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimarySubflowIface:");
}

id objc_msgSend_setPrimarySubflowInterfaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimarySubflowInterfaceName:");
}

id objc_msgSend_setPrimarySubflowSwitchCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimarySubflowSwitchCount:");
}

id objc_msgSend_setPrimeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimeToken:");
}

id objc_msgSend_setPrimeToken_forAceHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimeToken:forAceHost:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivacyClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivacyClass:");
}

id objc_msgSend_setProblemDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProblemDescription:");
}

id objc_msgSend_setProcessedAudioDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessedAudioDuration:");
}

id objc_msgSend_setProcessedAudioDurationMilliseconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessedAudioDurationMilliseconds:");
}

id objc_msgSend_setProcessedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessedCount:");
}

id objc_msgSend_setProductID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductID:");
}

id objc_msgSend_setProductId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductId:");
}

id objc_msgSend_setProductIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductIdentifier:");
}

id objc_msgSend_setProductPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductPrefix:");
}

id objc_msgSend_setProductType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductType:");
}

id objc_msgSend_setProductTypePrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductTypePrefix:");
}

id objc_msgSend_setProductTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductTypes:");
}

id objc_msgSend_setProductVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductVersion:");
}

id objc_msgSend_setPromiseTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPromiseTypes:");
}

id objc_msgSend_setPropagationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropagationEvent:");
}

id objc_msgSend_setPropagationEventReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropagationEventReason:");
}

id objc_msgSend_setProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperties:");
}

id objc_msgSend_setPropertiesWithCLLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesWithCLLocation:");
}

id objc_msgSend_setProto_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProto:");
}

id objc_msgSend_setProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProvider:");
}

id objc_msgSend_setProviderConnectionPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderConnectionPolicy:");
}

id objc_msgSend_setProxCardSeen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxCardSeen:");
}

id objc_msgSend_setProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProximity:");
}

id objc_msgSend_setProximityHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProximityHint:");
}

id objc_msgSend_setQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuality:");
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQualityOfService:");
}

id objc_msgSend_setQueryParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryParameters:");
}

id objc_msgSend_setQueueState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueueState:");
}

id objc_msgSend_setQueuedAtTimestampHourInMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuedAtTimestampHourInMs:");
}

id objc_msgSend_setQueuedLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuedLanguageCode:");
}

id objc_msgSend_setQueuedLanguageCode_andQueuedOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuedLanguageCode:andQueuedOutputVoice:");
}

id objc_msgSend_setQueuedOutputVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuedOutputVoice:");
}

id objc_msgSend_setRaiseToSpeakEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRaiseToSpeakEnabled:");
}

id objc_msgSend_setRapportEffectiveIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRapportEffectiveIdentifier:");
}

id objc_msgSend_setRateLimitTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRateLimitTimer:");
}

id objc_msgSend_setRawRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawRecognition:");
}

id objc_msgSend_setRawScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawScores:");
}

id objc_msgSend_setRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRead:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReasons:");
}

id objc_msgSend_setReceivingAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivingAddresses:");
}

id objc_msgSend_setRecencyDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecencyDate:");
}

id objc_msgSend_setRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognition:");
}

id objc_msgSend_setRecognizeMyVoiceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizeMyVoiceEnabled:");
}

id objc_msgSend_setRecognizerScoreHS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizerScoreHS:");
}

id objc_msgSend_setRecognizerScoreJS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognizerScoreJS:");
}

id objc_msgSend_setRecordChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordChangedBlock:");
}

id objc_msgSend_setRecordDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordDeviceIdentifier:");
}

id objc_msgSend_setRecordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordType:");
}

id objc_msgSend_setRecordWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordWithIDWasDeletedBlock:");
}

id objc_msgSend_setRecordZoneChangeTokensUpdatedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneChangeTokensUpdatedBlock:");
}

id objc_msgSend_setRecordZoneFetchCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneFetchCompletionBlock:");
}

id objc_msgSend_setRecordZoneWithIDChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDChangedBlock:");
}

id objc_msgSend_setRecordZoneWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDWasDeletedBlock:");
}

id objc_msgSend_setRecordingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordingInfo:");
}

id objc_msgSend_setRedirect_forServerURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRedirect:forServerURLString:");
}

id objc_msgSend_setRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRefId:");
}

id objc_msgSend_setRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegion:");
}

id objc_msgSend_setRegionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegionInfo:");
}

id objc_msgSend_setRejectGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRejectGesture:");
}

id objc_msgSend_setRemoteActiveAssertionContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteActiveAssertionContexts:");
}

id objc_msgSend_setRemoteDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDevice:");
}

id objc_msgSend_setRemoteDeviceHasNoAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDeviceHasNoAssistantId:");
}

id objc_msgSend_setRemoteDeviceNotSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDeviceNotSetup:");
}

id objc_msgSend_setRemoteDeviceUnreachable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDeviceUnreachable:");
}

id objc_msgSend_setRemoteDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDevices:");
}

id objc_msgSend_setRemoteDisqualifiedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDisqualifiedDevices:");
}

id objc_msgSend_setRemoteMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteMetrics:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemotePendingAssertionContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotePendingAssertionContexts:");
}

id objc_msgSend_setRemotePlaybackDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotePlaybackDevices:");
}

id objc_msgSend_setRemoteQualifiedInRangeDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteQualifiedInRangeDevices:");
}

id objc_msgSend_setRemoteQualifiedOutOfRangeDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteQualifiedOutOfRangeDevices:");
}

id objc_msgSend_setRemoteRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteRequestInfo:");
}

id objc_msgSend_setRemoteRequestObserver_withHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteRequestObserver:withHandle:");
}

id objc_msgSend_setRepetitionSimilarityScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepetitionSimilarityScore:");
}

id objc_msgSend_setReplyWithoutConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReplyWithoutConfirmation:");
}

id objc_msgSend_setRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 setRepresentation];
}

id objc_msgSend_setReproducibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReproducibility:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestCompletionOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestCompletionOptions:");
}

id objc_msgSend_setRequestCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestCount:");
}

id objc_msgSend_setRequestFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestFlags:");
}

id objc_msgSend_setRequestHandler_forRequestID_messageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestHandler:forRequestID:messageType:");
}

id objc_msgSend_setRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestId:");
}

id objc_msgSend_setRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestInfo:");
}

id objc_msgSend_setRequestSupportsBargeIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestSupportsBargeIn:");
}

id objc_msgSend_setRequestTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestTimer:");
}

id objc_msgSend_setRequestWasInterrupted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestWasInterrupted:");
}

id objc_msgSend_setRequiresBootMaintenance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresBootMaintenance:");
}

id objc_msgSend_setRequiresOpportuneTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresOpportuneTime:");
}

id objc_msgSend_setRequiresUserInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresUserInteraction:");
}

id objc_msgSend_setResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResourceValue:forKey:error:");
}

id objc_msgSend_setResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponse:");
}

id objc_msgSend_setResponseFromRemote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseFromRemote:");
}

id objc_msgSend_setResponseMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseMode:");
}

id objc_msgSend_setResponseType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseType:");
}

id objc_msgSend_setResponses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponses:");
}

id objc_msgSend_setRestrictions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestrictions:");
}

id objc_msgSend_setRestrictionsToAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestrictionsToAdd:");
}

id objc_msgSend_setResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResult:");
}

id objc_msgSend_setResultId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultId:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResults:");
}

id objc_msgSend_setRetransmitConnectionDropTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetransmitConnectionDropTime:");
}

id objc_msgSend_setRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryCount:");
}

id objc_msgSend_setRetryState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetryState:");
}

id objc_msgSend_setRingerSwitchOff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRingerSwitchOff:");
}

id objc_msgSend_setRoomName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoomName:");
}

id objc_msgSend_setRouteId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteId:");
}

id objc_msgSend_setRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutes:");
}

id objc_msgSend_setRpiEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRpiEnabled:");
}

id objc_msgSend_setRssId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRssId:");
}

id objc_msgSend_setRttBest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRttBest:");
}

id objc_msgSend_setRttCurrent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRttCurrent:");
}

id objc_msgSend_setRttSmoothed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRttSmoothed:");
}

id objc_msgSend_setRttVariance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRttVariance:");
}

id objc_msgSend_setRunCamFtm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRunCamFtm:");
}

id objc_msgSend_setRxBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRxBytes:");
}

id objc_msgSend_setRxDuplicateBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRxDuplicateBytes:");
}

id objc_msgSend_setRxOooBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRxOooBytes:");
}

id objc_msgSend_setRxPackets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRxPackets:");
}

id objc_msgSend_setSaeAssetsForCurrentLocaleAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSaeAssetsForCurrentLocaleAvailable:");
}

id objc_msgSend_setSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSalt:");
}

id objc_msgSend_setSampleRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampleRate:");
}

id objc_msgSend_setSampledAudioFileDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampledAudioFileDeleted:");
}

id objc_msgSend_setSampledAudioFileDeletionFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampledAudioFileDeletionFailed:");
}

id objc_msgSend_setSampledAudioFileEnqueueFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampledAudioFileEnqueueFailed:");
}

id objc_msgSend_setSampledAudioFileEnqueued_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampledAudioFileEnqueued:");
}

id objc_msgSend_setSamplingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSamplingInfo:");
}

id objc_msgSend_setSavePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavePolicy:");
}

id objc_msgSend_setScheduledActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheduledActivity:");
}

id objc_msgSend_setSchemaCategoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSchemaCategoryType:");
}

id objc_msgSend_setSchemaVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSchemaVersion:");
}

id objc_msgSend_setScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScores:");
}

id objc_msgSend_setScoringSchemeVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScoringSchemeVersion:");
}

id objc_msgSend_setSearchDataOptOutState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchDataOptOutState:");
}

id objc_msgSend_setSearchQueriesDataSharingStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchQueriesDataSharingStatus:");
}

id objc_msgSend_setSearchTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchTypes:");
}

id objc_msgSend_setSecondaryInEarStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondaryInEarStatus:");
}

id objc_msgSend_setSecondsSinceEphemeralIdCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondsSinceEphemeralIdCreation:");
}

id objc_msgSend_setSecondsSinceEpoch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecondsSinceEpoch:");
}

id objc_msgSend_setSecureOfflineOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureOfflineOnly:");
}

id objc_msgSend_setSecurePersonalDomainsRequireAuth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecurePersonalDomainsRequireAuth:");
}

id objc_msgSend_setSeenMessageIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeenMessageIDs:");
}

id objc_msgSend_setSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedText:");
}

id objc_msgSend_setSelecteds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelecteds:");
}

id objc_msgSend_setSelfTriggerSuppression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelfTriggerSuppression:");
}

id objc_msgSend_setSendBufferBytesRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendBufferBytesRemaining:");
}

id objc_msgSend_setSendPings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendPings:");
}

id objc_msgSend_setSendWithoutConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendWithoutConfirmation:");
}

id objc_msgSend_setSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSender:");
}

id objc_msgSend_setSequence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSequence:");
}

id objc_msgSend_setSequenceNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSequenceNumber:");
}

id objc_msgSend_setSerializedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerializedCommand:");
}

id objc_msgSend_setSerializedContextSnapshot_withMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerializedContextSnapshot:withMetadata:");
}

id objc_msgSend_setServerAudioSessionActivationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerAudioSessionActivationDelay:");
}

id objc_msgSend_setServerAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold:");
}

id objc_msgSend_setServerCertificateData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerCertificateData:");
}

id objc_msgSend_setServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerChangeToken:");
}

id objc_msgSend_setServerEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerEnvironment:");
}

id objc_msgSend_setServerFallbackContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerFallbackContext:");
}

id objc_msgSend_setServerFeatureLatencyDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerFeatureLatencyDistribution:");
}

id objc_msgSend_setServerMediaPlaybackVolumeThresholdForAudioSessionActivationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerMediaPlaybackVolumeThresholdForAudioSessionActivationDelay:");
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setService:");
}

id objc_msgSend_setServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceType:");
}

id objc_msgSend_setSessionDurationInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionDurationInSeconds:");
}

id objc_msgSend_setSessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionId:");
}

id objc_msgSend_setSessionInfo_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionInfo:duration:");
}

id objc_msgSend_setSessionInfoRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionInfoRequest:");
}

id objc_msgSend_setSessionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionType:");
}

id objc_msgSend_setSessionValidationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionValidationData:");
}

id objc_msgSend_setSetRequestOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetRequestOrigin:");
}

id objc_msgSend_setSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetting:");
}

id objc_msgSend_setSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettings:");
}

id objc_msgSend_setShareCreationRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareCreationRetryCount:");
}

id objc_msgSend_setShareCreationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareCreationTimer:");
}

id objc_msgSend_setShareOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareOwnerName:");
}

id objc_msgSend_setShareOwnerName_homeMemberSettings_audioAppSignals_loggingAllowed_forSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareOwnerName:homeMemberSettings:audioAppSignals:loggingAllowed:forSharedUserId:");
}

id objc_msgSend_setSharedDataObserver_withHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedDataObserver:withHandle:");
}

id objc_msgSend_setSharedDataRequestObserver_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedDataRequestObserver:withHandler:");
}

id objc_msgSend_setSharedId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedId:");
}

id objc_msgSend_setSharedUserID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedUserID:");
}

id objc_msgSend_setSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedUserId:");
}

id objc_msgSend_setSharedUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedUserIdentifier:");
}

id objc_msgSend_setSharedUserIdentifier_loggingSharedUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedUserIdentifier:loggingSharedUserIdentifier:");
}

id objc_msgSend_setShouldBackgroundDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldBackgroundDefaultAction:");
}

id objc_msgSend_setShouldCensorSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldCensorSpeech:");
}

id objc_msgSend_setShouldClassifyIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldClassifyIntent:");
}

id objc_msgSend_setShouldDisableServerFallbackDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisableServerFallbackDomain:");
}

id objc_msgSend_setShouldDisableServerFallbackNL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisableServerFallbackNL:");
}

id objc_msgSend_setShouldExcludeFromBackgroundRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldExcludeFromBackgroundRefresh:");
}

id objc_msgSend_setShouldGenerateVoiceCommandCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldGenerateVoiceCommandCandidates:");
}

id objc_msgSend_setShouldIgnoreRingerSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreRingerSwitch:");
}

id objc_msgSend_setShouldRecognizeCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRecognizeCommands:");
}

id objc_msgSend_setShouldSendContentAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSendContentAvailable:");
}

id objc_msgSend_setShouldSkipTriggerlessReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSkipTriggerlessReply:");
}

id objc_msgSend_setShouldStopAddingSamples_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldStopAddingSamples:");
}

id objc_msgSend_setShouldSuppressDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSuppressDefaultAction:");
}

id objc_msgSend_setSingleUserCompanionACEHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingleUserCompanionACEHost:");
}

id objc_msgSend_setSingleUserMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingleUserMeCard:");
}

id objc_msgSend_setSiriAccountInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriAccountInformation:");
}

id objc_msgSend_setSiriConnectionUsesPeerManagedSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriConnectionUsesPeerManagedSync:");
}

id objc_msgSend_setSiriContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriContext:");
}

id objc_msgSend_setSiriDataSharingHomePodSetupDeviceIsValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriDataSharingHomePodSetupDeviceIsValid:");
}

id objc_msgSend_setSiriDataSharingOptInStatus_propagateToHomeAccessories_source_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:");
}

id objc_msgSend_setSiriDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriDeviceID:");
}

id objc_msgSend_setSiriDeviceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriDeviceId:");
}

id objc_msgSend_setSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriEnabled:");
}

id objc_msgSend_setSiriInCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriInCall:");
}

id objc_msgSend_setSiriInCallEnablementState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriInCallEnablementState:");
}

id objc_msgSend_setSiriInputLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriInputLocale:");
}

id objc_msgSend_setSiriLinkedSpeechID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriLinkedSpeechID:");
}

id objc_msgSend_setSiriOutputVolume_forAudioRoute_operationType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriOutputVolume:forAudioRoute:operationType:completion:");
}

id objc_msgSend_setSiriOutputVolume_forAudioRoute_withName_operationType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriOutputVolume:forAudioRoute:withName:operationType:completion:");
}

id objc_msgSend_setSiriPauseTimeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriPauseTimeState:");
}

id objc_msgSend_setSiriSaltURLLoadDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriSaltURLLoadDuration:");
}

id objc_msgSend_setSiriSpeechID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriSpeechID:");
}

id objc_msgSend_setSiriSpeechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriSpeechId:");
}

id objc_msgSend_setSiriSpeechRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriSpeechRate:");
}

id objc_msgSend_setSiriURLLoadDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriURLLoadDuration:");
}

id objc_msgSend_setSiriUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriUserId:");
}

id objc_msgSend_setSiriVoiceSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriVoiceSettings:");
}

id objc_msgSend_setSiriVoiceTriggerSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriVoiceTriggerSettings:");
}

id objc_msgSend_setSkipGeneratingSpeechPacket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipGeneratingSpeechPacket:");
}

id objc_msgSend_setSkipPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipPeer:");
}

id objc_msgSend_setSkipPeerError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipPeerError:");
}

id objc_msgSend_setSkipPeerErrorReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipPeerErrorReason:");
}

id objc_msgSend_setSleepAlarm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSleepAlarm:");
}

id objc_msgSend_setSmartSiriVolumeDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartSiriVolumeDirection:");
}

id objc_msgSend_setSmartSiriVolumePercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartSiriVolumePercentage:");
}

id objc_msgSend_setSmartSiriVolumeTTSType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartSiriVolumeTTSType:");
}

id objc_msgSend_setSnapshotTriggerReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotTriggerReason:");
}

id objc_msgSend_setSndBandwidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSndBandwidth:");
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSource:");
}

id objc_msgSend_setSourceAirplayId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceAirplayId:");
}

id objc_msgSend_setSourceDeviceOwnership_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceDeviceOwnership:");
}

id objc_msgSend_setSourceIDSFirstRoutableDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceIDSFirstRoutableDestination:");
}

id objc_msgSend_setSources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSources:");
}

id objc_msgSend_setSpeakable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakable:");
}

id objc_msgSend_setSpeechData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechData:");
}

id objc_msgSend_setSpeechDataUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechDataUrl:");
}

id objc_msgSend_setSpeechID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechID:");
}

id objc_msgSend_setSpeechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechId:");
}

id objc_msgSend_setSpeechIdString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechIdString:");
}

id objc_msgSend_setSpeechIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechIdentifier:");
}

id objc_msgSend_setSpeechInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechInfo:");
}

id objc_msgSend_setSpeechProfileExternalOfflineModelRootPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechProfileExternalOfflineModelRootPath:");
}

id objc_msgSend_setSpeechRecognizedContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRecognizedContext:");
}

id objc_msgSend_setSpeechRecordingEventListeningEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRecordingEventListeningEndpoint:");
}

id objc_msgSend_setSpeechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRequestOptions:");
}

id objc_msgSend_setSpeechRequestOptions_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRequestOptions:withCompletion:");
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeed:");
}

id objc_msgSend_setSpokenNotificationsControlCenterModuleEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpokenNotificationsControlCenterModuleEnabled:");
}

id objc_msgSend_setSpokenNotificationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpokenNotificationsEnabled:");
}

id objc_msgSend_setSpokenNotificationsWhitelistSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpokenNotificationsWhitelistSettings:");
}

id objc_msgSend_setSpokenNotificationsproxCardSeen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpokenNotificationsproxCardSeen:");
}

id objc_msgSend_setStaleInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStaleInterval:");
}

id objc_msgSend_setStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStart:");
}

id objc_msgSend_setStartLocalRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartLocalRequest:");
}

id objc_msgSend_setStartRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartRequest:");
}

id objc_msgSend_setStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartTime:");
}

id objc_msgSend_setStartedOrChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartedOrChanged:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateUpdateHandler:");
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatus:");
}

id objc_msgSend_setStatusValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusValue:");
}

id objc_msgSend_setStereoPartnerIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStereoPartnerIDSIdentifier:");
}

id objc_msgSend_setStoreFrontId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreFrontId:");
}

id objc_msgSend_setStoredHeadGestureConfigurationForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoredHeadGestureConfigurationForDevice:");
}

id objc_msgSend_setStorefront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorefront:");
}

id objc_msgSend_setStorefrontId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorefrontId:");
}

id objc_msgSend_setStreamUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStreamUID:");
}

id objc_msgSend_setStructuredDictationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStructuredDictationType:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setSubflowCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubflowCount:");
}

id objc_msgSend_setSubflowSwitchCounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubflowSwitchCounts:");
}

id objc_msgSend_setSubject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubject:");
}

id objc_msgSend_setSubscriptionList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubscriptionList:");
}

id objc_msgSend_setSubscriptionSetupTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubscriptionSetupTimer:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccess:");
}

id objc_msgSend_setSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuffix:");
}

id objc_msgSend_setSummary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSummary:");
}

id objc_msgSend_setSupportsAnnounceCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsAnnounceCall:");
}

id objc_msgSend_setSupportsConversationAwareness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsConversationAwareness:");
}

id objc_msgSend_setSupportsInEarDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsInEarDetection:");
}

id objc_msgSend_setSupportsJustSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsJustSiri:");
}

id objc_msgSend_setSupportsListeningModeANC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsListeningModeANC:");
}

id objc_msgSend_setSupportsListeningModeAutomatic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsListeningModeAutomatic:");
}

id objc_msgSend_setSupportsListeningModeTransparency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsListeningModeTransparency:");
}

id objc_msgSend_setSupportsPersonalVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsPersonalVolume:");
}

id objc_msgSend_setSupportsSpokenNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSpokenNotification:");
}

id objc_msgSend_setSupportsVoiceTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsVoiceTrigger:");
}

id objc_msgSend_setSuppressAudioInterruptionEndedNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressAudioInterruptionEndedNotifications:");
}

id objc_msgSend_setSuppressInterruptionEndedNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressInterruptionEndedNotifications:");
}

id objc_msgSend_setSuppressStartAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressStartAlert:");
}

id objc_msgSend_setSuppressStopAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressStopAlert:");
}

id objc_msgSend_setSymptomsBasedNetworkQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSymptomsBasedNetworkQuality:");
}

id objc_msgSend_setSynRetransmits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSynRetransmits:");
}

id objc_msgSend_setSyncAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncAnchor:");
}

id objc_msgSend_setSyncChunkHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncChunkHandler:");
}

id objc_msgSend_setSyncDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncDelegate:");
}

id objc_msgSend_setSyncMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncMetadata:");
}

id objc_msgSend_setSyncNeededFlagForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncNeededFlagForKeys:");
}

id objc_msgSend_setSyncReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncReason:");
}

id objc_msgSend_setSyncRetryTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncRetryTimer:");
}

id objc_msgSend_setSyncSharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncSharedUserId:");
}

id objc_msgSend_setSyncSlots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncSlots:");
}

id objc_msgSend_setSyncTokenFetchRequestReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncTokenFetchRequestReceived:");
}

id objc_msgSend_setSyncTokenFetchRequestTransferLatencyInMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncTokenFetchRequestTransferLatencyInMs:");
}

id objc_msgSend_setSyncVerificationNeededAndFullReportNeeded_shouldPostNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:");
}

id objc_msgSend_setSystemBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemBuild:");
}

id objc_msgSend_setSystemInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemInfo:");
}

id objc_msgSend_setSystemLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemLocale:");
}

id objc_msgSend_setTCPInfoMetricsByInterfaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTCPInfoMetricsByInterfaceName:");
}

id objc_msgSend_setTLSSessionTicketsFlushPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTLSSessionTicketsFlushPending:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetPID:");
}

id objc_msgSend_setTargetPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetPlatform:");
}

id objc_msgSend_setTdSpeakerRecognizerCombinedScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTdSpeakerRecognizerCombinedScore:");
}

id objc_msgSend_setTdSpeakerRecognizerCombinedThresholdHS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTdSpeakerRecognizerCombinedThresholdHS:");
}

id objc_msgSend_setTdSpeakerRecognizerCombinedThresholdJS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTdSpeakerRecognizerCombinedThresholdJS:");
}

id objc_msgSend_setTemperatureUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemperatureUnit:");
}

id objc_msgSend_setTemporaryAuthorizationGranted_forBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporaryAuthorizationGranted:forBundle:");
}

id objc_msgSend_setTemporaryFullAccuracyAuthorizationGranted_forBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporaryFullAccuracyAuthorizationGranted:forBundlePath:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextRequest:");
}

id objc_msgSend_setTextToSpeechEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextToSpeechEnabled:");
}

id objc_msgSend_setTextToSpeechIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextToSpeechIsMuted:");
}

id objc_msgSend_setTfoSynDataAcked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTfoSynDataAcked:");
}

id objc_msgSend_setThermalState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThermalState:");
}

id objc_msgSend_setThreadIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThreadIdentifier:");
}

id objc_msgSend_setThreadSummary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThreadSummary:");
}

id objc_msgSend_setThresholdType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThresholdType:");
}

id objc_msgSend_setTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeIntervalSince1970:");
}

id objc_msgSend_setTimeSinceAlarmFiredInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeSinceAlarmFiredInSeconds:");
}

id objc_msgSend_setTimeSinceLastMediaPlaybackInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeSinceLastMediaPlaybackInSeconds:");
}

id objc_msgSend_setTimeSinceTimerFiredInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeSinceTimerFiredInSeconds:");
}

id objc_msgSend_setTimeSinceVoiceTriggerHeardInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeSinceVoiceTriggerHeardInSeconds:");
}

id objc_msgSend_setTimeToLive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeToLive:");
}

id objc_msgSend_setTimeUntilFirstByteRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeUntilFirstByteRead:");
}

id objc_msgSend_setTimeUntilOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeUntilOpen:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimeZoneId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZoneId:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTimeoutIntervalForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForRequest:");
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForResource:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:");
}

id objc_msgSend_setTimer_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimer:completionHandler:");
}

id objc_msgSend_setTimerContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimerContext:");
}

id objc_msgSend_setTimerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimerID:");
}

id objc_msgSend_setTimerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimerState:");
}

id objc_msgSend_setTimerURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimerURL:");
}

id objc_msgSend_setTimerValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimerValue:");
}

id objc_msgSend_setTimersByID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimersByID:");
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimestamp:");
}

id objc_msgSend_setTimezoneOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimezoneOffset:");
}

id objc_msgSend_setTimings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimings:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setToAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToAdd:");
}

id objc_msgSend_setToRecipients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToRecipients:");
}

id objc_msgSend_setToRemove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToRemove:");
}

id objc_msgSend_setTokenOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokenOffset:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setTransportOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportOptions:");
}

id objc_msgSend_setTreatmentId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTreatmentId:");
}

id objc_msgSend_setTriggerScoreHS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggerScoreHS:");
}

id objc_msgSend_setTriggerScoreJS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggerScoreJS:");
}

id objc_msgSend_setTriggeredTwoShotBorealis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggeredTwoShotBorealis:");
}

id objc_msgSend_setTtsVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTtsVoice:");
}

id objc_msgSend_setTurnID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnID:");
}

id objc_msgSend_setTurnId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnId:");
}

id objc_msgSend_setTurnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnIdentifier:");
}

id objc_msgSend_setTuscanyConnectionDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTuscanyConnectionDelay:");
}

id objc_msgSend_setTvOSAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTvOSAssistant:");
}

id objc_msgSend_setTvRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTvRestriction:");
}

id objc_msgSend_setTwentyFourHourTimeDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTwentyFourHourTimeDisplay:");
}

id objc_msgSend_setTxBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTxBytes:");
}

id objc_msgSend_setTxPackets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTxPackets:");
}

id objc_msgSend_setTxRetransmitBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTxRetransmitBytes:");
}

id objc_msgSend_setTxUnacked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTxUnacked:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setTypeToSiriEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypeToSiriEnabled:");
}

id objc_msgSend_setTypedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypedData:");
}

id objc_msgSend_setUTCOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUTCOffset:");
}

id objc_msgSend_setUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUUID:");
}

id objc_msgSend_setUiScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiScale:");
}

id objc_msgSend_setUnacknowledgedPingCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnacknowledgedPingCount:");
}

id objc_msgSend_setUnauthenticatedRequestsAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnauthenticatedRequestsAllowed:");
}

id objc_msgSend_setUnderlyingErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingErrorCode:");
}

id objc_msgSend_setUnderlyingErrorDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingErrorDomain:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUnderstandingOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderstandingOnDevice:");
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniqueIdentifier:");
}

id objc_msgSend_setUodAssetsPrepared_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUodAssetsPrepared:");
}

id objc_msgSend_setUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUri:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUseGuaranteedDelivery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseGuaranteedDelivery:");
}

id objc_msgSend_setUseWiFiHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseWiFiHint:");
}

id objc_msgSend_setUseZoneWidePCS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseZoneWidePCS:");
}

id objc_msgSend_setUserActivityInfo_webpageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserActivityInfo:webpageURL:");
}

id objc_msgSend_setUserAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAgent:");
}

id objc_msgSend_setUserAggregationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAggregationId:");
}

id objc_msgSend_setUserAggregationIdExpirationTimestampMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAggregationIdExpirationTimestampMs:");
}

id objc_msgSend_setUserAggregationIdRotationTimestampMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAggregationIdRotationTimestampMs:");
}

id objc_msgSend_setUserAssignedDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAssignedDeviceName:");
}

id objc_msgSend_setUserAssignedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAssignedName:");
}

id objc_msgSend_setUserEphemeralId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserEphemeralId:");
}

id objc_msgSend_setUserIdentityClassification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserIdentityClassification:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInterfaceIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceIdiom:");
}

id objc_msgSend_setUserPreferredVoiceTriggerPhraseType_sender_deviceType_endpointId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserPreferredVoiceTriggerPhraseType:sender:deviceType:endpointId:");
}

id objc_msgSend_setUserRequestText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserRequestText:");
}

id objc_msgSend_setUserResponseCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserResponseCategory:");
}

id objc_msgSend_setUserResponseEvaluated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserResponseEvaluated:");
}

id objc_msgSend_setUserToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserToken:");
}

id objc_msgSend_setUserTokenStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserTokenStatus:");
}

id objc_msgSend_setUsesPeerManagedSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesPeerManagedSync:");
}

id objc_msgSend_setUsesProxyConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesProxyConnection:");
}

id objc_msgSend_setUtsRequiredRequestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtsRequiredRequestData:");
}

id objc_msgSend_setUtsRequiredRequestKeyValuePairs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtsRequiredRequestKeyValuePairs:");
}

id objc_msgSend_setUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtterance:");
}

id objc_msgSend_setUtteranceSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtteranceSource:");
}

id objc_msgSend_setUtteranceToBeCorrected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtteranceToBeCorrected:");
}

id objc_msgSend_setUufrReadySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUufrReadySource:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setValidationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationData:");
}

id objc_msgSend_setValidationDataSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationDataSync:");
}

id objc_msgSend_setValidationExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationExpiration:");
}

id objc_msgSend_setValidationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationVersion:");
}

id objc_msgSend_setValidity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidity:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValue_forUploadHeaderNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forUploadHeaderNamed:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVendorID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVendorID:");
}

id objc_msgSend_setVendorId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVendorId:");
}

id objc_msgSend_setVendorIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVendorIdentifier:");
}

id objc_msgSend_setVerb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerb:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setVerticalAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerticalAccuracy:");
}

id objc_msgSend_setViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViews:");
}

id objc_msgSend_setVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoice:");
}

id objc_msgSend_setVoiceAccent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceAccent:");
}

id objc_msgSend_setVoiceAudioSessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceAudioSessionId:");
}

id objc_msgSend_setVoiceContentVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceContentVersion:");
}

id objc_msgSend_setVoiceFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceFeedback:");
}

id objc_msgSend_setVoiceGender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceGender:");
}

id objc_msgSend_setVoiceIDAllowedByUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceIDAllowedByUser:");
}

id objc_msgSend_setVoiceIDConfidenceScores_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceIDConfidenceScores:");
}

id objc_msgSend_setVoiceMail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceMail:");
}

id objc_msgSend_setVoiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceName:");
}

id objc_msgSend_setVoiceOver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOver:");
}

id objc_msgSend_setVoiceProfilesAreInFlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceProfilesAreInFlight:");
}

id objc_msgSend_setVoiceSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceSettings:");
}

id objc_msgSend_setVoiceTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTrigger:");
}

id objc_msgSend_setVoiceTriggerContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerContext:");
}

id objc_msgSend_setVoiceTriggerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerEnabled:");
}

id objc_msgSend_setVoiceTriggerEventInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerEventInfo:");
}

id objc_msgSend_setVoiceTriggerNeedsDataSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerNeedsDataSync:");
}

id objc_msgSend_setVoiceTriggerServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceTriggerServerChangeToken:");
}

id objc_msgSend_setVoiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceType:");
}

id objc_msgSend_setVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:");
}

id objc_msgSend_setVolume_category_mode_route_deviceIdentifier_routeSubtype_rampUpDuration_rampDownDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:category:mode:route:deviceIdentifier:routeSubtype:rampUpDuration:rampDownDuration:");
}

id objc_msgSend_setVolumeLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeLevel:");
}

id objc_msgSend_setWaitingOnMessageIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingOnMessageIDs:");
}

id objc_msgSend_setWantsNotificationResponsesDelivered(void *a1, const char *a2, ...)
{
  return _[a1 setWantsNotificationResponsesDelivered];
}

id objc_msgSend_setWasLaunchedForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasLaunchedForRequest:");
}

id objc_msgSend_setWatchAppMetaDataList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchAppMetaDataList:");
}

id objc_msgSend_setWatchCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchCount:");
}

id objc_msgSend_setWatchOSAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchOSAssistant:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setWwanPreferred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWwanPreferred:");
}

id objc_msgSend_setXpcActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcActivity:");
}

id objc_msgSend_setZeroLatencyLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZeroLatencyLaunch:");
}

id objc_msgSend_setZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZone:");
}

id objc_msgSend_setZoneSetupTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoneSetupTimer:");
}

id objc_msgSend_settingChanges(void *a1, const char *a2, ...)
{
  return _[a1 settingChanges];
}

id objc_msgSend_settingType(void *a1, const char *a2, ...)
{
  return _[a1 settingType];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_settingsAction(void *a1, const char *a2, ...)
{
  return _[a1 settingsAction];
}

id objc_msgSend_settingsForMultiUserWithRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsForMultiUserWithRefresh:completion:");
}

id objc_msgSend_setupListener(void *a1, const char *a2, ...)
{
  return _[a1 setupListener];
}

id objc_msgSend_setupPrompt(void *a1, const char *a2, ...)
{
  return _[a1 setupPrompt];
}

id objc_msgSend_setupSharedZoneUpdaterForOwner(void *a1, const char *a2, ...)
{
  return _[a1 setupSharedZoneUpdaterForOwner];
}

id objc_msgSend_setupXPCListener(void *a1, const char *a2, ...)
{
  return _[a1 setupXPCListener];
}

id objc_msgSend_shareCreationRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 shareCreationRetryCount];
}

id objc_msgSend_shareCreationTimer(void *a1, const char *a2, ...)
{
  return _[a1 shareCreationTimer];
}

id objc_msgSend_shareOwnerName(void *a1, const char *a2, ...)
{
  return _[a1 shareOwnerName];
}

id objc_msgSend_shareToken(void *a1, const char *a2, ...)
{
  return _[a1 shareToken];
}

id objc_msgSend_shareURL(void *a1, const char *a2, ...)
{
  return _[a1 shareURL];
}

id objc_msgSend_shareWithOwner_addShare_homes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareWithOwner:addShare:homes:completion:");
}

id objc_msgSend_shareWithOwner_addShare_retryCount_homes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareWithOwner:addShare:retryCount:homes:completion:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 sharedAnalytics];
}

id objc_msgSend_sharedCache(void *a1, const char *a2, ...)
{
  return _[a1 sharedCache];
}

id objc_msgSend_sharedCloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 sharedCloudDatabase];
}

id objc_msgSend_sharedCommandCenter(void *a1, const char *a2, ...)
{
  return _[a1 sharedCommandCenter];
}

id objc_msgSend_sharedConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 sharedConfiguration];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedDaemon(void *a1, const char *a2, ...)
{
  return _[a1 sharedDaemon];
}

id objc_msgSend_sharedDataConnection_didUpdateSharedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedDataConnection:didUpdateSharedData:");
}

id objc_msgSend_sharedDataManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedDataManager];
}

id objc_msgSend_sharedDeviceAccountsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedDeviceAccountsWithError:");
}

id objc_msgSend_sharedDeviceConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedDeviceConnection];
}

id objc_msgSend_sharedDeviceSelector(void *a1, const char *a2, ...)
{
  return _[a1 sharedDeviceSelector];
}

id objc_msgSend_sharedDiagnostics(void *a1, const char *a2, ...)
{
  return _[a1 sharedDiagnostics];
}

id objc_msgSend_sharedDictationOfflineStatusObserver(void *a1, const char *a2, ...)
{
  return _[a1 sharedDictationOfflineStatusObserver];
}

id objc_msgSend_sharedEmbedder(void *a1, const char *a2, ...)
{
  return _[a1 sharedEmbedder];
}

id objc_msgSend_sharedId(void *a1, const char *a2, ...)
{
  return _[a1 sharedId];
}

id objc_msgSend_sharedInfoManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedInfoManager];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedListener(void *a1, const char *a2, ...)
{
  return _[a1 sharedListener];
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return _[a1 sharedLogger];
}

id objc_msgSend_sharedLoggingService(void *a1, const char *a2, ...)
{
  return _[a1 sharedLoggingService];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedModule(void *a1, const char *a2, ...)
{
  return _[a1 sharedModule];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedNetworkActivityTracing(void *a1, const char *a2, ...)
{
  return _[a1 sharedNetworkActivityTracing];
}

id objc_msgSend_sharedNotificationRequestHandler(void *a1, const char *a2, ...)
{
  return _[a1 sharedNotificationRequestHandler];
}

id objc_msgSend_sharedObserver(void *a1, const char *a2, ...)
{
  return _[a1 sharedObserver];
}

id objc_msgSend_sharedPeerStreamConnectionWithServiceIdentifier_listener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPeerStreamConnectionWithServiceIdentifier:listener:");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharedProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedProvider];
}

id objc_msgSend_sharedPublisher(void *a1, const char *a2, ...)
{
  return _[a1 sharedPublisher];
}

id objc_msgSend_sharedQueue(void *a1, const char *a2, ...)
{
  return _[a1 sharedQueue];
}

id objc_msgSend_sharedRemoteDevices(void *a1, const char *a2, ...)
{
  return _[a1 sharedRemoteDevices];
}

id objc_msgSend_sharedSNNetworkAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 sharedSNNetworkAnalytics];
}

id objc_msgSend_sharedServer(void *a1, const char *a2, ...)
{
  return _[a1 sharedServer];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_sharedSettingsManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedSettingsManager];
}

id objc_msgSend_sharedSiriAnalyticsServiceHost(void *a1, const char *a2, ...)
{
  return _[a1 sharedSiriAnalyticsServiceHost];
}

id objc_msgSend_sharedSiriCoreNetworkingAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 sharedSiriCoreNetworkingAnalytics];
}

id objc_msgSend_sharedSiriId(void *a1, const char *a2, ...)
{
  return _[a1 sharedSiriId];
}

id objc_msgSend_sharedStatusController(void *a1, const char *a2, ...)
{
  return _[a1 sharedStatusController];
}

id objc_msgSend_sharedStore(void *a1, const char *a2, ...)
{
  return _[a1 sharedStore];
}

id objc_msgSend_sharedStream(void *a1, const char *a2, ...)
{
  return _[a1 sharedStream];
}

id objc_msgSend_sharedSystemAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemAudioContext];
}

id objc_msgSend_sharedSystemShellSwitcher(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemShellSwitcher];
}

id objc_msgSend_sharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 sharedUserID];
}

id objc_msgSend_sharedUserId(void *a1, const char *a2, ...)
{
  return _[a1 sharedUserId];
}

id objc_msgSend_sharedUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sharedUserIdentifier];
}

id objc_msgSend_sharedUsersBySharedUserID(void *a1, const char *a2, ...)
{
  return _[a1 sharedUsersBySharedUserID];
}

id objc_msgSend_sharedWirelessSplitterSessionObserver(void *a1, const char *a2, ...)
{
  return _[a1 sharedWirelessSplitterSessionObserver];
}

id objc_msgSend_sharedZone(void *a1, const char *a2, ...)
{
  return _[a1 sharedZone];
}

id objc_msgSend_shiftCoordinate_accuracy_shiftedCoordinate_shiftedAccuracy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:");
}

id objc_msgSend_shiftCoordinate_accuracy_withCompletionHandler_mustGoToNetworkCallback_errorHandler_callbackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:");
}

id objc_msgSend_shiftLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftLocation:completion:");
}

id objc_msgSend_shiftLocationUsingCachedShifterFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftLocationUsingCachedShifterFunction:");
}

id objc_msgSend_shiftLocationWithTimeout_timeoutHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftLocationWithTimeout:timeoutHandler:completion:");
}

id objc_msgSend_shortVersionString(void *a1, const char *a2, ...)
{
  return _[a1 shortVersionString];
}

id objc_msgSend_shouldBeShownInSettingsReturningAvailabilityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBeShownInSettingsReturningAvailabilityStatus:");
}

id objc_msgSend_shouldCensorSpeech(void *a1, const char *a2, ...)
{
  return _[a1 shouldCensorSpeech];
}

id objc_msgSend_shouldClassifyIntent(void *a1, const char *a2, ...)
{
  return _[a1 shouldClassifyIntent];
}

id objc_msgSend_shouldDisableServerFallbackDomain(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisableServerFallbackDomain];
}

id objc_msgSend_shouldDisableServerFallbackNL(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisableServerFallbackNL];
}

id objc_msgSend_shouldEndLocationUpdateSession(void *a1, const char *a2, ...)
{
  return _[a1 shouldEndLocationUpdateSession];
}

id objc_msgSend_shouldExcludeFromBackgroundRefresh(void *a1, const char *a2, ...)
{
  return _[a1 shouldExcludeFromBackgroundRefresh];
}

id objc_msgSend_shouldFallbackOnAWDL(void *a1, const char *a2, ...)
{
  return _[a1 shouldFallbackOnAWDL];
}

id objc_msgSend_shouldGenerateVoiceCommandCandidates(void *a1, const char *a2, ...)
{
  return _[a1 shouldGenerateVoiceCommandCandidates];
}

id objc_msgSend_shouldHandleCapitalization(void *a1, const char *a2, ...)
{
  return _[a1 shouldHandleCapitalization];
}

id objc_msgSend_shouldIgnoreSyncKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIgnoreSyncKey:");
}

id objc_msgSend_shouldIncludeAllKnownSiriKitAnchorsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIncludeAllKnownSiriKitAnchorsForReason:");
}

id objc_msgSend_shouldLogForQA(void *a1, const char *a2, ...)
{
  return _[a1 shouldLogForQA];
}

id objc_msgSend_shouldRecognizeCommands(void *a1, const char *a2, ...)
{
  return _[a1 shouldRecognizeCommands];
}

id objc_msgSend_shouldRetryOnConnectionFailure(void *a1, const char *a2, ...)
{
  return _[a1 shouldRetryOnConnectionFailure];
}

id objc_msgSend_shouldRunAsrOnServerForUOD(void *a1, const char *a2, ...)
{
  return _[a1 shouldRunAsrOnServerForUOD];
}

id objc_msgSend_shouldSendFingerprintForDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSendFingerprintForDuration:");
}

id objc_msgSend_shouldSendLocationToServer_forAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSendLocationToServer:forAceCommand:");
}

id objc_msgSend_shouldSimulateLanguageDetectorAssetsAvailability(void *a1, const char *a2, ...)
{
  return _[a1 shouldSimulateLanguageDetectorAssetsAvailability];
}

id objc_msgSend_shouldSkipTriggerlessReply(void *a1, const char *a2, ...)
{
  return _[a1 shouldSkipTriggerlessReply];
}

id objc_msgSend_shouldSpeakChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSpeakChanged:");
}

id objc_msgSend_shouldSyncEverythingForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSyncEverythingForReason:");
}

id objc_msgSend_shouldSyncIntentPolicyForSyncKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSyncIntentPolicyForSyncKeys:");
}

id objc_msgSend_shouldSyncThirdPartyUserVocabularyForSyncKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSyncThirdPartyUserVocabularyForSyncKeys:");
}

id objc_msgSend_showDirections(void *a1, const char *a2, ...)
{
  return _[a1 showDirections];
}

id objc_msgSend_showMultiUserSharedUserIDsCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMultiUserSharedUserIDsCompletion:");
}

id objc_msgSend_showMultiUsersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMultiUsersWithCompletion:");
}

id objc_msgSend_showPreviewsSetting(void *a1, const char *a2, ...)
{
  return _[a1 showPreviewsSetting];
}

id objc_msgSend_showPrimaryUserSharedUserIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPrimaryUserSharedUserIDWithCompletion:");
}

id objc_msgSend_showingVisibleAssistantUIForReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showingVisibleAssistantUIForReason:completion:");
}

id objc_msgSend_shuffleMode(void *a1, const char *a2, ...)
{
  return _[a1 shuffleMode];
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return _[a1 shutdown];
}

id objc_msgSend_shutdownSessionIfIdle(void *a1, const char *a2, ...)
{
  return _[a1 shutdownSessionIfIdle];
}

id objc_msgSend_signData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signData:error:");
}

id objc_msgSend_signalRequestCompletedForRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalRequestCompletedForRequestId:");
}

id objc_msgSend_signalRequestStartedWithRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalRequestStartedWithRequestId:");
}

id objc_msgSend_signalSiriAvailability(void *a1, const char *a2, ...)
{
  return _[a1 signalSiriAvailability];
}

id objc_msgSend_signalStrengthBars(void *a1, const char *a2, ...)
{
  return _[a1 signalStrengthBars];
}

id objc_msgSend_signedDataForData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signedDataForData:");
}

id objc_msgSend_silenceProbability(void *a1, const char *a2, ...)
{
  return _[a1 silenceProbability];
}

id objc_msgSend_silenceStartTime(void *a1, const char *a2, ...)
{
  return _[a1 silenceStartTime];
}

id objc_msgSend_simSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 simSubscriptions];
}

id objc_msgSend_simulatingLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 simulatingLanguageCodes];
}

id objc_msgSend_singleUserCompanionACEHost(void *a1, const char *a2, ...)
{
  return _[a1 singleUserCompanionACEHost];
}

id objc_msgSend_singleUserMeCard(void *a1, const char *a2, ...)
{
  return _[a1 singleUserMeCard];
}

id objc_msgSend_sinkWithCompletion_receiveInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinkWithCompletion:receiveInput:");
}

id objc_msgSend_siriAccountInformation(void *a1, const char *a2, ...)
{
  return _[a1 siriAccountInformation];
}

id objc_msgSend_siriAnalyticsIdentifiersConsistencyTimerIntervalMillisec(void *a1, const char *a2, ...)
{
  return _[a1 siriAnalyticsIdentifiersConsistencyTimerIntervalMillisec];
}

id objc_msgSend_siriAnalyticsIdentifiersConsistencyTimerStartDelayMillisec(void *a1, const char *a2, ...)
{
  return _[a1 siriAnalyticsIdentifiersConsistencyTimerStartDelayMillisec];
}

id objc_msgSend_siriConnection_didOpenWithConnectionType_delay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriConnection:didOpenWithConnectionType:delay:");
}

id objc_msgSend_siriConnection_willStartWithConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriConnection:willStartWithConnectionType:");
}

id objc_msgSend_siriContext(void *a1, const char *a2, ...)
{
  return _[a1 siriContext];
}

id objc_msgSend_siriCoreSQLiteValue_toData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCoreSQLiteValue_toData");
}

id objc_msgSend_siriCoreSQLiteValue_toNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCoreSQLiteValue_toNumber");
}

id objc_msgSend_siriCoreSQLiteValue_toString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCoreSQLiteValue_toString");
}

id objc_msgSend_siriCore_bufferingAllowedDuringActiveSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_bufferingAllowedDuringActiveSession");
}

id objc_msgSend_siriCore_invokeThunk(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_invokeThunk");
}

id objc_msgSend_siriCore_isProvisional(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_isProvisional");
}

id objc_msgSend_siriCore_isRestartable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_isRestartable");
}

id objc_msgSend_siriCore_isRetryable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_isRetryable");
}

id objc_msgSend_siriCore_logDiagnostics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_logDiagnostics");
}

id objc_msgSend_siriCore_requestId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_requestId");
}

id objc_msgSend_siriCore_setSessionRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_setSessionRequestId:");
}

id objc_msgSend_siriCore_supportedByRemoteLimitedSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCore_supportedByRemoteLimitedSession");
}

id objc_msgSend_siriCurrentHome(void *a1, const char *a2, ...)
{
  return _[a1 siriCurrentHome];
}

id objc_msgSend_siriDataSharingHomePodSetupDeviceIsValid(void *a1, const char *a2, ...)
{
  return _[a1 siriDataSharingHomePodSetupDeviceIsValid];
}

id objc_msgSend_siriDataSharingOptInStatus(void *a1, const char *a2, ...)
{
  return _[a1 siriDataSharingOptInStatus];
}

id objc_msgSend_siriDataSharingOptInStatusHistory(void *a1, const char *a2, ...)
{
  return _[a1 siriDataSharingOptInStatusHistory];
}

id objc_msgSend_siriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 siriEnabled];
}

id objc_msgSend_siriEndpointProfile(void *a1, const char *a2, ...)
{
  return _[a1 siriEndpointProfile];
}

id objc_msgSend_siriInCallEnablementState(void *a1, const char *a2, ...)
{
  return _[a1 siriInCallEnablementState];
}

id objc_msgSend_siriInfo(void *a1, const char *a2, ...)
{
  return _[a1 siriInfo];
}

id objc_msgSend_siriInfoToBeBroadcasted(void *a1, const char *a2, ...)
{
  return _[a1 siriInfoToBeBroadcasted];
}

id objc_msgSend_siriLanguage(void *a1, const char *a2, ...)
{
  return _[a1 siriLanguage];
}

id objc_msgSend_siriMatches(void *a1, const char *a2, ...)
{
  return _[a1 siriMatches];
}

id objc_msgSend_siriNetworkConnection(void *a1, const char *a2, ...)
{
  return _[a1 siriNetworkConnection];
}

id objc_msgSend_siriPhraseOptions(void *a1, const char *a2, ...)
{
  return _[a1 siriPhraseOptions];
}

id objc_msgSend_siriResponseShouldAlwaysPrintWithoutOverride(void *a1, const char *a2, ...)
{
  return _[a1 siriResponseShouldAlwaysPrintWithoutOverride];
}

id objc_msgSend_siriSaltURLLoadDuration(void *a1, const char *a2, ...)
{
  return _[a1 siriSaltURLLoadDuration];
}

id objc_msgSend_siriSpeechRate(void *a1, const char *a2, ...)
{
  return _[a1 siriSpeechRate];
}

id objc_msgSend_siriURLLoadDuration(void *a1, const char *a2, ...)
{
  return _[a1 siriURLLoadDuration];
}

id objc_msgSend_skipActivitySetup(void *a1, const char *a2, ...)
{
  return _[a1 skipActivitySetup];
}

id objc_msgSend_skipGeneratingSpeechPacket(void *a1, const char *a2, ...)
{
  return _[a1 skipGeneratingSpeechPacket];
}

id objc_msgSend_skipPersonalizedASR(void *a1, const char *a2, ...)
{
  return _[a1 skipPersonalizedASR];
}

id objc_msgSend_sleepState(void *a1, const char *a2, ...)
{
  return _[a1 sleepState];
}

id objc_msgSend_smartSiriVolumeContextAwareEnabled(void *a1, const char *a2, ...)
{
  return _[a1 smartSiriVolumeContextAwareEnabled];
}

id objc_msgSend_smartSiriVolumeTTSType(void *a1, const char *a2, ...)
{
  return _[a1 smartSiriVolumeTTSType];
}

id objc_msgSend_smsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 smsIdentifier];
}

id objc_msgSend_sn_isNetworkConnectionRetryable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkConnectionRetryable");
}

id objc_msgSend_sn_isNetworkConnectionRetryableAfterDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkConnectionRetryableAfterDelay");
}

id objc_msgSend_sn_isNetworkConnectionRetryableNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkConnectionRetryableNow");
}

id objc_msgSend_sn_isNetworkDown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkDown");
}

id objc_msgSend_sn_isNetworkOperationRetryable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkOperationRetryable");
}

id objc_msgSend_sn_isNetworkUnreachable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkUnreachable");
}

id objc_msgSend_sn_isNetworkUnreachableForServerCause(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sn_isNetworkUnreachableForServerCause");
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _[a1 snapshot];
}

id objc_msgSend_snapshotStateFromStringEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotStateFromStringEvent:");
}

id objc_msgSend_sndBandwidth(void *a1, const char *a2, ...)
{
  return _[a1 sndBandwidth];
}

id objc_msgSend_snr(void *a1, const char *a2, ...)
{
  return _[a1 snr];
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sound(void *a1, const char *a2, ...)
{
  return _[a1 sound];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceAppId(void *a1, const char *a2, ...)
{
  return _[a1 sourceAppId];
}

id objc_msgSend_sourceIDSFirstRoutableDestination(void *a1, const char *a2, ...)
{
  return _[a1 sourceIDSFirstRoutableDestination];
}

id objc_msgSend_sourceSettings(void *a1, const char *a2, ...)
{
  return _[a1 sourceSettings];
}

id objc_msgSend_sources(void *a1, const char *a2, ...)
{
  return _[a1 sources];
}

id objc_msgSend_speakableDate(void *a1, const char *a2, ...)
{
  return _[a1 speakableDate];
}

id objc_msgSend_speakableDescription(void *a1, const char *a2, ...)
{
  return _[a1 speakableDescription];
}

id objc_msgSend_speakableIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 speakableIdentifier];
}

id objc_msgSend_speakableText(void *a1, const char *a2, ...)
{
  return _[a1 speakableText];
}

id objc_msgSend_speakingStateDidChange_forIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakingStateDidChange:forIdentifiers:");
}

id objc_msgSend_specificAccountWithDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specificAccountWithDSID:");
}

id objc_msgSend_speechCapturingDidRecordPCMAudioData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechCapturingDidRecordPCMAudioData:");
}

id objc_msgSend_speechCapturingDidRecordSpeechPackets_atTimestamp_totalPacketCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:");
}

id objc_msgSend_speechCapturingDidStartRecordingSuccessfully_error_withInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechCapturingDidStartRecordingSuccessfully:error:withInfo:");
}

id objc_msgSend_speechCapturingDidStopRecordingWithError_endpointMode_totalPacketCount_endpointerMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechCapturingDidStopRecordingWithError:endpointMode:totalPacketCount:endpointerMetrics:");
}

id objc_msgSend_speechData(void *a1, const char *a2, ...)
{
  return _[a1 speechData];
}

id objc_msgSend_speechDataUrl(void *a1, const char *a2, ...)
{
  return _[a1 speechDataUrl];
}

id objc_msgSend_speechDidFinishWritingAudioFile_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidFinishWritingAudioFile:error:");
}

id objc_msgSend_speechDidReceiveSearchResults_recognitionText_stable_final_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidReceiveSearchResults:recognitionText:stable:final:");
}

id objc_msgSend_speechDidRecognizeMultilingualSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidRecognizeMultilingualSpeech:");
}

id objc_msgSend_speechDidRecognizePartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidRecognizePartialResult:");
}

id objc_msgSend_speechDidRecognizePhrases_rawPhrases_utterances_rawUtterances_nluResult_usingSpeechModel_correctionContext_audioAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidRecognizePhrases:rawPhrases:utterances:rawUtterances:nluResult:usingSpeechModel:correctionContext:audioAnalytics:");
}

id objc_msgSend_speechDidRecognizeTranscriptionObjects_usingSpeechModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechDidRecognizeTranscriptionObjects:usingSpeechModel:");
}

id objc_msgSend_speechEvent(void *a1, const char *a2, ...)
{
  return _[a1 speechEvent];
}

id objc_msgSend_speechID(void *a1, const char *a2, ...)
{
  return _[a1 speechID];
}

id objc_msgSend_speechId(void *a1, const char *a2, ...)
{
  return _[a1 speechId];
}

id objc_msgSend_speechIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 speechIdentifier];
}

id objc_msgSend_speechInfo(void *a1, const char *a2, ...)
{
  return _[a1 speechInfo];
}

id objc_msgSend_speechManager_audioSessionDidBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:audioSessionDidBecomeActive:");
}

id objc_msgSend_speechManager_audioSessionWillBecomeActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:audioSessionWillBecomeActive:");
}

id objc_msgSend_speechManager_capturedFingerprint_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:capturedFingerprint:duration:");
}

id objc_msgSend_speechManager_capturedPackets_atTimestamp_totalCount_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:capturedPackets:atTimestamp:totalCount:context:");
}

id objc_msgSend_speechManager_detectedSpeechForListeningType_atHostTime_shouldHandleActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:detectedSpeechForListeningType:atHostTime:shouldHandleActivation:");
}

id objc_msgSend_speechManager_didBeginLocalRecognitionWithContext_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didBeginLocalRecognitionWithContext:sessionUUID:");
}

id objc_msgSend_speechManager_didCancelWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didCancelWithContext:");
}

id objc_msgSend_speechManager_didChangeRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didChangeRecordingState:");
}

id objc_msgSend_speechManager_didDetectEndpointAtTime_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didDetectEndpointAtTime:context:");
}

id objc_msgSend_speechManager_didDetectLanguage_confidenceScores_isConfident_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didDetectLanguage:confidenceScores:isConfident:");
}

id objc_msgSend_speechManager_didDetectStartpointAtTime_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didDetectStartpointAtTime:context:");
}

id objc_msgSend_speechManager_didFailWithError_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didFailWithError:context:");
}

id objc_msgSend_speechManager_didFinishWithCapturingMode_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didFinishWithCapturingMode:context:");
}

id objc_msgSend_speechManager_didFinishWritingAudioFile_error_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didFinishWritingAudioFile:error:context:");
}

id objc_msgSend_speechManager_didProduceLocalLoggablePackage_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didProduceLocalLoggablePackage:sessionUUID:");
}

id objc_msgSend_speechManager_didReceiveConfidenceScores_classification_classifiedUser_unknownUserScore_duration_version_thresholdingType_assetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didReceiveConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:");
}

id objc_msgSend_speechManager_didReceiveLastAudioBufferWithEndpointMode_totalPacketCount_endpointerMetrics_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:context:");
}

id objc_msgSend_speechManager_didRecognizePackage_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didRecognizePackage:sessionUUID:");
}

id objc_msgSend_speechManager_didRecognizeRawEagerRecognitionCandidate_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:");
}

id objc_msgSend_speechManager_didRecognizeTokens_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didRecognizeTokens:sessionUUID:");
}

id objc_msgSend_speechManager_didRequestQuickStopWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didRequestQuickStopWithContext:");
}

id objc_msgSend_speechManager_didRequestShutdownUIWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didRequestShutdownUIWithContext:");
}

id objc_msgSend_speechManager_didStartRecordingWithInfo_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didStartRecordingWithInfo:context:");
}

id objc_msgSend_speechManager_didStopUnexpectlyWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didStopUnexpectlyWithError:");
}

id objc_msgSend_speechManager_didUpdateInputAveragePower_peakPower_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didUpdateInputAveragePower:peakPower:");
}

id objc_msgSend_speechManager_didUpdateRecordingWithInfo_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:didUpdateRecordingWithInfo:context:");
}

id objc_msgSend_speechManager_languageDetectorDidFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:languageDetectorDidFail:");
}

id objc_msgSend_speechManager_performTwoShotPromptWithType_context_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:performTwoShotPromptWithType:context:completion:");
}

id objc_msgSend_speechManager_preheatWithRecordingInfo_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:preheatWithRecordingInfo:context:");
}

id objc_msgSend_speechManager_recognitionDidCompleteWithError_secureOfflineOnlyRecognition_sessionUUID_statistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:recognitionDidCompleteWithError:secureOfflineOnlyRecognition:sessionUUID:statistics:");
}

id objc_msgSend_speechManager_recognitionUpdateWillBeginForTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:recognitionUpdateWillBeginForTask:");
}

id objc_msgSend_speechManager_willStartRecordingAtTimestamp_isFromFile_inputAudioPowerWrapper_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:context:");
}

id objc_msgSend_speechManager_willStopRecordingWithSignpostID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManager:willStopRecordingWithSignpostID:");
}

id objc_msgSend_speechManagerDidDelayEndpointForMusic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManagerDidDelayEndpointForMusic:");
}

id objc_msgSend_speechManagerDidDetectMusic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechManagerDidDetectMusic:");
}

id objc_msgSend_speechRecognitionDidFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecognitionDidFail:");
}

id objc_msgSend_speechRecognitionDidFinishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecognitionDidFinishWithError:");
}

id objc_msgSend_speechRecognitionTransactionState(void *a1, const char *a2, ...)
{
  return _[a1 speechRecognitionTransactionState];
}

id objc_msgSend_speechRecognized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecognized:");
}

id objc_msgSend_speechRecognizedByLanguage(void *a1, const char *a2, ...)
{
  return _[a1 speechRecognizedByLanguage];
}

id objc_msgSend_speechRecognizedCommand(void *a1, const char *a2, ...)
{
  return _[a1 speechRecognizedCommand];
}

id objc_msgSend_speechRecognizedPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecognizedPartialResult:");
}

id objc_msgSend_speechRecordingDidBeginOnAVRecordRoute_audioSessionID_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:");
}

id objc_msgSend_speechRecordingDidBeginWithOptions_sessionUUID_sessionRequestUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:");
}

id objc_msgSend_speechRecordingDidCancel(void *a1, const char *a2, ...)
{
  return _[a1 speechRecordingDidCancel];
}

id objc_msgSend_speechRecordingDidCancelWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidCancelWithReply:");
}

id objc_msgSend_speechRecordingDidChangeAVRecordRoute_isDucking_isTwoShot_speechEndHostTime_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:");
}

id objc_msgSend_speechRecordingDidEnd(void *a1, const char *a2, ...)
{
  return _[a1 speechRecordingDidEnd];
}

id objc_msgSend_speechRecordingDidEndWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidEndWithReply:");
}

id objc_msgSend_speechRecordingDidFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidFail:");
}

id objc_msgSend_speechRecordingDidFail_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidFail:reply:");
}

id objc_msgSend_speechRecordingEventListeningEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 speechRecordingEventListeningEndpoint];
}

id objc_msgSend_speechRecordingPerformTwoShotPromptWithType_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingPerformTwoShotPromptWithType:reply:");
}

id objc_msgSend_speechRecordingStartpointDetectedWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingStartpointDetectedWithReply:");
}

id objc_msgSend_speechRecordingWillBeginRecognitionUpdateForTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingWillBeginRecognitionUpdateForTask:");
}

id objc_msgSend_speechRecordingWillBeginWithInputAudioPowerXPCWrapper_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:");
}

id objc_msgSend_speechRequestId(void *a1, const char *a2, ...)
{
  return _[a1 speechRequestId];
}

id objc_msgSend_speechRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 speechRequestOptions];
}

id objc_msgSend_speechSynthesisRecord(void *a1, const char *a2, ...)
{
  return _[a1 speechSynthesisRecord];
}

id objc_msgSend_speed(void *a1, const char *a2, ...)
{
  return _[a1 speed];
}

id objc_msgSend_spokenNotificationSetting(void *a1, const char *a2, ...)
{
  return _[a1 spokenNotificationSetting];
}

id objc_msgSend_sqliteRecordsForCKRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sqliteRecordsForCKRecords:");
}

id objc_msgSend_stable(void *a1, const char *a2, ...)
{
  return _[a1 stable];
}

id objc_msgSend_stageEvents_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stageEvents:completion:");
}

id objc_msgSend_stageUEIEventData_timestamp_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stageUEIEventData:timestamp:completion:");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAcceptingCloudSharesForMultiUserService(void *a1, const char *a2, ...)
{
  return _[a1 startAcceptingCloudSharesForMultiUserService];
}

id objc_msgSend_startAcousticIDCaptureWithOptions_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAcousticIDCaptureWithOptions:sessionUUID:");
}

id objc_msgSend_startAcousticIDRequestWithDelegate_withOptions_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAcousticIDRequestWithDelegate:withOptions:context:");
}

id objc_msgSend_startActivityUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startActivityUpdatesToQueue:withHandler:");
}

id objc_msgSend_startAttendingForPauseInSpeechWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAttendingForPauseInSpeechWithType:completion:");
}

id objc_msgSend_startAttendingForSpeechWithType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAttendingForSpeechWithType:completion:");
}

id objc_msgSend_startAttendingWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAttendingWithOptions:completion:");
}

id objc_msgSend_startCloudKitSyncWeeklyForActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCloudKitSyncWeeklyForActivity:");
}

id objc_msgSend_startCollectingContext(void *a1, const char *a2, ...)
{
  return _[a1 startCollectingContext];
}

id objc_msgSend_startCompressionNarrowband_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCompressionNarrowband:");
}

id objc_msgSend_startContext(void *a1, const char *a2, ...)
{
  return _[a1 startContext];
}

id objc_msgSend_startCorrectionSpeechRequestWithAssistantId_requestId_inputOrigin_utterance_previousUtterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCorrectionSpeechRequestWithAssistantId:requestId:inputOrigin:utterance:previousUtterance:requestContextData:");
}

id objc_msgSend_startCorrectionSpeechRequestWithConfiguration_requestId_inputOrigin_utterance_previousUtterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCorrectionSpeechRequestWithConfiguration:requestId:inputOrigin:utterance:previousUtterance:requestContextData:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startDelaying(void *a1, const char *a2, ...)
{
  return _[a1 startDelaying];
}

id objc_msgSend_startDictationRequestWithAssistantId_requestId_inputOrigin_dictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDictationRequestWithAssistantId:requestId:inputOrigin:dictationOptions:");
}

id objc_msgSend_startDictationSessionWithAssistantId_languageCode_recognitionOnDevice_shouldClassifyIntent_understandingOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDictationSessionWithAssistantId:languageCode:recognitionOnDevice:shouldClassifyIntent:understandingOnDevice:");
}

id objc_msgSend_startDictationWithLanguageCode_options_speechOptions_sessionUUID_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:");
}

id objc_msgSend_startDictationWithURL_isNarrowBand_language_options_sessionUUID_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:");
}

id objc_msgSend_startDirectActionRequestWithAssistantId_requestId_inputOrigin_utterance_directAction_requestExecutionParameters_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDirectActionRequestWithAssistantId:requestId:inputOrigin:utterance:directAction:requestExecutionParameters:requestContextData:");
}

id objc_msgSend_startDirectActionRequestWithConfiguration_requestId_inputOrigin_utterance_directAction_requestExecutionParameters_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDirectActionRequestWithConfiguration:requestId:inputOrigin:utterance:directAction:requestExecutionParameters:requestContextData:");
}

id objc_msgSend_startListenWithOption_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startListenWithOption:completion:");
}

id objc_msgSend_startListening(void *a1, const char *a2, ...)
{
  return _[a1 startListening];
}

id objc_msgSend_startListeningForRemote(void *a1, const char *a2, ...)
{
  return _[a1 startListeningForRemote];
}

id objc_msgSend_startLocalRequest(void *a1, const char *a2, ...)
{
  return _[a1 startLocalRequest];
}

id objc_msgSend_startLocalRequestWithAssistantId_requestId_inputOrigin_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLocalRequestWithAssistantId:requestId:inputOrigin:requestContextData:");
}

id objc_msgSend_startLocalRequestWithConfiguration_requestId_inputOrigin_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLocalRequestWithConfiguration:requestId:inputOrigin:requestContextData:");
}

id objc_msgSend_startLocationPrefetchRoutine(void *a1, const char *a2, ...)
{
  return _[a1 startLocationPrefetchRoutine];
}

id objc_msgSend_startLocationUpdateSession(void *a1, const char *a2, ...)
{
  return _[a1 startLocationUpdateSession];
}

id objc_msgSend_startMockServerWithReplayFile_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMockServerWithReplayFile:withReply:");
}

id objc_msgSend_startMonitoringNetworkForHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringNetworkForHost:");
}

id objc_msgSend_startMonitoringWithTimeoutInterval_instanceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringWithTimeoutInterval:instanceContext:");
}

id objc_msgSend_startNewAcousticIDSessionWithRequestId_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNewAcousticIDSessionWithRequestId:refId:");
}

id objc_msgSend_startObserving(void *a1, const char *a2, ...)
{
  return _[a1 startObserving];
}

id objc_msgSend_startObservingBluetoothInEarDetectionStateForBTAddress_forObserverID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingBluetoothInEarDetectionStateForBTAddress:forObserverID:");
}

id objc_msgSend_startObservingCallState(void *a1, const char *a2, ...)
{
  return _[a1 startObservingCallState];
}

id objc_msgSend_startObservingCallStateWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingCallStateWithDelegate:");
}

id objc_msgSend_startObservingForBTAddress_forObserverID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startObservingForBTAddress:forObserverID:");
}

id objc_msgSend_startObservingWirelessSplitterSession(void *a1, const char *a2, ...)
{
  return _[a1 startObservingWirelessSplitterSession];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayForDate:");
}

id objc_msgSend_startPlaybackDidFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPlaybackDidFail:");
}

id objc_msgSend_startPlaybackWithURL_narrowBand_dictation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPlaybackWithURL:narrowBand:dictation:completion:");
}

id objc_msgSend_startRecordedDictationCaptureWithSessionUUID_narrowband_secureOfflineOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:");
}

id objc_msgSend_startRecordedDictationWithLanguage_options_sessionUUID_narrowband_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:");
}

id objc_msgSend_startRecordingForPendingDictationWithLanguageCode_options_speechOptions_sessionUUID_delegate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:");
}

id objc_msgSend_startRecordingForPendingSpeechRequestForDelegate_withOptions_sessionUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:");
}

id objc_msgSend_startRecordingTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 startRecordingTimestamp];
}

id objc_msgSend_startRemoteExecution_onPeer_allowsRelay_throughProxyDevice_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteExecution:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:");
}

id objc_msgSend_startRemoteRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteRequest:completion:");
}

id objc_msgSend_startRemoteRequest_onPeer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteRequest:onPeer:completion:");
}

id objc_msgSend_startRemoteRequest_onTargetDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteRequest:onTargetDevice:completion:");
}

id objc_msgSend_startRemoteSerialzedCommandExecution_onPeer_allowsRelay_allowFallbackOnAWDL_executionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteSerialzedCommandExecution:onPeer:allowsRelay:allowFallbackOnAWDL:executionContext:completion:");
}

id objc_msgSend_startRequest(void *a1, const char *a2, ...)
{
  return _[a1 startRequest];
}

id objc_msgSend_startRequest_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRequest:options:completion:");
}

id objc_msgSend_startRequest_options_preparationHandler_executionHandler_finalizationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRequest:options:preparationHandler:executionHandler:finalizationHandler:");
}

id objc_msgSend_startRequest_withDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRequest:withDelegate:");
}

id objc_msgSend_startRetry(void *a1, const char *a2, ...)
{
  return _[a1 startRetry];
}

id objc_msgSend_startSessionForReason_languageCode_options_speechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSessionForReason:languageCode:options:speechRequestOptions:");
}

id objc_msgSend_startSessionIfNeededWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSessionIfNeededWithConfiguration:");
}

id objc_msgSend_startSessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSessionWithConfiguration:");
}

id objc_msgSend_startSpeechCaptureForDictationWithOptions_sessionUUID_secureOfflineOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:");
}

id objc_msgSend_startSpeechCaptureForRequestWithOptions_sessionUUID_language_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechCaptureForRequestWithOptions:sessionUUID:language:");
}

id objc_msgSend_startSpeechCaptureWithContext_willStartHandler_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechCaptureWithContext:willStartHandler:error:");
}

id objc_msgSend_startSpeechCaptureWithURL_isNarrowBand_isDictation_sessionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:");
}

id objc_msgSend_startSpeechDictationRequestWithAssistantId_requestId_inputOrigin_dictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechDictationRequestWithAssistantId:requestId:inputOrigin:dictationOptions:");
}

id objc_msgSend_startSpeechDictationSessionWithAssistantId_languageCode_recognitionOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechDictationSessionWithAssistantId:languageCode:recognitionOnDevice:");
}

id objc_msgSend_startSpeechPronunciationRequestWithDelegate_withOptions_pronunciationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:");
}

id objc_msgSend_startSpeechRecognitionWithParameters_didStartHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechRecognitionWithParameters:didStartHandler:");
}

id objc_msgSend_startSpeechRequestWithAssistantId_requestId_inputOrigin_location_asrOnServer_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechRequestWithAssistantId:requestId:inputOrigin:location:asrOnServer:requestContextData:");
}

id objc_msgSend_startSpeechRequestWithConfiguration_requestId_inputOrigin_location_asrOnServer_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechRequestWithConfiguration:requestId:inputOrigin:location:asrOnServer:requestContextData:");
}

id objc_msgSend_startSpeechRequestWithURL_isNarrowBand_withDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSpeechRequestWithURL:isNarrowBand:withDelegate:");
}

id objc_msgSend_startTestSpeechRequestWithAssistantId_requestId_enableASR_inputOrigin_location_jitContext_overrideModelPath_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTestSpeechRequestWithAssistantId:requestId:enableASR:inputOrigin:location:jitContext:overrideModelPath:requestContextData:");
}

id objc_msgSend_startTextRequestWithAssistantId_requestId_inputOrigin_utterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTextRequestWithAssistantId:requestId:inputOrigin:utterance:requestContextData:");
}

id objc_msgSend_startTextRequestWithConfiguration_requestId_inputOrigin_utterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTextRequestWithConfiguration:requestId:inputOrigin:utterance:requestContextData:");
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return _[a1 startTime];
}

id objc_msgSend_startTimerOnQueue_withTimeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTimerOnQueue:withTimeoutHandler:");
}

id objc_msgSend_startUIRequestWithText_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUIRequestWithText:completion:");
}

id objc_msgSend_startUISpeechRequest(void *a1, const char *a2, ...)
{
  return _[a1 startUISpeechRequest];
}

id objc_msgSend_startUnderstandingDictationRequestWithAssistantId_requestId_inputOrigin_dictationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingDictationRequestWithAssistantId:requestId:inputOrigin:dictationOptions:");
}

id objc_msgSend_startUnderstandingDictationSessionWithAssistantId_languageCode_understandingOnDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingDictationSessionWithAssistantId:languageCode:understandingOnDevice:");
}

id objc_msgSend_startUnderstandingOnServerRequestWithAssistantId_requestId_inputOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingOnServerRequestWithAssistantId:requestId:inputOrigin:");
}

id objc_msgSend_startUnderstandingOnServerRequestWithConfiguration_requestId_inputOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingOnServerRequestWithConfiguration:requestId:inputOrigin:");
}

id objc_msgSend_startUnderstandingOnServerTextRequestWithAssistantId_requestId_inputOrigin_utterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingOnServerTextRequestWithAssistantId:requestId:inputOrigin:utterance:requestContextData:");
}

id objc_msgSend_startUnderstandingOnServerTextRequestWithConfiguration_requestId_inputOrigin_utterance_requestContextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnderstandingOnServerTextRequestWithConfiguration:requestId:inputOrigin:utterance:requestContextData:");
}

id objc_msgSend_startUpdatingLocation(void *a1, const char *a2, ...)
{
  return _[a1 startUpdatingLocation];
}

id objc_msgSend_startUpdatingMotionActivityForReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUpdatingMotionActivityForReason:completion:");
}

id objc_msgSend_startWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithDelegate:");
}

id objc_msgSend_startWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithQueue:");
}

id objc_msgSend_startedAt(void *a1, const char *a2, ...)
{
  return _[a1 startedAt];
}

id objc_msgSend_startedDate(void *a1, const char *a2, ...)
{
  return _[a1 startedDate];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateManager(void *a1, const char *a2, ...)
{
  return _[a1 stateManager];
}

id objc_msgSend_stationary(void *a1, const char *a2, ...)
{
  return _[a1 stationary];
}

id objc_msgSend_statisticsRecordingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 statisticsRecordingEnabled];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_statusFlags(void *a1, const char *a2, ...)
{
  return _[a1 statusFlags];
}

id objc_msgSend_statusType(void *a1, const char *a2, ...)
{
  return _[a1 statusType];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopActivityUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopActivityUpdates];
}

id objc_msgSend_stopAllRequests_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAllRequests:completion:");
}

id objc_msgSend_stopAllRequestsSynchronously(void *a1, const char *a2, ...)
{
  return _[a1 stopAllRequestsSynchronously];
}

id objc_msgSend_stopAttending(void *a1, const char *a2, ...)
{
  return _[a1 stopAttending];
}

id objc_msgSend_stopAttendingWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAttendingWithReason:");
}

id objc_msgSend_stopCollectingContext(void *a1, const char *a2, ...)
{
  return _[a1 stopCollectingContext];
}

id objc_msgSend_stopContext(void *a1, const char *a2, ...)
{
  return _[a1 stopContext];
}

id objc_msgSend_stopDelayingAndSendCommands_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopDelayingAndSendCommands:completion:");
}

id objc_msgSend_stopFingerprintingForSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopFingerprintingForSuccess:");
}

id objc_msgSend_stopListenWithStateReset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopListenWithStateReset:completion:");
}

id objc_msgSend_stopListening(void *a1, const char *a2, ...)
{
  return _[a1 stopListening];
}

id objc_msgSend_stopMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 stopMonitoring];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_stopObservingBluetoothInEarDetectionStateForObserverID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingBluetoothInEarDetectionStateForObserverID:");
}

id objc_msgSend_stopObservingCallStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingCallStateWithCompletion:");
}

id objc_msgSend_stopObservingForObserverID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopObservingForObserverID:");
}

id objc_msgSend_stopPlayingAnnouncementsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPlayingAnnouncementsWithCompletionHandler:");
}

id objc_msgSend_stopRecordingHostTime(void *a1, const char *a2, ...)
{
  return _[a1 stopRecordingHostTime];
}

id objc_msgSend_stopRequest_immediately_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopRequest:immediately:");
}

id objc_msgSend_stopSessionForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSessionForReason:");
}

id objc_msgSend_stopSpeechCaptureForEvent_suppressAlert_hostTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeechCaptureForEvent:suppressAlert:hostTime:");
}

id objc_msgSend_stopSpeechCaptureIfFingerprintingOnlyWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeechCaptureIfFingerprintingOnlyWithOptions:");
}

id objc_msgSend_stopSpeechCaptureWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeechCaptureWithOptions:");
}

id objc_msgSend_stopSpeechWithOptions_forDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeechWithOptions:forDelegate:");
}

id objc_msgSend_stopUpdatingLocation(void *a1, const char *a2, ...)
{
  return _[a1 stopUpdatingLocation];
}

id objc_msgSend_stopUpdatingMotionActivityForReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopUpdatingMotionActivityForReason:completion:");
}

id objc_msgSend_storeFrontId(void *a1, const char *a2, ...)
{
  return _[a1 storeFrontId];
}

id objc_msgSend_storeGenericInstrumentation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeGenericInstrumentation:completion:");
}

id objc_msgSend_storeMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMeCard:");
}

id objc_msgSend_storedHeadGestureConfigurationForDevice(void *a1, const char *a2, ...)
{
  return _[a1 storedHeadGestureConfigurationForDevice];
}

id objc_msgSend_streamId(void *a1, const char *a2, ...)
{
  return _[a1 streamId];
}

id objc_msgSend_streamUID(void *a1, const char *a2, ...)
{
  return _[a1 streamUID];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAddingPercentEncodingWithAllowedCharacters:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return _[a1 stringByStandardizingPath];
}

id objc_msgSend_stringFromContact_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromContact:style:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToStrongObjectsMapTable];
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToWeakObjectsMapTable];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _[a1 style];
}

id objc_msgSend_subType(void *a1, const char *a2, ...)
{
  return _[a1 subType];
}

id objc_msgSend_subTypeContext(void *a1, const char *a2, ...)
{
  return _[a1 subTypeContext];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subflowCount(void *a1, const char *a2, ...)
{
  return _[a1 subflowCount];
}

id objc_msgSend_subflowSwitchCounts(void *a1, const char *a2, ...)
{
  return _[a1 subflowSwitchCounts];
}

id objc_msgSend_subject(void *a1, const char *a2, ...)
{
  return _[a1 subject];
}

id objc_msgSend_submitMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitMetric:");
}

id objc_msgSend_subscribeToAssetWithConfig_regionId_subscriberId_expiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToAssetWithConfig:regionId:subscriberId:expiration:");
}

id objc_msgSend_subscribeToLocale_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToLocale:withCompletion:");
}

id objc_msgSend_subscribeWithVoices_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeWithVoices:reply:");
}

id objc_msgSend_subscriberIdForDictationAssets(void *a1, const char *a2, ...)
{
  return _[a1 subscriberIdForDictationAssets];
}

id objc_msgSend_subscriptionID(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionID];
}

id objc_msgSend_subscriptionList(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionList];
}

id objc_msgSend_subscriptionNames(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionNames];
}

id objc_msgSend_subscriptionSetupTimer(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionSetupTimer];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_success(void *a1, const char *a2, ...)
{
  return _[a1 success];
}

id objc_msgSend_successBody(void *a1, const char *a2, ...)
{
  return _[a1 successBody];
}

id objc_msgSend_successButtonText(void *a1, const char *a2, ...)
{
  return _[a1 successButtonText];
}

id objc_msgSend_successTitle(void *a1, const char *a2, ...)
{
  return _[a1 successTitle];
}

id objc_msgSend_summary(void *a1, const char *a2, ...)
{
  return _[a1 summary];
}

id objc_msgSend_summaryDecision(void *a1, const char *a2, ...)
{
  return _[a1 summaryDecision];
}

id objc_msgSend_supplyBytes_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supplyBytes:withCompletionBlock:");
}

id objc_msgSend_supportedAnnouncementTypesForBundleId_onPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedAnnouncementTypesForBundleId:onPlatform:");
}

id objc_msgSend_supportedIntents(void *a1, const char *a2, ...)
{
  return _[a1 supportedIntents];
}

id objc_msgSend_supportedLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedLocale:");
}

id objc_msgSend_supportedRecordTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedRecordTypes];
}

id objc_msgSend_supportedVocabularyStringTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedVocabularyStringTypes];
}

id objc_msgSend_supportsAnnounceCall(void *a1, const char *a2, ...)
{
  return _[a1 supportsAnnounceCall];
}

id objc_msgSend_supportsAssistant(void *a1, const char *a2, ...)
{
  return _[a1 supportsAssistant];
}

id objc_msgSend_supportsAudioPowerUpdate(void *a1, const char *a2, ...)
{
  return _[a1 supportsAudioPowerUpdate];
}

id objc_msgSend_supportsCarPlayVehicleData(void *a1, const char *a2, ...)
{
  return _[a1 supportsCarPlayVehicleData];
}

id objc_msgSend_supportsConversationAwareness(void *a1, const char *a2, ...)
{
  return _[a1 supportsConversationAwareness];
}

id objc_msgSend_supportsDeviceToDeviceEncryption(void *a1, const char *a2, ...)
{
  return _[a1 supportsDeviceToDeviceEncryption];
}

id objc_msgSend_supportsHS(void *a1, const char *a2, ...)
{
  return _[a1 supportsHS];
}

id objc_msgSend_supportsImmediateBurstMode(void *a1, const char *a2, ...)
{
  return _[a1 supportsImmediateBurstMode];
}

id objc_msgSend_supportsInEarDetection(void *a1, const char *a2, ...)
{
  return _[a1 supportsInEarDetection];
}

id objc_msgSend_supportsInitialPayload(void *a1, const char *a2, ...)
{
  return _[a1 supportsInitialPayload];
}

id objc_msgSend_supportsJustSiri(void *a1, const char *a2, ...)
{
  return _[a1 supportsJustSiri];
}

id objc_msgSend_supportsListeningModeANC(void *a1, const char *a2, ...)
{
  return _[a1 supportsListeningModeANC];
}

id objc_msgSend_supportsListeningModeAutomatic(void *a1, const char *a2, ...)
{
  return _[a1 supportsListeningModeAutomatic];
}

id objc_msgSend_supportsListeningModeTransparency(void *a1, const char *a2, ...)
{
  return _[a1 supportsListeningModeTransparency];
}

id objc_msgSend_supportsMUX(void *a1, const char *a2, ...)
{
  return _[a1 supportsMUX];
}

id objc_msgSend_supportsPersonalVolume(void *a1, const char *a2, ...)
{
  return _[a1 supportsPersonalVolume];
}

id objc_msgSend_supportsPublishingArrivalForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsPublishingArrivalForAceObject:");
}

id objc_msgSend_supportsSpokenNotification(void *a1, const char *a2, ...)
{
  return _[a1 supportsSpokenNotification];
}

id objc_msgSend_supportsSpokenNotifications(void *a1, const char *a2, ...)
{
  return _[a1 supportsSpokenNotifications];
}

id objc_msgSend_supportsSync(void *a1, const char *a2, ...)
{
  return _[a1 supportsSync];
}

id objc_msgSend_supportsTelephony(void *a1, const char *a2, ...)
{
  return _[a1 supportsTelephony];
}

id objc_msgSend_supportsTelephonyCalls(void *a1, const char *a2, ...)
{
  return _[a1 supportsTelephonyCalls];
}

id objc_msgSend_supportsVoiceTrigger(void *a1, const char *a2, ...)
{
  return _[a1 supportsVoiceTrigger];
}

id objc_msgSend_supportsVolumeAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 supportsVolumeAdjustment];
}

id objc_msgSend_suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:");
}

id objc_msgSend_suppressLowStorageNotificationForLanguage_suppress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressLowStorageNotificationForLanguage:suppress:");
}

id objc_msgSend_suppressResponse(void *a1, const char *a2, ...)
{
  return _[a1 suppressResponse];
}

id objc_msgSend_suppressStartAlert(void *a1, const char *a2, ...)
{
  return _[a1 suppressStartAlert];
}

id objc_msgSend_suppressStopAlert(void *a1, const char *a2, ...)
{
  return _[a1 suppressStopAlert];
}

id objc_msgSend_suppressUtteranceGradingIfRequired(void *a1, const char *a2, ...)
{
  return _[a1 suppressUtteranceGradingIfRequired];
}

id objc_msgSend_suspendAutomaticEndpointingInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendAutomaticEndpointingInRange:");
}

id objc_msgSend_suspendDurationInSeconds(void *a1, const char *a2, ...)
{
  return _[a1 suspendDurationInSeconds];
}

id objc_msgSend_suspendDurationMs(void *a1, const char *a2, ...)
{
  return _[a1 suspendDurationMs];
}

id objc_msgSend_suspendEventsStaging(void *a1, const char *a2, ...)
{
  return _[a1 suspendEventsStaging];
}

id objc_msgSend_switchedCount(void *a1, const char *a2, ...)
{
  return _[a1 switchedCount];
}

id objc_msgSend_symptomsBasedNetworkQuality(void *a1, const char *a2, ...)
{
  return _[a1 symptomsBasedNetworkQuality];
}

id objc_msgSend_synRetransmits(void *a1, const char *a2, ...)
{
  return _[a1 synRetransmits];
}

id objc_msgSend_syncAnchor(void *a1, const char *a2, ...)
{
  return _[a1 syncAnchor];
}

id objc_msgSend_syncAnchorKeys_forceReset_reasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncAnchorKeys:forceReset:reasons:");
}

id objc_msgSend_syncChunkHandler(void *a1, const char *a2, ...)
{
  return _[a1 syncChunkHandler];
}

id objc_msgSend_syncCoordinatorWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncCoordinatorWithServiceName:");
}

id objc_msgSend_syncDataReset(void *a1, const char *a2, ...)
{
  return _[a1 syncDataReset];
}

id objc_msgSend_syncDidCompleteSending(void *a1, const char *a2, ...)
{
  return _[a1 syncDidCompleteSending];
}

id objc_msgSend_syncForReason_withCoalescing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncForReason:withCoalescing:");
}

id objc_msgSend_syncIdentifiersToCloud(void *a1, const char *a2, ...)
{
  return _[a1 syncIdentifiersToCloud];
}

id objc_msgSend_syncKeys(void *a1, const char *a2, ...)
{
  return _[a1 syncKeys];
}

id objc_msgSend_syncKeysForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncKeysForReason:");
}

id objc_msgSend_syncManager_chunkForSyncInfo_chunkInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:chunkForSyncInfo:chunkInfo:");
}

id objc_msgSend_syncManager_finishedSyncForKeys_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:finishedSyncForKeys:postNotification:");
}

id objc_msgSend_syncManager_finishedSyncForSyncKey_generation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:finishedSyncForSyncKey:generation:");
}

id objc_msgSend_syncManagerDidResetInProgressSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManagerDidResetInProgressSync:");
}

id objc_msgSend_syncManagerIsPausingSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManagerIsPausingSync:");
}

id objc_msgSend_syncMetadata(void *a1, const char *a2, ...)
{
  return _[a1 syncMetadata];
}

id objc_msgSend_syncMetadataCapability(void *a1, const char *a2, ...)
{
  return _[a1 syncMetadataCapability];
}

id objc_msgSend_syncReason(void *a1, const char *a2, ...)
{
  return _[a1 syncReason];
}

id objc_msgSend_syncRecordWithKey_identifier_priority_debugValue_dataValue_addedValue_appMeta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncRecordWithKey:identifier:priority:debugValue:dataValue:addedValue:appMeta:");
}

id objc_msgSend_syncRequestForUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncRequestForUUID:");
}

id objc_msgSend_syncRetryTimer(void *a1, const char *a2, ...)
{
  return _[a1 syncRetryTimer];
}

id objc_msgSend_syncSlots(void *a1, const char *a2, ...)
{
  return _[a1 syncSlots];
}

id objc_msgSend_syncVerificationPartialResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncVerificationPartialResult:");
}

id objc_msgSend_syncVerificationServerReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncVerificationServerReport:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronizeAVVCPreferencesDomain(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeAVVCPreferencesDomain];
}

id objc_msgSend_synchronizeAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeAndReturnError:");
}

id objc_msgSend_synchronizeExperimentConfigurationsIfApplicableWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeExperimentConfigurationsIfApplicableWithCompletion:");
}

id objc_msgSend_synchronizeKeychainPreferencesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeKeychainPreferencesWithCompletion:");
}

id objc_msgSend_synchronizeLogPreferencesDomain(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeLogPreferencesDomain];
}

id objc_msgSend_synchronizeSharedZones(void *a1, const char *a2, ...)
{
  return _[a1 synchronizeSharedZones];
}

id objc_msgSend_synchronizeUsingActivity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeUsingActivity:completion:");
}

id objc_msgSend_synchronizeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronizeWithCompletion:");
}

id objc_msgSend_synchronousBurstIndex(void *a1, const char *a2, ...)
{
  return _[a1 synchronousBurstIndex];
}

id objc_msgSend_systemInfo(void *a1, const char *a2, ...)
{
  return _[a1 systemInfo];
}

id objc_msgSend_systemLanguagePreferenceHasChanged(void *a1, const char *a2, ...)
{
  return _[a1 systemLanguagePreferenceHasChanged];
}

id objc_msgSend_systemStateSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 systemStateSnapshot];
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 systemTimeZone];
}

id objc_msgSend_systemUptime(void *a1, const char *a2, ...)
{
  return _[a1 systemUptime];
}

id objc_msgSend_tableDescription(void *a1, const char *a2, ...)
{
  return _[a1 tableDescription];
}

id objc_msgSend_takePowerAssertionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takePowerAssertionWithName:");
}

id objc_msgSend_targetAppId(void *a1, const char *a2, ...)
{
  return _[a1 targetAppId];
}

id objc_msgSend_targetDevice(void *a1, const char *a2, ...)
{
  return _[a1 targetDevice];
}

id objc_msgSend_targetQueue(void *a1, const char *a2, ...)
{
  return _[a1 targetQueue];
}

id objc_msgSend_targetWorkoutState(void *a1, const char *a2, ...)
{
  return _[a1 targetWorkoutState];
}

id objc_msgSend_taskFromActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "taskFromActivity:");
}

id objc_msgSend_taskHint(void *a1, const char *a2, ...)
{
  return _[a1 taskHint];
}

id objc_msgSend_taskName(void *a1, const char *a2, ...)
{
  return _[a1 taskName];
}

id objc_msgSend_taskmasterForUIApplicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "taskmasterForUIApplicationWithBundleIdentifier:");
}

id objc_msgSend_tcpInfoMetricsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tcpInfoMetricsAtIndex:");
}

id objc_msgSend_tcpInfoMetricsByInterfaceName(void *a1, const char *a2, ...)
{
  return _[a1 tcpInfoMetricsByInterfaceName];
}

id objc_msgSend_tcpInfoMetricsCount(void *a1, const char *a2, ...)
{
  return _[a1 tcpInfoMetricsCount];
}

id objc_msgSend_tearDownLocationAuthorizationPromptForBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tearDownLocationAuthorizationPromptForBundlePath:");
}

id objc_msgSend_technology(void *a1, const char *a2, ...)
{
  return _[a1 technology];
}

id objc_msgSend_technologyDescription(void *a1, const char *a2, ...)
{
  return _[a1 technologyDescription];
}

id objc_msgSend_telephonyRequestCompleted(void *a1, const char *a2, ...)
{
  return _[a1 telephonyRequestCompleted];
}

id objc_msgSend_temperatureUnit(void *a1, const char *a2, ...)
{
  return _[a1 temperatureUnit];
}

id objc_msgSend_testAndSetLoggingIsAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testAndSetLoggingIsAllowed:");
}

id objc_msgSend_testRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 testRequestOptions];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textFormatNameForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFormatNameForValue:");
}

id objc_msgSend_textToSpeechIsMuted(void *a1, const char *a2, ...)
{
  return _[a1 textToSpeechIsMuted];
}

id objc_msgSend_tfoSynDataAcked(void *a1, const char *a2, ...)
{
  return _[a1 tfoSynDataAcked];
}

id objc_msgSend_thermalMitigationLevel(void *a1, const char *a2, ...)
{
  return _[a1 thermalMitigationLevel];
}

id objc_msgSend_thermalState(void *a1, const char *a2, ...)
{
  return _[a1 thermalState];
}

id objc_msgSend_thirdPartyMusicAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thirdPartyMusicAvailable:");
}

id objc_msgSend_threadID(void *a1, const char *a2, ...)
{
  return _[a1 threadID];
}

id objc_msgSend_threadIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 threadIdentifier];
}

id objc_msgSend_threadSummary(void *a1, const char *a2, ...)
{
  return _[a1 threadSummary];
}

id objc_msgSend_threshold(void *a1, const char *a2, ...)
{
  return _[a1 threshold];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeOfRequestArrival(void *a1, const char *a2, ...)
{
  return _[a1 timeOfRequestArrival];
}

id objc_msgSend_timeToLive(void *a1, const char *a2, ...)
{
  return _[a1 timeToLive];
}

id objc_msgSend_timeUntilFirstByteRead(void *a1, const char *a2, ...)
{
  return _[a1 timeUntilFirstByteRead];
}

id objc_msgSend_timeUntilOpen(void *a1, const char *a2, ...)
{
  return _[a1 timeUntilOpen];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneWithName:");
}

id objc_msgSend_timedout(void *a1, const char *a2, ...)
{
  return _[a1 timedout];
}

id objc_msgSend_timelinePositionWithTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timelinePositionWithTime:");
}

id objc_msgSend_timelinePositionWithToday_withCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timelinePositionWithToday:withCalendar:");
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _[a1 timeout];
}

id objc_msgSend_timeoutDetected(void *a1, const char *a2, ...)
{
  return _[a1 timeoutDetected];
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_timeoutsExpiringAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeoutsExpiringAfter:");
}

id objc_msgSend_timer(void *a1, const char *a2, ...)
{
  return _[a1 timer];
}

id objc_msgSend_timerID(void *a1, const char *a2, ...)
{
  return _[a1 timerID];
}

id objc_msgSend_timerIds(void *a1, const char *a2, ...)
{
  return _[a1 timerIds];
}

id objc_msgSend_timerInfo(void *a1, const char *a2, ...)
{
  return _[a1 timerInfo];
}

id objc_msgSend_timerProxyForIntentSupport(void *a1, const char *a2, ...)
{
  return _[a1 timerProxyForIntentSupport];
}

id objc_msgSend_timerSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 timerSnapshot];
}

id objc_msgSend_timerURL(void *a1, const char *a2, ...)
{
  return _[a1 timerURL];
}

id objc_msgSend_timerURLs(void *a1, const char *a2, ...)
{
  return _[a1 timerURLs];
}

id objc_msgSend_timerValue(void *a1, const char *a2, ...)
{
  return _[a1 timerValue];
}

id objc_msgSend_timers(void *a1, const char *a2, ...)
{
  return _[a1 timers];
}

id objc_msgSend_timersByID(void *a1, const char *a2, ...)
{
  return _[a1 timersByID];
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _[a1 timestamp];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_tlsHandshakeTimeMsec(void *a1, const char *a2, ...)
{
  return _[a1 tlsHandshakeTimeMsec];
}

id objc_msgSend_tlsVersion(void *a1, const char *a2, ...)
{
  return _[a1 tlsVersion];
}

id objc_msgSend_toAdd(void *a1, const char *a2, ...)
{
  return _[a1 toAdd];
}

id objc_msgSend_toBMSiriUserAggregationId(void *a1, const char *a2, ...)
{
  return _[a1 toBMSiriUserAggregationId];
}

id objc_msgSend_toBMSiriUserSeed(void *a1, const char *a2, ...)
{
  return _[a1 toBMSiriUserSeed];
}

id objc_msgSend_toRemove(void *a1, const char *a2, ...)
{
  return _[a1 toRemove];
}

id objc_msgSend_toggle(void *a1, const char *a2, ...)
{
  return _[a1 toggle];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenResult(void *a1, const char *a2, ...)
{
  return _[a1 tokenResult];
}

id objc_msgSend_tokens(void *a1, const char *a2, ...)
{
  return _[a1 tokens];
}

id objc_msgSend_toneLibraryAlertType(void *a1, const char *a2, ...)
{
  return _[a1 toneLibraryAlertType];
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _[a1 topic];
}

id objc_msgSend_totalAudioRecorded(void *a1, const char *a2, ...)
{
  return _[a1 totalAudioRecorded];
}

id objc_msgSend_tracerAllocationsWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracerAllocationsWithQueue:");
}

id objc_msgSend_trackedChanges(void *a1, const char *a2, ...)
{
  return _[a1 trackedChanges];
}

id objc_msgSend_trailingSilenceDuration(void *a1, const char *a2, ...)
{
  return _[a1 trailingSilenceDuration];
}

id objc_msgSend_trainPersonalizedLMWithLanguage_directory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trainPersonalizedLMWithLanguage:directory:completion:");
}

id objc_msgSend_transcriptionMode(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionMode];
}

id objc_msgSend_transportOptions(void *a1, const char *a2, ...)
{
  return _[a1 transportOptions];
}

id objc_msgSend_treatmentAllocationStatusFromAllocationStatusType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treatmentAllocationStatusFromAllocationStatusType:");
}

id objc_msgSend_treatmentAllocationStatusToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treatmentAllocationStatusToString:");
}

id objc_msgSend_treatmentId(void *a1, const char *a2, ...)
{
  return _[a1 treatmentId];
}

id objc_msgSend_treatmentIdWithNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treatmentIdWithNamespaceName:");
}

id objc_msgSend_trialTreatmentMultiDeviceConsensus(void *a1, const char *a2, ...)
{
  return _[a1 trialTreatmentMultiDeviceConsensus];
}

id objc_msgSend_trigger(void *a1, const char *a2, ...)
{
  return _[a1 trigger];
}

id objc_msgSend_triggerMultiUserMetricsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerMultiUserMetricsWithCompletion:");
}

id objc_msgSend_triggeredTwoShotBorealis(void *a1, const char *a2, ...)
{
  return _[a1 triggeredTwoShotBorealis];
}

id objc_msgSend_trimRecordedAudioWithIdentifier_offset_duration_outputFileType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:");
}

id objc_msgSend_ttsPronunciations(void *a1, const char *a2, ...)
{
  return _[a1 ttsPronunciations];
}

id objc_msgSend_ttsVoice(void *a1, const char *a2, ...)
{
  return _[a1 ttsVoice];
}

id objc_msgSend_turnContext(void *a1, const char *a2, ...)
{
  return _[a1 turnContext];
}

id objc_msgSend_turnID(void *a1, const char *a2, ...)
{
  return _[a1 turnID];
}

id objc_msgSend_turnId(void *a1, const char *a2, ...)
{
  return _[a1 turnId];
}

id objc_msgSend_turnIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 turnIdentifier];
}

id objc_msgSend_tuscanyConnectionDelay(void *a1, const char *a2, ...)
{
  return _[a1 tuscanyConnectionDelay];
}

id objc_msgSend_tvRestriction(void *a1, const char *a2, ...)
{
  return _[a1 tvRestriction];
}

id objc_msgSend_twentyFourHourTimeDisplay(void *a1, const char *a2, ...)
{
  return _[a1 twentyFourHourTimeDisplay];
}

id objc_msgSend_txBytes(void *a1, const char *a2, ...)
{
  return _[a1 txBytes];
}

id objc_msgSend_txPackets(void *a1, const char *a2, ...)
{
  return _[a1 txPackets];
}

id objc_msgSend_txRetransmitBytes(void *a1, const char *a2, ...)
{
  return _[a1 txRetransmitBytes];
}

id objc_msgSend_txUnacked(void *a1, const char *a2, ...)
{
  return _[a1 txUnacked];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_unacknowledgedPingCount(void *a1, const char *a2, ...)
{
  return _[a1 unacknowledgedPingCount];
}

id objc_msgSend_unarchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchive:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unauthenticatedRequestsAllowed(void *a1, const char *a2, ...)
{
  return _[a1 unauthenticatedRequestsAllowed];
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactWithIdentifier:keysToFetch:error:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_uniqueID(void *a1, const char *a2, ...)
{
  return _[a1 uniqueID];
}

id objc_msgSend_uniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIDOverride];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_uniqueIdentifierForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifierForPeer:");
}

id objc_msgSend_uniqueTextColumnWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueTextColumnWithName:");
}

id objc_msgSend_unknown(void *a1, const char *a2, ...)
{
  return _[a1 unknown];
}

id objc_msgSend_unordered(void *a1, const char *a2, ...)
{
  return _[a1 unordered];
}

id objc_msgSend_unredactedAnchor(void *a1, const char *a2, ...)
{
  return _[a1 unredactedAnchor];
}

id objc_msgSend_unregisterChangeHistory(void *a1, const char *a2, ...)
{
  return _[a1 unregisterChangeHistory];
}

id objc_msgSend_unregisterChangeHistoryClientIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterChangeHistoryClientIdentifier:error:");
}

id objc_msgSend_unregisterClient(void *a1, const char *a2, ...)
{
  return _[a1 unregisterClient];
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterObserver:");
}

id objc_msgSend_unregisterSnapshotUpdater(void *a1, const char *a2, ...)
{
  return _[a1 unregisterSnapshotUpdater];
}

id objc_msgSend_unscheduleDestroyJob(void *a1, const char *a2, ...)
{
  return _[a1 unscheduleDestroyJob];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongValue];
}

id objc_msgSend_unsubscribeFromAssetsWithAssetType_exceptLanguages_subscriberId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsubscribeFromAssetsWithAssetType:exceptLanguages:subscriberId:");
}

id objc_msgSend_unsubscribeFromLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsubscribeFromLocale:");
}

id objc_msgSend_uodStatusSupportedFull_languageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uodStatusSupportedFull:languageCode:");
}

id objc_msgSend_updateASRFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateASRFeatures:");
}

id objc_msgSend_updateAccessToRecordedAudioForVoiceIdentificationTraining_forResultCandidateId_sharedUserId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:sharedUserId:");
}

id objc_msgSend_updateAccessorySettingWithHomeIdentifier_accessoryIdentifier_keyPath_settingValue_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAccessorySettingWithHomeIdentifier:accessoryIdentifier:keyPath:settingValue:completionHandler:");
}

id objc_msgSend_updateAlarms_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAlarms:completionHandler:");
}

id objc_msgSend_updateAnnounceNotificationsOnHearingAidSupportedStatus(void *a1, const char *a2, ...)
{
  return _[a1 updateAnnounceNotificationsOnHearingAidSupportedStatus];
}

id objc_msgSend_updateAssistantIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 updateAssistantIdentifiers];
}

id objc_msgSend_updateAttendingThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAttendingThreshold:");
}

id objc_msgSend_updateAudioRouteAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAudioRouteAvailability:");
}

id objc_msgSend_updateAuthorizationStyleWithUserSelection_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAuthorizationStyleWithUserSelection:completion:");
}

id objc_msgSend_updateAuthorizationStyleWithUserSelection_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAuthorizationStyleWithUserSelection:timeout:completion:");
}

id objc_msgSend_updateAvailabilityWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAvailabilityWithCompletion:");
}

id objc_msgSend_updateBackgroundContextIfNowPlayingInfoChanged(void *a1, const char *a2, ...)
{
  return _[a1 updateBackgroundContextIfNowPlayingInfoChanged];
}

id objc_msgSend_updateConnectionDidDropAggdMetrics(void *a1, const char *a2, ...)
{
  return _[a1 updateConnectionDidDropAggdMetrics];
}

id objc_msgSend_updateConnectionDidFailAggdMetrics(void *a1, const char *a2, ...)
{
  return _[a1 updateConnectionDidFailAggdMetrics];
}

id objc_msgSend_updateConnectionMetrics_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConnectionMetrics:completion:");
}

id objc_msgSend_updateConnectionSetConnectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConnectionSetConnectionType:");
}

id objc_msgSend_updateContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContext:");
}

id objc_msgSend_updateCurrentUserRMVSettingForHome_enabled_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCurrentUserRMVSettingForHome:enabled:completion:");
}

id objc_msgSend_updateDateToCurrent(void *a1, const char *a2, ...)
{
  return _[a1 updateDateToCurrent];
}

id objc_msgSend_updateDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDevice:");
}

id objc_msgSend_updateEndpointHintForRC_forceAccept_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateEndpointHintForRC:forceAccept:completion:");
}

id objc_msgSend_updateForCallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateForCallState:");
}

id objc_msgSend_updateInfoUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInfoUsingBlock:");
}

id objc_msgSend_updateLatencyDiagnosticConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLatencyDiagnosticConfiguration:completion:");
}

id objc_msgSend_updateLocalDeviceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocalDeviceContext:");
}

id objc_msgSend_updateLocalDeviceIsContextCollector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocalDeviceIsContextCollector:");
}

id objc_msgSend_updateLocationForCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationForCommand:completion:");
}

id objc_msgSend_updateLocationSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 updateLocationSnapshot];
}

id objc_msgSend_updateLocationSnapshotWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationSnapshotWithCompletion:");
}

id objc_msgSend_updateMeters(void *a1, const char *a2, ...)
{
  return _[a1 updateMeters];
}

id objc_msgSend_updateModesConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateModesConfiguration:");
}

id objc_msgSend_updateMultiUserWithSharedUserId_companionInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMultiUserWithSharedUserId:companionInfo:completion:");
}

id objc_msgSend_updateOptionsAfterRecognitionForElapsedTime_isFinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOptionsAfterRecognitionForElapsedTime:isFinal:");
}

id objc_msgSend_updateProvidersForCurrentCountry(void *a1, const char *a2, ...)
{
  return _[a1 updateProvidersForCurrentCountry];
}

id objc_msgSend_updateRapportLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRapportLink:");
}

id objc_msgSend_updateSelectedResultCandidateId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectedResultCandidateId:");
}

id objc_msgSend_updateSharedDataForCompanionDeviceWithRemoteFetchAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedDataForCompanionDeviceWithRemoteFetchAllowed:");
}

id objc_msgSend_updateSharedDataFromCloudPeers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedDataFromCloudPeers:completion:");
}

id objc_msgSend_updateSharedDataFromCompanion(void *a1, const char *a2, ...)
{
  return _[a1 updateSharedDataFromCompanion];
}

id objc_msgSend_updateSharedDataFromPeerUseCache_allowCloudMessaging_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedDataFromPeerUseCache:allowCloudMessaging:completion:");
}

id objc_msgSend_updateSharedDataFromPeerUseCache_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedDataFromPeerUseCache:completion:");
}

id objc_msgSend_updateSharedDataWithCloudData_fromPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedDataWithCloudData:fromPeer:");
}

id objc_msgSend_updateSharedInfoWithIdentifier_productType_buildVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedInfoWithIdentifier:productType:buildVersion:");
}

id objc_msgSend_updateSiriInfoWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSiriInfoWithObject:forKey:");
}

id objc_msgSend_updateSiriOutputVolume_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSiriOutputVolume:completion:");
}

id objc_msgSend_updateSiriPhraseOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSiriPhraseOptions:completion:");
}

id objc_msgSend_updateSpeechOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSpeechOptions:");
}

id objc_msgSend_updateSpeechOptions_forDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSpeechOptions:forDelegate:");
}

id objc_msgSend_updateSpeechSynthesisRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSpeechSynthesisRecord:");
}

id objc_msgSend_updateStartLocalRequest_withNewAnnouncePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStartLocalRequest:withNewAnnouncePayload:");
}

id objc_msgSend_updateStartSpeechId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStartSpeechId:");
}

id objc_msgSend_updateSyncTokenForAssistantId_aceHost_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSyncTokenForAssistantId:aceHost:token:");
}

id objc_msgSend_updateTableWithName_columnName_columnValue_criterion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTableWithName:columnName:columnValue:criterion:error:");
}

id objc_msgSend_updateTableWithName_valueMap_criterion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTableWithName:valueMap:criterion:error:");
}

id objc_msgSend_updateTemporaryAuthorizationForAccurateLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTemporaryAuthorizationForAccurateLocation:completion:");
}

id objc_msgSend_updateTemporaryAuthorizationForAccurateLocation_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTemporaryAuthorizationForAccurateLocation:timeout:completion:");
}

id objc_msgSend_updateTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTimer:");
}

id objc_msgSend_updateTimerWithID_changes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTimerWithID:changes:completion:");
}

id objc_msgSend_updateUsingSet_add_remove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUsingSet:add:remove:");
}

id objc_msgSend_updateValue_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateValue:completionHandler:");
}

id objc_msgSend_updateVoiceCommandContextWithAssistantId_requestId_prefixText_postfixText_selectedText_disambiguationActive_cursorInVisibleText_favorCommandSuppression_abortCommandSuppression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVoiceCommandContextWithAssistantId:requestId:prefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:");
}

id objc_msgSend_updateVoiceCommandContextWithAssistantId_requestId_prefixText_postfixText_selectedText_disambiguationActive_cursorInVisibleText_favorCommandSuppression_abortCommandSuppression_undoEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVoiceCommandContextWithAssistantId:requestId:prefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:undoEvent:");
}

id objc_msgSend_updateVoiceCommandContextWithPrefixText_postfixText_selectedText_disambiguationActive_cursorInVisibleText_favorCommandSuppression_abortCommandSuppression_undoEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVoiceCommandContextWithPrefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:undoEvent:");
}

id objc_msgSend_updateVoiceIdScoreToUser_score_reset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVoiceIdScoreToUser:score:reset:completion:");
}

id objc_msgSend_updateVoiceProfiles(void *a1, const char *a2, ...)
{
  return _[a1 updateVoiceProfiles];
}

id objc_msgSend_updateVoiceTriggerPhrase_currentAccessoryInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVoiceTriggerPhrase:currentAccessoryInfo:");
}

id objc_msgSend_updateWithTargetVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithTargetVoice:");
}

id objc_msgSend_updatedContextWithSerializedContextByKey_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedContextWithSerializedContextByKey:metadata:");
}

id objc_msgSend_updatedHomeInfoForRootInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedHomeInfoForRootInfo:");
}

id objc_msgSend_upgradeAccuracyIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgradeAccuracyIfNeeded:");
}

id objc_msgSend_uploadUserVoiceProfileForSiriProfileId_withUploadTrigger_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadUserVoiceProfileForSiriProfileId:withUploadTrigger:completion:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_uri(void *a1, const char *a2, ...)
{
  return _[a1 uri];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_useAtypicalSpeechModel(void *a1, const char *a2, ...)
{
  return _[a1 useAtypicalSpeechModel];
}

id objc_msgSend_useCaseId(void *a1, const char *a2, ...)
{
  return _[a1 useCaseId];
}

id objc_msgSend_useConfirmationPrompts(void *a1, const char *a2, ...)
{
  return _[a1 useConfirmationPrompts];
}

id objc_msgSend_useDeviceAuthenticationVersion(void *a1, const char *a2, ...)
{
  return _[a1 useDeviceAuthenticationVersion];
}

id objc_msgSend_useDeviceSpeakerForTTS(void *a1, const char *a2, ...)
{
  return _[a1 useDeviceSpeakerForTTS];
}

id objc_msgSend_usePrelisteningMode(void *a1, const char *a2, ...)
{
  return _[a1 usePrelisteningMode];
}

id objc_msgSend_useStreamingDictation(void *a1, const char *a2, ...)
{
  return _[a1 useStreamingDictation];
}

id objc_msgSend_usefulnessScore(void *a1, const char *a2, ...)
{
  return _[a1 usefulnessScore];
}

id objc_msgSend_userAgent(void *a1, const char *a2, ...)
{
  return _[a1 userAgent];
}

id objc_msgSend_userAggregationId(void *a1, const char *a2, ...)
{
  return _[a1 userAggregationId];
}

id objc_msgSend_userAssignedDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 userAssignedDeviceName];
}

id objc_msgSend_userAssignedName(void *a1, const char *a2, ...)
{
  return _[a1 userAssignedName];
}

id objc_msgSend_userCloudShareManager(void *a1, const char *a2, ...)
{
  return _[a1 userCloudShareManager];
}

id objc_msgSend_userFacingReasonDescription(void *a1, const char *a2, ...)
{
  return _[a1 userFacingReasonDescription];
}

id objc_msgSend_userFacingReasonTitle(void *a1, const char *a2, ...)
{
  return _[a1 userFacingReasonTitle];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userName(void *a1, const char *a2, ...)
{
  return _[a1 userName];
}

id objc_msgSend_userNotificationRequestForRemoteRequest(void *a1, const char *a2, ...)
{
  return _[a1 userNotificationRequestForRemoteRequest];
}

id objc_msgSend_userProperties(void *a1, const char *a2, ...)
{
  return _[a1 userProperties];
}

id objc_msgSend_userSettingsForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userSettingsForHome:");
}

id objc_msgSend_userToken(void *a1, const char *a2, ...)
{
  return _[a1 userToken];
}

id objc_msgSend_userTypedInSiri(void *a1, const char *a2, ...)
{
  return _[a1 userTypedInSiri];
}

id objc_msgSend_users(void *a1, const char *a2, ...)
{
  return _[a1 users];
}

id objc_msgSend_usesManagedStorageForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesManagedStorageForDomain:");
}

id objc_msgSend_usesOnDemandConnection(void *a1, const char *a2, ...)
{
  return _[a1 usesOnDemandConnection];
}

id objc_msgSend_usingOnDemandConnection(void *a1, const char *a2, ...)
{
  return _[a1 usingOnDemandConnection];
}

id objc_msgSend_utsRequiredRequestData(void *a1, const char *a2, ...)
{
  return _[a1 utsRequiredRequestData];
}

id objc_msgSend_utsRequiredRequestKeyValuePairs(void *a1, const char *a2, ...)
{
  return _[a1 utsRequiredRequestKeyValuePairs];
}

id objc_msgSend_utterance(void *a1, const char *a2, ...)
{
  return _[a1 utterance];
}

id objc_msgSend_utteranceDetectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 utteranceDetectionEnabled];
}

id objc_msgSend_utteranceSource(void *a1, const char *a2, ...)
{
  return _[a1 utteranceSource];
}

id objc_msgSend_utterances(void *a1, const char *a2, ...)
{
  return _[a1 utterances];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_validateAndReturnScores_classifiedUser_donatedScores_unknownUserSharedId_totalUsers_ghostVoiceProfileDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAndReturnScores:classifiedUser:donatedScores:unknownUserSharedId:totalUsers:ghostVoiceProfileDetected:");
}

id objc_msgSend_validationData(void *a1, const char *a2, ...)
{
  return _[a1 validationData];
}

id objc_msgSend_validationExpiration(void *a1, const char *a2, ...)
{
  return _[a1 validationExpiration];
}

id objc_msgSend_validationVersion(void *a1, const char *a2, ...)
{
  return _[a1 validationVersion];
}

id objc_msgSend_validity(void *a1, const char *a2, ...)
{
  return _[a1 validity];
}

id objc_msgSend_validityDays(void *a1, const char *a2, ...)
{
  return _[a1 validityDays];
}

id objc_msgSend_validityDuration(void *a1, const char *a2, ...)
{
  return _[a1 validityDuration];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueAfterUpdate(void *a1, const char *a2, ...)
{
  return _[a1 valueAfterUpdate];
}

id objc_msgSend_valueBeforeUpdate(void *a1, const char *a2, ...)
{
  return _[a1 valueBeforeUpdate];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPointer:");
}

id objc_msgSend_vendorID(void *a1, const char *a2, ...)
{
  return _[a1 vendorID];
}

id objc_msgSend_vendorId(void *a1, const char *a2, ...)
{
  return _[a1 vendorId];
}

id objc_msgSend_verb(void *a1, const char *a2, ...)
{
  return _[a1 verb];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_verticalAccuracy(void *a1, const char *a2, ...)
{
  return _[a1 verticalAccuracy];
}

id objc_msgSend_views(void *a1, const char *a2, ...)
{
  return _[a1 views];
}

id objc_msgSend_voiceEnumForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceEnumForName:");
}

id objc_msgSend_voiceIDAllowedByUser(void *a1, const char *a2, ...)
{
  return _[a1 voiceIDAllowedByUser];
}

id objc_msgSend_voiceInfoForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceInfoForLanguageCode:");
}

id objc_msgSend_voiceName(void *a1, const char *a2, ...)
{
  return _[a1 voiceName];
}

id objc_msgSend_voiceNamesForOutputLanguageCode_gender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceNamesForOutputLanguageCode:gender:");
}

id objc_msgSend_voiceProfilesOutOfSync(void *a1, const char *a2, ...)
{
  return _[a1 voiceProfilesOutOfSync];
}

id objc_msgSend_voiceSearchHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 voiceSearchHeaderFields];
}

id objc_msgSend_voiceSearchQueryParameters(void *a1, const char *a2, ...)
{
  return _[a1 voiceSearchQueryParameters];
}

id objc_msgSend_voiceSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 voiceSearchResults];
}

id objc_msgSend_voiceSearchTypeOptions(void *a1, const char *a2, ...)
{
  return _[a1 voiceSearchTypeOptions];
}

id objc_msgSend_voiceSimilarToVoice_inSiriSessionLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceSimilarToVoice:inSiriSessionLanguage:");
}

id objc_msgSend_voiceTriggerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerEnabled];
}

id objc_msgSend_voiceTriggerEnabledWithDeviceType_endpointId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceTriggerEnabledWithDeviceType:endpointId:");
}

id objc_msgSend_voiceTriggerEventInfo(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerEventInfo];
}

id objc_msgSend_voiceTriggerInCallAvailabilityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceTriggerInCallAvailabilityChanged:");
}

id objc_msgSend_voiceTriggerNeedsDataSync(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerNeedsDataSync];
}

id objc_msgSend_voicemailWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voicemailWithIdentifier:");
}

id objc_msgSend_volumeCategoryForAudioCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeCategoryForAudioCategory:");
}

id objc_msgSend_volumeServiceProvider(void *a1, const char *a2, ...)
{
  return _[a1 volumeServiceProvider];
}

id objc_msgSend_volumeTracker(void *a1, const char *a2, ...)
{
  return _[a1 volumeTracker];
}

id objc_msgSend_volumeValue(void *a1, const char *a2, ...)
{
  return _[a1 volumeValue];
}

id objc_msgSend_vtSatScore(void *a1, const char *a2, ...)
{
  return _[a1 vtSatScore];
}

id objc_msgSend_waitForMyriadDecisionForReason_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForMyriadDecisionForReason:withCompletion:");
}

id objc_msgSend_waitForSessionInitialization(void *a1, const char *a2, ...)
{
  return _[a1 waitForSessionInitialization];
}

id objc_msgSend_waitUntilSiriOutputVolumeUpdatesAfterTimestamp_withTimeout_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:");
}

id objc_msgSend_waitingOnMessageIDs(void *a1, const char *a2, ...)
{
  return _[a1 waitingOnMessageIDs];
}

id objc_msgSend_wakeUpNearbyDevices(void *a1, const char *a2, ...)
{
  return _[a1 wakeUpNearbyDevices];
}

id objc_msgSend_walking(void *a1, const char *a2, ...)
{
  return _[a1 walking];
}

id objc_msgSend_wallClockTimeForTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wallClockTimeForTimestamp:");
}

id objc_msgSend_wantsRecordedAudioBufferLogs(void *a1, const char *a2, ...)
{
  return _[a1 wantsRecordedAudioBufferLogs];
}

id objc_msgSend_warmUp(void *a1, const char *a2, ...)
{
  return _[a1 warmUp];
}

id objc_msgSend_wasInitializedFromDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 wasInitializedFromDictionaryRepresentation];
}

id objc_msgSend_wasRemovedFromFeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasRemovedFromFeed:");
}

id objc_msgSend_watchExistsForAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchExistsForAssistantId:");
}

id objc_msgSend_watchIsNearbyForAssistantId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchIsNearbyForAssistantId:");
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_wifiChannelInfo(void *a1, const char *a2, ...)
{
  return _[a1 wifiChannelInfo];
}

id objc_msgSend_wifiHistorical(void *a1, const char *a2, ...)
{
  return _[a1 wifiHistorical];
}

id objc_msgSend_wifiInstant(void *a1, const char *a2, ...)
{
  return _[a1 wifiInstant];
}

id objc_msgSend_wifiPhyMode(void *a1, const char *a2, ...)
{
  return _[a1 wifiPhyMode];
}

id objc_msgSend_wifiPreference(void *a1, const char *a2, ...)
{
  return _[a1 wifiPreference];
}

id objc_msgSend_willProcessAppLaunchWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willProcessAppLaunchWithBundleIdentifier:");
}

id objc_msgSend_willProcessStartPlayback_intent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willProcessStartPlayback:intent:completion:");
}

id objc_msgSend_willSetApplicationContextWithRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willSetApplicationContextWithRefId:");
}

id objc_msgSend_willStopRecordingWithSignpostID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStopRecordingWithSignpostID:");
}

id objc_msgSend_willUseProxyCommunicationWithLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willUseProxyCommunicationWithLocalDevice:");
}

id objc_msgSend_wirelessSplitterSession(void *a1, const char *a2, ...)
{
  return _[a1 wirelessSplitterSession];
}

id objc_msgSend_withdrawNotificationRequestWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withdrawNotificationRequestWithIdentifier:");
}

id objc_msgSend_withdrawalAnnouncementRequestForNotification_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withdrawalAnnouncementRequestForNotification:completion:");
}

id objc_msgSend_workItem(void *a1, const char *a2, ...)
{
  return _[a1 workItem];
}

id objc_msgSend_workoutCategory(void *a1, const char *a2, ...)
{
  return _[a1 workoutCategory];
}

id objc_msgSend_workoutGoal(void *a1, const char *a2, ...)
{
  return _[a1 workoutGoal];
}

id objc_msgSend_workoutGoalUnitType(void *a1, const char *a2, ...)
{
  return _[a1 workoutGoalUnitType];
}

id objc_msgSend_workoutLocationType(void *a1, const char *a2, ...)
{
  return _[a1 workoutLocationType];
}

id objc_msgSend_workoutReminder(void *a1, const char *a2, ...)
{
  return _[a1 workoutReminder];
}

id objc_msgSend_workoutStateValue(void *a1, const char *a2, ...)
{
  return _[a1 workoutStateValue];
}

id objc_msgSend_workoutType(void *a1, const char *a2, ...)
{
  return _[a1 workoutType];
}

id objc_msgSend_workoutUserMode(void *a1, const char *a2, ...)
{
  return _[a1 workoutUserMode];
}

id objc_msgSend_wrapAsAnyEvent(void *a1, const char *a2, ...)
{
  return _[a1 wrapAsAnyEvent];
}

id objc_msgSend_writeData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:");
}

id objc_msgSend_writeData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:completion:");
}

id objc_msgSend_writeData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:error:");
}

id objc_msgSend_writeLatestVocabularyItems_forIntentSlot_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeLatestVocabularyItems:forIntentSlot:completion:");
}

id objc_msgSend_writeLogViewerIdentifierDefaults(void *a1, const char *a2, ...)
{
  return _[a1 writeLogViewerIdentifierDefaults];
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:options:error:");
}

id objc_msgSend_writeToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:error:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_wwanPreferred(void *a1, const char *a2, ...)
{
  return _[a1 wwanPreferred];
}

id objc_msgSend_xpcCriteria(void *a1, const char *a2, ...)
{
  return _[a1 xpcCriteria];
}

id objc_msgSend_xpcInterface(void *a1, const char *a2, ...)
{
  return _[a1 xpcInterface];
}

id objc_msgSend_yardUnit(void *a1, const char *a2, ...)
{
  return _[a1 yardUnit];
}

id objc_msgSend_zone(void *a1, const char *a2, ...)
{
  return _[a1 zone];
}

id objc_msgSend_zoneID(void *a1, const char *a2, ...)
{
  return _[a1 zoneID];
}

id objc_msgSend_zoneName(void *a1, const char *a2, ...)
{
  return _[a1 zoneName];
}

id objc_msgSend_zoneSetupTimer(void *a1, const char *a2, ...)
{
  return _[a1 zoneSetupTimer];
}